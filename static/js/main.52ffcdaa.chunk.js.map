{"version":3,"sources":["TrancheWelcome/TrancheWelcome.module.scss","PageNotFound/PageNotFound.module.scss","Breadcrumb/Breadcrumb.js","utilities/components/ShortHash.js","LoadingSpinner/LoadingSpinner.js","ButtonLoader/ButtonLoader.js","RoundIconButton/RoundIconButton.js","SmartNumber/SmartNumber.js","CardIconButton/CardIconButton.js","CustomTooltip/CustomTooltip.js","AllocationChart/AllocationChart.js","CustomTooltip/CustomTooltipRow.js","Faquestion/Faquestion.js","ActiveCoverages/ActiveCoverages.js","PortfolioEquity/PortfolioEquity.js","GenericSelector/GenericSelector.js","TxProgressBar/TxProgressBar.js","theme.js","IconBox/IconBox.js","AssetSelector/AssetSelector.js","utilities/components/ModalCard.module.scss","TwitterShareButton/TwitterShareButton.module.scss","TableCellHeader/TableCellHeader.module.scss","TransactionListFilters/TransactionListFilters.module.scss","Web3ConnectionButtons/Web3ConnectionButtons.module.scss","GenericChart/GenericChart.js","utilities/components/Header.module.scss","ExecuteTransaction/ExecuteTransaction.js","Tos/Tos.module.scss","TransactionField/TransactionField.js","utilities/IdleGovToken.js","utilities/FunctionsUtil.js","utilities/components/BuyModal.js","DashboardCard/DashboardCard.module.scss","DashboardCard/DashboardCard.js","TableRow/TableRow.js","TableHeader/TableHeader.js","FastBalanceSelector/FastBalanceSelector.js","CustomList/CustomList.js","abis/compound/cDAI.js","abis/tokens/ERC20.js","configs/availableTokens.js","Staking/Staking.js","GenericFaqs/GenericFaqs.js","SendTxWithBalance/SendTxWithBalance.js","utilities/components/LimitReachedModal.js","TrancheDetails/TrancheDetails.js","TrancheHarvests/TrancheHarvests.js","TrancheDepositRedeem/TrancheDepositRedeem.js","PortfolioEquityTranches/PortfolioEquityTranches.js","FundsOverviewTranche/FundsOverviewTranche.js","StakingRewardsTranche/StakingRewardsTranche.js","TranchePage/TranchePage.js","TranchesList/TranchesList.js","TrancheBox/TrancheBox.js","TrancheFlash/TrancheFlash.js","TrancheWelcome/TrancheWelcome.js","GenericPieChart/GenericPieChart.js","TotalBalanceCounter/TotalBalanceCounter.js","TotalEarningsCounter/TotalEarningsCounter.js","Tranches/Tranches.js","TokenSwap/TokenSwap.js","LpStaking/LpStaking.js","StatsCardSmall/StatsCardSmall.js","IdleStaking/IdleStaking.js","NexusMutual/NexusMutual.js","TokenWrapper/TokenWrapper.js","PortfolioDonut/PortfolioDonut.js","EarningsEstimation/EarningsEstimation.js","DashboardIconButton/DashboardIconButton.js","PolygonBridgeTransactions/PolygonBridgeTransactions.js","StrategyPage/StrategyPage.js","BatchDeposit/BatchDeposit.js","PolygonBridge/PolygonBridge.js","CoverProtocol/CoverProtocol.js","TokenMigration/TokenMigration.js","BatchMigration/BatchMigration.js","DeployB2BVesting/DeployB2BVesting.js","configs/globalConfigs.js","../node_modules/@maticnetwork/meta/network sync /^/.//.*//index/.json$","../node_modules/@maticnetwork/meta/network sync /^/.//.*/.json$","ConnectBox/ConnectBox.js","TransactionListFilters/TransactionListFilters.js","TransactionsList/TransactionsList.js","Migrate/Migrate.js","ChartCustomTooltipRow/ChartCustomTooltipRow.js","AssetsList/AssetsList.js","Tos/Tos.js","theme-dark.js","App/connectors/TorusConnector.js","App/connectors/AuthereumConnector.js","App/connectors/GnosisSafeConnector.js","App/connectors/WalletLinkConnector.js","App/connectors/WalletConnectConnector.js","App/connectors.js","utilities/components/WrongNetworkBanner.js","utilities/NetworkUtil.js","utilities/components/NoWeb3BrowserModal.js","utilities/components/NoWalletModal.js","utilities/GeneralUtil.js","utilities/components/WrongNetworkModal.js","utilities/components/TransactionFeeModal.js","Web3ConnectionButtons/Web3ConnectionButtons.js","utilities/components/ConnectionModal.js","utilities/components/ConnectionPendingModal.js","utilities/components/UserRejectedConnectionModal.js","utilities/components/LowFundsModal.js","utilities/ConnectionModalsUtil.js","utilities/components/ConnectionErrorModal.js","utilities/components/TransactionErrorModal.js","utilities/RimbleWeb3.js","utilities/components/Header.js","ScrollToTop/ScrollToTop.js","PageNotFound/PageNotFound.js","utilities/components/NetworkOverview.js","Web3Debugger/Web3Debugger.js","configs/availableTranches.js","utilities/TransactionToastMessages.js","utilities/TransactionToastUtil.js","App/App.js","serviceWorker.js","index.js","Footer/Footer.module.scss","utilities/components/ModalCard.js","VariationNumber/VariationNumber.js","GenericSelector/GenericSelector.module.scss","LoadingSpinner/LoadingSpinner.module.scss","colors.js","FlexLoader/FlexLoader.js","Footer/Footer.js","TableCellHeader/TableCellHeader.js","ChartCustomTooltip/ChartCustomTooltip.js","TwitterShareButton/TwitterShareButton.js","utilities/components/ShareModal.js","CustomField/CustomField.js","Title/Title.js","ImageButton/ImageButton.js","RoundButton/RoundButton.js","ExtLink/ExtLink.js","TrancheField/TrancheField.js","AssetField/AssetField.js"],"names":["module","exports","trancheFlash","mobile","headerContainer","headerBgFiller","bgContainer","list","textContainer","Breadcrumb","_this","this","showPathMobile","props","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","rimble_ui__WEBPACK_IMPORTED_MODULE_6__","width","id","alignItems","handleClick","_RoundIconButton_RoundIconButton__WEBPACK_IMPORTED_MODULE_7__","buttonProps","border","height","iconSize","iconName","text","length","ml","fontSize","fontWeight","color","hoverColor","onClick","isMobile","path","map","index","link","pathLink","Component","Link","Text","pl","style","maxWidth","overflow","whiteSpace","textOverflow","borderLeft","concat","theme","colors","divider","key","e","goToSection","ShortHash","state","functionsUtil","componentUnmounted","setProps","FunctionsUtil","loadUtils","loadData","prevProps","prevState","hash","newState","callback","setState","resolveAddress","shortenHash","getENSName","ensName","setStateSafe","loader","react__WEBPACK_IMPORTED_MODULE_7___default","rimble_ui__WEBPACK_IMPORTED_MODULE_8__","size","Object","assign","display","LoadingSpinner","react_default","index_es","justifyContent","className","styles","mx","ButtonLoader","flexDirection","isLoading","src_LoadingSpinner_LoadingSpinner","buttonText","RoundIconButton","p","borderRadius","mainColor","disabled","minWidth","react__WEBPACK_IMPORTED_MODULE_6___default","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_7__","rimble_ui__WEBPACK_IMPORTED_MODULE_5__","name","SmartNumber","_this2","formattedNumber","number","isNaN","type","formatMoney","precision","abbreviateNumber","decimals","maxPrecision","minPrecision","flexProps","keys","forEach","showUnit","unit","unitPos","react__WEBPACK_IMPORTED_MODULE_8___default","rimble_ui__WEBPACK_IMPORTED_MODULE_7__","unitProps","CardIconButton","cardProps","py","px","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_7__","isInteractive","isActive","isDisabled","backgroundColor","margin","my","align","image","src","imageProps","useIconOnly","icon","iconColor","iconProps","mr","isSidebar","iconBgColor","transactions","actionBg","redeem","textProps","CustomTooltip","point","left","data","itemPos","xFormatted","mb","textAlign","children","AllocationChart","chartData","chartProps","selectedSlice","totalAllocation","protocolsAllocations","protocolsAllocationsPerc","selectedToken","getTokenAllocation","tokenConfig","padAngle","animate","borderWidth","cornerRadius","motionDamping","innerRadius","motionStiffness","d","onMouseEnter","_this3","onMouseLeave","tooltipFormat","v","sliceLabel","value","radialLabel","tooltip","container","inline","background","cardBg","labels","fontFamily","fonts","sansSerif","legends","slicesLabelsSkipAngle","radialLabelsSkipAngle","enableRadialLabels","radialLabelsTextXOffset","slicesLabelsTextColor","radialLabelsTextColor","radialLabelsLinkStrokeWidth","radialLabelsLinkDiagonalLength","radialLabelsLinkHorizontalLength","enableSlicesLabels","radialLabelsLinkColor","from","borderColor","modifiers","top","right","bottom","protocols","protocolInfo","i","protocolName","protocolAddr","address","toLowerCase","protocolAllocationPercParsed","parseFloat","times","toFixed","push","globalConfigs","stats","hsl","join","label","capitalize","protocolIcon","rimble_ui__WEBPACK_IMPORTED_MODULE_9__","position","zIndex","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_10__","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_13__","Pie","showLoader","CustomTooltipRow","pr","flexBasis","flex","textTransform","dangerouslySetInnerHTML","__html","Faquestion","isShowingAnswer","preventDefault","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","isOpened","boxShadow","cursor","h4","question","answer","Base","loaded","activeCoverages","loadCoverages","account","getActiveCoverages","coverages","c","availableTokens","includes","collateral","statusColors","status","statusIcon","statusColor","completed","failed","pending","statusIconProps","portfolioCoverage","react__WEBPACK_IMPORTED_MODULE_9___default","title","_Title_Title__WEBPACK_IMPORTED_MODULE_8__","titleProps","_CustomList_CustomList__WEBPACK_IMPORTED_MODULE_10__","rows","row","fileClaimUrl","openWindow","cols","fields","themeMode","parentProps","funcProps","actionLabel","actionDisabled","actionUrl","PortfolioEquity","startDate","chartwidth","chartHeight","loadChartData","quickDateSelectionChanged","quickDateSelection","JSON","stringify","enabledTokens","componentDidMount","mobileChanged","themeModeChanged","getEtherscanTxs","etherscanTxs","tokensBalance","firstTxTimestamp","asyncForEach","_ref","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","mark","_callee3","filteredTxs","amountLent","wrap","_context3","prev","next","values","filter","tx","token","BNify","action","Math","min","parseInt","timeStamp","tokenAmount","plus","minus","lt","balance","tokenPrice","idleTokens","stop","_x3","apply","arguments","currentDate","strToMoment","Date","clone","subtract","days","prevBalances","prevTimestamp","minChartValue","maxChartValue","aggregatedBalance","aggregatedBalancesKeys","tokensBalancesPerDate","currTimestamp","getTime","tokensData","isRisk","selectedStrategy","_ref2","_callee4","tokenAddress","_context4","getAvailableTokenAddress","getTokenApiData","sent","_x4","idleTokenBalance","foundBalances","tokensBalances","lastTokenData","lastTokenDataUnfiltered","pop","filteredTokenData","timestamp","tokenDecimals","filteredBalances","lastFilteredTx","idlePrice","fixTokenDecimals","newBalance","lastTx","lastTxBalance","gt","tokenUsdConversionRate","conversionRateField","getGlobalConfig","chartToken","conversionRate","momentDate","isSameOrAfter","isSameOrBefore","formattedDate","format","max","frequencySeconds","_loop","aggregatedBalances","date","x","y","balances","itemIndex","item","floor","toUpperCase","yFormatDecimals","gridYStep","gridYValues","gridYValue","axisBottomIndex","daysCount","daysFrequency","ceil","xScale","yScale","stacked","xFormat","yFormat","axisBottom","legend","tickSize","tickPadding","orient","legendOffset","tickValues","legendPosition","pointSize","useMesh","axisLeft","tickRotation","pointLabel","enableArea","enableSlices","enableGridY","curve","enableGridX","pointBorderWidth","pointLabelYOffset","areaBaselineValue","pointColor","areaOpacity","axis","ticks","fill","grid","line","stroke","lineChartStroke","strokeDasharray","sliceTooltip","slideData","slice","points","_ChartCustomTooltip_ChartCustomTooltip__WEBPACK_IMPORTED_MODULE_11__","_ChartCustomTooltipRow_ChartCustomTooltipRow__WEBPACK_IMPORTED_MODULE_12__","serieId","yFormatted","formattedBalance","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_10__","Line","parentId","parentIdHeight","GenericSelector","loadComponents","selectedTokenChanged","optionsChanged","options","defaultValueChanged","defaultValue","componentsChanged","CustomOptionValue","CustomValueContainer","ControlComponent","innerProps","menuIsOpen","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_12__","CustomIndicatorSeparator","CustomMenu","mt","selectProps","CustomInputContainer","isSearchable","fontSizes","copyColor","fontWeights","searchInput","dark","searchInputHidden","CustomOption","selectedValue","o","indexOf","genericSelector","isFocused","react_select__WEBPACK_IMPORTED_MODULE_7__","onChange","components","Menu","Option","Control","Input","SingleValue","IndicatorSeparator","TxProgressBar","txCount","error","ended","percentage","processing","txTimestamp","initialized","estimatedTime","remainingTime","_callee","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default","_context","initProgressBar","getTransaction","transaction","Promise","_ref3","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__","_callee2","resolve","reject","_context2","web3","eth","err","_x","_x2","abrupt","getBlockTime","pt","blockTime","axios","get","getPredictionTable","_callee5","predictTable","_context5","getTxEstimatedTime","gasPrice","getRequiredNetwork","provider","prediction","gasprice","pdValues","_estimateWait","gas","txMeanSecs","block_time","customLog","calculateRemainingTime","_callee6","secondsPassed","timePassed","_context6","blockNumber","div","toString","setTimeout","updateProgressBar","getTxInfo","_callee7","txProgressBarKey","txHash","txProgressBarData","_ref8","_ref9","_context7","localStorage","getItem","parse","all","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__","setLocalStorage","_callee8","_context8","window","clearTimeout","gasoffered","minedProb","expectedWait","sum1","sum2","prob","exp","minutes","seconds","substr","currentNetwork","react__WEBPACK_IMPORTED_MODULE_10___default","rimble_ui__WEBPACK_IMPORTED_MODULE_13__","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_11__","textColor","loaderProps","endMessage","waitText","span","renderRemainingTime","loadingMessage","sendingMessage","target","rel","href","getEtherscanTransactionUrl","explorer","cancelTransaction","cancelTextColor","cancelTextHoverColor","_colors__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","polished__WEBPACK_IMPORTED_MODULE_1__","__webpack_exports__","breakpoints","letterSpacings","lineHeights","solid","copy","serif","counter","space","radii","widths","minWidths","maxWidths","heights","minHeights","maxHeights","borders","borderWidths","shadows","opacity","primary","blue","base","gradient-bg","primary-light","light","primary-dark","bgBlue","tick","dark-blue","skyBlue","lightBlue","subColor","black","baseColors","near-black","dark-gray","mid-gray","gray","grey","silver","light-silver","moon-gray","light-gray","near-white","white","transparent","green","connect","newblue","alert","arrowActive","arrowInactive","selectBgFocused","selectBg","backButtonBg","wrongNetworkBannerBg","dashboardBg","statValue","boxBorder","cellTitle","cellText","divider2","deposit","migrate","menuBg","menuHover","flashColor","menuRightBorder","menuIconActive","cardBgContrast","cardHoverShadow","cardBgHover","cardBorder","pageActive","pageInactive","send","swap","boost","swapout","curvein","receive","default","curveout","withdraw","curvedepositin","curvedepositout","blacks","whites","zIndices","messageStyle","shade","tint","success","warning","yellow","danger","red","info","buttons","--main-color","--contrast-color","normal","buttonSizes","small","padding","medium","large","IconBox","isVisible","AssetSelector","find","_AssetField_AssetField__WEBPACK_IMPORTED_MODULE_9__","fieldInfo","showCustomField","cachedData","setCachedData","showBalance","_GenericSelector_GenericSelector__WEBPACK_IMPORTED_MODULE_11__","changeToken","bg","twitterIcon","radioBtn","button","GenericChart","addEventListener","handleWindowSizeChange","bind","removeEventListener","chartContainer","document","getElementById","chartWidth","offsetWidth","chartContainerH","ChartType","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_7__","minHeight","undefined","loaderText","gradientButton","empty","select","selectDark","input","ExecuteTransaction","txStatus","loading","eventData","eventCategory","eventLabel","methodName","eventAction","contractName","getTransactionError","sendGoogleAnalyticsEvent","callbackReceipt","transactionHash","params","getTransactionParams","getTransactionParamsAsync","transactionParams","sendRawTransaction","contractMethodSendWrapper","ExecuteComponent","_TxProgressBar_TxProgressBar__WEBPACK_IMPORTED_MODULE_11__","network","progressBarProps","execute","componentProps","TransactionField","loadField","hashChanged","accountChanged","output","bgColor","fieldProps","rimble_ui__WEBPACK_IMPORTED_MODULE_12__","_utilities_components_ShortHash__WEBPACK_IMPORTED_MODULE_11__","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_9__","amount","tokenSymbol","iconSrc","CustomComponent","customValue","getArrayPath","Image","Icon","IdleGovToken","classCallCheck","tokenName","getBalance","asyncToGenerator","regenerator_default","getTokenBalance","claimRewards","getPriorVotes","priorVotes","_args3","genericContractCall","refreshIdleSpeed","getUnclaimedTokens","getAPR","_ref6","IDLETokenConfig","cachedDataKey","APR","_ref7","idleDistribution","tokenAllocation","DAITokenConfig","tokenPool","idleDistributedPerYearUSD","_args6","enabled","idle","getDistribution","slicedToArray","getUniswapConversionRate","t0","lte","convertTokenBalance","totalAllocationWithUnlent","getSpeed","idleTokenAddress","idleSpeeds","getCachedDataWithLocalStorage","setCachedDataWithLocalStorage","_x5","_ref10","blocksPerYear","distribution","_x6","getUserDistribution","_callee10","fixByFrequency","currentNetworkId","totalSpeed","_args10","_context10","availableStrategies","getRequiredNetworkId","_ref12","_callee9","_ref13","_ref14","idleSpeed","userPoolShare","tokenSpeed","_context9","getUserPoolShare","_x7","fixDistributionSpeed","distributionFrequency","getAvgApr","_callee12","_args12","_context12","_ref16","_callee11","_ref17","_ref18","idleApr","_context11","_x8","ethereumjsABI","require","profiler","idleGovToken","trimEth","toBN","n","utils","BN","toEth","wei","fromWei","toWei","htmlDecode","innerHTML","childNodes","nodeValue","BNify_obj","s","BigNumber","String","_len","Array","_key","logs","messagesEnabled","moment","customLogError","_console","_len2","_key2","errorsEnabled","console","getContractByName","networkId","required","contract","contracts","current","isCorrectNetwork","contractsNetworks","normalizeSimpleIDNotification","replace","str","replaceArrayProps","arr1","arr2","replaceArrayPropsRecursive","objectSpread","stripHtml","html","tmp","textContent","innerText","scrollTo","to","duration","start","scrollY","change","currentTime","easeInOutQuad","t","b","animateScroll","val","getQueryStringParameterByName","url","location","results","RegExp","exec","decodeURIComponent","getTxAction","depositProxyContractInfo","migrationContractAddr","migration","migrationContract","migrationContractOldAddrs","oldAddresses","batchMigration","batchMigrationContractAddr","isMigrationTx","contractAddress","isSendTransferTx","isReceiveTransferTx","isDepositTx","isRedeemTx","isSwapTx","startLen","endLen","shortHash","txStart","txEnd","switchEthereumChain","chainId","getCurrentWeb3","currentProvider","request","toHex","method","addEthereumChain","networkConfig","chainName","providerConfig","blockExplorerUrl","rpcUrls","publicRpc","rpc","nativeCurrency","baseToken","symbol","blockExplorerUrls","ensConfig","TTL","ens","addressCheck","supportedNetworks","checkAddress","ENS","ensAddress","getEnsAddress","getName","getAddress","getAccountPortfolioTranches","availableTranches","portfolio","tranches","avgAPY","totalEarnings","totalAmountLent","totalEarningsPerc","_args5","tranchesBalance","totalBalance","protocol","protocolConfig","_ref4","_ref5","tranche","trancheConfig","trancheTokenBalance","tranchePool","tranchePrice","tokenBalance","trancheUserInfo","trancheApy","poolShare","amountDeposited","trancheEarnings","loadTrancheFieldRaw","getTrancheUserInfo","toConsumableArray","trancheInfo","trancheWeight","getAccountPortfolio","orderedTokensBalance","depositedTokens","_args8","tokensToMigrate","totalBalanceConverted","_ref11","_ref13$","migrationEnabled","oldContractBalanceFormatted","tokenKey","tokenBalanceConverted","checkMigration","strategy","getIdleTokenPrice","_ref15","tokenAprs","tokenAPY","tokenWeight","amountLentToken","tokenEarnings","getTokenAprs","getAmountDeposited","avgApy","requiredNetwork","web3RpcKey","web3Rpc","ethereum","Web3","providers","HttpProvider","getCurveAvgSlippage","processedTxs","processedHashes","curveTokensBalance","curveTxs","avgSlippage","totalDeposited","_args9","getCurveAvailableTokens","getCurveTxs","curveTokens","curveTokenPrice","price","received","slippage","deposited","getCurveAvgBuyPrice","avgBuyPrice","prevAvgBuyPrice","getAvgBuyPrice","_args11","idleTokensBalance","getFirstDepositTx","deposits","firstDepositTx","getDashboardSectionUrl","section","env","envUrl","baseUrl","origin","asyncTimeout","ms","getDepositTimestamp","_callee13","firstDepositTxs","_args13","_context13","reduce","acc","getTrancheHarvests","_ref22","_callee16","harvestsList","stakingRewards","autoFarming","_context16","_ref23","_callee14","eventFilters","transfers","_context14","CDO","CDORewards","getContractEvents","fromBlock","toBlock","_x9","_ref24","_callee15","_context15","_x10","getTrancheRewardTokensInfo","_ref25","_callee18","tokensDistribution","_context18","_ref26","_callee17","firstHarvest","latestHarvest","firstBlock","govTokenConfig","_ref27","_ref28","prevBlockInfo","lastBlockInfo","lastBlockPoolSize","poolSize","elapsedBlocks","elapsedSeconds","lastAmount","totalAmount","tokensPerBlock","tokensPerSecond","tokensPerDay","tokensPerYear","convertedTokensPerYear","tokenApr","tokenApy","_context17","_address","getBlockInfo","genericContractCallCached","returnValues","total","apr2apy","apr","apy","_x13","_x11","_x12","_ref29","_callee20","defaultEventsConfig","underlyingEventsConfig","underlyingEventsFilters","_ref30","_ref31","underlying_transfers","trancheToken_transfers","totalAmountDeposited","_context20","_ref32","_callee19","trancheTokenTransferEvent","tokenTransferEvent","trancheTokenAmount","blockInfo","hashKey","_context19","trancheTokens","_x17","_x14","_x15","_x16","getTrancheUserTransactions","_ref33","_callee21","_context21","_x18","_x19","_x20","getTrancheFirstDepositTx","_ref34","_callee22","_context22","_x21","_x22","_x23","getAmountDepositedTranche","_ref35","_callee23","_context23","_x24","_x25","_x26","_ref36","_callee24","_ref37","_ref38","userAvgPrice","_context24","_x27","_x28","getAmountLent","_callee25","amountLents","_args25","_context25","getBaseToken","getCurrentNetwork","getCurrentNetworkId","defaultNetwork","getPolygonBridgeTxs","_callee31","txs","covalentInfo","etherscanInfo","stateSenderConfig","erc20PredicateConfig","etherPredicateConfig","depositManagerConfig","rootChainManagerConfig","polygonNetworkId","covalentApiUrl","polygonAvailableTokens","polygonEndpoint","ethereumNetworkId","etherscanApiUrl","etherscanEndpoint","etherscanTxlistEndpoint","etherscanTxlistInternalEndpoint","_ref41","_ref42","last_state_id","polygonTxs","etherscanTxlist","etherscanTxlistInternal","rootTokensAddresses","childTokensAddresses","depositTxs","exitTxs","depositTxsHashes","depositETHInputRexExp","depositETHTxs","exitETHTxs","_args31","_context31","getCachedData","endpoints","getPolygonCurrentLastStateId","makeCachedRequest","makeEtherscanApiRequest","childToken","rootToken","result","_ref43","_callee26","ethereumTx","txReceipt","stateSenderLog","tx_state_id","_context26","bridgeType","getTxReceipt","web3Infura","log","hexToNumberString","topics","included","_x29","_ref44","_callee27","_context27","_x30","match","_ref45","_callee28","_context28","_x31","_ref46","_callee29","_context29","_x32","items","to_address","_ref47","_callee30","polygonTx","_context30","normalizePolygonTx","exited","maticPOSClient","exitERC20","encodeAbi","_x33","sort","getPolygonBaseTxs","_callee32","debug","baseTxs","baseEndpoint","cachedRows","lastCachedTx","lastCachedBlockNumber","covalentEndpointLastBlock","latestTxs","latestBlockNumbers","requestCount","requestStatus","dataToCache","_args32","_context32","getCachedRequest","block_height","filterPolygonTxs","tx_hash","saveFetchedTransactions","makeRequest","now","addKeyToCachedDataWithLocalStorage","getEtherscanBaseTxs","_callee33","firstBlockNumber","endBlockNumber","firstIdleBlockNumber","etherscanEndpointLastBlock","_args33","_context33","filterEthereumTxs","_callee34","_args34","_context34","filterCurveTxs","endpoint","txsToStore","cachedRequest","saveCachedRequest","_callee35","resultData","_resultData","allAvailableTokens","_args35","_context35","processStoredTxs","t1","_callee36","contractInstance","_context36","web3Polygon","Contract","constant","inputs","outputs","internalType","payable","stateMutability","methods","lastStateId","call","checkPolygonTransactionIncluded","_ref53","_callee37","_ref54","_ref55","_context37","getTransactionReceipt","_x34","_ref56","_callee38","_args38","_context38","_x35","depositLogEvent","log_events","sender_address","decoded","param","redeemLogEvent","withdrawLogEvent","tokenDecimal","idleToken","block_signed_at","_d","logEvent","raw_log_topics","from_address","gasUsed","gas_spent","gas_price","_ref57","_callee39","processTransactions","idleTokensAddresses","_args39","_context39","mappedTx","_x36","_x37","filterEtherscanTxs","_ref58","_callee40","processTxs","_args40","_context40","_x38","_ref59","_callee41","curveTransfersTxs","curveTransfersTxsToDelete","curveZapContract","curvePoolContract","curveSwapContract","curveDepositContract","_args41","_context41","tokenMigrationToolParams","curveTokenConfig","internalTxs","r","isRightToken","iTx","isBatchMigrationTx","isDepositInternalTx","iTx2","isRedeemInternalTx","isConversionTx","isWithdrawTx","curveTx","isCurveTx","isCurveDepositTx","isCurveRedeemTx","isCurveDepositIn","isCurveDepositOut","isCurveZapIn","isCurveZapOut","isCurveTransferOut","isCurveTransferIn","isSwapOutTx","tokenValue","newValue","iTxs","withdrawnValue","_x39","addStoredTransaction","txKey","storedTxs","getStoredTransactions","updateStoredTransactions","getStoredItem","_ref60","_callee46","txReceipts","baseTokensConfigs","baseTokensAddresses","curveAvailableTokens","_args46","_context46","baseTokenConfig","baseTokenAddress","_ref61","_callee45","minedTxs","_context45","_ref62","_callee44","storedTx","tokensTransfered","_curveTokenPrice","_curveTokenPrice2","curveTxReceipt","filteredLogs","_curveTokenPrice3","_curveTxReceipt","idleTokenDecimals","_filteredLogs","_context44","getCurveTokenPrice","_ref63","_callee42","_context42","_x44","_x45","baseTokensConfig","t2","_ref64","_callee43","_context43","_x46","_x47","_x42","_x43","_x41","_x40","_ref65","_callee52","txsToProcess","_args52","_context52","_ref66","_callee51","_context51","_ref67","_callee50","isStoredTx","allowedMethods","pendingStatus","txSucceeded","txPending","isMetaTx","methodIsAllowed","realTx","txValue","redeemedValueFixed","executeMetaTransactionReceipt","executeMetaTransactionContractAddr","executeMetaTransactionInternalTransfers","IdleProxyMinterInfo","internalTransfer","metaTxValue","metaTxValueFixed","migrationTxReceipt","migrationTxInternalTransfers","migrationInternalTransfer","decodedLogs","migrationValue","migrationValueFixed","_context50","mintIdleToken","redeemIdleToken","migrateFromToIdle","mintIdleTokensProxy","migrateFromAaveToIdle","migrateFromIearnToIdle","executeMetaTransaction","migrateFromFulcrumToIdle","migrateFromCompoundToIdle","created","_ref68","_callee47","_context47","_x52","_x53","_ref69","_callee48","_context48","_x54","_x55","oldContract","events","raw","_ref70","_callee49","_context49","_x56","_x57","abi","decodeLog","_token","_x50","_x51","_x49","_x48","alias","getCustomAddress","setCustomAddress","customAddress","cachedRequests","_ref71","_callee53","error_callback","config","_args53","_context53","catch","_x58","_ref72","_callee54","apiKeyIndex","apiKey","_args54","_context54","message","_x59","_ref73","_callee55","return_data","_args55","_context55","_x60","code","errorCode","split","getGlobalConfigs","array","prop","shift","configs","getAppUrl","baseURL","getCurrentEnvironment","environments","checkUrlPolygon","polygonUrl","checkUrlOrigin","checkUrlBeta","betaURL","sendGoogleAnalyticsPageview","_callee56","page","googlePageviewInfo","isOrigin","_args56","_context56","ga","_ref75","_callee58","googleEventsInfo","debugEnabled","originOk","_args58","_context58","analytics","google","addPostfixForTestnet","availableNetworks","_ref76","_callee57","_context57","hitCallback","hitCallbackFail","_x62","_x63","_x61","createContract","_ref77","_callee59","_context59","_x64","_x65","_x66","getWalletProvider","defaultProvider","simpleIDPassUserInfo","userInfo","simpleID","email","initSimpleID","passUserInfo","defaultUrl","baseurl","getEtherscanAddressUrl","decimalCount","decimal","thousands","abs","negativeSign","Number","j","getSnapshotProposals","_callee62","activeOnly","whitelist","proposals","currTime","validProposals","_args62","_context62","addr","msg","payload","end","_ref79","_callee61","checkedStrategies","_context61","snapshot","metadata","strategies","_ref80","_callee60","_context60","_x68","_x67","getAprsFromApi","_callee63","endpointInfo","aprs","_args63","_context63","_ref82","_callee64","startTimestamp","endTimestamp","forceStartTimestamp","frequency","order","limit","filteredCachedData","_filteredData","apiInfo","filteredData","_args64","_context64","_x69","getTokenExchangeRate","_ref83","_callee65","exchangeRateParams","exchangeRate","_context65","_x70","_x71","getTokenDecimals","_ref84","_callee66","_context66","_x72","allocations","avgApr","aprWeighted","allocation","getFrequencySeconds","quantity","hour","day","week","getIdleStakingRewardsTxs","_callee67","idleTokenConfig","feeDistributorConfig","_context67","getProtocolInfoByAddress","integerValue","ROUND_FLOOR","normalizeTokenDecimals","normalizeTokenAmount","normalizedTokenDecimals","checkContractPaused","_callee68","contractPaused","_args68","_context68","parse_json","return_default","clearStoredData","excludeKeys","clear","storedKeysToRemove","storedKey","removeStoredItem","removeItem","setItem","checkRebalance","_ref87","_callee70","lastAllocationsPromises","protocolIndex","newAllocations","diff","_context70","lastAllocationsPromise","_ref88","_callee69","lastAllocations","_context69","_x74","_x75","alloc","_x73","_ref89","_callee71","oldContractBalance","oldContractTokenDecimals","oldContractName","_context71","getContractBalance","_x76","_x77","_ref90","_callee72","eventName","_args72","_context72","getContractPastEvents","_x78","_x79","estimateMethodGasUsage","_ref91","_callee73","methodParams","_contract$methods","functionCall","gasLimit","_ref92","_ref93","_args73","_context73","getGasPrice","estimateGas","_x80","_x81","_ref94","_callee74","userAddress","signedParameters","callback_receipt","_contract$methods2","_context74","on","once","confirmationNumber","receipt","_x82","_x83","_x84","_x85","_x86","getSignatureParameters_v4","signature","isHexStrict","Error","hexToNumber","constructMetaTransactionMessage","nonce","functionSignature","soliditySHA3","toBuffer","checkBiconomyLimits","_ref95","_callee75","biconomyInfo","res","_context75","limits","apiId","headers","x-api-key","_x87","sendTxWithPermit","_ref96","_callee76","_contract$methods3","messageToSign","_this$getSignaturePar","_context76","encodeABI","personal","sign","_x88","_x89","_x90","_x91","_x92","_x93","buildBiconomyErc20ForwarderTx","_ref97","_callee77","permitType","callData","buildParams","_context77","txGas","erc20ForwarderClient","buildTx","_x94","_x95","_x96","_x97","_x98","_ref98","_callee79","_context79","_ref99","_callee78","_context78","_x100","_x101","_x99","sendBiconomyTxWithErc20Forwarder","_ref100","_callee80","req","metaInfo","txResponse","fetchReceiptIntervalId","_context80","permitAndSendTxEIP712","setInterval","clearInterval","updateTransaction","_x102","_x103","_x104","_x105","sendBiconomyTxWithPersonalSign","_ref101","_callee81","_this$getSignaturePar2","_context81","getNonce","_x106","_x107","_x108","_x109","signPermitEIP2612","_ref102","_callee82","erc20Name","owner","spender","deadline","domain","permit","domainData","_context82","getChainId","version","verifyingContract","types","EIP712Domain","Permit","primaryType","jsonrpc","substring","_x110","_x111","_x112","_x113","_x114","_x115","_x116","_x117","signPermit","_ref103","_callee83","baseContractName","holder","spenderContractName","addToNonce","baseContract","spenderContract","permitConfig","expiry","EIPVersion","permitName","_args83","_context83","net","getId","round","nonceMethod","pow","allowed","response","_x118","_x119","_x120","_ref104","_callee84","permitParams","methodAbi","useNonce","_args84","_context84","_jsonInterface","f","unshift","_x121","_x122","_x123","_x124","_x125","_x126","_x127","sendSignedTx","_ref105","_callee85","MetaTransaction","dataToSign","_context85","_x128","_x129","_x130","_x131","_x132","checkTokenApproved","_ref106","_callee86","contractAddr","walletAddr","_ref107","_ref108","allowance","_context86","getAllowance","gte","_x133","_x134","_x135","_ref109","_callee87","_context87","_x136","_x137","_x138","contractMethodSendWrapperWithValue","txData","send_raw","raw_tx_data","disableERC20","toTwosComplement","enableERC20","getTrancheStakedBalance","_ref110","_callee88","stakedBalance","_args88","_context88","_x139","_x140","getTrancheStakingRewards","_ref111","_callee90","_context90","_ref112","_callee89","tokenGlobalConfig","_context89","_x143","_x141","_x142","_ref113","_callee91","field","addGovTokens","_args91","_context91","loadTrancheField","_x144","_x145","_x146","_x147","_x148","_x149","_x150","_x151","_ref114","_callee92","formatValue","addTokenName","strategyConfig","idleStrategyAddress","idleGovTokenConfig","_ref115","_ref116","totalSupply","virtualPrice","_ref117","_ref118","staked1","lastPrice1","_ref119","_ref120","deposited1","lastPrice","_ref121","_ref122","redeemable1","staked2","_ref123","_ref124","earningsStart","trancheApy2","deposited3","earningsEnd","_ref125","_ref126","trancheFee","earningsCounter","feesStart","feesEnd","_ref127","_ref128","deposited4","redeemable3","_ref129","_ref130","deposited2","redeemable2","_ref131","_ref132","earningsPerc","secondsFromFirstTx","rewardsTokensInfo","_ref133","_ref134","rewardsTokens","incentiveTokens","govTokens","_args92","_context92","Strategy","initContract","AA","BB","getTokenTotalSupply","IDLE","rewardTokenAddr","govTokenAddress","getGovTokenConfigByAddress","stakingRewardsTokenConfig","_x152","_x153","_x154","_x155","_x156","_x157","_x158","loadAssetField","_ref135","_callee93","addCurveApy","strategyInfo","govTokenAvailableTokens","newTokenConfig","_ref136","_ref137","curveAvgSlippage","curveAvgBuyPrice","curveTokenBalance","_ref138","_ref139","amountLentCurve1","redeemableBalanceCurve","_ref140","_ref141","curveApy","amountLentCurve","redeemableBalanceCurveStart","redeemableBalanceCurveEnd","earningPerYear","_ref142","_ref143","amountLent1","redeemableBalance1","depositTimestamp","_idleGovToken","blocksPerDay","blocksPerWeek","blocksPerMonth","selectedTokenConfig","_idleGovToken2","_idleGovToken3","tokenApys","curveAPY","_ref144","_ref145","tokenPriceFirstDeposit","_ref146","_ref147","daysFirstDeposit","depositTimestamps","_govTokenConfig","_ref148","_ref149","tokenAPY1","amountLent2","redeemableBalanceStart","redeemableBalanceEnd","_earningPerYear","_govTokenConfig2","_ref150","_ref151","idleTokenPrice1","idleTokenBalance2","govTokensBalance","_tokenBalance","redeemableBalance","_ref152","_ref153","amountLentCurve2","redeemableBalanceCurve1","_ref154","_ref155","redeemableBalance2","_args93","_context93","getCurveTokenBalance","getCurveAPY","getCurveRedeemableIdleTokens","getGovTokenPool","getTokenPool","getCompUserDistribution","getStkAaveUserDistribution","getIdleGovToken","distributionMode","t3","getCompDistribution","getStkAaveDistribution","t4","getCompAvgApr","t5","t6","t7","getTokenPrice","getUserTokenFees","t8","t9","getGovTokenUserBalance","getGovTokensUserTotalBalance","_x159","_x160","_x161","_x162","getIdleTokenSupply","_ref156","_callee94","idleTokenSupply","_args94","_context94","_x163","getIdleTokenPriceWithFee","_ref157","_callee95","_ref158","_ref159","fee","priceWFee","_args95","_context95","eq","_x164","_x165","_ref160","_callee96","tokenData","beforePrice","afterPrice","tokenPriceBefore","tokenPriceAfter","timeBefore","timeAfter","timeDiff","priceDiff","priceAcceleration","timeDiffFromBeforePrice","_args96","_context96","_x166","clearCachedData","clear_all","parent_key","useLocalStorage","expirationDate","_ref161","_callee97","_ref162","_ref163","idleTokensTotalSupply","userShare","_context97","_x167","_x168","open","_callee99","coverProtocolConfig","nexusMutualConfig","_args99","_context99","_ref165","_callee98","coverage","coverageTokens","protocolImage","_context98","tokens","expirationTimestamp","utc","_x169","getNexusMutualCoverages","sumAssured","coverAssetConfig","yieldTokenConfig","collateralIcon","incident","claimId","protocolImageDark","coverDetails","validUntil","route","_ref166","_callee101","incidentsInfo","_ref167","_ref168","coverBoughtEvents","claimSubmittedEvents","nexusMutualCoverages","_context101","directProps","startBlock","contractInfo","buyer","_ref169","_callee100","cover","coverId","claimSubmittedEvent","_ref170","_ref171","incidentEvents","matchedIncidents","matchedIncident","expiryDate","payoutOutcome","claimedAmount","claimTxReceipt","claimedAmountLog","claimableAmount","claimablePrice","maxCoveredAmount","coveredTokenAmount","_ref172","_ref173","_context100","claim","productId","incidentDate","yieldTokenCoverGracePeriod","curr","priceBefore","underlying","underlyingConfig","coverAsset","findIndex","_x171","_x170","getBatchedDepositExecutions","_ref174","_callee102","_context102","_x172","getBatchedDeposits","_callee104","filter_by_status","batchDepositConfig","batchedDeposits","_args104","_context104","_ref176","_callee103","currBatchIndex","batchIndex","_ref177","_ref178","batchExecutions","batchTotal","batchRedeem","batchDeposit","batchTotals","batchRedeems","batchDeposits","lastExecution","_context103","_x173","getETHBalance","_ref179","_callee105","fixDecimals","_args105","_context105","_x174","_ref180","_callee106","_ref181","_ref182","_args106","_context106","_x175","_x176","copyToClipboard","copyText","setSelectionRange","execCommand","loadScript","script","attr","readyState","onreadystatechange","onload","body","appendChild","isValidJSON","_ref183","_callee107","_args107","_context107","_x177","_ref184","_callee108","_args108","_context108","_x178","_ref185","_callee109","_args109","_context109","_x179","_x180","getProtocolBalance","_ref186","_callee110","_context110","_x181","_x182","getAprs","_ref187","_callee111","_context111","addresses","_x183","genericIdleCall","_ref188","_callee112","callParams","_args112","_context112","_x184","_ref189","_callee113","_contract$methods4","_args113","_context113","_x185","_x186","_ref190","_callee115","_args115","_context115","_ref191","_callee114","_context114","_x188","_x189","_x187","getTxDecodedLogs","_ref192","_callee117","logAddr","decodeLogs","internalTransfers","_context117","_ref193","_callee116","_context116","_x194","_x195","_x190","_x191","_x192","_x193","blocksToSeconds","blocks","blocksPerSeconds","getBlockNumber","_callee118","_context118","_ref195","_callee119","_context119","getBlock","_x196","_ref196","_callee120","_args120","_context120","getPastEvents","_x197","_x198","_ref197","_callee121","_args121","_context121","_x199","_x200","cachedContractCall","_ref198","_callee122","_args122","_context122","_x201","_x202","_ref199","_callee123","_contract$methods5","_args123","_context123","_x203","_x204","_ref200","_callee124","async","_args124","_context124","_x205","_x206","getUnlentBalance","_ref201","_callee125","unlentBalance","_context125","_x207","_ref202","_callee126","_args126","_context126","_x208","getLastAllocations","_ref203","_callee128","tokenAllocations","_context128","_ref204","_callee127","_context127","_x210","_x211","_x209","_ref205","_callee129","protocolsAprs","_ref206","_ref207","govTokensBalances","_args129","_context129","totalAllocationConverted","totalAllocationWithUnlentConverted","getTokenConversionRate","getGovTokensBalances","protocolAllocationPerc","protocolAllocation","_x212","getSushiswapPoolTokenPrice","_ref208","_callee130","_ref209","_ref210","token0_address","token1_address","poolReserves","token0_config","token1_config","_ref211","_ref212","token0_price","token1_price","token0_pool","token1_pool","totalPoolSize","poolTokenPrice","_context130","getSushiswapConversionRate","_x213","_ref213","_callee131","tokenConfigFrom","tokenConfigDest","WETHAddr","one","_context131","_x214","_x215","_ref214","_callee132","unires","_context132","addressForPrice","_x216","_x217","getCurveDepositedTokens","_ref215","_callee133","idleTokensBalances","remainingCurveTokens","_args133","_context133","_x218","getCurveUnevenTokenAmounts","_ref216","_callee134","amounts","max_burn_amount","unevenAmounts","_context134","getCurveDepositContract","_x219","_x220","_callee135","curveRatesInfo","_context135","strategyTokens","getCurveAPYContract","_callee136","blocksForPrevTokenPrice","_ref219","_ref220","prevTokenPrice","blocksMultiplier","curveAPR","_context136","getCurveTokenSupply","_callee137","_context137","getCurvePoolContract","_callee138","_args138","_context138","_callee139","_args139","_context139","_ref224","_callee140","_ref225","_ref226","_context140","_x221","_callee141","depositContractInfo","_context141","getCurveZapContract","_callee142","zapContractInfo","_context142","_callee143","poolContractInfo","_context143","getCurveSwapContract","_callee144","migrationContractInfo","_context144","getCurveIdleTokensAmounts","_callee146","max_slippage","curveTokenSupply","curveTokenShare","n_coins","_args146","_context146","_ref232","_callee145","coinIndex","curveIdleTokens","_context145","migrationParams","_x222","getCurveTokensAmounts","_callee148","useCoinIndex","_args148","_context148","_ref234","_callee147","_ref235","_ref236","idleTokenPrice","totalTokenSupply","_context147","_x223","getCurveAmounts","_ref237","_callee150","_args150","_context150","_ref238","_callee149","_context149","_x226","_x224","_x225","getCurveTokenAmount","_ref239","_callee151","_args151","_context151","_x227","getCurveSlippage","_ref240","_callee152","uneven_amounts","depositContract","_ref241","_ref242","Sv","_args152","_context152","_x228","_x229","_ref243","_callee153","aTokenIdleSupply","annualize","aaveDistribution","stkAAVETokenConfig","aTokenConfig","disabledTokens","aaveIncentivesController_address","IAaveIncentivesController_name","_ref244","_ref245","aTokenTotalSupply","assetData","aaveAllocationPerc","aaveSpeed","secondsPerYear","aavePoolShare","_args153","_context153","IAaveIncentivesController","emissionPerSecond","_x230","_callee155","_args155","_context155","_ref247","_callee154","_ref248","_ref249","_context154","_x231","getWMaticApr","_ref250","_callee156","maticConversionRate","wMaticTokenConfig","wMaticApr","distributionSpeed","destTokenConfig","wMaticValue","_args156","_context156","_x232","_x233","getStkAaveApr","_ref251","_callee157","aaveConversionRate","stkAaveAPR","stkAaveValue","_args157","_context157","_x234","_x235","getCompAPR","_ref252","_callee158","cTokenIdleSupply","compConversionRate","COMPTokenConfig","compAPR","compDistribution","compValue","_args158","_context158","_x236","_x237","getCompSpeed","_ref253","_callee159","cTokenAddress","compSpeed","_context159","_x238","_ref254","_callee160","cTokenInfo","compoundAllocationPerc","_ref255","_ref256","cTokenTotalSupply","compoundPoolShare","_args160","_context160","_x239","_callee162","_args162","_context162","_ref258","_callee161","_ref259","_ref260","_context161","_x240","_callee164","_args164","_context164","_ref262","_callee163","_ref263","_ref264","compApr","_context163","_x241","getTokensCsv","_callee167","csv","_context167","prototype","sum","pv","cv","avg","_ref266","_callee166","_context166","_ref267","_callee165","rates","header","aprAvg","scoreAvg","lastRow","_context165","protocolsData","p1","foundProtocol","p2","rate","idleRate","score","idleScore","pInfo","pData","pRate","pScore","defiScore","additionalRate","avgRate","avgScore","_x243","_x242","_callee169","govToken","convertToken","_args169","_context169","_ref269","_callee168","compTokenBalance","_context168","_x244","getGovTokensFarming","tokenGovTokens","getTokenGovTokens","speed","mode","multipliers","block","second","month","year","getGovTokensUserDistributionSpeed","_ref270","_callee171","govTokensUserDistribution","_args171","_context171","_ref271","_callee170","_context170","_x246","_x245","getGovTokensDistributionSpeed","_ref272","_callee173","govTokensDistribution","_args173","_context173","_ref273","_callee172","govSpeed","_context172","_x248","_x247","getGovTokensAprs","_ref274","_callee175","govTokensAprs","_args175","_context175","_ref275","_callee174","_ref276","_ref277","_ref278","_ref279","cTokenConfig","_context174","aprTooltipMode","_x251","_x249","_x250","_callee177","_args177","_context177","_ref281","_callee176","govTokenBalance","tokenConversionRate","fromTokenConfig","_context176","_x252","_callee178","checkShowBalance","govTokensUserBalances","govTokensEarnings","_args178","_context178","getGovTokensUserBalances","govTokenAmount","getGovTokensIndexes","_ref283","_callee180","govTokensAmounts","_context180","getGovTokensUserAmounts","_ref284","_callee179","govTokenIndex","_context179","getGovTokenAddessByIndex","_x255","_x256","_x253","_x254","_ref285","_callee181","_context181","_x257","_x258","_ref286","_callee182","_context182","_x259","_x260","_callee185","govTokenConfigForced","_args185","_context185","_ref288","_callee184","_context184","_ref289","_callee183","_context183","_x262","_x263","_x261","getTokenFees","_callee186","_args186","_context186","_callee187","_ref292","_ref293","feePercentage","gain","fees","_args187","_context187","_ref294","_callee188","_args188","_context188","_x264","getTotalTVL","_callee189","tokensTVL","_context189","getTokensTVL","totalTVL","tokenInfo","tokenTVL","_callee193","_context193","_ref297","_callee192","_context192","_ref298","_callee191","oldTokenTVL","idleTokenName","_ref299","_ref300","oldTokenConfig","_ref304","_ref305","oldTokenPrice","oldTotalSupply","_context191","showAUM","_ref301","_callee190","_ref302","_ref303","govTokenConversionRate","govTokenBalanceConverted","_context190","_x267","oldProtocols","oldProtocol","protocolPos","_x266","_x265","getSubstackLatestFeed","_callee194","idleSubstackFeed","latestFeed","_context194","getAggregatedStats","_callee196","allNetworks","networkIds","totalAUM","_args196","_context196","_ref308","_callee195","tvls","_context195","getAggregatedStats_chain","_x268","_callee200","avgAPR","_args200","_context200","_ref310","_callee199","_context199","_ref311","_callee198","tokenAUM","oldTokenAllocation","oldTokenTotalAllocation","_context198","_ref312","_callee197","_ref313","_ref314","_context197","_x271","_x270","_x269","getTokenApy","_ref315","_callee201","_context201","_x272","getTokensToMigrate","_callee204","_args204","_context204","_ref317","_callee203","_context203","_ref318","_callee202","_ref319","_context202","_x274","_x273","getProtocolsTokensBalances","_callee206","tokenBalances","minTokenBalance","protocolsTokens","_args206","_context206","_ref321","_callee205","tokenContract","_context205","_x275","_ref322","_callee207","_args207","_context207","_x276","_x277","_x278","getAvgAPYStats","_ref323","_callee208","apiResults","_args208","_context208","_x279","_x280","_ref324","_callee209","count","_conversionRate","ToTokenConfig","_args209","_context209","_x281","_x282","getTokenScore","_ref325","_callee210","_ref326","_ref327","tokenScore","_context210","protocolScore","getTokenScoreApi","_x283","_x284","_ref328","_callee211","scores","_context211","_x285","_x286","_ref329","_callee212","idleGovTokenShowAPR","idleAPR","_args212","_context212","_x287","isNegative","suffixNum","decimalPart","mod","toPrecision","difference","maxLen","highlightedDecimals","numLen","intPart","decPart","repeat","highlightedDec","highlightedIntPart","Fragment","BuyModal","selectedMethod","availableMethods","selectedCountry","selectedProvider","availableProviders","buyToken","renderPaymentMethod","buyParams","onSuccess","onClose","paymentProvider","initParams","currentState","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__","toastProvider","addMessage","secondaryMessage","colorTheme","actionHref","actionText","variant","getAccountBalance","payments","getInitParams","render","closeModal","goBack","resetModal","componentWillMount","showInline","getProviderInfo","providerInfo","getInfo","newProviderInfo","getDefaultPaymentProvider","paymentMethod","getAvailablePaymentProviders","providerSupportMethod","supportedMethods","providerSupportToken","supportedTokens","defaultPaymentProvider","showDefaultOnly","selectProvider","ethAvailable","tokenAvailable","selectMethod","selectToken","loadRemoteResources","handleCountryChange","getAvailableCountries","availableCountries","supportedCountries","countryCode","countries","remoteResources","scriptID","remoteResourceParams","precall","parentElement","head","stylesheetId","methodInfo","loadAvailableMethods","_this4","caption","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","showAllTokens","InnerComponent","flexWrap","imageSrc","_ImageButton_ImageButton__WEBPACK_IMPORTED_MODULE_12__","imagePropsExtended","react_select__WEBPACK_IMPORTED_MODULE_10__","placeholder","noOptionsMessage","inputValue","isOpen","_ModalCard__WEBPACK_IMPORTED_MODULE_11__","closeFunc","Header","Body","Footer","React","defaultOpacity","hidden","interactive","rainbow","DashboardCard","mouseOver","isRainbow","active","onMouseOut","setMouseOver","onMouseOver","titleParentProps","lineHeight","description","placement","TableRow","FieldComponent","fieldComponent","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_10__","cardId","rowProps","rowId","colInfo","colIndex","visibleOnDesktop","visible","fieldIndex","colProps","TableHeader","pb","_TableCellHeader_TableCellHeader__WEBPACK_IMPORTED_MODULE_7__","desc","FastBalanceSelector","onMouseDown","CustomList","rowsPerPage","totalPages","processedRows","processRows","totalRows","paginationEnabled","_TableHeader_TableHeader__WEBPACK_IMPORTED_MODULE_11__","rowIndex","_TableRow_TableRow__WEBPACK_IMPORTED_MODULE_8__","CustomField","prevPage","nextPage","cDAI","anonymous","indexed","ERC20","5","best","DAI","govTokensDisabled","minAmountForMint","wyre","destCurrency","ramp","swapAsset","defiPrime","IdleTokenV4","aToken","functions","risk","80001","137","crToken","USDC","WETH","42","cToken","1337","IdleTokenV3","yToken","IdleConverterPersonalSignV4","iToken","CHAI","USDT","SUSD","skipMintForDeposit","TUSD","WBTC","RAI","enabledEnvs","fToken","FEI","1","defiScoreDisabled","canDeposit","disabledMessageRedeemKey","disabledMessageDepositKey","Staking","selectedOption","toolProps","SelectedComponent","component","AssetField","FlexLoader","GenericFaqs","openedAnswer","selectedSection","questions","setSection","showSections","isSelected","borderBottom","q","toggleAnswer","SendTxWithBalance","permitEnabled","showPermitBox","approveEnabled","buttonDisabled","contractApproved","fastBalanceSelector","changeInputValue","call_callback","changeInputCallback","setInputValue","selectedPercentage","getFastBalanceSelector","setFastBalanceSelector","checkButtonDisabled","approve","callbackApprove","callbackReceiptApprove","checkContractApproved","executeTx","_amount","_params","checkLimit","eventValue","getPermitTransactionParams","approveCallback","actionChanged","tokenBalanceChanged","permitEnabledChanged","approveEnabledChanged","contractChanged","tokenConfigChanged","viewOnly","connectorName","infoBox","steps","step","stepIndex","ExtLink","checked","togglePermitEnabled","approveDescription","RoundButton","balanceSelectorInfo","ConnectBox","LimitReachedModal","possibleConstructorReturn","getPrototypeOf","componentDidUpdate","ModalCard","iconHeight","TrancheDetails","infoText","canUnstake","canWithdraw","activeModal","balanceProp","trancheBalance","selectedAction","userHasAvailableFunds","loadActionData","selectedProtocol","selectedTranche","trancheAPY","trancheDetails","cdoConfig","cantUnstake","cantWithdraw","trancheLimit","otherTrancheType","otherTrancheDetails","stakingEnabled","showSelectButton","contrastColor","hex","selectTrancheType","TrancheField","setSelectedAction","src_SendTxWithBalance_SendTxWithBalance","transactionSucceeded","contractApprovedCallback","components_LimitReachedModal","ShareModal","confettiEnabled","tweet","TrancheHarvests","harvests","tokenIcon","Title","stakeEnabled","unstakeEnabled","selectedTrancheOption","selectedStakeAction","selectedActionChanged","selectedStakeActionChanged","trancheType","isStake","isDeposit","isWithdraw","option","selectTranche","ImageButton","setStakeAction","PortfolioEquityTranches","transactionsList","ChartCustomTooltip","ChartCustomTooltipRow","FundsOverviewTranche","aggregatedValues","govTokensTotalApr","govTokensUserBalance","govTokensTotalBalance","govTokensTotalAprTooltip","idleTokenUserDistribution","govTokensDistributionTooltip","govTokensTotalBalanceTooltip","src_PortfolioEquityTranches_PortfolioEquityTranches","Heading","h3","StakingRewardsTranche","stakingRewardsRows","loadUserRewards","portfolioChanged","trancheConfigChanged","transactionsChanged","rewardTokensInfo","trancheStakedAmount","trancheBalanceInfo","rewardToken","rewardTokenInfo","staked","reedemable","Button","claimCallback","TranchePage","userHasFunds","componentLoaded","loadTransactions","balanceInfo","tranchesDetails","filteredTranchesTypes","TrancheDepositRedeem","src_TrancheDetails_TrancheDetails","src_FundsOverviewTranche_FundsOverviewTranche","src_StakingRewardsTranche_StakingRewardsTranche","src_TrancheHarvests_TrancheHarvests","TransactionsList","availableActions","src_GenericFaqs_GenericFaqs","","TranchesList","enabledProtocols","alt","showTooltip","baseName","justifyItems","long","features","feature","TrancheFlash","flashData","bold","subtitle","openTooltipModal","helpcircle","arrows","seniorinfo","juniorinfo","TrancheWelcome","aligItems","src_TrancheFlash_TrancheFlash","TrancheBox","GenericPieChart","showLegend","itemWidth","itemHeight","translateY","symbolSize","anchor","direction","itemTextColor","symbolShape","effects","valueHover","defaultImage","defaultLabel","TotalBalanceCounter","counterEnd","counterStart","loadTotalEarnings","contractsInitialized","counterStyle","oldState","build_default","delay","separator","useEasing","formattingFn","countUpRef","ref","TotalEarningsCounter","Tranches","trancheRoute","useTrancheType","portfolioLoaded","allocationChartData","portfolioEquityQuickSelection","loadPortfolio","then","urlParams","param1","param3","param2","availableTranchesChanged","tranchesTokens","tranchesBalances","tranchesConfig","weight","portfolioDonutData","balanceValue","tokenPercentage","trancheName","_this5","breadcrumbPath","src_TranchePage_TranchePage","src_TotalBalanceCounter_TotalBalanceCounter","src_TotalEarningsCounter_TotalEarningsCounter","src_GenericPieChart_GenericPieChart","setPortfolioEquityQuickSelection","src_TranchesList_TranchesList","src_TrancheWelcome_TrancheWelcome","textSize","TokenSwap","selectedFromToken","selectedDestToken","availableDestinationTokens","selectFromToken","selectDestToken","initProps","buttonId","loadTokens","fromTokenChanged","destTokenChanged","loadKyberWidget","LpStaking","globalStats","statsLoaded","programEnded","rewardMultiplier","accountingData","programEndDate","successMessage","rewardTokenPrice","tokenWrapperProps","showTokenWrapperEnabled","updateData","contractApprovedChanged","contractInfoChanged","userStakedBalance","totalStakedBalance","totalStakingShares","userTotalStakingShare","rewardsPerDay","stakedBalanceUSD","rewardsPerYearUSD","normalizedInputValue","unstakeRewards","totalLocked","totalUnlocked","unlockScheduleCount","collectedRewards","unlockSchedulesPromises","unlockSchedules","totalRewards","totalDeposits","lockedRewards","unlockedRewards","programEndTime","endTime","endAtSec","initialLockedShares","durationSec","stakingShare","maxMultiplier","distributionSpeedMultiplier","userDistributionSpeed","maxBonusDays","currentRewards","stakedTokensLog","stakedTokens","unstakedTokensLog","unstakedTokens","rewardTokenConfig","receivedRewardsLog","receivedRewards","startContract","wrapMethod","destContract","unwrapMethod","_this6","loadStats","_this7","StatsCard","isUnstake","isStats","txAction","poolLink","statInfo","setAction","IdleStaking","maxApr","lockPeriods","lockedEnd","lockExpired","claimedRewards","increaseAction","lockPeriodInput","internalInfoBox","distributedRewards","selectedLockPeriod","lockPeriodTimestamp","lockEndDateIsMaxEndDate","feeDistributor","lockPeriodChanged","increaseActionChanged","calculateStkIDLEAmount","minLockPeriod","maxLockPeriod","minDate","add","mDate","maxDate","isAfter","endDate","endDateTime","maxDateTime","stkIDLEAmount","_value","_unlock_time","etherscanRewardsTxs","tokenTotalSupply","claimableRewards","lockedInfo","tokenUserBalance","claimable","claimEvents","depositEvents","totalRewardsDays","totalClaimedUser","recipient","totalLockedFunds","stkTokenTotalSupply","claimableRewardsFormatted","totalRewardsFormatted","userDeposited","totalCollectedRewards","stakeStartTime","stakedTime","event","ts","depositValue","stakePeriod","currentProfit","stakePeriodWeeks","lockEndDate","currDate","isValid","lockedTokensLog","lockedTokens","increaseAmountTokensLog","increaseTokens","_this8","isLock","isClaim","isIncrease","canIncrease","StatsCardSmall","maxHeight","reward","setIncreaseAction","changelockPeriodInput","selectLockPeriod","getIncreaseTimeParams","NexusMutual","quote","2","periodOptions","30","60","90","365","capacity","coverCost","amountValue","periodValue","yearlyCost","maxCapacity","amountValid","periodValid","claimableCovers","tokenApproved","selectedPeriod","maxPriceWithFee","transactionValue","yieldTokenBalance","selectedUnderlying","yieldTokenApproved","claimButtonDisabled","selectedCoverToClaim","defaultClaimableCover","selectedUnderlyingConfig","changeAmount","changePeriod","selectPeriod","approveSucceeded","yieldTokenApproveSucceeded","claimInputChange","normalizedAmount","getClaimTransactionParams","realAddress","claimTransactionSucceeded","loadContracts","buyCoverTransactionSucceeded","validClaimableCoverFromParam","paramIsValidToken","changeSelectedToken","selectedUnderlyingChanged","loadTokenData","isETH","getPoolCapacity","coverData","period","coverAmount","currency","asset","quoteURL","encodeParameters","priceInNXM","expiresAt","generatedAt","COVER_TYPE","basePrice","priceWithFee","mul","divn","amountInWei","textDecoration","activeColor","reset","changeSelectedUnderlying","setMaxCoverAmount","borderStyle","periodInfo","getQuote","selectCoverToClaim","TokenWrapper","balanceDest","balanceStart","startContractChanged","destContractChanged","loadBalance","updateActionData","mintLog","mintedAmount","withdrawLog","withdrawnAmount","fullWidth","connectAndValidateAccount","PortfolioDonut","totalFunds","parentWidth","tokenColorHsl","radialLabelsLinkOffset","strategyIcon","EarningsEstimation","tokensEarnings","estimationStepsPerc","estimationStepsOptions","estimationStepsDefaultOption","estimationSteps","0","Month","perc","2 months","3 months","optionName","25","8 months","Year","2 Years","5 Years","loadEarnings","stepsCount","aggregatedEarnings","earnings","earningsYear","earningsPercStep","possibleSteps","maxPossibleStep","maxCountStep","orderedTokensEarnings","estimationStep","setEstimationStepsPerc","tokenIndex","estimationStepPerc","finalEarnings","cursorPerc","tokenRGBColor","borderTop","estimateIndex","estimationStepEarnings","estimationStepEarningsFormatted","borderRight","wordBreak","estimationLabel","DashboardIconButton","PolygonBridgeTransactions","bridgeEnabled","polygonTransactions","polygonTransactionsAvailableTokens","polygonBridgeConfig","actionIcon","actionIconProps","StrategyPage","remainingTokens","portfolioLoading","availableGovTokens","portfolioEquityStartDate","batchedDepositsAvailableTokens","availableTokensChanged","batchInfo","redeemable","apyLong","yieldFarming","strategyName","toolsToShow","toolName","toolConfig","src_PortfolioDonut_PortfolioDonut","toolIndex","src_DashboardIconButton_DashboardIconButton","ActiveCoverages","AssetsList","showDirection","src_EarningsEstimation_EarningsEstimation","src_PolygonBridgeTransactions_PolygonBridgeTransactions","BatchDeposit","canClaim","usePermit","hasDeposited","permitSigned","batchCompleted","claimSucceeded","executeSucceeded","migrationSucceeded","batchDepositEnabled","migrationContractApproved","migrationEnabledCallback","migrationCallback","checkBatchs","loadStrategies","executeSucceededChanged","callbackExecute","callbackReceiptExecute","functionInfo","permitContract","batchDepositInfo","depositEnabled","availableStrategiesKeys","selectStrategy","obj","strategyAvailableTokens","migrateFunction","setStrategyToken","batchId","callbackClaim","callbackReceiptClaim","canExecuteBatch","strategyDefaultValue","Migrate","useMetaTx","showActions","isMigrationTool","showBalanceSelector","migrationIcon","toMigrate","callbackPermit","migrationText","minPoolSize","PolygonBridge","txsToExit","dataLoaded","defaultTransaction","selectedTransaction","rootTokenConfig","childTokenConfig","encodeParameter","depositData","sendValue","exitCalldata","ERC20Predicate","DepositManager","depositedTokensLog","depositedTokensEvent","EtherPredicate","maticNetwork","mainNetworkId","mainNetworkName","withdrawnTokensEvent","withdrawnTokensLog","withdrawnTokens","Transfer","paramIsToken","defaultAction","loadPolygonTxs","isExit","selectTransaction","exitCallback","getExitTransactionParams","setRequiredNetwork","CoverProtocol","swapInfo","defaultCoverage","selectedCoverage","inputValueChanged","swapInfoChanged","swapFee","covTokens","tokenAmountOut","getSwapInfo","MAX_UINT256","balancerTokenConfig","dashboardUrl","fixedAmount","mintedClaimLog","mintedNoClaimLog","mintedClaimAmount","mintedNoClaimAmount","claimTokenConfig","claimTokensLog","receivedClaimAmount","balancerPool","noClaimTokenConfig","noClaimTokensLog","receivedNoClaimAmount","collateralAmount","balancerClaimConfig","balancerNoClaimConfig","claimTokenBalance","noClaimTokenBalance","balancerPoolClaimBalance","balancerPoolNoClaimBalance","hasMintedTokens","apyPrice","selectCoverage","isMint","isBuyClaim","isBuyNoClaim","subcaption","TokenMigration","changeFromToken","convertTool","BatchMigration","batchMigrationInfo","batchMigrationDepositEnabled","DeployB2BVesting","actions","actionIndex","validated","viewAction","editAction","newAction","maxContracts","actionValid","actionInputs","claimedTokens","deployedContracts","contractDeployed","validateForm","checkInputs","vesterImplementation","proxyCreated","deployedContractsAddresses","implementation","proxy","vestingPeriod","availableBalance","depositAmounts","claimedTokensLog","returnString","fieldPattern","inputIndex","inputInfo","getPatternByFieldType","inputValid","actionValue","defineProperty","txError","deployedContract","idleAddress","isLastAction","clonedVesterAddress","ProxyCreated","ownerAddress","recipientAddress","initData","depositContracts","claimContracts","onSubmit","handleSubmit","setEditAction","fieldType","pattern","inputChange","addAction","deleteAction","setNewAction","setViewAction","readOnly","depositCallback","process","appName","forumURL","telegramURL","discordURL","twitterURL","darkModeEnabled","live","beta","polygon","USA","GBR","AUS","BRA","CHN","CAN","EUR","HKG","IND","MEX","RUS","ZAF","KOR","connectors","metamask","opera","dapper","coinbase","trustwallet","walletconnect","iconModal","walletlink","gnosis","fortmatic","portis","authereum","torus","trezor","ledger","ledgerlive","custom","newsletterSubscription","messages","scoreShort","apyShort","totalProfitPerc","cheapRedeem","curveBonusSlippage","directMint","performanceFee","govTokenApr","govTokenRedeemableBalance","riskScoreShort","redeemSkipGov","batchDepositExecutionSchedule","riskAdjustedDisabledMessageDeposit","riskScore","curveInstructions","riskAdjustedDisabledMessageRedeem","pageView","modals","first_deposit_referral","first_deposit_share","welcome","dashboard","baseRoute","governance","test","availableContracts","FeeTreasury","PriceOracle","GovernorAlpha","EcosystemFund","IdleController","12","7","delegates","imageInactive","poolContract","CurvePool","CurveDeposit","gaugeContract","LiquidityGaugeV2","zapContract","CurveZap","idleDAIYield","idleUSDCYield","idleUSDTYield","SLP","showAPR","showPrice","COMP","stkAAVE","WMATIC","ProtocolDataProvider","ChildChainManager","UniswapRouter","UniswapV2Router02","SushiswapRouter","SushiV2Router02","RootChainManager","ProxyFactory","MinimalInitializableProxyFactory","LockedIDLE","Timelock","VesterFactory","EarlyRewards","Comptroller","BalancerExchangeProxy","zeroExInstant","orderSource","affiliateInfo","feeRecipient","tranchflash","rgb","bubble","stake","unstake","extraicons","iconDark","iconInactive","iconInactiveDark","tools","forum","leaderboard","overview","delegate","landingStrategies","comingSoon","titlePostfix","govTokensEnabled","chartColor","descLong","descShort","substack","REACT_APP_IDLE_KEY","Authorization","versions","v3","additionalProtocols","showPerformanceTooltip","strategiesParams","enabledStrategies","v4","chart","labelTextColorModifiers","performanceTooltip","ETH","MATIC","USD","disabledCharts","idleDAI+idleUSDC+idleUSDT","compound","aavev2WithStkAAVE","rateField","compoundWithCOMP","fulcrum","dsr","dydx","iearn","aave","aavev2","cream","fuse","skipRebalance","metaTransactionsEnabled","skipMint","erc20ForwarderEnabled","skipMintCheckboxEnabled","erc20ForwarderProxyContract","forwarder","erc20Forwarder","function","IdleDepositForwarder","proxyContract","IdleProxyMinter","minAmountForRebalance","minAmountForRebalanceMetaTx","redeemGovTokens","rebalance","IdleRebalancerV3","3","4","isForked","requiredConfirmations","enabledNetworks","accountBalanceMinimum","infura","REACT_APP_INFURA_KEY","networkPairs","nexus","covalent","REACT_APP_COVALENT_KEY","etherscan","REACT_APP_ETHERSCAN_KEY","REACT_APP_ETHERSCAN_KEY2","REACT_APP_ETHERSCAN_KEY3","REACT_APP_ETHERSCAN_KEY4","urls","biconomy","enableLogin","disabledWallets","REACT_APP_BICONOMY_KEY","dappId","REACT_APP_BICONOMY_APPID","getNetwork","networkName","appOrigin","appId","renderNotifications","notifications","subComponent","stkIDLE","StakingFeeDistributor","LpStakingAbi","SushiLiquidityPool","stakePolygon","nexusMutual","NexusMutualDistributor","NexusMutualIncidents","b2bVesting","B2BVester","polygonBridge","StateSender","ChildERC20","ethWrapper","coverProtocol","CoverMint","Claim","CovToken","BalancerPool","NoClaim","claimEnabled","IdleBatchedMint","IdleBatchConverter","idleSUSDYield","idleTUSDYield","idleWBTCYield","idleDAISafe","idleUSDCSafe","idleUSDTSafe","tokenMigration","idleDAIv2","IdleTokenV2","iDAI","aDAI","yDAIv3","yDAIv2","idleUSDCv2","cUSDC","iUSDC","aUSDC","yUSDCv3","yUSDCv2","cUSDT","iUSDT","aUSDT","yUSDTv3","yUSDTv2","idleSUSDv2","aSUSD","ySUSDv3","idleTUSDv2","aTUSD","yTUSDv3","cWBTC","iWBTC","aWBTC","addFunds","tokenSwap","USDS","BUSD","EURS","2KEY","ABT","ABYSS","AMPL","ANT","BAM","BAND","BAT","BLZ","BNT","BQX","BTU","CDT","CVC","DAT","DGX","EKG","ELF","ENJ","EQUAD","FXC","GDC","GEN","GHT","GNO","IOST","KEY","KNC","LEND","LINK","LOOM","LRC","MANA","MCO","MET","MFG","MKR","MLN","MTL","MYB","NEXXO","NPXS","OGN","OMG","OST","PAX","PBTC","PLR","PNK","POLY","POWR","PT","QKC","QNT","RAE","REN","REP","REQ","RLC","RSR","RSV","SAN","SNT","SNX","SPIKE","SPN","TKN","TKX","TRYB","UBT","UPP","ZRX","insurance","imageDark","bank","card","wallet","captionPos","envParams","accountId","prod","referrerAccountId","dest","redirectUrl","k","encodeURIComponent","iframeBox","wyreStyle","badge","hostAppName","hostApiKey","REACT_APP_RAMP_KEY","hostLogoUrl","RampInstantSDK","purchase","show","transak","https://global.transak.com/v1/widget.js","REACT_APP_TRANSAK_KEY_TEST","REACT_APP_TRANSAK_KEY_PROD","fiatCurrency","cryptoCurrencyCode","currencyCode","walletAddress","partnerCustomerId","disableWalletAddressForm","transakGlobal","transakStyle","moonpay","REACT_APP_MOONPAY_KEY_TEST","REACT_APP_MOONPAY_KEY_PROD","baseCurrencyCode","showWalletAddressForm","enabledPaymentMethods","navigator","userAgent","cookie","moonpayStyle","https://instant.0x.org/v3/instant.js","tokenParams","RimbleWeb3_context","connector","defaultSelectedAssetData","availableAssetDatas","shouldDisableAnalyticsTracking","defaultAssetBuyAmount","kyberSwap","web3Subscription","decodeLogsData","https://widget.kyber.network/v0.7.5/widget.css","https://widget.kyber.network/v0.7.5/widget.js","querySelectorAll","remove","scripts","lang","paramForwarding","pinnedTokens","defaultPair","commissionId","click","airSwap","https://cdn.airswap.io/airswap-instant-widget.js","onComplete","AirSwapInstant","totle","https://widget.totle.com/latest/dist.js","sourceAssetAddress","sourceAmountDecimal","destinationAssetAddress","destinationAmountDecimal","partnerContractAddress","TotleWidget","nodeId","totleWidgetContainer","run","./mainnet/v1/index.json","./testnet/mumbai/index.json","webpackContext","webpackContextResolve","./mainnet/v1/artifacts/fx-portal/FxChild.json","./mainnet/v1/artifacts/fx-portal/FxERC1155ChildTunnel.json","./mainnet/v1/artifacts/fx-portal/FxERC1155RootTunnel.json","./mainnet/v1/artifacts/fx-portal/FxERC20ChildToken.json","./mainnet/v1/artifacts/fx-portal/FxERC20ChildTunnel.json","./mainnet/v1/artifacts/fx-portal/FxERC20RootToken.json","./mainnet/v1/artifacts/fx-portal/FxERC20RootTunnel.json","./mainnet/v1/artifacts/fx-portal/FxERC721ChildTunnel.json","./mainnet/v1/artifacts/fx-portal/FxERC721RootTunnel.json","./mainnet/v1/artifacts/fx-portal/FxRoot.json","./mainnet/v1/artifacts/genesis/BorValidatorSet.json","./mainnet/v1/artifacts/genesis/IStateReceiver.json","./mainnet/v1/artifacts/genesis/Migrations.json","./mainnet/v1/artifacts/genesis/StateReceiver.json","./mainnet/v1/artifacts/genesis/System.json","./mainnet/v1/artifacts/genesis/TestBorValidatorSet.json","./mainnet/v1/artifacts/genesis/TestCommitState.json","./mainnet/v1/artifacts/genesis/TestStateReceiver.json","./mainnet/v1/artifacts/genesis/TestSystem.json","./mainnet/v1/artifacts/genesis/ValidatorSet.json","./mainnet/v1/artifacts/genesis/ValidatorVerifier.json","./mainnet/v1/artifacts/plasma/BaseERC20.json","./mainnet/v1/artifacts/plasma/ChainIdMixin.json","./mainnet/v1/artifacts/plasma/ChildChain.json","./mainnet/v1/artifacts/plasma/ChildERC20.json","./mainnet/v1/artifacts/plasma/ChildERC20Proxified.json","./mainnet/v1/artifacts/plasma/ChildERC721.json","./mainnet/v1/artifacts/plasma/ChildERC721Mintable.json","./mainnet/v1/artifacts/plasma/ChildERC721Proxified.json","./mainnet/v1/artifacts/plasma/ChildToken.json","./mainnet/v1/artifacts/plasma/ChildTokenProxy.json","./mainnet/v1/artifacts/plasma/Common.json","./mainnet/v1/artifacts/plasma/ContractReceiver.json","./mainnet/v1/artifacts/plasma/ContractWitRevertingFallback.json","./mainnet/v1/artifacts/plasma/ContractWithFallback.json","./mainnet/v1/artifacts/plasma/ContractWithoutFallback.json","./mainnet/v1/artifacts/plasma/DelegateProxy.json","./mainnet/v1/artifacts/plasma/DepositManager.json","./mainnet/v1/artifacts/plasma/DepositManagerHeader.json","./mainnet/v1/artifacts/plasma/DepositManagerProxy.json","./mainnet/v1/artifacts/plasma/DepositManagerStorage.json","./mainnet/v1/artifacts/plasma/DrainStakeManager.json","./mainnet/v1/artifacts/plasma/Drainable.json","./mainnet/v1/artifacts/plasma/ECVerify.json","./mainnet/v1/artifacts/plasma/ERC165.json","./mainnet/v1/artifacts/plasma/ERC20.json","./mainnet/v1/artifacts/plasma/ERC20Detailed.json","./mainnet/v1/artifacts/plasma/ERC20Mintable.json","./mainnet/v1/artifacts/plasma/ERC20NonTransferable.json","./mainnet/v1/artifacts/plasma/ERC20Predicate.json","./mainnet/v1/artifacts/plasma/ERC20PredicateBurnOnly.json","./mainnet/v1/artifacts/plasma/ERC721.json","./mainnet/v1/artifacts/plasma/ERC721Enumerable.json","./mainnet/v1/artifacts/plasma/ERC721Full.json","./mainnet/v1/artifacts/plasma/ERC721Metadata.json","./mainnet/v1/artifacts/plasma/ERC721MetadataMintable.json","./mainnet/v1/artifacts/plasma/ERC721Mintable.json","./mainnet/v1/artifacts/plasma/ERC721PlasmaMintable.json","./mainnet/v1/artifacts/plasma/ERC721Predicate.json","./mainnet/v1/artifacts/plasma/ERC721PredicateBurnOnly.json","./mainnet/v1/artifacts/plasma/ERCProxy.json","./mainnet/v1/artifacts/plasma/ExitNFT.json","./mainnet/v1/artifacts/plasma/FallbackManager.json","./mainnet/v1/artifacts/plasma/GnosisSafe.json","./mainnet/v1/artifacts/plasma/GnosisSafeProxy.json","./mainnet/v1/artifacts/plasma/Governable.json","./mainnet/v1/artifacts/plasma/Governance.json","./mainnet/v1/artifacts/plasma/GovernanceLockable.json","./mainnet/v1/artifacts/plasma/GovernanceLockableTest.json","./mainnet/v1/artifacts/plasma/GovernanceProxy.json","./mainnet/v1/artifacts/plasma/IDepositManager.json","./mainnet/v1/artifacts/plasma/IERC165.json","./mainnet/v1/artifacts/plasma/IERC20.json","./mainnet/v1/artifacts/plasma/IERC721.json","./mainnet/v1/artifacts/plasma/IERC721Enumerable.json","./mainnet/v1/artifacts/plasma/IERC721Metadata.json","./mainnet/v1/artifacts/plasma/IERC721Receiver.json","./mainnet/v1/artifacts/plasma/IErcPredicate.json","./mainnet/v1/artifacts/plasma/IGovernance.json","./mainnet/v1/artifacts/plasma/IParentToken.json","./mainnet/v1/artifacts/plasma/IPredicate.json","./mainnet/v1/artifacts/plasma/IRootChain.json","./mainnet/v1/artifacts/plasma/ISignatureValidator.json","./mainnet/v1/artifacts/plasma/ISlashingManager.json","./mainnet/v1/artifacts/plasma/IStakeManager.json","./mainnet/v1/artifacts/plasma/IStakeManagerLocal.json","./mainnet/v1/artifacts/plasma/IValidatorShare.json","./mainnet/v1/artifacts/plasma/IWithdrawManager.json","./mainnet/v1/artifacts/plasma/LibEIP712Domain.json","./mainnet/v1/artifacts/plasma/LibTokenTransferOrder.json","./mainnet/v1/artifacts/plasma/Lockable.json","./mainnet/v1/artifacts/plasma/MRC20.json","./mainnet/v1/artifacts/plasma/Marketplace.json","./mainnet/v1/artifacts/plasma/MarketplacePredicate.json","./mainnet/v1/artifacts/plasma/MarketplacePredicateTest.json","./mainnet/v1/artifacts/plasma/MarketplaceToken.json","./mainnet/v1/artifacts/plasma/MasterCopy.json","./mainnet/v1/artifacts/plasma/MaticWETH.json","./mainnet/v1/artifacts/plasma/Merkle.json","./mainnet/v1/artifacts/plasma/Migrations.json","./mainnet/v1/artifacts/plasma/MintableERC721Predicate.json","./mainnet/v1/artifacts/plasma/MinterRole.json","./mainnet/v1/artifacts/plasma/Module.json","./mainnet/v1/artifacts/plasma/ModuleManager.json","./mainnet/v1/artifacts/plasma/Ownable.json","./mainnet/v1/artifacts/plasma/OwnableLockable.json","./mainnet/v1/artifacts/plasma/OwnerManager.json","./mainnet/v1/artifacts/plasma/ParentTokenMock.json","./mainnet/v1/artifacts/plasma/PredicateUtils.json","./mainnet/v1/artifacts/plasma/PriorityQueue.json","./mainnet/v1/artifacts/plasma/Proxy.json","./mainnet/v1/artifacts/plasma/ProxyStorage.json","./mainnet/v1/artifacts/plasma/ProxyTestImpl.json","./mainnet/v1/artifacts/plasma/ProxyTestImplStorageLayoutChange.json","./mainnet/v1/artifacts/plasma/Registry.json","./mainnet/v1/artifacts/plasma/RootChain.json","./mainnet/v1/artifacts/plasma/RootChainHeader.json","./mainnet/v1/artifacts/plasma/RootChainProxy.json","./mainnet/v1/artifacts/plasma/RootChainStorage.json","./mainnet/v1/artifacts/plasma/RootChainable.json","./mainnet/v1/artifacts/plasma/RootERC721.json","./mainnet/v1/artifacts/plasma/SlashingManager.json","./mainnet/v1/artifacts/plasma/StakeManager.json","./mainnet/v1/artifacts/plasma/StakeManagerProxy.json","./mainnet/v1/artifacts/plasma/StakeManagerStorage.json","./mainnet/v1/artifacts/plasma/StakeManagerTest.json","./mainnet/v1/artifacts/plasma/StakeManagerTestable.json","./mainnet/v1/artifacts/plasma/StakingInfo.json","./mainnet/v1/artifacts/plasma/StakingNFT.json","./mainnet/v1/artifacts/plasma/StateReceiver.json","./mainnet/v1/artifacts/plasma/StateSender.json","./mainnet/v1/artifacts/plasma/StateSyncerVerifier.json","./mainnet/v1/artifacts/plasma/TestMRC20.json","./mainnet/v1/artifacts/plasma/TestToken.json","./mainnet/v1/artifacts/plasma/TransferWithSigPredicate.json","./mainnet/v1/artifacts/plasma/TransferWithSigUtils.json","./mainnet/v1/artifacts/plasma/UpgradableProxy.json","./mainnet/v1/artifacts/plasma/ValidatorShare.json","./mainnet/v1/artifacts/plasma/ValidatorShareFactory.json","./mainnet/v1/artifacts/plasma/ValidatorShareProxy.json","./mainnet/v1/artifacts/plasma/ValidatorShareTest.json","./mainnet/v1/artifacts/plasma/WETH.json","./mainnet/v1/artifacts/plasma/WithdrawManager.json","./mainnet/v1/artifacts/plasma/WithdrawManagerHeader.json","./mainnet/v1/artifacts/plasma/WithdrawManagerProxy.json","./mainnet/v1/artifacts/plasma/WithdrawManagerStorage.json","./mainnet/v1/artifacts/pos/AccessControl.json","./mainnet/v1/artifacts/pos/AccessControlMixin.json","./mainnet/v1/artifacts/pos/ChainConstants.json","./mainnet/v1/artifacts/pos/ChildChainManager.json","./mainnet/v1/artifacts/pos/ChildChainManagerProxy.json","./mainnet/v1/artifacts/pos/ChildERC1155.json","./mainnet/v1/artifacts/pos/ChildERC20.json","./mainnet/v1/artifacts/pos/ChildERC721.json","./mainnet/v1/artifacts/pos/ChildMintableERC721.json","./mainnet/v1/artifacts/pos/ChildTunnel.json","./mainnet/v1/artifacts/pos/DummyERC1155.json","./mainnet/v1/artifacts/pos/DummyERC20.json","./mainnet/v1/artifacts/pos/DummyERC721.json","./mainnet/v1/artifacts/pos/DummyMintableERC721.json","./mainnet/v1/artifacts/pos/DummyStateSender.json","./mainnet/v1/artifacts/pos/EIP712Base.json","./mainnet/v1/artifacts/pos/ERC1155.json","./mainnet/v1/artifacts/pos/ERC1155Predicate.json","./mainnet/v1/artifacts/pos/ERC1155PredicateProxy.json","./mainnet/v1/artifacts/pos/ERC1155Receiver.json","./mainnet/v1/artifacts/pos/ERC165.json","./mainnet/v1/artifacts/pos/ERC20.json","./mainnet/v1/artifacts/pos/ERC20Predicate.json","./mainnet/v1/artifacts/pos/ERC20PredicateProxy.json","./mainnet/v1/artifacts/pos/ERC721.json","./mainnet/v1/artifacts/pos/ERC721Predicate.json","./mainnet/v1/artifacts/pos/ERC721PredicateProxy.json","./mainnet/v1/artifacts/pos/EtherPredicate.json","./mainnet/v1/artifacts/pos/EtherPredicateProxy.json","./mainnet/v1/artifacts/pos/ICheckpointManager.json","./mainnet/v1/artifacts/pos/IChildChainManager.json","./mainnet/v1/artifacts/pos/IChildToken.json","./mainnet/v1/artifacts/pos/IERC1155.json","./mainnet/v1/artifacts/pos/IERC1155MetadataURI.json","./mainnet/v1/artifacts/pos/IERC1155Receiver.json","./mainnet/v1/artifacts/pos/IERC165.json","./mainnet/v1/artifacts/pos/IERC20.json","./mainnet/v1/artifacts/pos/IERC721.json","./mainnet/v1/artifacts/pos/IERC721Enumerable.json","./mainnet/v1/artifacts/pos/IERC721Metadata.json","./mainnet/v1/artifacts/pos/IERC721Receiver.json","./mainnet/v1/artifacts/pos/IERCProxy.json","./mainnet/v1/artifacts/pos/IMintableERC721.json","./mainnet/v1/artifacts/pos/IRootChainManager.json","./mainnet/v1/artifacts/pos/IStateSender.json","./mainnet/v1/artifacts/pos/ITokenPredicate.json","./mainnet/v1/artifacts/pos/MaticWETH.json","./mainnet/v1/artifacts/pos/Merkle.json","./mainnet/v1/artifacts/pos/MerklePatriciaTest.json","./mainnet/v1/artifacts/pos/Migrations.json","./mainnet/v1/artifacts/pos/MintableERC1155Predicate.json","./mainnet/v1/artifacts/pos/MintableERC1155PredicateProxy.json","./mainnet/v1/artifacts/pos/MintableERC20Predicate.json","./mainnet/v1/artifacts/pos/MintableERC20PredicateProxy.json","./mainnet/v1/artifacts/pos/MintableERC721Predicate.json","./mainnet/v1/artifacts/pos/MintableERC721PredicateProxy.json","./mainnet/v1/artifacts/pos/MockCheckpointManager.json","./mainnet/v1/artifacts/pos/NativeMetaTransaction.json","./mainnet/v1/artifacts/pos/NetworkAgnostic.json","./mainnet/v1/artifacts/pos/Proxy.json","./mainnet/v1/artifacts/pos/ProxyTestImpl.json","./mainnet/v1/artifacts/pos/ProxyTestImplStorageLayoutChange.json","./mainnet/v1/artifacts/pos/RootChainManager.json","./mainnet/v1/artifacts/pos/RootChainManagerProxy.json","./mainnet/v1/artifacts/pos/RootChainManagerStorage.json","./mainnet/v1/artifacts/pos/RootTunnel.json","./mainnet/v1/artifacts/pos/UpgradableProxy.json","./networks.json","./testnet/mumbai/artifacts/fx-portal/FxChild.json","./testnet/mumbai/artifacts/fx-portal/FxERC1155ChildTunnel.json","./testnet/mumbai/artifacts/fx-portal/FxERC1155RootTunnel.json","./testnet/mumbai/artifacts/fx-portal/FxERC20ChildToken.json","./testnet/mumbai/artifacts/fx-portal/FxERC20ChildTunnel.json","./testnet/mumbai/artifacts/fx-portal/FxERC20RootToken.json","./testnet/mumbai/artifacts/fx-portal/FxERC20RootTunnel.json","./testnet/mumbai/artifacts/fx-portal/FxERC721ChildTunnel.json","./testnet/mumbai/artifacts/fx-portal/FxERC721RootTunnel.json","./testnet/mumbai/artifacts/fx-portal/FxRoot.json","./testnet/mumbai/artifacts/genesis/BorValidatorSet.json","./testnet/mumbai/artifacts/genesis/IStateReceiver.json","./testnet/mumbai/artifacts/genesis/Migrations.json","./testnet/mumbai/artifacts/genesis/StateReceiver.json","./testnet/mumbai/artifacts/genesis/System.json","./testnet/mumbai/artifacts/genesis/TestBorValidatorSet.json","./testnet/mumbai/artifacts/genesis/TestCommitState.json","./testnet/mumbai/artifacts/genesis/TestStateReceiver.json","./testnet/mumbai/artifacts/genesis/TestSystem.json","./testnet/mumbai/artifacts/genesis/ValidatorSet.json","./testnet/mumbai/artifacts/genesis/ValidatorVerifier.json","./testnet/mumbai/artifacts/plasma/BaseERC20.json","./testnet/mumbai/artifacts/plasma/ChainIdMixin.json","./testnet/mumbai/artifacts/plasma/ChildChain.json","./testnet/mumbai/artifacts/plasma/ChildERC20.json","./testnet/mumbai/artifacts/plasma/ChildERC20Proxified.json","./testnet/mumbai/artifacts/plasma/ChildERC721.json","./testnet/mumbai/artifacts/plasma/ChildERC721Mintable.json","./testnet/mumbai/artifacts/plasma/ChildERC721Proxified.json","./testnet/mumbai/artifacts/plasma/ChildToken.json","./testnet/mumbai/artifacts/plasma/ChildTokenProxy.json","./testnet/mumbai/artifacts/plasma/Common.json","./testnet/mumbai/artifacts/plasma/ContractReceiver.json","./testnet/mumbai/artifacts/plasma/ContractWitRevertingFallback.json","./testnet/mumbai/artifacts/plasma/ContractWithFallback.json","./testnet/mumbai/artifacts/plasma/ContractWithoutFallback.json","./testnet/mumbai/artifacts/plasma/DelegateProxy.json","./testnet/mumbai/artifacts/plasma/DepositManager.json","./testnet/mumbai/artifacts/plasma/DepositManagerHeader.json","./testnet/mumbai/artifacts/plasma/DepositManagerProxy.json","./testnet/mumbai/artifacts/plasma/DepositManagerStorage.json","./testnet/mumbai/artifacts/plasma/DrainStakeManager.json","./testnet/mumbai/artifacts/plasma/Drainable.json","./testnet/mumbai/artifacts/plasma/ECVerify.json","./testnet/mumbai/artifacts/plasma/ERC165.json","./testnet/mumbai/artifacts/plasma/ERC20.json","./testnet/mumbai/artifacts/plasma/ERC20Detailed.json","./testnet/mumbai/artifacts/plasma/ERC20Mintable.json","./testnet/mumbai/artifacts/plasma/ERC20NonTransferable.json","./testnet/mumbai/artifacts/plasma/ERC20Predicate.json","./testnet/mumbai/artifacts/plasma/ERC20PredicateBurnOnly.json","./testnet/mumbai/artifacts/plasma/ERC721.json","./testnet/mumbai/artifacts/plasma/ERC721Enumerable.json","./testnet/mumbai/artifacts/plasma/ERC721Full.json","./testnet/mumbai/artifacts/plasma/ERC721Metadata.json","./testnet/mumbai/artifacts/plasma/ERC721MetadataMintable.json","./testnet/mumbai/artifacts/plasma/ERC721Mintable.json","./testnet/mumbai/artifacts/plasma/ERC721PlasmaMintable.json","./testnet/mumbai/artifacts/plasma/ERC721Predicate.json","./testnet/mumbai/artifacts/plasma/ERC721PredicateBurnOnly.json","./testnet/mumbai/artifacts/plasma/ERCProxy.json","./testnet/mumbai/artifacts/plasma/ExitNFT.json","./testnet/mumbai/artifacts/plasma/FallbackManager.json","./testnet/mumbai/artifacts/plasma/GnosisSafe.json","./testnet/mumbai/artifacts/plasma/GnosisSafeProxy.json","./testnet/mumbai/artifacts/plasma/Governable.json","./testnet/mumbai/artifacts/plasma/Governance.json","./testnet/mumbai/artifacts/plasma/GovernanceLockable.json","./testnet/mumbai/artifacts/plasma/GovernanceLockableTest.json","./testnet/mumbai/artifacts/plasma/GovernanceProxy.json","./testnet/mumbai/artifacts/plasma/IDepositManager.json","./testnet/mumbai/artifacts/plasma/IERC165.json","./testnet/mumbai/artifacts/plasma/IERC20.json","./testnet/mumbai/artifacts/plasma/IERC721.json","./testnet/mumbai/artifacts/plasma/IERC721Enumerable.json","./testnet/mumbai/artifacts/plasma/IERC721Metadata.json","./testnet/mumbai/artifacts/plasma/IERC721Receiver.json","./testnet/mumbai/artifacts/plasma/IErcPredicate.json","./testnet/mumbai/artifacts/plasma/IGovernance.json","./testnet/mumbai/artifacts/plasma/IParentToken.json","./testnet/mumbai/artifacts/plasma/IPredicate.json","./testnet/mumbai/artifacts/plasma/IRootChain.json","./testnet/mumbai/artifacts/plasma/ISignatureValidator.json","./testnet/mumbai/artifacts/plasma/ISlashingManager.json","./testnet/mumbai/artifacts/plasma/IStakeManager.json","./testnet/mumbai/artifacts/plasma/IStakeManagerLocal.json","./testnet/mumbai/artifacts/plasma/IValidatorShare.json","./testnet/mumbai/artifacts/plasma/IWithdrawManager.json","./testnet/mumbai/artifacts/plasma/LibEIP712Domain.json","./testnet/mumbai/artifacts/plasma/LibTokenTransferOrder.json","./testnet/mumbai/artifacts/plasma/Lockable.json","./testnet/mumbai/artifacts/plasma/MRC20.json","./testnet/mumbai/artifacts/plasma/Marketplace.json","./testnet/mumbai/artifacts/plasma/MarketplacePredicate.json","./testnet/mumbai/artifacts/plasma/MarketplacePredicateTest.json","./testnet/mumbai/artifacts/plasma/MarketplaceToken.json","./testnet/mumbai/artifacts/plasma/MasterCopy.json","./testnet/mumbai/artifacts/plasma/MaticWETH.json","./testnet/mumbai/artifacts/plasma/Merkle.json","./testnet/mumbai/artifacts/plasma/Migrations.json","./testnet/mumbai/artifacts/plasma/MintableERC721Predicate.json","./testnet/mumbai/artifacts/plasma/MinterRole.json","./testnet/mumbai/artifacts/plasma/Module.json","./testnet/mumbai/artifacts/plasma/ModuleManager.json","./testnet/mumbai/artifacts/plasma/Ownable.json","./testnet/mumbai/artifacts/plasma/OwnableLockable.json","./testnet/mumbai/artifacts/plasma/OwnerManager.json","./testnet/mumbai/artifacts/plasma/ParentTokenMock.json","./testnet/mumbai/artifacts/plasma/PredicateUtils.json","./testnet/mumbai/artifacts/plasma/PriorityQueue.json","./testnet/mumbai/artifacts/plasma/Proxy.json","./testnet/mumbai/artifacts/plasma/ProxyStorage.json","./testnet/mumbai/artifacts/plasma/ProxyTestImpl.json","./testnet/mumbai/artifacts/plasma/ProxyTestImplStorageLayoutChange.json","./testnet/mumbai/artifacts/plasma/Registry.json","./testnet/mumbai/artifacts/plasma/RootChain.json","./testnet/mumbai/artifacts/plasma/RootChainHeader.json","./testnet/mumbai/artifacts/plasma/RootChainProxy.json","./testnet/mumbai/artifacts/plasma/RootChainStorage.json","./testnet/mumbai/artifacts/plasma/RootChainable.json","./testnet/mumbai/artifacts/plasma/RootERC721.json","./testnet/mumbai/artifacts/plasma/SlashingManager.json","./testnet/mumbai/artifacts/plasma/StakeManager.json","./testnet/mumbai/artifacts/plasma/StakeManagerProxy.json","./testnet/mumbai/artifacts/plasma/StakeManagerStorage.json","./testnet/mumbai/artifacts/plasma/StakeManagerTest.json","./testnet/mumbai/artifacts/plasma/StakeManagerTestable.json","./testnet/mumbai/artifacts/plasma/StakingInfo.json","./testnet/mumbai/artifacts/plasma/StakingNFT.json","./testnet/mumbai/artifacts/plasma/StateReceiver.json","./testnet/mumbai/artifacts/plasma/StateSender.json","./testnet/mumbai/artifacts/plasma/StateSyncerVerifier.json","./testnet/mumbai/artifacts/plasma/TestMRC20.json","./testnet/mumbai/artifacts/plasma/TestToken.json","./testnet/mumbai/artifacts/plasma/TransferWithSigPredicate.json","./testnet/mumbai/artifacts/plasma/TransferWithSigUtils.json","./testnet/mumbai/artifacts/plasma/UpgradableProxy.json","./testnet/mumbai/artifacts/plasma/ValidatorShare.json","./testnet/mumbai/artifacts/plasma/ValidatorShareFactory.json","./testnet/mumbai/artifacts/plasma/ValidatorShareProxy.json","./testnet/mumbai/artifacts/plasma/ValidatorShareTest.json","./testnet/mumbai/artifacts/plasma/WETH.json","./testnet/mumbai/artifacts/plasma/WithdrawManager.json","./testnet/mumbai/artifacts/plasma/WithdrawManagerHeader.json","./testnet/mumbai/artifacts/plasma/WithdrawManagerProxy.json","./testnet/mumbai/artifacts/plasma/WithdrawManagerStorage.json","./testnet/mumbai/artifacts/pos/AccessControl.json","./testnet/mumbai/artifacts/pos/AccessControlMixin.json","./testnet/mumbai/artifacts/pos/ChainConstants.json","./testnet/mumbai/artifacts/pos/ChildChainManager.json","./testnet/mumbai/artifacts/pos/ChildChainManagerProxy.json","./testnet/mumbai/artifacts/pos/ChildERC1155.json","./testnet/mumbai/artifacts/pos/ChildERC20.json","./testnet/mumbai/artifacts/pos/ChildERC721.json","./testnet/mumbai/artifacts/pos/ChildMintableERC721.json","./testnet/mumbai/artifacts/pos/ChildTunnel.json","./testnet/mumbai/artifacts/pos/DummyERC1155.json","./testnet/mumbai/artifacts/pos/DummyERC20.json","./testnet/mumbai/artifacts/pos/DummyERC721.json","./testnet/mumbai/artifacts/pos/DummyMintableERC721.json","./testnet/mumbai/artifacts/pos/DummyStateSender.json","./testnet/mumbai/artifacts/pos/EIP712Base.json","./testnet/mumbai/artifacts/pos/ERC1155.json","./testnet/mumbai/artifacts/pos/ERC1155Predicate.json","./testnet/mumbai/artifacts/pos/ERC1155PredicateProxy.json","./testnet/mumbai/artifacts/pos/ERC1155Receiver.json","./testnet/mumbai/artifacts/pos/ERC165.json","./testnet/mumbai/artifacts/pos/ERC20.json","./testnet/mumbai/artifacts/pos/ERC20Predicate.json","./testnet/mumbai/artifacts/pos/ERC20PredicateProxy.json","./testnet/mumbai/artifacts/pos/ERC721.json","./testnet/mumbai/artifacts/pos/ERC721Predicate.json","./testnet/mumbai/artifacts/pos/ERC721PredicateProxy.json","./testnet/mumbai/artifacts/pos/EtherPredicate.json","./testnet/mumbai/artifacts/pos/EtherPredicateProxy.json","./testnet/mumbai/artifacts/pos/ICheckpointManager.json","./testnet/mumbai/artifacts/pos/IChildChainManager.json","./testnet/mumbai/artifacts/pos/IChildToken.json","./testnet/mumbai/artifacts/pos/IERC1155.json","./testnet/mumbai/artifacts/pos/IERC1155MetadataURI.json","./testnet/mumbai/artifacts/pos/IERC1155Receiver.json","./testnet/mumbai/artifacts/pos/IERC165.json","./testnet/mumbai/artifacts/pos/IERC20.json","./testnet/mumbai/artifacts/pos/IERC721.json","./testnet/mumbai/artifacts/pos/IERC721Enumerable.json","./testnet/mumbai/artifacts/pos/IERC721Metadata.json","./testnet/mumbai/artifacts/pos/IERC721Receiver.json","./testnet/mumbai/artifacts/pos/IERCProxy.json","./testnet/mumbai/artifacts/pos/IMintableERC721.json","./testnet/mumbai/artifacts/pos/IRootChainManager.json","./testnet/mumbai/artifacts/pos/IStateSender.json","./testnet/mumbai/artifacts/pos/ITokenPredicate.json","./testnet/mumbai/artifacts/pos/MaticWETH.json","./testnet/mumbai/artifacts/pos/Merkle.json","./testnet/mumbai/artifacts/pos/MerklePatriciaTest.json","./testnet/mumbai/artifacts/pos/Migrations.json","./testnet/mumbai/artifacts/pos/MintableERC1155Predicate.json","./testnet/mumbai/artifacts/pos/MintableERC1155PredicateProxy.json","./testnet/mumbai/artifacts/pos/MintableERC20Predicate.json","./testnet/mumbai/artifacts/pos/MintableERC20PredicateProxy.json","./testnet/mumbai/artifacts/pos/MintableERC721Predicate.json","./testnet/mumbai/artifacts/pos/MintableERC721PredicateProxy.json","./testnet/mumbai/artifacts/pos/MockCheckpointManager.json","./testnet/mumbai/artifacts/pos/NativeMetaTransaction.json","./testnet/mumbai/artifacts/pos/NetworkAgnostic.json","./testnet/mumbai/artifacts/pos/Proxy.json","./testnet/mumbai/artifacts/pos/ProxyTestImpl.json","./testnet/mumbai/artifacts/pos/ProxyTestImplStorageLayoutChange.json","./testnet/mumbai/artifacts/pos/RootChainManager.json","./testnet/mumbai/artifacts/pos/RootChainManagerProxy.json","./testnet/mumbai/artifacts/pos/RootChainManagerStorage.json","./testnet/mumbai/artifacts/pos/RootTunnel.json","./testnet/mumbai/artifacts/pos/UpgradableProxy.json","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_10__","TransactionListFilters","activeFilters","assets","setFilter","applyFilters","toggle","toggleOpened","resetFilter","resetFilters","transition","filters","filterCategory","filterValues","TableCellHeader","filterValue","filterLabel","isChecked","filterName","prevTxs","txsPerPage","totalTxs","renderedTxs","lastBlockNumber","txsIndexes","parsedValue","loadTxs","enabledActions","hasActiveFilters","m","src_TransactionListFilters_TransactionListFilters","txHashKey","oldTokenName","oldIdleTokens","skipMigration","biconomyLimitReached","toggleSkipMigration","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_5__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_4__","executeAction","idleTokenToRedeem","_clientProtocolAmountsRedeem","gasLimitRedeem","callbackRedeem","callbackReceiptRedeem","toggleMetaTransactionsEnabled","checkMigrationContractApproved","migrationContractName","oldIdleTokensConverted","oldContractInfo","oldContractABI","biconomyLimits","disapproveMigration","approveMigration","migrationMethod","callbackMigrate","callbackReceiptMigrate","_skipRebalance","_migrationContract$me","biconomyChanged","usePermitChanged","fastBalanceSelectorChanged","batchMigrationEnabled","SkipMigrationComponent","react__WEBPACK_IMPORTED_MODULE_11___default","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_16__","rimble_ui__WEBPACK_IMPORTED_MODULE_20__","biconomyEnabled","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_13__","migrateTextBefore","migrateText","_TransactionField_TransactionField__WEBPACK_IMPORTED_MODULE_18__","_TxProgressBar_TxProgressBar__WEBPACK_IMPORTED_MODULE_17__","_FastBalanceSelector_FastBalanceSelector__WEBPACK_IMPORTED_MODULE_19__","functionName","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_14__","migrationImage","migrationTextProps","approveText","_TableRow_TableRow__WEBPACK_IMPORTED_MODULE_9__","Tos","h1","h2","listStyle","theme_dark","exit","TorusConnector","kwargs","Torus","api","rest","objectWithoutProperties","buttonPosition","init","login","getUserInfo","getPublicAddress","verifier","verifierId","logout","updateNetworkId","Connector","AuthereumConnector","Authereum","getProvider","enable","getAccounts","accounts","disable","constructor","GnosisSafeConnector","SafeAppConnector","safeLoaded","checkSafeApp","activate","getAccount","getSafeInfo","isSafeApp","deactivate","WalletLinkConnector","WalletLink","infuraUrl","appLogoUrl","walletLink","darkMode","makeWeb3Provider","disconnect","close","WalletConnectConnector","WalletConnectProvider","infuraId","InjectedConnector","Connectors","NetworkOnlyConnector","TrezorConnector","LedgerConnector","FortmaticConnector","PortisConnector","manifestEmail","REACT_APP_TREZOR_MANIFEST_EMAIL","manifestAppUrl","REACT_APP_TREZOR_MANIFEST_URL","fortmaticApiKey","REACT_APP_FORTMATIC_KEY_MAINNET","portisDAppId","REACT_APP_PORTIS_DAPP_ID","portisNetwork","REACT_APP_PORTIS_NETWORK","supportedNetworkURLs","Injected","Infura","providerURL","Trezor","TrezorApi","Ledger","WalletConnect","bridge","Fortmatic","FortmaticApi","logoutOnDeactivation","Portis","PortisApi","dAppId","AuthereumApi","TorusApi","buildEnv","enableLogging","host","showTorusButton","WrongNetworkBanner","NetworkUtil","isSupportedNetwork","components_WrongNetworkBanner","NoWeb3BrowserModal","renderContent","RimbleUtil","isMobileDevice","NoWalletModal","icononly","Outline","GeneralUtil","hasMetaMask","isMetaMask","isTrustWallet","isTrust","isCoinbaseWallet","hasDapper","DapperEthereum","isDapper","isOpera","isAndroid","isIos","MSStream","WrongNetworkModal","RimbleUtils","TransactionFeeModal","subtitle2","Web3ConnectionButtons","context","useWeb3Context","setConnector","walletProvider","connectionCallback","unsetConnector","isMetamask","isGnosisSafe","safe","browserWalletDetected","allowedConnectors","registerPage","registerPageByDefault","basicConnectorsName","injectedIndex","splice","gnosisIndex","connectorInfo","walletIcon","buttonStyle","ConnectionModal","showTxFees","currentSection","showInstructions","askCustomAddress","closeRemainingTime","customAddressError","newToEthereumChoice","toggleShowTxFees","setStoredSection","closeCountdown","setWalletChoice","choice","setCurrentSection","connectCustomAddress","updateCustomAddress","renderModalContent","TOSacceptance","react_router_dom","newToEthereum","showConnectionButtons","assertThisInitialized","marginBottom","renderFooter","components_TransactionFeeModal","ConnectionPendingModal","UserRejectedConnectionModal","sendMessageAgain","initAccount","LowFundsModal","showSecondary","toggleQRVisible","alignContent","as","h5","ConnectionModalUtil","components_NoWeb3BrowserModal","closeNoWeb3BrowserModal","noWeb3BrowserModalIsOpen","components_NoWalletModal","closeNoWalletModal","noWalletModalIsOpen","components_WrongNetworkModal","closeWrongNetworkModal","wrongNetworkModalIsOpen","components_ConnectionModal","validateAccount","closeConnectionModal","connectionModalIsOpen","accountValidated","components_ConnectionPendingModal","closeConnectionPendingModal","accountConnectionPending","components_UserRejectedConnectionModal","closeUserRejectedConnectionModal","userRejectedConnect","components_LowFundsModal","closeLowFundsModal","lowFundsModalIsOpen","ConnectionErrorModal","setFirstValidConnector","closeConnectionErrorModal","isLedger","connectionError","TransactionErrorModal","closeTransactionErrorModal","isLedgerError","transactionError","isSlowTxError","RimbleTransactionContext","createContext","currentWeb3","permitClient","web3Providers","accountBalance","initWeb3","maticPlasmaClient","accountBalanceLow","accountBalanceToken","checkPreflight","checkNetwork","accountInizialized","rejectValidation","accountValidationPending","initializeContracts","rejectAccountConnect","enableUnderlyingWithdraw","userRejectedValidation","transactionConnectionModalIsOpen","openLowFundsModal","openWrongNetworkModal","openNoWeb3BrowserModal","openConnectionErrorModal","openTransactionErrorModal","openConnectionPendingModal","openUserRejectedConnectionModal","openUserRejectedValidationModal","closeUserRejectedValidationModal","meta","setConnectorName","biconomyLoginProcessing","RimbleTransaction","handleNetworkChanged","_args2","reload","networkInitialized","connectGnosisSafe","testTransaction","createTransaction","addTransaction","errorMessage","isWalletConnectClosedModalError","customAddressChanged","contextAccountChanged","accountDisconnected","gnosisSafeLoaded","setNetwork","initCurrentWeb3","useWeb3Provider","web3InfuraRpc","connectorNameChanged","web3Host","web3Provider","forceCallback","polygonConfig","web3PolygonRpc","maticProvider","parentProvider","maticPOSClientConfig","maticPlasmaClientConfig","web3Callback","originalWeb3","biconomyWeb3Provider","_args7","netId","providerRpc","library","IFrameEthereumProvider","MaticJs","MaticPOSClient","web3Injected","callbackAfterLogin","setCallbackAfterLogin","isLogin","userContract","Biconomy","onEvent","READY","ERROR","useInfuraProvider","initContractWithoutSet","simpleIDInfo","simpleIDParams","SimpleID","wallets","shownNotifications","isError","race","$crisp","notificationId","content","Sentry","increaseAmount","requiredNetworkId","contractsToInitialize","availableStrategiesNetworks","_ref20","balanceOf","determineAccountLowBalance","openConnectionModal","_args21","getNetworkType","getNetworkId","currentNetworkChanged","requiredNetworkChanged","_args23","contractMethod","_this$state","manualConfirmationTimeoutId","confirmationCallback","manualConfirmation","receiptCallback","isDeniedTx","_args24","confirmationCount","confidenceThreshold","recentEvent","timeout","lastUpdated","updatedTransaction","openNoWalletModal","CrispClient","accountBalanceDAI","subscribedTransactions","connectionErrorModalOpened","transactionErrorModalOpened","Provider","ConnectionModalsUtil","components_TransactionErrorModal","components_ConnectionErrorModal","utilities_NetworkUtil","Consumer","governanceEnabled","offsetTop","ScrollToTop","pathname","useLocation","useEffect","PageNotFound","Header_styles","NetworkOverview","getNetworkCircleColor","circleColor","networkCircle","DebuggerButtons","Web3Debugger","components_NetworkOverview","Web3Debugger_DebuggerButtons","node","IdleCDO","IdleStrategy","IdleCDOTrancheRewards","TransactionToastMessages","started","confirmed","TransactionToastUtil","collectionHasNewObject","prevCollection","currentCollection","getNewObjectFromCollection","objectKey","getUpdatedObjectFromCollection","object","getTransactionFromCollection","identifier","collection","getUpdatedTransaction","currentTx","prevTx","processTransactionUpdates","showTransactionToast","toastMeta","getTransactionToastMeta","closeElem","transactionToastMeta","transactionAction","charAt","newMessage","Landing","lazy","Dashboard","Governance","App","currentEnv","selectedTab","connecting","genericError","selectedTheme","buyModalOpened","toastMessageProps","innerWidth","innerHeight","unsubscribeFromHistory","closeToastMessage","showToastMessage","processCustomParam","storedCachedData","_args","cachedKeyFound","widthChanged","heightChanged","tabIndex","envEnabled","loadAvailableTokens","warn","jQuery","setThemeMode","closeIframe","w","iFrames","getElementsByTagName","iframe","contentWindow","parents","loadCurrentEnvironment","loadCustomAddress","tokenChanged","strategyChanged","networkChanged","_this9","hasMetamask","store","themeDark","_this10","SuspenseLoader","web3_react_dist_default","web3Api","libraryName","web3_react_dist","recreateOnNetworkChange","recreateOnAccountChange","RimbleWeb3","needsPreflight","initContractCustomProvider","react_router","react","fallback","isDashboard","setToken","setStrategy","openBuyModal","handleMenuClick","selectTab","closeBuyModal","isGovernance","components_Header","src_Web3Debugger_Web3Debugger","exact","updateSelectedTab","expires","acceptOnScroll","cookieName","acceptOnScrollPercentage","marginTop","overflowY","src_Tos_Tos","src_PageNotFound_PageNotFound","utilities_TransactionToastUtil","Boolean","hostname","dsn","beforeSend","hint","originalException","ReactDOM","src_App_App","serviceWorker","ready","registration","unregister","footer","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1___default","rimble_ui__WEBPACK_IMPORTED_MODULE_3__","bgLayer","backgroundRepeat","backgroundPosition","backgroundSize","backgroundImage","subtitleProps","BackButton","VariationNumber","IconDirection","iconPos","loading-dots","loading-dots--dot","dot-keyframes","polished__WEBPACK_IMPORTED_MODULE_0__","darkBlue","blurple","consensysblue","readableColor","currYear","getFullYear","columnWidth","_ExtLink_ExtLink__WEBPACK_IMPORTED_MODULE_8__","role","aria-label","react_router_dom__WEBPACK_IMPORTED_MODULE_7__","ColTitle","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_9__","TwitterShareButton","share","parent","escape","customText","react_confetti_default","recycle","src_TwitterShareButton_TwitterShareButton","componentHasChildren","fieldPath","rimble_ui__WEBPACK_IMPORTED_MODULE_10__","customFieldName","customFieldProps","HeadingComponent","fieldName","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_1__","trancheChanged","protocolChanged","fieldChanged","buttonLabel","_CustomField_CustomField__WEBPACK_IMPORTED_MODULE_11__","feesCounter","react_countup__WEBPACK_IMPORTED_MODULE_8___default","_AssetField_AssetField__WEBPACK_IMPORTED_MODULE_10__","tooltipProps","formattedValue","_isBigNumber","earningsCurveStart","earningsCurveEnd","tokenAPY2","tokenAPR","allocationChartWidth","allocationChartHeight","resizeAllocationChart","aprChartEndTimestamp","aprChartStartTimestamp","aprChartData","apiResultsAprChart","totalItems","newPoint","aprChartWidth","aprChartHeight","resizeAprChart","aprChartType","aprChartProps","firstTokenPrice","firstIdleBlock","performanceChartWidth","performanceChartHeight","resizePerformanceChart","apr_end_date","apr_start_date","apr_start_timestamp","apiResultsPerformanceChart","idleTokenPerformance","performanceChartData","performanceChartType","performanceChartProps","amountToMigrate","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","earningsPercCurveDirection","earningsPercCurve","earningsPercDirection","oldAPY","tokenAPYNoGov","allocationChartRowElement","$allocationChartRowElement","css","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_9__","random","aprChartRowElement","$aprChartRowElement","lineWidth","defs","linearGradientDef","offset","react__WEBPACK_IMPORTED_MODULE_12___default","_CustomTooltip_CustomTooltip__WEBPACK_IMPORTED_MODULE_17__","protocolEarning","_CustomTooltip_CustomTooltipRow__WEBPACK_IMPORTED_MODULE_20__","PerformanceChartRowElement","$PerformanceChartRowElement","blocknumber","rimble_ui__WEBPACK_IMPORTED_MODULE_21__","icon1","icon2","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_14__","react_countup__WEBPACK_IMPORTED_MODULE_11___default","_VariationNumber_VariationNumber__WEBPACK_IMPORTED_MODULE_18__","earningsCurve","governanceTokenName","tooltipMode","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_16__","_AllocationChart_AllocationChart__WEBPACK_IMPORTED_MODULE_19__"],"mappings":"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","file":"static/js/main.52ffcdaa.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"trancheFlash\":\"TrancheWelcome_trancheFlash__2aaz5\",\"mobile\":\"TrancheWelcome_mobile__fIBQP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"PageNotFound_headerContainer__Ly5Tz\",\"headerBgFiller\":\"PageNotFound_headerBgFiller__1NzlO\",\"bgContainer\":\"PageNotFound_bgContainer__1Racj\",\"list\":\"PageNotFound_list__Cnz-b\",\"textContainer\":\"PageNotFound_textContainer__g_kTm\"};","import React, { Component } from 'react';\nimport { Flex, Link, Text } from \"rimble-ui\";\nimport RoundIconButton from '../RoundIconButton/RoundIconButton';\n\nclass Breadcrumb extends Component {\n  render() {\n\n    const showPathMobile = !!this.props.showPathMobile;\n\n    return (\n      <Flex\n        width={1}\n        id={'breadcrumb'}\n        alignItems={'center'}\n      >\n        {\n          this.props.handleClick && \n           <RoundIconButton\n             buttonProps={{\n               border:2,\n               width:'35px',\n               height:'35px'\n             }}\n             iconSize={'1.2em'}\n             iconName={'ArrowBack'}\n             handleClick={this.props.handleClick}\n           />\n        }\n        {\n          this.props.text && this.props.text.length>0 &&\n           <Link\n             ml={[2,3]}\n             fontSize={[1,2]}\n             fontWeight={3}\n             color={'cellText'}\n             hoverColor={'copyColor'}\n             onClick={this.props.handleClick}\n           >\n            {this.props.text}\n           </Link>\n        }\n        {\n          (!this.props.isMobile || showPathMobile) && this.props.path && this.props.path.length>0 &&\n            this.props.path.map((path,index) => {\n              const link = this.props.pathLink ? (this.props.pathLink[index] || null) : null;\n              const Component = link ? Link : Text;\n              return (\n                <Component\n                  pl={[1,3]}\n                  ml={[1,3]}\n                  fontWeight={3}\n                  fontSize={[1,2]}\n                  hoverColor={'copyColor'}\n                  style={ !this.props.isMobile ? {\n                    maxWidth:'30%',\n                    overflow: 'hidden',\n                    whiteSpace: 'nowrap',\n                    textOverflow: 'ellipsis',\n                    borderLeft: `1px solid ${this.props.theme.colors.divider}`\n                  } : null }\n                  key={`breadcrumb_path_${index}`}\n                  color={link ? 'cellText' : 'statValue'}\n                  onClick={link ? e => this.props.goToSection(link) : null}\n                >\n                  {path}\n                </Component>\n              );\n          })\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default Breadcrumb;","import React, { Component } from 'react';\nimport { Text, Loader } from \"rimble-ui\";\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass ShortHash extends Component {\n\n  state = {\n    text:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const hashChanged = prevProps.hash !== this.props.hash;\n    if (hashChanged){\n      this.loadData();\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async loadData(){\n    const resolveAddress = this.props.resolveAddress !== false;\n    let text = this.functionsUtil.shortenHash(this.props.hash);\n    const ensName = resolveAddress ? await this.functionsUtil.getENSName(this.props.hash) : null;\n    if (ensName){\n      text = ensName;\n    }\n    this.setStateSafe({\n      text\n    });\n  }\n\n  render() {\n    const loader = (<Loader size=\"20px\" />);\n    return this.state.text ? <Text display={'inline'} {...this.props}>{this.state.text}</Text> : loader;\n  }\n}\n\nexport default ShortHash;","import React, { Component } from 'react';\nimport {\n  Flex, Box\n} from \"rimble-ui\";\nimport styles from './LoadingSpinner.module.scss';\n\nclass LoadingSpinner extends Component {\n  render() {\n    return (\n      <Flex\n        alignItems={'center'}\n        justifyContent={'center'}\n      >\n        <Box className={[styles[\"loading-dots\"]]}>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n        </Box>\n      </Flex>\n    );\n  }\n}\n\nexport default LoadingSpinner;\n","import React, { Component } from \"react\";\nimport { Flex, Button } from \"rimble-ui\";\nimport LoadingSpinner from \"../LoadingSpinner/LoadingSpinner.js\";\n\nclass ButtonLoader extends Component {\n  render() {\n    return (\n      <Button onClick={this.props.handleClick} {...this.props.buttonProps}>\n        <Flex\n          flexDirection={\"column\"}\n          alignItems={\"center\"}\n          justifyContent={\"center\"}\n        >\n          <Flex width={1} display={this.props.isLoading ? \"flex\" : \"none\"}>\n            <LoadingSpinner />\n          </Flex>\n          <Flex width={1} display={this.props.isLoading ? \"none\" : \"flex\"}>\n            {this.props.buttonText}\n          </Flex>\n        </Flex>\n      </Button>\n    );\n  }\n}\n\nexport default ButtonLoader;\n","import { Icon } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\n\nclass RoundIconButton extends Component {\n  render() {\n    const buttonProps = Object.assign({\n      p:0,\n      border:1,\n      width:'40px',\n      height:'40px',\n      borderRadius:'50%',\n      mainColor:'backButtonBg',\n      disabled:this.props.disabled\n    },this.props.buttonProps);\n\n    buttonProps.minWidth = buttonProps.width;\n\n    return (\n       <RoundButton\n         buttonProps={buttonProps}\n         handleClick={this.props.handleClick}\n       >\n         <Icon\n           color={'copyColor'}\n           name={this.props.iconName}\n           size={ this.props.iconSize ? this.props.iconSize : '1.3em'}\n         />\n       </RoundButton>\n    );\n  }\n}\n\nexport default RoundIconButton;","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass SmartNumber extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  render() {\n    let formattedNumber = '-';\n    const number = typeof this.props.number !== 'undefined' && !isNaN(this.props.number) && this.props.number !== false && this.props.number !== null ? this.props.number : null;\n\n    if (number){\n      switch (this.props.type){\n        case 'money':\n          formattedNumber = this.functionsUtil.formatMoney(number,this.props.precision);\n        break;\n        default:\n          formattedNumber = this.functionsUtil.abbreviateNumber(number,this.props.decimals,this.props.maxPrecision,this.props.minPrecision);\n        break;\n      }\n    } else {\n      formattedNumber = '-';\n    }\n\n    const flexProps = {\n      width:1,\n      alignItems:'center',\n      flexDirection:'row',\n      justifyContent:'center'\n    };\n\n    // Replace props\n    if (this.props.flexProps && Object.keys(this.props.flexProps).length){\n      Object.keys(this.props.flexProps).forEach(p => {\n        flexProps[p] = this.props.flexProps[p];\n      });\n    }\n\n    const showUnit = this.props.unit && formattedNumber !== '-';\n    const unitPos = this.props.unitPos ? this.props.unitPos : 'right';\n\n    return (\n      <Flex\n        {...flexProps}\n      >\n        {\n          unitPos === 'left' && showUnit &&\n            <Text {...this.props.unitProps}>{this.props.unit}</Text>\n        }\n        <Text {...this.props}>{formattedNumber}</Text>\n        {\n          unitPos === 'right' && showUnit &&\n            <Text {...this.props.unitProps}>{this.props.unit}</Text>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default SmartNumber;\n","import React, { Component } from \"react\";\nimport { Flex, Text, Icon, Image } from \"rimble-ui\";\nimport DashboardCard from \"../DashboardCard/DashboardCard\";\n\nclass CardIconButton extends Component {\n  render() {\n    const cardProps = Object.assign(\n      {\n        py: 1,\n        width: \"auto\",\n        px: [\"12px\", 3]\n      },\n      this.props.cardProps\n    );\n\n    return (\n      <DashboardCard\n        cardProps={cardProps}\n        isInteractive={true}\n        isActive={this.props.isActive}\n        isDisabled={this.props.isDisabled}\n        handleClick={this.props.handleClick}\n        backgroundColor={\"blue\"}\n      >\n        <Flex\n          mx={this.props.margin ? this.props.margin : 0}\n          my={1}\n          alignItems={\"center\"}\n          flexDirection={\"row\"}\n          justifyContent={this.props.align ? this.props.align : \"center\"}\n        >\n          {this.props.image ? (\n            <Image\n              align={\"center\"}\n              src={this.props.image}\n              height={this.props.isMobile ? \"1.2em\" : \"1.4em\"}\n              width={this.props.isMobile ? \"1.2em\" : \"1.4em\"}\n              {...this.props.imageProps}\n            />\n          ) : this.props.useIconOnly ? (\n            <Icon\n              align={\"center\"}\n              name={this.props.icon}\n              size={this.props.isMobile ? \"1.2em\" : \"1.4em\"}\n              color={this.props.iconColor ? this.props.iconColor : \"redeem\"}\n              {...this.props.iconProps}\n            />\n          ) : (\n            <Flex\n              mr={this.props.isSidebar ? 0 : 2}\n              p={this.props.isSidebar ? 0 : [\"4px\", \"7px\"]}\n              borderRadius={\"50%\"}\n              alignItems={\"center\"}\n              justifyContent={\"center\"}\n              backgroundColor={\n                this.props.iconBgColor\n                  ? this.props.iconBgColor\n                  : this.props.theme.colors.transactions.actionBg.redeem\n              }\n            >\n              <Icon\n                align={\"center\"}\n                name={this.props.icon}\n                size={this.props.isMobile ? \"1.2em\" : \"1.4em\"}\n                color={this.props.iconColor ? this.props.iconColor : \"redeem\"}\n                {...this.props.iconProps}\n              />\n            </Flex>\n          )}\n          <Text fontWeight={3} fontSize={[1, 3]} {...this.props.textProps}>\n            {this.props.text}\n          </Text>\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default CardIconButton;\n","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass CustomTooltip extends Component {\n\n  render() {\n    return (\n      <DashboardCard\n        key={this.props.point.id}\n        cardProps={{\n          py:2,\n          px:3,\n          width:1,\n          left: this.props.point.data.itemPos>50 ? '-110%' : '0'\n        }}\n      >\n        <Flex\n          width={1}\n          flexDirection={'column'}\n        >\n          {\n            this.props.point.data.xFormatted && \n              <Text\n                mb={2}\n                fontSize={1}\n                fontWeight={3}\n                color={'cellText'}\n                textAlign={'left'}\n              >\n                {this.props.point.data.xFormatted}\n              </Text>\n          }\n          {this.props.children}\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default CustomTooltip;","import { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport globalConfigs from '../configs/globalConfigs';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass AllocationChart extends Component {\n  state = {\n    chartData:null,\n    chartProps:null,\n    selectedSlice:null,\n    totalAllocation:null,\n    protocolsAllocations:null,\n    protocolsAllocationsPerc:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    if (tokenChanged){\n      this.setStateSafe({\n        chartData:null,\n        chartProps:null,\n        selectedSlice:null,\n        totalAllocation:null,\n        protocolsAllocations:null,\n        protocolsAllocationsPerc:null\n      },() => {\n        this.loadData();\n      });\n    } else if (prevProps.isMobile !== this.props.isMobile){\n      this.loadData()\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async loadData(){\n    const {\n      totalAllocation,\n      protocolsAllocations,\n      protocolsAllocationsPerc\n    } = await this.functionsUtil.getTokenAllocation(this.props.tokenConfig);\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth: 0,\n      cornerRadius:0,\n      motionDamping:15,\n      innerRadius: 0.65,\n      motionStiffness:90,\n      colors:d => d.color,\n      onMouseEnter:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:data\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:null\n        });\n      },\n      tooltipFormat: v => v+'%',\n      sliceLabel: d => d.value+'%',\n      radialLabel: d => {\n        return null;\n      },\n      theme:{\n        tooltip: {\n          container: this.props.inline ? {\n            background: this.props.theme.colors.cardBg\n          } : {\n            display: 'none',\n          }\n        },\n        labels:{\n          text:{\n            fontWeight:600,\n            fontSize:this.props.isMobile ? 13 : 15,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      enableRadialLabels:false,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      enableSlicesLabels: !this.props.inline,\n      radialLabelsLinkColor:{ from: 'color' },\n      borderColor:{ from: 'color', modifiers: [ [ 'darker', 0.2 ] ] },\n      margin: this.props.inline ? {top:0,right:15,bottom:0,left:1} : (this.props.isMobile ? { top: 10, right: 15, bottom: 0, left: 15 } : { top: 10, right: 35, bottom: 0, left: 35 }),\n    };\n\n    const chartData = [];\n\n    this.props.tokenConfig.protocols.forEach((protocolInfo,i)=>{\n      const protocolName = protocolInfo.name;\n      const protocolAddr = protocolInfo.address.toLowerCase();\n      if (protocolsAllocationsPerc[protocolAddr]){\n        const protocolAllocationPercParsed = parseFloat(protocolsAllocationsPerc[protocolAddr].times(100).toFixed(2));\n        chartData.push({\n          id:protocolAddr,\n          name:protocolName,\n          value:protocolAllocationPercParsed,\n          color:'hsl('+globalConfigs.stats.protocols[protocolName].color.hsl.join(',')+')',\n          label: globalConfigs.stats.protocols[protocolName].label ? globalConfigs.stats.protocols[protocolName].label : this.functionsUtil.capitalize(protocolName)\n        });\n      }\n    });\n\n    this.setStateSafe({\n      chartData,\n      chartProps,\n      totalAllocation,\n      protocolsAllocations,\n      protocolsAllocationsPerc\n    });\n  }\n\n  render() {\n    \n    const selectedSlice = this.state.selectedSlice !== null && this.state.protocolsAllocations[this.state.selectedSlice.id] ? this.state.protocolsAllocations[this.state.selectedSlice.id] : false;\n    const protocolIcon = this.state.selectedSlice !== null ? (globalConfigs.stats.protocols[this.state.selectedSlice.name] && globalConfigs.stats.protocols[this.state.selectedSlice.name].icon ? globalConfigs.stats.protocols[this.state.selectedSlice.name].icon : `${this.state.selectedSlice.name}.svg`) : null;\n\n    return (\n      <Flex\n        width={1}\n        position={'relative'}\n      >\n        {\n          this.state.totalAllocation && !this.props.inline &&\n            <Flex\n              zIndex={0}\n              top={['23%','25%']}\n              left={['20%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              position={'absolute'}\n              width={['60%','46%']}\n              height={['53%','46%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                selectedSlice ? (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={`/images/protocols/${protocolIcon}`}\n                    />\n                    <SmartNumber\n                      fontSize={[3,4]}\n                      decimals={3}\n                      fontWeight={4}\n                      maxPrecision={5}\n                      number={selectedSlice}\n                    />\n                    <Text\n                      fontSize={[1,2]}\n                      fontWeight={3}\n                      color={'cellTitle'}\n                    >\n                      Funds in {this.state.selectedSlice.label}\n                    </Text>\n                  </Flex>\n                ) : (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={`/images/idle-mark.png`}\n                    />\n                    <SmartNumber\n                      unitProps={{\n                        ml:2,\n                        fontWeight:3,\n                        fontSize:[3,4]\n                      }}\n                      decimals={3}\n                      fontWeight={4}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      number={this.state.totalAllocation}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      Total funds\n                    </Text>\n                  </Flex>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          showLoader={true}\n          {...this.props}\n          {...this.state.chartProps}\n          data={this.state.chartData}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default AllocationChart;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\n\nclass CustomTooltipRow extends Component {\n\n  render() {\n    return (\n      <Flex\n        mb={2}\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n      >\n        <Flex\n          pr={2}\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-start'}\n        > \n          {\n            this.props.color && \n            <Box\n              mr={2}\n              width={'10px'}\n              height={'10px'}\n              borderRadius={'50%'}\n              backgroundColor={this.props.color}\n            >\n            </Box>\n          }\n          <Text\n            fontSize={1}\n            fontWeight={2}\n            textAlign={'left'}\n            color={'dark-gray'}\n            style={{\n              whiteSpace:'nowrap',\n              textTransform:'capitalize'\n            }}\n          >\n            {this.props.label}\n          </Text>\n        </Flex>\n        <Flex\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-end'}\n        >\n          <Text\n            fontSize={1}\n            fontWeight={3}\n            color={'cellText'}\n            textAlign={'right'}\n            style={{\n              whiteSpace:'nowrap'\n            }}\n            dangerouslySetInnerHTML={{\n              __html: this.props.value\n            }}\n          >\n          </Text>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default CustomTooltipRow;","import React, { Component } from 'react';\nimport { Box, Flex, Icon, Text, Heading } from 'rimble-ui'\n// import styles from './Faquestion.module.scss';\n\nclass Faquestion extends Component {\n  state = {\n    isShowingAnswer: false\n  };\n  toggleAnswer(e) {\n    e.preventDefault();\n    this.setState(state => ({...state, isShowingAnswer: !state.isShowingAnswer}));\n  };\n  render() {\n    return (\n      <Flex\n        my={[3,3]}\n        py={[3,3]}\n        px={[4,4]}\n        flexDirection={'column'}\n        alignItems={'baseline'}\n        justifyContent={'center'}\n        backgroundColor={'cardBg'}\n        borderRadius={ this.props.isOpened ? '30px' : '50px' }\n        boxShadow={1}\n      >\n        <Flex flexDirection={'row'} alignItems={'center'} width={1} onClick={this.props.handleClick} style={{cursor: 'pointer'}}>\n          <Box width={4/5}>\n            <Heading.h4\n              my={0}\n              fontWeight={3}\n              fontSize={[1,2]}\n              fontFamily={'sansSerif'}\n              color={this.props.isOpened ? 'link' : 'dark-gray'}\n            >\n              {this.props.question}\n            </Heading.h4>\n          </Box>\n          <Flex\n            width={1/5}\n            justifyContent={'flex-end'}\n          >\n            <Icon\n              size={\"1.5em\"}\n              color={this.props.isOpened ? 'link' : 'copyColor'}\n              name={this.props.isOpened ? 'KeyboardArrowUp' : 'KeyboardArrowDown'}\n            />\n          </Flex>\n        </Flex>\n        <Flex\n          width={1}\n        >\n          {this.props.isOpened &&\n            <Text.p\n              textAlign={'justify'}\n              fontSize={[1,2]}\n              dangerouslySetInnerHTML={{ __html: this.props.answer }}\n            >\n            </Text.p>\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default Faquestion;\n","import { Flex } from \"rimble-ui\";\nimport Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport CustomList from '../CustomList/CustomList';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass Base extends Component {\n\n  state = {\n    loaded:false,\n    activeCoverages:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadCoverages();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    if (accountChanged){\n      this.loadCoverages();\n    }\n  }\n\n  async loadCoverages(){\n    if (!this.props.account){\n      return false;\n    }\n\n    const coverages = await this.functionsUtil.getActiveCoverages(this.props.account);\n    const activeCoverages = [];\n    if (coverages && coverages.length>0){\n      coverages.forEach( c => {\n        if (!this.props.availableTokens || !this.props.availableTokens.length || this.props.availableTokens.includes(c.collateral)){\n          const statusColors = this.props.theme.colors.transactions.status;\n          let statusIcon = 'VerifiedUser';\n          let statusColor = statusColors.completed;\n          switch (c.status){\n            case 'Expired':\n              statusIcon = 'Error';\n              statusColor = statusColors.failed;\n            break;\n            case 'Claimed':\n              statusIcon = 'Error';\n              statusColor = statusColors.pending;\n            break;\n            default:\n            case 'Active':\n              statusIcon = 'VerifiedUser';\n              statusColor = statusColors.completed;\n            break;\n          }\n\n          const statusIconProps = {\n            color:statusColor\n          };\n\n          const portfolioCoverage = c.portfolioCoverage || 'N/A';\n\n          activeCoverages.push(Object.assign(c,{\n            statusIcon,\n            statusIconProps,\n            portfolioCoverage\n          }));\n        }\n      })\n    }\n\n    this.setState({\n      loaded:true,\n      activeCoverages\n    });\n  }\n\n  render() {\n\n    if (!this.state.loaded){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          this.props.title && ((this.state.activeCoverages && this.state.activeCoverages.length>0) || this.props.children) && (\n            <Title\n              {...this.props.titleProps}\n            >\n              {this.props.title}\n            </Title>\n          )\n        }\n        {\n          this.state.activeCoverages && this.state.activeCoverages.length>0 ? (\n            <CustomList\n              rows={this.state.activeCoverages}\n              handleClick={ this.props.isMobile ? (props) => props.row.status!=='Expired' && props.row.fileClaimUrl && this.functionsUtil.openWindow(props.row.fileClaimUrl) : null }\n              cols={[\n                {\n                  title:'PROTOCOL',\n                  props:{\n                    width:[0.28,0.14]\n                  },\n                  fields:[\n                    {\n                      type:'image',\n                      props:{\n                        mr:[1,2],\n                        size:this.props.isMobile ? '1.2em' : '1.8em'\n                      },\n                      path:[this.props.themeMode === 'dark' ? 'protocolImageDark' : 'protocolImage']\n                    },\n                    {\n                      type:'text',\n                      path:['protocolName'],\n                    }\n                  ]\n                },\n                {\n                  title:'TOKEN',\n                  props:{\n                    width:[0.33,0.14]\n                  },\n                  fields:[\n                    {\n                      type:'image',\n                      props:{\n                        mr:[1,2],\n                        size:this.props.isMobile ? '1.2em' : '1.8em'\n                      },\n                      path:['collateralIcon']\n                    },\n                    {\n                      type:'text',\n                      path:['collateral'],\n                    }\n                  ]\n                },\n                {\n                  title:'AMOUNT',\n                  props:{\n                    width:[0.24, 0.12],\n                  },\n                  fields:[\n                    {\n                      type:'number',\n                      path:['balance'],\n                      props:{\n                        decimals: this.props.isMobile ? 2 :  4,\n                      }\n                    },\n                    {\n                      type:'text',\n                      path:['token'],\n                      props:{\n                        ml:[1,2],\n                        style:{\n                          textTransform:'uppercase'\n                        }\n                      }\n                    }\n                  ]\n                },\n                {\n                  mobile:false,\n                  title:'EXPIRATION DATE',\n                  props:{\n                    width:0.19,\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'text',\n                      path:['expirationDate'],\n                      props:{\n                        \n                      }\n                    },\n                  ]\n                },\n                {\n                  mobile:false,\n                  title:'COVERED FUNDS',\n                  props:{\n                    width:0.14,\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'text',\n                      path:['portfolioCoverage'],\n                      props:{\n                        \n                      }\n                    },\n                  ]\n                },\n                {\n                  title:'STATUS',\n                  props:{\n                    width:[0.15,0.12],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'icon',\n                      name:'custom',\n                      path:['statusIcon'],\n                      props:{\n                        mr:[1,2],\n                        size:this.props.isMobile ? '1.2em' : '1.8em'\n                      }\n                    },\n                    {\n                      mobile:false,\n                      name:'custom',\n                      path:['status'],\n                      props:{\n                        style:{\n                          textTransform:'capitalize'\n                        }\n                      }\n                    }\n                  ]\n                },\n                {\n                  title:'',\n                  mobile:false,\n                  props:{\n                    width:0.17,\n                  },\n                  parentProps:{\n                    width:1\n                  },\n                  fields:[\n                    {\n                      type:'button',\n                      name:'custom',\n                      funcProps:{\n                        label:(props) => (props.row.actionLabel),\n                        disabled:(props) => (props.row.actionDisabled)\n                      },\n                      props:{\n                        width:1,\n                        fontSize:3,\n                        fontWeight:3,\n                        height:'45px',\n                        borderRadius:4,\n                        boxShadow:null,\n                        mainColor:'redeem',\n                        size: this.props.isMobile ? 'small' : 'medium',\n                        handleClick:(props) => props.row.status!=='Expired' && props.row.actionUrl && this.functionsUtil.openWindow(props.row.actionUrl)\n                      }\n                    }\n                  ]\n                }\n              ]}\n              {...this.props}\n            />\n          ) : this.props.children\n        }\n      </Flex>\n    )\n  }\n}\n\nexport default Base;\n","import { Line } from '@nivo/line';\nimport React, { Component } from 'react';\n// import { linearGradientDef } from '@nivo/core'\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport ChartCustomTooltip from '../ChartCustomTooltip/ChartCustomTooltip';\nimport ChartCustomTooltipRow from '../ChartCustomTooltipRow/ChartCustomTooltipRow';\n\nclass PortfolioEquity extends Component {\n  state = {\n    startDate:null,\n    chartData:null,\n    chartProps:null,\n    chartwidth:null,\n    chartHeight:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadChartData();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const quickDateSelectionChanged = prevProps.quickDateSelection !== this.props.quickDateSelection;\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n    if (tokenChanged || quickDateSelectionChanged){\n      this.setState({\n        chartData:null\n      },() => {\n        this.componentDidMount();\n      });\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    if (mobileChanged || themeModeChanged){\n      this.loadChartData();\n    }\n  }\n\n  async loadChartData() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    const etherscanTxs = await this.functionsUtil.getEtherscanTxs(this.props.account,0,'latest',enabledTokens);\n\n    // console.log('etherscanTxs',etherscanTxs);\n\n    const chartData = [];\n    let tokensBalance = {};\n    let firstTxTimestamp = null;\n\n    await this.functionsUtil.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      tokensBalance[selectedToken] = [];\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        let amountLent = this.functionsUtil.BNify(0);\n\n        filteredTxs.forEach((tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || !tx.action || (tx.status && tx.status === 'Pending')){\n            return false;\n          }\n          \n          firstTxTimestamp = firstTxTimestamp ? Math.min(firstTxTimestamp,parseInt(tx.timeStamp)) : parseInt(tx.timeStamp);\n\n          const tokenAmount = this.functionsUtil.BNify(tx.tokenAmount);\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n            case 'CurveOut':\n              amountLent = amountLent.plus(tokenAmount);\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.functionsUtil.BNify(0);\n          }\n\n          const balance = amountLent;\n          const action = tx.action;\n          const timeStamp = parseInt(tx.timeStamp);\n          const tokenPrice = this.functionsUtil.BNify(tx.tokenPrice);\n          const idleTokens = this.functionsUtil.BNify(tx.idleTokens);\n\n          if (!tokenPrice.isNaN() && !tokenPrice.isNaN()){\n            tokensBalance[selectedToken].push({\n              action,\n              balance,\n              timeStamp,\n              tokenPrice,\n              idleTokens,\n              tokenAmount\n            });\n          }\n        });\n      }\n    });\n\n    // console.log('tokensBalance',tokensBalance);\n\n    // Calculate Start Date\n    let startDate = null;\n    const currentDate = this.functionsUtil.strToMoment(new Date());\n\n    switch (this.props.quickDateSelection){\n      case 'week':\n        startDate = currentDate.clone().subtract(1,'week');\n      break;\n      case 'month':\n        startDate = currentDate.clone().subtract(1,'month');\n      break;\n      case 'month3':\n        startDate = currentDate.clone().subtract(3,'month');\n      break;\n      case 'month6':\n        startDate = currentDate.clone().subtract(6,'month');\n      break;\n      default:\n        startDate = null;\n      break;\n    }\n\n    const days = {};\n    let prevBalances = {};\n    let prevTimestamp = null;\n    let minChartValue = null;\n    let maxChartValue = null;\n    let aggregatedBalance = null;\n    const aggregatedBalancesKeys = {};\n    const tokensBalancesPerDate = {};\n    const currTimestamp = parseInt(new Date().getTime()/1000)+86400;\n\n    const tokensData = {};\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      const tokenAddress = this.functionsUtil.getAvailableTokenAddress(token,this.props.selectedStrategy);\n      tokensData[token] = await this.functionsUtil.getTokenApiData(tokenAddress,isRisk,firstTxTimestamp,null,false,3600);\n    });\n\n    const idleTokenBalance = {};\n\n    for (let timeStamp=firstTxTimestamp;timeStamp<=currTimestamp;timeStamp+=this.props.frequencySeconds){\n\n      const foundBalances = {};\n      const tokensBalances = {};\n      timeStamp = Math.min(currTimestamp,timeStamp);\n      aggregatedBalance = this.functionsUtil.BNify(0);\n\n      // await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      // eslint-disable-next-line\n      Object.keys(tokensBalance).forEach(token => {\n\n        let lastTokenData = null;\n        const lastTokenDataUnfiltered = Object.values(tokensData[token]).pop();\n        const filteredTokenData = tokensData[token].filter(tx => (tx.timestamp>=prevTimestamp && tx.timestamp<=timeStamp));\n        if (filteredTokenData && filteredTokenData.length){\n          lastTokenData = filteredTokenData.pop();\n        }\n\n        if (!idleTokenBalance[token]){\n          idleTokenBalance[token] = this.functionsUtil.BNify(0);\n        }\n\n        const tokenConfig = this.props.availableTokens[token];\n        const tokenDecimals = tokenConfig.decimals;\n        let filteredBalances = tokensBalance[token].filter(tx => (tx.timeStamp<=timeStamp && (!prevTimestamp || tx.timeStamp>prevTimestamp)));\n        \n        if (!filteredBalances.length){\n          if (prevBalances && prevBalances[token]){\n            filteredBalances = prevBalances[token];\n            const lastFilteredTx = Object.assign([],filteredBalances).pop();\n            const currentBalance = parseFloat(lastFilteredTx.balance);\n\n            // Take idleToken price from API and calculate new balance\n            if (currentBalance>0 && timeStamp>firstTxTimestamp && lastTokenData){\n              const idleTokens = idleTokenBalance[token];\n              const idlePrice = this.functionsUtil.fixTokenDecimals(lastTokenData.idlePrice,tokenDecimals);\n              let newBalance = idleTokens.times(idlePrice);\n\n              // Set new balance and tokenPrice\n              lastFilteredTx.balance = newBalance;\n              lastFilteredTx.tokenPrice = idlePrice;\n              filteredBalances = [lastFilteredTx];\n            }\n          } else {\n            filteredBalances = [{\n              balance:this.functionsUtil.BNify(0),\n              tokenPrice:this.functionsUtil.BNify(0)\n            }];\n          }\n        } else {\n          filteredBalances.forEach(tx => {\n            switch (tx.action){\n              case 'Swap':\n              case 'Deposit':\n              case 'Migrate':\n              case 'Receive':\n              case 'CurveOut':\n                idleTokenBalance[token] = idleTokenBalance[token].plus(tx.idleTokens);\n              break;\n              default:\n                idleTokenBalance[token] = idleTokenBalance[token].minus(tx.idleTokens);\n                if (idleTokenBalance[token].lt(0)){\n                  idleTokenBalance[token] = this.functionsUtil.BNify(0);\n                }\n              break;\n            }\n          });\n        }\n\n        const lastTx = Object.assign([],filteredBalances).pop();\n        // let lastTxBalance = this.functionsUtil.BNify(lastTx.balance);\n        let lastTxBalance = idleTokenBalance[token].times(lastTx.tokenPrice);\n\n        if (lastTxBalance.gt(0)){\n          // Convert token balance to USD\n          let tokenUsdConversionRate = null;\n          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'conversionRateField']);\n          if (!this.props.chartToken && conversionRateField){\n            const conversionRate = lastTokenData && lastTokenData[conversionRateField] ? lastTokenData[conversionRateField] : (lastTokenDataUnfiltered && lastTokenDataUnfiltered[conversionRateField] ? lastTokenDataUnfiltered[conversionRateField] : null);\n            if (conversionRate){\n              tokenUsdConversionRate = this.functionsUtil.fixTokenDecimals(conversionRate,18);\n              if (tokenUsdConversionRate.gt(0)){\n                lastTxBalance = lastTxBalance.times(tokenUsdConversionRate);\n              }\n            }\n          }\n          \n          tokensBalances[token] = lastTxBalance;\n\n          aggregatedBalance = aggregatedBalance.plus(lastTxBalance);\n        }\n\n        foundBalances[token] = filteredBalances;\n      });\n\n      let momentDate = this.functionsUtil.strToMoment(timeStamp*1000);\n\n      if (startDate === null || (momentDate.isSameOrAfter(startDate) && momentDate.isSameOrBefore(new Date(),'day'))){\n        \n        // if (momentDate.isAfter(new Date(),'day')){\n        //   momentDate = this.functionsUtil.strToMoment(new Date());\n        // }\n\n        // Force date to midnight\n        const formattedDate = momentDate.format('YYYY/MM/DD 00:00');\n\n        // Save days for axisBottom format\n        days[momentDate.format('YYYY/MM/DD')] = 1;\n\n        aggregatedBalance = parseFloat(parseFloat(aggregatedBalance.toFixed(6)));\n\n        tokensBalancesPerDate[formattedDate] = tokensBalances;\n        aggregatedBalancesKeys[formattedDate] = aggregatedBalance;\n\n        // console.log(formattedDate,tokensBalances);\n\n        minChartValue = minChartValue === null ? aggregatedBalance : Math.min(minChartValue,aggregatedBalance);\n        maxChartValue = maxChartValue === null ? aggregatedBalance : Math.max(maxChartValue,aggregatedBalance);\n      }\n\n      prevTimestamp = timeStamp;\n      prevBalances = foundBalances;\n    }\n\n    const aggregatedBalances = Object.keys(aggregatedBalancesKeys).map(date => ({\n      x:date,\n      y:aggregatedBalancesKeys[date],\n      balances:tokensBalancesPerDate[date]\n    }));\n\n    let itemIndex = 0;\n    aggregatedBalances.forEach( (item,index) => {\n      const itemPos = Math.floor(itemIndex/aggregatedBalances.length*100);\n      aggregatedBalances[index].itemPos = itemPos;\n      itemIndex++;\n    });\n\n    // debugger;\n\n    /*\n    aggregatedBalances.push({\n      x:momentDate.format('YYYY/MM/DD HH:mm'),\n      y:aggregatedBalance\n    });\n    */\n\n    // Add day before to start with zero balance\n    /*\n    const firstTxMomentDate = this.functionsUtil.strToMoment(firstTxTimestamp*1000);\n    if ((startDate === null || startDate.isSameOrBefore(firstTxMomentDate)) && aggregatedBalances.length){\n      const firstItem = aggregatedBalances[0];\n      const firstDate = this.functionsUtil.strToMoment(firstItem.x,'YYYY/MM/DD HH:mm');\n      firstDate.subtract(1,'day');\n      aggregatedBalances.unshift({\n        x:firstDate.format('YYYY/MM/DD HH:mm'),\n        y:0\n      });\n    }\n    */\n\n    const chartToken = this.props.chartToken ? this.props.chartToken.toUpperCase() : 'USD';\n\n    // Add token Data\n    chartData.push({\n      id:chartToken,\n      color: 'hsl('+ this.functionsUtil.getGlobalConfig(['stats','tokens',chartToken,'color','hsl']).join(',')+')',\n      data:aggregatedBalances\n    });\n\n    let yFormatDecimals = 2;\n    if (maxChartValue-minChartValue<1){\n      yFormatDecimals = 4;\n    }\n\n    if (maxChartValue === minChartValue){\n      minChartValue = Math.max(0,maxChartValue-1);\n    }\n\n    const maxGridLines = 5;\n    const gridYStep = (maxChartValue-minChartValue)/maxGridLines;\n    const gridYValues = [];\n    for (let i=0;i<=maxGridLines;i++){\n      const gridYValue = parseFloat(parseFloat(minChartValue+(i*gridYStep)).toFixed(6));\n      gridYValues.push(gridYValue);\n    }\n    \n    let axisBottomIndex = 0;\n    const axisBottomMaxValues = 10;\n    const daysCount = Object.values(days).length;    \n    const daysFrequency = Math.max(1,Math.ceil(daysCount/axisBottomMaxValues));\n\n    const chartProps = {\n      xScale:{\n        type: 'time',\n        format: '%Y/%m/%d %H:%M',\n      },\n      yScale:{\n        type: 'linear',\n        stacked: false,\n        min: minChartValue,\n        max: maxChartValue\n      },\n      xFormat:'time:%b %d %Y',\n      yFormat:value => this.functionsUtil.formatMoney(value,yFormatDecimals),\n      axisBottom: this.props.isMobile ? null : {\n        legend: '',\n        tickSize:0,\n        tickPadding: 15,\n        orient: 'bottom',\n        legendOffset: 36,\n        tickValues:'every day',\n        legendPosition: 'middle',\n        format: (value) => {\n          if (axisBottomIndex++ % daysFrequency === 0){\n            return this.functionsUtil.strToMoment(value,'YYYY/MM/DD HH:mm').format('MMM DD')\n          }\n        },\n      },\n      gridYValues,\n      pointSize:0,\n      useMesh:true,\n      axisLeft: this.props.isMobile ? null : {\n        legend: '',\n        tickSize: 0,\n        orient: 'left',\n        tickPadding: 10,\n        tickRotation: 0,\n        legendOffset: -70,\n        tickValues:gridYValues,\n        legendPosition: 'middle',\n        format: v => this.functionsUtil.abbreviateNumber(v,2),\n      },\n      animate:true,\n      pointLabel:'y',\n      enableArea:true,\n      enableSlices:'x',\n      enableGridY:true,\n      curve:'monotoneX',\n      enableGridX:false,\n      pointBorderWidth:1,\n      colors:d => d.color,\n      pointLabelYOffset:-12,\n      areaBaselineValue:minChartValue,\n      pointColor:{ from: 'color', modifiers: []},\n      areaOpacity:this.props.themeMode === 'light' ? 0.1 : 0.5,\n      theme:{\n        axis: {\n          ticks: {\n            text: {\n              fontSize:12,\n              fontWeight:600,\n              fill:this.props.theme.colors.legend,\n              fontFamily:this.props.theme.fonts.sansSerif\n            }\n          }\n        },\n        grid: {\n          line: {\n            stroke: this.props.theme.colors.lineChartStroke, strokeDasharray: '8 4'\n          }\n        },\n      },\n      /*\n      defs:[\n        linearGradientDef('gradientA', [\n          { offset: 0, color: 'inherit' },\n          { offset: 100, color: 'inherit', opacity: 0 },\n        ]),\n      ],\n      fill:[{ match: '*', id: 'gradientA' }],\n      */\n      margin: this.props.isMobile ? { top: 20, right: 25, bottom: 25, left: 20 } : { top: 30, right: 50, bottom: 45, left: 60 },\n      sliceTooltip:(slideData) => {\n        const { slice } = slideData;\n        const point = slice.points[0];\n        return (\n          <ChartCustomTooltip\n            point={point}\n          >\n            <ChartCustomTooltipRow\n              color={point.color}\n              label={point.serieId}\n              value={`$ ${point.data.yFormatted}`}\n            />\n            {\n            (typeof point.data.balances === 'object' && Object.keys(point.data.balances).length>0) &&\n              Object.keys(point.data.balances).map(token => {\n                if (token === point.serieId){\n                  return null;\n                }\n                const color = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'color','hex']);\n                const balance = point.data.balances[token];\n                let formattedBalance = this.functionsUtil.formatMoney(balance,2);\n                if (parseFloat(balance)>=0.01){\n                  return (\n                    <ChartCustomTooltipRow\n                      label={token}\n                      color={color}\n                      key={`row_${token}`}\n                      value={`$ ${formattedBalance}`}\n                    />\n                  );\n                }\n                return null;\n              })\n            }\n          </ChartCustomTooltip>\n        );\n      }\n    };\n\n    this.setState({\n      chartData,\n      chartProps\n    });\n  }\n\n  render() {\n    return (\n      <GenericChart\n        type={Line}\n        showLoader={true}\n        {...this.state.chartProps}\n        data={this.state.chartData}\n        parentId={this.props.parentId}\n        height={this.props.chartHeight}\n        parentIdHeight={this.props.parentIdHeight}\n      />\n    );\n  }\n}\n\nexport default PortfolioEquity;","import Select from 'react-select';\nimport React, { Component } from 'react';\nimport { Flex, Text, Input } from \"rimble-ui\";\nimport styles from './GenericSelector.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass GenericSelector extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadComponents();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const optionsChanged = JSON.stringify(prevProps.options) !== JSON.stringify(this.props.options);\n    const defaultValueChanged = JSON.stringify(prevProps.defaultValue) !== JSON.stringify(this.props.defaultValue);\n    const componentsChanged = prevProps.CustomOptionValue !== this.props.CustomOptionValue || prevProps.CustomValueContainer !== this.props.CustomValueContainer;\n\n    if (optionsChanged || selectedTokenChanged || defaultValueChanged || componentsChanged){\n      this.loadComponents();\n    }\n  }\n\n  async loadComponents(){\n    \n    const ControlComponent = props => {\n      const cardProps = Object.assign(\n        props.innerProps,\n        {\n          p:2,\n          width:1,\n          style:{cursor:'pointer'}\n        },\n        (this.props.innerProps ? this.props.innerProps : {})\n      );\n\n      if (props.menuIsOpen){\n        cardProps.boxShadow = 4;\n      }\n      return (\n        <DashboardCard\n          isInteractive={true}\n          cardProps={cardProps}\n        >\n          <Flex\n            width={1}\n            height={'100%'}\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            {props.children}\n          </Flex>\n        </DashboardCard>\n      );\n    };\n\n    const CustomIndicatorSeparator = props => null;\n\n    const CustomMenu = props => {\n      const cardProps = Object.assign(props.innerProps,{\n        mt:2,\n        zIndex:1,\n        boxShadow:null,\n        position:'absolute'\n      });\n      return (\n        <DashboardCard\n          cardProps={cardProps}\n        >\n          {props.children}\n        </DashboardCard>\n      );\n    }\n\n    const CustomValueContainer = this.props.CustomValueContainer ? this.props.CustomValueContainer : props => {\n      return (\n        <Flex\n          {...props.innerProps}\n        >\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            <Text\n              fontWeight={3}\n            >\n              {props.selectProps.value.label}\n            </Text>\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomOptionValue = this.props.CustomOptionValue ? this.props.CustomOptionValue : (props) => {\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n        >\n          <Text>\n            {props.label}\n          </Text>\n        </Flex>\n      );\n    };\n\n    const CustomInputContainer = this.props.CustomInputContainer ? this.props.CustomInputContainer : (props) => {\n\n      if (!props.selectProps.isSearchable){\n        return null;\n      }\n\n      return (\n        <Input\n          {...props}\n          fontSize={this.props.theme.fontSizes[2]}\n          color={this.props.theme.colors.copyColor}\n          fontWeight={this.props.theme.fontWeights[3]}\n          fontFamily={this.props.theme.fonts.sansSerif}\n          backgroundColor={this.props.theme.colors.cardBg}\n          className={[styles.searchInput,this.props.themeMode==='dark' ? styles.dark : null,!props.selectProps.menuIsOpen ? styles.searchInputHidden : null]}\n        />\n      );\n    };\n\n    const CustomOption = (props) => {\n\n      const options = props.selectProps.options;\n      let selectedValue = props.selectProps && props.selectProps.value && props.selectProps.value.value;\n\n      // Check if the selectedValue is included in options\n      if (selectedValue && options.map( o => o.value ).indexOf(selectedValue) === -1 && this.props.defaultValue){\n        selectedValue = this.props.defaultValue.value;\n      }\n\n      // Don't show selected value\n      if (selectedValue && selectedValue === props.value){\n        return null;\n      }\n\n      // console.log('CustomOption',this.props.customOptionProps);\n\n      return (\n        <Flex\n          px={3}\n          py={2}\n          width={1}\n          {...props.innerProps}\n          alignItems={'center'}\n          flexDirection={'row'}\n          style={{cursor:'pointer'}}\n          justifyContent={'flex-start'}\n          className={styles.genericSelector}\n          backgroundColor={ props.isFocused ? 'selectBgFocused' : 'selectBg' }\n        >\n          <CustomOptionValue\n            {...props}\n          />\n        </Flex>\n      );\n    }\n\n    await this.setState({\n      CustomMenu,\n      CustomOption,\n      ControlComponent,\n      CustomValueContainer,\n      CustomInputContainer,\n      CustomIndicatorSeparator\n    });\n  }\n\n  render() {\n    const isSearchable = typeof this.props.isSearchable !== 'undefined' ? this.props.isSearchable : false;\n    return (\n      <Select\n        name={this.props.name}\n        isSearchable={isSearchable}\n        options={this.props.options}\n        defaultValue={this.props.defaultValue}\n        onChange={ v => this.props.onChange(v.value) }\n        components={{\n            Menu: this.state.CustomMenu,\n            Option: this.state.CustomOption,\n            Control: this.state.ControlComponent,\n            Input: this.state.CustomInputContainer,\n            SingleValue: this.state.CustomValueContainer,\n            IndicatorSeparator: this.state.CustomIndicatorSeparator\n        }}\n      />\n    );\n  }\n}\n\nexport default GenericSelector;\n","import axios from 'axios';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Progress, Icon, Link } from 'rimble-ui'\n\nclass TxProgressBar extends Component {\n  state = {\n    txCount:0,\n    error:null,\n    ended:false,\n    percentage:0,\n    processing:true,\n    txTimestamp:null,\n    initialized:false,\n    estimatedTime:null,\n    remainingTime:null\n  };\n\n  componentUnmounted = false;\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n\n    this.componentUnmounted = true;\n\n    var id = window.setTimeout(function() {}, 0);\n\n    while (id--) {\n        window.clearTimeout(id); // will do nothing if no timeout with id is present\n    }\n\n    window.initProgressBar = this.initProgressBar;\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps){\n    this.loadUtils();\n\n    if (!this.state.initialized && this.props.web3){\n      this.initProgressBar();\n    }\n  }\n\n  componentDidMount = async () => {\n    this.initProgressBar();\n  }\n\n  getTransaction = async () => {\n    const transaction = await (new Promise( async (resolve, reject) => {\n      // console.log('getTransaction',this.props.hash);\n      this.props.web3.eth.getTransaction(this.props.hash,(err,transaction) => {\n        resolve(transaction);\n      });\n    }));\n\n    // console.log('getTransaction',transaction);\n\n    const newState = {};\n    if (transaction){\n      newState.transaction = transaction;\n    } else {\n      newState.processing = false;\n      newState.error = 'Unable to find the transaction';\n    }\n\n    this.setState(newState);\n    return transaction;\n  }\n\n  /*\n  Taken from https://ethgasstation.info/calculatorTxV.php\n  */\n  _estimateWait (prediction, gasoffered) {\n    var minedProb;\n    var expectedWait;\n    var sum1, sum2;\n    var intercept = 4.2794;\n    var hpa = .0329;\n    var hgo = -3.2836;\n    var tx = -0.0004;\n    var intercept2 = 7.5375;\n    var hpa_coef = -0.0801;\n    var txatabove_coef= 0.0003;\n    var high_gas_coef = .3532;\n\n    if (gasoffered > 1000000) {    \n      sum1 = intercept + (prediction['hashpower_accepting'] * hpa) + hgo  + (prediction['tx_atabove'] * tx);\n      sum2 = intercept2 + (prediction['hashpower_accepting'] * hpa_coef) + (prediction['tx_atabove'] * txatabove_coef) + high_gas_coef;\n    } else {\n      sum1 = intercept + (prediction['hashpower_accepting'] * hpa) + (prediction['tx_atabove'] * tx);\n      sum2 = intercept2 + (prediction['tx_atabove'] * txatabove_coef) + (prediction['hashpower_accepting'] * hpa_coef);\n    }\n\n    var factor = Math.exp(- 1 * sum1);\n    const prob = 1 / (1 + factor);\n\n    if (prob > .95) {\n      minedProb = 'Very High';\n    } else if (prob > .9 && prob <= .95) {\n      minedProb = 'Medium'\n    } else {\n      minedProb = 'Low';\n    }\n\n    expectedWait = Math.exp(sum2);\n    if (expectedWait < 2) {\n      expectedWait = 2;\n    }\n\n    if (gasoffered > 2000000) {\n      expectedWait += 100;\n    }\n\n    return [expectedWait, prediction['hashpower_accepting'], prediction['tx_atabove'], minedProb];\n  }\n\n  getBlockTime = async () => {\n    const pt = await axios.get('https://ethgasstation.info/json/ethgasAPI.json');\n    if (pt){\n      const blockTime = pt.data;\n      this.setState({\n        blockTime\n      });\n      return blockTime;\n    }\n    return null;\n  }\n\n  getPredictionTable = async () => {\n    const pt = await axios.get('https://ethgasstation.info/json/predictTable.json');\n    if (pt){\n      const predictTable = pt.data;\n      this.setState({\n        predictTable\n      });\n      return predictTable;\n    }\n    return null;\n  }\n\n  getTxEstimatedTime = (gasPrice) => {\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    if (currentNetwork.provider === 'polygon'){\n      return 30;\n    } else {\n      let prediction = null;\n      if (this.state.predictTable){\n        this.state.predictTable.forEach((p,i) => {\n          if (!prediction && parseFloat(p.gasprice)>=parseFloat(gasPrice)){\n            prediction = p;\n            return true;\n          }\n        });\n      }\n\n      if (this.state.blockTime && prediction){\n        const pdValues = this._estimateWait(prediction,this.state.transaction.gas);\n        const blocksWait = pdValues[0];\n        const blockInterval = this.state.blockTime.block_time;\n        let txMeanSecs = blocksWait * blockInterval;\n        txMeanSecs = parseInt(txMeanSecs.toFixed(0));\n        this.functionsUtil.customLog('getTxEstimatedTime',prediction,this.state.transaction.gas,pdValues,txMeanSecs);\n        return txMeanSecs; // Customized\n      }\n    }\n\n    return null;\n  }\n\n  calculateRemainingTime = async () => {\n    let remainingTime = 0;\n    let estimatedTime = 0;\n\n    if (!this.state.transaction || this.componentUnmounted){\n      return false;\n    }\n\n    if (!this.state.transaction.blockNumber){\n      const gasPrice = parseFloat(this.functionsUtil.BNify(this.state.transaction.gasPrice).div(1e9).toString());\n      remainingTime = this.getTxEstimatedTime(gasPrice);\n    }\n\n    estimatedTime = remainingTime ? remainingTime : 0;\n\n    if (this.state.txTimestamp){\n      const currTimestamp = new Date().getTime();\n      const secondsPassed = parseInt((currTimestamp-parseInt(this.state.txTimestamp))/1000);\n      \n      // Calculate new remaining time\n      remainingTime -= secondsPassed;\n      remainingTime = Math.max(remainingTime,0);\n\n      this.functionsUtil.customLog('Estimated time',estimatedTime,'secondsPassed',secondsPassed,'New remaining time',remainingTime);\n    }\n\n    const timePassed = estimatedTime-remainingTime;\n    const percentage = estimatedTime>0 ? parseFloat(timePassed/estimatedTime) : 1;\n\n    this.setState({\n      estimatedTime,\n      remainingTime,\n      percentage\n    });\n\n    setTimeout(()=>{this.updateProgressBar()},1000);\n  }\n\n  updateProgressBar = () => {\n\n    if (this.componentUnmounted){\n      return false;\n    }\n\n    let remainingTime = this.state.remainingTime;\n    if (remainingTime){\n      remainingTime--;\n      if (!remainingTime){\n        this.setState({\n          percentage:1,\n          ended:true\n        });\n      } else {\n        const timePassed = this.state.estimatedTime-remainingTime;\n        const percentage = parseFloat(timePassed/this.state.estimatedTime);\n        this.setState({\n          percentage,\n          remainingTime\n        });\n        setTimeout(()=>{this.updateProgressBar()},1000);\n      }\n    } else {\n      this.setState({\n        percentage:1,\n        ended:true\n      });\n    }\n  }\n\n  getTxInfo = async () => {\n\n    // Get tx timestamp\n    const txProgressBarKey = `txProgressBarData`;\n    const txHash = this.props.hash.toLowerCase();\n\n    let txProgressBarData = null;\n    let txTimestamp = null;\n    let newState = {};\n\n    if (localStorage){\n      txProgressBarData = localStorage.getItem(txProgressBarKey);\n      if (txProgressBarData){\n        txProgressBarData = JSON.parse(txProgressBarData);\n      }\n    }\n\n    if (!txProgressBarData || !txProgressBarData[txHash]){\n      txTimestamp = new Date().getTime();\n\n      const [predictTable,blockTime] = await Promise.all([\n        this.getPredictionTable(),\n        this.getBlockTime()\n      ]);\n\n      txProgressBarData = {};\n      txProgressBarData[txHash] = {\n        txTimestamp,\n        blockTime,\n        predictTable\n      };\n\n      // Save progress bar status in localStorage\n      this.functionsUtil.setLocalStorage(txProgressBarKey,JSON.stringify(txProgressBarData));\n\n      newState = txProgressBarData[txHash];\n\n      if (!predictTable || !blockTime){\n        newState.error = 'Processing transaction';\n      }\n    }\n\n    this.setState(newState);\n  }\n\n  initProgressBar = async () => {\n\n    if (!this.props.hash || !this.props.web3){\n      return false;\n    }\n\n    const newState = {\n      initialized:true\n    };\n    this.setState(newState);\n\n    // console.log('initProgressBar',this.state.txCount,this.props.hash);\n\n    const transaction = await this.getTransaction();\n\n    if (transaction){\n      await this.getTxInfo();\n      try{\n        this.calculateRemainingTime();\n      } catch (err) {\n        newState.error = 'Processing transaction';\n        // const errStringified = JSON.stringify(err);\n      }\n\n      this.setState(newState);\n    } else {\n      const txCount = this.state.txCount++;\n      if (txCount<5){\n        this.setState({\n          txCount\n        },() => {\n          window.setTimeout(() => {\n            this.initProgressBar();\n          },1000);\n        });\n      }\n    }\n  }\n\n  renderRemainingTime(){\n    // More than 60 seconds\n    if (this.state.remainingTime>60){\n      const minutes = Math.floor(this.state.remainingTime/60);\n      const seconds = this.state.remainingTime-(minutes*60);\n      return ('0'+minutes).substr(-2)+':'+('0'+seconds).substr(-2)+' min';\n    } else {\n      return this.state.remainingTime+'s';\n    }\n  }\n\n  render() {\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    return (\n      <Flex flexDirection={'column'} alignItems={'center'}>\n        {\n          this.state.remainingTime !== null ? (\n            this.state.ended ? (\n              <FlexLoader\n                textProps={{\n                  ml:2,\n                  color:this.props.textColor ? this.props.textColor : 'copyColor'\n                }}\n                loaderProps={{\n                  size:'25px',\n                  ...this.props.loaderProps\n                }}\n                flexProps={{\n                  textAlign:'center',\n                  alignItems:'center',\n                  justifyContent:'center',\n                }}\n                text={this.props.endMessage ? this.props.endMessage : 'Finalizing transaction...'}\n              />\n            ) : (\n              <Flex\n                mb={2}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Text mb={2} color={ this.props.textColor ? this.props.textColor : 'copyColor'}>{ this.props.waitText ? this.props.waitText : 'Remaining time:' } <Text.span color={ this.props.textColor ? this.props.textColor : 'copyColor'} fontWeight={3}>{ this.renderRemainingTime() }</Text.span></Text>\n                <Progress value={ this.state.percentage } />\n              </Flex>\n            )\n          ) : (\n            this.state.error !== null && !this.state.processing ? (\n              <Flex\n                alignItems={'center'}\n                flexDirection={'column'}\n              >\n                <Icon\n                  size={'2em'}\n                  name={'Warning'}\n                  color={'cellText'}\n                />\n                <Text\n                  mt={0}\n                  fontSize={2}\n                  textAlign={'center'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                >\n                  {this.state.error}\n                </Text>\n              </Flex>\n            ) : (\n              <FlexLoader\n                textProps={{\n                  ml:2,\n                  color:this.props.textColor ? this.props.textColor : 'copyColor'\n                }}\n                loaderProps={{\n                  size:'25px',\n                  ...this.props.loaderProps\n                }}\n                flexProps={{\n                  textAlign:'center',\n                  alignItems:'center',\n                  justifyContent:'center',\n                }}\n                text={ this.state.error ? this.state.error : (this.props.hash ? (this.props.loadingMessage ? this.props.loadingMessage : 'Calculating estimated time...') : (this.props.sendingMessage ? this.props.sendingMessage : 'Sending transaction...') ) }\n              />\n            )\n          )\n        }\n        {\n          this.props.hash ? (\n            <Link\n              mt={0}\n              target={'_blank'}\n              hoverColor={'dark-gray'}\n              rel={\"nofollow noopener noreferrer\"}\n              color={this.props.textColor ? this.props.textColor : 'cellText'}\n              href={this.functionsUtil.getEtherscanTransactionUrl(this.props.hash)}\n            >\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={'center'}\n              >\n                <Text\n                  fontSize={0}\n                  textAlign={'center'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                >\n                  View in {this.functionsUtil.capitalize(currentNetwork.explorer)}\n                </Text>\n                <Icon\n                  ml={1}\n                  size={'0.75em'}\n                  name={'OpenInNew'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                />\n              </Flex>\n            </Link>\n          ) : typeof this.props.cancelTransaction === 'function' ? (\n              <Link\n                mt={0}\n                href={`javascript:void(0)`}\n                onClick={ e => this.props.cancelTransaction() }\n                color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                hoverColor={this.props.cancelTextHoverColor ? this.props.cancelTextHoverColor : 'dark-gray'}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'row'}\n                  justifyContent={'center'}\n                >\n                  <Text\n                    fontSize={0}\n                    textAlign={'center'}\n                    color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                  >\n                    Cancel transaction\n                  </Text>\n                  <Icon\n                    ml={1}\n                    size={'0.85em'}\n                    name={'Cancel'}\n                    color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                  />\n                </Flex>\n              </Link>\n          ) : null\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TxProgressBar;","import baseColors, { blue, green, yellow, red } from \"./colors\";\nimport { tint, shade } from \"polished\";\n\n// theme.js\nexport default {\n  breakpoints: [\"52em\", \"64em\"],\n  // breakpoints: ['40em', '52em', '64em', '80em'],\n  fontSizes: [12, 14, 16, 18, 21, 32, 38, 48, 54, 64, 72, 84],\n  fontWeights: [0, 300, 400, 600, 700, 800],\n  letterSpacings: [0, 1, 2, 4, 8],\n  lineHeights: {\n    solid: 1,\n    title: 1.25,\n    copy: 1.5\n  },\n  fonts: {\n    serif: '\"georgia regular\", athelas, times, serif',\n    sansSerif: '\"Inter\", -apple-system, sans-serif',\n    counter: '\"Roboto Mono\", Arial, -apple-system, sans-serif'\n  },\n  space: [0, 4, 8, 16, 32, 64, 128, 256],\n  radii: [\"0\", \"4px\", \"8px\", \"16px\", \"2rem\"],\n  widths: [0, 16, 32, 64, 128, 256, 550],\n  minWidths: [0, 16, 32, 64, 128, 256],\n  maxWidths: [0, 16, 32, 64, 128, 256, 512, 768, 1024, 1536],\n  heights: [0, 16, 32, 64, 128, 256],\n  minHeights: [0, 16, 32, 64, 128, 256],\n  maxHeights: [0, 16, 32, 64, 128, 256],\n  borders: [0, \"1px solid #eee\", \"1px solid #b6c2ff\"],\n  borderWidths: [\"0\", \"1px\", \"2px\", \"4px\"],\n  shadows: [\n    \"0\",\n    \"0px 2px 4px rgba(0, 0, 0, 0.1)\",\n    \"0 7px 14px rgba(50,50,93,.1)\",\n    \"1px 1px 0px rgba(0,0,0,0.2)\",\n    \"0px 0px 16px 2px rgba(0,54,255,0.3)\"\n  ],\n  opacity: {\n    disabled: 0.4\n  },\n  colors: {\n    primary: blue.base,\n    \"gradient-bg\": \"linear-gradient(120deg, #f6d365 0%, #ea0d73 100%)\",\n    \"primary-light\": blue.light[1],\n    \"primary-dark\": blue.dark[1],\n    bgBlue: \"#0030e0\",\n    blue: \"#0036ff\",\n    tick: \"#00b84a\",\n    \"dark-blue\": \"#00219a\",\n    skyBlue: \"#00abfe\",\n    lightBlue: \"#79f4e1\",\n    copyColor: \"#3F3D4B\",\n    subColor: \"#a7a7a7\",\n    black: baseColors.black,\n    'near-black': '#111',\n    'dark-gray': '#4e4e4e',\n    'mid-gray': '#999',\n    gray: ' #e0e0e0',\n    grey: '#CCC',\n    silver: '#999',\n    'light-silver': '#aaa',\n    'moon-gray': '#ccc',\n    'light-gray': '#eee',\n    'near-white': '#f4f4f4',\n    white: '#fff',\n    transparent: 'transparent',\n    green:'#00b84a',\n    /*\n    NEW COLORS\n    */\n    connect: \"#0042F5\",\n    newblue: \"#2B65D9\",\n    alert: \"#ff9900\",\n    arrowActive: \"#4f4f4f\",\n    arrowInactive: \"#d8d8d8\",\n    selectBgFocused: \"#fbfbfb\",\n    selectBg: \"#ffffff\",\n    backButtonBg: \"#ffffff\",\n    lineChartStroke: \"#dbdbdb\",\n    wrongNetworkBannerBg: \"#ffffff\",\n    dashboardBg: \"#f9fafd\",\n    statValue: \"#959595\",\n    boxBorder: \"#eeeeee\",\n    cellTitle: \"#a3a4a5\",\n    cellText: \"#a6a6a6\",\n    divider: \"#d8d8d8\",\n    divider2: \"#EBEBEB\",\n    counter: \"#5d5d5d\",\n    redeem: \"#00a9fe\",\n    link: \"#0036ff\",\n    deposit: \"#0239ff\",\n    migrate: \"#00a9fe\",\n    legend: \"#c9c9c9\",\n    menuBg: \"#fff\",\n    menuHover: \"#f3f6ff\",\n    cardBg: \"#fff\",\n    flashColor: \"#3f4e9a\",\n    menuRightBorder: \"#eee\",\n    menuIconActive:'#2a65d9',\n    cardBgContrast: \"#fafafa\",\n    cardHoverShadow: \"0px 0px 0px 1px rgba(0, 54, 255, 0.3)\",\n    cardBgHover: \"#f7f8ff\",\n    cardBorder: \"#eee\",\n    pageActive: \"#4f4f4f\",\n    pageInactive: \"#d8d8d8\",\n    transactions: {\n      action: {\n        send: \"#10a0dd\",\n        swap: \"#3d53c0\",\n        boost: \"#ffff00\",\n        redeem: \"#10a0dd\",\n        swapout: \"#10a0dd\",\n        deposit: \"#3d53c0\",\n        curvein: \"#10a0dd\",\n        receive: \"#3d53c0\",\n        migrate: \"#3d53c0\",\n        default: \"#4f4f4f\",\n        curveout: \"#3d53c0\",\n        withdraw: \"#10a0dd\",\n        curvedepositin: \"#10a0dd\",\n        curvedepositout: \"#3d53c0\"\n      },\n      actionBg: {\n        send: \"#ceeff6\",\n        swap: \"#ced6ff\",\n        boost: \"#ff7979\",\n        redeem: \"#ceeff6\",\n        swapout: \"#ceeff6\",\n        deposit: \"#ced6ff\",\n        curvein: \"#ceeff6\",\n        default: \"#dadada\",\n        receive: \"#ced6ff\",\n        migrate: \"#ced6ff\",\n        withdraw: \"#ceeff6\",\n        curveout: \"#ced6ff\",\n        curvedepositin: \"#ceeff6\",\n        curvedepositout: \"#ced6ff\"\n      },\n      status: {\n        completed: \"#00b84a\",\n        pending: \"#a5a5a5\",\n        failed: \"#fa0000\"\n      }\n    },\n    blacks: [\n      \"rgba(0,0,0,.0125)\",\n      \"rgba(0,0,0,.025)\",\n      \"rgba(0,0,0,.05)\",\n      \"rgba(0,0,0,.1)\",\n      \"rgba(0,0,0,.2)\",\n      \"rgba(0,0,0,.3)\",\n      \"rgba(0,0,0,.4)\",\n      \"rgba(0,0,0,.5)\",\n      \"rgba(0,0,0,.6)\",\n      \"rgba(0,0,0,.7)\",\n      \"rgba(0,0,0,.8)\",\n      \"rgba(0,0,0,.9)\"\n    ],\n    whites: [\n      \"rgba(255,255,255,.0125)\",\n      \"rgba(255,255,255,.025)\",\n      \"rgba(255,255,255,.05)\",\n      \"rgba(255,255,255,.1)\",\n      \"rgba(255,255,255,.2)\",\n      \"rgba(255,255,255,.3)\",\n      \"rgba(255,255,255,.4)\",\n      \"rgba(255,255,255,.5)\",\n      \"rgba(255,255,255,.6)\",\n      \"rgba(255,255,255,.7)\",\n      \"rgba(255,255,255,.8)\",\n      \"rgba(255,255,255,.9)\"\n    ]\n  },\n  zIndices: [0, 9, 99, 999, 9999],\n  messageStyle: {\n    base: {\n      color: shade(0.4, \"#AAA\"),\n      backgroundColor: tint(0.9, \"#AAA\"),\n      borderColor: \"#AAA\"\n    },\n    success: {\n      color: shade(0.4, green.base),\n      backgroundColor: tint(0.9, green.base),\n      borderColor: green.base\n    },\n    warning: {\n      color: shade(0.4, yellow.base),\n      backgroundColor: tint(0.9, yellow.base),\n      borderColor: yellow.base\n    },\n    danger: {\n      color: shade(0.4, red.base),\n      backgroundColor: tint(0.9, red.base),\n      borderColor: red.base\n    },\n    info: {\n      color: shade(0.4, blue.base),\n      backgroundColor: \"#f3f6ff\",\n      borderColor: \"#b6c2ff\"\n    }\n  },\n  buttons: {\n    primary: {\n      color: blue.text,\n      backgroundColor: blue.base,\n      // use css custom props\n      \"--main-color\": blue.base,\n      \"--contrast-color\": blue.text\n    },\n    normal: {\n      color: baseColors.black,\n      \"--contrast-color\": baseColors.black\n    },\n    success: {\n      \"--main-color\": green.base,\n      \"--contrast-color\": green.text\n    },\n    danger: {\n      \"--main-color\": red.base,\n      \"--contrast-color\": red.text\n    }\n  },\n  buttonSizes: {\n    small: {\n      fontSize: \"0.75rem\",\n      height: \"2rem\",\n      minWidth: \"2rem\",\n      padding: \"0 1rem\"\n    },\n    medium: {\n      fontSize: \"1rem\",\n      height: \"3rem\",\n      minWidth: \"3rem\"\n    },\n    large: {\n      fontSize: \"1.5rem\",\n      height: \"4rem\",\n      minWidth: \"4rem\",\n      borderRadius: \"2rem\"\n    }\n  }\n};\n","import React, { Component } from 'react';\nimport { Icon, Text, Flex } from \"rimble-ui\";\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass IconBox extends Component {\n\n  render() {\n    const cardProps = Object.assign({\n      p:3\n    },this.props.cardProps);\n    return (\n      <DashboardCard\n        cardProps={cardProps}\n        isActive={this.props.isActive}\n        isVisible={this.props.isVisible}\n        isInteractive={this.props.isInteractive}\n      >\n        <Flex\n          alignItems={'center'}\n          flexDirection={'column'}\n        >\n          <Icon\n            size={'1.8em'}\n            color={'cellText'}\n            name={this.props.icon ? this.props.icon : 'InfoOutline'}\n            {...this.props.iconProps}\n          />\n          {\n            this.props.text && \n              <Text\n                mt={1}\n                fontSize={2}\n                color={'cellText'}\n                textAlign={'center'}\n                dangerouslySetInnerHTML={{\n                  __html:this.props.text\n                }}\n                {...this.props.textProps}\n              />\n          }\n          {\n            this.props.children\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default IconBox;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericSelector from '../GenericSelector/GenericSelector';\n\nclass AssetSelector extends Component {\n\n  state = {\n    options:null,\n    defaultValue:null,\n    CustomOptionValue:null,\n    CustomValueContainer:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  loadComponents(){\n    const options = Object.keys(this.props.availableTokens).map(token => {\n      const tokenConfig = this.props.availableTokens[token];\n      return {\n        value:token,\n        label:token,\n        tokenConfig\n      };\n    });\n\n    const defaultValue = this.props.selectedToken ? options.find(v => (v.value.toUpperCase() === this.props.selectedToken.toUpperCase())) : null;\n\n    const CustomOptionValue = props => {\n      const token = props.value;\n      const tokenConfig = props.data.tokenConfig;\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={token}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={token}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n          {\n            this.state.props.showCustomField ? (\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:this.state.props.showCustomField,\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n            ) : this.props.showBalance &&\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:'tokenBalance',\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n          }\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : defaultValue;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const token = selectProps.value;\n      const tokenConfig = selectProps.tokenConfig;\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={token}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={token}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n\n          {\n            this.props.showBalance &&\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:'tokenBalance',\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n          }\n        </Flex>\n      );\n    }\n\n    this.setState({\n      options,\n      defaultValue,\n      CustomOptionValue,\n      CustomValueContainer\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadComponents();\n\n    this.setState({\n      props:this.props\n    });\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const availableTokensChanged = JSON.stringify(Object.keys(prevProps.availableTokens)) !== JSON.stringify(Object.keys(this.props.availableTokens));\n    if (availableTokensChanged || selectedTokenChanged){\n      this.loadComponents();\n    }\n  }\n\n  render() {\n    if (!this.state.options || !this.state.defaultValue || !this.state.CustomOptionValue || !this.state.CustomValueContainer || !this.props.availableTokens || !Object.keys(this.props.availableTokens).length){\n      return null;\n    }\n\n    return (\n      <GenericSelector\n        {...this.props}\n        name={'assets'}\n        options={this.state.options}\n        innerProps={this.props.innerProps}\n        isSearchable={this.props.isSearchable}\n        defaultValue={this.state.defaultValue}\n        selectedToken={this.props.selectedToken}\n        CustomOptionValue={this.state.CustomOptionValue}\n        CustomValueContainer={this.state.CustomValueContainer}\n        onChange={ this.props.onChange ? this.props.onChange : this.props.changeToken}\n      />\n    );\n  }\n}\n\nexport default AssetSelector;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bg\":\"ModalCard_bg__3ocwQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"twitterIcon\":\"TwitterShareButton_twitterIcon__2QCmn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tooltip\":\"TableCellHeader_tooltip__3xM3k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"radioBtn\":\"TransactionListFilters_radioBtn__1vgHa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Web3ConnectionButtons_button__1Wov0\"};","/*\nTheming: https://github.com/plouc/nivo/issues/308\n*/\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\n\nclass GenericChart extends Component {\n  state = {\n    width:null,\n    height:null\n  };\n\n  componentUnmounted = false;\n\n  componentWillMount() {\n    window.addEventListener('resize', this.handleWindowSizeChange.bind(this));\n  }\n\n  componentWillUnmount() {\n    this.componentUnmounted = true;\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n\n  componentDidMount(){\n    this.handleWindowSizeChange();\n  }\n\n  componentDidUpdate(prevProps){\n    if (prevProps.isMobile !== this.props.isMobile){\n      this.handleWindowSizeChange();\n    }\n  }\n\n  handleWindowSizeChange(){\n    if (this.componentUnmounted){\n      return false;\n    }\n\n    const newState = {...this.state};\n\n    if (this.props.parentId){\n      const chartContainer = document.getElementById(this.props.parentId);\n      if (chartContainer){\n        const chartWidth = parseFloat(chartContainer.offsetWidth)>0 ? chartContainer.offsetWidth : 0;\n\n        if (chartWidth && chartWidth !== newState.width){\n          newState.width = chartWidth;\n        }\n      }\n    }\n\n    if (!newState.width && this.props.width && this.props.width !== newState.width) {\n      newState.width = this.props.width;\n    }\n\n    if (this.props.parentIdHeight){\n      const chartContainerH = document.getElementById(this.props.parentIdHeight);\n      if (chartContainerH){\n        const chartHeight = parseFloat(chartContainerH.offsetWidth)>0 ? chartContainerH.offsetWidth : 0;\n        if (chartHeight && chartHeight !== newState.height){\n          newState.height = chartHeight;\n          if (!newState.width){\n            newState.width = chartHeight;\n          }\n        }\n      }\n    }\n\n    if (!newState.height && this.props.height && this.props.height !== newState.height) {\n      newState.height = this.props.height;\n    }\n\n    newState.height = newState.height || newState.width;\n\n    if (Object.keys(newState).length>0){\n      this.setState(newState);\n    }\n  };\n\n  render() {\n    const ChartType = this.props.type;\n\n    const height = this.state.height && !isNaN(this.state.height) ? parseInt(this.state.height) : 350;\n    const width = this.state.width && !isNaN(this.state.width) ? parseInt(this.state.width) : 0;\n\n    let chartProps = Object.assign({},this.props);\n    chartProps = {\n      ...chartProps,\n      height,\n      width\n    }\n\n    return chartProps.showLoader && (!chartProps.data || !width || !height) ? (\n      <FlexLoader\n        flexProps={{\n          flexDirection:'row',\n          minHeight:height\n        }}\n        loaderProps={ this.props.loaderProps ? this.props.loaderProps : {\n          size:'30px'\n        }}\n        textProps={{\n          ml:2\n        }}\n        text={ this.props.loaderText !== undefined ? this.props.loaderText : 'Loading graph data...'}\n      />\n    ) : this.props.data && (\n      <ChartType\n        {...chartProps}\n      />\n    )\n  }\n}\n\nexport default GenericChart;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gradientButton\":\"Header_gradientButton__2mrQl\",\"empty\":\"Header_empty__3fhiX\",\"select\":\"Header_select__27Xyx\",\"selectDark\":\"Header_selectDark__EHAAP\",\"input\":\"Header_input__3dr8P\"};","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\n\nclass ExecuteTransaction extends Component {\n\n  state = {\n    txStatus:null,\n    processing:{\n      txHash:null,\n      loading:false\n    }\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  async execute(){\n\n    const callback = (tx,error) => {\n\n      // console.log('callback',tx,error);\n\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: 'Transaction',\n        eventLabel: this.props.methodName,\n        eventAction: this.props.contractName\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      const txSucceeded = tx && tx.status === 'success';\n      if (txSucceeded){\n        if (typeof this.props.callback === 'function'){\n          this.props.callback(tx);\n        }\n      }\n\n      this.setState({\n        processing: {\n          txHash:null,\n          loading:false\n        },\n        txStatus:tx ? tx.status : null\n      });\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        txStatus:'processing',\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    this.setState((prevState) => ({\n      txStatus:'loading',\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n\n    let params = this.props.params;\n    if (typeof this.props.getTransactionParams === 'function'){\n      params = this.props.getTransactionParams();\n    } else if (typeof this.props.getTransactionParamsAsync === 'function'){\n      params = await this.props.getTransactionParamsAsync();\n    } else if (typeof this.props.transactionParams === 'object'){\n      params = this.props.transactionParams;\n    }\n\n    if (!params){\n      this.setState((prevState) => ({\n        txStatus:null,\n        processing: {\n          ...prevState.processing,\n          loading:false\n        }\n      }));\n      return false;\n    }\n\n    if (this.props.sendRawTransaction){\n      this.functionsUtil.contractMethodSendWrapper(this.props.contractName,this.props.methodName,params,callback,callbackReceipt,null,true,params);\n    } else {\n      this.functionsUtil.contractMethodSendWrapper(this.props.contractName,this.props.methodName,params,callback,callbackReceipt);\n    }\n  }\n\n  render() {\n    const ExecuteComponent = this.props.Component;\n    return (\n      <Flex\n        {...this.props.parentProps}\n      >\n        {\n          this.state.txStatus === 'success' && this.props.children ?\n            this.props.children\n          : this.state.processing && this.state.processing.loading ? (\n            <TxProgressBar\n              web3={this.props.web3}\n              network={this.props.network}\n              {...this.props.progressBarProps}\n              hash={this.state.processing.txHash}\n              cancelTransaction={this.cancelTransaction.bind(this)}\n              endMessage={`Finalizing ${this.props.action} request...`}\n              waitText={`${this.functionsUtil.capitalize(this.props.action)} estimated in`}\n            />\n          ) : (\n            <ExecuteComponent\n              onClick={this.execute.bind(this)}\n              {...this.props.componentProps}\n            >\n              {this.props.componentProps.value}\n            </ExecuteComponent>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default ExecuteTransaction;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"Tos_headerContainer__23W_f\",\"headerBgFiller\":\"Tos_headerBgFiller__36Nfk\",\"bgContainer\":\"Tos_bgContainer__rX7uJ\",\"list\":\"Tos_list__3bMLG\",\"textContainer\":\"Tos_textContainer__3hUuq\"};","import theme from '../theme';\nimport React, { Component } from 'react';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ShortHash from \"../utilities/components/ShortHash\";\nimport { Flex, Text, Icon, Link, Image } from \"rimble-ui\";\n\nclass TransactionField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const hashChanged = prevProps.hash !== this.props.hash;\n    const accountChanged = prevProps.account !== this.props.account;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    if (fieldChanged || hashChanged || accountChanged){\n      this.loadField();\n    }\n  }\n\n  async loadField(){\n    const fieldInfo = this.props.fieldInfo;\n    if (this.props.hash && this.props.account){\n      switch (fieldInfo.name){\n        case 'icon':\n        break;\n        case 'hash':\n          \n        break;\n        case 'action':\n          \n        break;\n        case 'date':\n        break;\n        case 'status':\n        break;\n        case 'amount':\n        break;\n        case 'asset':\n        break;\n        case 'custom':\n        break;\n        default:\n        break;\n      }\n    }\n  }\n\n  render(){\n    let icon = null;\n    let color = null;\n    let output = null;\n    const fieldInfo = this.props.fieldInfo;\n    const transaction = this.props.transaction;\n    let bgColor = theme.colors.transactions.actionBg.default;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      style:{\n        maxWidth:'100%',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis'\n      },\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    switch (fieldInfo.name){\n      case 'icon':\n        if (transaction.action){\n          color = theme.colors.transactions.action[transaction.action.toLowerCase()] ? theme.colors.transactions.action[transaction.action.toLowerCase()] : color;\n          bgColor = theme.colors.transactions.actionBg[transaction.action.toLowerCase()] ? theme.colors.transactions.actionBg[transaction.action.toLowerCase()] : bgColor;\n        }\n        switch (transaction.action.toLowerCase()) {\n          case 'deposit':\n          case 'curveout':\n          case 'curvezapout':\n          case 'curvedepositout':\n            icon = \"ArrowDownward\";\n          break;\n          case 'boost':\n            icon = \"TrendingUp\";\n          break;\n          case 'redeem':\n          case 'curvein':\n          case 'curvezapin':\n          case 'curvedepositin':\n            icon = \"ArrowUpward\";\n          break;\n          case 'send':\n            icon = \"Send\";\n          break;\n          case 'receive':\n            icon = \"Redo\";\n          break;\n          case 'migrate':\n            // icon = \"Sync\";\n            icon = \"Repeat\";\n          break;\n          case 'swap':\n            icon = \"SwapHoriz\";\n          break;\n          case 'swapout':\n            icon = \"SwapHoriz\";\n          break;\n          case 'withdraw':\n            icon = \"ArrowUpward\";\n          break;\n          default:\n            icon = \"Refresh\";\n          break;\n        }\n        output = (\n          <Flex\n            p={'5px'}\n            borderRadius={'50%'}\n            {...fieldProps}\n            alignItems={'center'}\n            backgroundColor={bgColor}\n            justifyContent={'center'}\n          >\n            <Icon\n              name={icon}\n              color={color}\n              align={'center'}\n              size={this.props.isMobile ? '1em' : '1.4em'}\n            />\n          </Flex>\n        );\n      break;\n      case 'hash':\n        if (transaction.hash){\n          output = (\n            <Link\n              target={'_blank'}\n              rel={'nofollow noopener noreferrer'}\n              href={this.functionsUtil.getEtherscanTransactionUrl(transaction.hash)}\n            >\n              <ShortHash\n                fontSize={1}\n                color={'white'}\n                {...fieldProps}\n                resolveAddress={false}\n                hash={transaction.hash}\n              />\n            </Link>\n          );\n        }\n      break;\n      case 'action':\n        let action = transaction.action;\n        switch (transaction.action) {\n          case 'Swap':\n            action = \"Swap In\";\n          break;\n          case 'SwapOut':\n            action = \"Swap Out\";\n          break;\n          default:\n          break;\n        }\n        output = (\n          <Text {...fieldProps}>{action.toUpperCase()}</Text>\n        );\n      break;\n      case 'date':\n        const formattedDate = transaction.momentDate.format('DD MMM, YYYY');\n        output = (\n          <Text {...fieldProps}>{formattedDate}</Text>\n        );\n      break;\n      case 'statusIcon':\n        color = theme.colors.transactions.status[transaction.status.toLowerCase()];\n        switch (transaction.status) {\n          case 'Completed':\n            icon = \"Done\";\n          break;\n          case 'Pending':\n            icon = \"Timelapse\";\n          break;\n          case 'Failed':\n            icon = \"ErrorOutline\";\n          break;\n          default:\n          break;\n        }\n        output = (\n          <Flex\n            p={[0,'1px']}\n            borderRadius={'50%'}\n            {...fieldProps}\n            alignItems={'center'}\n            width={['24px','26px']}\n            height={['24px','26px']}\n            justifyContent={'center'}\n            border={ this.props.isMobile ? `1px solid ${color}` : `2px solid ${color}` }\n          >\n            <Icon\n              name={icon}\n              color={color}\n              align={'center'}\n              size={ this.props.isMobile ? '1em' : '1.2em'}\n            />\n          </Flex>\n        );\n      break;\n      case 'status':\n        output = (\n          <Text {...fieldProps}>{transaction.status}</Text>\n        );\n      break;\n      case 'amount':\n        output = (\n          <SmartNumber {...fieldProps} number={transaction.amount} />\n        );\n      break;\n      case 'tokenIcon':\n        const tokenSymbol = transaction.tokenSymbol.toUpperCase();\n        const tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',tokenSymbol]);\n        const iconSrc = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${tokenSymbol}.svg`;\n        output = (\n          <Image src={iconSrc} {...fieldProps} />\n        );\n      break;\n      case 'tokenName':\n        output = (\n          <Text {...fieldProps}>{transaction.tokenSymbol.toUpperCase()}</Text>\n        );\n      break;\n      case 'custom':\n        let CustomComponent = null;\n        let customValue = this.functionsUtil.getArrayPath(fieldInfo.path,this.props.transaction);\n        switch (fieldInfo.type){\n          case 'number':\n            customValue = this.functionsUtil.BNify(customValue).toString();\n            CustomComponent = SmartNumber;\n            fieldProps.number = customValue;\n            customValue = null;\n          break;\n          case 'image':\n            CustomComponent = Image;\n            fieldProps.src = customValue;\n            customValue = null;\n          break;\n          case 'icon':\n            CustomComponent = Icon;\n            fieldProps.name = customValue;\n            customValue = null;\n          break;\n          default:\n            CustomComponent = Text;\n          break;\n        }\n        output = customValue ? (\n          <CustomComponent {...fieldProps}>{customValue}</CustomComponent>\n        ) : <CustomComponent {...fieldProps} />\n      break;\n      default:\n      break;\n    }\n    return output;\n  }\n}\n\nexport default TransactionField;\n","import FunctionsUtil from './FunctionsUtil';\n\nclass IdleGovToken{\n  // Attributes\n  props = {};\n  tokenName = null;\n  tokenConfig = null;\n  functionsUtil = null;\n\n  // Constructor\n  constructor(props){\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    this.tokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n    this.tokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.tokenName]);\n  }\n\n  getBalance = async () => {\n    let balance = await this.functionsUtil.getTokenBalance(this.tokenName,this.props.account);\n    if (!balance || this.functionsUtil.BNify(balance).isNaN()){\n      balance = this.functionsUtil.BNify(0);\n    }\n    return balance;\n  }\n\n  claimRewards = async (callback,callbackReceipt) => {\n    return this.functionsUtil.contractMethodSendWrapper('EarlyRewards', 'claim', [], callback, callbackReceipt);\n  }\n\n  getPriorVotes = async (account=null) => {\n    account = account ? account : this.props.account;\n    let priorVotes = await this.functionsUtil.genericContractCall(this.tokenName,'getPriorVotes',[account]);\n    if (priorVotes){\n      return this.functionsUtil.BNify(priorVotes);\n    }\n    return null;\n  }\n\n  refreshIdleSpeed = async () => {\n    return this.functionsUtil.genericContractCall('IdleController','refreshIdleSpeeds');\n  }\n\n  getUnclaimedTokens = async () => {\n    /*\n    let rewards =  await this.functionsUtil.genericContractCall('EarlyRewards','rewards',[this.props.account]);\n    if (rewards){\n      return this.functionsUtil.fixTokenDecimals(rewards,this.tokenConfig.decimals);\n    }\n    */\n    return this.functionsUtil.BNify(0);\n  }\n\n  getAPR = async (token,tokenConfig,conversionRate=null) => {\n    const IDLETokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.tokenName]);\n    if (!IDLETokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getIdleAPR_${tokenConfig.idle.token}_${conversionRate}`;\n    /*\n    const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n    */\n\n    let APR = this.functionsUtil.BNify(0);\n\n    const [\n      idleDistribution,\n      tokenAllocation\n    ] = await Promise.all([\n      this.getDistribution(tokenConfig),\n      this.functionsUtil.getTokenAllocation(tokenConfig,false,false)\n    ]);\n\n    if (idleDistribution && tokenAllocation){\n\n      const DAITokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens','DAI']);\n        \n      // Get IDLE oconversion rate\n      if (!conversionRate){\n        try {\n          conversionRate = await this.functionsUtil.getUniswapConversionRate(DAITokenConfig,IDLETokenConfig);\n        } catch (error) {\n\n        }\n        if (!conversionRate || conversionRate.isNaN()){\n          conversionRate = this.functionsUtil.BNify(0);\n        }\n      }\n\n      if (!conversionRate || this.functionsUtil.BNify(conversionRate).lte(0)){\n        return this.functionsUtil.BNify(0);\n      }\n\n      const tokenPool = await this.functionsUtil.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent,token,tokenConfig);\n\n      const idleDistributedPerYearUSD = this.functionsUtil.BNify(conversionRate).times(idleDistribution);\n      APR = idleDistributedPerYearUSD.div(tokenPool).times(100);\n\n      // console.log(tokenConfig.idle.token,idleDistributedPerYearUSD.toFixed(5),conversionRate.toFixed(5),tokenPool.toFixed(5),APR.toFixed(5));\n\n      return this.functionsUtil.setCachedData(cachedDataKey,APR);\n    }\n\n    return APR;\n  }\n\n  // Get IDLE distribution speed\n  getSpeed = async (idleTokenAddress) => {\n\n    const cachedDataKey = `getIdleSpeed_${idleTokenAddress}`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return this.functionsUtil.BNify(cachedData);\n    }\n\n    let idleSpeeds = await this.functionsUtil.genericContractCall('IdleController','idleSpeeds',[idleTokenAddress]);\n\n    if (idleSpeeds && !this.functionsUtil.BNify(idleSpeeds).isNaN()){\n      idleSpeeds = this.functionsUtil.BNify(idleSpeeds);\n      return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,idleSpeeds,1800);\n    }\n    return null;\n  }\n\n  getDistribution = async (tokenConfig) => {\n\n    const cachedDataKey = `getIdleDistribution_${tokenConfig.idle.token}`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return this.functionsUtil.BNify(cachedData);\n    }\n\n    // Get IDLE distribution speed and Total Supply\n    const idleSpeeds = await this.getSpeed(tokenConfig.idle.address);\n\n    if (idleSpeeds){\n\n      // Get IDLE distribution for Idle in a Year\n      const blocksPerYear = this.functionsUtil.getGlobalConfig(['network','blocksPerYear']);\n\n      // Take 50% of distrubution for lenders side\n      const distribution = this.functionsUtil.BNify(idleSpeeds).times(this.functionsUtil.BNify(blocksPerYear)).div(1e18);\n\n      if (!this.functionsUtil.BNify(distribution).isNaN()){\n        return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,distribution);\n      }\n    }\n\n    return null;\n  }\n\n  getUserDistribution = async (account=null,availableTokens=null,fixByFrequency=false) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens){\n      return false;\n    }\n\n    const currentNetworkId = this.functionsUtil.getRequiredNetworkId();\n\n    let totalSpeed = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n\n      const disabledTokens = this.functionsUtil.getArrayPath(['disabledTokens',currentNetworkId],this.tokenConfig);\n\n      if (disabledTokens.includes(tokenConfig.idle.token)){\n        return;\n      }\n\n      const [\n        idleSpeed,\n        userPoolShare\n      ] = await Promise.all([\n        this.getSpeed(tokenConfig.idle.address),\n        this.functionsUtil.getUserPoolShare(account,tokenConfig)\n      ]);\n\n      if (idleSpeed && userPoolShare){\n        const tokenSpeed = idleSpeed.times(userPoolShare);\n        totalSpeed = totalSpeed.plus(tokenSpeed);\n      }\n    });\n\n    if (fixByFrequency){\n      totalSpeed = this.functionsUtil.fixTokenDecimals(totalSpeed,this.tokenConfig.decimals);\n      totalSpeed = this.functionsUtil.fixDistributionSpeed(totalSpeed,this.tokenConfig.distributionFrequency)\n    }\n\n    return totalSpeed;\n  }\n\n  getAvgApr = async (availableTokens=null) => {\n    if (!availableTokens){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n    let output = this.functionsUtil.BNify(0);\n    let totalAllocation = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [idleApr,tokenAllocation] = await Promise.all([\n        this.getAPR(token,tokenConfig),\n        this.functionsUtil.getTokenAllocation(tokenConfig,false,false)\n      ]);\n      \n      if (idleApr && tokenAllocation){\n        output = output.plus(idleApr.times(tokenAllocation.totalAllocation));\n        totalAllocation = totalAllocation.plus(tokenAllocation.totalAllocation);\n      }\n    });\n\n    output = output.div(totalAllocation);\n\n    return output;\n  }\n\n}\n\nexport default IdleGovToken;","import Web3 from \"web3\";\nimport React from \"react\";\nimport axios from 'axios';\nimport moment from 'moment';\nimport { Text } from \"rimble-ui\";\nimport BigNumber from 'bignumber.js';\nimport IdleGovToken from './IdleGovToken';\nimport { toBuffer } from \"ethereumjs-util\";\nimport globalConfigs from '../configs/globalConfigs';\nimport ENS, { getEnsAddress } from '@ensdomains/ensjs';\nimport availableTokens from '../configs/availableTokens';\nimport IAaveIncentivesController from '../abis/aave/IAaveIncentivesController.json';\n\nconst ethereumjsABI = require('ethereumjs-abi');\n\nwindow.profiler = {};\n\nclass FunctionsUtil {\n\n  // Attributes\n  props = {};\n  idleGovToken = null;\n\n  // Constructor\n  constructor(props){\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n  }\n  trimEth = eth => {\n    return this.BNify(eth).toFixed(6);\n  }\n  toBN = n => new this.props.web3.utils.BN(n)\n  toEth = wei => {\n    if (!this.props.web3){\n      return null;\n    }\n    return this.props.web3.utils.fromWei(\n      (wei || 0).toString(),\n      \"ether\"\n    );\n  }\n  toWei = eth => {\n    if (!this.props.web3){\n      return null;\n    }\n    return this.props.web3.utils.toWei(\n      (eth || 0).toString(),\n      \"ether\"\n    );\n  }\n  htmlDecode = input => {\n    var e = document.createElement('textarea');\n    e.innerHTML = input;\n    return e.childNodes.length === 0 ? '' : e.childNodes[0].nodeValue;\n  }\n  BNify_obj = s => new BigNumber(s)\n  BNify = s => new BigNumber( typeof s === 'object' ? s : String(s) )\n  customLog = (...props) => { if (globalConfigs.logs.messagesEnabled) this.customLog(moment().format('HH:mm:ss'),...props); }\n  customLogError = (...props) => { if (globalConfigs.logs.errorsEnabled) console.error(moment().format('HH:mm:ss'),...props); }\n  getContractByName = (contractName,networkId=null) => {\n    networkId = networkId || this.props.network.required.id;\n    let contract = this.props.contracts.find(c => c && c.name && c.name === contractName);\n    if (this.props.network && this.props.network.required && this.props.network.current && (!this.props.network.isCorrectNetwork || networkId !== this.props.network.current.id) && this.props.contractsNetworks && this.props.contractsNetworks[networkId]){\n      contract = this.props.contractsNetworks[networkId].find(c => c && c.name && c.name === contractName);\n    } else {\n      contract = this.props.contracts.find(c => c && c.name && c.name === contractName);\n    }\n    if (!contract) {\n      return false;\n    }\n    return contract.contract;\n  }\n  normalizeSimpleIDNotification = (n) => {\n    return n.replace(/<\\/p><p>/g,\"\\n\")\n            .replace(/<p>/g,\"\")\n            .replace(/<br>/g,\"\")\n            .replace(/&nbsp;/g,\" \")\n            .replace(/<\\/p>/g,\"\");\n  }\n  capitalize = (str) => {\n    return str ? str.substr(0,1).toUpperCase()+str.substr(1) : '';\n  }\n  strToMoment = (date,format=null) => {\n    return moment(date,format);\n  }\n  replaceArrayProps = (arr1,arr2) => {\n    if (arr2 && Object.keys(arr2).length){\n      Object.keys(arr2).forEach(p => {\n        arr1[p] = arr2[p];\n      });\n    }\n\n    return arr1;\n  }\n  replaceArrayPropsRecursive = (arr1,arr2,props=null) => {\n    if (arr2 && Object.keys(arr2).length){\n      Object.keys(arr2).forEach(p => {\n        if (typeof arr2[p]==='function'){\n          arr1[p] = arr2[p](props);\n        } else if (typeof arr2[p]==='object'){\n          arr1[p] = {...arr1[p],...this.replaceArrayPropsRecursive(arr1,arr2[p],props)};\n        } else {\n          arr1[p] = arr2[p];\n        }\n      });\n    }\n    return arr1;\n  }\n  stripHtml = (html) => {\n     var tmp = document.createElement(\"DIV\");\n     tmp.innerHTML = html;\n     return tmp.textContent || tmp.innerText || \"\";\n  }\n  // VanillaJS function for smooth scroll\n  scrollTo = (to, duration) => {\n    const start = window.scrollY;\n    const change = to - start;\n    const increment = 20;\n    let currentTime = 0;\n\n    Math.easeInOutQuad = function (t, b, c, d) {\n      t /= d/2;\n      if (t < 1) return c/2*t*t + b;\n      t--;\n      return -c/2 * (t*(t-2) - 1) + b;\n    };\n\n    const animateScroll = () => {\n        currentTime += increment;\n        var val = Math.easeInOutQuad(currentTime, start, change, duration);\n        window.scrollTo(0,val);\n        if(currentTime < duration) {\n          window.setTimeout(animateScroll, increment);\n        }\n    };\n\n    animateScroll();\n  }\n  getQueryStringParameterByName = (name, url = window.location.href) => {\n    // eslint-disable-next-line\n    name = name.replace(/[\\[\\]]/g, '\\\\$&');\n    var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)'),\n        results = regex.exec(url);\n    if (!results) return null;\n    if (!results[2]) return '';\n    return decodeURIComponent(results[2].replace(/\\+/g, ' '));\n  }\n  getTxAction = (tx,tokenConfig) => {\n\n    if (!tokenConfig.idle){\n      return null;\n    }\n\n    const idleTokenAddress = tokenConfig.idle.address;\n    const depositProxyContractInfo = this.getGlobalConfig(['contract','methods','deposit','proxyContract']);\n    const migrationContractAddr = tokenConfig.migration && tokenConfig.migration.migrationContract ? tokenConfig.migration.migrationContract.address : null;\n    const migrationContractOldAddrs = tokenConfig.migration && tokenConfig.migration.migrationContract && tokenConfig.migration.migrationContract.oldAddresses ? tokenConfig.migration.migrationContract.oldAddresses : [];\n    const batchMigration = this.getGlobalConfig(['tools','batchMigration','props','availableTokens',tokenConfig.idle.token]);\n    const batchMigrationContractAddr = batchMigration && batchMigration.migrationContract ? batchMigration.migrationContract.address : null;\n\n    const isBatchMigrationTx = batchMigrationContractAddr && tx.from.toLowerCase() === batchMigrationContractAddr.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase();    \n    const isMigrationTx = isBatchMigrationTx || (migrationContractAddr && (tx.from.toLowerCase() === migrationContractAddr.toLowerCase() || migrationContractOldAddrs.map((v) => { return v.toLowerCase(); }).indexOf(tx.from.toLowerCase()) !== -1 ) && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase());\n    const isSendTransferTx = !isMigrationTx && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n    const isReceiveTransferTx = !isMigrationTx && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n    const isDepositTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && (tx.to.toLowerCase() === idleTokenAddress.toLowerCase() || (depositProxyContractInfo && tx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase()));\n    const isRedeemTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && tx.to.toLowerCase() === this.props.account.toLowerCase();\n    const isSwapTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && !isDepositTx && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n\n    let action = null;\n\n    if (isDepositTx){\n      action = 'Deposit';\n    } else if (isRedeemTx){\n      action = 'Redeem';\n    } else if (isMigrationTx){\n      action = 'Migrate';\n    } else if (isSendTransferTx){\n      action = 'Send';\n    } else if (isReceiveTransferTx){\n      action = 'Receive';\n    } else if (isSwapTx){\n      action = 'Swap';\n    } else if (isSwapTx){\n      action = 'SwapOut';\n    }\n\n    return action;\n  }\n  shortenHash = (hash,startLen=7,endLen=4) => {\n    let shortHash = hash;\n    const txStart = shortHash.substr(0, startLen);\n    const txEnd = shortHash.substr(shortHash.length - endLen);\n    shortHash = txStart + \"...\" + txEnd;\n    return shortHash;\n  }\n\n  switchEthereumChain = (chainId) => {\n    const web3 = this.getCurrentWeb3();\n    if (!web3 || !web3.utils || !web3.currentProvider || typeof web3.currentProvider.request !== 'function'){\n      return false;\n    }\n\n    chainId = parseInt(chainId);\n    const networkConfig = this.getGlobalConfig(['network','availableNetworks',chainId]);\n\n    if (!networkConfig){\n      return false;\n    }\n\n    const params = [{\n      chainId:web3.utils.toHex(chainId)\n    }];\n\n    return web3.currentProvider.request({\n      params,\n      method:'wallet_switchEthereumChain',\n    });\n  }\n\n  addEthereumChain = (chainId) => {\n    const web3 = this.getCurrentWeb3();\n\n    // console.log('addEthereumChain',chainId,web3.utils,typeof web3.currentProvider.request);\n\n    if (!web3 || !web3.utils || !web3.currentProvider || typeof web3.currentProvider.request !== 'function'){\n      return false;\n    }\n\n    chainId = parseInt(chainId);\n    const networkConfig = this.getGlobalConfig(['network','availableNetworks',chainId]);\n\n    if (!networkConfig){\n      return false;\n    }\n\n    if (chainId === 1){\n      return this.switchEthereumChain(chainId);\n    }\n\n    const chainName = networkConfig.chainName || networkConfig.name;\n    const providerConfig = this.getGlobalConfig(['network','providers',networkConfig.provider]);\n    const blockExplorerUrl = this.getGlobalConfig(['network','providers',networkConfig.explorer,'baseUrl',chainId]);\n    const rpcUrl = (providerConfig.publicRpc && providerConfig.publicRpc[chainId]) || (providerConfig.rpc[chainId]+providerConfig.key);\n    const params = [{\n      chainName,\n      rpcUrls:[rpcUrl],\n      chainId: web3.utils.toHex(chainId),\n      nativeCurrency: {\n        decimals: 18,\n        name: networkConfig.baseToken,\n        symbol: networkConfig.baseToken\n      },\n      blockExplorerUrls: [blockExplorerUrl]\n    }];\n\n    // console.log('addEthereumChain',params);\n\n    return web3.currentProvider.request({\n      params,\n      method:'wallet_addEthereumChain',\n    });\n  }\n  getENSName = async (address) => {\n\n    const networkId = this.getRequiredNetworkId();\n    const ensConfig = this.getGlobalConfig(['network','providers','ens']);\n\n    if (!ensConfig.enabled || !ensConfig.supportedNetworks.includes(networkId)){\n      return null;\n    }\n\n    if (!this.checkAddress(address) || !this.props.web3){\n      return null;\n    }\n\n    const cachedDataKey = `getENSName_${address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const TTL = 3600;\n    const provider = this.props.web3.currentProvider;\n    if (networkId === 1){\n      const ens = new ENS({ provider, ensAddress: getEnsAddress(networkId.toString()) });\n      const ensName = await ens.getName(address);\n      if (ensName && ensName.name){\n        const addressCheck = await ens.name(ensName.name).getAddress();\n        if (addressCheck && address.toLowerCase() === addressCheck.toLowerCase()){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,ensName.name,TTL);\n        }\n      }\n    }\n\n    return null;\n  }\n  getAccountPortfolioTranches = async (availableTranches=null,account=null) => {\n    const portfolio = {\n      transactions:[],\n      tranchesBalance:[],\n      avgAPY:this.BNify(0),\n      totalBalance:this.BNify(0),\n      totalEarnings:this.BNify(0),\n      totalAmountLent:this.BNify(0),\n      totalEarningsPerc:this.BNify(0),\n    };\n\n    availableTranches = availableTranches ? availableTranches : this.props.availableTranches;\n    account = account ? account : this.props.account;\n\n    if (!account || !availableTranches){\n      return portfolio;\n    }\n\n    const tranches = this.getGlobalConfig(['tranches']);\n\n    await this.asyncForEach(Object.keys(availableTranches),async (protocol) => {\n      const protocolConfig = availableTranches[protocol];\n      await this.asyncForEach(Object.keys(protocolConfig),async (token) => {\n        const tokenConfig = protocolConfig[token];\n        await this.asyncForEach(Object.keys(tranches),async (tranche) => {\n          const trancheConfig = tokenConfig[tranche];\n          const trancheTokenBalance = await this.loadTrancheFieldRaw('trancheDeposited',{},protocol,token,tranche,tokenConfig,trancheConfig,account);\n\n          // console.log('trancheTokenBalance',protocol,token,tranche,trancheTokenBalance);\n\n          if (trancheTokenBalance){\n            const [\n              tranchePool,\n              tranchePrice,\n            ] = await Promise.all([\n              this.loadTrancheFieldRaw('tranchePool',{},protocol,token,tranche,tokenConfig,trancheConfig,account),\n              this.loadTrancheFieldRaw('tranchePrice',{},protocol,token,tranche,tokenConfig,trancheConfig,account)\n            ]);\n            const tokenBalance = trancheTokenBalance.times(tranchePrice);\n\n            if (!this.BNify(tranchePrice).isNaN() && !this.BNify(tokenBalance).isNaN()){\n              const [\n                trancheUserInfo,\n                trancheApy,\n              ] = await Promise.all([\n                this.getTrancheUserInfo(tokenConfig,trancheConfig,account),\n                this.loadTrancheFieldRaw('trancheApy',{},protocol,token,tranche,tokenConfig,trancheConfig,account),\n              ]);\n\n              const poolShare = tokenBalance.div(tranchePool);\n              const amountDeposited = trancheUserInfo.amountDeposited;\n              const trancheEarnings = tokenBalance.minus(amountDeposited);\n\n              // console.log('trancheBalance',protocol,token,tranche,'trancheTokenBalance',trancheTokenBalance.toFixed(),'tranchePrice',tranchePrice.toFixed(),'tokenBalance',tokenBalance.toFixed(),'trancheApy',trancheApy.toFixed(),'amountDeposited',amountDeposited.toFixed());\n              portfolio.transactions = [...portfolio.transactions,...trancheUserInfo.transactions];\n\n              portfolio.tranchesBalance.push({\n                token,\n                tranche,\n                protocol,\n                poolShare,\n                trancheApy,\n                tranchePrice,\n                tokenBalance,\n                trancheEarnings,\n                amountDeposited, \n                trancheTokenBalance\n              });\n\n              // console.log(protocol,token,tranche,amountDeposited.toFixed(),tokenBalance.toFixed(),trancheEarnings.toFixed());\n\n              // Increment total balance\n              portfolio.totalBalance = portfolio.totalBalance.plus(tokenBalance);\n            }\n          }\n        });\n      });\n    });\n\n    let avgAPY = this.BNify(0);\n    let totalEarnings = this.BNify(0);\n    let totalAmountLent = this.BNify(0);\n    let totalEarningsPerc = this.BNify(0);\n\n    // Calculate aggregated data\n    portfolio.tranchesBalance.forEach( trancheInfo => {\n      const trancheApy = this.BNify(trancheInfo.trancheApy);\n      const trancheWeight = trancheInfo.tokenBalance.div(portfolio.totalBalance);\n\n      // Add tranche weight\n      trancheInfo.trancheWeight = trancheWeight;\n\n      if (trancheInfo.trancheEarnings){\n        totalEarnings = totalEarnings.plus(trancheInfo.trancheEarnings);\n      }\n\n      if (trancheApy){\n        avgAPY = avgAPY.plus(trancheApy.times(trancheWeight));\n      }\n\n      if (trancheInfo.amountDeposited){\n        totalAmountLent = totalAmountLent.plus(trancheInfo.amountDeposited);\n      }\n    });\n\n    if (totalAmountLent.gt(0)){\n      totalEarningsPerc = totalEarnings.div(totalAmountLent).times(100);\n    }\n\n    portfolio.avgAPY = avgAPY;\n    portfolio.totalEarnings = totalEarnings;\n    portfolio.totalAmountLent = totalAmountLent;\n    portfolio.totalEarningsPerc = totalEarningsPerc;\n\n    return portfolio;\n  }\n  getAccountPortfolio = async (availableTokens=null,account=null) => {\n    const portfolio = {\n      tokensBalance:{},\n      tokensToMigrate:{},\n      avgAPY:this.BNify(0),\n      totalBalance:this.BNify(0),\n      totalEarnings:this.BNify(0),\n      totalAmountLent:this.BNify(0),\n      totalEarningsPerc:this.BNify(0),\n      totalBalanceConverted:this.BNify(0)\n    };\n\n    availableTokens = availableTokens ? availableTokens : this.props.availableTokens;\n    account = account ? account : this.props.account;\n\n    if (!account || !availableTokens){\n      return portfolio;\n    }\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [\n        {\n          migrationEnabled,\n          oldContractBalanceFormatted\n        },\n        idleTokenBalance\n      ] = await Promise.all([\n        this.checkMigration(tokenConfig,this.props.account),\n        this.getTokenBalance(tokenConfig.idle.token,account)\n      ]);\n\n      if (migrationEnabled){\n        const tokenKey = this.props.selectedStrategy ? token : tokenConfig.idle.token;\n        portfolio.tokensToMigrate[tokenKey] = {\n          token,\n          tokenConfig,\n          oldContractBalanceFormatted,\n          strategy:this.props.selectedStrategy\n        };\n      }\n\n      if (idleTokenBalance){\n        const tokenPrice = await this.getIdleTokenPrice(tokenConfig);\n        const tokenBalance = idleTokenBalance.times(tokenPrice);\n        const tokenBalanceConverted = await this.convertTokenBalance(tokenBalance,token,tokenConfig,isRisk);\n\n        if (!tokenPrice.isNaN() && !tokenBalance.isNaN()){\n          portfolio.tokensBalance[token] = {\n            tokenPrice,\n            tokenBalance,\n            idleTokenBalance,\n            tokenBalanceConverted\n          };\n\n          // Increment total balance\n          portfolio.totalBalance = portfolio.totalBalance.plus(tokenBalance);\n          portfolio.totalBalanceConverted = portfolio.totalBalanceConverted.plus(tokenBalanceConverted);\n        }\n      }\n    });\n\n    const orderedTokensBalance = {};\n    Object.keys(availableTokens).forEach( token => {\n      if (portfolio.tokensBalance[token]){\n        orderedTokensBalance[token] = portfolio.tokensBalance[token];\n      }\n    });\n\n    portfolio.tokensBalance = orderedTokensBalance;\n\n    const depositedTokens = Object.keys(portfolio.tokensBalance).filter(token => ( this.BNify(portfolio.tokensBalance[token].idleTokenBalance).gt(0) ));\n\n    let avgAPY = this.BNify(0);\n    let totalEarnings = this.BNify(0);\n    let totalAmountLent = this.BNify(0);\n    let totalEarningsPerc = this.BNify(0);\n    // const amountLents = await this.getAmountLent(depositedTokens,this.props.account);\n\n    await this.asyncForEach(depositedTokens,async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [\n        tokenAprs,\n        amountDeposited\n      ] = await Promise.all([\n        this.getTokenAprs(tokenConfig),\n        this.getAmountDeposited(tokenConfig,account)\n      ]);\n\n      const tokenBalanceConverted = portfolio.tokensBalance[token].tokenBalanceConverted;\n\n      const tokenAPY = this.BNify(tokenAprs.avgApy);\n      const tokenWeight = tokenBalanceConverted.div(portfolio.totalBalanceConverted);\n      const amountLentToken = await this.convertTokenBalance(amountDeposited,token,tokenConfig,isRisk);\n      const tokenEarnings = tokenBalanceConverted.minus(amountLentToken);\n\n      if (tokenEarnings){\n        totalEarnings = totalEarnings.plus(tokenEarnings);\n      }\n\n      if (tokenAPY){\n        avgAPY = avgAPY.plus(tokenAPY.times(tokenWeight));\n      }\n\n      if (amountLentToken){\n        totalAmountLent = totalAmountLent.plus(amountLentToken);\n      }\n\n      // console.log(token,amountLentToken.toFixed(),tokenEarnings.toFixed(),tokenBalanceConverted.toFixed());\n    });\n\n    if (totalAmountLent.gt(0)){\n      totalEarningsPerc = totalEarnings.div(totalAmountLent).times(100);\n    }\n\n    portfolio.avgAPY = avgAPY;\n    portfolio.totalEarnings = totalEarnings;\n    portfolio.totalAmountLent = totalAmountLent;\n    portfolio.totalEarningsPerc = totalEarningsPerc;\n\n    // debugger;\n\n    return portfolio;\n  }\n  getCurrentWeb3 = () => {\n    const requiredNetwork = this.getRequiredNetwork();\n    const networkConfig = this.getGlobalConfig(['network','availableNetworks',requiredNetwork.id]);\n    const provider = networkConfig ? networkConfig.provider : 'infura';\n    const web3RpcKey = this.getGlobalConfig(['network','providers',provider,'key']);\n    const web3Rpc = this.getGlobalConfig(['network','providers',provider,'rpc',requiredNetwork.id])+web3RpcKey;\n\n    let currentWeb3 = null;\n    if (window.ethereum) {\n      currentWeb3 = new Web3(window.ethereum);\n    } else if (window.web3) {\n      currentWeb3 = new Web3(window.web3);\n    } else {\n      currentWeb3 = new Web3(new Web3.providers.HttpProvider(web3Rpc));\n    }\n\n    return currentWeb3;\n  }\n  getCurveAvgSlippage = async (enabledTokens=[],account=null,fixDecimals=true) => {\n    account = account ? account : this.props.account;\n\n    if (!account){\n      return [];\n    }\n\n    const availableTokens = this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    let processedTxs = {};\n    const processedHashes = {};\n    let curveTokensBalance = this.BNify(0);\n    const curveTxs = await this.getCurveTxs(account,0,'latest',enabledTokens);\n\n    if (curveTxs && curveTxs.length){\n\n      curveTxs.forEach((tx,index) => {\n\n        // Skip transactions with no hash\n        if (!tx.hash || !tx.curveTokens || !tx.curveTokenPrice){\n          return false;\n        }\n\n        const tokenAmount = this.BNify(tx.tokenAmount);\n        let curveTokens = this.BNify(tx.curveTokens);\n        const curveTokenPrice = this.BNify(tx.curveTokenPrice);\n\n        switch (tx.action){\n          case 'CurveIn':\n          case 'CurveZapIn':\n          case 'CurveDepositIn':\n          case 'CurveTransferIn':\n            if (tx.action === 'CurveTransferIn'){\n              if (index>0 && curveTokensBalance.gt(0)){\n                return;\n              }\n            }\n\n            if (!processedTxs[tx.hash]){\n              processedTxs[tx.hash] = {\n                price:null,\n                received:null,\n                slippage:null,\n                deposited:this.BNify(0),\n              };\n            }\n\n            processedTxs[tx.hash].deposited = processedTxs[tx.hash].deposited.plus(tokenAmount);\n            if (processedTxs[tx.hash].received === null){\n              processedTxs[tx.hash].price = curveTokenPrice;\n              processedTxs[tx.hash].received = curveTokens.times(curveTokenPrice);\n            }\n\n            // this.customLog('getCurveAvgSlippage',tx.action,tx.hash,tx.blockNumber,curveTokens.toFixed(6),curveTokenPrice.toFixed(6),processedTxs[tx.hash].deposited.toFixed(6),processedTxs[tx.hash].received.toFixed(6));\n          break;\n          case 'CurveOut':\n          case 'CurveZapOut':\n          case 'CurveDepositOut':\n            curveTokens = curveTokens.times(this.BNify(-1));\n          break;\n          default:\n          break;\n        }\n\n        // Update curveTokens balance\n        if (!processedHashes[tx.hash]){\n          curveTokensBalance = curveTokensBalance.plus(curveTokens);\n          if (curveTokensBalance.lte(0)){\n            curveTokensBalance = this.BNify(0);\n\n            // Reset processed transactions\n            // processedTxs = {};\n          }\n          processedHashes[tx.hash] = true;\n        }\n      });\n    }\n\n    // this.customLog('processedTxs',processedTxs);\n\n    let avgSlippage = this.BNify(0);\n    let totalDeposited = this.BNify(0);\n    Object.values(processedTxs).forEach( tx => {\n      const slippage = tx.received.div(tx.deposited).minus(1);\n      avgSlippage = avgSlippage.plus(slippage.times(tx.deposited));\n      totalDeposited = totalDeposited.plus(tx.deposited);\n    });\n\n    avgSlippage = avgSlippage.div(totalDeposited).times(-1);\n\n    // debugger;\n    // this.customLog('avgSlippage',avgSlippage.toString());\n\n    return avgSlippage;\n  }\n  getCurveAvgBuyPrice = async (enabledTokens=[],account=null) => {\n    account = account ? account : this.props.account;\n\n    if (!account){\n      return [];\n    }\n\n    const availableTokens = this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    const processedTxs = {};\n    let avgBuyPrice = this.BNify(0);\n    let curveTokensBalance = this.BNify(0);\n    const curveTxs = await this.getCurveTxs(account,0,'latest',enabledTokens);\n\n    // this.customLog('curveTxs',curveTxs);\n\n    if (curveTxs && curveTxs.length){\n\n      curveTxs.forEach((tx,index) => {\n\n        if (!processedTxs[tx.hash]){\n          processedTxs[tx.hash] = [];\n        }\n\n        if (processedTxs[tx.hash].includes(tx.action)){\n          return;\n        }\n\n        // Skip transactions with no hash\n        if (!tx.hash || !tx.curveTokens || !tx.curveTokenPrice){\n          return false;\n        }\n\n        const prevAvgBuyPrice = avgBuyPrice;\n        let curveTokens = this.BNify(tx.curveTokens);\n        const curveTokenPrice = this.BNify(tx.curveTokenPrice);\n\n        // Deposited\n        switch (tx.action){\n          case 'CurveIn':\n          case 'CurveZapIn':\n          case 'CurveDepositIn':\n          case 'CurveTransferIn':\n            if (tx.action === 'CurveTransferIn'){\n              if (index>0 && curveTokensBalance.gt(0)){\n                return;\n              }\n            }\n            avgBuyPrice = curveTokens.times(curveTokenPrice).plus(prevAvgBuyPrice.times(curveTokensBalance)).div(curveTokensBalance.plus(curveTokens));\n          break;\n          case 'CurveOut':\n          case 'CurveZapOut':\n          case 'CurveDepositOut':\n          // case 'CurveTransferOut':\n            curveTokens = curveTokens.times(this.BNify(-1));\n          break;\n          default:\n          break;\n        }\n        \n        // Update curveTokens balance\n        curveTokensBalance = curveTokensBalance.plus(curveTokens);\n        if (curveTokensBalance.lte(0)){\n          avgBuyPrice = this.BNify(0);\n          curveTokensBalance = this.BNify(0);\n        }\n\n        processedTxs[tx.hash].push(tx.action);\n\n        // this.customLog('getCurveAvgBuyPrice',tx.action,tx.hash,tx.blockNumber,curveTokens.toString(),curveTokenPrice.toString(),curveTokensBalance.toString(),avgBuyPrice.toString());\n      });\n    }\n\n    // this.customLog('avgCurveBuyPrice',avgBuyPrice.toString());\n\n    return avgBuyPrice;\n  }\n  getAvgBuyPrice = async (enabledTokens=[],account) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens){\n      return [];\n    }\n\n    const output = {};\n    const etherscanTxs = await this.getEtherscanTxs(account,0,'latest',enabledTokens);\n\n    enabledTokens.forEach( selectedToken => {\n\n      output[selectedToken] = [];\n      let avgBuyPrice = this.BNify(0);\n\n      let idleTokensBalance= this.BNify(0);\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n\n      if (filteredTxs && filteredTxs.length){\n\n        filteredTxs.forEach((tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.idleTokens || !tx.tokenPrice){\n            return false;\n          }\n\n          const prevAvgBuyPrice = avgBuyPrice;\n          let idleTokens = this.BNify(tx.idleTokens);\n          const tokenPrice = this.BNify(tx.tokenPrice);\n\n          // Deposited\n          switch (tx.action){\n            case 'Deposit':\n            case 'Receive':\n            case 'Swap':\n            case 'Migrate':\n            case 'CurveOut':\n              avgBuyPrice = idleTokens.times(tokenPrice).plus(prevAvgBuyPrice.times(idleTokensBalance)).div(idleTokensBalance.plus(idleTokens));\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              idleTokens = idleTokens.times(this.BNify(-1));\n            break;\n            default:\n            break;\n          }\n\n          // Update idleTokens balance\n          idleTokensBalance = idleTokensBalance.plus(idleTokens);\n          if (idleTokensBalance.lte(0)){\n            avgBuyPrice = this.BNify(0);\n            idleTokensBalance = this.BNify(0);\n          }\n\n        });\n      }\n\n      // Add token Data\n      output[selectedToken] = avgBuyPrice;\n    });\n\n    return output;\n  }\n  getFirstDepositTx = async (enabledTokens=[],account) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens){\n      return [];\n    }\n\n    const etherscanTxs = await this.getEtherscanTxs(account,0,'latest',enabledTokens);\n\n    const deposits = {};\n\n    enabledTokens.forEach((selectedToken) => {\n      let amountLent = this.BNify(0);\n      let firstDepositTx = null;\n      deposits[selectedToken] = firstDepositTx;\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        filteredTxs.forEach((tx,index) => {\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.tokenAmount){\n            return false;\n          }\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n              amountLent = amountLent.plus(tx.tokenAmount);\n              if (!firstDepositTx){\n                firstDepositTx = tx;\n              }\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tx.tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.BNify(0);\n            firstDepositTx = null;\n          }\n        });\n      }\n\n      // Add token Data\n      deposits[selectedToken] = firstDepositTx;\n    });\n\n    return deposits;\n  }\n  getDashboardSectionUrl = (section,env=null) => {\n    const envUrl = this.getGlobalConfig(['environments',env,'url']);\n    const baseUrl = env && envUrl ? envUrl : window.location.origin;\n    return `${baseUrl}/#${this.getGlobalConfig(['dashboard','baseRoute'])}/${section}`;\n  }\n  asyncTimeout = (ms) => {\n    return new Promise(resolve => setTimeout(resolve, ms));\n  }\n  getDepositTimestamp = async (enabledTokens=[],account) => {\n    const firstDepositTxs = await this.getFirstDepositTx(enabledTokens,account);\n    if (firstDepositTxs){\n      return Object.keys(firstDepositTxs).reduce( (acc,token) => {\n        if (firstDepositTxs[token]){\n          acc[token] = firstDepositTxs[token].timeStamp;\n        }\n        return acc;\n      },{});\n    }\n    return null;\n  }\n  getTrancheHarvests = async (tokenConfig,trancheConfig) => {\n    const harvestsList = {};\n    const stakingRewards = await this.loadTrancheFieldRaw('stakingRewards',{},tokenConfig.protocol,tokenConfig.token,trancheConfig.tranche,tokenConfig,trancheConfig);\n    await this.asyncForEach(Object.keys(stakingRewards),async (token) => {\n      const eventFilters = {\n        from:tokenConfig.CDO.address,\n        to:trancheConfig.CDORewards.address\n      }\n      const transfers = await this.getContractEvents(token,'Transfer',{fromBlock: tokenConfig.blockNumber,toBlock:'latest',filter:eventFilters});\n\n      if (transfers && transfers.length>0){\n        harvestsList[token] = transfers;\n      }\n    });\n\n    const autoFarming = await this.loadTrancheFieldRaw('autoFarming',{},tokenConfig.protocol,tokenConfig.token,trancheConfig.tranche,tokenConfig,trancheConfig);\n    await this.asyncForEach(Object.keys(autoFarming),async (token) => {\n      const eventFilters = {\n        to:tokenConfig.CDO.address\n      }\n      const transfers = await this.getContractEvents(token,'Transfer',{fromBlock: tokenConfig.blockNumber,toBlock:'latest',filter:eventFilters});\n\n      if (transfers && transfers.length>0){\n        harvestsList[token] = transfers;\n      }\n    });\n\n    // console.log('getTrancheHarvests',stakingRewards,autoFarming,harvestsList);\n    return harvestsList;\n  }\n  getTrancheRewardTokensInfo = async (tokenConfig,trancheConfig) => {\n    const stakingRewards = await this.loadTrancheFieldRaw('stakingRewards',{},tokenConfig.protocol,tokenConfig.token,trancheConfig.tranche,tokenConfig,trancheConfig);\n    const tokensDistribution = {};\n    await this.asyncForEach(Object.keys(stakingRewards),async (token) => {\n      const eventFilters = {\n        from:tokenConfig.CDO.address,\n        to:trancheConfig.CDORewards.address\n      }\n      const transfers = await this.getContractEvents(token,'Transfer',{fromBlock: tokenConfig.blockNumber,toBlock:'latest',filter:eventFilters});\n\n      if (transfers && transfers.length>0){\n        const firstHarvest = transfers.length ? transfers[0] : null;\n        const latestHarvest = transfers[transfers.length-1];\n        const firstBlock = firstHarvest ? firstHarvest.blockNumber : tokenConfig.blockNumber;\n\n        const govTokenConfig = this.getGlobalConfig(['govTokens',token]);\n        const DAITokenConfig = {\n          address:this.getContractByName('DAI')._address\n        };\n        const [\n          prevBlockInfo,\n          lastBlockInfo,\n          conversionRate,\n          lastBlockPoolSize\n        ] = await Promise.all([\n          this.getBlockInfo(firstBlock),\n          this.getBlockInfo(latestHarvest.blockNumber),\n          this.getUniswapConversionRate(DAITokenConfig,govTokenConfig),\n          this.genericContractCallCached(tokenConfig.CDO.name,'getContractValue',[],{},latestHarvest.blockNumber)\n        ]);\n\n        if (prevBlockInfo && lastBlockInfo){\n          const poolSize = this.fixTokenDecimals(lastBlockPoolSize,tokenConfig.CDO.decimals);\n          const elapsedBlocks = latestHarvest.blockNumber-firstBlock;\n          const elapsedSeconds = lastBlockInfo.timestamp-prevBlockInfo.timestamp;\n\n          const lastAmount = this.fixTokenDecimals(latestHarvest.returnValues.value,govTokenConfig.decimals);\n          const totalAmount = transfers.reduce( (total,t) => {\n            total = total.plus(this.fixTokenDecimals(t.returnValues.value,govTokenConfig.decimals));\n            return total;\n          },this.BNify(0));\n\n          const tokensPerBlock = totalAmount.div(elapsedBlocks);\n          const tokensPerSecond = totalAmount.div(elapsedSeconds);\n          const tokensPerDay = tokensPerSecond.times(86400);\n          const tokensPerYear = tokensPerSecond.times(this.getGlobalConfig(['network','secondsPerYear']));\n          const convertedTokensPerYear = tokensPerYear.times(conversionRate);\n          const tokenApr = convertedTokensPerYear.div(poolSize);\n          const tokenApy = this.apr2apy(tokenApr);\n\n          tokensDistribution[token] = {\n            lastAmount,\n            totalAmount,\n            apr:tokenApr,\n            apy:tokenApy,\n            tokensPerDay,\n            firstHarvest,\n            tokensPerYear,\n            latestHarvest,\n            tokensPerBlock,\n            tokensPerSecond,\n            convertedTokensPerYear\n          };\n        }\n      }\n    });\n\n    // console.log('tokensDistribution',tokensDistribution);\n\n    return tokensDistribution;\n  }\n  getTrancheUserInfo = async (tokenConfig,trancheConfig,account) => {\n    account = account || this.props.account;\n    const cachedDataKey = `amountDepositedTranche_${tokenConfig.token}_${trancheConfig.token}_${account}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const defaultEventsConfig = {to:'to',from:'from',value:'value'};\n    const underlyingEventsConfig = this.getGlobalConfig(['events',tokenConfig.token,'fields']) || defaultEventsConfig;\n\n    const underlyingEventsFilters = {};\n    underlyingEventsFilters[underlyingEventsConfig.to] = [this.props.account,tokenConfig.CDO.address];\n    underlyingEventsFilters[underlyingEventsConfig.from] = [this.props.account,tokenConfig.CDO.address];\n\n    const [\n      underlying_transfers,\n      trancheToken_transfers\n    ] = await Promise.all([\n      this.getContractEvents(tokenConfig.token,'Transfer',{fromBlock: trancheConfig.blockNumber, toBlock:'latest',filter:underlyingEventsFilters}),\n      this.getContractEvents(trancheConfig.name,'Transfer',{fromBlock: trancheConfig.blockNumber, toBlock:'latest',filter:{from:['0x0000000000000000000000000000000000000000',this.props.account],to:['0x0000000000000000000000000000000000000000',this.props.account]}})\n    ]);\n\n    // console.log('getAmountDepositedTranche',trancheConfig.name,'underlying_transfers',underlying_transfers,'trancheToken_transfers',trancheToken_transfers);\n\n    const transactions = [];\n    let firstDepositTx = null;\n    let avgBuyPrice = this.BNify(0);\n    let amountDeposited = this.BNify(0);\n    let totalAmountDeposited = this.BNify(0);\n\n    await this.asyncForEach(trancheToken_transfers, async (trancheTokenTransferEvent) => {\n      const tokenTransferEvent = underlying_transfers.find( t => t.transactionHash.toLowerCase() === trancheTokenTransferEvent.transactionHash.toLowerCase() );\n\n      // Skip if no tranche token transfer event found\n      if (!tokenTransferEvent){\n        return;\n      }\n\n      const tokenAmount = this.fixTokenDecimals(tokenTransferEvent.returnValues[underlyingEventsConfig.value],tokenConfig.decimals);\n      const trancheTokenAmount = this.fixTokenDecimals(trancheTokenTransferEvent.returnValues.value,trancheConfig.decimals);\n\n      // console.log('tranchePrice',trancheConfig.token,tokenAmount.toFixed(),trancheTokenAmount.toFixed(),tranchePrice.toFixed());\n      const tranchePrice = tokenAmount.div(trancheTokenAmount);\n      const blockInfo = await this.getBlockInfo(tokenTransferEvent.blockNumber);\n      const hashKey = `${trancheConfig.token}_${tokenTransferEvent.transactionHash}`;\n      const protocolConfig = this.getGlobalConfig(['stats','protocols',tokenConfig.protocol]);\n      const protocolIcon = `images/protocols/${protocolConfig.icon || `${tokenConfig.protocol}.svg`}`;\n\n      const tx = {\n        hashKey,\n        action:null,\n        tokenAmount,\n        tranchePrice,\n        protocolIcon,\n        value:tokenAmount,\n        status:'Completed',\n        token:tokenConfig.token,\n        tranche:trancheConfig.tranche,\n        protocol:protocolConfig.label,\n        tokenSymbol:tokenConfig.token,\n        trancheTokens:trancheTokenAmount,\n        hash:tokenTransferEvent.transactionHash,\n        blockNumber:tokenTransferEvent.blockNumber,\n        timeStamp:blockInfo ? blockInfo.timestamp : null,\n      };\n\n      // Deposit\n      if (trancheTokenTransferEvent.returnValues.from.toLowerCase() === '0x0000000000000000000000000000000000000000'){\n        // Set first deposit tx\n        if (!firstDepositTx){\n          firstDepositTx = tx;\n        }\n        avgBuyPrice = avgBuyPrice.plus(tranchePrice.times(tokenAmount));\n        amountDeposited = amountDeposited.plus(tokenAmount);\n        totalAmountDeposited = totalAmountDeposited.plus(tokenAmount);\n\n        tx.action = 'Deposit';\n        // console.log('Deposit',trancheConfig.token,tokenAmount.toFixed(),amountDeposited.toFixed(),tranchePrice.toFixed(),avgBuyPrice.toFixed());\n      // Withdraw\n      } else if (trancheTokenTransferEvent.returnValues.to.toLowerCase() === '0x0000000000000000000000000000000000000000'){\n        tx.action = 'Withdraw';\n        amountDeposited = amountDeposited.minus(tokenAmount);\n        if (amountDeposited.lt(0)){\n          firstDepositTx = null;\n          avgBuyPrice = this.BNify(0);\n          amountDeposited = this.BNify(0);\n          totalAmountDeposited = this.BNify(0);\n        }\n        // console.log('Redeem',trancheConfig.token,tokenAmount.toFixed(),amountDeposited.toFixed(),avgBuyPrice.toFixed());\n      }\n\n      transactions.push(tx);\n    });\n\n    avgBuyPrice = avgBuyPrice.div(totalAmountDeposited);\n\n    // console.log(trancheConfig.token,'amountDeposited',amountDeposited.toFixed(),'avgBuyPrice',avgBuyPrice.toFixed(),'transactions',transactions);\n\n    return {\n      avgBuyPrice,\n      transactions,\n      firstDepositTx,\n      amountDeposited\n    }\n  }\n  getTrancheUserTransactions = async (tokenConfig,trancheConfig,account) => {\n    const trancheUserInfo = await this.getTrancheUserInfo(tokenConfig,trancheConfig,account);\n    if (trancheUserInfo){\n      return trancheUserInfo.transactions;\n    }\n    return null;\n  }\n  getTrancheFirstDepositTx = async (tokenConfig,trancheConfig,account) => {\n      const trancheUserInfo = await this.getTrancheUserInfo(tokenConfig,trancheConfig,account);\n      if (trancheUserInfo){\n        return trancheUserInfo.firstDepositTx;\n      }\n      return null;\n  }\n  getAmountDepositedTranche = async (tokenConfig,trancheConfig,account) => {\n    const trancheUserInfo = await this.getTrancheUserInfo(tokenConfig,trancheConfig,account);\n    if (trancheUserInfo){\n      return trancheUserInfo.amountDeposited;\n    }\n    return null;\n  }\n  getAmountDeposited = async (tokenConfig,account) => {\n    const cachedDataKey = `amountDeposited_${tokenConfig.idle.token}_${account}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let [tokenBalance,userAvgPrice] = await Promise.all([\n      this.getTokenBalance(tokenConfig.idle.token,account),\n      this.genericContractCallCached(tokenConfig.idle.token, 'userAvgPrices', [account])\n    ]);\n\n    if (tokenBalance && userAvgPrice){\n      userAvgPrice = this.fixTokenDecimals(userAvgPrice,tokenConfig.decimals);\n      const amountDeposited = tokenBalance.times(userAvgPrice);\n      return this.setCachedDataWithLocalStorage(cachedDataKey,amountDeposited);\n    }\n\n    return null;\n  }\n  getAmountLent = async (enabledTokens=[],account) => {\n\n    account = account || this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens){\n      return [];\n    }\n\n    const etherscanTxs = await this.getEtherscanTxs(account,0,'latest',enabledTokens,false);\n\n    const amountLents = {};\n\n    enabledTokens.forEach((selectedToken) => {\n      let amountLent = this.BNify(0);\n      amountLents[selectedToken] = amountLent;\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        filteredTxs.forEach((tx,index) => {\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.tokenAmount){\n            return false;\n          }\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n            case 'CurveOut':\n              amountLent = amountLent.plus(tx.tokenAmount);\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tx.tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.BNify(0);\n          }\n        });\n      }\n\n      // Add token Data\n      amountLents[selectedToken] = amountLent;\n    });\n\n    // debugger;\n\n    return amountLents;\n  }\n  getBaseToken = () => {\n    const networkConfig = this.getCurrentNetwork();\n    return networkConfig ? networkConfig.baseToken : this.getGlobalConfig(['baseToken']);\n  }\n  getCurrentNetwork = () => {\n    const networkId = this.getCurrentNetworkId();\n    const network = this.getGlobalConfig(['network','availableNetworks',networkId]);\n    network.id = networkId;\n    return network;\n  }\n  getRequiredNetwork = () => {\n    const networkId = this.getRequiredNetworkId();\n    const network = this.getGlobalConfig(['network','availableNetworks',networkId]);\n    network.id = networkId;\n    return network;\n  }\n  getRequiredNetworkId = () => {\n    const defaultNetwork = this.getGlobalConfig(['network','requiredNetwork']);\n    return this.props.network && this.props.network.required ? this.props.network.required.id || defaultNetwork : defaultNetwork;\n  }\n  getCurrentNetworkId = () => {\n    const defaultNetwork = this.getGlobalConfig(['network','requiredNetwork']);\n    return this.props.network && this.props.network.current ? this.props.network.current.id || defaultNetwork : defaultNetwork;\n  }\n  getPolygonBridgeTxs = async (account=false,enabledTokens=[]) => {\n\n    account = account ? account : this.props.account;\n\n    if (!account || !this.props.web3){\n      return [];\n    }\n\n    const cachedDataKey = `polygonBridgeTxs_${account}_${JSON.stringify(enabledTokens)}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n\n    account = account.toLowerCase();\n\n    let txs = [];\n    const currentNetwork = this.getRequiredNetwork();\n    const currentNetworkId = this.getRequiredNetworkId();\n    const covalentInfo = this.getGlobalConfig(['network','providers','covalent']);\n    const etherscanInfo = this.getGlobalConfig(['network','providers','etherscan']);\n    const stateSenderConfig = this.getGlobalConfig(['tools','polygonBridge','props','contracts','StateSender']);\n    const erc20PredicateConfig = this.getGlobalConfig(['tools','polygonBridge','props','contracts','ERC20Predicate']);\n    const etherPredicateConfig = this.getGlobalConfig(['tools','polygonBridge','props','contracts','EtherPredicate']);\n    const depositManagerConfig = this.getGlobalConfig(['tools','polygonBridge','props','contracts','DepositManager']);\n    const rootChainManagerConfig = this.getGlobalConfig(['tools','polygonBridge','props','contracts','RootChainManager']);\n\n    const polygonNetworkId = currentNetwork.provider === 'polygon' ? currentNetworkId : this.getGlobalConfig(['network','providers','polygon','networkPairs',currentNetworkId]);\n    // Check if covalent is enabled for the required network\n    if (covalentInfo.enabled && covalentInfo.endpoints[polygonNetworkId]){\n      const covalentApiUrl = covalentInfo.endpoints[polygonNetworkId];\n      const polygonAvailableTokens = this.getGlobalConfig(['tools','polygonBridge','props','availableTokens']);\n      const polygonEndpoint = `${covalentApiUrl}address/${account}/transactions_v2/?block-signed-at-asc=true&skip=0&key=${covalentInfo.key}`;\n\n      const ethereumNetworkId = this.getGlobalConfig(['network','providers','polygon','networkPairs',polygonNetworkId]);\n      const etherscanApiUrl = etherscanInfo.endpoints[ethereumNetworkId];\n      const etherscanEndpoint = `${etherscanApiUrl}?module=account&action=tokentx&address=${this.props.account}&sort=desc`;\n      const etherscanTxlistEndpoint =`${etherscanApiUrl}?module=account&action=txlist&address=${this.props.account}&sort=desc`;\n      const etherscanTxlistInternalEndpoint =`${etherscanApiUrl}?module=account&action=txlistinternal&address=${this.props.account}&sort=desc`;\n\n      const [\n        last_state_id,\n        polygonTxs,\n        etherscanTxs,\n        etherscanTxlist,\n        etherscanTxlistInternal\n      ] = await Promise.all([\n        this.getPolygonCurrentLastStateId(),\n        this.makeCachedRequest(polygonEndpoint,120),\n        this.makeEtherscanApiRequest(etherscanEndpoint,etherscanInfo.keys,120),\n        this.makeEtherscanApiRequest(etherscanTxlistEndpoint,etherscanInfo.keys,120),\n        this.makeEtherscanApiRequest(etherscanTxlistInternalEndpoint,etherscanInfo.keys,120),\n      ]);\n\n      // console.log('polygonTxs',polygonTxs);\n      // console.log('etherscanTxs',etherscanTxs);\n      // console.log('etherscanTxlist',etherscanTxlist);\n      // console.log('etherscanTxlistInternal',etherscanTxlistInternal);\n\n      const rootTokensAddresses = [];\n      const childTokensAddresses = [];\n      Object.values(polygonAvailableTokens).forEach( tokenConfig => {\n        if (tokenConfig.childToken){\n          childTokensAddresses.push(tokenConfig.childToken.address.toLowerCase())\n        }\n        if (tokenConfig.rootToken){\n          rootTokensAddresses.push(tokenConfig.rootToken.address.toLowerCase())\n        }\n      });\n\n      let depositTxs = [];\n\n      if (etherscanTxs && etherscanTxs.data && etherscanTxs.data.result && typeof etherscanTxs.data.result.filter === 'function'){\n        depositTxs = etherscanTxs.data.result.filter( tx => rootTokensAddresses.includes(tx.contractAddress.toLowerCase()) &&  [erc20PredicateConfig.address.toLowerCase(),depositManagerConfig.address.toLowerCase()].includes(tx.to.toLowerCase())  && tx.from.toLowerCase() === this.props.account.toLowerCase() );\n        await this.asyncForEach(depositTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find( t => t.name === tx.tokenSymbol );\n          const ethereumTx = {...tx};\n          ethereumTx.action = 'Deposit';\n          ethereumTx.networkId = ethereumNetworkId;\n          ethereumTx.bridgeType = tokenConfig.bridgeType;\n          ethereumTx.value = this.fixTokenDecimals(ethereumTx.value,tokenConfig.decimals);\n          const txReceipt = await this.getTxReceipt(ethereumTx.hash,this.props.web3Infura);\n          const stateSenderLog = txReceipt ? txReceipt.logs.find( log => log.address.toLowerCase() === stateSenderConfig.address.toLowerCase() ) : null;\n          const tx_state_id = stateSenderLog && this.props.web3.utils ? parseInt(this.props.web3.utils.hexToNumberString(stateSenderLog.topics[1])) : null;\n          ethereumTx.included = last_state_id && tx_state_id ? last_state_id>=tx_state_id : false;\n          txs.push(ethereumTx);\n        });\n        const exitTxs = etherscanTxs.data.result.filter( tx => rootTokensAddresses.includes(tx.contractAddress.toLowerCase()) && [erc20PredicateConfig.address.toLowerCase(),depositManagerConfig.address.toLowerCase()].includes(tx.from.toLowerCase()) && tx.to.toLowerCase() === this.props.account.toLowerCase() );\n        await this.asyncForEach(exitTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find( t => t.name === tx.tokenSymbol );\n          const ethereumTx = {...tx};\n          ethereumTx.action = 'Exit';\n          ethereumTx.included = true;\n          ethereumTx.networkId = ethereumNetworkId;\n          ethereumTx.bridgeType = tokenConfig.bridgeType;\n          ethereumTx.value = this.fixTokenDecimals(ethereumTx.value,tokenConfig.decimals);\n          txs.push(ethereumTx);\n        });\n      }\n\n      const depositTxsHashes = depositTxs.map( tx => tx.hash.toLowerCase() );\n      const depositETHInputRexExp = new RegExp(this.props.account.replace('0x','').toLowerCase()+'$');\n      if (etherscanTxlist && etherscanTxlist.data && etherscanTxlist.data.result && typeof etherscanTxlist.data.result.filter === 'function'){\n        const depositETHTxs = etherscanTxlist.data.result.filter( tx => !depositTxsHashes.includes(tx.hash.toLowerCase()) && tx.to.toLowerCase() === rootChainManagerConfig.address.toLowerCase() && tx.input.toLowerCase().match(depositETHInputRexExp) && tx.from.toLowerCase() === this.props.account.toLowerCase() );\n        await this.asyncForEach(depositETHTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find( t => t.name === 'WETH' );\n          const ethereumTx = {...tx};\n          ethereumTx.action = 'Deposit';\n          ethereumTx.tokenSymbol = 'WETH';\n          ethereumTx.networkId = ethereumNetworkId;\n          ethereumTx.bridgeType = tokenConfig.bridgeType;\n          ethereumTx.value = this.fixTokenDecimals(ethereumTx.value,tokenConfig.decimals);\n          const txReceipt = await this.getTxReceipt(ethereumTx.hash,this.props.web3Infura);\n          const stateSenderLog = txReceipt ? txReceipt.logs.find( log => log.address.toLowerCase() === stateSenderConfig.address.toLowerCase() ) : null;\n          const tx_state_id = stateSenderLog && this.props.web3.utils ? parseInt(this.props.web3.utils.hexToNumberString(stateSenderLog.topics[1])) : null;\n          ethereumTx.included = last_state_id && tx_state_id ? last_state_id>=tx_state_id : false;\n          txs.push(ethereumTx);\n        });\n      }\n\n      if (etherscanTxlistInternal && etherscanTxlistInternal.data && etherscanTxlistInternal.data.result && typeof etherscanTxlistInternal.data.result.filter === 'function'){\n        const exitETHTxs = etherscanTxlistInternal.data.result.filter( tx => !depositTxsHashes.includes(tx.hash.toLowerCase()) && tx.from.toLowerCase() === etherPredicateConfig.address.toLowerCase() && !tx.input.toLowerCase().match(depositETHInputRexExp) && tx.to.toLowerCase() === this.props.account.toLowerCase() );\n        await this.asyncForEach(exitETHTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find( t => t.name === 'WETH' );\n          const ethereumTx = {...tx};\n          ethereumTx.action = 'Exit';\n          ethereumTx.included = true;\n          ethereumTx.tokenSymbol = 'WETH';\n          ethereumTx.networkId = ethereumNetworkId;\n          ethereumTx.timeStamp = parseInt(tx.timeStamp);\n          ethereumTx.bridgeType = tokenConfig.bridgeType;\n          ethereumTx.value = this.fixTokenDecimals(ethereumTx.value,tokenConfig.decimals);\n          txs.push(ethereumTx);\n        });\n      }\n\n      if (polygonTxs && polygonTxs.data && polygonTxs.data.data && polygonTxs.data.data.items && Object.values(polygonTxs.data.data.items).length){\n        const filteredTxs = polygonTxs.data.data.items.filter( tx => tx.to_address && childTokensAddresses.includes(tx.to_address.toLowerCase()) );\n        // console.log('polygonTxs',polygonTxs,filteredTxs);\n        await this.asyncForEach(filteredTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find( tokenConfig => (tokenConfig.childToken && tx.to_address && tokenConfig.childToken.address.toLowerCase() === tx.to_address.toLowerCase()) );\n          if (!tokenConfig || !tokenConfig.childToken){\n            return;\n          }\n          tokenConfig.address = tokenConfig.childToken.address;\n          if (!enabledTokens || !enabledTokens.length || enabledTokens.includes(tokenConfig.token)){\n            const polygonTx = this.normalizePolygonTx(tx,tokenConfig);\n            // console.log('polygonTx',polygonTx);\n            if (polygonTx.action === 'Withdraw'){\n              const tx_state_id = this.props.web3.utils ? parseInt(this.props.web3.utils.hexToNumberString(polygonTx.logs[polygonTx.logs.length-1].topics[1])) : 0;\n              polygonTx.exited = false;\n              polygonTx.networkId = polygonNetworkId;\n              polygonTx.bridgeType = tokenConfig.bridgeType;\n              polygonTx.included = last_state_id && tx_state_id ? last_state_id>=tx_state_id : false;\n              try {\n                await this.props.maticPOSClient.exitERC20(polygonTx.hash, {from: this.props.account, encodeAbi:true});\n              } catch (error){\n                if (error.toString().match('EXIT_ALREADY_PROCESSED')){\n                  polygonTx.exited = true;\n                }\n              }\n              txs.push(polygonTx);\n            }\n          }\n        });\n        // debugger;\n      }\n    }\n\n    txs = txs.sort((a,b) => (parseInt(a.timeStamp) < parseInt(b.timeStamp) ? 1 : -1));\n\n    // console.log('getPolygonBridgeTxs',cachedDataKey,txs);\n\n    return this.setCachedData(cachedDataKey,txs,120);\n  }\n  getPolygonBaseTxs = async (account=false,enabledTokens=[],debug=false) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length){\n      return [];\n    }\n\n    account = account.toLowerCase();\n\n    let results = [];\n    let baseTxs = null;\n    let baseEndpoint = null;\n    const requiredNetwork = this.getRequiredNetworkId();\n    // const selectedStrategy = this.props.selectedStrategy;\n    const covalentInfo = this.getGlobalConfig(['network','providers','covalent']);\n\n    // Check if covalent is enabled for the required network\n    if (covalentInfo.enabled && covalentInfo.endpoints[requiredNetwork]){\n      const covalentApiUrl = covalentInfo.endpoints[requiredNetwork];\n\n      // Get base endpoint cached transactions\n      baseEndpoint = `${covalentApiUrl}address/${account}/transactions_v2/?block-signed-at-asc=true&key=${covalentInfo.key}`;\n      baseTxs = this.getCachedRequest(baseEndpoint);\n\n      // Check if the latest blockNumber is actually the latest one\n      if (baseTxs && baseTxs.data && baseTxs.data.data && baseTxs.data.data.items && Object.values(baseTxs.data.data.items).length){\n\n        const cachedRows = Object.values(baseTxs.data.data.items).length;\n        const lastCachedTx = Object.values(baseTxs.data.data.items).pop();\n        const lastCachedBlockNumber = lastCachedTx && lastCachedTx.block_height ? parseInt(lastCachedTx.block_height)+1 : 0;\n\n        const covalentEndpointLastBlock = `${covalentApiUrl}address/${account}/transactions_v2/?block-signed-at-asc=true&skip=${cachedRows}`;\n        let latestTxs = await this.makeCachedRequest(covalentEndpointLastBlock,15);\n\n        if (latestTxs && latestTxs.data.data.items && latestTxs.data.data.items.length){\n          latestTxs = await this.filterPolygonTxs(latestTxs.data.data.items,enabledTokens);\n          // latestTxs = await this.filterEthereumTxs(latestTxs,enabledTokens,true,false);\n\n          if (latestTxs && Object.values(latestTxs).length){\n\n            const latestBlockNumbers = Object.values(latestTxs).map( lastTx => (parseInt(lastTx.block_height)) );\n            const lastRealBlockNumber = Math.max(...latestBlockNumbers);\n\n            // If real tx blockNumber differs from last blockNumber\n            if (lastRealBlockNumber>=lastCachedBlockNumber){\n              // Merge latest Txs with baseTxs\n              Object.values(latestTxs).forEach((tx) => {\n                const txFound = Object.keys(baseTxs.data.data.items).includes(tx.tx_hash);\n                if (!txFound){\n                  baseTxs.data.data.items[tx.tx_hash] = tx;\n                }\n              });\n\n              // Save covalent txs\n              this.saveFetchedTransactions(baseEndpoint,baseTxs.data.data.items);\n            }\n          }\n        }\n      } else {\n        baseTxs = null;\n      }\n\n      let txs = baseTxs;\n\n      if (debug){\n        console.log('DEBUG - txs',txs);\n      }\n\n      if (!txs){\n        // Make request\n        txs = await this.makeRequest(baseEndpoint);\n\n        // console.log('makeRequest 1',account,baseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n\n        if (!txs || !txs.data || parseInt(txs.data.status)===0){\n          let requestCount = 0;\n          let requestStatus = false;\n          do {\n            await this.asyncTimeout(500);\n            txs = await this.makeRequest(baseEndpoint);\n            requestCount++;\n            requestStatus = txs && txs.data ? parseInt(txs.data.status) : false;\n            // console.log('makeRequest '+(requestCount+1),account,baseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n          } while (requestCount<5 && !requestStatus);\n        }\n\n        // Cache request\n        if (txs && txs.data && parseInt(txs.data.status)>0){\n          const timestamp = parseInt(Date.now()/1000);\n          // const cachedRequests_polygon = this.getCachedDataWithLocalStorage('cachedRequests_polygon',{});\n          const dataToCache = {\n            data:txs,\n            timestamp\n          };\n          this.addKeyToCachedDataWithLocalStorage('cachedRequests_polygon',baseEndpoint,dataToCache);\n          // this.setCachedDataWithLocalStorage('cachedRequests_polygon',cachedRequests_polygon);\n        }\n      }\n\n      if (txs && txs.data && txs.data.data && txs.data.data.items){\n        results = txs.data.data.items;\n      } else {\n        return [];\n      }\n    }\n\n    return {\n      results,\n      baseTxs,\n      baseEndpoint\n    };\n  }\n  getEtherscanBaseTxs = async (account=false,firstBlockNumber=0,endBlockNumber='latest',enabledTokens=[],debug=false) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length){\n      return [];\n    }\n\n    account = account.toLowerCase();\n\n    const selectedStrategy = this.props.selectedStrategy;\n\n    // Check if firstBlockNumber is less that firstIdleBlockNumber\n    const firstIdleBlockNumber = this.getGlobalConfig(['network','firstBlockNumber']);\n    firstBlockNumber = Math.max(firstIdleBlockNumber,firstBlockNumber);\n\n    const requiredNetwork = this.getRequiredNetworkId();\n    const etherscanInfo = this.getGlobalConfig(['network','providers','etherscan']);\n\n    let results = [];\n    let baseTxs = null;\n    let baseEndpoint = null;\n\n    // Check if etherscan is enabled for the required network\n    if (etherscanInfo.enabled && etherscanInfo.endpoints[requiredNetwork]){\n      const etherscanApiUrl = etherscanInfo.endpoints[requiredNetwork];\n\n      // Get base endpoint cached transactions\n      baseEndpoint = `${etherscanApiUrl}?strategy=${selectedStrategy}&apikey=${etherscanInfo.keys[0]}&module=account&action=tokentx&address=${account}&startblock=${firstIdleBlockNumber}&endblock=${endBlockNumber}&sort=asc`;\n      baseTxs = this.getCachedRequest(baseEndpoint);\n\n      if (debug){\n        console.log('DEBUG - CACHED - baseTxs',baseTxs);\n      }\n\n      // Check if the latest blockNumber is actually the latest one\n      if (baseTxs && baseTxs.data.result && Object.values(baseTxs.data.result).length){\n\n        const lastCachedTx = Object.values(baseTxs.data.result).pop();\n        const lastCachedBlockNumber = lastCachedTx && lastCachedTx.blockNumber ? parseInt(lastCachedTx.blockNumber)+1 : firstBlockNumber;\n\n        const etherscanEndpointLastBlock = `${etherscanApiUrl}?strategy=${selectedStrategy}&module=account&action=tokentx&address=${account}&startblock=${lastCachedBlockNumber}&endblock=${endBlockNumber}&sort=asc`;\n        // let latestTxs = await this.makeCachedRequest(etherscanEndpointLastBlock,15);\n        let latestTxs = await this.makeEtherscanApiRequest(etherscanEndpointLastBlock,etherscanInfo.keys,15);        \n\n        if (latestTxs && latestTxs.data.result && latestTxs.data.result.length){\n          \n          latestTxs = await this.filterEthereumTxs(latestTxs.data.result,enabledTokens,true,false);\n\n          if (latestTxs && Object.values(latestTxs).length){\n\n            const latestBlockNumbers = Object.values(latestTxs).map( lastTx => (parseInt(lastTx.blockNumber)) );\n            const lastRealBlockNumber = Math.max(...latestBlockNumbers);\n\n            // If real tx blockNumber differs from last blockNumber\n            if (lastRealBlockNumber>=lastCachedBlockNumber){\n              // Merge latest Txs with baseTxs\n              Object.values(latestTxs).forEach((tx) => {\n                const txFound = Object.keys(baseTxs.data.result).includes(tx.hashKey);\n                if (!txFound){\n                  baseTxs.data.result[tx.hashKey] = tx;\n                }\n              });\n\n              // Save etherscan txs\n              this.saveFetchedTransactions(baseEndpoint,baseTxs.data.result);\n            }\n          }\n        }\n      } else {\n        baseTxs = null;\n      }\n\n      let txs = baseTxs;\n\n      if (debug){\n        console.log('DEBUG - txs',txs);\n      }\n\n      if (!txs){\n        // Make request\n        txs = await this.makeRequest(baseEndpoint);\n\n        // console.log('makeRequest 1',account,baseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n\n        if (!txs || !txs.data || parseInt(txs.data.status)===0){\n          let requestCount = 0;\n          let requestStatus = false;\n          do {\n            await this.asyncTimeout(500);\n            txs = await this.makeRequest(baseEndpoint);\n            requestCount++;\n            requestStatus = txs && txs.data ? parseInt(txs.data.status) : false;\n            // console.log('makeRequest '+(requestCount+1),account,baseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n          } while (requestCount<5 && !requestStatus);\n        }\n\n        // Cache request\n        if (txs && txs.data && parseInt(txs.data.status)>0){\n          const timestamp = parseInt(Date.now()/1000);\n          // const cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n          const dataToCache = {\n            data:txs,\n            timestamp\n          };\n          this.addKeyToCachedDataWithLocalStorage('cachedRequests',baseEndpoint,dataToCache);\n          // this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n        }\n      }\n\n      if (txs && txs.data && txs.data.result){\n        results = txs.data.result;\n      } else {\n        return [];\n      }\n    }\n\n    return {\n      results,\n      baseTxs,\n      baseEndpoint\n    };\n  }\n  getCurveTxs = async (account=false,firstBlockNumber=0,endBlockNumber='latest',enabledTokens=[]) => {\n    const results = await this.getEtherscanTxs(account,firstBlockNumber,endBlockNumber,enabledTokens);\n    // results = results ? Object.values(results) : [];\n    return this.filterCurveTxs(results,enabledTokens);\n  }\n  saveFetchedTransactions = (endpoint,txs) => {\n    const txsToStore = {};\n    Object.keys(txs).forEach(txHash => {\n      const tx = txs[txHash];\n      if (tx.blockNumber && (!tx.status || tx.status.toLowerCase() !== 'pending')){\n        txsToStore[txHash] = tx;\n      }\n    });\n\n    // Save new cached data\n    const cachedRequest = {\n      data:{\n        result:txsToStore\n      }\n    };\n    this.saveCachedRequest(endpoint,false,cachedRequest);\n  }\n  getEtherscanTxs = async (account=false,firstBlockNumber=0,endBlockNumber='latest',enabledTokens=[],debug=false) => {\n\n    let resultData = null;\n    const currentNetwork = this.getRequiredNetwork();\n\n    switch (currentNetwork.explorer){\n      case 'polygon':\n        resultData = await this.getPolygonBaseTxs(account,enabledTokens,debug);\n      break;\n      case 'etherscan':\n      default:\n        resultData = await this.getEtherscanBaseTxs(account,firstBlockNumber,endBlockNumber,enabledTokens,debug);\n      break;\n    }\n\n    // Initialize prevTxs\n    let txs = {};\n\n    if (resultData){\n      let {\n        results,\n        baseTxs,\n        baseEndpoint\n      } = resultData;\n\n      if (baseTxs){\n        // Filter txs for token\n        txs = await this.processStoredTxs(results,enabledTokens);\n      } else {\n        const allAvailableTokens = Object.keys(this.props.availableTokens);\n        // Save base endpoint with all available tokens\n        switch (currentNetwork.explorer){\n          case 'polygon':\n            txs = await this.filterPolygonTxs(results,allAvailableTokens);\n            // console.log('polygon txs',results,allAvailableTokens,txs);\n          break;\n          case 'etherscan':\n          default:\n            txs = await this.filterEthereumTxs(results,allAvailableTokens);\n          break;\n        }\n\n        // Store filtered txs\n        if (txs && Object.keys(txs).length){\n          this.saveFetchedTransactions(baseEndpoint,txs);\n        }\n      }\n    }\n\n    // console.log('DEBUG - TXS -',txs);\n\n    return Object\n            .values(txs)\n            .filter(tx => (tx.token && enabledTokens.includes(tx.token.toUpperCase())))\n            .sort((a,b) => (a.timeStamp < b.timeStamp ? -1 : 1));\n  }\n  getPolygonCurrentLastStateId = async () => {\n    const contractInstance = new this.props.web3Polygon.eth.Contract(\n      [\n        {\n          constant: true,\n          inputs: [],\n          name: \"lastStateId\",\n          outputs: [\n            {\n              internalType: \"uint256\",\n              name: \"\",\n              type: \"uint256\",\n            },\n          ],\n          payable: false,\n          stateMutability: \"view\",\n          type: \"function\",\n        },\n      ],\n      \"0x0000000000000000000000000000000000001001\"\n    );\n\n    return parseInt(await contractInstance.methods.lastStateId().call());\n  }\n  checkPolygonTransactionIncluded = async (txHash) => {\n    const [\n      last_state_id,\n      tx,\n    ] = await Promise.all([\n      this.getPolygonCurrentLastStateId(),\n      this.props.web3Polygon.eth.getTransactionReceipt(txHash)\n    ]);\n\n    const tx_state_id = tx && tx.logs && tx.logs.length && this.props.web3.utils ? this.props.web3.utils.hexToNumberString(tx.logs[tx.logs.length-1].topics[1]) : null;\n\n    return tx_state_id ? parseInt(last_state_id) >= parseInt(tx_state_id) : null;\n  }\n  filterCurveTxs = async (results,enabledTokens=[]) => {\n\n    if (!results || !results.length || typeof results.forEach !== 'function'){\n      return [];\n    }\n\n    const availableTokens = this.props.availableTokens ? this.props.availableTokens : this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    const curveTxs = results.filter( tx => (enabledTokens.includes(tx.token) && ['CurveIn','CurveOut','CurveZapIn','CurveZapOut','CurveTransferIn','CurveTransferOut','CurveDepositIn','CurveDepositOut'].includes(tx.action)) );\n\n    if (curveTxs.length){\n      curveTxs.sort((a,b) => (a.timeStamp < b.timeStamp ? -1 : 1));\n    }\n\n    return curveTxs;\n  }\n  normalizePolygonTx = (tx,tokenConfig=null) => {\n    tokenConfig = tokenConfig || Object.values(this.props.availableTokens).find( tokenConfig => tx.to_address && tokenConfig.idle.address.toLowerCase() === tx.to_address.toLowerCase() );\n    \n    const depositLogEvent = tx.log_events && tokenConfig && tokenConfig.idle ? tx.log_events.find( log => log.sender_address.toLowerCase() === tokenConfig.address.toLowerCase() && log.decoded.name === 'Transfer' && log.decoded.params.find(param=>param.name==='from').value.toLowerCase() === this.props.account.toLowerCase() && log.decoded.params.find(param=>param.name==='to').value.toLowerCase() === tokenConfig.idle.address.toLowerCase() ) : null;\n    const redeemLogEvent = tx.log_events && tokenConfig && tokenConfig.idle ? tx.log_events.find( log => log.sender_address.toLowerCase() === tokenConfig.address.toLowerCase() && log.decoded.name === 'Transfer' && log.decoded.params.find(param=>param.name==='to').value.toLowerCase() === this.props.account.toLowerCase() && log.decoded.params.find(param=>param.name==='from').value.toLowerCase() === tokenConfig.idle.address.toLowerCase() ) : null;\n    const withdrawLogEvent = tx.log_events && tokenConfig && tokenConfig.address ? tx.log_events.find( log => log.sender_address.toLowerCase() === tokenConfig.address.toLowerCase() && log.decoded.name === 'Transfer' && log.decoded.params.find(param=>param.name==='from').value.toLowerCase() === this.props.account.toLowerCase() && log.decoded.params.find(param=>param.name==='to').value.toLowerCase() === '0x0000000000000000000000000000000000000000' ) : null;\n\n    const tokenDecimal = tokenConfig.decimals;\n    const tokenSymbol = tokenConfig.name || tokenConfig.token;\n    const hashKey = `${tx.tx_hash}_${tokenSymbol}`;\n    const idleToken = tokenConfig.idle ? tokenConfig.idle.token : null;\n    const action = depositLogEvent ? 'Deposit' : (redeemLogEvent ? 'Redeem' : (withdrawLogEvent ? 'Withdraw' : null));\n    const timeStamp = parseInt(this.strToMoment(tx.block_signed_at)._d.getTime()/1000);\n\n    let logEvent = null;\n    switch (action){\n      case 'Deposit':\n        logEvent = depositLogEvent;\n      break;\n      case 'Redeem':\n        logEvent = redeemLogEvent;\n      break;\n      case 'Withdraw':\n        logEvent = withdrawLogEvent;\n      break;\n      default:\n      break;\n    }\n\n    const logs = tx.log_events ? tx.log_events.map( log => ({\n      topics:log.raw_log_topics\n    })) : [];\n    const value = logEvent ? this.fixTokenDecimals(logEvent.decoded.params.find( param => param.name==='value' ).value,tokenDecimal) : this.fixTokenDecimals(tx.value,tokenDecimal);\n\n    const blockNumber = tx.log_events && tx.log_events.length ? tx.log_events[0].block_height : null;\n\n    return {\n      logs,\n      value,\n      action,\n      hashKey,\n      timeStamp,\n      idleToken,\n      tokenSymbol,\n      blockNumber,\n      tokenDecimal,\n      hash:tx.tx_hash,\n      to:tx.to_address,\n      status:'Completed',\n      from:tx.from_address,\n      gasUsed:tx.gas_spent,\n      gasPrice:tx.gas_price,\n      token:tokenConfig.token,\n      contractAddress:tokenConfig.address,\n    };\n  }\n  filterPolygonTxs = async (txs,enabledTokens,processTransactions=true) => {\n    const idleTokensAddresses = Object.values(this.props.availableTokens).map( tokenConfig => tokenConfig.idle.address.toLowerCase() );\n    const polygonTxs = txs ? txs.filter( tx => tx.to_address && idleTokensAddresses.includes(tx.to_address.toLowerCase()) ).reduce( (output,tx) => {\n      const mappedTx = this.normalizePolygonTx(tx);\n      output[mappedTx.hashKey] = mappedTx;\n      return output;\n    },{}) : {};\n\n    return processTransactions ? await this.processTransactions(polygonTxs,enabledTokens) : polygonTxs;\n  }\n  filterEtherscanTxs = async (results,enabledTokens=[],processTxs=true,processStoredTxs=true) => {\n    return await this.filterEthereumTxs(results,enabledTokens,processTxs,processStoredTxs);\n  }\n  filterEthereumTxs = async (results,enabledTokens=[],processTxs=true,processStoredTxs=true) => {\n    if (!this.props.account || !results || !results.length || typeof results.forEach !== 'function'){\n      return [];\n    }\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let etherscanTxs = {};\n    let curveTransfersTxs = [];\n    let curveTransfersTxsToDelete = [];\n\n    // const idleTokensAddresses = Object.values(this.props.availableTokens).map( tokenConfig => (tokenConfig.idle.address) );\n    const curveZapContract = this.getGlobalConfig(['curve','zapContract']);\n    const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n    const curveSwapContract = this.getGlobalConfig(['curve','migrationContract']);\n    const curveDepositContract = this.getGlobalConfig(['curve','depositContract']);\n\n    // this.customLog('filterEtherscanTxs',enabledTokens,results);\n\n    enabledTokens.forEach(token => {\n      const tokenConfig = this.props.availableTokens[token];\n      const depositProxyContractInfo = this.getGlobalConfig(['contract','methods','deposit','proxyContract']);\n      const migrationContractAddr = tokenConfig.migration && tokenConfig.migration.migrationContract ? tokenConfig.migration.migrationContract.address : null;\n      const migrationContractOldAddrs = tokenConfig.migration && tokenConfig.migration.migrationContract && tokenConfig.migration.migrationContract.oldAddresses ? tokenConfig.migration.migrationContract.oldAddresses : [];\n      const tokenMigrationToolParams = this.getGlobalConfig(['tools','tokenMigration','props','migrationContract']);\n\n      const batchMigration = this.getGlobalConfig(['tools','batchMigration','props','availableTokens',tokenConfig.idle.token]);\n      const batchMigrationContractAddr = batchMigration && batchMigration.migrationContract ? batchMigration.migrationContract.address : null;\n\n      // const curveEnabled = this.getGlobalConfig(['curve','enabled']);\n      const curveTokenConfig = this.getGlobalConfig(['curve','availableTokens',tokenConfig.idle.token]);\n\n      results.forEach( tx => {\n        let tokenDecimals = tokenConfig.decimals;\n        const idleToken = tokenConfig.idle.token;\n        const internalTxs = results.filter(r => r.hash === tx.hash);\n        const isRightToken = internalTxs.length>1 && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase()).length>0;\n        const isSendTransferTx = internalTxs.length === 1 && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isReceiveTransferTx = internalTxs.length === 1 && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isBatchMigrationTx = batchMigrationContractAddr && tx.from.toLowerCase() === batchMigrationContractAddr.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase();\n\n        const isDepositInternalTx = isRightToken && internalTxs.find( iTx => iTx.from.toLowerCase() === this.props.account.toLowerCase() && (iTx.to.toLowerCase() === tokenConfig.idle.address.toLowerCase() || (depositProxyContractInfo && iTx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase() && internalTxs.filter(iTx2 => iTx2.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length>0 )) );\n        const isRedeemInternalTx = isRightToken && internalTxs.find( iTx => iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && internalTxs.filter(iTx2 => iTx2.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length && iTx.to.toLowerCase() === this.props.account.toLowerCase() );\n\n        const isMigrationTx = isBatchMigrationTx || (migrationContractAddr && (tx.from.toLowerCase() === migrationContractAddr.toLowerCase() || migrationContractOldAddrs.map((v) => { return v.toLowerCase(); }).includes(tx.from.toLowerCase()) ) && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase());\n        const isConversionTx = tokenMigrationToolParams && (tx.from.toLowerCase() === tokenMigrationToolParams.address.toLowerCase() || tokenMigrationToolParams.oldAddresses.map((v) => { return v.toLowerCase(); }).includes(tx.from.toLowerCase())) && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isDepositTx = isRightToken && !isMigrationTx && tx.from.toLowerCase() === this.props.account.toLowerCase() && (tx.to.toLowerCase() === tokenConfig.idle.address.toLowerCase() || (depositProxyContractInfo && tx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase() && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length>0 ));\n        const isRedeemTx = isRightToken && !isMigrationTx && !isDepositInternalTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length && tx.to.toLowerCase() === this.props.account.toLowerCase();\n        const isWithdrawTx = internalTxs.length>1 && internalTxs.filter(iTx => tokenConfig.protocols.map(p => p.address.toLowerCase()).includes(iTx.contractAddress.toLowerCase()) ).length>0 && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n\n        // const curveDepositTx = internalTxs.find( iTx => (iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && iTx.from.toLowerCase() === this.props.account.toLowerCase()) );\n        const idleTokenAddress = curveTokenConfig && curveTokenConfig.address ? curveTokenConfig.address : tokenConfig.idle.address;\n\n        // Check Curve\n        const curveTx = internalTxs.find( tx => (tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && (tx.to.toLowerCase() === this.props.account.toLowerCase() || tx.from.toLowerCase() === this.props.account.toLowerCase()) ) );\n        const isCurveTx = curveTx !== undefined;\n\n        const isCurveDepositTx = isCurveTx && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase() && tx.to.toLowerCase() === curveSwapContract.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveRedeemTx = isCurveTx && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveSwapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveDepositIn = isCurveTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.to.toLowerCase() === curveDepositContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveDepositOut = isCurveTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveDepositContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveZapIn = isCurveTx && tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveZapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveZapOut = isCurveTx && tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.to.toLowerCase() === curveZapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveTransferOut = tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && !isCurveZapOut && !isCurveRedeemTx && /*internalTxs[internalTxs.length-1] === tx &&*/ tx.from.toLowerCase() === this.props.account.toLowerCase();\n        const isCurveTransferIn = tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && !isCurveZapIn && !isCurveDepositTx && /*internalTxs[internalTxs.length-1] === tx &&*/ tx.to.toLowerCase() === this.props.account.toLowerCase();\n\n        const isSwapOutTx = !isCurveTx && !isSendTransferTx && !isWithdrawTx && !isRedeemInternalTx && !etherscanTxs[tx.hash] && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isSwapTx = !isCurveTx && !isReceiveTransferTx && !isConversionTx && !isDepositInternalTx && !etherscanTxs[tx.hash] && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n\n        // if (tx.hash.toLowerCase() === '0x599a2e7b0094b0a943ffb1d520cb47598dcf3764145c33824e3b032d91ccc489'.toLowerCase()){\n        //   debugger;\n        // }\n\n        if (isSendTransferTx || isReceiveTransferTx || isMigrationTx || isDepositTx || isRedeemTx || isSwapTx || isSwapOutTx || isWithdrawTx || isConversionTx || isCurveDepositTx || isCurveRedeemTx || isCurveZapIn || isCurveZapOut || isCurveTransferOut || isCurveTransferIn || isCurveDepositIn || isCurveDepositOut){\n\n          let action = null;\n          let hashKey = tx.hash;\n\n          if (isDepositTx){\n            action = 'Deposit';\n          } else if (isRedeemTx){\n            action = 'Redeem';\n          } else if (isMigrationTx || isConversionTx){\n            action = 'Migrate';\n          } else if (isSendTransferTx){\n            action = 'Send';\n          } else if (isReceiveTransferTx){\n            action = 'Receive';\n          } else if (isSwapTx){\n            action = 'Swap';\n          } else if (isSwapOutTx){\n            action = 'SwapOut';\n          } else if (isWithdrawTx){\n            action = 'Withdraw';\n          } else if (isCurveDepositTx){\n            action = 'CurveIn';\n          } else if (isCurveRedeemTx){\n            action = 'CurveOut';\n          } else if (isCurveZapIn){\n            action = 'CurveZapIn';\n          } else if (isCurveZapOut){\n            action = 'CurveZapOut';\n          } else if (isCurveDepositIn){\n            action = 'CurveDepositIn';\n          } else if (isCurveDepositOut){\n            action = 'CurveDepositOut';\n          } else if (isCurveTransferIn){\n            action = 'CurveTransferIn';\n          } else if (isCurveTransferOut){\n            action = 'CurveTransferOut';\n          }\n\n          let curveTokens = null;\n          if (isCurveTx){\n            hashKey += '_'+tx.tokenSymbol;\n            curveTokens = this.fixTokenDecimals(curveTx.value,curvePoolContract.decimals);\n\n            // Add action for curve tokens transfers\n            if ((isCurveTransferIn || isCurveTransferOut)){\n              hashKey+='_'+action;\n            }\n          }\n\n          // this.customLog('SAVE!',action);\n\n          if (tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()){\n            tokenDecimals = 18;\n          } else if (isCurveTx){\n            tokenDecimals = parseInt(tx.tokenDecimal);\n          }\n\n          // Sum the value if already processed\n          if (etherscanTxs[hashKey]){\n            // Prevent second internal tx to sum SwapOut original value\n            switch (etherscanTxs[hashKey].action){\n              case 'SwapOut':\n                if (etherscanTxs[hashKey].action !== action && isRedeemTx){\n                  etherscanTxs[hashKey].tokenValue = this.fixTokenDecimals(tx.value,tokenDecimals);\n                }\n              break;\n              default:\n                if (!curveTx){\n                  const newValue = etherscanTxs[hashKey].value.plus(this.fixTokenDecimals(tx.value,tokenDecimals));\n                  etherscanTxs[hashKey].value = newValue;\n                }\n              break;\n            }\n          } else {\n            // Insert tx in curve transfers buffer\n            if (isCurveTransferIn || isCurveTransferOut){\n              if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())){\n                curveTokens = this.fixTokenDecimals(tx.value,curvePoolContract.decimals);\n                curveTransfersTxs.push({...tx, hashKey, token, idleToken, curveTokens, action, value: this.fixTokenDecimals(tx.value,tokenDecimals)});\n              }\n            } else {\n              etherscanTxs[hashKey] = ({...tx, hashKey, token, idleToken, curveTokens, action, value: this.fixTokenDecimals(tx.value,tokenDecimals)});\n\n              // Delete curveTransfers\n              if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())){\n                curveTransfersTxsToDelete.push(tx.hash.toLowerCase());\n              }\n\n              // Take right tokenSymbol\n              switch (action){\n                case 'Withdraw':\n                  const iTxs = internalTxs.filter(iTx => (iTx !== tx));\n                  if (iTxs.length>0){\n                    const iTx = iTxs[0];\n                    etherscanTxs[hashKey].withdrawnValue = this.fixTokenDecimals(iTx.value,iTx.tokenDecimal);\n                    etherscanTxs[hashKey].tokenSymbol = iTx.tokenSymbol;\n                  }\n                break;\n                case 'CurveIn':\n                case 'CurveOut':\n                case 'CurveZapIn':\n                case 'CurveZapOut':\n                case 'CurveDepositIn':\n                case 'CurveDepositOut':\n                  etherscanTxs[hashKey].tokenSymbol = token;\n                break;\n                default:\n                break;\n              }\n            }   \n          }\n        }\n      });\n    });\n    \n    curveTransfersTxs.forEach( tx => {\n      if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())){\n        etherscanTxs[tx.hashKey] = tx;\n      }\n    });\n  \n    if (processTxs){\n      etherscanTxs = await this.processTransactions(etherscanTxs,enabledTokens,processStoredTxs);\n    }\n\n    // console.log('etherscanTxs',etherscanTxs);\n\n    return etherscanTxs;\n  }\n  addStoredTransaction = (txKey,transaction) => {\n\n    const account = this.props && this.props.account ? this.props.account : null;\n    const selectedToken = this.props && this.props.selectedToken ? this.props.selectedToken : null;\n\n    if (!account || !selectedToken || !this.props.availableTokens || !this.props.availableTokens[selectedToken]){\n      return false;\n    }\n\n    const tokenConfig = this.props.availableTokens[selectedToken];\n    const tokenKey = tokenConfig.idle.token;\n\n    let storedTxs = this.getStoredTransactions();\n    if (!storedTxs[account]){\n      storedTxs[account] = {};\n    }\n\n    if (!storedTxs[account][tokenKey]){\n      storedTxs[account][tokenKey] = {};\n    }\n\n    storedTxs[account][tokenKey][txKey] = transaction;\n    this.updateStoredTransactions(storedTxs);\n  }\n  updateStoredTransactions = transactions => {\n    this.setLocalStorage('transactions',JSON.stringify(transactions));\n  }\n  /*\n  Merge storedTxs with this.props.transactions\n  */\n  getStoredTransactions = (account=null,tokenKey=null,selectedToken=null) => {\n    const storedTxs = this.getStoredItem('transactions',true,{});\n    const transactions = this.props.transactions ? { ...this.props.transactions } : {};\n    let output = storedTxs;\n\n    if (account){\n      if (storedTxs[account]){\n        output = storedTxs[account];\n        if (tokenKey){\n          output = output[tokenKey] ? output[tokenKey] : {};\n\n          if (selectedToken){\n            Object.keys(transactions).forEach(txKey => {\n              const tx = transactions[txKey];\n              if (!output[txKey] && tx.token && tx.token.toUpperCase() === selectedToken.toUpperCase()){\n                output[txKey] = transactions[txKey];\n              }\n            });\n          }\n        }\n      } else {\n        output = {};\n      }\n    }\n\n    return output;\n  }\n  processTransactions = async (etherscanTxs,enabledTokens=[],processStoredTxs=true) => {\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let txReceipts = {};\n    let storedTxs = this.getStoredTransactions();\n\n    // Init storedTxs for pair account-token if empty\n    if (typeof storedTxs[this.props.account] !== 'object'){\n      storedTxs[this.props.account] = {};\n    }\n\n    // Take base tokens addresses and configs\n    const baseTokensConfigs = {};\n    const baseTokensAddresses = [];\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n    Object.keys(curveAvailableTokens).forEach( token => {\n      const curveTokenConfig = curveAvailableTokens[token];\n      const baseTokenConfig = this.getGlobalConfig(['stats','tokens',curveTokenConfig.baseToken]);\n      const baseTokenAddress = baseTokenConfig.address.toLowerCase();\n      baseTokensConfigs[baseTokenAddress] = baseTokenConfig;\n      baseTokensConfigs[baseTokenAddress].token = curveTokenConfig.baseToken;\n      baseTokensAddresses.push(baseTokenAddress);\n    });\n\n    const curveZapContract = this.getGlobalConfig(['curve','zapContract']);\n    // const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n    // const curveSwapContract = this.getGlobalConfig(['curve','migrationContract']);\n    // const curveDepositContract = this.getGlobalConfig(['curve','depositContract']);\n\n    await this.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const tokenKey = tokenConfig.idle.token;\n      const idleToken = tokenConfig.idle.token;\n\n      // Init storedTxs for pair account-token if empty\n      if (typeof storedTxs[this.props.account][tokenKey] !== 'object'){\n        storedTxs[this.props.account][tokenKey] = {};\n      }\n\n      const minedTxs = {...storedTxs[this.props.account][tokenKey]};\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        await this.asyncForEach(filteredTxs,async (tx,index) => {\n          const txKey = `tx${tx.timeStamp}000`;\n          const storedTx = storedTxs[this.props.account][tokenKey][txKey] ? storedTxs[this.props.account][tokenKey][txKey] : tx;\n\n          let tokenPrice = null;\n          \n          if (storedTx.tokenPrice && !this.BNify(storedTx.tokenPrice).isNaN()){\n            tokenPrice = this.BNify(storedTx.tokenPrice);\n          } else {\n            tokenPrice = await this.getIdleTokenPrice(tokenConfig,tx.blockNumber,tx.timeStamp);\n            storedTx.tokenPrice = tokenPrice;\n          }\n\n          let idleTokens = this.BNify(tx.value);\n          let tokensTransfered = tokenPrice.times(idleTokens);\n\n          // Add transactionHash to storedTx\n          if (!storedTx.transactionHash){\n            storedTx.transactionHash = tx.hash;\n          }\n\n          // Deposited\n          switch (tx.action){\n            case 'Send':\n            case 'Receive':\n            case 'Swap':\n            case 'SwapOut':\n            case 'Migrate':\n              if (!storedTx.tokenAmount){\n                storedTx.idleTokens = idleTokens;\n                storedTx.value = tokensTransfered;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.tokenSymbol = selectedToken;\n              }\n            break;\n            case 'Deposit':\n            case 'Redeem':\n              if (!storedTx.tokenAmount){\n                storedTx.value = idleTokens;\n                storedTx.tokenAmount = idleTokens;\n                storedTx.idleTokens = idleTokens.div(tokenPrice);\n              }\n            break;\n            case 'Withdraw':\n              if (!storedTx.tokenAmount){\n                storedTx.idleTokens = idleTokens;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.value = storedTx.withdrawnValue;\n              }\n            break;\n            case 'CurveIn':\n            case 'CurveOut':\n              if (!storedTx.tokenAmount){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.idleTokens = idleTokens;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n            break;\n            case 'CurveTransferIn':\n            case 'CurveTransferOut':\n              if (!storedTx.curveTokenPrice){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n                storedTx.tokenAmount = this.BNify(storedTx.curveTokens).times(storedTx.curveTokenPrice);\n              }\n\n              storedTx.idleTokens = this.BNify(0);\n            break;\n            case 'CurveZapIn':\n            case 'CurveZapOut':\n              if (!storedTx.curveTokenPrice){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n\n              if (!storedTx.tokenAmount){\n\n                storedTx.tokenAmount = this.BNify(0);\n                storedTx.idleTokens = this.BNify(0);\n\n                const curveTxReceipt = txReceipts[tx.hashKey] ? txReceipts[tx.hashKey] : await (new Promise( async (resolve, reject) => {\n                  this.props.web3.eth.getTransactionReceipt(tx.hash,(err,tx)=>{\n                    if (err){\n                      reject(err);\n                    }\n                    resolve(tx);\n                  });\n                }));\n\n                if (curveTxReceipt){\n\n                  // Save receipt\n                  if (!txReceipts[tx.hashKey]){\n                    txReceipts[tx.hashKey] = curveTxReceipt;\n                  }\n\n                  const filteredLogs = curveTxReceipt.logs.filter( log => (baseTokensAddresses.includes(log.address.toLowerCase()) && log.topics[log.topics.length-1].toLowerCase() === `0x00000000000000000000000${curveZapContract.address.replace('x','').toLowerCase()}` ) );\n\n                  this.customLog('filteredLogs',filteredLogs);\n\n                  if (filteredLogs && filteredLogs.length){\n                    filteredLogs.forEach( log => {\n                      let tokenAmount = parseInt(log.data,16);\n                      const baseTokensConfig = baseTokensConfigs[log.address.toLowerCase()];\n                      const tokenDecimals = baseTokensConfig.decimals;\n                      tokenAmount = this.fixTokenDecimals(tokenAmount,tokenDecimals);\n                      storedTx.tokenAmount = storedTx.tokenAmount.plus(tokenAmount);\n                      this.customLog('Add tokenAmount ('+tx.hash+')',baseTokensConfig.token,tokenAmount.toFixed(5),storedTx.tokenAmount.toFixed(5));\n                    });\n                  }\n                }\n              }\n            break;\n            case 'CurveDepositIn':\n            case 'CurveDepositOut':\n              if (!storedTx.curveTokenPrice){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n\n              storedTx.tokenAmount = this.BNify(storedTx.value);\n\n              if (!storedTx.idleTokens){\n\n                const curveTxReceipt = txReceipts[tx.hashKey] ? txReceipts[tx.hashKey] : await (new Promise( async (resolve, reject) => {\n                  this.props.web3.eth.getTransactionReceipt(tx.hash,(err,tx)=>{\n                    if (err){\n                      reject(err);\n                    }\n                    resolve(tx);\n                  });\n                }));\n\n                if (curveTxReceipt){\n                  const curveTokenConfig = this.getGlobalConfig(['curve','availableTokens',idleToken]);\n                  const idleTokenDecimals = curveTokenConfig && curveTokenConfig.decimals ? curveTokenConfig.decimals : 18;\n                  const idleTokenAddress = curveTokenConfig && curveTokenConfig.address ? curveTokenConfig.address : tokenConfig.idle.address;\n\n                  // Save receipt\n                  if (!txReceipts[tx.hashKey]){\n                    txReceipts[tx.hashKey] = curveTxReceipt;\n                  }\n\n                  const filteredLogs = curveTxReceipt.logs.filter( log => (log.address.toLowerCase()===idleTokenAddress ) );\n                  if (filteredLogs && filteredLogs.length){\n                    idleTokens = parseInt(filteredLogs[0].data,16);\n                    idleTokens = this.fixTokenDecimals(idleTokens,idleTokenDecimals);\n                    storedTx.idleTokens = idleTokens;\n                  }\n                }\n              }\n            break;\n            default:\n            break;\n          }\n            \n          // Save token for future filtering\n          storedTx.token = selectedToken;\n\n          // Save processed tx\n          etherscanTxs[tx.hashKey] = storedTx;\n\n          // Store processed Tx\n          storedTxs[this.props.account][tokenKey][txKey] = storedTx;\n\n          // Remove from minted Txs\n          delete minedTxs[txKey];\n        });\n      }\n\n      // Process Stored txs\n      if (processStoredTxs){\n        etherscanTxs = await this.processStoredTxs(etherscanTxs,[selectedToken],this.props.transactions);\n      }\n    });\n\n    // Update Stored txs\n    if (storedTxs){\n      this.updateStoredTransactions(storedTxs);\n    }\n\n    return etherscanTxs;\n  }\n  processStoredTxs = async (etherscanTxs,enabledTokens=[],txsToProcess=null) => {\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let storedTxs = this.getStoredItem('transactions',true,{})\n\n    // Init storedTxs\n    if (!storedTxs[this.props.account]){\n      storedTxs[this.props.account] = {};\n    }\n\n    etherscanTxs = Object.assign({},etherscanTxs);\n\n    const networkId = this.getRequiredNetworkId();\n\n    // this.customLog('Processing stored txs',enabledTokens);\n\n    await this.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const tokenKey = tokenConfig.idle.token;\n\n      // Init storedTxs\n      if (!storedTxs[this.props.account][tokenKey]){\n        storedTxs[this.props.account][tokenKey] = {};\n      }\n\n      txsToProcess = txsToProcess && Object.values(txsToProcess).length ? txsToProcess : this.getStoredTransactions(this.props.account,tokenKey,selectedToken);\n      \n      // this.customLog('txsToProcess',selectedToken,txsToProcess);\n\n      // if (!Object.values(txsToProcess).length && selectedToken==='DAI' && Object.values(this.props.transactions).length>0){\n      //   debugger;\n      // }\n\n      // Debug transactions\n      /*\n      txsToProcess['xxxxx'] = {\n        status:'success',\n        created:Date.now(),\n        method:'executeMetaTransaction',\n        token:selectedToken.toUpperCase(),\n        transactionHash:'0x000000000000000000000000000'\n      };\n      */\n\n      await this.asyncForEach(Object.keys(txsToProcess),async (txKey,i) => {\n        const tx = txsToProcess[txKey];\n\n        // Skip wrong token\n        if (!tx || !tx.token || tx.token.toUpperCase() !== selectedToken.toUpperCase() || (tx.networkId && parseInt(tx.networkId) !== parseInt(networkId))){\n          return false;\n        }\n\n        const isStoredTx = storedTxs && storedTxs[this.props.account] && storedTxs[this.props.account][tokenKey] && storedTxs[this.props.account][tokenKey][txKey];\n\n        const allowedMethods = {\n          mintIdleToken:'Deposit',\n          redeemIdleToken:'Redeem',\n          migrateFromToIdle:'Migrate',\n          mintIdleTokensProxy:'Deposit',\n          migrateFromAaveToIdle:'Migrate',\n          migrateFromIearnToIdle:'Migrate',\n          executeMetaTransaction:'Migrate',\n          migrateFromFulcrumToIdle:'Migrate',\n          migrateFromCompoundToIdle:'Migrate',\n        };\n        const pendingStatus = ['pending','started'];\n        const txSucceeded = tx.status === 'success';\n        const txPending = pendingStatus.includes(tx.status);\n        const isMetaTx = tx.method === 'executeMetaTransaction';\n        const txHash = tx.transactionHash ? tx.transactionHash : null;\n        const methodIsAllowed = Object.keys(allowedMethods).includes(tx.method);\n\n        // Skip transaction if already present in etherscanTxs with same status\n        if (txHash && etherscanTxs[txHash] && etherscanTxs[txHash].tokenPrice){\n          return false;\n        }\n\n        if (txPending && txHash && !etherscanTxs[txHash] && methodIsAllowed && tx.params.length){\n          // this.customLog('processStoredTxs',tx.method,tx.status,tx.params);\n          const isMigrationTx = allowedMethods[tx.method] === 'Migrate';\n          const decimals = isMigrationTx ? 18 : tokenConfig.decimals;\n          etherscanTxs[`t${tx.created}`] = {\n            status:'Pending',\n            token:selectedToken,\n            action:allowedMethods[tx.method],\n            timeStamp:parseInt(tx.created/1000),\n            hash:txHash ? tx.transactionHash : null,\n            tokenSymbol:isMigrationTx ? tokenConfig.idle.token : selectedToken,\n            value: tx.value ? tx.value : this.fixTokenDecimals(tx.params[0],decimals).toString()\n          };\n\n          return false;\n        }\n\n        // Skip invalid txs\n        if (!txSucceeded || !txHash || !methodIsAllowed){\n          return false;\n        }\n\n        let realTx = tx.realTx ? tx.realTx : null;\n\n        if (!realTx){\n          // this.customLog('loadTxs - getTransaction',tx.transactionHash);\n          realTx = await (new Promise( async (resolve, reject) => {\n            this.props.web3.eth.getTransaction(tx.transactionHash,(err,txReceipt)=>{\n              if (err){\n                reject(err);\n              }\n              resolve(txReceipt);\n            });\n          }));\n        }\n\n        // this.customLog('realTx (localStorage)',realTx);\n\n        // Skip txs from other wallets if not meta-txs\n        if (!realTx || (!isMetaTx && realTx.from.toLowerCase() !== this.props.account.toLowerCase())){\n          return false;\n        }\n\n        const tokenPrice = await this.getIdleTokenPrice(tokenConfig,realTx.blockNumber,realTx.timeStamp);\n\n        realTx.status = 'Completed';\n        realTx.action = allowedMethods[tx.method];\n        realTx.contractAddress = tokenConfig.address;\n        realTx.timeStamp = parseInt(tx.created/1000);\n\n        let txValue = null;\n        switch (tx.method){\n          case 'mintIdleToken':\n          case 'mintIdleTokensProxy':\n            if (!tx.params){\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n              return false;\n            }\n\n            if (realTx.to.toLowerCase() !== tokenConfig.idle.address.toLowerCase()){\n              // Remove wrong contract tx\n              if (isStoredTx){\n                delete storedTxs[this.props.account][tokenKey][txKey];\n              }\n              // this.customLog('Skipped deposit tx '+tx.transactionHash+' - wrong contract');\n              return false;\n            }\n\n            txValue = tx.params ? this.fixTokenDecimals(tx.params[0],tokenConfig.decimals).toString() : 0;\n            if (!txValue){\n              // this.customLog('Skipped deposit tx '+tx.transactionHash+' - value is zero ('+txValue+')');\n              return false;\n            }\n\n            realTx.value = txValue;\n            realTx.tokenAmount = txValue;\n          break;\n          case 'redeemIdleToken':\n            if (!tx.params){\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n              return false;\n            }\n\n            if (!realTx.tokenPrice){\n              const redeemedValueFixed = this.fixTokenDecimals(tx.params[0],18).times(tokenPrice);\n              realTx.tokenPrice = tokenPrice;\n              realTx.value = redeemedValueFixed;\n              realTx.tokenAmount = redeemedValueFixed;\n            }\n          break;\n          case 'executeMetaTransaction':\n            let executeMetaTransactionReceipt = tx.txReceipt ? tx.txReceipt : null;\n\n            if (!executeMetaTransactionReceipt){\n              executeMetaTransactionReceipt = await (new Promise( async (resolve, reject) => {\n                this.props.web3.eth.getTransactionReceipt(tx.transactionHash,(err,tx)=>{\n                  if (err){\n                    reject(err);\n                  }\n                  resolve(tx);\n                });\n              }));\n            }\n\n            if (!executeMetaTransactionReceipt){\n              return false;\n            }\n\n            // Save txReceipt into the tx\n            if (!tx.txReceipt){\n              tx.txReceipt = executeMetaTransactionReceipt;\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n            }\n\n            let action = null;\n            let executeMetaTransactionContractAddr = null;\n            let executeMetaTransactionInternalTransfers = [];\n            const IdleProxyMinterInfo = this.getGlobalConfig(['contract','deposit','proxyContract']);\n\n            // Handle migration tx\n            if (tokenConfig.migration && tokenConfig.migration.oldContract){\n              if (executeMetaTransactionReceipt.logs){\n                executeMetaTransactionContractAddr = tokenConfig.migration.oldContract.address.replace('x','').toLowerCase();\n                executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n              } else if (executeMetaTransactionReceipt.events){\n                executeMetaTransactionInternalTransfers = Object.values(executeMetaTransactionReceipt.events).filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase(); });\n              }\n\n              if (executeMetaTransactionInternalTransfers.length){\n                action = 'Migrate';\n              }\n            }\n\n            // Handle deposit tx\n            if (!executeMetaTransactionInternalTransfers.length){\n              if (executeMetaTransactionReceipt.logs){\n                executeMetaTransactionContractAddr = tokenConfig.idle.address.replace('x','').toLowerCase();\n                executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n\n                // Handle deposit made with proxy contract\n                if (!executeMetaTransactionInternalTransfers.length && IdleProxyMinterInfo){\n                  executeMetaTransactionContractAddr = IdleProxyMinterInfo.address.replace('x','').toLowerCase();\n                  executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n                }\n              } else if (executeMetaTransactionReceipt.events){\n                executeMetaTransactionInternalTransfers = Object.values(executeMetaTransactionReceipt.events).filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase(); });\n              }\n\n              if (executeMetaTransactionInternalTransfers.length){\n                action = 'Deposit';\n              }\n            }\n\n            if (!executeMetaTransactionInternalTransfers.length){\n              return false;\n            }\n\n            const internalTransfer = executeMetaTransactionInternalTransfers[0];\n\n            const metaTxValue = internalTransfer.data ? parseInt(internalTransfer.data,16) : (internalTransfer.raw && internalTransfer.raw.data) ? parseInt(internalTransfer.raw.data,16) : null;\n\n            if (!metaTxValue){\n              return false;\n            }\n\n            const metaTxValueFixed = this.fixTokenDecimals(metaTxValue,tokenConfig.decimals);\n            realTx.action = action;\n            realTx.value = metaTxValueFixed;\n            realTx.tokenAmount = metaTxValueFixed;\n            // this.customLog(metaTxValueFixed.toString());\n          break;\n          case 'migrateFromCompoundToIdle':\n          case 'migrateFromFulcrumToIdle':\n          case 'migrateFromAaveToIdle':\n          case 'migrateFromIearnToIdle':\n          case 'migrateFromToIdle':\n            if (!tokenConfig.migration || !tokenConfig.migration.oldContract){\n              return false;\n            }\n\n            let migrationTxReceipt = tx.txReceipt ? tx.txReceipt : null;\n\n            if (!migrationTxReceipt){\n              migrationTxReceipt = await (new Promise( async (resolve, reject) => {\n                this.props.web3.eth.getTransactionReceipt(tx.transactionHash,(err,tx)=>{\n                  if (err){\n                    reject(err);\n                  }\n                  resolve(tx);\n                });\n              }));\n            }\n\n            if (!migrationTxReceipt){\n              return false;\n            }\n\n            // Save txReceipt into the tx\n            if (!tx.txReceipt){\n              tx.txReceipt = migrationTxReceipt;\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n            }\n\n            const migrationContractAddr = tokenConfig.migration.migrationContract.address.toLowerCase().replace('x','');\n            const contractAddress = tokenConfig.idle.address.toLowerCase().replace('x','');\n            const migrationTxInternalTransfers = migrationTxReceipt.logs.filter((tx) => { return tx.topics.length>=3 && tx.topics[tx.topics.length-2].toLowerCase() === `0x00000000000000000000000${migrationContractAddr}` && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${contractAddress}`; });\n\n            if (!migrationTxInternalTransfers.length){\n              return false;\n            }\n\n            const migrationInternalTransfer = migrationTxInternalTransfers.pop();\n\n            const decodedLogs = this.props.web3.eth.abi.decodeLog([\n              {\n                internalType: \"uint256\",\n                name: \"_token\",\n                type: \"uint256\"\n              },\n            ],migrationInternalTransfer.data,migrationInternalTransfer.topics);\n\n            if (!decodedLogs || !decodedLogs._token){\n              return false;\n            }\n\n            const migrationValue = decodedLogs._token;\n            const migrationValueFixed = this.fixTokenDecimals(migrationValue,tokenConfig.decimals);\n            realTx.value = migrationValueFixed.toString();\n          break;\n          default:\n          break;\n        }\n\n        realTx.tokenPrice = tokenPrice;\n        realTx.token = selectedToken;\n        realTx.tokenSymbol = selectedToken;\n        realTx.idleTokens = tokenPrice.times(this.BNify(realTx.value));\n\n        // Save processed tx\n        etherscanTxs[txHash] = realTx;\n        // etherscanTxs.push(realTx);\n\n        // Store processed Tx\n        if (!tx.realTx){\n          tx.realTx = realTx;\n          storedTxs[this.props.account][tokenKey][txKey] = tx;\n        }\n      });\n    });\n\n    // Update Stored Txs\n    if (storedTxs){\n      this.updateStoredTransactions(storedTxs);\n    }\n\n    return etherscanTxs;\n  }\n  saveCachedRequest = (endpoint,alias=false,data) => {\n    const key = alias ? alias : endpoint;\n    const timestamp = parseInt(Date.now()/1000);\n    const dataToCache = {\n      data,\n      timestamp\n    };\n    return this.addKeyToCachedDataWithLocalStorage('cachedRequests',key,dataToCache);\n    // return this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n  }\n  getCustomAddress = () => {\n    return this.getStoredItem('customAddress',false);\n  }\n  setCustomAddress = (customAddress) => {\n    return this.setLocalStorage('customAddress',customAddress);\n  }\n  getCachedRequest = (endpoint,alias=false) => {\n    const key = alias ? alias : endpoint;\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key]){\n      return cachedRequests[key].data;\n    }\n    return null;\n  }\n  makeRequest = async(endpoint,error_callback=false,config=null) => {\n    const data = await axios\n                  .get(endpoint,config)\n                  .catch(err => {\n                    if (typeof error_callback === 'function'){\n                      error_callback(err);\n                    }\n                  });\n    return data;\n  }\n  makeEtherscanApiRequest = async (endpoint,keys=[],TTL=120,apiKeyIndex=0) => {\n    const timestamp = parseInt(Date.now()/1000);\n    \n    // Check if already exists\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[endpoint] && cachedRequests[endpoint].timestamp && timestamp-cachedRequests[endpoint].timestamp<TTL){\n      return cachedRequests[endpoint].data;\n    }\n\n    const apiKey = keys[apiKeyIndex];\n    const data = await this.makeRequest(endpoint+'&apikey='+apiKey);\n\n    // console.log('makeEtherscanApiRequest',endpoint+'&apikey='+apiKey,apiKeyIndex+'/'+keys.length,data,(data.data ? data.data.message : null),apiKeyIndex<keys.length-1);\n\n    if (data && data.data && data.data.message === 'OK'){\n      const dataToCache = {\n        data,\n        timestamp\n      };\n      // this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n      this.addKeyToCachedDataWithLocalStorage('cachedRequests',endpoint,dataToCache);\n      return data;\n    } else if (apiKeyIndex<keys.length-1) {\n      return await this.makeEtherscanApiRequest(endpoint,keys,TTL,apiKeyIndex+1);\n    }\n    return null;\n  }\n  makeCachedRequest = async (endpoint,TTL=60,return_data=false,alias=false,config=null) => {\n    const key = alias ? alias : endpoint;\n    const timestamp = parseInt(Date.now()/1000);\n    \n    // Check if already exists\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n\n    // console.log('makeCachedRequest',endpoint,TTL,cachedRequests[key],(cachedRequests[key] ? timestamp-cachedRequests[key].timestamp : null));\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key] && cachedRequests[key].timestamp && timestamp-cachedRequests[key].timestamp<TTL){\n      return (cachedRequests[key].data && return_data ? cachedRequests[key].data.data : cachedRequests[key].data);\n    }\n\n    const data = await this.makeRequest(endpoint,false,config);\n\n    const dataToCache = {\n      data,\n      timestamp\n    };\n\n    // console.log('makeCachedRequest - CACHE',key,dataToCache);\n\n    // this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n    this.addKeyToCachedDataWithLocalStorage('cachedRequests',key,dataToCache);\n    return (data && return_data ? data.data : data);\n  }\n  getTransactionError = error => {\n    let output = 'error';\n    if (parseInt(error.code)){\n      const errorCode = parseInt(error.code);\n      switch (errorCode){\n        case 4001:\n          output = 'denied';\n        break;\n        default:\n          output = `error_${errorCode}`;\n        break;\n      }\n    } else if (error.message){\n      output = error.message.split(\"\\n\")[0]; // Take just the first line of the error\n    }\n\n    return output;\n  }\n  getGlobalConfigs = () => {\n    return globalConfigs;\n  }\n  getArrayPath = (path,array) => {\n    if (!array){\n      return null;\n    }\n    path = Object.assign([],path);\n    if (path.length>0){\n      const prop = path.shift();\n      if (!path.length){\n        return array[prop] ? array[prop] : null;\n      } else if (array[prop]) {\n        return this.getArrayPath(path,array[prop]);\n      }\n    }\n    return null;\n  }\n  getGlobalConfig = (path,configs=false) => {\n    configs = configs ? configs : globalConfigs;\n    if (path.length>0){\n      const prop = path.shift();\n      if (!path.length){\n        return configs[prop] !== undefined ? configs[prop] : null;\n      } else if (configs[prop]) {\n        return this.getGlobalConfig(path,configs[prop]);\n      }\n    }\n    return null;\n  }\n  getAppUrl = (path) => {\n    return globalConfigs.baseURL+'/'+path;\n  }\n  getCurrentEnvironment = () => {\n    let environment = Object.keys(globalConfigs.environments).find( env => {\n      const envUrl = globalConfigs.environments[env].url;\n      return envUrl.toLowerCase() === window.location.origin.toLowerCase();\n    });\n    return environment || 'beta';\n  }\n  checkUrlPolygon = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.polygonUrl.toLowerCase());\n  }\n  checkUrlOrigin = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n  }\n  checkUrlBeta = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.betaURL.toLowerCase());\n  }\n  sendGoogleAnalyticsPageview = async (page=null) => {\n    page = page || window.location.hash.substr(1);\n    const googlePageviewInfo = this.getGlobalConfig(['analytics','google','pageView']);\n    const isOrigin = this.checkUrlOrigin();\n    if (googlePageviewInfo.enabled && isOrigin && window.ga){\n      window.ga('set', 'page', page);\n      window.ga('send', 'pageview');\n    }\n  }\n  sendGoogleAnalyticsEvent = async (eventData,callback=null) => {\n\n    const googleEventsInfo = globalConfigs.analytics.google.events;\n    const debugEnabled = googleEventsInfo.debugEnabled;\n    const originOk = window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n\n    if (googleEventsInfo.enabled && window.ga && ( debugEnabled || originOk)){\n\n      // Check if testnet postfix required\n      if (googleEventsInfo.addPostfixForTestnet){\n        // Postfix network name if not mainnet\n        if (globalConfigs.network.requiredNetwork !== 1){\n          const currentNetwork = globalConfigs.network.availableNetworks[globalConfigs.network.requiredNetwork];\n          eventData.eventCategory += `_${currentNetwork}`;\n        // Postfix test for debug\n        } else if (debugEnabled && !originOk) {\n          eventData.eventCategory += '_test';\n        }\n      }\n\n      await (new Promise( async (resolve, reject) => {\n        eventData.hitCallback = () => {\n          resolve(true);\n        };\n        eventData.hitCallbackFail = () => {\n          reject();\n        };\n\n        window.ga('send', 'event', eventData);\n      }));\n\n      if (typeof callback === 'function'){\n        callback();\n      }\n    }\n\n    if (typeof callback === 'function'){\n      callback();\n    }\n\n    return false;\n  }\n  createContract = async (name, address, abi) => {\n    try {\n      const contract = new this.props.web3.eth.Contract(abi, address);\n      return {name, contract};\n    } catch (error) {\n      this.customLogError(\"Could not create contract.\",name,address,error);\n    }\n    return null;\n  }\n  getWalletProvider = (defaultProvider=null) => {\n    return this.getStoredItem('walletProvider',false,defaultProvider);\n  }\n  simpleIDPassUserInfo = (userInfo,simpleID) => {\n    if (!userInfo.address && this.props.account){\n      userInfo.address = this.props.account;\n    }\n    if (!userInfo.provider){\n      userInfo.provider = this.getWalletProvider();\n    }\n    if (typeof userInfo.email !== 'undefined' && !userInfo.email){\n      delete userInfo.email;\n    }\n    if (!userInfo.address){\n      return false;\n    }\n    simpleID = simpleID ? simpleID : (this.props.simpleID ? this.props.simpleID : (typeof this.props.initSimpleID === 'function' ? this.props.initSimpleID() : null));\n    if (simpleID){\n      return simpleID.passUserInfo(userInfo);\n    }\n    return false;\n  }\n  getEtherscanTransactionUrl = (txHash,requiredNetwork=null) => {\n    const defaultNetwork = this.getGlobalConfig(['network','requiredNetwork']);\n    requiredNetwork = requiredNetwork || this.getRequiredNetworkId();\n    const explorer = this.getGlobalConfig(['network','availableNetworks',requiredNetwork,'explorer']);\n    const defaultUrl = this.getGlobalConfig(['network','providers','etherscan','baseUrl',defaultNetwork]);\n    const baseurl = this.getGlobalConfig(['network','providers',explorer,'baseUrl',requiredNetwork]) || defaultUrl;\n    return txHash ? `${baseurl}/tx/${txHash}` : null;\n  }\n  getEtherscanAddressUrl = (address,requiredNetwork=null) => {\n    const defaultNetwork = this.getGlobalConfig(['network','requiredNetwork']);\n    requiredNetwork = requiredNetwork || this.getRequiredNetworkId();\n    const explorer = this.getGlobalConfig(['network','availableNetworks',requiredNetwork,'explorer']);\n    const defaultUrl = this.getGlobalConfig(['network','providers','etherscan','baseUrl',defaultNetwork]);\n    const baseurl = this.getGlobalConfig(['network','providers',explorer,'baseUrl',requiredNetwork]) || defaultUrl;\n    return address ? `${baseurl}/address/${address}` : null;\n  }\n  formatMoney = (amount, decimalCount = 2, decimal = \".\", thousands = \",\") => {\n    try {\n      decimalCount = Math.abs(decimalCount);\n      decimalCount = isNaN(decimalCount) ? 2 : decimalCount;\n\n      const negativeSign = amount < 0 ? \"-\" : \"\";\n\n      let i = parseInt(amount = Math.abs(Number(amount) || 0).toFixed(decimalCount)).toString();\n      let j = (i.length > 3) ? i.length % 3 : 0;\n\n      return negativeSign + (j ? i.substr(0, j) + thousands : '') + i.substr(j).replace(/(\\d{3})(?=\\d)/g, \"$1\" + thousands) + (decimalCount ? decimal + Math.abs(amount - i).toFixed(decimalCount).slice(2) : \"\");\n    } catch (e) {\n      return null;\n    }\n  }\n  getSnapshotProposals = async (activeOnly=false) => {\n\n    const cachedDataKey = `snapshotProposals_${activeOnly}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null){\n      return cachedData;\n    }\n\n    const whitelist = this.getGlobalConfig(['network','providers','snapshot','whitelist']).map( addr => addr.toLowerCase() );\n    const endpoint = this.getGlobalConfig(['network','providers','snapshot','endpoints','proposals']);\n    let proposals = await this.makeCachedRequest(endpoint,1440,true);\n\n    // console.log('getSnapshotProposals',proposals);\n\n    if (proposals && !proposals.error){\n      proposals = Object.values(proposals);\n\n      const currTime = parseInt(Date.now()/1000);\n      if (activeOnly){\n        proposals =  proposals.filter( p => (p.msg.payload.start<=currTime && p.msg.payload.end>currTime) );\n      }\n\n      // console.log(proposals);\n\n      const validProposals = [];\n      await this.asyncForEach(proposals, async (p) => {\n        // Add proposal if ended\n        if (p.msg.payload.end<=currTime || whitelist.includes(p.address.toLowerCase())){\n          validProposals.push(p);\n        } else {\n          const blockNumber = p.msg.payload.snapshot;\n\n          let checkedStrategies = false;\n          await this.asyncForEach( p.msg.payload.metadata.strategies, async (s) => {\n            if (checkedStrategies){\n              return;\n            }\n            if (s.name==='erc20-balance-of'){\n              const tokenName = s.params.symbol;\n              const tokenContract = this.getContractByName(tokenName);\n              if (tokenContract){\n                const tokenBalance = await this.getTokenBalance(tokenName,p.address,true,blockNumber);\n                // console.log(p.relayerIpfsHash,p.address,s.name,tokenBalance ? tokenBalance.toFixed() : null);\n                if (tokenBalance && this.BNify(tokenBalance).gt(100)){\n                  checkedStrategies = true;\n                }\n              }\n            } else {\n              // checkedStrategies = true;\n            }\n\n            // console.log(p.relayerIpfsHash,p.address,s.name,checkedStrategies);\n          });\n          \n          // Add proposal is passed token balances check\n          if (checkedStrategies){\n            validProposals.push(p);\n          }\n        }\n      });\n\n      return this.setCachedData(cachedDataKey,validProposals);\n    }\n  }\n  getAprsFromApi = async (networkId=null) => {\n    const config = this.getGlobalConfig(['stats','config']);\n    if (!networkId || !this.getGlobalConfig(['network','enabledNetworks']).includes(networkId)){\n      networkId = this.getRequiredNetworkId();\n    }\n    const endpointInfo = this.getGlobalConfig(['stats','aprs']);\n    const aprs = await this.makeCachedRequest(endpointInfo.endpoint[networkId],endpointInfo.TTL,true,false,config);\n    return aprs;\n  }\n  getTokenApiData = async (address,isRisk=null,startTimestamp=null,endTimestamp=null,forceStartTimestamp=false,frequency=null,order=null,limit=null) => {\n    const networkId = this.getRequiredNetworkId();\n    // const statsConfig = this.getGlobalConfig(['stats']);\n    // const statsEnabled = statsConfig.enabled && statsConfig.availableNetworks.includes(networkId);\n    // if (!statsEnabled){\n    //   return [];\n    // }\n\n    // Check for cached data\n    const cachedDataKey = `tokenApiData_${networkId}_${address}_${isRisk}_${frequency}_${order}_${limit}`;\n    let cachedData = this.getCachedData(cachedDataKey);\n\n    if (cachedData !== null){\n      // Check for fittable start and end time\n      const filteredCachedData = cachedData.filter( c => ( (c.startTimestamp===null || (startTimestamp && c.startTimestamp<=startTimestamp)) && (c.endTimestamp===null || (endTimestamp && c.endTimestamp>=endTimestamp)) ) )\n      if (filteredCachedData && filteredCachedData.length>0){\n        let filteredData = filteredCachedData.pop().data;\n        if (filteredData){\n          filteredData = filteredData.filter( d => ((!startTimestamp || d.timestamp>=startTimestamp) && (!endTimestamp || d.timestamp<=endTimestamp)) );\n          if (filteredData.length>0){\n            return filteredData;\n          }\n        }\n      }\n    // Initialize cachedData\n    } else {\n      cachedData = [];\n    }\n\n    const apiInfo = this.getGlobalConfig(['stats','rates']);\n    let endpoint = `${apiInfo.endpoint[networkId]}${address}`;\n\n    // console.log('getTokenApiData',cachedDataKey,apiInfo,endpoint);\n\n    if (startTimestamp || endTimestamp || isRisk !== null || frequency !== null){\n      const params = [];\n\n      if (startTimestamp && parseInt(startTimestamp)){\n        if (forceStartTimestamp){\n          params.push(`start=${startTimestamp}`);\n        } else {\n          const start = startTimestamp-(60*60*24*2); // Minus 1 day for Volume graph\n          params.push(`start=${start}`);\n        }\n      }\n\n      if (endTimestamp && parseInt(endTimestamp)){\n        params.push(`end=${endTimestamp}`);\n      }\n\n      if (isRisk !== null){\n        params.push(`isRisk=${isRisk}`);\n      }\n\n      if (frequency !== null && parseInt(frequency)){\n        params.push(`frequency=${frequency}`);\n      }\n\n      if (order !== null){\n        params.push(`order=${order}`);\n      }\n\n      if (limit !== null && parseInt(limit)){\n        params.push(`limit=${limit}`);\n      }\n\n      if (params.length){\n        endpoint += '?'+params.join('&');\n      }\n    }\n\n    const config = this.getGlobalConfig(['stats','config']);\n    let output = await this.makeRequest(endpoint,false,config);\n    if (!output){\n      return [];\n    }\n\n    const data = output.data;\n\n    let filteredData = null;\n    if (isRisk !== null){\n      filteredData = data.filter( d => ( d.isRisk === isRisk ) );\n    }\n\n    cachedData.push({\n      isRisk,\n      endTimestamp,\n      startTimestamp,\n      data:filteredData,\n    });\n\n    this.setCachedData(cachedDataKey,cachedData);\n\n    return data;\n  }\n  getTokenExchangeRate = async (contractName,exchangeRateParams) => {\n    const cachedDataKey = `exchangeRate_${contractName}_${exchangeRateParams.name}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const exchangeRate = await this.genericContractCall(contractName,exchangeRateParams.name,exchangeRateParams.params);\n    return this.setCachedDataWithLocalStorage(cachedDataKey,exchangeRate,null);\n  }\n  getTokenDecimals = async (contractName) => {\n    contractName = contractName || this.props.selectedToken;\n\n    if (!contractName){\n      return false;\n    }\n\n    const cachedDataKey = `contractDecimals_${contractName}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const tokenConfig = this.getGlobalConfig(['stats','tokens',contractName]);\n    const decimals = tokenConfig && tokenConfig.decimals ? tokenConfig.decimals : await this.genericContractCall(contractName,'decimals');\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey,decimals,null);\n  }\n  getAvgApr = (aprs,allocations,totalAllocation) => {\n    if (aprs && allocations && totalAllocation){\n      let avgApr = Object.keys(aprs).reduce((aprWeighted,protocolAddr) => {\n        const allocation = this.BNify(allocations[protocolAddr]);\n        const apr = this.BNify(aprs[protocolAddr]);\n        return this.BNify(aprWeighted).plus(allocation.times(apr));\n      },0);\n\n      if (avgApr){\n        return this.BNify(avgApr).div(totalAllocation);\n      }\n    }\n    return null;\n  }\n  getFrequencySeconds = (frequency,quantity=1) => {\n    const frequency_seconds = {\n      hour:3600,\n      day:86400,\n      week:604800\n    };\n    return frequency_seconds[frequency]*quantity;\n  }\n  getIdleStakingRewardsTxs = async () => {\n    const idleTokenConfig = this.getGlobalConfig(['govTokens','IDLE']);\n    const feeDistributorConfig = this.getGlobalConfig(['tools','stake','props','availableTokens','IDLE','feeDistributor']);\n    const etherscanInfo = this.getGlobalConfig(['network','providers','etherscan']);\n    const etherscanApiUrl = etherscanInfo.endpoints[1];\n    const etherscanEndpoint = `${etherscanApiUrl}?module=account&action=tokentx&address=${feeDistributorConfig.address}&sort=desc`;\n    const etherscanTxlist = await this.makeEtherscanApiRequest(etherscanEndpoint,etherscanInfo.keys,3600);\n    // console.log('getIdleStakingRewardsTxs',etherscanEndpoint,etherscanTxlist);\n    if (etherscanTxlist && etherscanTxlist.data && etherscanTxlist.data.result && typeof etherscanTxlist.data.result.filter === 'function'){\n      return etherscanTxlist.data.result.filter( tx => (tx.contractAddress.toLowerCase() === idleTokenConfig.address.toLowerCase() && tx.to.toLowerCase() === feeDistributorConfig.address.toLowerCase() && this.BNify(tx.value).gt(0) ));\n    }\n    return [];\n  }\n  getProtocolInfoByAddress = (addr) => {\n    return this.props.tokenConfig.protocols.find(c => c.address.toLowerCase() === addr.toLowerCase());\n  }\n  integerValue = value => {\n    return this.BNify(value).integerValue(BigNumber.ROUND_FLOOR).toFixed();\n  }\n  normalizeTokenDecimals = tokenDecimals => {\n    return this.BNify(`1e${tokenDecimals}`);\n  }\n  normalizeTokenAmount = (tokenBalance,tokenDecimals,round=true) => {\n    const normalizedTokenDecimals = this.normalizeTokenDecimals(tokenDecimals);\n    return this.BNify(tokenBalance).times(normalizedTokenDecimals).integerValue(BigNumber.ROUND_FLOOR).toFixed();\n  }\n  fixTokenDecimals = (tokenBalance,tokenDecimals,exchangeRate=null) => {\n    if (!tokenDecimals){\n      return this.BNify(tokenBalance);\n    }\n    const normalizedTokenDecimals = this.normalizeTokenDecimals(tokenDecimals);\n    let balance = this.BNify(tokenBalance).div(normalizedTokenDecimals);\n    if (exchangeRate && !exchangeRate.isNaN()){\n      balance = balance.times(exchangeRate);\n    }\n    return balance;\n  }\n  checkContractPaused = async (contractName=null) => {\n    contractName = contractName ? contractName : this.props.tokenConfig.idle.token;\n    const contractPaused = await this.genericContractCallCached(contractName, 'paused').catch(err => {\n      this.customLogError('Generic Idle call err:', err);\n    });\n    // this.customLog('checkContractPaused',this.props.tokenConfig.idle.token,contractPaused);\n    return contractPaused;\n  }\n  getStoredItem = (key,parse_json=true,return_default=null) => {\n    let output = return_default;\n    if (window.localStorage){\n      const item = localStorage.getItem(key);\n      if (item){\n        output = item;\n        if (parse_json){\n          output = JSON.parse(item);\n        }\n      }\n    }\n    if (!output){\n      return return_default;\n    }\n    return output;\n  }\n  clearStoredData = (excludeKeys=[]) => {\n    if (window.localStorage){\n\n      if (!excludeKeys || !excludeKeys.length){\n        return window.localStorage.clear();\n      }\n\n      const storedKeysToRemove = [];\n      for (let i=0;i<window.localStorage.length;i++){\n        const storedKey = window.localStorage.key(i);\n        if (!excludeKeys.includes(storedKey)){\n          storedKeysToRemove.push(storedKey);\n        }\n      }\n      storedKeysToRemove.forEach((storedKey) => {\n        this.removeStoredItem(storedKey)\n      });\n    }\n  }\n  removeStoredItem = (key) => {\n    if (window.localStorage){\n      window.localStorage.removeItem(key);\n      return true;\n    }\n    return false;\n  }\n  setLocalStorage = (key,value,stringify=false) => {\n    if (window.localStorage){\n      try {\n        value = stringify ? JSON.stringify(value) : value;\n        window.localStorage.setItem(key,value);\n        return true;\n      } catch (error) {\n        // this.customLog('setLocalStorage',error);\n        window.localStorage.removeItem(key);\n      }\n    }\n    return false;\n  }\n  checkRebalance = async (tokenConfig) => {\n    if (!tokenConfig && this.props.tokenConfig){\n      tokenConfig = this.props.tokenConfig;\n    }\n    if (!tokenConfig){\n      return false;\n    }\n\n    const lastAllocationsPromises = [];\n    const allocations = await this.genericContractCall(tokenConfig.idle.token, 'getAllocations');\n\n    if (!allocations || !allocations.length){\n      return false;\n    }\n\n    for (let protocolIndex=0;protocolIndex<allocations.length;protocolIndex++){\n      const lastAllocationsPromise = new Promise( async (resolve, reject) => {\n        try {\n          const lastAllocations = await this.genericContractCall(tokenConfig.idle.token, 'lastAllocations',[protocolIndex]);\n          resolve(lastAllocations);\n        } catch (error) {\n          console.log(error);\n          resolve(null);\n        }\n      });\n      lastAllocationsPromises.push(lastAllocationsPromise);\n    }\n\n    const newAllocations = await Promise.all(lastAllocationsPromises);\n\n    if (!allocations || !newAllocations){\n      return true;\n    }\n\n    const diff = allocations.filter( (alloc,index) => alloc !== newAllocations[index] );\n\n    return diff.length>0;\n  }\n  checkMigration = async (tokenConfig,account) => {\n\n    if (!tokenConfig || !account){\n      return false;\n    }\n\n    let migrationEnabled = false;\n    let oldContractBalance = null;\n    let oldContractTokenDecimals = null;\n    // let migrationContractApproved = false;\n    let oldContractBalanceFormatted = null;\n\n    // Check migration contract enabled and balance\n    if (tokenConfig.migration && tokenConfig.migration.enabled){\n      const oldContractName = tokenConfig.migration.oldContract.name;\n      const oldContract = this.getContractByName(oldContractName);\n      const migrationContract = this.getContractByName(tokenConfig.migration.migrationContract.name);\n\n      // this.customLog(oldContractName,tokenConfig.migration.migrationContract.name);\n\n      if (oldContract && migrationContract){\n        // Get old contract token decimals\n        oldContractTokenDecimals = await this.getTokenDecimals(oldContractName);\n\n        // this.customLog('Migration - token decimals',oldContractTokenDecimals ? oldContractTokenDecimals.toString() : null);\n\n        // Check migration contract approval\n        // migrationContractApproved = await this.checkMigrationContractApproved();\n\n        // this.customLog('Migration - approved',migrationContractApproved ? migrationContractApproved.toString() : null);\n\n        // Check old contractBalance\n        oldContractBalance = await this.getContractBalance(oldContractName,account);\n\n        if (oldContractBalance){\n          oldContractBalanceFormatted = this.fixTokenDecimals(oldContractBalance,oldContractTokenDecimals);\n          // Enable migration if old contract balance if greater than 0\n          migrationEnabled = this.BNify(oldContractBalance).gt(0);\n        }\n\n        // this.customLog('Migration - oldContractBalance',oldContractName,account,oldContractBalance,oldContractBalanceFormatted);\n      }\n    }\n\n    // Set migration contract balance\n    return {\n      migrationEnabled,\n      oldContractBalance,\n      oldContractTokenDecimals,\n      oldContractBalanceFormatted,\n    };\n  }\n\n  getContractEvents = async (contractName, eventName, params = {}) => {\n    return await this.getContractPastEvents(contractName, eventName, params);\n  }\n\n  estimateMethodGasUsage = async (contractName, methodName, methodParams = [], account = null) => {\n    account = account || this.props.account;\n    if (!account){\n      return null;\n    }\n    const contract = this.getContractByName(contractName);\n    if (contract && contract.methods[methodName]){\n      const functionCall = contract.methods[methodName](...methodParams);\n\n      let gasPrice = null;\n      let gasLimit = null;\n      \n      try {\n        [\n          gasPrice,\n          gasLimit\n        ] = await Promise.all([\n          this.props.web3.eth.getGasPrice(),\n          functionCall.estimateGas({from: account})\n        ]);\n      } catch (error) {\n\n      }\n\n      if (gasPrice && gasLimit){\n        return this.fixTokenDecimals(this.fixTokenDecimals(gasPrice,9).times(gasLimit),9);\n      }\n    }\n\n    return this.BNify(0);\n  }\n\n  executeMetaTransaction = async (contract, userAddress, signedParameters, callback, callback_receipt) => {\n    try {\n\n      // const gasLimit = await contract.methods\n      //   .executeMetaTransaction(userAddress, ...signedParameters)\n      //   .estimateGas({ from: userAddress });\n\n      // this.customLog(gasLimit);\n\n      const gasPrice = await this.props.web3.eth.getGasPrice();\n\n      const tx = contract.methods\n        .executeMetaTransaction(userAddress, ...signedParameters)\n        .send({\n          from: userAddress,\n          gasPrice\n          // gasLimit\n        });\n\n      tx.on(\"transactionHash\", function(hash) {\n        this.customLog(`Transaction sent by relayer with hash ${hash}`);\n        callback_receipt()\n      }).once(\"confirmation\", function(confirmationNumber, receipt) {\n        this.customLog(\"Transaction confirmed on chain\",receipt);\n        callback_receipt(receipt);\n      });\n    } catch (error) {\n      this.customLog(error);\n      callback(null,error);\n    }\n  }\n\n  getSignatureParameters_v4 = signature => {\n    if (!this.props.web3.utils.isHexStrict(signature)) {\n      throw new Error(\n        'Given value \"'.concat(signature, '\" is not a valid hex string.')\n      );\n    }\n    var r = signature.slice(0, 66);\n    var s = \"0x\".concat(signature.slice(66, 130));\n    var v = \"0x\".concat(signature.slice(130, 132));\n    v = this.props.web3.utils.hexToNumber(v);\n    if (![27, 28].includes(v)) v += 27;\n    return {\n      r: r,\n      s: s,\n      v: v\n    };\n  };\n\n  constructMetaTransactionMessage = (nonce, chainId, functionSignature, contractAddress) => {\n    return ethereumjsABI.soliditySHA3(\n      [\"uint256\",\"address\",\"uint256\",\"bytes\"],\n      [nonce, contractAddress, chainId, toBuffer(functionSignature)]\n    );\n  }\n\n  checkBiconomyLimits = async (userAddress) => {\n    const biconomyInfo = this.getGlobalConfig(['network','providers','biconomy']);\n    const res = await this.makeRequest(`${biconomyInfo.endpoints.limits}?userAddress=${userAddress}&apiId=${biconomyInfo.params.apiId}`,null,{\n      headers:{\n        'x-api-key':biconomyInfo.params.apiKey\n      }\n    });\n\n    if (res && res.data){\n      return res.data;\n    }\n\n    return null;\n  }\n\n  sendTxWithPermit = async (contractName,methodName,methodParams,nonce,callback,callback_receipt) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      callback(null,'Contract not found');\n      return false;\n    }\n\n    if (!contract.methods[methodName]){\n      callback(null,'Method not found');\n      return false;\n    }\n\n    const functionSignature = contract.methods[methodName](...methodParams).encodeABI();\n\n    try{\n      const userAddress = this.props.account;\n      const chainId = this.getRequiredNetworkId();\n      const messageToSign = this.constructMetaTransactionMessage(nonce, chainId, functionSignature, contract._address);\n\n      const signature = await this.props.web3.eth.personal.sign(\n        \"0x\" + messageToSign.toString(\"hex\"),\n        userAddress\n      );\n\n      const { r, s, v } = this.getSignatureParameters_v4(signature);\n\n      this.contractMethodSendWrapper(contractName, methodName, methodParams.concat([nonce, r, s, v]), callback, callback_receipt);\n\n      return true;\n    } catch (error) {\n      callback(null,error);\n      return false;\n    }\n  }\n\n  buildBiconomyErc20ForwarderTx = async (contractName,tokenAddress,permitType,callData,gasLimit) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      return false;\n    }\n\n    // console.log('Build Tx ',contract._address,tokenAddress,Number(gasLimit),callData);\n\n    const buildParams = {\n      permitType,\n      data:callData,\n      token:tokenAddress,\n      to:contract._address,\n      txGas:parseInt(gasLimit)\n    };\n\n    // console.log('buildBiconomyErc20ForwarderTx',buildParams);\n\n    //Create the call data that the recipient contract will receive\n    const tx = await this.props.erc20ForwarderClient.buildTx(buildParams);\n\n    return tx;\n  }\n\n  getTransactionReceipt = async (hash) => {\n    return await (new Promise( async (resolve, reject) => {\n      this.props.web3.eth.getTransactionReceipt(hash,(err,tx)=>{\n        if (err){\n          reject(err);\n        }\n        resolve(tx);\n      });\n    }));\n  }\n\n  sendBiconomyTxWithErc20Forwarder = async (req,metaInfo,callback,callback_receipt) => {\n\n    let transactionHash = null;\n\n    try {\n      const txResponse = await this.props.erc20ForwarderClient.permitAndSendTxEIP712({req,metaInfo});\n      transactionHash = txResponse.txHash;\n      // console.log('permitAndSendTxEIP712',transactionHash);\n    } catch (error) {\n      // console.log('permitAndSendTxEIP712 ERROR',error);\n      callback(null,true);\n      return false;\n    }\n\n    if (!transactionHash){\n      // console.log('!transactionHash ERROR');\n      callback(null,true);\n      return false;\n    }\n    \n    const tx = {\n      method:'mintIdleToken',\n      transactionHash\n    };\n    // console.log('sendBiconomyTxWithErc20Forwarder - TX',tx);\n    callback_receipt(tx);\n\n    // fetch mined transaction receipt \n    const fetchReceiptIntervalId = window.setInterval(()=> {\n      this.props.web3.eth.getTransactionReceipt(transactionHash, (err, receipt)=> {\n        // console.log('sendBiconomyTxWithErc20Forwarder - RECEIPT',transactionHash,err,receipt);\n        if(!err && receipt){\n          window.clearInterval(fetchReceiptIntervalId);\n          tx.txReceipt = receipt;\n          tx.status = !err && receipt.status ? 'success' : 'error';\n\n          callback(tx,err);\n\n          if (typeof window.updateTransaction === 'function'){\n            window.updateTransaction(tx,transactionHash,tx.status,null);\n          }\n        }\n      });\n    }, 3000);\n\n    return true;\n  }\n\n  sendBiconomyTxWithPersonalSign = async (contractName,functionSignature,callback,callback_receipt) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      callback(null,'Contract not found');\n      return false;\n    }\n\n    try{\n      const userAddress = this.props.account;\n      const nonce = await contract.methods.getNonce(userAddress).call();\n      const chainId = this.getRequiredNetworkId();\n      const messageToSign = this.constructMetaTransactionMessage(nonce, chainId, functionSignature, contract._address);\n\n      const signature = await this.props.web3.eth.personal.sign(\n        \"0x\" + messageToSign.toString(\"hex\"),\n        userAddress\n      );\n\n      const { r, s, v } = this.getSignatureParameters_v4(signature);\n\n      this.contractMethodSendWrapper(contractName, 'executeMetaTransaction', [userAddress, functionSignature, r, s, v], callback, callback_receipt);\n\n      return true;\n    } catch (error) {\n      console.error(error);\n      callback(null,error);\n      return false;\n    }\n  }\n\n  signPermitEIP2612 = async (contractAddress, erc20Name, owner, spender, value, nonce, deadline, chainId) => {\n    if (chainId === undefined) {\n      const result = await this.props.web3.eth.getChainId();\n      chainId = parseInt(result);\n    }\n\n    const domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const permit = [\n      { name: \"owner\", type: \"address\" },\n      { name: \"spender\", type: \"address\" },\n      { name: \"value\", type: \"uint256\" },\n      { name: \"nonce\", type: \"uint256\" },\n      { name: \"deadline\", type: \"uint256\" },\n    ];\n\n    const domainData = {\n      version: \"2\",\n      name: erc20Name,\n      chainId: chainId,\n      verifyingContract: contractAddress\n    };\n\n    const message = {\n      owner,\n      spender,\n      value,\n      nonce,\n      deadline,\n    };\n\n    const data = JSON.stringify({\n      types: {\n        EIP712Domain: domain,\n        Permit: permit,\n      },\n      primaryType: \"Permit\",\n      domain: domainData,\n      message: message\n    });\n\n    return new Promise((resolve, reject) => {\n      this.props.web3.currentProvider.send({\n        jsonrpc: '2.0',\n        id: Date.now().toString().substring(9),\n        method: \"eth_signTypedData_v4\",\n        params: [owner, data],\n        from: owner\n      }, (error, res) => {\n        if (error) {\n          return reject(error);\n        }\n\n        resolve(res.result);\n      });\n    });\n  }\n\n  signPermit = async (baseContractName, holder, spenderContractName, addToNonce=0, value=null) => {\n    const baseContract = this.getContractByName(baseContractName);\n    const spenderContract = this.getContractByName(spenderContractName);\n\n    if (!baseContract || !spenderContract){\n      return false;\n    }\n\n    const result = await this.props.web3.eth.net.getId();\n    let chainId = parseInt(result);\n\n    const EIP712Domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const permitConfig = this.getGlobalConfig(['permit',baseContractName]);\n\n    const expiry = Math.round(new Date().getTime() / 1000 + 3600);\n    let nonce = permitConfig.nonceMethod ? await baseContract.methods[permitConfig.nonceMethod](holder).call() : null;\n    if (addToNonce>0){\n      nonce = parseInt(nonce)+parseInt(addToNonce);\n    }\n    nonce = nonce.toString();\n\n    const Permit = permitConfig.type;\n    const EIPVersion = permitConfig.EIPVersion;\n\n    const spender = spenderContract._address;\n    const verifyingContract = baseContract._address;\n\n    const permitName = permitConfig.name || baseContractName;\n\n    const domain = {\n      chainId,\n      name: permitName,\n      verifyingContract,\n      version: permitConfig.version.toString() || '1',\n    };\n\n    let message = {};\n\n    switch (EIPVersion){\n      case 2612:\n        const owner = holder;\n        const deadline = expiry;\n        // Unlimited allowance\n        value = value || this.integerValue(this.BNify(2).pow(256).minus(1));\n        message = {\n          value,\n          nonce,\n          owner,\n          spender,\n          deadline\n        };\n      break;\n      default:\n        message = {\n          holder,\n          nonce,\n          expiry,\n          spender,\n          allowed: true,\n        };\n      break;\n    }\n\n    const data = JSON.stringify({\n      domain,\n      message,\n      types: {\n        Permit,\n        EIP712Domain\n      },\n      primaryType: 'Permit',\n    });\n\n    // console.log('Permit',JSON.parse(data));\n\n    return new Promise((resolve, reject) => {\n      this.props.web3.currentProvider.send({\n        from: holder,\n        jsonrpc: '2.0',\n        params: [holder, data],\n        method: 'eth_signTypedData_v4',\n        id: Date.now().toString().substring(9),\n      }, (error, response) => {\n        if (error || (response && response.error)) {\n          return resolve(null);\n        } else if (response && response.result) {\n          const signedParameters = this.getSignatureParameters_v4(response.result);\n          signedParameters.nonce = nonce;\n          signedParameters.expiry = expiry;\n          return resolve(signedParameters);\n        }\n      });\n    });\n  }\n\n  sendTxWithPermit = async (baseContractName, holder, spenderContractName, methodName, methodParams, callback, callback_receipt, callback_permit=null) => {\n\n    const baseContract = this.getContractByName(baseContractName);\n    const spenderContract = this.getContractByName(spenderContractName);\n\n    if (!baseContract || !spenderContract){\n      callback(null,'Contract not found');\n      return false;\n    }\n\n    const signedParameters = await this.signPermit(baseContractName, holder, spenderContractName);\n\n    if (signedParameters){\n      const { expiry, nonce, r, s, v } = signedParameters;\n      const permitParams = [expiry, v, r, s];\n\n      const methodAbi = spenderContract._jsonInterface.find( f => f.name === methodName );\n      const useNonce = methodAbi ? methodAbi.inputs.find( i => i.name === 'nonce' ) : true;\n      if (!isNaN(parseInt(nonce)) && useNonce){\n        permitParams.unshift(nonce);\n      }\n      const params = methodParams.concat(permitParams);\n      this.contractMethodSendWrapper(spenderContractName, methodName, params, callback, callback_receipt);\n    } else {\n      callback(null,'Permit cancelled');\n    }\n  }\n\n  sendSignedTx = async (contractName,contractAddress,functionSignature,callback,callback_receipt) => {\n\n    const EIP712Domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const MetaTransaction = [\n      { name: \"nonce\", type: \"uint256\" },\n      { name: \"from\", type: \"address\" },\n      { name: \"functionSignature\", type: \"bytes\" }\n    ];\n\n    const chainId = await this.props.web3.eth.getChainId();\n\n    const domainData = {\n      chainId,\n      version: '1',\n      name: contractName,\n      verifyingContract: contractAddress\n    };\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      callback(null,'Contract not found');\n      return false\n    }\n\n    let userAddress = this.props.account;\n    let nonce = await contract.methods.getNonce(userAddress).call();\n    let message = {};\n    message.nonce = nonce;\n    message.from = userAddress;\n    message.functionSignature = functionSignature;\n\n    const dataToSign = JSON.stringify({\n      types: {\n        EIP712Domain,\n        MetaTransaction\n      },\n      domain: domainData,\n      primaryType: \"MetaTransaction\",\n      message\n    });\n\n    // this.customLog('dataToSign',dataToSign);\n\n    this.props.web3.currentProvider.send(\n      {\n        jsonrpc: \"2.0\",\n        id: 999999999999,\n        from: userAddress,\n        method: \"eth_signTypedData_v4\",\n        params: [userAddress, dataToSign]\n      },\n      (error, response) => {\n        if (error || (response && response.error)) {\n          return callback(null,error);\n        } else if (response && response.result) {\n          const signedParameters = this.getSignatureParameters_v4(response.result);\n          const { r, s, v } = signedParameters;\n            \n          this.contractMethodSendWrapper(contractName, 'executeMetaTransaction', [userAddress, functionSignature, r, s, v], callback, callback_receipt);\n        }\n      }\n    );\n  }\n\n  checkTokenApproved = async (contractName,contractAddr,walletAddr) => {\n    const [\n      balance,\n      allowance\n    ] = await Promise.all([\n      this.getTokenBalance(contractName,walletAddr,false),\n      this.getAllowance(contractName,contractAddr,walletAddr)\n    ]);\n    this.customLog('checkTokenApproved',contractName,this.BNify(allowance).toFixed(),this.BNify(balance).toFixed(),(allowance && this.BNify(allowance).gte(this.BNify(balance))));\n    return allowance && this.BNify(allowance).gte(this.BNify(balance));\n  }\n  getAllowance = async (contractName,contractAddr,walletAddr) => {\n    if (!contractName || !contractAddr || !walletAddr){\n      return false;\n    }\n    this.customLog('getAllowance',contractName,contractAddr,walletAddr);\n    return await this.genericContractCall(\n      contractName, 'allowance', [walletAddr, contractAddr]\n    );\n  }\n  contractMethodSendWrapperWithValue = (contractName,methodName,params,value,callback,callback_receipt,txData) => {\n    this.props.contractMethodSendWrapper(contractName, methodName, params, value, (tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    }, null, txData);\n  }\n  contractMethodSendWrapper = (contractName,methodName,params,callback,callback_receipt,txData=null,send_raw=false,raw_tx_data=null) => {\n    try{\n      this.props.contractMethodSendWrapper(contractName, methodName, params, null, (tx)=>{\n        if (typeof callback === 'function'){\n          callback(tx);\n        }\n      }, (tx) => {\n        if (typeof callback_receipt === 'function'){\n          callback_receipt(tx);\n        }\n      }, null, txData, send_raw, raw_tx_data);\n    } catch (error) {\n      callback(null,error);\n    }\n  }\n  disableERC20 = (contractName,address,callback,callback_receipt) => {\n    this.props.contractMethodSendWrapper(contractName, 'approve', [\n      address,\n      this.props.web3.utils.toTwosComplement('0') // max uint solidity\n    ],null,(tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    });\n  }\n  enableERC20 = (contractName,address,callback,callback_receipt) => {\n    this.props.contractMethodSendWrapper(contractName, 'approve', [\n      address,\n      this.props.web3.utils.toTwosComplement('-1') // max uint solidity\n    ],null,(tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    });\n  }\n  getTrancheStakedBalance = async (contractName,walletAddr,decimals=null) => {\n    if (!walletAddr){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `trancheStakedBalance_${contractName}_${walletAddr}_${decimals}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let stakedBalance = await this.genericContractCall(contractName,'usersStakes',[walletAddr]);\n    if (stakedBalance){\n      if (decimals){\n        stakedBalance = this.fixTokenDecimals(stakedBalance,decimals);\n      }\n      stakedBalance = this.BNify(stakedBalance);\n\n      if (!stakedBalance.isNaN()){\n        return this.setCachedDataWithLocalStorage(cachedDataKey,stakedBalance,30);\n      }\n    }\n    return this.BNify(0);\n  }\n  getTrancheStakingRewards = async (account,trancheConfig) => {\n    const stakingRewards = {};\n    await this.asyncForEach(trancheConfig.CDORewards.stakingRewards, async (tokenConfig) => {\n      const tokenGlobalConfig = this.getGlobalConfig(['stats','tokens',tokenConfig.token]);\n      tokenConfig = {...tokenConfig,...tokenGlobalConfig};\n      const tokenAmount = await this.genericContractCallCached(trancheConfig.CDORewards.name,'expectedUserReward',[account,tokenConfig.address]);\n      stakingRewards[tokenConfig.token] = this.fixTokenDecimals(tokenAmount,tokenConfig.decimals);\n    });\n\n    // console.log('getTrancheStakingRewards',stakingRewards);\n\n    return stakingRewards;\n  }\n  loadTrancheFieldRaw = async (field,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens=true) => {\n    return await this.loadTrancheField(field,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens,false);\n  }\n  loadTrancheField = async (field,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account=null,addGovTokens=true,formatValue=true,addTokenName=true) => {\n    let output = null;\n    const maxPrecision = (fieldProps && fieldProps.maxPrecision) || 5;\n    const decimals = (fieldProps && fieldProps.decimals) || (this.props.isMobile ? 2 : 3);\n    const minPrecision = (fieldProps && fieldProps.minPrecision) || (this.props.isMobile ? 3 : 4);\n    const tokenName = this.getGlobalConfig(['stats','tokens',token,'label']) || this.capitalize(token);\n\n    const strategyConfig = tokenConfig.Strategy;\n    const idleStrategyAddress = await this.genericContractCallCached(tokenConfig.CDO.name,'strategy'); \n    if (idleStrategyAddress){\n      await this.props.initContract(strategyConfig.name,idleStrategyAddress,strategyConfig.abi);\n    }\n\n    const idleGovTokenConfig = this.getGlobalConfig(['govTokens','IDLE']);\n    switch (field){\n      case 'protocolName':\n        output = (this.getGlobalConfig(['stats','protocols',protocol,'label']) || this.capitalize(protocol)).toUpperCase();\n      break;\n      case 'tokenName':\n        output = tokenName;\n      break;\n      case 'trancheType':\n        output = (this.getGlobalConfig(['tranches',tranche,'baseName']) || '').toUpperCase();\n        // console.log('trancheType',tranche,trancheConfig,output);\n      break;\n      case 'pool':\n        let poolSize = await this.genericContractCallCached(tokenConfig.CDO.name,'getContractValue');\n        if (!this.BNify(poolSize).isNaN()){\n          output = this.fixTokenDecimals(poolSize,tokenConfig.CDO.decimals);\n          if (formatValue){\n            output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision);\n          }\n        }\n      break;\n      case 'seniorPool':\n        output = await this.loadTrancheField('tranchePool',fieldProps,protocol,token,tranche,tokenConfig,tokenConfig.AA,account,addGovTokens);\n      break;\n      case 'juniorPool':\n        output = await this.loadTrancheField('tranchePool',fieldProps,protocol,token,tranche,tokenConfig,tokenConfig.BB,account,addGovTokens);\n      break;\n      case 'seniorApy':\n        output = await this.loadTrancheField('trancheApy',fieldProps,protocol,token,tranche,tokenConfig,tokenConfig.AA,account,addGovTokens);\n      break;\n      case 'juniorApy':\n        output = await this.loadTrancheField('trancheApy',fieldProps,protocol,token,tranche,tokenConfig,tokenConfig.BB,account,addGovTokens);\n      break;\n      case 'tranchePool':\n        let [\n          totalSupply,\n          virtualPrice\n        ] = await Promise.all([\n          this.getTokenTotalSupply(trancheConfig.name,'latest',180),\n          this.loadTrancheField('tranchePrice',fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens)\n        ]);\n\n        output = this.BNify(0);\n        if (!this.BNify(virtualPrice).isNaN() && !this.BNify(totalSupply).isNaN()){\n          output = this.fixTokenDecimals(totalSupply,tokenConfig.CDO.decimals).times(virtualPrice);\n        }\n        if (formatValue){\n          output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision)+(addTokenName ? ` ${tokenName}` : '');\n        }\n      break;\n      case 'trancheDeposited':\n        const deposited = await this.getAmountDepositedTranche(tokenConfig,trancheConfig,account);\n\n        output = output || this.BNify(0);\n\n        output = this.BNify(deposited);\n        if (output.gt(0)){\n          if (formatValue){\n            output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision)+(addTokenName ? ` ${tokenName}` : '');\n          }\n        } else {\n          output = formatValue ? '-' : null;\n        }\n      break;\n      case 'trancheFee':\n        output = await this.genericContractCallCached(tokenConfig.CDO.name,'fee');\n        if (output){\n          output = this.BNify(output).div(this.BNify(100000));\n        }\n      break;\n      case 'tranchePrice':\n        output = await this.genericContractCall(tokenConfig.CDO.name,'virtualPrice',[trancheConfig.address]);\n        if (output){\n          output = this.fixTokenDecimals(output,trancheConfig.decimals);\n        }\n      break;\n      case 'trancheStaked':\n        let [\n          staked1,\n          lastPrice1\n        ] = await Promise.all([\n          this.getTrancheStakedBalance(trancheConfig.CDORewards.name,account,trancheConfig.CDORewards.decimals),\n          this.loadTrancheField(`tranchePrice`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens)\n        ]);\n\n\n        output = formatValue ? '-' : null;\n        if (staked1 && lastPrice1){\n          output = this.BNify(staked1).times(lastPrice1);\n          // console.log('trancheStaked',staked1.toString(),lastPrice1.toString(),output.toString());\n          if (formatValue){\n            output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision)+(addTokenName ? ` ${tokenName}` : '');\n          }\n        }\n      break;\n      case 'trancheRedeemable':\n        let [\n          deposited1,\n          lastPrice\n        ] = await Promise.all([\n          this.getTokenBalance(trancheConfig.name,account),\n          this.loadTrancheFieldRaw(`tranchePrice`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens)\n        ]);\n\n        output = formatValue ? '-' : null;\n        if (deposited1 && lastPrice){\n          output = this.BNify(deposited1).times(lastPrice);\n          if (formatValue){\n            output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision)+(addTokenName ? ` ${tokenName}` : '');\n          }\n        }\n      break;\n      case 'trancheRedeemableWithStaked':\n        let [\n          redeemable1,\n          staked2\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheRedeemable`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens),\n          this.loadTrancheFieldRaw(`trancheStaked`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens)\n        ]);\n\n        output = formatValue ? '-' : null;\n        if (redeemable1 && staked2){\n          output = this.BNify(redeemable1).plus(staked2);\n          if (formatValue){\n            output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision)+(addTokenName ? ` ${tokenName}` : '');\n          }\n        }\n      break;\n      case 'earningsCounter':\n        let [\n          earningsStart,\n          trancheApy2,\n          deposited3\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`earnings`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens),\n          this.loadTrancheFieldRaw(`trancheApy`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens),\n          this.loadTrancheFieldRaw(`trancheDeposited`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens),\n        ]);\n\n\n        if (deposited3 && earningsStart && trancheApy2){\n          const earningsEnd = deposited3.gt(0) ? deposited3.times(trancheApy2.div(100)).plus(earningsStart) : 0;\n\n          output = {\n            earningsEnd,\n            earningsStart\n          };\n        }\n      break;\n      case 'feesCounter':\n        let [\n          trancheFee,\n          earningsCounter\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheFee`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens),\n          this.loadTrancheFieldRaw(`earningsCounter`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens),\n        ]);\n\n        if (trancheFee && earningsCounter){\n          const feesStart = earningsCounter.earningsStart.times(trancheFee);\n          const feesEnd =  earningsCounter.earningsEnd.times(trancheFee);\n\n          // console.log('feesCounter',feesStart.toString(),feesEnd.toString());\n\n          output = {\n            feesEnd,\n            feesStart\n          };\n        }\n      break;\n      case 'earnings':\n        const [\n          deposited4,\n          redeemable3\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheDeposited`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens),\n          this.loadTrancheFieldRaw(`trancheRedeemableWithStaked`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens)\n        ]);\n\n        if (deposited4 && redeemable3){\n          output = this.BNify(redeemable3).minus(deposited4);\n          if (formatValue){\n            output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision)+(addTokenName ? ` ${tokenName}` : '');\n          }\n        }\n      break;\n      case 'earningsPerc':\n        const [\n          deposited2,\n          redeemable2\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheDeposited`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens),\n          this.loadTrancheFieldRaw(`trancheRedeemableWithStaked`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens)\n        ]);\n        output = redeemable2.div(deposited2).minus(1).times(100);\n        if (formatValue){\n          output = output.toFixed(decimals)+'%';\n        }\n      break;\n      case 'trancheApy':\n        let trancheApy = await this.genericContractCallCached(tokenConfig.CDO.name,'getApr',[trancheConfig.address]);\n        // console.log('trancheApy',this.props.network.required,tokenConfig.CDO.name,trancheConfig.address,trancheApy);\n        if (trancheApy){\n          output = this.fixTokenDecimals(trancheApy,tokenConfig.CDO.decimals);\n          output = this.apr2apy(output.div(100)).times(100);\n          if (formatValue){\n            output = output.toFixed(2)+'%';\n          }\n        }\n      break;\n      case 'realizedApy':\n        const [\n          firstDepositTx,\n          earningsPerc\n        ] = await Promise.all([\n          this.getTrancheFirstDepositTx(tokenConfig,trancheConfig,account),\n          this.loadTrancheFieldRaw(`earningsPerc`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens)\n        ]);\n\n        // console.log('realizedApy',earningsPerc.toString(),firstDepositTx);\n\n        if (earningsPerc && firstDepositTx){\n          const secondsFromFirstTx = parseInt(Date.now()/1000)-parseInt(firstDepositTx.timeStamp);\n          output = this.BNify(earningsPerc).times(31536000).div(secondsFromFirstTx);\n\n          // console.log('realizedApy2',firstDepositTx,earningsPerc.toString(),output.toString());\n\n          if (formatValue){\n            output = output.toFixed(2)+'%';\n          }\n        }\n      break;\n      case 'trancheIDLELastHarvest':\n      case 'trancheIDLEDistribution':\n        output = this.BNify(0);\n        const rewardsTokensInfo = await this.getTrancheRewardTokensInfo(tokenConfig,trancheConfig);\n        if (rewardsTokensInfo && rewardsTokensInfo.IDLE){\n          if (field === 'trancheIDLEDistribution'){\n            output = this.fixDistributionSpeed(rewardsTokensInfo.IDLE.tokensPerSecond,idleGovTokenConfig.distributionFrequency);\n            if (formatValue){\n              output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision)+` IDLE/${idleGovTokenConfig.distributionFrequency}`\n            }\n          } else {\n            output = rewardsTokensInfo.IDLE.lastAmount;\n            if (formatValue){\n              output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision)+` IDLE <a href=\"${this.getEtherscanTransactionUrl(rewardsTokensInfo.IDLE.latestHarvest.transactionHash)}\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">(last harvest)</a>`\n            }\n          }\n        } else {\n          if (field === 'trancheIDLEDistribution'){\n            if (formatValue){\n              output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision)+` IDLE/${idleGovTokenConfig.distributionFrequency}`\n            }\n          }\n        }\n      break;\n      case 'AAIDLEDistribution':\n        output = this.abbreviateNumber('1234',decimals,maxPrecision,minPrecision)+` IDLE/day`;\n      break;\n      case 'BBIDLEDistribution':\n        output = this.abbreviateNumber('4321',decimals,maxPrecision,minPrecision)+` IDLE/day`;\n      break;\n      case 'govTokens':\n      case 'autoFarming':\n      case 'stakingRewards':\n        output = {};\n        const [\n          rewardsTokens,\n          incentiveTokens\n        ] = await Promise.all([\n          this.genericContractCall(strategyConfig.name,'getRewardTokens'),\n          this.genericContractCall(tokenConfig.CDO.name,'getIncentiveTokens')\n        ]);\n\n        const govTokens = field === 'govTokens' ? rewardsTokens : (field === 'autoFarming' && rewardsTokens ? rewardsTokens.filter( rewardTokenAddr => incentiveTokens && !incentiveTokens.map( addr => addr.toLowerCase() ).includes(rewardTokenAddr.toLowerCase()) ) : incentiveTokens);\n\n        if (govTokens){\n          govTokens.forEach( govTokenAddress => {\n            const govTokenConfig = this.getGovTokenConfigByAddress(govTokenAddress);\n            // Skip reward token if globally disabled\n            if (govTokenConfig && !govTokenConfig.enabled){\n              return;\n            }\n            // Skip reward token if not enabled for this specific tranche\n            const stakingRewardsTokenConfig = trancheConfig ? trancheConfig.CDORewards.stakingRewards.find( tokenConfig => tokenConfig.address.toLowerCase() === govTokenAddress.toLowerCase() ) : null;\n            if (stakingRewardsTokenConfig && !stakingRewardsTokenConfig.enabled){\n              return;\n            }\n            output[govTokenConfig.token] = govTokenConfig;\n          });\n        }\n      break;\n      default:\n      break;\n    }\n\n    // console.log('loadTrancheField',field,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens,formatValue);\n\n    return output;\n  }\n  loadAssetField = async (field,token,tokenConfig,account,addGovTokens=true,addCurveApy=false) => {\n\n    let output = null;\n    const govTokens = this.getGlobalConfig(['govTokens']);\n\n    // Remove gov tokens for risk adjusted strategy\n    const strategyInfo = this.getGlobalConfig(['strategies',this.props.selectedStrategy]);\n    if (addGovTokens && strategyInfo && typeof strategyInfo.addGovTokens !== 'undefined'){\n      addGovTokens = strategyInfo.addGovTokens;\n    }\n\n    // Take available tokens for gov tokens fields\n    let govTokenAvailableTokens = null;\n    if (this.props.selectedStrategy && this.props.selectedToken){\n      const newTokenConfig = this.props.availableStrategies[this.props.selectedStrategy][this.props.selectedToken];\n      if (newTokenConfig){\n        govTokenAvailableTokens = {};\n        govTokenAvailableTokens[newTokenConfig.token] = newTokenConfig;\n      }\n    } else if (!Object.keys(govTokens).includes(token)){\n      govTokenAvailableTokens = {};\n      govTokenAvailableTokens[token] = tokenConfig;\n    }\n\n    switch (field){\n      case 'amountLentCurve':\n        const [\n          curveAvgSlippage,\n          curveAvgBuyPrice,\n          curveTokenBalance,\n        ] = await Promise.all([\n          this.getCurveAvgSlippage(),\n          this.getCurveAvgBuyPrice([],account),\n          this.getCurveTokenBalance(account,true),\n        ]);\n\n        if (curveAvgBuyPrice && curveTokenBalance){\n          output = this.BNify(curveTokenBalance).times(curveAvgBuyPrice);\n          if (curveAvgSlippage){\n            output = output.minus(output.times(curveAvgSlippage));\n          }\n          // this.customLog('amountLentCurve',curveTokenBalance.toFixed(6),curveAvgBuyPrice.toFixed(6),curveAvgSlippage.toString(),output.toFixed(6));\n        }\n      break;\n      case 'earningsPercCurve':\n        let [amountLentCurve1,redeemableBalanceCurve] = await Promise.all([\n          this.loadAssetField('amountLentCurve',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalanceCurve',token,tokenConfig,account)\n        ]);\n\n        if (amountLentCurve1 && redeemableBalanceCurve && amountLentCurve1.gt(0) && redeemableBalanceCurve.gt(0)){\n          output = redeemableBalanceCurve.div(amountLentCurve1).minus(1).times(100);\n          // this.customLog('earningsPercCurve',redeemableBalanceCurve.toFixed(6),amountLentCurve1.toFixed(6),output.toFixed(6));\n        }\n      break;\n      case 'curveApy':\n        output = await this.getCurveAPY();\n      break;\n      case 'curveAvgSlippage':\n        output = await this.getCurveAvgSlippage();\n      break;\n      case 'redeemableBalanceCurve':\n        output = await this.getCurveRedeemableIdleTokens(account);\n        // this.customLog('earningsPercCurve',output.toFixed(6));\n      break;\n      case 'redeemableBalanceCounterCurve':\n        let [\n          curveApy,\n          amountLentCurve,\n          redeemableBalanceCurveStart\n        ] = await Promise.all([\n          this.loadAssetField('curveApy',token,tokenConfig,account),\n          this.loadAssetField('amountLentCurve',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalanceCurve',token,tokenConfig,account),\n        ]);\n\n        let redeemableBalanceCurveEnd = null;\n\n        if (redeemableBalanceCurveStart && curveApy && amountLentCurve){\n          const earningPerYear = amountLentCurve.times(curveApy.div(100));\n          redeemableBalanceCurveEnd = redeemableBalanceCurveStart.plus(earningPerYear);\n          // this.customLog('redeemableBalanceCounterCurve',amountLentCurve.toFixed(6),redeemableBalanceCurveStart.toFixed(6),redeemableBalanceCurveEnd.toFixed(6));\n        }\n\n        output = {\n          redeemableBalanceCurveEnd,\n          redeemableBalanceCurveStart\n        };\n      break;\n      case 'earningsPerc':\n        let [amountLent1,redeemableBalance1] = await Promise.all([\n          this.loadAssetField('amountLent',token,tokenConfig,account,false),\n          this.loadAssetField('redeemableBalance',token,tokenConfig,account,false)\n        ]);\n\n        if (amountLent1 && redeemableBalance1 && amountLent1.gt(0)){\n          output = redeemableBalance1.div(amountLent1).minus(1).times(100);\n        }\n      break;\n      case 'daysFirstDeposit':\n        const depositTimestamp = await this.loadAssetField('depositTimestamp',token,tokenConfig,account);\n        if (depositTimestamp){\n          const currTimestamp = parseInt(Date.now()/1000);\n          output = (currTimestamp-depositTimestamp)/86400;\n        }\n      break;\n      case 'pool':\n        if (Object.keys(govTokens).includes(token)){\n          output = await this.getGovTokenPool(token, govTokenAvailableTokens);\n        } else {\n          output = await this.getTokenPool(tokenConfig,addGovTokens);\n        }\n      break;\n      case 'userDistributionSpeed':\n        switch (token){\n          case 'COMP':\n            output = await this.getCompUserDistribution(account,govTokenAvailableTokens);\n          break;\n          case 'WMATIC':\n          case 'stkAAVE':\n            output = await this.getStkAaveUserDistribution(account,govTokenAvailableTokens);\n          break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getUserDistribution(account,govTokenAvailableTokens);\n          break;\n          default:\n          break;\n        }\n        if (output && !this.BNify(output).isNaN()){\n          output = this.BNify(output).div(1e18);\n          if (output){\n            output = this.fixDistributionSpeed(output,tokenConfig.distributionFrequency,tokenConfig.distributionMode);\n          }\n        }\n      break;\n      case 'idleDistribution':\n        const idleGovToken = this.getIdleGovToken();\n        const tokenName = this.getGlobalConfig(['governance','props','tokenName']);\n        const govTokenConfig = this.getGlobalConfig(['govTokens',tokenName]);\n        output = await idleGovToken.getSpeed(tokenConfig.idle.address);\n\n        if (output){\n\n          output = this.fixTokenDecimals(output,govTokenConfig.decimals);\n\n          const blocksPerYear = this.BNify(this.getGlobalConfig(['network','blocksPerYear']));\n          switch (govTokenConfig.distributionFrequency){\n            case 'day':\n              const blocksPerDay = blocksPerYear.div(365.242199);\n              output = output.times(blocksPerDay);\n            break;\n            case 'week':\n              const blocksPerWeek = blocksPerYear.div(52.1429);\n              output = output.times(blocksPerWeek);\n            break;\n            case 'month':\n              const blocksPerMonth = blocksPerYear.div(12);\n              output = output.times(blocksPerMonth);\n            break;\n            case 'year':\n              output = output.times(blocksPerYear);\n            break;\n            default:\n            break;\n          }\n        }\n      break;\n      case 'distributionSpeed':\n        const selectedTokenConfig = govTokenAvailableTokens[this.props.selectedToken];\n        switch (token){\n          case 'COMP':\n            output = await this.getCompDistribution(selectedTokenConfig);\n          break;\n          case 'WMATIC':\n          case 'stkAAVE':\n            output = await this.getStkAaveDistribution(selectedTokenConfig);\n          break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getSpeed(selectedTokenConfig.idle.address);\n          break;\n          default:\n          break;\n        }\n        if (output && !this.BNify(output).isNaN()){\n          output = this.BNify(output).div(1e18);\n        }\n      break;\n      case 'apr':\n        switch (token){\n          case 'COMP':\n            output = await this.getCompAvgApr(govTokenAvailableTokens);\n          break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getAvgApr(govTokenAvailableTokens);\n          break;\n          default:\n            const tokenAprs = await this.getTokenAprs(tokenConfig,false,addGovTokens);\n            if (tokenAprs && tokenAprs.avgApr !== null){\n              output = tokenAprs.avgApr;\n            }\n          break;\n        }\n      break;\n      case 'apy':\n        const tokenApys = await this.getTokenAprs(tokenConfig,false,addGovTokens);\n\n        output = this.BNify(0);\n\n        if (tokenApys && !this.BNify(tokenApys.avgApy).isNaN()){\n          output = this.BNify(tokenApys.avgApy);\n\n          if (addCurveApy){\n            const curveAPY = await this.getCurveAPY();\n            if (curveAPY){\n              output = output.plus(curveAPY);\n            }\n          }\n        } else {\n\n        }\n\n        // console.log('apy - OUTPUT - ',output);\n      break;\n      case 'avgAPY':\n        const [\n          tokenPrice,\n          firstDepositTx,\n          days\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.getFirstDepositTx([token],account),\n          this.loadAssetField('daysFirstDeposit',token,tokenConfig,account)\n        ]);\n\n        if (tokenPrice && firstDepositTx && firstDepositTx[token]){\n          const tokenPriceFirstDeposit = await this.getIdleTokenPrice(tokenConfig,firstDepositTx[token].blockNumber);\n          output = this.BNify(tokenPrice).div(tokenPriceFirstDeposit).minus(1).times(365).div(days).times(100);\n        }\n      break;\n      case 'avgAPY_old':\n        const [\n          daysFirstDeposit,\n          earningsPerc\n        ] = await Promise.all([\n          this.loadAssetField('daysFirstDeposit',token,tokenConfig,account),\n          this.loadAssetField('earningsPerc',token,tokenConfig,account), // Take earnings perc instead of earnings\n        ]);\n\n        if (daysFirstDeposit && earningsPerc){\n          output = earningsPerc.times(365).div(daysFirstDeposit);\n        }\n      break;\n      case 'depositTimestamp':\n        const depositTimestamps = account ? await this.getDepositTimestamp([token],account) : false;\n        if (depositTimestamps && depositTimestamps[token]){\n          output = depositTimestamps[token];\n        }\n      break;\n      case 'amountLent':\n        output = account ? await this.getAmountDeposited(tokenConfig,account) : false;\n        // console.log('amountLent - OUTPUT - ',output);\n        // const amountLents = account ? await this.getAmountLent([token],account) : false;\n        // if (amountLents && amountLents[token]){\n        //   output = amountLents[token];\n        // }\n      break;\n      case 'tokenPrice':\n        if (Object.keys(govTokens).includes(token)){\n          const govTokenConfig = govTokens[token];\n          const DAITokenConfig = {\n            address:this.getContractByName('DAI')._address\n          };\n          try {\n            output = await this.getUniswapConversionRate(DAITokenConfig,govTokenConfig);\n          } catch (error) {\n\n          }\n          if (!output || this.BNify(output).isNaN()){\n            output = '-';\n          }\n        } else {\n          output = await this.getTokenPrice(tokenConfig.idle.token);\n        }\n      break;\n      case 'fee':\n        output = await this.getUserTokenFees(tokenConfig,account);\n      break;\n      case 'tokenBalance':\n        if (Object.keys(govTokens).includes(token)){\n          output = await this.getTokenBalance(token,account);\n          if (!output || output.isNaN()){\n            output = '-';\n          }\n        } else {\n          let tokenBalance = account ? await this.getTokenBalance(tokenConfig.token,account) : false;\n          if (!tokenBalance || tokenBalance.isNaN()){\n            tokenBalance = '-';\n          }\n          output = tokenBalance;\n        }\n      break;\n      case 'idleTokenBalance':\n        const idleTokenBalance = account ? await this.getTokenBalance(tokenConfig.idle.token,account) : false;\n        if (idleTokenBalance){\n          output = idleTokenBalance;\n        }\n      break;\n      case 'redeemableBalanceCounter':\n\n        // console.log('redeemableBalanceCounter - BEFORE',token,tokenConfig,account);\n\n        let [tokenAPY1,amountLent2,redeemableBalanceStart] = await Promise.all([\n          this.loadAssetField('apy',token,tokenConfig,account,false),\n          this.loadAssetField('amountLent',token,tokenConfig,account,false),\n          this.loadAssetField('redeemableBalance',token,tokenConfig,account,false),\n        ]);\n\n        // console.log('redeemableBalanceCounter - CALL - ',tokenAPY1,amountLent2,redeemableBalanceStart);\n\n        // debugger;\n\n        let redeemableBalanceEnd = redeemableBalanceStart;\n\n        if (redeemableBalanceStart && tokenAPY1 && amountLent2){\n          const earningPerYear = amountLent2.times(tokenAPY1.div(100));\n          redeemableBalanceEnd = redeemableBalanceStart.plus(earningPerYear);\n        }\n\n        output = {\n          redeemableBalanceEnd,\n          redeemableBalanceStart\n        };\n\n        // console.log('redeemableBalanceCounter - OUTPUT',token,parseFloat(redeemableBalanceStart),parseFloat(redeemableBalanceEnd),output);\n      break;\n      case 'redeemableBalance':\n        if (Object.keys(govTokens).includes(token)){\n          const govTokenConfig = govTokens[token];\n          output = await this.getGovTokenUserBalance(govTokenConfig,account,govTokenAvailableTokens);\n        } else {\n          let [\n            idleTokenPrice1,\n            idleTokenBalance2,\n            govTokensBalance\n          ] = await Promise.all([\n            this.getIdleTokenPrice(tokenConfig),\n            this.loadAssetField('idleTokenBalance',token,tokenConfig,account),\n            addGovTokens ? this.getGovTokensUserTotalBalance(account,govTokenAvailableTokens,token) : null,\n          ]);\n\n          // console.log('redeemableBalance - BEFORE - ',idleTokenBalance2,idleTokenPrice1);\n\n          if (idleTokenBalance2 && idleTokenPrice1){\n            const tokenBalance = idleTokenBalance2.times(idleTokenPrice1);\n            let redeemableBalance = tokenBalance;\n            if (govTokensBalance && !this.BNify(govTokensBalance).isNaN()){\n              redeemableBalance = redeemableBalance.plus(this.BNify(govTokensBalance));\n            }\n            output = redeemableBalance;\n            // console.log('redeemableBalance',token,idleTokenBalance2.toFixed(4),idleTokenPrice1.toFixed(4),tokenBalance.toFixed(4),govTokensBalance ? govTokensBalance.toFixed(4) : null,output.toFixed(4));\n          }\n          // console.log('redeemableBalance - OUTPUT - ',output);\n        }\n      break;\n      case 'earningsCurve':\n        let [amountLentCurve2,redeemableBalanceCurve1] = await Promise.all([\n          this.loadAssetField('amountLentCurve',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalanceCurve',token,tokenConfig,account)\n        ]);\n\n        if (!amountLentCurve2){\n          amountLentCurve2 = this.BNify(0);\n        }\n\n        if (!redeemableBalanceCurve1){\n          redeemableBalanceCurve1 = this.BNify(0);\n        }\n\n        output = redeemableBalanceCurve1.minus(amountLentCurve2);\n      break;\n      case 'earnings':\n        let [amountLent,redeemableBalance2] = await Promise.all([\n          this.loadAssetField('amountLent',token,tokenConfig,account,false),\n          this.loadAssetField('redeemableBalance',token,tokenConfig,account,false)\n        ]);\n\n        if (!amountLent){\n          amountLent = this.BNify(0);\n        }\n        if (!redeemableBalance2){\n          redeemableBalance2 = this.BNify(0);\n        }\n\n        output = redeemableBalance2.minus(amountLent);\n\n        // console.log('earnings',token,amountLent.toFixed(5),redeemableBalance2.toFixed(5),output.toFixed(5));\n\n        if (output.lt(this.BNify(0))){\n          output = this.BNify(0);\n        }\n      break;\n      default:\n      break;\n    }\n\n    return output;\n  }\n  getIdleTokenSupply = async (idleToken,blockNumber='latest') => {\n    const cachedDataKey = `idleTokenSupply_${idleToken}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let idleTokenSupply = await this.getTokenTotalSupply(idleToken,blockNumber);\n    if (idleTokenSupply){\n      return this.BNify(idleTokenSupply);\n    }\n\n    return null;\n  }\n  getIdleTokenPriceWithFee = async (tokenConfig,account,blockNumber='latest') => {\n    account = account || this.props.account;\n    if (!account){\n      return null;\n    }\n\n    let [\n      fee,\n      tokenPrice,\n      userAvgPrice\n    ] = await Promise.all([\n      this.genericContractCallCached(tokenConfig.idle.token, 'fee', [], {}, blockNumber),\n      this.genericContractCallCached(tokenConfig.idle.token, 'tokenPrice', [], {}, blockNumber),\n      this.genericContractCallCached(tokenConfig.idle.token, 'userAvgPrices', [account], {}, blockNumber)\n    ]);\n    \n    fee = this.BNify(fee);\n    tokenPrice = this.BNify(tokenPrice);\n    userAvgPrice = this.BNify(userAvgPrice);\n\n    if (!tokenPrice.isNaN() && !userAvgPrice.isNaN() && !fee.isNaN() && !this.BNify(userAvgPrice).eq(0) && this.BNify(tokenPrice).gt(this.BNify(userAvgPrice))){\n      const priceWFee = this.integerValue(this.BNify(tokenPrice).minus(parseInt(fee.div(1e5).times(tokenPrice.minus(userAvgPrice)))));\n      return priceWFee;\n    }\n\n    return tokenPrice;\n  }\n  getIdleTokenPrice = async (tokenConfig,blockNumber='latest',timestamp=false) => {\n\n    const cachedDataKey = `idleTokenPrice_${tokenConfig.idle.token}_${blockNumber}`;\n    // if (blockNumber !== 'latest'){\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n    // }\n\n    let decimals = tokenConfig.decimals;\n\n    let tokenPrice = await this.genericContractCallCached(tokenConfig.idle.token,'tokenPrice',[],{},blockNumber);\n\n    // If price is NaN try to take it from APIs\n    if (!tokenPrice && timestamp){\n      const isRisk = this.props.selectedStrategy === 'risk';\n      const startTimestamp = parseInt(timestamp)-(60*60);\n      const endTimestamp = parseInt(timestamp)+(60*60);\n      const tokenData = await this.getTokenApiData(tokenConfig.address,isRisk,startTimestamp,endTimestamp,true);\n\n      let beforePrice = {\n        data:null,\n        timeDiff:null\n      };\n\n      let afterPrice = {\n        data:null,\n        timeDiff:null\n      };\n\n      tokenData.forEach( d => {\n        const timeDiff = Math.abs(parseInt(d.timestamp)-parseInt(timestamp));\n        if (parseInt(d.timestamp)<parseInt(timestamp) && (!beforePrice.timeDiff || timeDiff<beforePrice.timeDiff)){\n          beforePrice.timeDiff = timeDiff;\n          beforePrice.data = d;\n        }\n\n        if (parseInt(d.timestamp)>parseInt(timestamp) && !afterPrice.timeDiff){\n          afterPrice.timeDiff = timeDiff;\n          afterPrice.data = d;\n        }\n      });\n\n      // Take before and after and calculate correct tokenPrice based from price acceleration\n      if (beforePrice.data && afterPrice.data){\n        const tokenPriceBefore = this.BNify(beforePrice.data.idlePrice);\n        const tokenPriceAfter = this.BNify(afterPrice.data.idlePrice);\n        const timeBefore = this.BNify(beforePrice.data.timestamp);\n        const timeAfter = this.BNify(afterPrice.data.timestamp);\n        const timeDiff = timeAfter.minus(timeBefore);\n        const priceDiff = tokenPriceAfter.minus(tokenPriceBefore);\n        const priceAcceleration = priceDiff.div(timeDiff);\n        const timeDiffFromBeforePrice = this.BNify(timestamp).minus(timeBefore);\n        tokenPrice = tokenPriceBefore.plus(priceAcceleration.times(timeDiffFromBeforePrice));\n      }\n    }\n\n    // Fix token price decimals\n    if (tokenPrice && !this.BNify(tokenPrice).isNaN()){\n      tokenPrice = this.fixTokenDecimals(tokenPrice,decimals);\n    }\n\n    // If price is NaN then return 1\n    if (!tokenPrice || this.BNify(tokenPrice).isNaN() || this.BNify(tokenPrice).lt(1)){\n      tokenPrice = this.BNify(1);\n    }\n\n    // if (blockNumber !== 'latest'){\n      this.setCachedDataWithLocalStorage(cachedDataKey,tokenPrice);\n    // }\n\n    // this.customLog('getIdleTokenPrice',tokenPrice.toString());\n\n    return tokenPrice;\n  }\n  clearCachedData = (clear_all=false) => {\n    if (this.props.clearCachedData && typeof this.props.clearCachedData === 'function'){\n      // this.customLog('clearCachedData',this.props.clearCachedData,typeof this.props.clearCachedData === 'function');\n      this.props.clearCachedData(null,clear_all);\n    } else {\n      // this.customLog('clearCachedData - Function not found!');\n    }\n    return false;\n  }\n  /*\n  Cache data locally for 3 minutes\n  */\n  setCachedData = (key,data,TTL=180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function'){\n      this.props.setCachedData(key,data,TTL);\n    }\n    return data;\n  }\n  addKeyToCachedDataWithLocalStorage = (parent_key,key,data,TTL=180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function'){\n      const cachedData = this.getCachedDataWithLocalStorage(parent_key,{});\n      cachedData[key] = data;\n      this.props.setCachedData(parent_key,cachedData,TTL,true);\n    }\n    return data;\n  }\n  setCachedDataWithLocalStorage = (key,data,TTL=180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function'){\n      this.props.setCachedData(key,data,TTL,true);\n    }\n    return data;\n  }\n  getCachedDataWithLocalStorage = (key,defaultValue=null) => {\n    return this.getCachedData(key,defaultValue,true);\n  }\n  getCachedData = (key,defaultValue=null,useLocalStorage=false) => {\n    let cachedData = null;\n    key = key.toLowerCase();\n    // Get cache from current session\n    if (this.props.cachedData && this.props.cachedData[key]){\n      cachedData = this.props.cachedData[key];\n    // Get cache from local storage\n    } else if (useLocalStorage) {\n      cachedData = this.getStoredItem('cachedData');\n      if (cachedData && cachedData[key]){\n        cachedData = cachedData[key];\n      } else {\n        cachedData = null;\n      }\n    }\n\n    const cachedDataValid = cachedData && cachedData.data && (cachedData.expirationDate === null || cachedData.expirationDate>=parseInt(Date.now()/1000));\n\n    // if (!cachedDataValid){\n    //   console.log('getCachedData - NOT VALID - ',key,(cachedData ? cachedData.expirationDate-parseInt(Date.now()/1000) : null));\n    // }\n\n    if (cachedDataValid){\n      return cachedData.data;\n    }\n    return defaultValue;\n  }\n  getUserPoolShare = async (walletAddr,tokenConfig) => {\n    const [\n      idleTokensBalance,\n      idleTokensTotalSupply\n    ] = await Promise.all([\n      this.getTokenBalance(tokenConfig.idle.token,walletAddr,false),\n      this.getTokenTotalSupply(tokenConfig.idle.token)\n    ]);\n\n    let userShare = this.BNify(0);\n    if (this.BNify(idleTokensBalance).gt(0) && this.BNify(idleTokensTotalSupply).gt(0)){\n      userShare = this.BNify(idleTokensBalance).div(this.BNify(idleTokensTotalSupply));\n    }\n\n    return userShare;\n  }\n  openWindow = (url) => {\n    return window.open(url,'_blank','noopener');\n  }\n  getActiveCoverages = async (account=null) => {\n    const activeCoverages = [];\n    account = account || this.props.account;\n\n    if (!account){\n      return activeCoverages;\n    }\n\n    const currTimestamp = parseInt(Date.now()/1000);\n\n    const coverProtocolConfig = this.getGlobalConfig(['tools','coverProtocol']);\n    if (coverProtocolConfig.enabled){\n      await this.asyncForEach(coverProtocolConfig.props.coverages, async (coverage) => {\n        const token = 'Claim';\n        const coverageTokens = coverage.tokens;\n        const tokenConfig = coverageTokens[token];\n        // Initialize coverage contract\n        await this.props.initContract(tokenConfig.name,tokenConfig.address,tokenConfig.abi);\n        // Take balance\n        const balance = await this.getTokenBalance(tokenConfig.name,account);\n        if (balance && balance.gt(0)){\n          const actionLabel = 'File Claim';\n          const collateral = coverage.collateral;\n          const protocolName = coverProtocolConfig.label;\n          const protocolImage = coverProtocolConfig.image;\n          const actionUrl = coverProtocolConfig.fileClaimUrl;\n          const status = coverage.expirationTimestamp<=currTimestamp ? 'Expired' : 'Active';\n          const actionDisabled = status === 'Expired';\n          const expirationDate = moment(coverage.expirationTimestamp*1000).utc().format('YYYY-MM-DD HH:mm:ss')+' UTC';\n          activeCoverages.push({\n            token,\n            status,\n            balance,\n            actionUrl,\n            collateral,\n            actionLabel,\n            protocolName,\n            protocolImage,\n            expirationDate,\n            actionDisabled\n          });\n        }\n      });\n    }\n    const nexusMutualConfig = this.getGlobalConfig(['tools','nexusMutual']);\n    if (nexusMutualConfig.enabled){\n      const nexusMutualCoverages = await this.getNexusMutualCoverages(account);\n      nexusMutualCoverages.forEach( coverage => {\n        const actionLabel = 'Claim';\n        const balance = coverage.sumAssured;\n        const token = coverage.coverAssetConfig.token;\n        const collateral = coverage.yieldTokenConfig.token;\n        const portfolioCoverage = coverage.portfolioCoverage;\n        const collateralIcon = `images/tokens/${collateral}.svg`;\n        const actionDisabled = !coverage.incident && !coverage.claimId;\n        const protocolName = this.getGlobalConfig(['insurance','nexusMutual','label']);\n        const protocolImage = this.getGlobalConfig(['insurance','nexusMutual','image']);\n        const protocolImageDark = this.getGlobalConfig(['insurance','nexusMutual','imageDark']);\n        const expirationDate = moment(coverage.coverDetails.validUntil*1000).utc().format('YYYY-MM-DD HH:mm:ss')+' UTC';\n        const status = coverage.claimId ? 'Claimed' : parseInt(coverage.coverDetails.validUntil)<=currTimestamp ? 'Expired' : 'Active';\n        const actionUrl = `${window.location.origin}/#${this.getGlobalConfig(['dashboard','baseRoute'])}/tools/${nexusMutualConfig.route}/${coverage.yieldTokenConfig.token}/claim`;\n        activeCoverages.push({\n          token,\n          status,\n          balance,\n          actionUrl,\n          collateral,\n          actionLabel,\n          protocolName,\n          protocolImage,\n          expirationDate,\n          actionDisabled,\n          collateralIcon,\n          portfolioCoverage,\n          protocolImageDark\n        });\n      });\n    }\n\n    return activeCoverages;\n  }\n  getNexusMutualCoverages = async (account) => {\n    const nexusMutualConfig = this.getGlobalConfig(['tools','nexusMutual']);\n\n    const fromBlock = nexusMutualConfig.directProps.startBlock;\n    const feeDistributorConfig = nexusMutualConfig.directProps.contractInfo;\n    const incidentsInfo = nexusMutualConfig.directProps.incidentsInfo;\n    \n    await Promise.all([\n      this.props.initContract(incidentsInfo.name,incidentsInfo.address,incidentsInfo.abi),\n      this.props.initContract(feeDistributorConfig.name,feeDistributorConfig.address,feeDistributorConfig.abi),\n    ]);\n\n    const [\n      coverBoughtEvents,\n      claimSubmittedEvents,\n    ] = await Promise.all([\n       this.getContractEvents(feeDistributorConfig.name,'CoverBought',{fromBlock, toBlock:'latest',filter:{buyer:account}}),\n       this.getContractEvents(feeDistributorConfig.name,'ClaimSubmitted',{fromBlock, toBlock:'latest',filter:{buyer:account}})\n    ]);\n\n    const nexusMutualCoverages = [];\n\n    await this.asyncForEach(coverBoughtEvents,async (cover) => {\n    // coverBoughtEvents.forEach( cover => {\n      const coverId = parseInt(cover.returnValues.coverId);\n      const claimSubmittedEvent = claimSubmittedEvents.find( claim => parseInt(claim.returnValues.coverId)===coverId );\n      const [\n        coverDetails,\n        incidentEvents\n      ] = await Promise.all([\n        this.genericContractCall(feeDistributorConfig.name,'getCover',[coverId]),\n        this.getContractEvents(incidentsInfo.name,'IncidentAdded',{fromBlock:cover.blockNumber, toBlock:'latest',filter:{productId:cover.contractAddress}})\n      ]);\n\n      if (!coverDetails){\n        return false;\n      }\n\n      // Check if the cover matches any incidents\n      const matchedIncidents = incidentEvents.filter(incident => {\n        return incident.returnValues.productId === coverDetails.contractAddress &&\n        this.BNify(incident.blockNumber).gt(cover.blockNumber)  &&\n        this.BNify(incident.returnValues.incidentDate).lt(coverDetails.validUntil) &&\n        parseInt(coverDetails.validUntil) + nexusMutualConfig.directProps.yieldTokenCoverGracePeriod >= Date.now() / 1000\n      });\n\n      // If multiple incidents match, return the one with the highest priceBefore\n      const matchedIncident = matchedIncidents.reduce((prev, curr) => {\n        if (!prev) {\n          return curr;\n        }\n\n        if (this.BNify(curr.returnValues.priceBefore).gt(prev.returnValues.priceBefore)) {\n          return curr;\n        }\n        return prev;\n      }, null);\n\n      const yieldTokenConfig = Object.values(nexusMutualConfig.props.availableTokens).find( tokenConfig => tokenConfig.address.toLowerCase() === coverDetails.contractAddress.toLowerCase() );\n      const sumAssured = this.fixTokenDecimals(coverDetails.sumAssured,yieldTokenConfig.decimals);\n      const coverAssetConfig = Object.values(yieldTokenConfig.underlying).find( underlyingConfig => underlyingConfig.address.toLowerCase() === coverDetails.coverAsset.toLowerCase() );\n      const expiryDate = this.strToMoment(coverDetails.validUntil*1000).format('YYYY-MM-DD');\n\n      const claimId = claimSubmittedEvent ? claimSubmittedEvent.returnValues.claimId : null;\n      const payoutOutcome = claimId ? await this.genericContractCall(feeDistributorConfig.name,'getPayoutOutcome',[claimId]) : null;\n      const label = `${yieldTokenConfig.name} - ${sumAssured.toFixed(4)} ${coverAssetConfig.token} - Exp. ${expiryDate}`;\n      const value = coverId;\n\n      let claimedAmount = null;\n      if (claimSubmittedEvent){\n        const claimTxReceipt = await this.getTransactionReceipt(claimSubmittedEvent.transactionHash);\n        const claimedAmountLog = claimTxReceipt ? claimTxReceipt.logs.find( log => log.address.toLowerCase() === coverAssetConfig.address.toLowerCase() ) : null;\n        claimedAmount = claimedAmountLog ? this.fixTokenDecimals(parseInt(claimedAmountLog.data,16),coverAssetConfig.decimals) : this.BNify(0);\n      }\n\n      const claimableAmount = this.fixTokenDecimals(coverDetails.sumAssured,coverAssetConfig.decimals);\n\n      const claimablePrice = matchedIncident ? this.BNify(matchedIncident.returnValues.priceBefore).times(0.9) : this.BNify(0);\n      const maxCoveredAmount = claimablePrice.gt(0) ? this.BNify(coverDetails.sumAssured).div(claimablePrice) : this.BNify(0);\n      const coveredTokenAmount = this.normalizeTokenAmount(maxCoveredAmount,coverAssetConfig.decimals);\n\n      let [\n        tokenPrice,\n        idleTokenBalance\n      ] = await Promise.all([\n        this.getTokenPrice(yieldTokenConfig.token),\n        this.getTokenBalance(yieldTokenConfig.token,account,false)\n      ]);\n\n      tokenPrice = this.fixTokenDecimals(tokenPrice,yieldTokenConfig.decimals);\n      idleTokenBalance = this.fixTokenDecimals(idleTokenBalance,yieldTokenConfig.decimals);\n      const tokenBalance = idleTokenBalance.times(tokenPrice);\n      const portfolioCoverage = tokenBalance.gt(0) ? sumAssured.div(tokenBalance).times(100).toFixed(2)+'%' : 'N/A';\n\n      // console.log('portfolioCoverage',sumAssured.toFixed(),idleTokenBalance.toFixed(),tokenPrice.toFixed(),portfolioCoverage.toFixed());\n\n      nexusMutualCoverages.push({\n        label,\n        value,\n        claimId,\n        sumAssured,\n        coverDetails,\n        claimedAmount,\n        payoutOutcome,\n        claimableAmount,\n        maxCoveredAmount,\n        yieldTokenConfig,\n        coverAssetConfig,\n        portfolioCoverage,\n        coveredTokenAmount,\n        incident: matchedIncident ? {...matchedIncident, id: incidentEvents.findIndex(x => x.date === matchedIncident.date)} : null\n      });\n    });\n\n    return nexusMutualCoverages;\n  }\n  getBatchedDepositExecutions = async (contractAddress) => {\n    const requiredNetwork = this.getRequiredNetworkId();\n    const etherscanInfo = this.getGlobalConfig(['network','providers','etherscan']);\n    if (etherscanInfo.enabled && etherscanInfo.endpoints[requiredNetwork]){\n      const etherscanApiUrl = etherscanInfo.endpoints[requiredNetwork];\n      const etherscanEndpoint = `${etherscanApiUrl}?&apikey=${etherscanInfo.key}&module=account&action=tokentx&address=${contractAddress}&sort=desc`;\n      const transactions = await this.makeCachedRequest(etherscanEndpoint,1800,true);\n      if (transactions && typeof transactions.result === 'object'){\n        return transactions.result.filter( tx => tx.from === '0x0000000000000000000000000000000000000000' && tx.to.toLowerCase() === contractAddress.toLowerCase() );\n      }\n    }\n    return null;\n  }\n  getBatchedDeposits = async (account=null,filter_by_status=null) => {\n    account = account || this.props.account;\n    if (!account){\n      return null;\n    }\n\n    const batchDepositConfig = this.getGlobalConfig(['tools','batchDeposit']);\n    if (!batchDepositConfig.enabled){\n      return null;\n    }\n\n    const cachedDataKey = `batchedDeposits_${account}_${filter_by_status}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n\n    const batchedDeposits = {};\n    const availableTokens = batchDepositConfig.props.availableTokens;\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const migrationContract = tokenConfig.migrationContract;\n      await this.props.initContract(migrationContract.name,migrationContract.address,migrationContract.abi);\n      const currBatchIndex = await this.genericContractCall(migrationContract.name,'currBatch');\n      for (let batchIndex = 0; batchIndex <= parseInt(currBatchIndex) ; batchIndex++){\n        let [\n          batchExecutions,\n          batchTotal,\n          batchRedeem,\n          batchDeposit\n        ] = await Promise.all([\n          this.getBatchedDepositExecutions(migrationContract.address),\n          this.genericContractCall(migrationContract.name,'batchTotals',[batchIndex]),\n          this.genericContractCall(migrationContract.name,'batchRedeemedTotals',[batchIndex]),\n          this.genericContractCall(migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n        ]);\n\n        console.log(`Batch #${batchIndex} - ${batchTotal} - ${batchRedeem} - ${batchDeposit}`);\n\n        let batchTotals = null;\n        let batchRedeems = null;\n        let batchDeposits = null;\n        if (batchTotal && batchTotal !== null){\n          batchTotals = this.fixTokenDecimals(batchTotal,tokenConfig.decimals);\n        }\n        if (batchDeposit !== null){\n          batchRedeem = this.fixTokenDecimals(batchRedeem,18);\n          batchDeposit = this.fixTokenDecimals(batchDeposit,tokenConfig.decimals);\n          if (batchDeposit.gt(0)){\n            batchDeposits = batchDeposit;\n\n            // Calculate redeemable idleTokens\n            batchRedeems = batchDeposit.times(batchRedeem).div(batchTotals);\n            if (batchRedeems.gt(batchRedeem)){\n              batchRedeems = batchRedeem;\n            }\n\n            const status = batchIndex < currBatchIndex && batchRedeems.gt(0) ? 'executed' : 'pending';\n\n            if (filter_by_status !== null && filter_by_status.toLowerCase() !== status){\n              return;\n            }\n\n            const lastExecution = batchExecutions && batchExecutions.length ? batchExecutions[0] : null;\n\n            batchedDeposits[token] = {\n              status,\n              batchTotals,\n              batchRedeems,\n              batchDeposits,\n              lastExecution\n            };\n          }\n        }\n      }\n    });\n\n    return this.setCachedData(cachedDataKey,batchedDeposits);\n  }\n  getETHBalance = async (walletAddr,fixDecimals=true,blockNumber='latest') => {\n    if (!walletAddr){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `ethBalance_${walletAddr}_${fixDecimals}_${blockNumber}`;\n    if (blockNumber !== 'latest'){\n      const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.BNify(cachedData).isNaN()){\n        return this.BNify(cachedData);\n      }\n    }\n\n    let tokenBalance = await this.props.web3.eth.getBalance(walletAddr);\n\n    if (tokenBalance){\n      if (fixDecimals){\n        tokenBalance = this.fixTokenDecimals(tokenBalance,18);\n      }\n\n      tokenBalance = this.BNify(tokenBalance);\n\n      // Set cached data\n      if (!tokenBalance.isNaN()){\n        if (blockNumber !== 'latest'){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,tokenBalance);\n        } else {\n          return tokenBalance;\n        }\n      }\n    }\n    return null;\n  }\n  getTokenBalance = async (contractName,walletAddr,fixDecimals=true,blockNumber='latest') => {\n    if (!walletAddr){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenBalance_${contractName}_${walletAddr}_${fixDecimals}_${blockNumber}`;\n    if (blockNumber !== 'latest'){\n      const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.BNify(cachedData).isNaN()){\n        return this.BNify(cachedData);\n      }\n    }\n\n    let [\n      tokenDecimals,\n      tokenBalance\n    ] = await Promise.all([\n      this.getTokenDecimals(contractName),\n      this.getContractBalance(contractName,walletAddr,blockNumber)\n    ]);\n\n    if (tokenBalance){\n      if (fixDecimals){\n        tokenBalance = this.fixTokenDecimals(tokenBalance,tokenDecimals);\n      }\n\n      tokenBalance = this.BNify(tokenBalance);\n\n      // Set cached data\n      if (!tokenBalance.isNaN()){\n        if (blockNumber !== 'latest'){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,tokenBalance,30);\n        } else {\n          return tokenBalance;\n        }\n      }\n    } else {\n      this.customLogError('Error on getting balance for ',contractName);\n    }\n    return null;\n  }\n  copyToClipboard = (copyText) => {\n    if (typeof copyText.select === 'function'){\n      copyText.select();\n      copyText.setSelectionRange(0, 99999); // Select\n      const res = document.execCommand(\"copy\");\n      copyText.setSelectionRange(0, 0); // Deselect\n      return res;\n    }\n    return false;\n  }\n  loadScript = (url,props,callback) => {\n    const script = document.createElement(\"script\");\n    script.src = url;\n\n    // Append props\n    if (props){\n      Object.keys(props).forEach((attr,i) => {\n        script[attr] = props[attr];\n      });\n    }\n\n    if (typeof callback === 'function'){\n      if (script.readyState) {  // only required for IE <9\n        script.onreadystatechange = function() {\n          if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n            script.onreadystatechange = null;\n            callback();\n          }\n        };\n      } else {  //Others\n        script.onload = callback;\n      }\n    }\n\n    if (!script.id || !document.getElementById(script.id)){\n      document.body.appendChild(script);\n    }\n  }\n  isValidJSON = str => {\n    try {\n      JSON.parse(str);\n    } catch (e) {\n      return false;\n    }\n    return true;\n  }\n  checkAddress = (address) => {\n    return address ? address.match(/^0x[a-fA-F0-9]{40}$/) !== null : false;\n  }\n  getTokenTotalSupply = async (contractName,blockNumber='latest') => {\n    const cachedDataKey = `totalSupply_${contractName}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const totalSupply = await this.genericContractCall(contractName, 'totalSupply', [], {}, blockNumber);\n    return this.setCachedDataWithLocalStorage(cachedDataKey,totalSupply);\n  }\n  getTokenPrice = async (contractName,blockNumber='latest') => {\n    const cachedDataKey = `tokenPrice_${contractName}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const tokenPrice = await this.genericContractCall(contractName,'tokenPrice',[],{},blockNumber);\n    return this.setCachedDataWithLocalStorage(cachedDataKey,tokenPrice,60);\n  }\n  getContractBalance = async (contractName,address,blockNumber='latest') => {\n    address = address ? address : this.props.tokenConfig.idle.address;\n    const cachedDataKey = `balanceOf_${contractName}_${address}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n    const balance = await this.genericContractCall(contractName, 'balanceOf', [address], {}, blockNumber);\n    return this.setCachedDataWithLocalStorage(cachedDataKey,balance,30);\n  }\n  getProtocolBalance = async (contractName,address) => {\n    return await this.getContractBalance(contractName,address);\n  }\n  getAprs = async (contractName) => {\n    const cachedDataKey = `getAprs_${contractName}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      // console.log('getAprs - CACHED - ',cachedData);\n      return typeof cachedData === 'object' ? cachedData : JSON.parse(cachedData);\n    }\n\n    contractName = contractName ? contractName : this.props.tokenConfig.idle.token;\n    const aprs = await this.genericContractCall(contractName, 'getAPRs');\n    if (aprs){\n      const result = {\n        aprs:aprs[1],\n        addresses:aprs[0]\n      };\n      return this.setCachedDataWithLocalStorage(cachedDataKey,result);\n    }\n    return null;\n  }\n  genericIdleCall = async (methodName, params = [], callParams = {}) => {\n    return await this.genericContractCall(this.props.tokenConfig.idle.token, methodName, params, callParams).catch(err => {\n      this.customLogError('Generic Idle call err:', err);\n    });\n  }\n  estimateGas = async (contractName, methodName, params = [], callParams = {}) => {\n    let contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLogError('Wrong contract name', contractName);\n      return null;\n    }\n\n    return await contract.methods[methodName](...params).estimateGas(callParams);\n  }\n  getTxReceipt = async (txHash,web3=null) => {\n    web3 = web3 || this.props.web3;\n    if (!web3 || !web3.eth){\n      return null;\n    }\n    return await (new Promise( async (resolve, reject) => {\n      web3.eth.getTransactionReceipt(txHash,(err,tx)=>{\n        if (err){\n          reject(err);\n        }\n        resolve(tx);\n      });\n    }));\n  }\n  getTxDecodedLogs = async (tx,logAddr,decodeLogs,storedTx) => {\n\n    let txReceipt = storedTx && storedTx.txReceipt ? storedTx.txReceipt : null;\n\n    if (!txReceipt){\n      txReceipt = await (new Promise( async (resolve, reject) => {\n        this.props.web3.eth.getTransactionReceipt(tx.hash,(err,tx)=>{\n          if (err){\n            reject(err);\n          }\n          resolve(tx);\n        });\n      }));\n\n    }\n\n    if (!txReceipt){\n      return null;\n    }\n\n    const internalTransfers = txReceipt.logs.filter((tx) => { return tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${logAddr}`; });\n\n    if (!internalTransfers.length){\n      return null;\n    }\n\n    try {\n      return [\n        txReceipt,\n        this.props.web3.eth.abi.decodeLog(decodeLogs,internalTransfers[0].data,internalTransfers[0].topics)\n      ];\n    } catch (error) {\n      return null;\n    }\n  }\n  blocksToSeconds = (blocks) => {\n    const blocksPerSeconds = this.BNify(this.getGlobalConfig(['network','blocksPerYear'])).div(365.2422).div(86400);\n    return this.BNify(blocks).div(blocksPerSeconds);\n  }\n  getBlockNumber = async () => {\n    if (!this.props.web3){\n      return false;\n    }\n    return await this.props.web3.eth.getBlockNumber();\n  }\n  getBlockInfo = async (blockNumber) => {\n    const cachedDataKey = `getBlockInfo_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n    const blockInfo = await this.props.web3.eth.getBlock(blockNumber);\n    return blockInfo ? this.setCachedDataWithLocalStorage(cachedDataKey,blockInfo,null) : null;\n  }\n  getContractPastEvents = async (contractName,methodName,params = {}) => {\n    if (!contractName){\n      return null;\n    }\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLogError('Wrong contract name', contractName);\n      return null;\n    }\n\n    // console.log('getContractPastEvents',contractName,methodName);\n\n    return await contract.getPastEvents(methodName, params);\n  }\n\n  genericContractCallCached = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest', TTL=180) => {\n    const cachedDataKey = `genericContractCall_${contractName}_${methodName}_${JSON.stringify(params)}_${JSON.stringify(callParams)}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    // Store forever for past block\n    if (blockNumber !== 'latest'){\n      TTL = null;\n    }\n\n    const result = await this.genericContractCall(contractName, methodName, params, callParams, blockNumber);\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey,result,TTL);\n  }\n\n  cachedContractCall = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest', TTL=180) => {\n    return await this.genericContractCallCached(contractName, methodName, params, callParams, blockNumber, TTL);\n  }\n\n  genericContractCall = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest', count=0) => {\n\n    if (!contractName){\n      return null;\n    }\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLog('Wrong contract name', contractName);\n      return null;\n    }\n\n    if (!contract.methods[methodName]) {\n      this.customLog('Wrong method name', methodName);\n      return null;\n    }\n\n    blockNumber = blockNumber !== 'latest' && blockNumber && !isNaN(blockNumber) ? parseInt(blockNumber) : blockNumber;\n\n    try{\n      // console.log(`genericContractCall - ${contractName} - ${methodName} - [${params.join(',')}]`);\n      const value = await contract.methods[methodName](...params).call(callParams,blockNumber).catch(error => {\n        this.customLog(`${contractName} contract method ${methodName} error: `, error);\n      });\n      // if (!value){\n      //   console.log('genericContractCall - NULL - ',contractName,methodName,params);\n      // }\n      // console.log(`${moment().format('HH:mm:ss')} - genericContractCall (${blockNumber}) - ${contractName} - ${methodName} (${JSON.stringify(params)}) : ${value}`);\n      return value;\n    } catch (error) {\n      // console.log('genericContractCall ERROR - ',contractName,methodName,params);\n      this.customLog(\"genericContractCall error\", error);\n      // if (count<=3){\n      //   await this.asyncTimeout(1000);\n      //   return await this.genericContractCall(contractName, methodName, params, callParams, blockNumber, count+1);\n      // }\n    }\n  }\n  asyncForEach = async (array, callback, async=true) => {\n    let output = [];\n    if (async){\n      output = await Promise.all(array.map( (c,index) => {\n        return callback(c, index, array);\n      }));\n    } else {\n      for (let index = 0; index < array.length; index++) {\n        output.push(await callback(array[index], index, array));\n      }\n    }\n    return output;\n  }\n  apr2apy = (apr) => {\n    return (this.BNify(1).plus(this.BNify(apr).div(365))).pow(365).minus(1);\n  }\n  getUnlentBalance = async (tokenConfig) => {\n    let unlentBalance = await this.getProtocolBalance(tokenConfig.token,tokenConfig.idle.address);\n    if (unlentBalance){\n      unlentBalance = this.fixTokenDecimals(unlentBalance,tokenConfig.decimals);\n    }\n    return unlentBalance;\n  }\n  getTokenPool = async (tokenConfig,addGovTokens=true) => {\n    // Check for cached data\n    const cachedDataKey = `tokenPool_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN() ) {\n      return this.BNify(cachedData);\n    }\n\n    const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,addGovTokens);\n    if (tokenAllocation && tokenAllocation.totalAllocationWithUnlent){\n      const tokenPool = tokenAllocation.totalAllocationWithUnlent;\n      if (!this.BNify(tokenPool).isNaN()){\n        return this.setCachedDataWithLocalStorage(cachedDataKey,tokenPool);\n      }\n    }\n\n    return null;\n  }\n  getLastAllocations = async (tokenConfig) => {\n    if (!tokenConfig.idle){\n      return false;\n    }\n\n    const aprs = await this.getAprs(tokenConfig.idle.token);\n    const allAvailableTokens = aprs ? aprs.addresses : null;\n    if (allAvailableTokens){\n      const tokenAllocations = await this.asyncForEach(allAvailableTokens, async (protocolAddr,index) => {\n        return await this.genericContractCall(tokenConfig.idle.token, 'lastAllocations',[index]);\n      });\n      return allAvailableTokens.reduce( (lastAllocations,protocolAddr,index) => {\n        lastAllocations[protocolAddr.toLowerCase()] = tokenAllocations[index];\n        return lastAllocations;\n      },{});\n    }\n\n    return {};\n  }\n  getTokenAllocation = async (tokenConfig,protocolsAprs=false,addGovTokens=true) => {\n    \n    if (!tokenConfig.idle){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenAllocation_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n\n    const tokenAllocation = {\n      avgApr: null,\n      unlentBalance:null,\n      totalAllocation:null,\n      protocolsAllocations:null,\n      protocolsAllocationsPerc:null,\n      totalAllocationConverted:null,\n      totalAllocationWithUnlent:null,\n      totalAllocationWithUnlentConverted:null,\n    };\n\n    const protocolsAllocations = {};\n    const protocolsAllocationsPerc = {};\n\n    let [\n      unlentBalance,\n      tokenPrice,\n      lastAllocations,\n      tokenUsdConversionRate,\n      totalSupply,\n      govTokensBalances,\n    ] = await Promise.all([\n      this.getUnlentBalance(tokenConfig),\n      this.getIdleTokenPrice(tokenConfig),\n      this.getLastAllocations(tokenConfig),\n      this.getTokenConversionRate(tokenConfig,false),\n      this.getIdleTokenSupply(tokenConfig.idle.token),\n      addGovTokens ? this.getGovTokensBalances(tokenConfig.idle.address) : null,\n    ]);\n\n    const totalAllocation = this.fixTokenDecimals(totalSupply,18).times(tokenPrice).minus(unlentBalance);\n\n    if (lastAllocations){\n      Object.keys(lastAllocations).forEach( (protocolAddr) => {\n        const protocolInfo = tokenConfig.protocols.find( p => p.address.toLowerCase() === protocolAddr.toLowerCase() );\n        if (protocolInfo && protocolInfo.enabled){\n          const protocolAllocationPerc = this.BNify(lastAllocations[protocolAddr]).div(100000);\n          const protocolAllocation = totalAllocation.times(protocolAllocationPerc);\n          protocolsAllocations[protocolAddr.toLowerCase()] = protocolAllocation;\n          protocolsAllocationsPerc[protocolAddr.toLowerCase()] = protocolAllocationPerc;\n        }\n      });\n    }\n\n    tokenAllocation.unlentBalance = this.BNify(0);\n    tokenAllocation.totalAllocationWithUnlent = totalAllocation;\n\n    if (unlentBalance){\n      tokenAllocation.unlentBalance = unlentBalance;\n      tokenAllocation.totalAllocationWithUnlent = tokenAllocation.totalAllocationWithUnlent.plus(unlentBalance);\n    }\n\n    tokenAllocation.totalAllocation = totalAllocation;\n    tokenAllocation.protocolsAllocations = protocolsAllocations;\n    tokenAllocation.protocolsAllocationsPerc = protocolsAllocationsPerc;\n\n    // Sum gov tokens balances\n    if (govTokensBalances && govTokensBalances.total){\n      if (tokenUsdConversionRate){\n        govTokensBalances.total = govTokensBalances.total.div(tokenUsdConversionRate);\n      }\n\n      // add gov token balance to total allocation\n      tokenAllocation.totalAllocationWithUnlent = tokenAllocation.totalAllocationWithUnlent.plus(govTokensBalances.total);\n    }\n\n    tokenAllocation.totalAllocationConverted = tokenAllocation.totalAllocation;\n    tokenAllocation.totalAllocationWithUnlentConverted = tokenAllocation.totalAllocationWithUnlent;\n\n    if (tokenUsdConversionRate){\n      tokenAllocation.totalAllocationConverted = tokenAllocation.totalAllocationConverted.times(tokenUsdConversionRate);\n      tokenAllocation.totalAllocationWithUnlentConverted = tokenAllocation.totalAllocationWithUnlentConverted.times(tokenUsdConversionRate);\n    }\n\n    if (protocolsAprs){\n      tokenAllocation.avgApr = this.getAvgApr(protocolsAprs,protocolsAllocations,totalAllocation);\n    }\n\n    // console.log('getTokenAllocation',tokenConfig.idle.token,totalSupply ? totalSupply.toFixed(8) : null,tokenPrice ? tokenPrice.toFixed(8) : null,unlentBalance ? unlentBalance.toFixed(8) : null,tokenAllocation);\n\n    // console.log('Allocations for '+tokenConfig.idle.token+' loaded in '+((Date.now()-start)/1000).toFixed(2)+'s');\n\n    return this.setCachedData(cachedDataKey,tokenAllocation);\n  }\n  getSushiswapPoolTokenPrice = async (contractName) => {\n    const [\n      token0_address,\n      token1_address,\n      poolReserves,\n      totalSupply\n    ] = await Promise.all([\n      this.genericContractCallCached(contractName,'token0'),\n      this.genericContractCallCached(contractName,'token1'),\n      this.genericContractCallCached(contractName,'getReserves'),\n      this.getTokenTotalSupply(contractName)\n    ]);\n\n    if (token0_address && token1_address && poolReserves && totalSupply){\n      const token0_config = {\n        address:token0_address\n      };\n      const token1_config = {\n        address:token1_address\n      };\n      const DAITokenConfig = {\n        address:this.getContractByName('DAI')._address\n      };\n\n      let [\n        token0_price,\n        token1_price\n      ] = await Promise.all([\n        this.getSushiswapConversionRate(DAITokenConfig,token0_config),\n        this.getSushiswapConversionRate(DAITokenConfig,token1_config)\n      ]);\n\n      if (token0_price && token1_price){\n        // token0_price = this.BNify(1).div(this.BNify(token0_price));\n        // token1_price = this.BNify(1).div(this.BNify(token1_price));\n\n        const token0_pool = token0_price.times(this.fixTokenDecimals(poolReserves[0],18));\n        const token1_pool = token1_price.times(this.fixTokenDecimals(poolReserves[1],18));\n\n        const totalPoolSize = token0_pool.plus(token1_pool);\n        const poolTokenPrice = totalPoolSize.div(this.fixTokenDecimals(totalSupply,18));\n\n        // console.log(parseFloat(token0_price),parseFloat(token1_price),parseFloat(poolTokenPrice));\n\n        return poolTokenPrice;\n      }\n    }\n\n    return null;\n  }\n  getSushiswapConversionRate = async (tokenConfigFrom,tokenConfigDest) => {\n\n    // Check for cached data\n    const cachedDataKey = `sushiswapConversionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    try {\n      const WETHAddr = this.getContractByName('WETH')._address;\n      const one = this.normalizeTokenDecimals(18);\n\n      const path = [];\n      path.push(tokenConfigFrom.address);\n\n      // Don't pass through weth if i'm converting weth\n      if (WETHAddr.toLowerCase() !== tokenConfigFrom.address.toLowerCase() && WETHAddr.toLowerCase() !== tokenConfigDest.address.toLowerCase()){\n        path.push(WETHAddr);\n      }\n      path.push(tokenConfigDest.address);\n\n      const res = await this.genericContractCall('SushiswapRouter','getAmountsIn',[one.toFixed(),path]);\n\n      // console.log('getSushiswapConversionRate',path,res);\n\n      if (res){\n        const price = this.BNify(res[0]).div(one);\n        return this.setCachedDataWithLocalStorage(cachedDataKey,price);\n      }\n      return null;\n    } catch (error) {\n      return null;\n    }\n  }\n  getUniswapConversionRate = async (tokenConfigFrom,tokenConfigDest) => {\n\n    if (tokenConfigDest.addressForPrice){\n      tokenConfigDest = Object.assign({},tokenConfigDest);\n      tokenConfigDest.address = tokenConfigDest.addressForPrice;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `uniswapConversionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    // console.log('getUniswapConversionRate - CACHED',cachedDataKey,cachedData);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    try {\n      const WETHAddr = this.getContractByName('WETH')._address;\n      const one = this.normalizeTokenDecimals(18);\n\n      const path = [];\n      path.push(tokenConfigFrom.address);\n      // Don't pass through weth if i'm converting weth\n      if (WETHAddr.toLowerCase() !== tokenConfigFrom.address.toLowerCase() && WETHAddr.toLowerCase() !== tokenConfigDest.address.toLowerCase()){\n        path.push(WETHAddr);\n      }\n      path.push(tokenConfigDest.address);\n\n      const unires = await this.genericContractCall('UniswapRouter','getAmountsIn',[one.toFixed(),path]);\n\n      // console.log('getUniswapConversionRate',path,unires);\n      \n      if (unires){\n        const price = this.BNify(unires[0]).div(one);\n        return this.setCachedDataWithLocalStorage(cachedDataKey,price);\n      }\n      return null;\n    } catch (error) {\n      return null;\n    }\n  }\n  /*\n  getUniswapConversionRate_old = async (tokenConfigFrom,tokenConfigDest) => {\n    const cachedDataKey = `compUniswapConverstionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n\n    const tokenFrom = new Token(ChainId.MAINNET, tokenConfigFrom.address, tokenConfigFrom.decimals);\n    const tokenTo = new Token(ChainId.MAINNET, tokenConfigDest.address, tokenConfigDest.decimals);\n\n    const pair = await Fetcher.fetchPairData(tokenFrom, tokenTo);\n    const route = new Route([pair], tokenTo);\n\n    let output = null;\n    if (route && route.midPrice){\n      output = this.BNify(route.midPrice.toSignificant(tokenConfigDest.decimals));\n      this.setCachedData(cachedDataKey,output);\n    }\n    return output;\n  }\n  */\n  getCurveDepositedTokens = async (account,enabledTokens=[]) => {\n    account = account ? account : this.props.account;\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    if (!account || !enabledTokens || !enabledTokens.length){\n      return [];\n    }\n\n    const curveTxs = await this.getCurveTxs(account,0,'latest',enabledTokens);\n\n    const idleTokensBalances = {};\n    let remainingCurveTokens = this.BNify(0);\n\n    // this.customLog('getCurveDepositedTokens',curveTxs);\n\n    curveTxs.forEach( tx => {\n\n      const idleToken = tx.idleToken;\n      const idleTokens = this.BNify(tx.idleTokens);\n\n      if (!idleTokensBalances[idleToken]){\n        idleTokensBalances[idleToken] = this.BNify(0);\n      }\n\n      switch (tx.action){\n        case 'CurveIn':\n        case 'CurveZapIn':\n          idleTokensBalances[idleToken] = idleTokensBalances[idleToken].plus(idleTokens);\n        break;\n        case 'CurveOut':\n        case 'CurveZapOut':\n          if (idleTokens.gt(idleTokensBalances[idleToken])){\n            remainingCurveTokens = remainingCurveTokens.plus(idleTokens.minus(idleTokensBalances[idleToken]));\n          }\n          idleTokensBalances[idleToken] = idleTokensBalances[idleToken].minus(idleTokens);\n          if (idleTokensBalances[idleToken].lt(0)){\n            idleTokensBalances[idleToken] = this.BNify(0);\n          }\n        break;\n        default:\n        break;\n      }\n\n      // this.customLog(this.strToMoment(tx.timeStamp*1000).format('DD-MM-YYYY HH:mm:ss'),tx.blockNumber,idleToken,tx.action,idleTokens.toFixed(6),idleTokensBalances[idleToken].toFixed(6),remainingCurveTokens.toFixed(6));\n\n      // Scalo il remaining tokens\n      if (remainingCurveTokens.gt(0)){\n        Object.keys(idleTokensBalances).forEach( token => {\n          const tokenBalance = idleTokensBalances[token];\n          if (tokenBalance && tokenBalance.gt(0)){\n            if (tokenBalance.gt(remainingCurveTokens)){\n              idleTokensBalances[token] = idleTokensBalances[token].minus(remainingCurveTokens);\n            } else {\n              remainingCurveTokens = remainingCurveTokens.minus(idleTokensBalances[token]);\n              idleTokensBalances[token] = 0;\n            }\n          }\n        });\n      }\n    });\n\n    // this.customLog('idleTokensBalances',idleTokensBalances);\n  }\n  getCurveUnevenTokenAmounts = async (amounts,max_burn_amount) => {\n    const curveSwapContract = await this.getCurveDepositContract();\n    if (curveSwapContract){\n      const unevenAmounts = await this.genericContractCall(curveSwapContract.name, 'remove_liquidity_imbalance', [amounts, max_burn_amount]);\n      // this.customLog('getCurveUnevenTokenAmounts',amounts,max_burn_amount,unevenAmounts);\n      return unevenAmounts;\n    }\n    return null;\n  }\n  getCurveAPY = async () => {\n\n    // Check for cached data\n    const cachedDataKey = `getCurveAPY`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const curveRatesInfo = this.getGlobalConfig(['curve','rates']);\n    if (curveRatesInfo){\n      const results = await this.makeRequest(curveRatesInfo.endpoint);\n      if (results && results.data){\n        const path = Object.values(curveRatesInfo.path);\n        let curveApy = this.getArrayPath(path,results.data);\n        if (curveApy){\n          curveApy = this.BNify(curveApy).times(100);\n          if (!this.BNify(curveApy).isNaN()){\n            return this.setCachedDataWithLocalStorage(cachedDataKey,curveApy);\n          }\n        }\n      }\n    }\n    return null;\n  }\n  getCurveAvailableTokens = () => {\n    if (!this.props.availableStrategies){\n      return false;\n    }\n    const curveTokens = this.getGlobalConfig(['curve','availableTokens']);\n    const strategyTokens = this.props.availableStrategies['best'];\n    const availableTokens = Object.keys(strategyTokens).reduce( (availableTokens,token) => {\n      const tokenConfig = strategyTokens[token];\n      if (Object.keys(curveTokens).includes(tokenConfig.idle.token) && curveTokens[tokenConfig.idle.token].enabled){\n        availableTokens[token] = tokenConfig;\n      }\n      return availableTokens;\n    },{});\n\n    return availableTokens;\n  }\n  getCurveAPYContract = async () => {\n    const curveSwapContract = await this.getCurveDepositContract();\n    if (curveSwapContract){\n      const blockNumber = await this.getBlockNumber();\n      if (blockNumber){\n        const blocksForPrevTokenPrice = 10;\n        let [tokenPrice,prevTokenPrice] = await Promise.all([\n          this.genericContractCall(curveSwapContract.name,'get_virtual_price'),\n          this.genericContractCallCached(curveSwapContract.name,'get_virtual_price',[],{},blockNumber-blocksForPrevTokenPrice)\n        ]);\n\n        if (tokenPrice && prevTokenPrice){\n\n          const blocksMultiplier = this.BNify(this.getGlobalConfig(['network','blocksPerYear'])).div(blocksForPrevTokenPrice);\n          const curveAPR = this.BNify(tokenPrice).div(prevTokenPrice).minus(1).times(blocksMultiplier);\n          return this.apr2apy(curveAPR).times(100);\n        }\n      }\n    }\n    return null;\n  }\n  getCurveTokenSupply = async () => {\n    const curvePoolContract = await this.getCurvePoolContract();\n    if (curvePoolContract){\n      return await this.getTokenTotalSupply(curvePoolContract.name);\n    }\n    return null;\n  }\n  getCurveTokenBalance = async (account=null,fixDecimals=true) => {\n    const curvePoolContract = await this.getCurvePoolContract();\n    if (curvePoolContract){\n      account = account ? account : this.props.account;\n      return await this.getTokenBalance(curvePoolContract.name,account,fixDecimals);\n    }\n    return null;\n  }\n  getCurveTokenPrice = async (blockNumber='latest',fixDecimals=true) => {\n    const migrationContract = await this.getCurveDepositContract();\n    let curveTokenPrice = await this.genericContractCallCached(migrationContract.name,'get_virtual_price',[],{},blockNumber);\n    if (curveTokenPrice){\n      curveTokenPrice = this.BNify(curveTokenPrice);\n      if (fixDecimals){\n        const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n        curveTokenPrice = this.fixTokenDecimals(curveTokenPrice,curvePoolContract.decimals);\n      }\n      return curveTokenPrice;\n    }\n    return null;\n  }\n  getCurveRedeemableIdleTokens = async (account) => {\n    let [curveTokenPrice,curveTokenBalance] = await Promise.all([\n      this.getCurveTokenPrice('latest'),\n      this.getCurveTokenBalance(account),\n    ]);\n    if (curveTokenBalance && curveTokenPrice){\n      return this.BNify(curveTokenBalance).times(curveTokenPrice);\n    }\n    return null;\n  }\n  getCurveDepositContract = async () => {\n    const depositContractInfo = this.getGlobalConfig(['curve','depositContract']);\n    if (depositContractInfo){\n      let curveDepositContract = this.getContractByName(depositContractInfo.name);\n      if (!curveDepositContract && depositContractInfo.abi){\n        curveDepositContract = await this.props.initContract(depositContractInfo.name,depositContractInfo.address,depositContractInfo.abi);\n      }\n    }\n    return depositContractInfo;\n  }\n  getCurveZapContract = async () => {\n    const zapContractInfo = this.getGlobalConfig(['curve','zapContract']);\n    if (zapContractInfo){\n      let curveZapContract = this.getContractByName(zapContractInfo.name);\n      if (!curveZapContract && zapContractInfo.abi){\n        curveZapContract = await this.props.initContract(zapContractInfo.name,zapContractInfo.address,zapContractInfo.abi);\n      }\n    }\n    return zapContractInfo;\n  }\n  getCurvePoolContract = async () => {\n    const poolContractInfo = this.getGlobalConfig(['curve','poolContract']);\n    if (poolContractInfo){\n      let curvePoolContract = this.getContractByName(poolContractInfo.name);\n      if (!curvePoolContract && poolContractInfo.abi){\n        curvePoolContract = await this.props.initContract(poolContractInfo.name,poolContractInfo.address,poolContractInfo.abi);\n      }\n    }\n    return poolContractInfo;\n  }\n  getCurveSwapContract = async () => {\n    const migrationContractInfo = this.getGlobalConfig(['curve','migrationContract']);\n    if (migrationContractInfo){\n      let migrationContract = this.getContractByName(migrationContractInfo.name);\n      if (!migrationContract && migrationContractInfo.abi){\n        migrationContract = await this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi);\n      }\n    }\n    return migrationContractInfo;\n  }\n  getCurveIdleTokensAmounts = async (account=null,curveTokenBalance=null,max_slippage=null) => {\n    if (!account && this.props.account){\n      account = this.props.account;\n    }\n\n    if (!account){\n      return null;\n    }\n\n    const tokensBalances = {};\n    const curveSwapContract = await this.getCurveSwapContract();\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n\n    const curveTokenSupply = await this.getCurveTokenSupply();\n    if (!curveTokenBalance){\n      curveTokenBalance = await this.getCurveTokenBalance(account,false);\n    }\n\n    if (curveTokenBalance && curveTokenSupply){\n      const curveTokenShare = this.BNify(curveTokenBalance).div(this.BNify(curveTokenSupply));\n      const n_coins = Object.keys(curveAvailableTokens).length;\n\n      if (max_slippage){\n        max_slippage = this.BNify(max_slippage).div(n_coins);\n      }\n\n      // this.customLog('curveTokenShare',this.BNify(curveTokenBalance).toString(),this.BNify(curveTokenSupply).toString(),curveTokenShare.toString());\n\n      await this.asyncForEach(Object.keys(curveAvailableTokens), async (token) => {\n        const curveTokenConfig = curveAvailableTokens[token];\n        const coinIndex = curveTokenConfig.migrationParams.coinIndex;\n        const curveIdleTokens = await this.genericContractCall(curveSwapContract.name,'balances',[coinIndex]);\n        if (curveIdleTokens){\n          let idleTokenBalance = this.BNify(curveIdleTokens).times(curveTokenShare);\n          if (max_slippage){\n            // this.customLog('getCurveIdleTokensAmounts',idleTokenBalance.toFixed());\n            idleTokenBalance = idleTokenBalance.minus(idleTokenBalance.times(max_slippage));\n          }\n          tokensBalances[coinIndex] = this.integerValue(idleTokenBalance);\n        }\n      });\n    }\n\n    return Object.values(tokensBalances);\n  }\n\n  // Get amounts of underlying tokens in the curve pool\n  getCurveTokensAmounts = async (account=null,curveTokenBalance=null,fixDecimals=false,useCoinIndex=false) => {\n\n    if (!account && this.props.account){\n      account = this.props.account;\n    }\n\n    if (!account){\n      return null;\n    }\n\n    const tokensBalances = {};\n    const availableTokens = this.getCurveAvailableTokens();\n    const curveSwapContract = await this.getCurveSwapContract();\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n\n    const curveTokenSupply = await this.getCurveTokenSupply();\n    if (!curveTokenBalance){\n      curveTokenBalance = await this.getCurveTokenBalance(account,false);\n    }\n\n    if (curveTokenBalance && curveTokenSupply){\n      const curveTokenShare = this.BNify(curveTokenBalance).div(this.BNify(curveTokenSupply));\n\n      await this.asyncForEach(Object.keys(curveAvailableTokens), async (token) => {\n        const curveTokenConfig = curveAvailableTokens[token];\n        const coinIndex = curveTokenConfig.migrationParams.coinIndex;\n        const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n        const [\n          idleTokenPrice,\n          idleTokenBalance\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.genericContractCall(curveSwapContract.name,'balances',[coinIndex]),\n        ]);\n\n        const totalTokenSupply = this.BNify(idleTokenBalance).times(this.BNify(idleTokenPrice));\n        let tokenBalance = totalTokenSupply.times(curveTokenShare);\n        if (fixDecimals){\n          tokenBalance = this.fixTokenDecimals(tokenBalance,18);\n        }\n\n        tokensBalances[curveTokenConfig.baseToken] = useCoinIndex ? this.integerValue(tokenBalance) : tokenBalance;\n      });\n    }\n\n    return useCoinIndex ? Object.values(tokensBalances) : tokensBalances;\n  }\n\n  // Compile amounts array for Curve\n  getCurveAmounts = async (token,amount,deposit=false) => {\n    const amounts = {};\n    const availableTokens = this.getCurveAvailableTokens();\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n\n    await this.asyncForEach(Object.keys(curveAvailableTokens), async (idleToken) => {\n      const curveTokenConfig = curveAvailableTokens[idleToken];\n      const migrationParams = curveTokenConfig.migrationParams;\n      const coinIndex = migrationParams.coinIndex;\n      if (idleToken === token && parseFloat(amount)>0){\n        const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n        amount = this.fixTokenDecimals(amount,18);\n        if (!deposit){\n          const idleTokenPrice = await this.getIdleTokenPrice(tokenConfig);\n          amount = amount.div(idleTokenPrice);\n        }\n        amount = this.normalizeTokenAmount(amount,curveTokenConfig.decimals);\n        amounts[coinIndex] = amount;\n      } else {\n        amounts[coinIndex] = 0;\n      }\n    });\n\n    return Object.values(amounts);\n  }\n  getCurveTokenAmount = async (amounts,deposit=true) => {\n    const migrationContract = await this.getCurveSwapContract();\n    if (migrationContract){\n      return await this.genericContractCall(migrationContract.name,'calc_token_amount',[amounts,deposit]);\n    }\n    return null;\n  }\n  getCurveSlippage = async (token,amount,deposit=true,uneven_amounts=null) => {\n    let slippage = null;\n    const depositContract = await this.getCurveDepositContract();\n    if (depositContract){\n\n      const n_coins = this.getGlobalConfig(['curve','params','n_coins']);\n\n      amount = this.BNify(amount)\n      if (!amount || amount.isNaN() || amount.lte(0)){\n        return null;\n      }\n\n      let amounts = uneven_amounts;\n      if (!amounts || amounts.length !== n_coins){\n        amounts = await this.getCurveAmounts(token,amount);\n      }\n\n      let [\n        virtualPrice,\n        tokenAmount\n      ] = await Promise.all([\n        this.genericContractCall(depositContract.name,'get_virtual_price'),\n        this.genericContractCall(depositContract.name,'calc_token_amount',[amounts,deposit]),\n      ]);\n\n      if (virtualPrice && tokenAmount){\n        amount = this.fixTokenDecimals(amount,18);\n        virtualPrice = this.fixTokenDecimals(virtualPrice,18);\n        tokenAmount = this.fixTokenDecimals(tokenAmount,18);\n        const Sv = tokenAmount.times(virtualPrice);\n\n        // Handle redeem in uneven amounts (Slippage 0%)\n        if (uneven_amounts && !deposit){\n          amount = amount.times(virtualPrice);\n        }\n\n        if (deposit){\n          slippage = Sv.div(amount).minus(1).times(-1);\n        } else {\n          slippage = amount.div(Sv).minus(1).times(-1);\n        }\n\n        // console.log('getCurveSlippage',token,deposit,amounts,tokenAmount.toFixed(6),virtualPrice.toFixed(6),Sv.toFixed(6),amount.toFixed(6),slippage.toFixed(6));\n\n        return slippage;\n      }\n    }\n    return null;\n  }\n  getStkAaveDistribution = async (tokenConfig,aTokenIdleSupply=null,annualize=true) => {\n\n    const cachedDataKey = `getStkAaveDistribution_${tokenConfig.idle.token}_${aTokenIdleSupply}_${annualize}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const currentNetworkId = this.getRequiredNetworkId();\n\n    let aaveDistribution = this.BNify(0);\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens','stkAAVE']);\n    const aTokenConfig = tokenConfig.protocols.find( p => p.name === stkAAVETokenConfig.protocol );\n\n    // console.log('getStkAaveDistribution_1',tokenConfig.idle.token,aTokenConfig.token);\n    const disabledTokens = this.getArrayPath(['disabledTokens',currentNetworkId],stkAAVETokenConfig) || [];\n\n    if (!aTokenConfig || disabledTokens.includes(tokenConfig.idle.token)){\n      return aaveDistribution;\n    }\n\n    const aaveIncentivesController_address = await this.genericContractCall(aTokenConfig.token,'getIncentivesController');\n\n    if (!aaveIncentivesController_address){\n      return aaveDistribution;\n    }\n\n    const IAaveIncentivesController_name = `IAaveIncentivesController_${aaveIncentivesController_address}`;\n    await this.props.initContract(IAaveIncentivesController_name,aaveIncentivesController_address,IAaveIncentivesController);\n\n    let [\n      aTokenTotalSupply,\n      tokenAllocation,\n      assetData,\n    ] = await Promise.all([\n      this.getTokenTotalSupply(aTokenConfig.token),\n      this.getTokenAllocation(tokenConfig,false,false),\n      this.genericContractCall(IAaveIncentivesController_name,'assets',[aTokenConfig.address]),\n    ]);\n\n    // console.log('getStkAaveDistribution',IAaveIncentivesController_name,aTokenConfig.address,assetData);\n\n    if (assetData && tokenAllocation){\n\n      const aaveAllocationPerc = tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()];\n\n      if (aaveAllocationPerc && aaveAllocationPerc.gte(0.001)){\n        if (!aTokenIdleSupply){\n          aTokenIdleSupply = await this.genericContractCall(aTokenConfig.token,'balanceOf',[tokenConfig.idle.address]);\n        }\n\n        const aaveSpeed = this.BNify(assetData.emissionPerSecond);\n        aTokenIdleSupply = this.BNify(aTokenIdleSupply);\n        aTokenTotalSupply = this.BNify(aTokenTotalSupply);\n        const secondsPerYear = this.getGlobalConfig(['network','secondsPerYear']);\n\n        const aavePoolShare = aTokenIdleSupply.div(aTokenTotalSupply);\n        aaveDistribution = aaveSpeed.times(aavePoolShare);\n\n        if (annualize){\n          aaveDistribution = aaveDistribution.div(1e18).times(secondsPerYear);\n        }\n\n        if (!this.BNify(aaveDistribution).isNaN()){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,aaveDistribution);\n        }\n      }\n    }\n\n    return aaveDistribution;\n  }\n  getStkAaveUserDistribution = async (account=null,availableTokens=null) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens){\n      return false;\n    }\n\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens','stkAAVE']);\n\n    let output = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const aTokenInfo = tokenConfig.protocols.find( p => (p.name === stkAAVETokenConfig.protocol) );\n      if (aTokenInfo){\n        const [\n          userPoolShare,\n          aaveDistribution,\n        ] = await Promise.all([\n          this.getUserPoolShare(account,tokenConfig,false),\n          this.getStkAaveDistribution(tokenConfig,null,false),\n        ]);\n\n        if (aaveDistribution && userPoolShare && !this.BNify(aaveDistribution).isNaN() && !this.BNify(userPoolShare).isNaN() ){\n          output = output.plus(aaveDistribution.times(userPoolShare));\n        }\n      }\n    });\n\n    return output;\n  }\n  getWMaticApr = async (token,tokenConfig,maticConversionRate=null) => {\n    const wMaticTokenConfig = this.getGlobalConfig(['govTokens','WMATIC']);\n    if (!wMaticTokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getWMaticApr_${tokenConfig.idle.token}_${maticConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let wMaticApr = this.BNify(0);\n    const distributionSpeed = await this.getStkAaveDistribution(tokenConfig);\n\n    if (distributionSpeed && this.BNify(distributionSpeed).gt(0)){\n\n      // Get COMP conversion rate\n      if (!maticConversionRate){\n        const DAITokenConfig = {\n          address:this.getContractByName('DAI')._address\n        };\n        try {\n          const destTokenConfig = {\n            address:wMaticTokenConfig.addressForPrice || wMaticTokenConfig.address\n          };\n          maticConversionRate = await this.getUniswapConversionRate(DAITokenConfig,destTokenConfig);\n        } catch (error) {\n\n        }\n        if (!maticConversionRate || maticConversionRate.isNaN()){\n          maticConversionRate = this.BNify(1);\n        }\n      }\n\n      const wMaticValue = this.BNify(maticConversionRate).times(distributionSpeed);\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,false);\n\n      // console.log('wMaticApr',tokenConfig.idle.token,distributionSpeed.toFixed(),this.BNify(maticConversionRate).toFixed(),tokenAllocation);\n\n      if (tokenAllocation){\n        wMaticApr = wMaticValue.div(tokenAllocation.totalAllocationConverted).times(100);\n\n        // console.log('wMaticApr',tokenConfig.idle.token,distributionSpeed.toFixed(),this.BNify(maticConversionRate).toFixed(),wMaticValue.toFixed(),tokenAllocation.totalAllocationConverted.toFixed(),wMaticApr.toFixed());\n\n        if (!this.BNify(wMaticApr).isNaN()){\n          this.setCachedDataWithLocalStorage(cachedDataKey,wMaticApr);\n        }\n      }\n    }\n\n    return wMaticApr;\n  }\n  getStkAaveApr = async (token,tokenConfig,aaveConversionRate=null) => {\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens','stkAAVE']);\n    if (!stkAAVETokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getStkAaveApr_${tokenConfig.idle.token}_${aaveConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let stkAaveAPR = this.BNify(0);\n    const aaveDistribution = await this.getStkAaveDistribution(tokenConfig);\n\n    if (aaveDistribution && this.BNify(aaveDistribution).gt(0)){\n\n      // Get COMP conversion rate\n      if (!aaveConversionRate){\n        const DAITokenConfig = {\n          address:this.getContractByName('DAI')._address\n        };\n        try {\n          const destTokenConfig = {\n            address:stkAAVETokenConfig.addressForPrice || stkAAVETokenConfig.address\n          };\n          aaveConversionRate = await this.getUniswapConversionRate(DAITokenConfig,destTokenConfig);\n        } catch (error) {\n\n        }\n        if (!aaveConversionRate || aaveConversionRate.isNaN()){\n          aaveConversionRate = this.BNify(1);\n        }\n      }\n\n      const stkAaveValue = this.BNify(aaveConversionRate).times(aaveDistribution);\n\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,false);\n\n      if (tokenAllocation){\n        stkAaveAPR = stkAaveValue.div(tokenAllocation.totalAllocationConverted).times(100);\n\n        // console.log('getStkAaveApr',tokenConfig.idle.token,aaveDistribution.toFixed(),this.BNify(aaveConversionRate).toFixed(),stkAaveValue.toFixed(),tokenAllocation.totalAllocationConverted.toFixed(),stkAaveAPR.toFixed());\n\n        if (!this.BNify(stkAaveAPR).isNaN()){\n          this.setCachedDataWithLocalStorage(cachedDataKey,stkAaveAPR);\n        }\n      }\n    }\n\n    return stkAaveAPR;\n  }\n  getCompAPR = async (token,tokenConfig,cTokenIdleSupply=null,compConversionRate=null) => {\n    const COMPTokenConfig = this.getGlobalConfig(['govTokens','COMP']);\n    if (!COMPTokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getCompAPR_${tokenConfig.idle.token}_${cTokenIdleSupply}_${compConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let compAPR = this.BNify(0);\n    const compDistribution = await this.getCompDistribution(tokenConfig,cTokenIdleSupply);\n\n    if (compDistribution){\n\n      const DAITokenConfig = {\n        address:this.getContractByName('DAI')._address\n      };\n        \n      // Get COMP conversion rate\n      if (!compConversionRate){\n        try {\n          compConversionRate = await this.getUniswapConversionRate(DAITokenConfig,COMPTokenConfig);\n        } catch (error) {\n\n        }\n        if (!compConversionRate || compConversionRate.isNaN()){\n          compConversionRate = this.BNify(1);\n        }\n      }\n\n      const compValue = this.BNify(compConversionRate).times(compDistribution);\n\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,false);\n\n      console.log('getCompAPR',tokenConfig.idle.token,compConversionRate.toFixed(5),compDistribution.toFixed(5),compValue.toFixed(5),tokenAllocation.totalAllocationConverted.toFixed(5));\n\n      if (tokenAllocation){\n        compAPR = compValue.div(tokenAllocation.totalAllocationConverted).times(100);\n        if (!this.BNify(compAPR).isNaN()){\n          this.setCachedDataWithLocalStorage(cachedDataKey,compAPR);\n        }\n      }\n    }\n\n    return compAPR;\n  }\n  getCompSpeed = async (cTokenAddress) => {\n    let compSpeed = await this.genericContractCallCached('Comptroller','compSupplySpeeds',[cTokenAddress]);\n    if (compSpeed){\n      return this.BNify(compSpeed);\n    }\n    return null;\n  }\n  getCompDistribution = async (tokenConfig,cTokenIdleSupply=null,annualize=true) => {\n\n    const cachedDataKey = `getCompDistribution_${tokenConfig.idle.token}_${cTokenIdleSupply}_${annualize}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const cTokenInfo = tokenConfig.protocols.find( p => (p.name === 'compound') );\n    if (cTokenInfo){\n\n      // Get IdleToken allocation in compound\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,false);\n      const compoundAllocationPerc = tokenAllocation.protocolsAllocationsPerc[cTokenInfo.address.toLowerCase()];\n\n      // Calculate distribution if compound allocation >= 0.1%\n      if (compoundAllocationPerc && compoundAllocationPerc.gte(0.001)){\n\n        // Get COMP distribution speed and Total Supply\n        const [\n          compSpeed,\n          cTokenTotalSupply\n        ] = await Promise.all([\n          this.getCompSpeed(cTokenInfo.address),\n          this.getTokenTotalSupply(cTokenInfo.token)\n        ]);\n\n        if (compSpeed && cTokenTotalSupply){\n\n          // Get Idle liquidity supply\n          if (!cTokenIdleSupply){\n            cTokenIdleSupply = await this.getContractBalance(cTokenInfo.token,tokenConfig.idle.address);\n          }\n\n          if (cTokenIdleSupply){\n\n            // Get COMP distribution for Idle in a Year\n            const blocksPerYear = this.getGlobalConfig(['network','blocksPerYear']);\n\n            // Take 50% of distrubution for lenders side\n            const compoundPoolShare = this.BNify(cTokenIdleSupply).div(this.BNify(cTokenTotalSupply));\n            let compDistribution = this.BNify(compSpeed).times(compoundPoolShare);\n\n            if (annualize){\n              compDistribution = this.fixTokenDecimals(compDistribution,18).times(blocksPerYear);\n            }\n\n            if (!this.BNify(compDistribution).isNaN()){\n              return this.setCachedDataWithLocalStorage(cachedDataKey,compDistribution);\n            }\n          }\n        }\n      }\n    }\n\n    return null;\n  }\n  getCompUserDistribution = async (account=null,availableTokens=null) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens){\n      return false;\n    }\n\n    let output = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const cTokenInfo = tokenConfig.protocols.find( p => (p.name === 'compound') );\n      if (cTokenInfo){\n        const [\n          userPoolShare,\n          compDistribution,\n        ] = await Promise.all([\n          this.getUserPoolShare(account,tokenConfig,false),\n          this.getCompDistribution(tokenConfig,null,false),\n        ]);\n\n        if (compDistribution && userPoolShare){\n          output = output.plus(compDistribution.times(userPoolShare));\n        }\n      }\n    });\n\n    return output;\n  }\n  getCompAvgApr = async (availableTokens=null) => {\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n    let output = this.BNify(0);\n    let totalAllocation = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [compApr,tokenAllocation] = await Promise.all([\n        this.getCompAPR(token,tokenConfig),\n        this.getTokenAllocation(tokenConfig,false,false)\n      ]);\n      \n      if (compApr && tokenAllocation){\n        output = output.plus(compApr.times(tokenAllocation.totalAllocation));\n        totalAllocation = totalAllocation.plus(tokenAllocation.totalAllocation);\n        // this.customLog(token,compApr.toString(),tokenAllocation.totalAllocation.toString(),output.toString(),totalAllocation.toString());\n      }\n    });\n\n    output = output.div(totalAllocation);\n\n    return output;\n  }\n  getTokensCsv = async () => {\n\n    // eslint-disable-next-line\n    Array.prototype.sum = function() {\n      return this.reduce(function(pv, cv) { return pv + cv; }, 0);\n    };\n    // eslint-disable-next-line\n    Array.prototype.max = function() {\n      return Math.max.apply(null, this);\n    };\n    // eslint-disable-next-line\n    Array.prototype.avg = function() {\n      return this.sum()/this.length;\n    };\n\n    const csv = [];\n    const availableStrategies = this.props.availableStrategies;\n    await this.asyncForEach(Object.keys(availableStrategies), async (strategy) => {\n      const availableTokens = availableStrategies[strategy];\n      const isRisk = strategy === 'risk';\n      await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n        const tokenConfig = availableTokens[token];\n        const rates = await this.getTokenApiData(tokenConfig.address,isRisk,null,null,false,7200,'ASC');\n        const header = [];\n        let protocols = null;\n        const rows = [];\n        const aprAvg = {};\n        const scoreAvg = {};\n\n        const lastRow = rates[rates.length-1];\n\n        rates.forEach( r => {\n          if (!protocols){\n            header.push('Token');\n            header.push('Date');\n\n            // Get protocols\n            protocols = [];\n            lastRow.protocolsData.forEach( p1 => {\n              const foundProtocol = tokenConfig.protocols.find( p2 => ( p2.address.toLowerCase() === p1.protocolAddr.toLowerCase() ) );\n              if (foundProtocol){\n                protocols.push(foundProtocol);\n              }\n            });\n\n            // Add APR columns\n            header.push('APR Idle');\n            header.push('SCORE Idle');\n\n            aprAvg['idle'] = [];\n            scoreAvg['idle'] = [];\n\n            protocols.forEach( p => {\n              header.push('APR '+p.name);\n              header.push('SCORE '+p.name);\n\n              aprAvg[p.name] = [];\n              scoreAvg[p.name] = [];\n            });\n\n            rows.push(header.join(','));\n          }\n\n          const date = moment(r.timestamp*1000).format('YYYY-MM-DD');\n          const rate = this.BNify(r.idleRate).div(1e18).toFixed(5);\n          const score = parseFloat(r.idleScore);\n\n          const row = [];\n          row.push(`${token}-${strategy}`);\n          row.push(date);\n          row.push(rate);\n          row.push(score);\n\n          if (date>='2020-09-15'/* && date<='2020-11-09'*/){\n            aprAvg['idle'].push(parseFloat(rate));\n            scoreAvg['idle'].push(parseFloat(score));\n          }\n\n          protocols.forEach( pInfo => {\n            const pData = r.protocolsData.find( p => (p.protocolAddr.toLowerCase() === pInfo.address.toLowerCase()) );\n            let pRate = '';\n            let pScore = '';\n            if (pData){\n              pScore = !this.BNify(pData.defiScore).isNaN() ? parseFloat(pData.defiScore) : '0.00000';\n              pRate = !this.BNify(pData.rate).isNaN() ? this.BNify(pData.rate).div(1e18) : '0.00000';\n              if (typeof pData[`${pInfo.name}AdditionalAPR`] !== 'undefined'){\n                const additionalRate = this.BNify(pData[`${pInfo.name}AdditionalAPR`]).div(1e18);\n                if (!additionalRate.isNaN()){\n                  pRate = pRate.plus(additionalRate);\n                }\n              }\n\n              if (date>='2020-09-15'/* && date<='2020-11-09'*/){\n                if (!isNaN(parseFloat(pRate))){\n                  aprAvg[pInfo.name].push(parseFloat(pRate));\n                }\n                if (!isNaN(parseFloat(pScore))){\n                  scoreAvg[pInfo.name].push(parseFloat(pScore));\n                }\n              }\n            }\n\n            row.push(pRate);\n            row.push(pScore);\n          });\n\n          rows.push(row.join(','));\n        });\n\n        Object.keys(aprAvg).forEach( p => {\n          const avgRate = aprAvg[p].sum()/aprAvg[p].length;\n          this.customLog(`${token}-${strategy}-${p} - Avg Rate: ${avgRate}`);\n        });\n\n        Object.keys(scoreAvg).forEach( p => {\n          const avgScore = scoreAvg[p].sum()/scoreAvg[p].length;\n          this.customLog(`${token}-${strategy}-${p} - Avg Score: ${avgScore}`);\n        });\n\n        // if (token==='DAI' && isRisk){\n        //   debugger;\n        // }\n\n        csv.push(rows.join('\\n'));\n      });\n    });\n\n    this.customLog(csv.join('\\n'));\n  }\n  getGovTokenPool = async (govToken=null,availableTokens=null,convertToken=null) => {\n    let output = this.BNify(0);\n\n    if (!availableTokens){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const enabledTokens = govToken ? [govToken] : null;\n      const compTokenBalance = await this.getGovTokensBalances(tokenConfig.idle.address,convertToken,enabledTokens);\n      if (compTokenBalance && compTokenBalance.total){\n        output = output.plus(compTokenBalance.total);\n      }\n    });\n    return output;\n  }\n  getIdleGovToken = () => {\n    if (!this.idleGovToken){\n      this.idleGovToken = new IdleGovToken(this.props);\n    } else {\n      this.idleGovToken.setProps(this.props);\n    }\n    return this.idleGovToken;\n  }\n  getGovTokensFarming = () => {\n    const output = {};\n    const availableTokens = this.props.availableTokens;\n\n    Object.keys(availableTokens).forEach( token => {\n      const tokenGovTokens = this.getTokenGovTokens(availableTokens[token]);\n      Object.keys(tokenGovTokens).forEach( govToken => {\n        output[govToken] = tokenGovTokens[govToken];\n      });\n    });\n\n    return output;\n  }\n  getTokenGovTokens = (tokenConfig) => {\n    const output = {};\n    const currentNetworkId = this.getRequiredNetworkId();\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    Object.keys(govTokens).forEach( govToken => {\n      const govTokenConfig = govTokens[govToken];\n      const disabledTokens = this.getArrayPath(['disabledTokens',currentNetworkId],govTokenConfig) || [];\n      if (!govTokenConfig.enabled || disabledTokens.includes(tokenConfig.idle.token) || (govTokenConfig.availableNetworks && !govTokenConfig.availableNetworks.includes(currentNetworkId))){\n        return;\n      }\n\n      if (govTokenConfig.protocol === 'idle'){\n        output[govToken] = govTokenConfig;\n      } else {\n        const foundProtocol = tokenConfig.protocols.find( p => (p.enabled && p.name.toLowerCase() === govTokenConfig.protocol.toLowerCase()) )\n        if (foundProtocol){\n          output[govToken] = govTokenConfig;\n        }\n      }\n    });\n    return output;\n  }\n  fixDistributionSpeed = (speed,frequency='day',mode='block') => {\n    const blocksPerYear = this.BNify(this.getGlobalConfig(['network','blocksPerYear']));\n    const secondsPerYear = this.BNify(this.getGlobalConfig(['network','secondsPerYear']));\n    const multipliers = {\n      'day':{\n        'block':blocksPerYear.div(365.242199),\n        'second':secondsPerYear.div(365.242199)\n      },\n      'week':{\n        'block':blocksPerYear.div(52.1429),\n        'second':secondsPerYear.div(52.1429)\n      },\n      'month':{\n        'block':blocksPerYear.div(12),\n        'second':secondsPerYear.div(12)\n      },\n      'year':{\n        'block':blocksPerYear.div(1),\n        'second':secondsPerYear.div(1)\n      }\n    };\n    speed = this.BNify(speed);\n    if (speed && !speed.isNaN()){\n      return speed.times(multipliers[frequency][mode]);\n    }\n    return null;\n  }\n  getGovTokensUserDistributionSpeed = async (account,tokenConfig=null,enabledTokens=null) => {\n    const govTokensUserDistribution = {};\n    const govTokens = this.getGlobalConfig(['govTokens']);\n\n    await this.asyncForEach(Object.keys(govTokens),async (govToken) => {\n      if (enabledTokens && !enabledTokens.includes(govToken)){\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled){\n        return;\n      }\n\n      const availableTokens = {};\n      availableTokens[tokenConfig.token] = tokenConfig;\n\n      let output = null;\n      switch (govToken){\n        case 'COMP':\n          output = await this.getCompUserDistribution(account,availableTokens);\n        break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          output = await idleGovToken.getUserDistribution(account,availableTokens);\n        break;\n        default:\n        break;\n      }\n\n      if (output){\n        output = output.div(1e18);\n        if (govTokenConfig.distributionFrequency){\n          output = this.fixDistributionSpeed(output,govTokenConfig.distributionFrequency,govTokenConfig.distributionMode);\n        }\n        govTokensUserDistribution[govToken] = output;\n      }\n    });\n\n    return govTokensUserDistribution;\n  }\n  getGovTokensDistributionSpeed = async (tokenConfig,enabledTokens=null) => {\n    const govTokensDistribution = {};\n    const tokenGovTokens = this.getTokenGovTokens(tokenConfig);\n    \n    await this.asyncForEach(Object.keys(tokenGovTokens), async (govToken) => {\n      let govSpeed = null;\n      const govTokenConfig = tokenGovTokens[govToken];\n\n      switch (govToken){\n        case 'COMP':\n          govSpeed = await this.getCompDistribution(tokenConfig,null,false);\n        break;\n        case 'WMATIC':\n        case 'stkAAVE':\n          govSpeed = await this.getStkAaveDistribution(tokenConfig,null,false);\n        break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          govSpeed = await idleGovToken.getSpeed(tokenConfig.idle.address);\n        break;\n        default:\n        break;\n      }\n\n      if (govSpeed){\n        govSpeed = govSpeed.div(1e18);\n        if (govTokenConfig.distributionFrequency && govTokenConfig.distributionMode){\n          govSpeed = this.fixDistributionSpeed(govSpeed,govTokenConfig.distributionFrequency,govTokenConfig.distributionMode);\n        }\n        govTokensDistribution[govToken] = govSpeed;\n      }\n    });\n\n    return govTokensDistribution;\n  }\n  getGovTokensAprs = async (token,tokenConfig,enabledTokens=null) => {\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const govTokensAprs = {}\n\n    await this.asyncForEach(Object.keys(govTokens),async (govToken) => {\n\n      if (enabledTokens && !enabledTokens.includes(govToken)){\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled || govTokenConfig.aprTooltipMode === false){\n        return;\n      }\n\n      let output = null;\n      let tokenAllocation = null;\n\n      switch (govToken){\n        case 'WMATIC':\n        case 'stkAAVE':\n          switch (govTokenConfig.aprTooltipMode){\n            default:\n            case 'apr':\n              [output,tokenAllocation] = await Promise.all([\n                this.getStkAaveApr(token,tokenConfig),\n                this.getTokenAllocation(tokenConfig,false,false)\n              ]);\n\n              // Cut the AAVE token proportionally on Idle funds allocation in aave\n              if (tokenAllocation){\n                const aTokenConfig = tokenConfig.protocols.find( p => (p.name === govTokenConfig.protocol) );\n                if (aTokenConfig){\n                  if (tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()]){\n                    const aaveAllocationPerc = tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()];\n                    output = output.times(aaveAllocationPerc);\n                  }\n                }\n              }\n            break;\n          }\n        break;\n        case 'COMP':\n          switch (govTokenConfig.aprTooltipMode){\n            default:\n            case 'apr':\n              [output,tokenAllocation] = await Promise.all([\n                this.getCompAPR(token,tokenConfig),\n                this.getTokenAllocation(tokenConfig,false,false)\n              ]);\n\n              // Cut the COMP token proportionally on Idle funds allocation in compound\n              if (tokenAllocation){\n                const cTokenConfig = tokenConfig.protocols.find( p => (p.name === 'compound') );\n                if (cTokenConfig){\n                  if (tokenAllocation.protocolsAllocationsPerc[cTokenConfig.address.toLowerCase()]){\n                    const compoundAllocationPerc = tokenAllocation.protocolsAllocationsPerc[cTokenConfig.address.toLowerCase()];\n                    output = output.times(compoundAllocationPerc);\n                  }\n                }\n              }\n            break;\n          }\n        break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          switch (govTokenConfig.aprTooltipMode){\n            case 'apr':\n              output = await idleGovToken.getAPR(token,tokenConfig);\n            break;\n            case 'distribution':\n              output = await idleGovToken.getSpeed(tokenConfig.idle.address);\n              if (output){\n                output = this.fixTokenDecimals(output,18);\n                output = this.fixDistributionSpeed(output,govTokenConfig.distributionFrequency,govTokenConfig.distributionMode);\n              }\n            break;\n            case 'userDistribution':\n              output = await idleGovToken.getUserDistribution(tokenConfig);\n            break;\n            default:\n            break;\n          }\n        break;\n        default:\n        break;\n      }\n\n      if (output !== null && this.BNify(output).gt(0)){\n        govTokensAprs[govToken] = output;\n      }\n    });\n\n    return govTokensAprs;\n  }\n  getGovTokensBalances = async (address=null,convertToken='DAI',enabledTokens=null) => {\n    if (!address){\n      address = this.props.tokenConfig.idle.address;\n    }\n\n    const cachedDataKey = `getGovTokensBalances_${address}_${convertToken}_${JSON.stringify(enabledTokens)}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null){\n      return cachedData;\n    }\n\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const govTokensBalances = {}\n\n    await this.asyncForEach(Object.keys(govTokens),async (token) => {\n\n      if (enabledTokens && !enabledTokens.includes(token)){\n        return;\n      }\n      \n      const govTokenConfig = govTokens[token];\n\n      if (!govTokenConfig.enabled){\n        return;\n      }\n\n      const destTokenConfig = {\n        address:govTokenConfig.addressForPrice || govTokenConfig.address\n      };\n\n      // Get gov token balance\n      let govTokenBalance = await this.getProtocolBalance(token,address);\n\n      if (govTokenBalance){\n        // Get gov token conversion rate\n        let tokenConversionRate = null;\n        if (convertToken){\n          const fromTokenConfig = this.getGlobalConfig(['stats','tokens',convertToken]);\n          try {\n            tokenConversionRate = await this.getUniswapConversionRate(fromTokenConfig,destTokenConfig);\n          } catch (error) {\n            tokenConversionRate = this.BNify(0);\n          }\n        }\n\n        const tokenBalance = this.fixTokenDecimals(govTokenBalance,govTokens[token].decimals,tokenConversionRate);\n\n        // Fix token decimals and convert\n        govTokensBalances[token] = tokenBalance;\n\n        // Initialize Total gov Tokens\n        if (!govTokensBalances.total){\n          govTokensBalances.total = this.BNify(0);\n        }\n\n        // Sum Total gov Tokens\n        govTokensBalances.total = govTokensBalances.total.plus(govTokensBalances[token]);\n      }\n    });\n\n    return this.setCachedData(cachedDataKey,govTokensBalances);\n  }\n  getGovTokenConfigByAddress = (address) => {\n    if (!address){\n      return false;\n    }\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    return Object.values(govTokens).find( tokenConfig => (tokenConfig.enabled && tokenConfig.address.toLowerCase() === address.toLowerCase()) );\n  }\n  getGovTokensUserTotalBalance = async (account=null,availableTokens=null,convertToken=null,checkShowBalance=true) => {\n\n    // Check for cached data\n    const cachedDataKey = `govTokensUserTotalBalance_${account}_${availableTokens ? JSON.stringify(Object.keys(availableTokens)) : 'null'}_${convertToken}_${checkShowBalance}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const govTokensUserBalances = await this.getGovTokensUserBalances(account,availableTokens,convertToken,null,checkShowBalance);\n    if (govTokensUserBalances){\n      const govTokensEarnings = Object.values(govTokensUserBalances).reduce( (acc, govTokenAmount) => {\n        acc = acc.plus(this.BNify(govTokenAmount));\n        return acc;\n      }, this.BNify(0));\n\n      return this.setCachedDataWithLocalStorage(cachedDataKey,govTokensEarnings);\n    }\n    return this.BNify(0);\n  }\n  getGovTokensIndexes = async (account,tokenConfig) => {\n    if (!account){\n      account = this.props.account;\n    }\n    const output = {};\n    const govTokensAmounts = await this.getGovTokensUserAmounts(tokenConfig.idle.token,account);\n    if (govTokensAmounts){\n      await this.asyncForEach(govTokensAmounts, async (govTokenAmount,govTokenIndex) => {\n        // Get gov Token config by index\n        const govTokenAddress = await this.getGovTokenAddessByIndex(tokenConfig.idle.token,govTokenIndex);\n\n        if (govTokenAddress){\n          const govTokenConfig = this.getGovTokenConfigByAddress(govTokenAddress);\n          if (govTokenConfig){\n            output[govTokenConfig.token] = govTokenIndex;\n          }\n        }\n      });\n    }\n\n    return output;\n  }\n  getGovTokenAddessByIndex = async (token,govTokenIndex) => {\n    const cachedDataKey = `govTokenAddressByIndex_${token}_${govTokenIndex}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    // console.log(cachedDataKey,cachedData);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const govTokenAddress = await this.genericContractCall(token,'govTokens',[govTokenIndex]);\n    return this.setCachedDataWithLocalStorage(cachedDataKey,govTokenAddress,null);\n  }\n  getGovTokensUserAmounts = async (token,account) => {\n    const cachedDataKey = `govTokenUserAmount_${token}_${account}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const govTokenAddress = await this.genericContractCall(token,'getGovTokensAmounts',[account]);\n    return this.setCachedDataWithLocalStorage(cachedDataKey,govTokenAddress);\n  }\n  getGovTokensUserBalances = async (account=null,availableTokens=null,convertToken=null,govTokenConfigForced=null,checkShowBalance=false) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.availableStrategies && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    const output = {};\n\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const idleTokenConfig = availableTokens[token].idle;\n\n      // Get govTokens amounts\n      const govTokensAmounts = await this.getGovTokensUserAmounts(idleTokenConfig.token,account);\n\n      // console.log('getGovTokensUserBalances_1',idleTokenConfig.token,govTokensAmounts);\n\n      if (govTokensAmounts){\n        await this.asyncForEach(govTokensAmounts, async (govTokenAmount,govTokenIndex) => {\n          govTokenAmount = this.BNify(govTokenAmount);\n          // Get gov Token config by index\n          const govTokenAddress = await this.getGovTokenAddessByIndex(idleTokenConfig.token,govTokenIndex);\n\n          // console.log('getGovTokensUserBalances_2',idleTokenConfig.token,govTokenIndex,govTokenAddress);\n\n          if (govTokenAddress){\n            const govTokenConfig = govTokenConfigForced ? govTokenConfigForced : this.getGovTokenConfigByAddress(govTokenAddress);\n\n            if (govTokenConfig && (!checkShowBalance || govTokenConfig.showBalance) && govTokenConfig.address && govTokenConfig.address.toLowerCase() === govTokenAddress.toLowerCase()){\n\n              // Get gov token conversion rate\n              let tokenConversionRate = null;\n              if (convertToken){\n                const fromTokenConfig = this.getGlobalConfig(['stats','tokens',convertToken]);\n                if (fromTokenConfig){\n                  try {\n                    tokenConversionRate = await this.getUniswapConversionRate(fromTokenConfig,govTokenConfig);\n                  } catch (error) {\n                    \n                  }\n                }\n              }\n\n              govTokenAmount = this.fixTokenDecimals(govTokenAmount,govTokenConfig.decimals,tokenConversionRate);\n\n              // console.log('getGovTokensUserBalances',idleTokenConfig.token,govTokenIndex,govTokenConfig.token,govTokenAddress,parseFloat(tokenConversionRate),parseFloat(govTokenAmount));\n\n              // Initialize govToken balance\n              if (!output[govTokenConfig.token]){\n                output[govTokenConfig.token] = this.BNify(0); // this.BNify(1) for testing\n              }\n\n              // Add govTokens balance\n              output[govTokenConfig.token] = output[govTokenConfig.token].plus(govTokenAmount);\n            }\n          }\n        });\n      }\n    });\n\n    return output;\n  }\n  getTokenFees = async (tokenConfig=null) => {\n    if (!tokenConfig && this.props.tokenConfig){\n      tokenConfig = this.props.tokenConfig;\n    }\n    const fee = await this.genericContractCallCached(tokenConfig.idle.token, 'fee', [], {}, 'latest', null);\n    if (fee){\n      return this.BNify(fee).div(this.BNify(100000));\n    }\n    return null;\n  }\n  getUserTokenFees = async (tokenConfig=null,account=null) => {\n    if (!tokenConfig && this.props.tokenConfig){\n      tokenConfig = this.props.tokenConfig;\n    }\n    if (!account && this.props.account){\n      account = this.props.account;\n    }\n\n    if (!account || !tokenConfig){\n      return null;\n    }\n\n    let [\n      feePercentage,\n      amountLent,\n      redeemableBalance\n    ] = await Promise.all([\n      this.getTokenFees(tokenConfig),\n      this.loadAssetField('amountLent',tokenConfig.token,tokenConfig,account),\n      this.loadAssetField('redeemableBalance',tokenConfig.token,tokenConfig,account)\n    ]);\n\n    if (feePercentage && amountLent && redeemableBalance){\n      const gain = redeemableBalance.minus(amountLent);\n      const fees = gain.times(feePercentage);\n\n      // this.customLog('fees',tokenConfig.token,amountLent.toString(),redeemableBalance.toString(),gain.toString(),fees.toString());\n\n      return fees;\n    }\n\n    return null;\n  }\n  getGovTokenUserBalance = async (govTokenConfig,account=null,availableTokens=null,convertToken=null) => {\n    const govTokensUserBalances = await this.getGovTokensUserBalances(account,availableTokens,convertToken,govTokenConfig);\n    return govTokensUserBalances && govTokensUserBalances[govTokenConfig.token] ? govTokensUserBalances[govTokenConfig.token] : this.BNify(0);\n  }\n  getTotalTVL = async () => {\n    const tokensTVL = await this.getTokensTVL();\n    return Object.values(tokensTVL).reduce( (totalTVL,tokenInfo) => {\n      const tokenTVL = this.BNify(tokenInfo.totalTVL);\n      if (tokenTVL && !tokenTVL.isNaN()){\n        totalTVL = totalTVL.plus(tokenTVL);\n      }\n      return totalTVL;\n    },this.BNify(0));\n  }\n  getTokensTVL = async () => {\n    const output = {};\n    const DAITokenConfig = {\n      address:this.getContractByName('DAI')._address\n    };\n    await this.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n      const isRisk = strategy === 'risk';\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n\n        let tokenTVL = this.BNify(0);\n        let totalTVL = this.BNify(0);\n        let oldTokenTVL = this.BNify(0);\n        const tokenConfig = availableTokens[token];\n        const idleTokenName = tokenConfig.idle.token;\n\n        output[idleTokenName] = {\n          tokenTVL,\n          totalTVL,\n          oldTokenTVL,\n          govTokens:{},\n        };\n\n        const [\n          tokenPrice,\n          totalSupply\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.getIdleTokenSupply(idleTokenName)\n        ]);\n\n        tokenTVL = this.fixTokenDecimals(totalSupply,18).times(tokenPrice);\n        tokenTVL = await this.convertTokenBalance(tokenTVL,token,tokenConfig,isRisk);\n\n        output[idleTokenName].tokenTVL = tokenTVL;\n        totalTVL = totalTVL.plus(tokenTVL);\n\n        // Add Gov Tokens\n        const govTokens = this.getTokenGovTokens(tokenConfig);\n        if (govTokens){\n          await this.asyncForEach(Object.keys(govTokens).filter( govToken => (govTokens[govToken].showAUM) ), async (govToken) => {\n            const govTokenConfig = govTokens[govToken];\n            const [\n              govTokenBalance,\n              govTokenConversionRate\n            ] = await Promise.all([\n              this.getProtocolBalance(govToken,tokenConfig.idle.address),\n              this.getUniswapConversionRate(DAITokenConfig,govTokenConfig)\n            ]);\n            \n            if (govTokenBalance && govTokenConversionRate){\n              const govTokenBalanceConverted = this.fixTokenDecimals(govTokenBalance,govTokenConfig.decimals).times(this.BNify(govTokenConversionRate));\n              if (govTokenBalanceConverted && !govTokenBalanceConverted.isNaN()){\n                totalTVL = totalTVL.plus(govTokenBalanceConverted);\n                output[idleTokenName].govTokens[govToken] = govTokenBalanceConverted;\n              }\n            }\n          });\n        }\n\n        // Get old token allocation\n        if (tokenConfig.migration && tokenConfig.migration.oldContract){\n          const oldTokenConfig = Object.assign({},tokenConfig);\n          oldTokenConfig.protocols = Object.values(tokenConfig.protocols);\n          oldTokenConfig.idle = Object.assign({},tokenConfig.migration.oldContract);\n\n          // Replace protocols with old protocols\n          if (oldTokenConfig.migration.oldProtocols){\n            oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n              const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n              if (foundProtocol){\n                const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                oldTokenConfig.protocols[protocolPos] = oldProtocol;\n              }\n            });\n          }\n\n          const [\n            oldTokenPrice,\n            oldTotalSupply\n          ] = await Promise.all([\n            this.getIdleTokenPrice(oldTokenConfig),\n            this.getIdleTokenSupply(oldTokenConfig.idle.name)\n          ]);\n\n          if (oldTokenPrice && oldTotalSupply){\n            oldTokenTVL = this.fixTokenDecimals(oldTotalSupply,18).times(oldTokenPrice);\n            oldTokenTVL = await this.convertTokenBalance(oldTokenTVL,token,oldTokenConfig,isRisk);\n            if (oldTokenTVL && !oldTokenTVL.isNaN()){\n              output[idleTokenName].oldTokenTVL = oldTokenTVL;\n              totalTVL = totalTVL.plus(oldTokenTVL);\n            }\n          }\n        }\n\n        output[idleTokenName].totalTVL = totalTVL;\n      });\n    });\n\n    return output;\n  }\n  getSubstackLatestFeed = async () => {\n    const cachedDataKey = `substackLatestFeed`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const networkId = this.getRequiredNetworkId();\n    const config = this.getGlobalConfig(['stats','config']);\n    const endpointInfo = this.getGlobalConfig(['stats','substack']);\n    const idleSubstackFeed = await this.makeRequest(endpointInfo.endpoint[networkId],false,config);\n\n    if (idleSubstackFeed && idleSubstackFeed.data && idleSubstackFeed.data.items && idleSubstackFeed.data.items.length>0){\n      const latestFeed = idleSubstackFeed.data.items[0];\n      return this.setCachedDataWithLocalStorage(cachedDataKey,latestFeed,endpointInfo.TTL);\n    }\n\n    return null;\n  }\n  getAvailableTokenAddress = (token,strategy) => {\n    const networkId = this.getRequiredNetworkId();\n    const tokenConfig = this.getArrayPath([networkId,strategy,token],availableTokens);\n    return tokenConfig ? tokenConfig.address : null;\n  }\n  getAggregatedStats = async (addGovTokens=true,allNetworks=false) => {\n    const networkId = this.getRequiredNetworkId();\n    const config = this.getGlobalConfig(['stats','config']);\n    const endpointInfo = this.getGlobalConfig(['stats','tvls']);\n    let networkIds = [networkId];\n    if (allNetworks){\n      networkIds = Object.keys(endpointInfo.endpoint);\n    }\n\n    let avgAPY = this.BNify(0);\n    let totalAUM = this.BNify(0);\n\n    await this.asyncForEach(networkIds, async (networkId) => {\n      let tvls = await this.makeCachedRequest(endpointInfo.endpoint[networkId],endpointInfo.TTL,true,false,config);\n      if (!tvls){\n        tvls = await this.getAggregatedStats_chain();\n      }\n\n      if (tvls){\n        avgAPY = avgAPY.plus(this.BNify(tvls.avgAPY).times(this.BNify(tvls.totalTVL)));\n        totalAUM = totalAUM.plus(this.BNify(tvls.totalTVL));\n      }\n    });\n\n    avgAPY = avgAPY.div(totalAUM);\n\n    return {\n      avgAPY,\n      totalAUM\n    };\n  }\n  getAggregatedStats_chain = async (addGovTokens=true) => {\n\n    // Check for cached data\n    const cachedDataKey = `getAggregatedStats_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && (cachedData.avgAPR && !this.BNify(cachedData.avgAPR).isNaN()) && (cachedData.avgAPY && !this.BNify(cachedData.avgAPY).isNaN()) && (cachedData.totalAUM && !this.BNify(cachedData.totalAUM).isNaN())){\n      return {\n        avgAPR:this.BNify(cachedData.avgAPR),\n        avgAPY:this.BNify(cachedData.avgAPY),\n        totalAUM:this.BNify(cachedData.totalAUM)\n      };\n    }\n\n    let avgAPR = this.BNify(0);\n    let avgAPY = this.BNify(0);\n    let totalAUM = this.BNify(0);\n    const DAITokenConfig = {\n      address:this.getContractByName('DAI')._address\n    };\n    await this.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n      const isRisk = strategy === 'risk';\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n        const tokenConfig = availableTokens[token];\n        const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,addGovTokens);\n        const tokenAprs = await this.getTokenAprs(tokenConfig,tokenAllocation,addGovTokens);\n        if (tokenAllocation && tokenAllocation.totalAllocationWithUnlent && !tokenAllocation.totalAllocationWithUnlent.isNaN()){\n          const tokenAUM = await this.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent,token,tokenConfig,isRisk);\n          totalAUM = totalAUM.plus(tokenAUM);\n          // console.log(tokenConfig.idle.token+'V4',tokenAUM.toFixed());\n          if (tokenAprs && tokenAprs.avgApr && !tokenAprs.avgApr.isNaN()){\n            avgAPR = avgAPR.plus(tokenAUM.times(tokenAprs.avgApr));\n            avgAPY = avgAPY.plus(tokenAUM.times(tokenAprs.avgApy));\n          }\n        }\n\n        // Add Gov Tokens\n        const govTokens = this.getTokenGovTokens(tokenConfig);\n        if (govTokens){\n          await this.asyncForEach(Object.keys(govTokens).filter( govToken => (govTokens[govToken].showAUM) ), async (govToken) => {\n            const govTokenConfig = govTokens[govToken];\n            const [\n              tokenBalance,\n              tokenConversionRate\n            ] = await Promise.all([\n              this.getProtocolBalance(govToken,tokenConfig.idle.address),\n              this.getUniswapConversionRate(DAITokenConfig,govTokenConfig)\n            ]);\n            \n            if (tokenBalance && tokenConversionRate){\n              const tokenBalanceConverted = this.fixTokenDecimals(tokenBalance,govTokenConfig.decimals).times(this.BNify(tokenConversionRate));\n              if (tokenBalanceConverted && !tokenBalanceConverted.isNaN()){\n                // console.log(tokenConfig.idle.token+'V4 - COMP',tokenBalanceConverted.toFixed());\n                totalAUM = totalAUM.plus(tokenBalanceConverted);\n              }\n            }\n          });\n        }\n\n        // Get old token allocation\n        if (tokenConfig.migration && tokenConfig.migration.oldContract){\n          const oldTokenConfig = Object.assign({},tokenConfig);\n          oldTokenConfig.protocols = Object.values(tokenConfig.protocols);\n          oldTokenConfig.idle = Object.assign({},tokenConfig.migration.oldContract);\n\n          // Replace protocols with old protocols\n          if (oldTokenConfig.migration.oldProtocols){\n            oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n              const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n              if (foundProtocol){\n                const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                oldTokenConfig.protocols[protocolPos] = oldProtocol;\n              }\n            });\n          }\n\n          const oldTokenAllocation = await this.getTokenAllocation(oldTokenConfig,false,false);\n          if (oldTokenAllocation && oldTokenAllocation.totalAllocation && !oldTokenAllocation.totalAllocation.isNaN()){\n            const oldTokenTotalAllocation = await this.convertTokenBalance(oldTokenAllocation.totalAllocation,token,oldTokenConfig,isRisk);\n            totalAUM = totalAUM.plus(oldTokenTotalAllocation);\n            // console.log(oldTokenConfig.idle.name,oldTokenTotalAllocation.toFixed(5));\n          }\n        }\n      });\n    });\n\n    avgAPR = avgAPR.div(totalAUM);\n    avgAPY = avgAPY.div(totalAUM);\n\n    const output = {\n      avgAPR,\n      avgAPY,\n      totalAUM\n    };\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey,output);\n  }\n  getTokenApy = async (tokenConfig) => {\n    const tokenAprs = await this.getTokenAprs(tokenConfig);\n    if (tokenAprs && tokenAprs.avgApy !== null){\n      return tokenAprs.avgApy;\n    }\n    return null;\n  }\n  getTokensToMigrate = async (selectedStrategy=null) => {\n\n    if (!this.props.availableStrategies || !this.props.account){\n      return false;\n    }\n\n    const tokensToMigrate = {};\n\n    await this.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n      if (selectedStrategy && selectedStrategy !== strategy){\n        return;\n      }\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n        const tokenConfig = availableTokens[token];\n        const {\n          migrationEnabled,\n          oldContractBalanceFormatted\n        } = await this.checkMigration(tokenConfig,this.props.account);\n        \n        if (migrationEnabled){\n          const tokenKey = selectedStrategy ? token : tokenConfig.idle.token;\n          tokensToMigrate[tokenKey] = {\n            token,\n            strategy,\n            tokenConfig,\n            oldContractBalanceFormatted\n          }\n        }\n      });\n    });\n\n    return tokensToMigrate;\n  }\n  /*\n  Get protocols tokens balances\n  */\n  getProtocolsTokensBalances = async (protocol=null) => {\n    if (!this.props.account){\n      return false;\n    }\n    const tokenBalances = {};\n    const minTokenBalance = this.BNify(1).div(1e4);\n    const protocolsTokens = this.getGlobalConfig(['tools','tokenMigration','props','availableTokens']);\n    if (protocolsTokens){\n      await this.asyncForEach(Object.keys(protocolsTokens),async (token) => {\n        const tokenConfig = protocolsTokens[token];\n        if (protocol !== null && tokenConfig.protocol.toLowerCase() !== protocol.toLowerCase() ){\n          return;\n        }\n        let tokenContract = this.getContractByName(tokenConfig.token);\n        if (!tokenContract && tokenConfig.abi){\n          tokenContract = await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n        }\n        if (tokenContract){\n          const tokenBalance = await this.getTokenBalance(tokenConfig.token,this.props.account);\n          if (tokenBalance && tokenBalance.gte(minTokenBalance)){\n            tokenBalances[token] = {\n              tokenConfig,\n              balance:tokenBalance,\n            };\n          }\n        }\n      });\n    }\n\n    return tokenBalances;\n  }\n  /*\n  Convert token Balance\n  */\n  convertTokenBalance = async (tokenBalance,token,tokenConfig,isRisk=false) => {\n    // Check for USD conversion rate\n    tokenBalance = this.BNify(tokenBalance);\n    if (tokenBalance.gt(0)){\n      const tokenUsdConversionRate = await this.getTokenConversionRate(tokenConfig,isRisk);\n      // console.log('convertTokenBalance',token,isRisk,tokenUsdConversionRate);\n      if (tokenUsdConversionRate){\n        tokenBalance = tokenBalance.times(tokenUsdConversionRate);\n      }\n    }\n    return tokenBalance;\n  }\n\n  getAvgAPYStats = async (address,isRisk,startTimestamp=null,endTimestamp=null) => {\n\n    const apiResults = await this.getTokenApiData(address,isRisk,startTimestamp,endTimestamp,true,7200);\n\n    if (apiResults && apiResults.length){\n      const apr = apiResults.reduce( (sum,r) => {\n        const idleRate = this.fixTokenDecimals(r.idleRate,18);\n        return sum.plus(idleRate);\n      },this.BNify(0));\n\n      // Calculate average\n      return apr.div(apiResults.length);\n    }\n\n    return this.BNify(0);\n  }\n\n  /*\n  Get idleToken conversion rate\n  */\n  getTokenConversionRate = async (tokenConfig,isRisk,conversionRateField=null,count=0) => {\n\n    if (!conversionRateField){\n      conversionRateField = this.getGlobalConfig(['stats','tokens',tokenConfig.token,'conversionRateField']);\n      if (!conversionRateField){\n        return null;\n      }\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenConversionRate_${tokenConfig.address}_${isRisk}_${conversionRateField}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let tokenData = await this.getTokenApiData(tokenConfig.address,isRisk,null,null,false,null,'desc',1);\n    if (tokenData && tokenData.length){\n      tokenData = tokenData.pop();\n      if (tokenData && !this.BNify(tokenData[conversionRateField]).isNaN()){\n        const conversionRate = this.fixTokenDecimals(tokenData[conversionRateField],18);\n        if (!this.BNify(conversionRate).isNaN()){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,conversionRate);\n        }\n      }\n    }\n\n    const DAITokenConfig = {\n      address:this.getContractByName('DAI')._address\n    };\n    const ToTokenConfig = tokenConfig.token ? this.getGlobalConfig(['stats','tokens',tokenConfig.token]) : tokenConfig;\n    const conversionRate = await this.getUniswapConversionRate(DAITokenConfig,ToTokenConfig);\n    if (!this.BNify(conversionRate).isNaN()){\n      return this.setCachedDataWithLocalStorage(cachedDataKey,conversionRate);\n    }\n\n    if (count<3){\n      return await this.getTokenConversionRate(tokenConfig,isRisk,conversionRateField,count+1); \n    }\n\n    return null;\n  }\n\n  getTokenScore = async (tokenConfig,isRisk) => {\n    // Check for cached data\n    const cachedDataKey = `tokenScore_${tokenConfig.address}_${isRisk}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const networkId = this.getRequiredNetworkId();\n    const apiInfo = this.getGlobalConfig(['stats','rates']);\n    const config = this.getGlobalConfig(['stats','config']);\n    const endpoint = `${apiInfo.endpoint[networkId]}${tokenConfig.address}?isRisk=${isRisk}&limit=1&order=DESC`;\n    const [\n      tokenData,\n      tokenAllocation\n    ] = await Promise.all([\n      this.makeCachedRequest(endpoint,apiInfo.TTL,true,false,config),\n      this.getTokenAllocation(tokenConfig,false,false)\n    ]);\n\n    let tokenScore = this.BNify(0);\n\n    if (tokenAllocation){\n      Object.keys(tokenAllocation.protocolsAllocationsPerc).forEach( protocolAddr => {\n        const protocolAllocationPerc = this.BNify(tokenAllocation.protocolsAllocationsPerc[protocolAddr]);\n        if (protocolAllocationPerc.gt(0.001)){\n          let protocolScore = null;\n\n          const protocolInfo = tokenData && tokenData.length>0 ? tokenData[0].protocolsData.find( p => (p.protocolAddr.toLowerCase() === protocolAddr.toLowerCase()) ) : null;\n          if (protocolInfo){\n            protocolScore = this.BNify(protocolInfo.defiScore);\n          }\n\n          // Take protocol score from tokenConfig\n          if (!protocolScore || this.BNify(protocolScore).isNaN() || this.BNify(protocolScore).lte(0)){\n            const protocolConfig = tokenConfig.protocols.find(p => p.address.toLowerCase() === protocolAddr.toLowerCase());\n            if (protocolConfig){\n              protocolScore = this.BNify(protocolConfig.defiScore);\n            }\n          }\n\n          if (!protocolScore.isNaN()){\n            tokenScore = tokenScore.plus(protocolScore.times(protocolAllocationPerc));\n          }\n        }\n      });\n    }\n\n    // Fallback\n    if (!tokenScore || tokenScore.isNaN() || tokenScore.lte(0)){\n      tokenScore = await this.getTokenScoreApi(tokenConfig,isRisk);\n    }\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey,tokenScore);\n  }\n\n  /*\n  Get idleToken score\n  */\n  getTokenScoreApi = async (tokenConfig,isRisk) => {\n    // Check for cached data\n    const cachedDataKey = `tokenScoreApi_${tokenConfig.address}_${isRisk}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const networkId = this.getRequiredNetworkId();\n    const apiInfo = this.getGlobalConfig(['stats','scores']);\n\n    if (!apiInfo.endpoint[networkId]){\n      return this.BNify(0);\n    }\n\n    const config = this.getGlobalConfig(['stats','config']);\n    const endpoint = `${apiInfo.endpoint[networkId]}${tokenConfig.address}?isRisk=${isRisk}`;\n    let scores = await this.makeCachedRequest(endpoint,apiInfo.TTL,true,false,config);\n\n    if (scores && scores.length>0){\n      let tokenData = scores.find( s => s.address.toLowerCase() === tokenConfig.address.toLowerCase() );\n      if (tokenData){\n        let tokenScore = this.BNify(tokenData.idleScore);\n        if (tokenScore && tokenScore.gt(0)){\n          // Set cached data\n          return this.setCachedData(cachedDataKey,tokenScore);\n        // Take latest historical valid score\n        } else {\n          const timestamp = parseInt(Date.now()/1000);\n          const startTimestamp = parseInt(timestamp)-(60*60*24);\n          tokenData = await this.getTokenApiData(tokenConfig.address,isRisk,startTimestamp,null,true,null,'DESC');\n\n          const filteredTokenData = tokenData.filter( d => (this.BNify(d.idleScore).gt(0)) );\n          if (filteredTokenData.length){\n            tokenScore = this.BNify(filteredTokenData[0].idleScore);\n            if (!this.BNify(tokenScore).isNaN()){\n              return this.setCachedDataWithLocalStorage(cachedDataKey,tokenScore);\n            }\n          }\n        }\n      }\n    }\n\n    return this.BNify(0);\n  }\n  /*\n  Get idleTokens aggregated APR\n  */\n  getTokenAprs = async (tokenConfig,tokenAllocation=false,addGovTokens=true) => {\n\n    const tokenAprs = {\n      avgApr: this.BNify(0),\n      avgApy: this.BNify(0)\n    };\n\n    if (!tokenConfig.idle){\n      return tokenAprs;\n    }\n\n    const networkId = this.getRequiredNetworkId();\n\n    // Check for cached data\n    const cachedDataKey = `tokenAprs_${networkId}_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n\n    // console.log('getTokenAprs-1',tokenConfig.idle.token,networkId,cachedDataKey,cachedData);\n\n    if (cachedData && (cachedData.avgApr && this.BNify(cachedData.avgApr).gt(0)) && (cachedData.avgApy && this.BNify(cachedData.avgApy).gt(0)) ){\n      return {\n        avgApr:this.BNify(cachedData.avgApr),\n        avgApy:this.BNify(cachedData.avgApy)\n      };\n    }\n\n    tokenAprs.avgApr = await this.genericContractCall(tokenConfig.idle.token,'getAvgAPR');\n    if (tokenAprs.avgApr){\n      tokenAprs.avgApr = this.fixTokenDecimals(tokenAprs.avgApr,18);\n    }\n\n    // console.log('getTokenAprs-2',tokenConfig.idle.token,networkId,this.getContractByName(tokenConfig.idle.token)._address,tokenAprs);\n\n    if (tokenAprs.avgApr){\n\n      tokenAprs.avgApy = this.apr2apy(tokenAprs.avgApr.div(100)).times(100);\n\n      // Add $IDLE token APR\n      const idleGovTokenShowAPR = this.getGlobalConfig(['govTokens','IDLE','showAPR']);\n      const idleGovTokenEnabled = this.getGlobalConfig(['govTokens','IDLE','enabled']);\n      if (idleGovTokenEnabled && idleGovTokenShowAPR){\n        const idleGovToken = this.getIdleGovToken();\n        const idleAPR = await idleGovToken.getAPR(tokenConfig.token,tokenConfig);\n        if (idleAPR){\n          tokenAprs.avgApr = tokenAprs.avgApr.plus(idleAPR);\n          tokenAprs.avgApy = tokenAprs.avgApy.plus(idleAPR);\n        }\n      }\n\n      // console.log('getTokenAprs-3',tokenConfig.idle.token,networkId,tokenAprs.avgApr.toFixed(8),tokenAprs.avgApy.toFixed(8));\n\n      if (this.BNify(tokenAprs.avgApy).isNaN()){\n        tokenAprs.avgApy = this.BNify(0);\n      }\n      if (this.BNify(tokenAprs.avgApr).isNaN()){\n        tokenAprs.avgApr = this.BNify(0);\n      }\n\n      // console.log('Aprs for '+tokenConfig.idle.token+' loaded in '+((Date.now()-start)/1000).toFixed(2)+'s');\n\n      return this.setCachedDataWithLocalStorage(cachedDataKey,tokenAprs);\n    }\n\n    return tokenAprs;\n  }\n  abbreviateNumber = (value,decimals=3,maxPrecision=5,minPrecision=0) => {\n\n    const isNegative = parseFloat(value)<0;\n    let newValue = this.BNify(value).abs();\n    const suffixes = [\"\", \"K\", \"M\", \"B\",\"T\"];\n    let suffixNum = 0;\n    while (newValue.gte(1000)) {\n      newValue = newValue.div(1000);\n      suffixNum++;\n    }\n\n    maxPrecision = Math.max(1,maxPrecision);\n\n    // Prevent decimals on integer number\n    if (value>=1000){\n      const decimalPart = decimals ? newValue.mod(1).toFixed(maxPrecision).substr(2,decimals) : null;\n      newValue = parseInt(newValue).toString()+( decimalPart ? '.'+decimalPart : '' );\n    } else {\n      newValue = newValue.toFixed(decimals);\n    }\n\n    // Adjust number precision\n    if (newValue>=1 && (newValue.length-1)>maxPrecision){\n      newValue = parseFloat(newValue).toPrecision(maxPrecision);\n    } else if ((newValue.length-1)<minPrecision) {\n      const difference = minPrecision-(newValue.length-1);\n      const append = this.BNify(value).abs().toString().replace('.','').substr((newValue.length-1),difference);\n      newValue += append;\n    }\n\n    // Add minus if number is negative\n    if (isNegative){\n      newValue = '-'+newValue;\n    }\n\n    newValue += suffixes[suffixNum];\n\n    return newValue;\n  }\n  getFormattedBalance(balance,label,decimals,maxLen,highlightedDecimals){\n    const defaultValue = '-';\n    decimals = !isNaN(decimals) ? decimals : 6;\n    maxLen = !isNaN(maxLen) ? maxLen : 10;\n    highlightedDecimals = !isNaN(highlightedDecimals) ? highlightedDecimals : 0;\n    balance = parseFloat(this.BNify(balance)).toFixed(decimals);\n\n    const numLen = balance.toString().replace('.','').length;\n    if (numLen>maxLen){\n      decimals = Math.max(0,decimals-(numLen-maxLen));\n      balance = parseFloat(this.BNify(balance)).toFixed(decimals);\n    }\n\n    const intPart = Math.floor(balance);\n    let decPart = (balance%1).toPrecision(decimals).substr(2,decimals);;\n    decPart = (decPart+(\"0\".repeat(decimals))).substr(0,decimals);\n\n    if (highlightedDecimals){\n      const highlightedDec = decPart.substr(0,highlightedDecimals);\n      decPart = decPart.substr(highlightedDecimals);\n      const highlightedIntPart = (<Text.span fontSize={'100%'} color={'blue'} fontWeight={'inerith'}>{intPart}.{highlightedDec}</Text.span>);\n      return !isNaN(this.trimEth(balance)) ? ( <>{highlightedIntPart}<small style={{fontSize:'70%'}}>{decPart}</small> <Text.span fontSize={[1,2]}>{label}</Text.span></> ) : defaultValue;\n    } else {\n      return !isNaN(this.trimEth(balance)) ? ( <>{intPart}<small>.{decPart}</small>{ label !== '%' ? ' ' : null }{ label ? <Text.span fontSize={[1,2]}>{label}</Text.span> : null }</> ) : defaultValue;\n    }\n  }\n};\n\nexport default FunctionsUtil;","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Box,\n  Button,\n  Flex,\n  Image\n} from \"rimble-ui\";\nimport Select from 'react-select';\nimport ModalCard from './ModalCard';\nimport ImageButton from '../../ImageButton/ImageButton';\nimport styles from './Header.module.scss';\nimport globalConfigs from '../../configs/globalConfigs';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\n\nclass BuyModal extends React.Component {\n\n  state = {\n    selectedMethod:null,\n    availableMethods:[],\n    selectedCountry:null,\n    selectedProvider:null,\n    availableProviders:null,\n    selectedToken:this.props.buyToken,\n  }\n\n  async loadRemoteResources() {\n\n    if (!this.state.selectedToken){\n      return false;\n    }\n\n    // Load payments providers external remote resources\n    Object.keys(globalConfigs.payments.providers).forEach((provider,i) => {\n\n      const providerInfo = globalConfigs.payments.providers[provider];\n      if (providerInfo.enabled && providerInfo.remoteResources && (providerInfo.supportedTokens.indexOf(this.state.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1)){\n        \n        const remoteResources = providerInfo.remoteResources;\n\n        Object.keys(remoteResources).forEach((url,j) => {\n\n          const resourceType = url.split('.').pop().toLowerCase();\n\n          switch (resourceType){\n            case 'js':\n              const scriptID = `script_${provider}_${j}_${this.state.selectedToken}`;\n\n              if (!document.getElementById(scriptID)){\n                const script = document.createElement(\"script\");\n                const remoteResourceParams = remoteResources[url];\n                const callback = remoteResourceParams && remoteResourceParams.callback ? remoteResourceParams.callback : null;\n                const precall = remoteResourceParams && remoteResourceParams.precall ? remoteResourceParams.precall : null;\n\n                if (precall && typeof precall === 'function'){\n                  precall(this.state,globalConfigs,providerInfo);\n                }\n\n                if (callback && typeof callback === 'function'){\n                  if (script.readyState) {  // only required for IE <9\n                    script.onreadystatechange = function() {\n                      if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n                        script.onreadystatechange = null;\n                        callback();\n                      }\n                    };\n                  } else {  //Others\n                    script.onload = callback;\n                  }\n                }\n\n                script.id = scriptID;\n                script.className = `script_${provider}`;\n                script.src = url;\n                script.async = true;\n\n                if (remoteResourceParams && remoteResourceParams.parentElement){\n                  remoteResourceParams.parentElement.appendChild(script)\n                } else {\n                  document.head.appendChild(script);\n                }\n              }\n            break;\n            case 'css':\n              const stylesheetId = `stylesheet_${provider}_${j}`;\n\n              if (!document.getElementById(stylesheetId)){\n                const style = document.createElement(\"link\");\n\n                style.id = stylesheetId;\n                style.rel = 'stylesheet';\n                style.href = url;\n\n                document.head.appendChild(style);\n              }\n            break;\n            default:\n            break;\n          }\n        });\n      }\n    });\n  }\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  loadAvailableMethods(){\n    const availableMethods = {};\n    const availableMethodsKeys = this.props.availableMethods && this.props.availableMethods.length ? this.props.availableMethods : Object.keys(globalConfigs.payments.methods);\n\n    availableMethodsKeys.forEach(method => {\n      const availableProviders = this.getAvailablePaymentProviders(method,this.state.selectedToken);\n      if (availableProviders && availableProviders.length>0){\n        const methodInfo = globalConfigs.payments.methods[method];\n        methodInfo.availableProviders = availableProviders;\n        availableMethods[method] = methodInfo;\n      }\n    });\n\n    this.setState({\n      availableMethods\n    });\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n\n    this.loadAvailableMethods();\n    this.loadRemoteResources();\n  }\n\n  async componentDidMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps) {\n\n    this.loadUtils();\n\n    if ( this.props.buyToken && prevProps.buyToken !== this.props.buyToken){\n      this.selectToken(null,this.props.buyToken);\n    }\n  }\n\n  renderPaymentMethod = async (e,provider,buyParams) => {\n\n    const onSuccess = async (tx) => {\n      // Toast message\n      window.toastProvider.addMessage(`Deposit completed`, {\n        secondaryMessage: `Your ${this.state.selectedToken} have been deposited`,\n        colorTheme: 'light',\n        actionHref: \"\",\n        actionText: \"\",\n        variant: \"success\",\n      });\n\n      this.props.getAccountBalance();\n    };\n\n    const onClose = async (e) => {\n      return true;\n    }\n\n    const paymentProvider = globalConfigs.payments.providers[provider];\n    const initParams = paymentProvider && paymentProvider.getInitParams ? paymentProvider.getInitParams(this.props,globalConfigs,buyParams,onSuccess,onClose) : null;\n\n    // Render the Payment Provider\n    switch (provider){\n      default:\n        if (typeof paymentProvider.render === 'function'){\n          const currentState = Object.assign({},this.state);\n          paymentProvider.render(initParams,null,currentState,globalConfigs);\n        }\n      break;\n    }\n\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_provider',\n        eventLabel: provider\n      });\n\n      this.closeModal(e);\n    } else {\n      this.closeModal(e);\n    }\n  }\n\n  goBack = (e) => {\n    e.preventDefault();\n\n    if (this.state.selectedProvider){\n      this.setState({\n        selectedProvider:null,\n      });\n    } else if (this.state.selectedMethod){\n      this.setState({\n        selectedMethod:null,\n        selectedCountry:null,\n        selectedProvider:null,\n      });\n    } else if (this.state.selectedToken){\n      this.setState({\n        selectedMethod:null,\n        selectedCountry:null,\n        selectedProvider:null,\n        selectedToken:this.props.buyToken,\n      });\n    } else {\n      this.resetModal();\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      selectedMethod:null,\n      selectedCountry:null,\n      selectedProvider:null,\n      availableProviders:null,\n      selectedToken:this.props.buyToken\n    });\n\n    this.componentWillMount();\n  }\n\n  closeModal = (e) => {\n    this.resetModal();\n    if (!this.props.showInline && typeof this.props.closeModal === 'function'){\n      this.props.closeModal();\n    }\n  }\n\n  getProviderInfo = (provider) => {\n    if (!globalConfigs.payments.providers[provider]){\n      return false;\n    }\n    let providerInfo = globalConfigs.payments.providers[provider];\n    if (typeof providerInfo.getInfo === 'function'){\n      const newProviderInfo = providerInfo.getInfo(this.state);\n      if (newProviderInfo && Object.keys(newProviderInfo).length){\n        providerInfo = Object.assign(providerInfo,newProviderInfo);\n      }\n    }\n    return providerInfo;\n  }\n\n  getDefaultPaymentProvider = (selectedMethod) => {\n    const paymentMethod = this.state.availableMethods[selectedMethod];\n    if (paymentMethod && paymentMethod.defaultProvider){\n      return paymentMethod.defaultProvider;\n    }\n    return null;\n  }\n\n  getAvailablePaymentProviders = (selectedMethod,selectedToken) => {\n    const availableProviders = [];\n\n    Object.keys(globalConfigs.payments.providers).map((provider,i) => {\n      const providerInfo = globalConfigs.payments.providers[provider];\n      const providerSupportMethod = providerInfo.supportedMethods.indexOf(selectedMethod) !== -1;\n      const providerSupportToken = selectedToken ? providerInfo.supportedTokens.indexOf(selectedToken) !== -1 : (providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1);\n      if (providerInfo.enabled && providerSupportMethod && providerSupportToken ){\n        availableProviders.push(provider);\n      }\n      return provider;\n    });\n\n    const defaultPaymentProvider = this.getDefaultPaymentProvider(selectedMethod);\n\n    if (defaultPaymentProvider && this.state.availableMethods[selectedMethod].showDefaultOnly && availableProviders.indexOf(defaultPaymentProvider) !== -1){\n      return [defaultPaymentProvider];\n    }\n\n    return availableProviders;\n  }\n\n  selectProvider = (e,selectedProvider) => {\n    if (e){\n      e.preventDefault();\n    }\n    \n    if (!selectedProvider || !globalConfigs.payments.providers[selectedProvider]){\n      return this.setState({\n        selectedProvider:null\n      });\n    }\n\n    const providerInfo = globalConfigs.payments.providers[selectedProvider];\n    if (providerInfo){\n\n      if (this.state.selectedToken){\n        this.renderPaymentMethod(e,selectedProvider,this.state);\n        return;\n      }\n\n      const ethAvailable = providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1;\n      const tokenAvailable = providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1;\n\n      // Show tokens to buy if more are available or if the selected one is not\n      const availableTokens = [];\n      if ( (ethAvailable && tokenAvailable) || !tokenAvailable ){\n        if (ethAvailable){\n          availableTokens.push(globalConfigs.baseToken);\n        }\n        if (tokenAvailable){\n          availableTokens.push(this.props.selectedToken);\n        }\n      } else {\n        this.renderPaymentMethod(e,selectedProvider,this.state);\n        return;\n      }\n\n      this.setState({\n        availableTokens,\n        selectedProvider\n      });\n    }\n  }\n\n  selectMethod = (e,selectedMethod) => {\n    if (e){\n      e.preventDefault();\n    }\n\n    if (Object.keys(this.state.availableMethods).indexOf(selectedMethod) !== -1){\n      const availableProviders = this.getAvailablePaymentProviders(selectedMethod,this.state.selectedToken);\n\n      // Send Google Analytics event\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_method',\n        eventLabel: selectedMethod\n      });\n\n      this.setState({\n        availableProviders,\n        selectedMethod\n      });\n    }\n  }\n\n  selectToken = (e,selectedToken) => {\n    if (e){\n      e.preventDefault();\n    }\n\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Buy',\n      eventAction: 'select_token',\n      eventLabel: selectedToken\n    });\n\n    this.setState({ selectedToken }, async () => {\n      if (this.state.selectedProvider){\n        return this.renderPaymentMethod(e,this.state.selectedProvider,this.state);\n      } else {\n        this.loadRemoteResources();\n      }\n    });\n  }\n\n  handleCountryChange = selectedCountry => {\n\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled && selectedCountry){\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_country',\n        eventLabel: selectedCountry.value\n      });\n    }\n\n    this.setState({\n      selectedCountry\n    });\n  }\n\n  getAvailableCountries = () => {\n    const availableCountries = {};\n    this.state.availableProviders.forEach((provider,i) => {\n      const providerInfo = this.getProviderInfo(provider);\n      const providerSupportMethod = providerInfo.supportedMethods.indexOf(this.state.selectedMethod) !== -1;\n      const providerSupportToken = this.state.selectedToken ? providerInfo.supportedTokens.indexOf(this.state.selectedToken) !== -1 : (providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1);\n\n      // Skip disabled provider, not supported selected method or not supported token\n      if (!providerInfo.enabled || !providerSupportMethod || !providerSupportToken ){\n        return;\n      }\n\n      // Get available providers and countries\n      providerInfo.supportedCountries.forEach((countryCode,j) => {\n        if (!availableCountries[countryCode]){\n          availableCountries[countryCode] = {\n            providers:[],\n            label:globalConfigs.countries[countryCode],\n            value:countryCode\n          };\n        }\n        availableCountries[countryCode].providers.push(provider);\n      });\n    });\n\n    return Object.values(availableCountries);\n  }\n\n  render() {\n\n    let title = null;\n    if (this.state.selectedToken === null){\n      title = 'BUY TOKEN';\n    } else {\n      title = 'BUY '+this.state.selectedToken;\n      if (this.state.selectedMethod !== null){\n        title += ' - '+this.state.availableMethods[this.state.selectedMethod].props.caption;\n      }\n    }\n\n    let availableTokens = this.props.availableTokens && Object.keys(this.props.availableTokens).length>0 ? [globalConfigs.baseToken,...Object.keys(this.props.availableTokens)] : [globalConfigs.baseToken];\n\n    // Show all tokens\n    if (this.props.showAllTokens){\n      availableTokens = [];\n      Object.keys(globalConfigs.payments.providers).forEach( provider => {\n        const providerInfo = globalConfigs.payments.providers[provider];\n        if (providerInfo.supportedTokens){\n          providerInfo.supportedTokens.forEach(token => {\n            if (!availableTokens.includes(token)){\n              availableTokens.push(token);\n            }\n          })\n        }\n      });\n    }\n\n    const InnerComponent = props => (\n      <Box minWidth={ this.props.showInline ? 'auto' : ['auto','35em'] }>\n      {\n        this.state.selectedToken === null ? (\n          <Box mb={2}>\n            <Text\n              mb={[2,3]}\n              fontWeight={2}\n              textAlign={'center'}\n              fontSize={[2, this.props.showInline ? 2 : 3]}\n            >\n              Which token do you want to buy?\n            </Text>\n            <Flex\n              mb={4}\n              style={{\n                flexWrap:'wrap'\n              }}\n              alignItems={'center'}\n              justifyContent={'center'}\n              flexDirection={['column','row']}\n            >\n            {\n              availableTokens.map((token,i) => {\n                const imageSrc = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'icon']) || `images/tokens/${token}.svg`;\n                return (\n                  <ImageButton\n                    caption={token}\n                    imageSrc={imageSrc}\n                    key={`token_${token}`}\n                    isMobile={this.props.isMobile}\n                    handleClick={ e => { this.selectToken(e,token); } }\n                    imageProps={ this.props.isMobile ? {height:'42px'} : {p:[2,3],height:'80px'}}\n                    buttonProps={ !this.props.isMobile ? {\n                      style:{\n                        'flex':'0 0 170px'\n                      }\n                    } : null}\n                  />\n                );\n              })\n            }\n            </Flex>\n          </Box>\n        ) : this.state.selectedMethod === null ? (\n          <Box>\n            <Flex mb={3} flexDirection={'column'} justifyContent={'center'} alignItems={'center'}>\n              {\n                !this.props.showInline &&\n                  <Image height={2} mb={2} src={`images/tokens/${this.state.selectedToken}.svg`} />\n              }\n              <Text textAlign={'center'} fontWeight={500} fontSize={[2, this.props.showInline ? 2 : 3]} my={0}>\n                {\n                  this.props.showInline && this.props.buyToken ? `Ops... you don't have any ${this.props.buyToken} in your wallet, how do you prefer do buy some?` : `How do you prefer to buy ${this.state.selectedToken}?`\n                }\n              </Text>\n            </Flex>\n            <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n              {\n                Object.keys(this.state.availableMethods).map((method,i) => {\n                  const methodInfo = this.state.availableMethods[method];\n                  let imageProps = methodInfo.props && methodInfo.props.imageProps ? methodInfo.props.imageProps : {};\n                  const imagePropsExtended = this.props.isMobile ? {height:'42px'} : {height:'70px'};\n                  imageProps = Object.assign(imageProps,imagePropsExtended);\n\n                  return (\n                    <ImageButton\n                      {...methodInfo.props}\n                      buttonProps={{\n                        border:2\n                      }}\n                      key={`method_${method}`}\n                      imageProps={ imageProps }\n                      isMobile={ this.props.isMobile }\n                      handleClick={ e => this.selectMethod(e,method) }\n                    />\n                  );\n                })\n              }\n            </Flex>\n          </Box>\n        ) : this.state.selectedMethod === 'wallet' ? (\n              <Box mt={2} mb={3}>\n                <Text textAlign={'center'} fontWeight={3} fontSize={2} my={0}>\n                  <Box width={'100%'}>\n                      <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                      {\n                        this.state.availableProviders.length > 0 ?\n                          (\n                            <Box>\n                              <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                                Choose your preferred payment provider:\n                              </Text>\n                              {\n                                this.state.availableProviders.map((provider,i) => {\n                                  const providerInfo = this.getProviderInfo(provider);\n                                  return (\n                                    <ImageButton key={`payment_provider_${provider}`} {...providerInfo} handleClick={ e => { this.renderPaymentMethod(e,provider,this.state); } } />\n                                  );\n                                })\n                              }\n                            </Box>\n                          )\n                        : (\n                          <Text textAlign={'center'} fontWeight={3} fontSize={2} my={2}>\n                            Sorry, there are no providers available for the selected method.\n                          </Text>\n                        )\n                      }\n                      </Flex>\n                    </Box>\n                </Text>\n              </Box>\n            ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              {\n                !this.state.selectedProvider &&\n                <Box\n                  mb={3}\n                  width={1}\n                  maxWidth={this.props.showInline ? '31em' : 'initial'}\n                >\n                  {\n                    !this.props.showInline &&\n                      <Flex flexDirection={'column'} justifyContent={'center'} alignItems={'center'}>\n                        <Image height={2} mb={2} src={`images/tokens/${this.state.selectedToken}.svg`} />\n                      </Flex>\n                  }\n                  <Text textAlign={'center'} fontWeight={ this.props.showInline ? 2 : 3 } fontSize={2} mb={2}>\n                    Select your country:\n                  </Text>\n                  <Select\n                    bg={'#162e4d'}\n                    backgroundColor={'#162e4d'}\n                    value={this.state.selectedCountry}\n                    placeholder={'Select your country'}\n                    onChange={this.handleCountryChange}\n                    options={this.getAvailableCountries()}\n                    maxWidth={ this.props.showInline && !this.props.isMobile ? '25em' : 'auto' }\n                    noOptionsMessage={ (inputValue) => 'For European countries select Europe' }\n                    className={this.props.themeMode === 'light' ? styles.select : styles.selectDark}\n                  />\n                </Box>\n              }\n              <Flex flexDirection={'column'} justifyContent={'center'} alignItems={'center'} minHeight={'200px'}>\n                {\n                  !this.state.selectedProvider ?\n                    this.state.selectedCountry !== null ? (\n                      <Box width={'100%'}>\n                        <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                          Choose your preferred payment provider:\n                        </Text>\n                        <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                        {\n                          this.state.selectedCountry.providers.length > 0 ?\n                            this.state.selectedCountry.providers.map((provider,i) => {\n                              const providerInfo = this.getProviderInfo(provider);\n                              return (\n                                <ImageButton key={`payment_provider_${provider}`} {...providerInfo} handleClick={ e => {this.selectProvider(e,provider) } } />\n                              );\n                            })\n                          : (\n                            <Text textAlign={'center'} fontWeight={3} fontSize={2} mb={2}>\n                              Sorry, there are no providers available for the selected method.\n                            </Text>\n                          )\n                        }\n                        </Flex>\n                      </Box>\n                    ) : (\n                      <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={2}>\n                        Select the country to load the payment providers.\n                      </Text>\n                    )\n                  : false && this.state.availableTokens && this.state.availableTokens.length > 0 && (\n                    <Box mb={2}>\n                      <Flex justifyContent={'center'} my={2}>\n                        <Image src={ globalConfigs.payments.providers[this.state.selectedProvider].imageSrc } height={'35px'} />\n                      </Flex>\n                      <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                        Choose which token do you want to buy:\n                      </Text>\n                      <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                      {\n                        this.state.availableTokens.map((token,i) => {\n                          const imageSrc = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'icon']) || `images/tokens/${token}.svg`;\n                          return (\n                            <ImageButton key={`token_${token}`} imageSrc={imageSrc} caption={token} imageProps={{p:[2,3],height:'80px'}} handleClick={ e => { this.selectToken(e,token); } } />\n                          );\n                        })\n                      }\n                      </Flex>\n                    </Box>\n                  )\n                }\n              </Flex>\n            </Flex>\n          )\n      }\n        {\n          this.props.showInline && this.state.selectedToken !== null  && (this.props.buyToken === null || this.state.selectedMethod !== null) && (\n            <Flex\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <Button\n                my={2}\n                mx={[0, 2]}\n                size={'medium'}\n                borderRadius={4}\n                mainColor={'blue'}\n                onClick={ e => this.goBack(e) }\n              >\n                GO BACK\n              </Button>\n            </Flex>\n          )\n        }\n      </Box>\n    );\n\n    if (this.props.showInline){\n      return (\n        <InnerComponent\n          {...this.props}\n        />\n      );\n    }\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.closeModal}>\n          <ModalCard.Header title={title}>\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <InnerComponent/>\n          </ModalCard.Body>\n          <ModalCard.Footer>\n            <Flex px={[2,0]} flexDirection={['column', 'row']} width={1} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                onClick={ e => this.closeModal(e) }\n                size={this.props.isMobile ? 'small' : 'medium'}\n              >\n              CLOSE\n              </Button>\n              {\n                this.state.selectedToken !== null && (this.props.buyToken === null || this.state.selectedMethod !== null) && (\n                  <Button\n                    my={2}\n                    mx={[0, 2]}\n                    borderRadius={4}\n                    onClick={ e => this.goBack(e) }\n                    className={styles.gradientButton}\n                    size={this.props.isMobile ? 'small' : 'medium'}\n                  >\n                    GO BACK\n                  </Button>\n                )\n              }\n            </Flex>\n          </ModalCard.Footer>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default BuyModal;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"defaultOpacity\":\"DashboardCard_defaultOpacity__1B1rs\",\"hidden\":\"DashboardCard_hidden__8pO5t\",\"interactive\":\"DashboardCard_interactive__2adxr\",\"rainbow\":\"DashboardCard_rainbow__3HCI7\",\"disabled\":\"DashboardCard_disabled__uqHO2\"};","import React, { Component } from 'react';\nimport styles from './DashboardCard.module.scss';\nimport { Flex, Icon, Heading, Card, Tooltip } from \"rimble-ui\";\n\nclass DashboardCard extends Component {\n\n  state = {\n    mouseOver:false\n  }\n\n  setMouseOver(mouseOver){\n    this.setState({\n      mouseOver\n    });\n  }\n\n  render() {\n    const isDisabled = this.props.isDisabled;\n    const isActive = this.props.isActive && !isDisabled;\n    const isInteractive = this.props.isInteractive && !isDisabled;\n    const isVisible = typeof this.props.isVisible !== 'undefined' ? this.props.isVisible : true;\n    const isRainbow = typeof this.props.isRainbow !== 'undefined' ? this.props.isRainbow : false;\n\n    const cardProps = {\n      p:0,\n      border:1,\n      boxShadow:1,\n      borderRadius:2,\n      borderColor:null,\n      position:'relative',\n      minHeight:'initial',\n      backgroundColor:'cardBg'\n    };\n\n    if (isActive || (isInteractive && this.state.mouseOver)){\n      cardProps.border = 2;\n      cardProps.boxShadow = null;\n      cardProps.backgroundColor = 'cardBgHover';\n    }\n\n    // Replace props\n    if (this.props.cardProps && Object.keys(this.props.cardProps).length){\n      Object.keys(this.props.cardProps).forEach(p => {\n        cardProps[p] = this.props.cardProps[p];\n      });\n    }\n\n    const className = [\n      styles.defaultOpacity,\n      isActive ? styles.active : null,\n      !isVisible ? styles.hidden : null,\n      isRainbow ? styles.rainbow : null,\n      isDisabled ? styles.disabled : null,\n      isInteractive ? styles.interactive : null,\n    ];\n\n    if (this.props.className && styles[this.props.className]){\n      className.push(styles[this.props.className]);\n    }\n\n    return (\n      <Card\n        {...cardProps}\n        className={className}\n        onClick={this.props.handleClick}\n        onMouseOut={(e) => this.setMouseOver(false)}\n        onMouseOver={(e) => this.setMouseOver(true)}\n      >\n        {\n          this.props.title && this.props.title.length>0 &&\n            <Flex\n              mt={[3,4]}\n              ml={[3,4]}\n              alignItems={'center'}\n              flexDirection={'row'}\n              {...this.props.titleParentProps}\n            >\n              <Heading.h4\n                fontWeight={4}\n                fontSize={[2,3]}\n                textAlign={'left'}\n                color={'dark-gray'}\n                lineHeight={'initial'}\n                {...this.props.titleProps}\n              >\n                {this.props.title}\n              </Heading.h4>\n              {\n                this.props.description && this.props.description.length>0 &&\n                  <Tooltip\n                    placement={'top'}\n                    message={this.props.description}\n                  >\n                    <Icon\n                      ml={2}\n                      name={\"Info\"}\n                      size={'1em'}\n                      color={'cellTitle'}\n                    />\n                  </Tooltip>\n              }\n            </Flex>\n        }\n        {this.props.children}\n      </Card>\n    );\n  }\n}\n\nexport default DashboardCard;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass TableRow extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n    const FieldComponent = this.props.fieldComponent;\n    const isInteractive = typeof this.props.handleClick === 'function';\n    return (\n      <DashboardCard\n        cardProps={{\n          mb:2,\n          width:1,\n          px:[2,4],\n          py:[2,'12px']\n        }}\n        id={this.props.cardId}\n        {...this.props.rowProps}\n        className={this.props.token}\n        isInteractive={isInteractive}\n        handleClick={ isInteractive ? e => this.props.handleClick(this.props) : null }\n      >\n        <Flex\n          flexDirection={'row'}\n          id={this.props.rowId}\n        >\n          {\n            this.props.cols.map((colInfo,colIndex) => {\n              const visibleOnDesktop = colInfo.visibleOnDesktop || false;\n              if (colInfo.visible === false || (colInfo.mobile === false && this.props.isMobile) || (colInfo.mobile === true && !visibleOnDesktop && !this.props.isMobile)){\n                return null;\n              }\n              return (\n                <Flex\n                  key={`col-${colIndex}`}\n                  {...colInfo.props}\n                >\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    {...colInfo.parentProps}\n                  >\n                    {\n                      colInfo.fields.map((fieldInfo,fieldIndex) => {\n                        if (fieldInfo.visible === false || (fieldInfo.mobile === false && this.props.isMobile)){\n                          return null;\n                        }\n                        const CustomComponent = fieldInfo.fieldComponent;\n\n                        let fieldProps = fieldInfo.props;\n\n                        // Merge with funcProps\n                        if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length>0){\n                          fieldProps = this.functionsUtil.replaceArrayPropsRecursive(fieldProps,fieldInfo.funcProps,this.props);\n                        }\n\n                        return (\n                          <Flex\n                            height={'100%'}\n                            flexDirection={'column'}\n                            alignItems={'flex-start'}\n                            justifyContent={'center'}\n                            {...fieldInfo.parentProps}\n                            style={fieldInfo.style || {\n                              overflow:'hidden'\n                            }}\n                            width={colInfo.fields.length>1 ? 'auto' : 1}\n                            id={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                            key={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                          >\n                            {\n                              CustomComponent ? (\n                                <CustomComponent\n                                  {...this.props}\n                                  {...fieldProps}\n                                />\n                              ) : (\n                                <FieldComponent\n                                  {...this.props}\n                                  fieldInfo={fieldInfo}\n                                  colProps={colInfo.props}\n                                  parentId={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                                />\n                              )\n                            }\n                          </Flex>\n                        );\n                      })\n                    }\n                  </Flex>\n                </Flex>\n              )\n            })\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default TableRow;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableCellHeader from '../TableCellHeader/TableCellHeader';\n\nclass TableHeader extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        px={[2,4]}\n        pb={[2,3]}\n        flexDirection={'row'}\n      >\n        {\n          this.props.cols.map((colInfo,colIndex) => {\n            // Skip non-mobile columns\n            const visibleOnDesktop = colInfo.visibleOnDesktop || false;\n            if (colInfo.visible === false || (colInfo.mobile === false && this.props.isMobile) || (colInfo.mobile === true && !visibleOnDesktop && !this.props.isMobile)){\n              return null;\n            }\n\n            return (colInfo.title && colInfo.title.length) ? (\n              <TableCellHeader\n                {...this.props}\n                {...colInfo.props}\n                desc={colInfo.desc}\n                title={colInfo.title}\n                key={`col-header-${colIndex}`}\n              >\n                {colInfo.title}\n              </TableCellHeader>\n            ) : (\n              <Flex key={`col-header-${colIndex}`} {...colInfo.props}></Flex>\n            )\n          })\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TableHeader;\n","import { Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass FastBalanceSelector extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n\n    let cardProps = {\n      p:2,\n      width:0.23,\n      onMouseDown:this.props.onMouseDown\n    };\n\n    let textProps = {\n      fontSize:2,\n      fontWeight:3,\n      textAlign:'center',\n      color:this.props.isActive ? 'copyColor' : 'cellText'\n    }\n\n    cardProps = this.functionsUtil.replaceArrayProps(cardProps,this.props.cardProps);\n    textProps = this.functionsUtil.replaceArrayProps(textProps,this.props.textProps);\n\n    return (\n      <DashboardCard\n        isInteractive={true}\n        cardProps={cardProps}\n        isActive={this.props.isActive}\n      >\n        <Text \n          {...textProps}\n        >\n          {this.props.percentage}%\n        </Text>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default FastBalanceSelector;","import React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport { Flex, Link, Icon, Text } from \"rimble-ui\";\nimport CustomField from '../CustomField/CustomField';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass CustomList extends Component {\n\n  state = {\n    page:1,\n    rowsPerPage:5,\n    totalPages:null,\n    processedRows:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.processRows();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const rowsChanged = JSON.stringify(prevProps.rows) !== JSON.stringify(this.props.rows);\n\n    if (rowsChanged){\n      this.setState({\n        page:1,\n      },()=>{\n        this.processRows();\n      })\n      return false;\n    }\n    const pageChanged = prevState.page !== this.state.page;\n    if (pageChanged){\n      this.processRows();\n    }\n  }\n\n  processRows = (page=null) => {\n    page = page ? page : this.state.page;\n\n    const totalRows = this.props.rows.length;\n    const totalPages = Math.ceil(totalRows/this.state.rowsPerPage);\n    \n    let processedRows = [];\n    if (this.props.paginationEnabled){\n      this.props.rows.forEach((row, i) => {\n        if (i>=((page-1)*this.state.rowsPerPage) && i<((page-1)*this.state.rowsPerPage)+this.state.rowsPerPage) {\n          processedRows.push(row);\n        }\n      });\n    } else {\n      processedRows = this.props.rows;\n    }\n\n    this.setState({\n      totalPages,\n      processedRows\n    });\n  }\n\n  prevPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.max(1,this.state.page-1);\n    this.setState({\n      page\n    });\n  }\n\n  nextPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.min(this.state.totalPages,this.state.page+1);this.processRows(page);\n    this.setState({\n      page\n    });\n  }\n\n  render() {\n\n    return (\n      <Flex id=\"custom-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"custom-list\" flexDirection={'column'}>\n          {\n            this.state.processedRows.map( (row,rowIndex) => {\n              return (\n                <TableRow\n                  row={row}\n                  {...this.props}\n                  key={`asset-${rowIndex}`}\n                  fieldComponent={CustomField}\n                  rowId={`asset-col-${rowIndex}`}\n                  cardId={`asset-card-${rowIndex}`}\n                />\n              );\n            })\n          }\n        </Flex>\n        {\n          this.props.paginationEnabled && (\n            <Flex\n              height={'50px'}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'flex-end'}\n              id={'transactions-list-pagination'}\n            >\n              <Flex mr={3}>\n                <Link mr={1} onClick={ e => this.prevPage(e) }>\n                  <Icon\n                    name={'KeyboardArrowLeft'}\n                    size={'2em'}\n                    color={ this.state.page>1 ? 'arrowActive' : 'arrowInactive' }\n                  />\n                </Link>\n                <Link onClick={ e => this.nextPage(e) }>\n                  <Icon\n                    name={'KeyboardArrowRight'}\n                    size={'2em'}\n                    color={ this.state.page<this.state.totalPages ? 'arrowActive' : 'arrowInactive' }\n                  />\n                </Link>\n              </Flex>\n              <Flex alignItems={'center'}>\n                <Text \n                  fontSize={1}\n                  fontWeight={3}\n                  color={'cellText'}\n                >\n                  Page {this.state.page} of {this.state.totalPages}\n                </Text>\n              </Flex>\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default CustomList;","const address = '0xf5dce57282a584d2746faf1593d3121fcac444dc'; // mainnet\nconst abi = [\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"name\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x06fdde03\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"approve\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x095ea7b3\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"reserveFactorMantissa\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x173b9904\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"borrowBalanceCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x17bfdfbc\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalSupply\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x18160ddd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"exchangeRateStored\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x182df0f5\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"src\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"dst\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transferFrom\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x23b872dd\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"pendingAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x26782247\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"decimals\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x313ce567\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOfUnderlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x3af9e669\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"getCash\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x3b1d21a2\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newComptroller\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setComptroller\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x4576b5db\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalBorrows\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x47bd3718\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"comptroller\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x5fe3b567\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"reduceAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"_reduceReserves\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x601a0bf1\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"initialExchangeRateMantissa\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x675d972c\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"accrualBlockNumber\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x6c540baf\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"underlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x6f307dc3\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOf\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x70a08231\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"totalBorrowsCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x73acee98\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalReserves\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x8f840ddd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"symbol\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x95d89b41\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"borrowBalanceStored\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x95dd9193\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"accrueInterest\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa6afed95\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"dst\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transfer\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa9059cbb\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"borrowIndex\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xaa5af0fd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"supplyRatePerBlock\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xae9d70b0\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"liquidator\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"seizeTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"seize\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xb2a02ff1\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newPendingAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setPendingAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xb71d1a0c\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"exchangeRateCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xbd6d894d\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"getAccountSnapshot\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xc37f68e2\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"allowance\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xdd62ed3e\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"_acceptAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xe9c714f2\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newInterestRateModel\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setInterestRateModel\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf2b3abbd\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"interestRateModel\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf3fdb15a\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"admin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf851a440\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"borrowRatePerBlock\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf8f9da28\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"_setReserveFactor\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xfca7820b\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"isCToken\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xfe9c44ae\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"name\": \"underlying_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"comptroller_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"interestRateModel_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"initialExchangeRateMantissa_\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"name_\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"symbol_\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"decimals_\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"constructor\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"constructor\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"interestAccumulated\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrowIndex\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"AccrueInterest\",\n    \"signature\": \"0x875352fb3fadeb8c0be7cbbe8ff761b308fa7033470cd0287f02f3436fd76cb9\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"minter\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"mintAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"mintTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Mint\",\n    \"signature\": \"0x4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"redeemer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"redeemAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"redeemTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Redeem\",\n    \"signature\": \"0xe5b754fb1abb7f01b499791d0b820ae3b6af3424ac1c59768edb53f4ec31a929\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrowAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"accountBorrows\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Borrow\",\n    \"signature\": \"0x13ed6866d4e1ee6da46f845c46d7e54120883d75c5ea9a2dacc1c4ca8984ab80\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"payer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"accountBorrows\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"RepayBorrow\",\n    \"signature\": \"0x1a2a22cb034d26d1854bdc6666a5b91fe25efbbb5dcad3b0355478d6f5c362a1\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"liquidator\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"cTokenCollateral\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"seizeTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"LiquidateBorrow\",\n    \"signature\": \"0x298637f684da70674f26509b10f07ec2fbc77a335ab1e7d6215a4b2484d8bb52\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldPendingAdmin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newPendingAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewPendingAdmin\",\n    \"signature\": \"0xca4f2f25d0898edd99413412fb94012f9e54ec8142f9b093e7720646a95b16a9\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldAdmin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewAdmin\",\n    \"signature\": \"0xf9ffabca9c8276e99321725bcb43fb076a6c66a54b7f21c4e8146d8519b417dc\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldComptroller\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newComptroller\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewComptroller\",\n    \"signature\": \"0x7ac369dbd14fa5ea3f473ed67cc9d598964a77501540ba6751eb0b3decf5870d\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldInterestRateModel\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newInterestRateModel\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewMarketInterestRateModel\",\n    \"signature\": \"0xedffc32e068c7c95dfd4bdfd5c4d939a084d6b11c4199eac8436ed234d72f926\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"NewReserveFactor\",\n    \"signature\": \"0xaaa68312e2ea9d50e16af5068410ab56e1a1fd06037b1a35664812c30f821460\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"admin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"reduceAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newTotalReserves\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"ReservesReduced\",\n    \"signature\": \"0x3bad0c59cf2f06e7314077049f48a93578cd16f5ef92329f1dab1420a99c177e\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"error\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"info\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"detail\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Failure\",\n    \"signature\": \"0x45b96fe442630264581b197e84bbada861235052c5a1aadfff9ea4e40a969aa0\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"name\": \"from\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"name\": \"to\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Transfer\",\n    \"signature\": \"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Approval\",\n    \"signature\": \"0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\",\n    \"type\": \"event\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"mintAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"mint\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa0712d68\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"redeemTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"redeem\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xdb006a75\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"redeemAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"redeemUnderlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x852a12e3\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrowAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"borrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xc5ebeaec\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"repayBorrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x0e752702\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"repayBorrowBehalf\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x2608f818\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"cTokenCollateral\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"liquidateBorrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf5e3c462\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }\n];\nexport default { address, abi };\n","const address = '0x5592EC0cfb4dbc12D3aB100b257153436a1f0FEa'; // rinkeby\nconst abi = [{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"stop\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"owner_\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"name_\",\"type\":\"bytes32\"}],\"name\":\"setName\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"stopped\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"authority_\",\"type\":\"address\"}],\"name\":\"setAuthority\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"push\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"move\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"start\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"authority\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"pull\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"symbol_\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"authority\",\"type\":\"address\"}],\"name\":\"LogSetAuthority\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"LogSetOwner\",\"type\":\"event\"},{\"anonymous\":true,\"inputs\":[{\"indexed\":true,\"name\":\"sig\",\"type\":\"bytes4\"},{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"foo\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"bar\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"fax\",\"type\":\"bytes\"}],\"name\":\"LogNote\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"dst\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}];\nexport default { address, abi };\n","import DAI from '../abis/tokens/DAI.json';\nimport CHAI from '../abis/chai/CHAI.json';\nimport cToken from '../abis/compound/cDAI';\nimport WETH from '../abis/tokens/WETH.json';\nimport USDC from '../abis/tokens/USDC.json';\nimport ERC20 from '../abis/tokens/ERC20.js';\nimport fToken from '../abis/fuse/fToken.json';\nimport aToken from '../abis/aave/AToken.json';\nimport yToken from '../abis/dydx/yToken.json';\nimport iToken from '../abis/fulcrum/iToken.json';\nimport crToken from '../abis/cream/crToken.json';\nimport IdleTokenV3 from '../contracts/IdleTokenV3.json';\nimport IdleTokenV4 from '../contracts/IdleTokenV4.json';\nimport IdleConverterPersonalSignV4 from '../contracts/IdleConverterPersonalSignV4.json';\n\nconst availableTokens = {\n  // Goerli\n  5:{\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x001B3B4d0F3714Ca98ba10F6042DaEbF0B1B7b6F',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x45a3598Ac8aDb2c6233979f710DC6a3D006238E0',\n        },\n        protocols:[\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            token:'amDAI',\n            address:'0x639cB7b21ee2161DF9c882483C9D55c90c20Ca3e',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n    },\n    risk:{\n\n    }\n  },\n  80001:{ // Mumbai-Testnet\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x001B3B4d0F3714Ca98ba10F6042DaEbF0B1B7b6F',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x45a3598Ac8aDb2c6233979f710DC6a3D006238E0',\n        },\n        protocols:[\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            token:'amDAI',\n            address:'0x639cB7b21ee2161DF9c882483C9D55c90c20Ca3e',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n      /*\n      USDC:{\n        abi:USDC,\n        token:'USDC',\n        decimals:6,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0xb7a4f3e9097c08da09517b5ab877f7a917224ede',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        ramp:{\n          swapAsset:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x0de23D3bc385a74E2196cfE827C8a640B8774B9f',\n        },\n        protocols:[\n          {\n            decimals:16,\n            enabled:true,\n            token:'cUSDC',\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x4a92e71227d294f041bd82dd8f78591b75140d63',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          }\n        ]\n      },\n      */\n    },\n    risk:{\n      \n    }\n  },\n  137:{ // Matic Mainnet\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x8f3Cf7ad23Cd3CaDbD9735AFf958023239c6A063',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x8a999F5A3546F8243205b2c0eCb0627cC10003ab',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:28,\n            name:'cream',\n            enabled:true,\n            token:'crDAI',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x4eCEDdF62277eD78623f9A94995c680f8fd6C00e',\n          },\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            token:'amDAI',\n            address:'0x27F8D03b3a2196956ED754baDc28D73be8830A6e',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n      USDC:{\n        abi:USDC,\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        ramp:{\n          swapAsset:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x1ee6470CD75D5686d0b2b90C0305Fa46fb0C89A1',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:16,\n            name:'cream',\n            enabled:true,\n            token:'crUSDC',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x73CF8c5D14Aa0EbC89f18272A568319F5BAB6cBD',\n          },\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            token:'amUSDC',\n            address:'0x1a13F4Ca1d028320A707D99520AbFefca3998b7F',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n      WETH:{\n        abi:WETH,\n        token:'WETH',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WETH'\n        },\n        ramp:{\n          swapAsset:'WETH'\n        },\n        defiPrime:{\n          token:'weth'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWETHYield',\n          address:'0xfdA25D931258Df948ffecb66b5518299Df6527C4',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:28,\n            name:'cream',\n            enabled:true,\n            token:'crWETH',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x7ef18d0a9C3Fb1A716FF6c3ED0Edf52a2427F716',\n          },\n          {\n            abi:aToken,\n            decimals:18,\n            enabled:true,\n            token:'aWETH',\n            name:'aavev2',\n            address:'0x28424507fefb6f7f8E9D3860F56504E4e5f5f390',\n            functions:{\n\n            }\n          },\n        ]\n      },\n    },\n    risk:{\n      \n    }\n  },\n  // Ethereum\n  42:{\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x4f96fe3b7a6cf9725f59d353f723c1bdb64ca6aa',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x295CA5bC5153698162dDbcE5dF50E436a58BA21e',\n        },\n        protocols:[\n          {\n            decimals:28,\n            token:'cDAI',\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0xf0d0eb522cfa50b716b3b1604c4f0fa6f04376ad',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          }\n        ]\n      },\n      USDC: {\n        abi: USDC,\n        token: 'USDC',\n        decimals: 6,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0xb7a4f3e9097c08da09517b5ab877f7a917224ede',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        ramp: {\n          swapAsset: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCYield',\n          address: '0x0de23D3bc385a74E2196cfE827C8a640B8774B9f',\n        },\n        protocols: [\n          {\n            decimals: 16,\n            enabled: true,\n            token: 'cUSDC',\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x4a92e71227d294f041bd82dd8f78591b75140d63',\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          }\n        ]\n      },\n    },\n    risk: {\n\n    }\n  },\n  1337: {\n    best: {\n      DAI: {\n        abi: DAI,\n        token: 'DAI',\n        decimals: 18,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'DAI'\n        },\n        ramp: {\n          swapAsset: 'DAI'\n        },\n        defiPrime: {\n          token: 'dai'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleDAIYield',\n          address: '0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your DAI with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleDAI',\n            name: 'idleDAIYieldV3',\n            address: '0x78751b12da02728f467a44eac40f5cbc16bd7934',\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token: 'yxDAIOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            token: 'idleDAI',\n            abi: IdleConverterPersonalSignV4,\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token: 'cDAI',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: iToken,\n            enabled: false,\n            name: 'fulcrum',\n            address: '0x493c57c4763932315a328269e1adad09653b9081',\n            token: 'iDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            abi: aToken,\n            name: 'aave',\n            enabled: true,\n            address: '0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token: 'aDAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            name: 'aavev2',\n            enabled: true,\n            address: '0x028171bCA77440897B824Ca71D1c56caC55b68A3',\n            token: 'aDAIv2',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: CHAI,\n            name: 'dsr',\n            enabled: true,\n            address: '0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token: 'CHAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: yToken,\n            name: 'dydx',\n            enabled: true,\n            address: '0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token: 'yxDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDC: {\n        abi: USDC,\n        decimals: 6,\n        token: 'USDC',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCYield',\n          address: '0x5274891bEC421B39D23760c04A6755eCB444797C',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your USDC with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDC',\n            name: 'idleUSDCYieldV3',\n            address: '0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6'\n          },\n          oldProtocols: [\n            {\n              abi: yToken,\n              name: 'dydx',\n              enabled: true,\n              address: '0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token: 'yxUSDCOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token: 'cUSDC',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token: 'iUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token: 'aUSDC',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            decimals: 18,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aUSDCv2',\n            address: '0xBcca60bB61934080951369a648Fb03DF4F96263C',\n            functions: {\n\n            }\n          },\n          {\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token: 'yxUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDT: {\n        decimals: 6,\n        token: 'USDT',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre: {\n          destCurrency: 'USDT'\n        },\n        defiPrime: {\n          token: 'usdt'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDTYield',\n          address: '0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your USDT with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDT',\n            name: 'idleUSDTYieldV3',\n            address: '0x63D27B3DA94A9E871222CB0A32232674B02D2f2D'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDT',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token: 'cUSDT',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token: 'iUSDT',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token: 'aUSDT',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            decimals: 18,\n            name: 'aavev2',\n            enabled: true,\n            token: 'aUSDTv2',\n            address: '0x3ed3b47dd13ec9a98b44e6204a523e766b225811',\n            functions: {\n\n            }\n          }\n        ]\n      },\n      SUSD: {\n        decimals: 18,\n        token: 'SUSD',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        skipMintForDeposit: false,\n        color: 'hsl(250, 31%, 15%)',\n        // icon:'images/tokens/SUSD.svg',\n        address: '0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n        wyre: {\n          destCurrency: 'SUSD'\n        },\n        defiPrime: {\n          token: 'susd'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleSUSDYield',\n          address: '0xf52cdcd458bf455aed77751743180ec4a595fd3f',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your SUSD with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleSUSD',\n            name: 'idleSUSDYieldV3',\n            address: '0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleSUSD',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x625aE63000f46200499120B906716420bd059240',\n            token: 'aSUSD',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'aavev2',\n            enabled: true,\n            abi: aToken,\n            address: '0x6c5024cd4f8a59110119c56f8933403a539555eb',\n            token: 'aSUSDv2',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      TUSD: {\n        decimals: 18,\n        token: 'TUSD',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        skipMintForDeposit: false,\n        color: 'hsl(217, 100%, 20%)',\n        address: '0x0000000000085d4780b73119b644ae5ecd22b376',\n        wyre: {\n          destCurrency: 'TUSD'\n        },\n        defiPrime: {\n          token: 'tusd'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleTUSDYield',\n          address: '0xc278041fDD8249FE4c1Aad1193876857EEa3D68c',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your TUSD with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleTUSD',\n            name: 'idleTUSDYieldV3',\n            address: '0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleTUSD',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x4da9b813057d04baef4e5800e36083717b4a0341',\n            token: 'aTUSD',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aTUSDv2',\n            address: '0x101cc05f4A51C0319f570d5E146a8C625198e636',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      WETH: {\n        abi: WETH,\n        token: 'WETH',\n        decimals: 18,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        deposit: {\n          minAmountForMint: 5000,\n        },\n        wyre: {\n          destCurrency: 'WETH'\n        },\n        ramp: {\n          swapAsset: 'WETH'\n        },\n        defiPrime: {\n          token: 'weth'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleWETHYield',\n          address: '0xC8E6CA6E96a326dC448307A5fDE90a0b21fd7f80',\n        },\n        protocols: [\n          {\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x4Ddc2D193948926D02f9B1fE9e1daa0718270ED5',\n            token: 'cETH',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: aToken,\n            name: 'aavev2',\n            enabled: true,\n            address: '0x030bA81f1c18d280636F32af80b9AAd02Cf0854e',\n            token: 'aWETH',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n        ]\n      },\n      WBTC: {\n        decimals: 8,\n        token: 'WBTC',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(29, 81%, 59%)',\n        address: '0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        deposit: {\n          minAmountForMint: 5000,\n        },\n        wyre: {\n          destCurrency: 'WBTC'\n        },\n        defiPrime: {\n          token: 'wbtc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleWBTCYield',\n          address: '0x8C81121B15197fA0eEaEE1DC75533419DcfD3151',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your WBTC with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleWBTC',\n            name: 'idleWBTCYieldV3',\n            address: '0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleWBTC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            enabled: true,\n            token: 'cWBTC',\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0xccF4429DB6322D5C611ee964527D42E5d685DD6a',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: iToken,\n            decimals: 18,\n            token: 'iWBTC',\n            enabled: false,\n            name: 'fulcrum',\n            address: '0xba9262578efef8b3aff7f60cd629d6cc8859c8b5',\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            abi: aToken,\n            name: 'aave',\n            enabled: true,\n            token: 'aWBTC',\n            address: '0xfc4b8ed459e00e5400be803a9bb3954234fd50e3',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aWBTCv2',\n            address: '0x9ff58f4fFB29fA2266Ab25e75e2A8b3503311656',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      RAI: {\n        deposit: {},\n        token: 'RAI',\n        decimals: 18,\n        enabled: true,\n        abi: ERC20.abi,\n        enabledEnvs: [],\n        govTokensDisabled: false,\n        color: 'hsl(169,42%,37%)',\n        icon: 'images/tokens/RAI.png',\n        address: '0x03ab458634910aad20ef5f1c8ee96f1d6ac54919',\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleRAIYield',\n          address: '0x5C960a3DCC01BE8a0f49c02A8ceBCAcf5D07fABe',\n        },\n        protocols: [\n          {\n            abi: crToken,\n            decimals: 28,\n            enabled: true,\n            name: 'cream',\n            token: 'crRAI',\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0xf8445c529d363ce114148662387eba5e62016e20',\n          },\n          {\n            abi: fToken,\n            decimals: 28,\n            name: 'fuse',\n            token: 'fRAI',\n            enabled: true,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0x752F119bD4Ee2342CE35E2351648d21962c7CAfE',\n          }\n        ]\n      },\n      FEI: {\n        deposit: {},\n        token: 'FEI',\n        decimals: 18,\n        enabled: true,\n        abi: ERC20.abi,\n        enabledEnvs: [],\n        govTokensDisabled: false,\n        color: 'hsl(158, 64%, 37%)',\n        address: '0x956f47f50a910163d8bf957cf5846d573e7f87ca',\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleFEIYield',\n          address: '0xb2d5CB72A621493fe83C6885E4A776279be595bC',\n        },\n        protocols: [\n          {\n            abi: crToken,\n            decimals: 28,\n            enabled: true,\n            name: 'cream',\n            token: 'crFEI',\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0x8C3B7a4320ba70f8239F83770c4015B5bc4e6F91',\n          },\n          {\n            abi: fToken,\n            decimals: 28,\n            name: 'fuse',\n            token: 'fFEI',\n            enabled: true,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0xd8553552f8868C1Ef160eEdf031cF0BCf9686945',\n          }\n        ]\n      },\n    },\n    risk: {\n      DAI: {\n        abi: DAI,\n        decimals: 18,\n        token: 'DAI',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n        wyre: {\n          destCurrency: 'DAI'\n        },\n        ramp: {\n          swapAsset: 'DAI'\n        },\n        defiPrime: {\n          token: 'dai'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleDAISafe',\n          address: '0xa14ea0e11121e6e951e87c66afe460a00bcd6a16'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleDAI',\n            name: 'idleDAISafeV3',\n            address: '0x1846bdfDB6A0f5c473dEc610144513bd071999fB'\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token: 'yxDAIOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleDAI',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token: 'cDAI',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x493c57c4763932315a328269e1adad09653b9081',\n            token: 'iDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token: 'aDAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'dsr',\n            enabled: true,\n            abi: CHAI,\n            address: '0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token: 'CHAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token: 'yxDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDC: {\n        abi: USDC,\n        decimals: 6,\n        token: 'USDC',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCSafe',\n          address: '0x3391bc034f2935ef0e1e41619445f998b2680d35'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDC',\n            name: 'idleUSDCSafeV3',\n            address: '0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token: 'yxUSDCOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token: 'cUSDC',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token: 'iUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token: 'aUSDC',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token: 'yxUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDT: {\n        decimals: 6,\n        token: 'USDT',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre: {\n          destCurrency: 'USDT'\n        },\n        defiPrime: {\n          token: 'usdt'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDTSafe',\n          address: '0x28fAc5334C9f7262b3A3Fe707e250E01053e07b5'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDT',\n            name: 'idleUSDTSafeV3',\n            address: '0x42740698959761baf1b06baa51efbd88cb1d862b'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleDAI',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token: 'cUSDT',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token: 'iUSDT',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token: 'aUSDT',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      }\n    }\n  },\n  1: { // Mainnet\n    best: {\n      DAI: {\n        abi: DAI,\n        token: 'DAI',\n        decimals: 18,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'DAI'\n        },\n        ramp: {\n          swapAsset: 'DAI'\n        },\n        defiPrime: {\n          token: 'dai'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleDAIYield',\n          address: '0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your DAI with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleDAI',\n            name: 'idleDAIYieldV3',\n            address: '0x78751b12da02728f467a44eac40f5cbc16bd7934',\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token: 'yxDAIOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            token: 'idleDAI',\n            abi: IdleConverterPersonalSignV4,\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.9,\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token: 'cDAI',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: iToken,\n            enabled: false,\n            name: 'fulcrum',\n            address: '0x493c57c4763932315a328269e1adad09653b9081',\n            token: 'iDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.4,\n            abi: aToken,\n            name: 'aave',\n            enabled: true,\n            address: '0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token: 'aDAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.4,\n            abi: aToken,\n            name: 'aavev2',\n            enabled: true,\n            address: '0x028171bCA77440897B824Ca71D1c56caC55b68A3',\n            token: 'aDAIv2',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: CHAI,\n            name: 'dsr',\n            enabled: true,\n            address: '0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token: 'CHAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.7,\n            abi: yToken,\n            name: 'dydx',\n            enabled: true,\n            address: '0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token: 'yxDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDC: {\n        abi: USDC,\n        decimals: 6,\n        token: 'USDC',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCYield',\n          address: '0x5274891bEC421B39D23760c04A6755eCB444797C',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your USDC with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDC',\n            name: 'idleUSDCYieldV3',\n            address: '0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6'\n          },\n          oldProtocols: [\n            {\n              abi: yToken,\n              name: 'dydx',\n              enabled: true,\n              address: '0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token: 'yxUSDCOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 8.0,\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token: 'cUSDC',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token: 'iUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.4,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token: 'aUSDC',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.4,\n            abi: aToken,\n            decimals: 18,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aUSDCv2',\n            address: '0xBcca60bB61934080951369a648Fb03DF4F96263C',\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.8,\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token: 'yxUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDT: {\n        decimals: 6,\n        token: 'USDT',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre: {\n          destCurrency: 'USDT'\n        },\n        defiPrime: {\n          token: 'usdt'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDTYield',\n          address: '0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your USDT with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDT',\n            name: 'idleUSDTYieldV3',\n            address: '0x63D27B3DA94A9E871222CB0A32232674B02D2f2D'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDT',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.9,\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token: 'cUSDT',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token: 'iUSDT',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.2,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token: 'aUSDT',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.2,\n            abi: aToken,\n            decimals: 18,\n            name: 'aavev2',\n            enabled: true,\n            token: 'aUSDTv2',\n            address: '0x3ed3b47dd13ec9a98b44e6204a523e766b225811',\n            functions: {\n\n            }\n          }\n        ]\n      },\n      SUSD: {\n        decimals: 18,\n        token: 'SUSD',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        skipMintForDeposit: false,\n        color: 'hsl(250, 31%, 15%)',\n        // icon:'images/tokens/SUSD.svg',\n        address: '0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n        wyre: {\n          destCurrency: 'SUSD'\n        },\n        defiPrime: {\n          token: 'susd'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleSUSDYield',\n          address: '0xf52cdcd458bf455aed77751743180ec4a595fd3f',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your SUSD with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleSUSD',\n            name: 'idleSUSDYieldV3',\n            address: '0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleSUSD',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.2,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x625aE63000f46200499120B906716420bd059240',\n            token: 'aSUSD',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.2,\n            name: 'aavev2',\n            enabled: true,\n            abi: aToken,\n            address: '0x6c5024cd4f8a59110119c56f8933403a539555eb',\n            token: 'aSUSDv2',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      TUSD: {\n        decimals: 18,\n        token: 'TUSD',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        skipMintForDeposit: false,\n        color: 'hsl(217, 100%, 20%)',\n        address: '0x0000000000085d4780b73119b644ae5ecd22b376',\n        wyre: {\n          destCurrency: 'TUSD'\n        },\n        defiPrime: {\n          token: 'tusd'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleTUSDYield',\n          address: '0xc278041fDD8249FE4c1Aad1193876857EEa3D68c',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your TUSD with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleTUSD',\n            name: 'idleTUSDYieldV3',\n            address: '0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleTUSD',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.8,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x4da9b813057d04baef4e5800e36083717b4a0341',\n            token: 'aTUSD',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.8,\n            abi: aToken,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aTUSDv2',\n            address: '0x101cc05f4A51C0319f570d5E146a8C625198e636',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      WETH: {\n        abi: WETH,\n        token: 'WETH',\n        decimals: 18,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        deposit: {\n          minAmountForMint: 5000,\n        },\n        wyre: {\n          destCurrency: 'WETH'\n        },\n        ramp: {\n          swapAsset: 'WETH'\n        },\n        defiPrime: {\n          token: 'weth'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleWETHYield',\n          address: '0xC8E6CA6E96a326dC448307A5fDE90a0b21fd7f80',\n        },\n        protocols: [\n          {\n            defiScore: 8.8,\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x4Ddc2D193948926D02f9B1fE9e1daa0718270ED5',\n            token: 'cETH',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 8.3,\n            abi: aToken,\n            name: 'aavev2',\n            enabled: true,\n            address: '0x030bA81f1c18d280636F32af80b9AAd02Cf0854e',\n            token: 'aWETH',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n        ]\n      },\n      WBTC: {\n        decimals: 8,\n        token: 'WBTC',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(29, 81%, 59%)',\n        address: '0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        deposit: {\n          minAmountForMint: 5000,\n        },\n        wyre: {\n          destCurrency: 'WBTC'\n        },\n        defiPrime: {\n          token: 'wbtc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleWBTCYield',\n          address: '0x8C81121B15197fA0eEaEE1DC75533419DcfD3151',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your WBTC with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleWBTC',\n            name: 'idleWBTCYieldV3',\n            address: '0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleWBTC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 8.9,\n            enabled: true,\n            token: 'cWBTC',\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0xccF4429DB6322D5C611ee964527D42E5d685DD6a',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: iToken,\n            decimals: 18,\n            token: 'iWBTC',\n            enabled: false,\n            name: 'fulcrum',\n            address: '0xba9262578efef8b3aff7f60cd629d6cc8859c8b5',\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 8.3,\n            abi: aToken,\n            name: 'aave',\n            enabled: true,\n            token: 'aWBTC',\n            address: '0xfc4b8ed459e00e5400be803a9bb3954234fd50e3',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 8.3,\n            abi: aToken,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aWBTCv2',\n            address: '0x9ff58f4fFB29fA2266Ab25e75e2A8b3503311656',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      RAI: {\n        deposit: {},\n        token: 'RAI',\n        decimals: 18,\n        enabled: true,\n        abi: ERC20.abi,\n        enabledEnvs: [],\n        defiScoreDisabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(169,42%,37%)',\n        icon: 'images/tokens/RAI.png',\n        address: '0x03ab458634910aad20ef5f1c8ee96f1d6ac54919',\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleRAIYield',\n          address: '0x5C960a3DCC01BE8a0f49c02A8ceBCAcf5D07fABe',\n        },\n        protocols: [\n          /*\n          {\n            abi:crToken,\n            decimals:28,\n            name:'cream',\n            token:'crRAI',\n            enabled:false,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0xf8445c529d363ce114148662387eba5e62016e20',\n          },\n          */\n          {\n            abi: fToken,\n            decimals: 28,\n            name: 'fuse',\n            token: 'fRAI',\n            enabled: true,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0x752F119bD4Ee2342CE35E2351648d21962c7CAfE',\n          },\n          {\n            abi: aToken,\n            decimals: 18,\n            token: 'aRAI',\n            enabled: true,\n            name: 'aavev2',\n            functions: {\n            },\n            address: '0xc9bc48c72154ef3e5425641a3c747242112a46af',\n          }\n        ]\n      },\n      FEI: {\n        deposit: {},\n        token: 'FEI',\n        decimals: 18,\n        enabled: true,\n        abi: ERC20.abi,\n        enabledEnvs: [],\n        defiScoreDisabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(158, 64%, 37%)',\n        address: '0x956f47f50a910163d8bf957cf5846d573e7f87ca',\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleFEIYield',\n          address: '0xb2d5CB72A621493fe83C6885E4A776279be595bC',\n        },\n        protocols: [\n          {\n            abi: crToken,\n            decimals: 28,\n            enabled: true,\n            name: 'cream',\n            token: 'crFEI',\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0x8C3B7a4320ba70f8239F83770c4015B5bc4e6F91',\n          },\n          {\n            abi: fToken,\n            decimals: 28,\n            name: 'fuse',\n            token: 'fFEI',\n            enabled: true,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0xd8553552f8868C1Ef160eEdf031cF0BCf9686945',\n          },\n          {\n            abi: aToken,\n            decimals: 18,\n            token: 'aFEI',\n            enabled: true,\n            functions: {},\n            name: 'aavev2',\n            address: '0x683923dB55Fead99A79Fa01A27EeC3cB19679cC3',\n          }\n        ]\n      },\n    },\n    risk: {\n      DAI: {\n        abi: DAI,\n        decimals: 18,\n        token: 'DAI',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n        wyre: {\n          destCurrency: 'DAI'\n        },\n        ramp: {\n          swapAsset: 'DAI'\n        },\n        defiPrime: {\n          token: 'dai'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleDAISafe',\n          address: '0xa14ea0e11121e6e951e87c66afe460a00bcd6a16'\n        },\n        canDeposit: {\n          enabled: false,\n          disabledMessageRedeemKey: 'riskAdjustedDisabledMessageRedeem',\n          disabledMessageDepositKey: 'riskAdjustedDisabledMessageDeposit'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleDAI',\n            name: 'idleDAISafeV3',\n            address: '0x1846bdfDB6A0f5c473dEc610144513bd071999fB'\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token: 'yxDAIOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleDAI',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.9,\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token: 'cDAI',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x493c57c4763932315a328269e1adad09653b9081',\n            token: 'iDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.4,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token: 'aDAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'dsr',\n            enabled: true,\n            abi: CHAI,\n            address: '0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token: 'CHAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.7,\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token: 'yxDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDC: {\n        abi: USDC,\n        decimals: 6,\n        token: 'USDC',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCSafe',\n          address: '0x3391bc034f2935ef0e1e41619445f998b2680d35'\n        },\n        canDeposit: {\n          enabled: false,\n          disabledMessageRedeemKey: 'riskAdjustedDisabledMessageRedeem',\n          disabledMessageDepositKey: 'riskAdjustedDisabledMessageDeposit'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDC',\n            name: 'idleUSDCSafeV3',\n            address: '0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token: 'yxUSDCOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 8.0,\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token: 'cUSDC',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token: 'iUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.4,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token: 'aUSDC',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.8,\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token: 'yxUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDT: {\n        decimals: 6,\n        token: 'USDT',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre: {\n          destCurrency: 'USDT'\n        },\n        defiPrime: {\n          token: 'usdt'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDTSafe',\n          address: '0x28fAc5334C9f7262b3A3Fe707e250E01053e07b5'\n        },\n        canDeposit: {\n          enabled: false,\n          disabledMessageRedeemKey: 'riskAdjustedDisabledMessageRedeem',\n          disabledMessageDepositKey: 'riskAdjustedDisabledMessageDeposit'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDT',\n            name: 'idleUSDTSafeV3',\n            address: '0x42740698959761baf1b06baa51efbd88cb1d862b'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleDAI',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.9,\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token: 'cUSDT',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token: 'iUSDT',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.2,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token: 'aUSDT',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      }\n    }\n  }\n};\n\nexport default availableTokens;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n// import TokenWrapper from '../TokenWrapper/TokenWrapper';\nimport GenericSelector from '../GenericSelector/GenericSelector';\n\nclass Staking extends Component {\n\n  state = {\n    tokenConfig:null,\n    contractInfo:null,\n    selectedToken:null,\n    selectedOption:null,\n    availableTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      const tokenConfig = this.props.toolProps.availableTokens[this.state.selectedToken];\n      const contractInfo = tokenConfig.contract;\n\n      // Init contracts\n      await Promise.all([\n        this.props.initContract(contractInfo.name,contractInfo.address,contractInfo.abi),\n        this.props.initContract(this.state.selectedToken,tokenConfig.address,tokenConfig.abi)\n      ]);\n\n      this.setState({\n        tokenConfig,\n        contractInfo\n      });\n    }\n  }\n\n  async loadData(){\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens).reduce( (output,token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      if (tokenConfig.enabled){\n        output.push({\n          value:token,\n          ...tokenConfig\n        });\n      }\n      return output;\n    },[]);\n\n    const selectedOption = availableTokens[0];\n    const selectedToken = selectedOption.value;\n\n    this.setState({\n      selectedToken,\n      selectedOption,\n      availableTokens\n    });\n  }\n\n  selectToken(selectedToken){\n    this.setState({\n      selectedToken\n    });\n  }\n\n  render() {\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const SelectedComponent = this.state.tokenConfig ? this.state.tokenConfig.component : null;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.availableTokens ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading tokens...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.availableTokens.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active tokens.\n                  </Text>\n                ) : (\n                  <Flex\n                    width={[1,0.46]}\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Box\n                      width={1}\n                    >\n                      <Text\n                        mb={1}\n                      >\n                        Select Token:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        name={'tokens'}\n                        isSearchable={false}\n                        options={this.state.availableTokens}\n                        CustomOptionValue={CustomOptionValue}\n                        onChange={this.selectToken.bind(this)}\n                        defaultValue={this.state.selectedOption}\n                        CustomValueContainer={CustomValueContainer}\n                      />\n                    </Box>\n                    {\n                      SelectedComponent && (\n                        <SelectedComponent\n                          {...this.props}\n                          tokenConfig={this.state.tokenConfig}\n                          contractInfo={this.state.contractInfo}\n                          selectedToken={this.state.selectedToken}\n                        />\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default Staking;","import React, { Component } from 'react';\nimport { Box, Flex, Text } from 'rimble-ui'\nimport Faquestion from '../Faquestion/Faquestion';\n\nclass GenericFaqs extends Component {\n  state = {\n    openedAnswer:null,\n    selectedSection:null\n  };\n  componentWillMount(){\n    const selectedSection = Object.keys(this.props.questions)[0];\n    this.setSection(selectedSection);\n  }\n  setSection(section) {\n    this.setState(state => ({...state, selectedSection: section, openedAnswer: null}));\n  }\n  toggleAnswer(e,i) {\n    e.preventDefault();\n    this.setState(state => ({...state, openedAnswer: state.openedAnswer===i ? null : i }));\n  };\n\n  render() {\n    const showSections = this.props.showSections === undefined || this.props.showSections;\n    return (\n      <Flex\n        width={1}\n        flexDirection={'column'}\n      >\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'column'}\n          justifyContent={\"center\"}\n        >\n          {\n            showSections && (\n              <Flex\n                mb={[3,4]}\n                px={[2,0]}\n                width={[1,3/5]}\n                flexDirection={'row'}\n                justifyContent={'space-between'}\n              >\n                {\n                  Object.keys(this.props.questions).map( (section,i) => {\n                    const isSelected = section === this.state.selectedSection;\n                    return (\n                      <Flex\n                        key={`section_${i}`}\n                        textAlign={'center'}\n                        justifyContent={'center'}\n                        width={1/Object.keys(this.props.questions).length}\n                        borderBottom={ isSelected ? '3px solid #0036ff' : 'none'}\n                      >\n                        <Text\n                          mb={1}\n                          fontWeight={3}\n                          fontSize={[2, 3]}\n                          textAlign={'center'}\n                          onClick={() => this.setSection(section)}\n                          color={isSelected ? 'blue' : 'copyColor'}\n                          className={['pointer', isSelected ? 'selected' : '']}\n                        >\n                          {section}\n                        </Text>\n                      </Flex>\n                    );\n                  })\n                }\n              </Flex>\n            )\n          }\n          <Box\n            width={1}\n          >\n            {\n              this.props.questions[this.state.selectedSection].map( (question,i) => (\n                <Faquestion\n                  key={`answer_${i}`}\n                  answer={question.a}\n                  pt={i === 0 ? 0 : ''}\n                  question={question.q}\n                  isOpened={this.state.openedAnswer === i}\n                  handleClick={ e => this.toggleAnswer(e,i) }\n                />\n              ))\n            }\n          </Box>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default GenericFaqs;","import React, { Component } from 'react';\nimport IconBox from '../IconBox/IconBox';\nimport ExtLink from '../ExtLink/ExtLink';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport { Flex, Box, Text, Icon, Link, Input, Checkbox } from \"rimble-ui\";\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\n\nclass SendTxWithBalance extends Component {\n\n  state = {\n    processing:{\n      txHash:null,\n      loading:false\n    },\n    inputValue:null,\n    txSucceeded:false,\n    permitEnabled:true,\n    showPermitBox:false,\n    approveEnabled:true,\n    buttonDisabled:true,\n    contractApproved:false,\n    fastBalanceSelector:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    await this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const actionChanged = prevProps.action !== this.props.action;\n    const accountChanged = prevProps.account !== this.props.account;\n    const tokenBalanceChanged = prevProps.tokenBalance !== this.props.tokenBalance;\n    const permitEnabledChanged = prevState.permitEnabled !== this.state.permitEnabled;\n    const approveEnabledChanged = prevProps.approveEnabled !== this.props.approveEnabled;\n    const contractChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    if (actionChanged || accountChanged || tokenBalanceChanged || contractChanged || approveEnabledChanged || tokenConfigChanged || permitEnabledChanged){\n      await this.loadData();\n    }\n\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    if (contractApprovedChanged){\n      if (typeof this.props.contractApproved === 'function'){\n        this.props.contractApproved(this.state.contractApproved);\n      }\n    }\n\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector !== prevState.fastBalanceSelector;\n    if (fastBalanceSelectorChanged || actionChanged){\n      this.setInputValue();\n    }\n\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue;\n    if (inputValueChanged){\n      this.checkButtonDisabled();\n    }\n  }\n\n  changeInputValue = (e,call_callback=true) => {\n    const fastBalanceSelector = null;\n    const inputValue = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n    if (this.state.inputValue !== inputValue){\n      this.setState((prevState) => ({\n        inputValue,\n        fastBalanceSelector\n      }),() => {\n        if (call_callback && typeof this.props.changeInputCallback === 'function'){\n          this.props.changeInputCallback(this.state.inputValue);\n        }\n      });\n    }\n  }\n\n  setInputValue = () => {\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n    const inputValue = this.props.tokenBalance && !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() ? this.functionsUtil.BNify(this.props.tokenBalance).times(selectedPercentage) : null;\n\n    this.setState((prevState) => ({\n      inputValue\n    }),() => {\n      if (typeof this.props.changeInputCallback === 'function'){\n        this.props.changeInputCallback(this.state.inputValue);\n      }\n    });\n  }\n\n  getFastBalanceSelector = () => {\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n    return this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n  }\n\n  showPermitBox(){\n    this.setState({\n      showPermitBox:true\n    });\n  }\n\n  togglePermitEnabled(permitEnabled){\n    this.setState({\n      permitEnabled\n    });\n  }\n\n  setFastBalanceSelector = (fastBalanceSelector) => {\n    this.setState({\n      fastBalanceSelector\n    });\n  }\n\n  checkButtonDisabled = (amount=null) => {\n    if (!amount){\n      amount = this.state.inputValue;\n    }\n    amount = this.functionsUtil.BNify(amount);\n    const buttonDisabled = amount.isNaN() || amount.lte(0) || amount.gt(this.props.tokenBalance);\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  approve = async () => {\n    // Check if the migration contract is approved\n    const contractApproved = await this.checkContractApproved();\n\n    if (!contractApproved){\n\n      const callbackApprove = (tx,error) => {\n        // Send Google Analytics event\n        const eventData = {\n          eventAction: 'approve',\n          eventCategory: 'CurveDeposit',\n          eventLabel: tx ? tx.status : null\n        };\n\n        const txSucceeded = tx && tx.status === 'success';\n\n        if (error){\n          eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n        }\n\n        // Send Google Analytics event\n        if (error || eventData.status !== 'error'){\n          this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n        }\n\n        this.setState((prevState) => ({\n          contractApproved: txSucceeded, // True\n          processing: {\n            ...prevState.processing,\n            txHash:null,\n            loading:false\n          }\n        }));\n\n        if (typeof this.props.callbackApprove === 'function' && txSucceeded){\n          this.props.callbackApprove(tx);\n        }\n      };\n\n      const callbackReceiptApprove = (tx) => {\n        const txHash = tx.transactionHash;\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            txHash\n          }\n        }));\n      };\n\n      // console.log('Approve',this.props.tokenConfig.token,this.props.contractInfo.address);\n\n      this.functionsUtil.enableERC20(this.props.tokenConfig.token,this.props.contractInfo.address,callbackApprove,callbackReceiptApprove);\n\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash:null,\n          loading:true\n        },\n        contractApproved:false\n      }));\n    } else {\n      this.setState({\n        contractApproved:true\n      });\n    }\n  }\n\n  executeTx = async () => {\n\n    const inputValue = this.state.inputValue ? this.functionsUtil.BNify(this.state.inputValue) : null;\n    if (!inputValue){\n      return false;\n    }\n\n    if (typeof this.props.checkLimit === 'function'){\n      const limitCheck = await this.props.checkLimit(inputValue);\n      if (!limitCheck){\n        return false;\n      }\n    }\n\n    const _amount = this.functionsUtil.normalizeTokenAmount(inputValue,this.props.tokenConfig.decimals);\n\n    // console.log('executeTx',params);\n\n    const callback = (tx,error) => {\n\n      const txSucceeded = tx && tx.status === 'success';\n\n      // Send Google Analytics event\n      if (tx){\n        const eventData = {\n          eventLabel: tx.status,\n          eventCategory: `CurveDeposit`,\n          eventValue: inputValue.toFixed(),\n          eventAction: this.props.tokenConfig.token,\n        };\n\n        if (error){\n          eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n        }\n\n        // Send Google Analytics event\n        if (error || eventData.status !== 'error'){\n          this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n        }\n      }\n\n      this.setState({\n        txSucceeded,\n        processing: {\n          txHash:null,\n          loading:false\n        }\n      });\n\n      if (txSucceeded){\n        // Reset input\n        this.changeInputValue({\n          target:{\n            value:0\n          }\n        },false);\n        this.setState({\n          showPermitBox:false\n        });\n        // Call upper component callback\n        if (typeof this.props.callback === 'function'){\n          this.props.callback(tx,_amount,params);\n        }\n      }\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    let params = null;\n\n    // Check contract approved without permit\n    let contractName = this.props.contractInfo.name;\n    const contractApproved = await this.checkContractApproved(false);\n\n    const permitEnabled = this.props.permitEnabled && this.state.permitEnabled && !contractApproved;\n    if (permitEnabled){\n      const signedParameters = await this.functionsUtil.signPermit(this.props.tokenConfig.token, this.props.account, contractName);\n      // console.log('signedParameters',signedParameters);\n      if (signedParameters){\n        params = this.props.getPermitTransactionParams(_amount,signedParameters);\n      }\n    } else {\n      params = this.props.getTransactionParams(_amount,this.state.fastBalanceSelector);\n    }\n\n    if (params){\n      let {\n        methodName,\n        methodParams\n      } = params;\n\n      const value = params.value || null;\n      contractName = params.contractName || this.props.contractInfo.name;\n\n      // console.log('SendTxWithBalance',contractName, methodName, methodParams, value);\n\n      this.props.contractMethodSendWrapper(contractName, methodName, methodParams, value, callback, callbackReceipt);\n\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          loading:true\n        }\n      }));\n    } else {\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          loading:false\n        }\n      }));\n    }\n  }\n\n  cancelTransaction = async () => {\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  async checkContractApproved(checkPermit=true){\n\n    if (checkPermit && this.props.permitEnabled && this.state.permitEnabled){\n      return true;\n    }\n\n    if (this.props.approveEnabled !== undefined && !this.props.approveEnabled){\n      return true;\n    }\n    \n    const contractApproved = await this.functionsUtil.checkTokenApproved(this.props.tokenConfig.token,this.props.contractInfo.address,this.props.account);\n    return contractApproved;\n  }\n\n  async loadData(){\n    const inputValue = null;\n    const fastBalanceSelector = null;\n    const approveEnabled = this.props.approveEnabled !== false;\n\n    if (this.props.contractInfo){\n      await this.props.initContract(this.props.contractInfo.name,this.props.contractInfo.address,this.props.contractInfo.abi);\n    }\n    // console.log('initContract',this.props.contractInfo);\n\n    const contractApproved = await this.checkContractApproved();\n\n    this.setState({\n      inputValue,\n      approveEnabled,\n      contractApproved,\n      fastBalanceSelector\n    });\n  }\n\n  approveCallback = () => {\n    this.loadData();\n  }\n\n  render() {\n\n    const viewOnly = this.props.connectorName === 'custom';\n    const action = this.props.action ? this.props.action : 'Deposit';\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'stretch'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          viewOnly ? (\n            <IconBox\n              cardProps={{\n                mt:3\n              }}\n              icon={'Visibility'}\n              text={'You are using Idle in \"Read-Only\" mode.<br />Logout and connect with your wallet to interact.'}\n            />\n          ) : !this.props.account ? (\n            <ConnectBox\n              {...this.props}\n            />\n          ) : this.props.tokenConfig && !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() && this.functionsUtil.BNify(this.props.tokenBalance).gt(0) ? (\n            <Box\n              width={1}\n            >\n              {\n                this.props.infoBox && (\n                  <IconBox\n                    cardProps={{\n                      mb:3\n                    }}\n                    {...this.props.infoBox}\n                  />\n                )\n              }\n              {\n                this.props.steps && this.props.steps.length>0 && (\n                  <DashboardCard\n                    cardProps={{\n                      p:3,\n                      px:[2,4]\n                    }}\n                  >\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                    > \n                      {\n                        this.props.steps.map( (step,stepIndex) => (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            key={`step_${stepIndex}`}\n                          >\n                            <Icon\n                              size={'1.5em'}\n                              name={ step.completed ? 'CheckBox' : step.icon}\n                              color={ step.completed ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                            />\n                            {\n                              step.link ? (\n                                <ExtLink\n                                  ml={2}\n                                  fontSize={2}\n                                  color={'blue'}\n                                  fontWeight={1}\n                                  href={step.link}\n                                  textAlign={'left'}\n                                  hoverColor={'blue'}\n                                >\n                                  {step.description}\n                                </ExtLink>\n                              ) : (\n                                <Text\n                                  ml={2}\n                                  fontSize={2}\n                                  fontWeight={1}\n                                  color={'cellText'}\n                                  textAlign={'left'}\n                                >\n                                  {step.description}\n                                </Text>\n                              )\n                            }\n                          </Flex>\n                        ) )\n                      }\n                    </Flex>\n                  </DashboardCard>\n                )\n              }\n              <Box\n                mt={2}\n                width={1}\n              >\n                {\n                  this.state.showPermitBox && this.props.permitEnabled ? (\n                    <DashboardCard\n                      cardProps={{\n                        py:3,\n                        px:3,\n                        mt:3,\n                        display:'flex',\n                        alignItems:'center',\n                        flexDirection:'column',\n                        justifyContent:'center',\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          name={'Warning'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={1}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Approve and Deposit in a single transaction is supported for this transaction, disable this feature and try again if you can't deposit.\n                        </Text>\n                      </Flex>\n                      <Checkbox\n                        mt={1}\n                        required={false}\n                        checked={this.state.permitEnabled}\n                        label={`Approve and Deposit in a single transaction`}\n                        onChange={ e => this.togglePermitEnabled(e.target.checked) }\n                      />\n                    </DashboardCard>\n                  ) : !this.state.showPermitBox && this.props.permitEnabled && (\n                    <Flex\n                      p={2}\n                      mt={3}\n                      width={1}\n                      borderRadius={2}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'center'}\n                      backgroundColor={'DashboardCard'}\n                      border={`1px solid ${this.props.theme.colors.primary}`}\n                    >\n                      <Link\n                        textAlign={'center'}\n                        hoverColor={'primary'}\n                        onClick={this.showPermitBox.bind(this)}\n                      >\n                        Having trouble with the Permit signature?\n                      </Link>\n                      <Icon\n                        ml={1}\n                        size={'1em'}\n                        name={'Warning'}\n                        color={'primary'}\n                      />\n                    </Flex>\n                  )\n                }\n              </Box>\n              {\n                this.state.approveEnabled && !this.state.contractApproved ?\n                  this.state.processing.loading ? (\n                    <Flex\n                      mt={3}\n                      flexDirection={'column'}\n                    >\n                      <TxProgressBar\n                        {...this.props}\n                        waitText={`Approve estimated in`}\n                        hash={this.state.processing.txHash}\n                        endMessage={`Finalizing approve request...`}\n                        cancelTransaction={this.cancelTransaction.bind(this)}\n                      />\n                    </Flex>\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          name={'LockOpen'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                          dangerouslySetInnerHTML={{\n                            __html:this.props.approveDescription\n                          }}\n                        />\n                        <RoundButton\n                          buttonProps={{\n                            mt:2,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.approve.bind(this)}\n                        >\n                          Approve\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  )\n                : this.state.processing.loading ? (\n                  <Flex\n                    mt={3}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      {...this.props}\n                      hash={this.state.processing.txHash}\n                      endMessage={`Finalizing ${action} request...`}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                      waitText={`${this.functionsUtil.capitalize(action)} estimated in`}\n                    />\n                  </Flex>\n                ) : (\n                  <Box\n                    mt={2}\n                    width={1}\n                  >\n                    <Flex\n                      mt={2}\n                      mb={3}\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        mb={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={this.props.balanceSelectorInfo ? 'space-between' : 'flex-end'}\n                      >\n                        {\n                          this.props.balanceSelectorInfo && (\n                            <Flex\n                              width={1}\n                              maxWidth={'50%'}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                            >\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                textAlign={'left'}\n                                style={{\n                                  maxWidth:'100%',\n                                  overflow:'hidden',\n                                  whiteSpace:'nowrap',\n                                  textOverflow:'ellipsis'\n                                }}\n                                color={this.props.balanceSelectorInfo.color ? this.props.balanceSelectorInfo.color : 'copyColor'}\n                              >\n                                {this.props.balanceSelectorInfo.text}\n                              </Text>\n                            </Flex>\n                          )\n                        }\n                        {\n                          !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() && (\n                            <Flex\n                              width={1}\n                              maxWidth={'50%'}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'flex-end'}\n                            >\n                              <Link\n                                fontSize={1}\n                                fontWeight={3}\n                                color={'dark-gray'}\n                                textAlign={'right'}\n                                hoverColor={'copyColor'}\n                                onClick={ (e) => this.setFastBalanceSelector(100) }\n                                style={{\n                                  maxWidth:'100%',\n                                  overflow:'hidden',\n                                  whiteSpace:'nowrap',\n                                  textOverflow:'ellipsis'\n                                }}\n                              >\n                                Balance: {this.functionsUtil.BNify(this.props.tokenBalance).toFixed(this.props.isMobile ? 2 : 4)} {this.props.tokenConfig.token}\n                              </Link>\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                      <Input\n                        min={0}\n                        type={\"number\"}\n                        required={true}\n                        height={'3.4em'}\n                        borderRadius={2}\n                        fontWeight={500}\n                        borderColor={'cardBorder'}\n                        backgroundColor={'cardBg'}\n                        boxShadow={'none !important'}\n                        placeholder={`Insert amount`}\n                        onChange={this.changeInputValue.bind(this)}\n                        border={`1px solid ${this.props.theme.colors.divider}`}\n                        value={this.state.inputValue !== null ? this.functionsUtil.BNify(this.state.inputValue).toFixed() : ''}\n                      />\n                      <Flex\n                        mt={2}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        {\n                          [25,50,75,100].map( percentage => (\n                            <FastBalanceSelector\n                              percentage={percentage}\n                              key={`selector_${percentage}`}\n                              onMouseDown={()=>this.setFastBalanceSelector(percentage)}\n                              isActive={this.state.fastBalanceSelector === parseInt(percentage)}\n                            />\n                          ))\n                        }\n                      </Flex>\n                      <Flex\n                        mt={2}\n                        justifyContent={'center'}\n                      >\n                        <RoundButton\n                          handleClick={this.executeTx.bind(this)}\n                          buttonProps={Object.assign({\n                            mt:2,\n                            width:[1,1/2],\n                            style:{\n                              textTransform:'capitalize'\n                            },\n                            disabled:this.state.buttonDisabled||this.props.buttonDisabled\n                          },this.props.buttonProps)}\n                        >\n                          {this.props.action}\n                        </RoundButton>\n                      </Flex>\n                    </Flex>\n                  </Box>\n                )\n              }\n            </Box>\n          ) : this.props.children\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default SendTxWithBalance;","import React from \"react\";\nimport ModalCard from './ModalCard';\nimport { Text, Modal, Flex } from \"rimble-ui\";\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\nimport RoundButton from '../../RoundButton/RoundButton.js';\n\nclass LimitReachedModal extends React.Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  constructor(props) {\n    super(props);\n    this.loadUtils();\n  }\n\n  componentDidUpdate = async () => {\n    this.loadUtils();\n  }\n\n  closeModal = async () => {\n    this.props.closeModal();\n  }\n\n  render() {\n\n    return (\n      <Modal\n        isOpen={this.props.isOpen}\n      >\n        <ModalCard\n          maxWidth={['960px','650px']}\n          closeFunc={this.props.closeModal}\n        >\n          <ModalCard.Header\n            pt={3}\n            iconHeight={'40px'}\n            title={'Limit Reached'}\n            icon={'images/warning.svg'}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              width={1}\n              flexDirection={'column'}\n            >\n              <Text\n                fontSize={2}\n                textAlign={'left'}\n                color={'dark-gray'}\n              >\n                The pool has reached the limit size of {this.props.limit}! Please wait for the limit to be increased before trying to deposit again!\n              </Text>\n            </Flex>\n            <Flex\n              my={3}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <RoundButton\n                handleClick={this.closeModal}\n                buttonProps={{\n                  width:['100%','40%']\n                }}\n              >\n                Got it\n              </RoundButton>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default LimitReachedModal;","import IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport { Flex, Text, Image, Button } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\nimport TrancheField from '../TrancheField/TrancheField';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport ShareModal from '../utilities/components/ShareModal';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport LimitReachedModal from '../utilities/components/LimitReachedModal';\n\nclass TrancheDetails extends Component {\n\n  state = {\n    infoText:null,\n    canUnstake:null,\n    canWithdraw:null,\n    activeModal:null,\n    balanceProp:null,\n    tokenConfig:null,\n    contractInfo:null,\n    tranchePrice:null,\n    tokenBalance:null,\n    stakedBalance:null,\n    trancheBalance:null,\n    approveEnabled:null,\n    buttonDisabled:false,\n    approveDescription:null,\n    selectedAction:'deposit',\n    userHasAvailableFunds:false\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = this.props.account !== prevProps.account;\n    if (accountChanged){\n      this.loadData();\n    }\n\n    const selectedActionChange = prevState.selectedAction !== this.state.selectedAction;\n    if (selectedActionChange){\n      this.loadActionData();\n    }\n  }\n\n  async loadData(){\n\n    if (!this.props.account){\n      return null;\n    }\n\n    const [\n      // blockNumber,\n      tokenBalance,\n      trancheBalance,\n      // cdoCoolingPeriod,\n      // latestHarvestBlock,\n      // stakeCoolingPeriod,\n      // rewardsTokensInfo,\n      // userStakeBlock,\n      stakedBalance,\n      trancheAPY,\n      tranchePrice\n    ] = await Promise.all([\n      // this.functionsUtil.getBlockNumber(),\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.getTokenBalance(this.props.trancheConfig.name,this.props.account),\n      // this.functionsUtil.genericContractCall(this.props.tokenConfig.CDO.name,'coolingPeriod'),\n      // this.functionsUtil.genericContractCall(this.props.tokenConfig.CDO.name,'latestHarvestBlock'),\n      // this.functionsUtil.genericContractCall(this.props.trancheConfig.CDORewards.name,'coolingPeriod'),\n      // this.functionsUtil.getTrancheRewardTokensInfo(this.props.tokenConfig,this.props.trancheConfig),\n      // this.functionsUtil.genericContractCall(this.props.trancheConfig.CDORewards.name,'usersStakeBlock',[this.props.account]),\n      this.functionsUtil.getTrancheStakedBalance(this.props.trancheConfig.CDORewards.name,this.props.account,this.props.trancheConfig.CDORewards.decimals),\n      this.functionsUtil.loadTrancheFieldRaw('trancheApy',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account),\n      this.functionsUtil.loadTrancheFieldRaw('lastTranchePrice',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account)\n    ]);\n\n    const userHasAvailableFunds = trancheBalance && trancheBalance.gt(0);\n\n\n    const canUnstake = true; // !stakeCoolingPeriod || this.functionsUtil.BNify(userStakeBlock).plus(stakeCoolingPeriod).lt(blockNumber);\n    const canWithdraw = true; // !cdoCoolingPeriod || !latestHarvestBlock || this.functionsUtil.BNify(latestHarvestBlock).plus(cdoCoolingPeriod).lt(blockNumber);\n    \n    // console.log('loadData',this.props.trancheConfig.tranche,blockNumber,cdoCoolingPeriod,latestHarvestBlock,stakeCoolingPeriod,userStakeBlock,canUnstake,canWithdraw);\n\n    this.setState({\n      trancheAPY,\n      canUnstake,\n      canWithdraw,\n      tokenBalance,\n      tranchePrice,\n      stakedBalance,\n      trancheBalance,\n      userHasAvailableFunds\n    }, () => {\n      this.loadActionData();\n    });\n  }\n\n  loadActionData(){\n    let infoBox = null;\n    let balanceProp = null;\n    let tokenConfig = null;\n    let contractInfo = null;\n    let approveEnabled = null;\n    let buttonDisabled = false;\n\n    const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',this.props.selectedTranche]);\n    let infoText = trancheDetails.description[this.state.selectedAction];\n\n    switch (this.state.selectedAction){\n      case 'deposit':\n        approveEnabled = true;\n        contractInfo = this.props.cdoConfig;\n        tokenConfig = this.props.tokenConfig;\n        balanceProp = this.state.tokenBalance;\n      break;\n      case 'stake':\n        approveEnabled = true;\n        tokenConfig = this.props.trancheConfig;\n        balanceProp = this.state.trancheBalance;\n        contractInfo = this.props.trancheConfig.CDORewards;\n      break;\n      case 'unstake':\n        approveEnabled = false;\n        tokenConfig = this.props.trancheConfig;\n        contractInfo = this.props.trancheConfig.CDORewards;\n        balanceProp = this.state.stakedBalance;\n        if (!this.state.canUnstake){\n          buttonDisabled = true;\n          infoText = trancheDetails.description.cantUnstake;\n        }\n      break;\n      case 'withdraw':\n        approveEnabled = false;\n        contractInfo = this.props.cdoConfig;\n        // tokenConfig = this.props.tokenConfig;\n        tokenConfig = this.props.trancheConfig;\n        balanceProp = this.state.trancheBalance;\n        // balanceProp = this.state.trancheBalance.times(this.state.tranchePrice);\n        // console.log('balanceProp',this.state.trancheBalance.toFixed(),this.state.tranchePrice.toFixed(),balanceProp.toFixed());\n        if (!this.state.canWithdraw){\n          buttonDisabled = true;\n          infoText = trancheDetails.description.cantWithdraw;\n          // infoBox = {\n          //   text:'You need to wait 1 block from the last ',\n          //   icon:'Warning',\n          //   iconProps:{\n          //     color:'cellText'\n          //   },\n          // };\n        }\n      break;\n      default:\n      break;\n    }\n\n    const approveDescription = `To ${this.state.selectedAction} your <strong>${tokenConfig.token}</strong> you need to approve the Smart-Contract first.`;\n\n    // console.log('loadActionData',approveEnabled);\n\n    this.setState({\n      infoBox,\n      infoText,\n      tokenConfig,\n      balanceProp,\n      contractInfo,\n      buttonDisabled,\n      approveEnabled,\n      approveDescription\n    })\n  }\n\n  changeInputCallback(){\n\n  }\n\n  contractApprovedCallback(){\n\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = null;\n\n    if (this.props.trancheConfig.functions[this.state.selectedAction]){\n      methodName = this.props.trancheConfig.functions[this.state.selectedAction];\n\n      // if (this.state.selectedAction === 'withdraw'){\n\n      // }\n\n      methodParams = [amount];\n    }\n\n    console.log('getTransactionParams',methodName,methodParams);\n\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async checkLimit(amount){\n    const trancheLimit = this.functionsUtil.BNify(this.props.tokenConfig.limit);\n    const poolSize = await this.functionsUtil.loadTrancheFieldRaw(`pool`,{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account);\n    if (poolSize.plus(amount).gt(trancheLimit)){\n      this.setState({\n        activeModal:'limit'\n      })\n      return false;\n    }\n    return true;\n  }\n\n  transactionSucceeded(){\n    this.loadData();\n    switch (this.state.selectedAction){\n      case 'stake':\n      case 'deposit':\n        this.setState({\n          activeModal:'share'\n        })\n      break;\n      default:\n      break;\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      activeModal: null\n    });\n  }\n\n  setSelectedAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  render() {\n    const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',this.props.selectedTranche]);\n    const otherTrancheType = this.props.selectedTranche === 'AA' ? 'BB' : 'AA';\n    const otherTrancheDetails = this.functionsUtil.getGlobalConfig(['tranches',otherTrancheType]);\n    const trancheLimit = this.functionsUtil.formatMoney(this.functionsUtil.BNify(this.props.tokenConfig.limit),0)+' '+this.props.selectedToken;\n    const stakingRewards = this.props.trancheConfig.CDORewards.stakingRewards.filter( t => t.enabled );\n    const stakingEnabled = this.state.userHasAvailableFunds && stakingRewards.length>0;\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        maxWidth={['100%','45em']}\n      >\n        {\n          !this.props.showSelectButton && (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'flex-end'}\n            >\n              <Button\n                mb={2}\n                size={'small'}\n                width={'auto'}\n                contrastColor={'cardBg'}\n                icon={otherTrancheDetails.icon}\n                mainColor={otherTrancheDetails.color.hex}\n                onClick={e => this.props.selectTrancheType(otherTrancheDetails.route)}\n              >\n                Switch to {otherTrancheDetails.name}\n              </Button>\n            </Flex>\n          )\n        }\n        <DashboardCard\n          cardProps={{\n            py:3,\n            px:3,\n            border:null,\n            // style:{\n            //   border:`1px solid ${trancheDetails.color.hex}`\n            // }\n          }}\n        >\n          <Flex\n            pb={2}\n            mb={2}\n            alignItems={'center'}\n            flexDirection={'row'}\n            borderBottom={`1px solid ${trancheDetails.color.hex}`}\n          > \n            <Image\n              mr={2}\n              src={trancheDetails.image}\n              size={this.props.isMobile ? '1.6em' : '1.8em'}\n            />\n            <Text\n              fontWeight={4}\n              fontSize={[3,4]}\n              color={'copyColor'}\n            >\n              {trancheDetails.name}\n            </Text>\n          </Flex>\n          <Flex\n            style={{\n              flexBasis:'0',\n              flex:'1 1 0px',\n              flexWrap:'wrap',\n              borderBottom:`1px solid ${this.props.theme.colors.divider}`\n            }}\n            alignItems={'flex-start'}\n            justifyContent={'flex-start'}\n          >\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Protocol\n              </Text>\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n              >\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'protocolIcon',\n                    props:{\n                      mr:2,\n                      height:['1.4em','2em']\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'protocolName',\n                    props:{\n                      fontSize:[2,3],\n                      color:'copyColor'\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n              </Flex>\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Token\n              </Text>\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n              >\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'tokenIcon',\n                    props:{\n                      mr:2,\n                      height:['1.4em','2em']\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'tokenName',\n                    props:{\n                      fontSize:[2,3],\n                      color:'copyColor'\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n              </Flex>\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <Text\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Pool Size\n              </Text>\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'tranchePool',\n                  props:{\n                    decimals:2,\n                    fontSize:[2,3],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n              alignItems={'flex-start'}\n            >\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Auto-Farming\n              </Text>\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'autoFarming',\n                  parentProps:{\n                    justifyContent:'flex-start'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Staking Rewards\n              </Text>\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'stakingRewards',\n                  props:{\n                    decimals:2,\n                    fontSize:[2,3],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <Text\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                APY\n              </Text>\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'trancheApy',\n                  props:{\n                    decimals:2,\n                    fontSize:[2,3],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n              {\n                stakingRewards.length>0 && (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Text\n                      fontSize={1}\n                      fontWeight={2}\n                      lineHeight={'1'}\n                      color={'cellText'}\n                    >\n                      +\n                    </Text>\n                    <TrancheField\n                      {...this.props}\n                      fieldInfo={{\n                        name:'trancheIDLELastHarvest',\n                        props:{\n                          decimals:4,\n                          fontSize:1,\n                          fontWeight:2,\n                          lineHeight:'1',\n                          color:'cellText'\n                        }\n                      }}\n                      token={this.props.selectedToken}\n                      tranche={this.props.selectedTranche}\n                      tokenConfig={this.props.tokenConfig}\n                      protocol={this.props.selectedProtocol}\n                      trancheConfig={this.props.trancheConfig}\n                    />\n                  </Flex>\n                )\n              }\n            </Flex>\n          </Flex>\n          {\n            /*\n            (this.functionsUtil.BNify(this.state.stakedBalance).gt(0) || this.functionsUtil.BNify(this.state.trancheBalance).gt(0)) && (\n              <Flex\n                py={2}\n                style={{\n                  flexBasis:'0',\n                  flex:'1 1 0px',\n                  flexWrap:'wrap',\n                  borderBottom:`1px solid ${this.props.theme.colors.divider}`\n                }}\n                alignItems={'flex-start'}\n                justifyContent={'flex-start'}\n              >\n                <Flex\n                  width={0.33}\n                  flexDirection={'column'}\n                >\n                  <Text\n                    fontWeight={3}\n                    fontSize={[1,2]}\n                    color={'cellText'}\n                  >\n                    Deposited\n                  </Text>\n                  <TrancheField\n                    {...this.props}\n                    fieldInfo={{\n                      name:'trancheDeposited',\n                      props:{\n                        decimals:4,\n                        fontWeight:2,\n                        fontSize:[2,4],\n                        color:'copyColor'\n                      }\n                    }}\n                    token={this.props.selectedToken}\n                    tranche={this.props.selectedTranche}\n                    tokenConfig={this.props.tokenConfig}\n                    protocol={this.props.selectedProtocol}\n                    trancheConfig={this.props.trancheConfig}\n                  />\n                </Flex>\n                <Flex\n                  width={0.33}\n                  flexDirection={'column'}\n                >\n                  <Text\n                    fontWeight={3}\n                    fontSize={[1,2]}\n                    color={'cellText'}\n                  >\n                    Staked\n                  </Text>\n                  <TrancheField\n                    {...this.props}\n                    fieldInfo={{\n                      name:'trancheStaked',\n                      props:{\n                        decimals:4,\n                        fontWeight:2,\n                        fontSize:[2,4],\n                        color:'copyColor'\n                      }\n                    }}\n                    token={this.props.selectedToken}\n                    tranche={this.props.selectedTranche}\n                    tokenConfig={this.props.tokenConfig}\n                    protocol={this.props.selectedProtocol}\n                    trancheConfig={this.props.trancheConfig}\n                  />\n                </Flex>\n                <Flex\n                  width={0.33}\n                  flexDirection={'column'}\n                >\n                  <Text\n                    fontWeight={3}\n                    fontSize={[1,2]}\n                    color={'cellText'}\n                  >\n                    Redeemable\n                  </Text>\n                  <TrancheField\n                    {...this.props}\n                    fieldInfo={{\n                      name:'trancheRedeemable',\n                      props:{\n                        decimals:4,\n                        fontWeight:2,\n                        fontSize:[2,4],\n                        color:'copyColor'\n                      }\n                    }}\n                    token={this.props.selectedToken}\n                    tranche={this.props.selectedTranche}\n                    tokenConfig={this.props.tokenConfig}\n                    protocol={this.props.selectedProtocol}\n                    trancheConfig={this.props.trancheConfig}\n                  />\n                </Flex>\n              </Flex>\n            )\n            */\n          }\n          {\n            this.props.showSelectButton ? (\n                <Button\n                  mt={3}\n                  width={1}\n                  contrastColor={'cardBg'}\n                  icon={trancheDetails.icon}\n                  mainColor={trancheDetails.color.hex}\n                  onClick={e => this.props.selectTrancheType(trancheDetails.route)}\n                >\n                  {\n                    this.props.tokenConfig ? `Go to ${trancheDetails.name}` : `Start with ${trancheDetails.name}`\n                  }\n                </Button>\n            ) : this.state.balanceProp && this.state.tokenConfig ? (\n              <Flex\n                width={1}\n                flexDirection={'column'}\n              >\n                <Flex\n                  mt={3}\n                  alignItems={'center'}\n                  flexDirection={'row'}\n                  justifyContent={'space-between'}\n                >\n                  <CardIconButton\n                    {...this.props}\n                    textProps={{\n                      fontSize:[1,2]\n                    }}\n                    cardProps={{\n                      px:3,\n                      py:2,\n                      width:0.32\n                    }}\n                    text={'Deposit'}\n                    iconColor={'deposit'}\n                    icon={'ArrowDownward'}\n                    iconBgColor={'#ced6ff'}\n                    isActive={ this.state.selectedAction === 'deposit' }\n                    handleClick={ e => this.setSelectedAction('deposit') }\n                  />\n                  {\n                    this.state.stakedBalance && this.functionsUtil.BNify(this.state.stakedBalance).gt(0) ? (\n                      <CardIconButton\n                        {...this.props}\n                        textProps={{\n                          fontSize:[1,2]\n                        }}\n                        cardProps={{\n                          px:3,\n                          py:2,\n                          width:0.32\n                        }}\n                        text={'Unstake'}\n                        icon={'LayersClear'}\n                        iconColor={'redeem'}\n                        iconBgColor={'#ceeff6'}\n                        isActive={ this.state.selectedAction === 'unstake' }\n                        handleClick={ e => this.setSelectedAction('unstake') }\n                      />\n                    ) : (\n                      <CardIconButton\n                        {...this.props}\n                        textProps={{\n                          fontSize:[1,2]\n                        }}\n                        cardProps={{\n                          px:3,\n                          py:2,\n                          width:0.32\n                        }}\n                        text={'Stake'}\n                        icon={'Layers'}\n                        iconColor={'deposit'}\n                        iconBgColor={'#ced6ff'}\n                        isDisabled={ !stakingEnabled }\n                        isActive={ this.state.selectedAction === 'stake' }\n                        handleClick={ e => this.state.userHasAvailableFunds ? this.setSelectedAction('stake') : null }\n                      />\n                    )\n                  }\n                  <CardIconButton\n                    {...this.props}\n                    textProps={{\n                      fontSize:[1,2]\n                    }}\n                    cardProps={{\n                      px:3,\n                      py:2,\n                      width:0.32\n                    }}\n                    text={'Withdraw'}\n                    icon={'ArrowUpward'}\n                    iconColor={'redeem'}\n                    iconBgColor={'#ceeff6'}\n                    isDisabled={ !this.state.userHasAvailableFunds }\n                    isActive={ this.state.selectedAction === 'withdraw' }\n                    handleClick={ e => this.state.userHasAvailableFunds ? this.setSelectedAction('withdraw') : null }\n                  />\n                </Flex>\n                {\n                  this.state.infoText && (\n                    <IconBox\n                      cardProps={{\n                        p:2,\n                        mt:3,\n                        width:1,\n                      }}\n                      isActive={true}\n                      isInteractive={false}\n                      iconProps={{\n                        size:'1.2em',\n                        color:'flashColor'\n                      }}\n                      textProps={{\n                        fontWeight:500,\n                        color:'flashColor',\n                        textAlign:'center',\n                        fontSize:['13px','15px']\n                      }}\n                      icon={'LightbulbOutline'}\n                      text={this.state.infoText}\n                    />\n                  )\n                }\n                <Flex\n                  mt={2}\n                >\n                  <SendTxWithBalance\n                    error={null}\n                    {...this.props}\n                    buttonProps={{\n                      width:[1,0.45]\n                    }}\n                    permitEnabled={false}\n                    tokenConfig={this.state.tokenConfig}\n                    tokenBalance={this.state.balanceProp}\n                    contractInfo={this.state.contractInfo}\n                    checkLimit={this.checkLimit.bind(this)}\n                    approveEnabled={this.state.approveEnabled}\n                    buttonDisabled={this.state.buttonDisabled}\n                    callback={this.transactionSucceeded.bind(this)}\n                    approveDescription={this.state.approveDescription}\n                    changeInputCallback={this.changeInputCallback.bind(this)}\n                    contractApproved={this.contractApprovedCallback.bind(this)}\n                    getTransactionParams={this.getTransactionParams.bind(this)}\n                    action={this.functionsUtil.capitalize(this.state.selectedAction)}\n                  >\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <BuyModal\n                        {...this.props}\n                        showInline={true}\n                        availableMethods={[]}\n                        buyToken={this.props.selectedToken}\n                      />\n                    </Flex>\n                  </SendTxWithBalance>\n                </Flex>\n              </Flex>\n            ) : !this.props.account ? (\n              <ConnectBox\n                {...this.props}\n              />\n            ) : (\n              <FlexLoader\n                flexProps={{\n                  mt:3,\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading Tranche Data...'}\n              />\n            )\n          }\n        </DashboardCard>\n        <LimitReachedModal\n          {...this.props}\n          limit={trancheLimit}\n          closeModal={this.resetModal}\n          isOpen={this.state.activeModal === 'limit'}\n        />\n        <ShareModal\n          confettiEnabled={true}\n          icon={`images/medal.svg`}\n          title={`Congratulations!`}\n          account={this.props.account}\n          closeModal={this.resetModal}\n          tokenName={this.props.selectedToken}\n          isOpen={this.state.activeModal === 'share'}\n          text={`You have successfully deposited in Idle!<br />Enjoy <strong>${this.state.trancheAPY ? this.state.trancheAPY.toFixed(2) : '0.00'}% APY</strong> on your <strong>${this.props.selectedToken}</strong>!`}\n          tweet={`I'm earning ${this.state.trancheAPY ? this.state.trancheAPY.toFixed(2) : '0.00'}% APY on my ${this.props.selectedToken} with @idlefinance tranches! Go to ${this.functionsUtil.getGlobalConfig(['baseURL'])}${this.props.selectedSection.route} and start earning now from your idle tokens!`}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default TrancheDetails;\n","import { Flex } from \"rimble-ui\";\nimport Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport CustomList from '../CustomList/CustomList';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TrancheHarvests extends Component {\n\n  state = {\n    rows:[]\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  async loadData(){\n    let rows = [];\n    const harvests = await this.functionsUtil.getTrancheHarvests(this.props.tokenConfig,this.props.trancheConfig);\n\n    await this.functionsUtil.asyncForEach(Object.keys(harvests), async (token) => {\n      const txs = harvests[token];\n      const tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',token]);\n      await this.functionsUtil.asyncForEach(txs, async (tx) => {\n        const tokenIcon = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${token}.svg`;\n        const blockInfo = await this.functionsUtil.getBlockInfo(tx.blockNumber);\n        const timeStamp = blockInfo.timestamp*1000;\n        const date = this.functionsUtil.strToMoment(timeStamp).format('YYYY/MM/DD HH:mm');\n        const amount = this.functionsUtil.fixTokenDecimals(tx.returnValues.amount||tx.returnValues.value,tokenConfig.decimals);\n        // console.log(token,date,amount.toString());\n        rows.push({\n          date,\n          token,\n          timeStamp,\n          tokenIcon,\n          hash:tx.transactionHash,\n          amount:this.functionsUtil.formatMoney(amount.toString(),8),\n          shortHash:this.functionsUtil.shortenHash(tx.transactionHash,10,6)\n        });\n      });\n    });\n\n    rows = rows.sort((a,b) => (parseInt(a.timeStamp) < parseInt(b.timeStamp) ? 1 : -1));\n\n    return this.setState({rows});\n  }\n\n  render() {\n    return this.state.rows.length>0 ? (\n      <Flex\n        mb={[0,4]}\n        width={1}\n        flexDirection={'column'}\n        id={'funds-overview-container'}\n      >\n        <Title my={[3,4]}>Harvests List</Title>\n        <CustomList\n          rows={this.state.rows}\n          paginationEnabled={true}\n          handleClick={ props => this.functionsUtil.openWindow(this.functionsUtil.getEtherscanTransactionUrl(props.row.hash)) }\n          cols={[\n            {\n              mobile:false,\n              title:'HASH',\n              props:{\n                width:[0.25,0.25]\n              },\n              fields:[\n                {\n                  type:'text',\n                  path:['shortHash'],\n                }\n              ]\n            },\n            {\n              title:'DATE',\n              props:{\n                width:[0.35,0.25],\n              },\n              fields:[\n                {\n                  type:'text',\n                  path:['date'],\n                }\n              ]\n            },\n            {\n              title:'TOKEN',\n              props:{\n                width:[0.35,0.25]\n              },\n              fields:[\n                {\n                  type:'image',\n                  props:{\n                    mr:2,\n                    size:this.props.isMobile ? '1.2em' : '1.8em'\n                  },\n                  path:['tokenIcon']\n                },\n                {\n                  type:'text',\n                  path:['token'],\n                }\n              ]\n            },\n            {\n              title:'AMOUNT',\n              props:{\n                width:[0.30,0.25],\n                justifyContent:['center','flex-start']\n              },\n              fields:[\n                {\n                  type:'text',\n                  path:['amount'],\n                  props:{\n                    decimals: this.props.isMobile ? 4 : 8\n                  }\n                },\n              ]\n            }\n          ]}\n          {...this.props}\n        />\n      </Flex>\n    ) : null;\n  }\n}\n\nexport default TrancheHarvests;\n","import IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\nimport TrancheField from '../TrancheField/TrancheField';\nimport { Flex, Text, Image, Box, Icon } from \"rimble-ui\";\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport ShareModal from '../utilities/components/ShareModal';\n// import StatsCardSmall from '../StatsCardSmall/StatsCardSmall';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport LimitReachedModal from '../utilities/components/LimitReachedModal';\n\nclass TrancheDetails extends Component {\n\n  state = {\n    infoText:null,\n    canUnstake:null,\n    canWithdraw:null,\n    activeModal:null,\n    actionLabel:null,\n    balanceProp:null,\n    tokenConfig:null,\n    contractInfo:null,\n    tranchePrice:null,\n    tokenBalance:null,\n    stakeEnabled:true,\n    stakedBalance:null,\n    unstakeEnabled:true,\n    trancheBalance:null,\n    stakingEnabled:true,\n    approveEnabled:null,\n    buttonDisabled:false,\n    selectedTranche:null,\n    availableTranches:null,\n    approveDescription:null,\n    selectedAction:'deposit',\n    selectedTrancheOption:null,\n    selectedStakeAction:'stake',\n    userHasAvailableFunds:false\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = this.props.account !== prevProps.account;\n    if (accountChanged){\n      this.loadData();\n    }\n\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const selectedStakeActionChanged = prevState.selectedStakeAction !== this.state.selectedStakeAction;\n    if (selectedActionChanged || selectedStakeActionChanged){\n      this.loadActionData();\n    }\n  }\n\n  async loadData(){\n\n    const [\n      // blockNumber,\n      tokenBalance,\n      trancheBalance,\n      // cdoCoolingPeriod,\n      // latestHarvestBlock,\n      // stakeCoolingPeriod,\n      // rewardsTokensInfo,\n      // userStakeBlock,\n      stakedBalance,\n      trancheAPY,\n      tranchePrice\n    ] = await Promise.all([\n      // this.functionsUtil.getBlockNumber(),\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.getTokenBalance(this.props.trancheConfig.name,this.props.account),\n      // this.functionsUtil.genericContractCall(this.props.tokenConfig.CDO.name,'coolingPeriod'),\n      // this.functionsUtil.genericContractCall(this.props.tokenConfig.CDO.name,'latestHarvestBlock'),\n      // this.functionsUtil.genericContractCall(this.props.trancheConfig.CDORewards.name,'coolingPeriod'),\n      // this.functionsUtil.getTrancheRewardTokensInfo(this.props.tokenConfig,this.props.trancheConfig),\n      // this.functionsUtil.genericContractCall(this.props.trancheConfig.CDORewards.name,'usersStakeBlock',[this.props.account]),\n      this.functionsUtil.getTrancheStakedBalance(this.props.trancheConfig.CDORewards.name,this.props.account,this.props.trancheConfig.CDORewards.decimals),\n      this.functionsUtil.loadTrancheFieldRaw('trancheApy',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account),\n      this.functionsUtil.loadTrancheFieldRaw('lastTranchePrice',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account)\n    ]);\n\n    const userHasAvailableFunds = trancheBalance && trancheBalance.gt(0);\n\n\n    const canUnstake = true; // !stakeCoolingPeriod || this.functionsUtil.BNify(userStakeBlock).plus(stakeCoolingPeriod).lt(blockNumber);\n    const canWithdraw = true; // !cdoCoolingPeriod || !latestHarvestBlock || this.functionsUtil.BNify(latestHarvestBlock).plus(cdoCoolingPeriod).lt(blockNumber);\n    \n    // console.log('loadData',this.props.trancheConfig.tranche,blockNumber,cdoCoolingPeriod,latestHarvestBlock,stakeCoolingPeriod,userStakeBlock,canUnstake,canWithdraw);\n\n    const availableTranches = Object.values(this.functionsUtil.getGlobalConfig(['tranches'])).map( trancheInfo => ({\n      value:trancheInfo.type,\n      icon:trancheInfo.image,\n      label:trancheInfo.name,\n      tranche:trancheInfo.type,\n      trancheConfig:this.props.tokenConfig[trancheInfo.type]\n    }));\n\n    const selectedTrancheOption = availableTranches.find( trancheInfo => trancheInfo.value === this.props.selectedTranche );\n    const selectedTranche = selectedTrancheOption.value;\n\n    const stakingRewards = this.props.trancheConfig.CDORewards.stakingRewards.filter( t => t.enabled );\n    let stakingEnabled = stakingRewards.length>0;\n    const stakeEnabled = stakingEnabled && userHasAvailableFunds;\n    const unstakeEnabled = stakedBalance && this.functionsUtil.BNify(stakedBalance).gt(0);\n\n    if (!stakingEnabled && unstakeEnabled){\n      stakingEnabled = true;\n    }\n\n    let selectedStakeAction = 'stake';\n    if (!stakeEnabled && unstakeEnabled){\n      selectedStakeAction = 'unstake';\n    }\n\n    this.setState({\n      trancheAPY,\n      canUnstake,\n      canWithdraw,\n      tokenBalance,\n      stakeEnabled,\n      tranchePrice,\n      stakedBalance,\n      stakingEnabled,\n      trancheBalance,\n      unstakeEnabled,\n      selectedTranche,\n      availableTranches,\n      selectedStakeAction,\n      selectedTrancheOption,\n      userHasAvailableFunds\n    }, () => {\n      this.loadActionData();\n    });\n  }\n\n  loadActionData(){\n    let infoBox = null;\n    let balanceProp = null;\n    let tokenConfig = null;\n    let contractInfo = null;\n    let approveEnabled = null;\n    let buttonDisabled = false;\n\n    let actionLabel = this.state.selectedAction;\n    const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',this.props.selectedTranche]);\n    let infoText = trancheDetails.description[this.state.selectedAction];\n\n    switch (this.state.selectedAction){\n      case 'deposit':\n        approveEnabled = true;\n        contractInfo = this.props.cdoConfig;\n        tokenConfig = this.props.tokenConfig;\n        balanceProp = this.state.tokenBalance;\n      break;\n      case 'stake':\n        actionLabel = this.state.selectedStakeAction;\n        switch (this.state.selectedStakeAction){\n          case 'stake':\n            approveEnabled = true;\n            tokenConfig = this.props.trancheConfig;\n            balanceProp = this.state.trancheBalance;\n            contractInfo = this.props.trancheConfig.CDORewards;\n          break;\n          case 'unstake':\n            approveEnabled = false;\n            tokenConfig = this.props.trancheConfig;\n            contractInfo = this.props.trancheConfig.CDORewards;\n            balanceProp = this.state.stakedBalance;\n            if (!this.state.canUnstake){\n              buttonDisabled = true;\n              infoText = trancheDetails.description.cantUnstake;\n            }\n          break;\n          default:\n          break;\n        }\n        if (this.state.stakingEnabled){\n          infoText = trancheDetails.description[this.state.selectedStakeAction];\n        } else {\n          infoText = null;\n        }\n      break;\n      case 'withdraw':\n        approveEnabled = false;\n        contractInfo = this.props.cdoConfig;\n        // tokenConfig = this.props.tokenConfig;\n        tokenConfig = this.props.trancheConfig;\n        balanceProp = this.state.trancheBalance;\n        // balanceProp = this.state.trancheBalance.times(this.state.tranchePrice);\n        // console.log('balanceProp',this.state.trancheBalance.toFixed(),this.state.tranchePrice.toFixed(),balanceProp.toFixed());\n        if (!this.state.canWithdraw){\n          buttonDisabled = true;\n          infoText = trancheDetails.description.cantWithdraw;\n          // infoBox = {\n          //   text:'You need to wait 1 block from the last ',\n          //   icon:'Warning',\n          //   iconProps:{\n          //     color:'cellText'\n          //   },\n          // };\n        }\n      break;\n      default:\n      break;\n    }\n\n    const approveDescription = tokenConfig ? `To ${this.state.selectedAction} your <strong>${tokenConfig.token}</strong> you need to approve the Smart-Contract first.` : null;\n\n    // console.log('loadActionData',approveEnabled);\n\n    this.setState({\n      infoBox,\n      infoText,\n      actionLabel,\n      tokenConfig,\n      balanceProp,\n      contractInfo,\n      buttonDisabled,\n      approveEnabled,\n      approveDescription\n    })\n  }\n\n  changeInputCallback(){\n\n  }\n\n  contractApprovedCallback(){\n\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = null;\n\n    if (this.props.trancheConfig.functions[this.state.selectedAction]){\n      methodName = this.props.trancheConfig.functions[this.state.selectedAction];\n\n      if (this.state.selectedAction === 'stake'){\n        methodName = this.props.trancheConfig.functions[this.state.selectedStakeAction];\n      }\n\n      methodParams = [amount];\n    }\n\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async checkLimit(amount){\n    const trancheLimit = this.functionsUtil.BNify(this.props.tokenConfig.limit);\n    const poolSize = await this.functionsUtil.loadTrancheFieldRaw(`pool`,{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account);\n    if (poolSize.plus(amount).gt(trancheLimit)){\n      this.setState({\n        activeModal:'limit'\n      })\n      return false;\n    }\n    return true;\n  }\n\n  transactionSucceeded(){\n    this.loadData();\n    switch (this.state.selectedAction){\n      case 'stake':\n      case 'deposit':\n        this.setState({\n          activeModal:'share'\n        })\n      break;\n      default:\n      break;\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      activeModal: null\n    });\n  }\n\n  setSelectedAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  setStakeAction(selectedStakeAction){\n    this.setState({\n      selectedStakeAction\n    });\n  }\n\n  selectTranche(trancheType){\n    // console.log('selectTranche',trancheType);\n    const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',trancheType]);\n    if (trancheDetails){\n      this.props.selectTrancheType(trancheDetails.route);\n    }\n  }\n\n  render() {\n\n    const isStake = this.state.selectedAction === 'stake';\n    const isDeposit = this.state.selectedAction === 'deposit';\n    const isWithdraw = this.state.selectedAction === 'withdraw';\n\n    const stakingRewards = this.props.trancheConfig.CDORewards.stakingRewards.filter( t => t.enabled );\n    const trancheLimit = this.functionsUtil.formatMoney(this.functionsUtil.BNify(this.props.tokenConfig.limit),0)+' '+this.props.selectedToken;\n\n    const CustomOptionValue = props => {\n      const selectedOption = props.options.find( option => option.value === props.value );\n      if (!selectedOption){\n        return null;\n      }\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <Image\n              mr={2}\n              src={selectedOption.icon}\n              size={this.props.isMobile ? '1.6em' : '1.8em'}\n            />\n            <Text\n              fontWeight={3}\n            >\n              {props.label}\n            </Text>\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n      const selectProps = props.selectProps.options.find( option => option.value === props.selectProps.value.value );\n      // console.log('CustomValueContainer',props.selectProps.options,props.selectProps.value,selectProps);\n      if (!selectProps){\n        return null;\n      }\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <Image\n              mr={2}\n              src={selectProps.icon}\n              size={this.props.isMobile ? '1.6em' : '1.8em'}\n            />\n            <Text\n              fontWeight={3}\n            >\n              {selectProps.label}\n            </Text>\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.availableTranches ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading tranches...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n              maxWidth={['100%','42em']}\n            >\n              <Box\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Select Tranche:\n                </Text>\n                <GenericSelector\n                  {...this.props}\n                  name={'tranches'}\n                  isSearchable={false}\n                  CustomOptionValue={CustomOptionValue}\n                  options={this.state.availableTranches}\n                  onChange={this.selectTranche.bind(this)}\n                  CustomValueContainer={CustomValueContainer}\n                  defaultValue={this.state.selectedTrancheOption}\n                />\n              </Box>\n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Tranche details:\n                </Text>\n                <DashboardCard\n                  cardProps={{\n                    py:1,\n                    px:3,\n                    mb:2\n                  }}\n                  isActive={false}\n                >\n                  <Flex\n                    mt={1}\n                    mb={1}\n                    width={1}\n                    style={{\n                      flexBasis:'0',\n                      flex:'1 1 0px',\n                      flexWrap:'wrap'\n                    }}\n                    flexDirection={'row'}\n                    justifyContent={'space-between'}\n                  >\n                    <Flex\n                      mb={[2,3]}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        fontSize={[1,2]}\n                        fontWeight={[2,3]}\n                      >\n                        Protocol\n                      </Text>\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'protocolIcon',\n                            props:{\n                              mr:2,\n                              height:['1.4em','2em']\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'protocolName',\n                            props:{\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={[2,3]}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        fontSize={[1,2]}\n                        fontWeight={[2,3]}\n                      >\n                        Token\n                      </Text>\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'tokenIcon',\n                            props:{\n                              mr:2,\n                              height:['1.4em','2em']\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'tokenName',\n                            props:{\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={[2,3]}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        fontSize={[1,2]}\n                        fontWeight={[2,3]}\n                      >\n                        Pool Size\n                      </Text>\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'tranchePool',\n                            props:{\n                              decimals:2,\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={2}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        fontSize={[1,2]}\n                        fontWeight={[2,3]}\n                      >\n                        Auto-Farming\n                      </Text>\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'autoFarming',\n                            props:{\n                              decimals:2,\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={2}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        fontSize={[1,2]}\n                        fontWeight={[2,3]}\n                      >\n                        Staking Rewards\n                      </Text>\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'stakingRewards',\n                            props:{\n                              decimals:2,\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={2}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        fontSize={[1,2]}\n                        fontWeight={[2,3]}\n                      >\n                        APY\n                      </Text>\n                      <Flex\n                        flexDirection={'column'}\n                        alignItems={'flex-start'}\n                        justifyContent={'flex-start'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'trancheApy',\n                            props:{\n                              decimals:2,\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                        {\n                          stakingRewards.length>0 && (\n                            <Flex\n                              width={1}\n                              flexDirection={'row'}\n                              alignItems={'flex-start'}\n                            >\n                              <Text\n                                fontSize={1}\n                                fontWeight={2}\n                                lineHeight={'1'}\n                                color={'cellText'}\n                              >\n                                +\n                              </Text>\n                              <TrancheField\n                                {...this.props}\n                                fieldInfo={{\n                                  name:'trancheIDLELastHarvest',\n                                  props:{\n                                    decimals:4,\n                                    fontSize:1,\n                                    fontWeight:2,\n                                    lineHeight:'1',\n                                    color:'cellText'\n                                  }\n                                }}\n                                token={this.props.selectedToken}\n                                tranche={this.props.selectedTranche}\n                                tokenConfig={this.props.tokenConfig}\n                                protocol={this.props.selectedProtocol}\n                                trancheConfig={this.props.trancheConfig}\n                              />\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                </DashboardCard>\n              </Box>\n              <Box\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Select Action:\n                </Text>\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={['column','row']}\n                  justifyContent={'space-between'}\n                >\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isDeposit ? 2 : 0\n                    }}\n                    caption={'Deposit'}\n                    width={[1,'32%']}\n                    imageSrc={'images/deposit.png'}\n                    isMobile={this.props.isMobile}\n                    // subcaption={'stake LP Tokens'}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isDeposit}\n                    handleClick={ e => this.setSelectedAction('deposit') }\n                  />\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isStake ? 2 : 0\n                    }}\n                    width={[1,'32%']}\n                    caption={'Stake / Unstake'}\n                    imageSrc={'images/mint.svg'}\n                    isMobile={this.props.isMobile}\n                    // subcaption={'withdraw LP tokens'}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isStake}\n                    handleClick={ e => this.setSelectedAction('stake') }\n                  />\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isWithdraw ? 2 : 0\n                    }}\n                    width={[1,'32%']}\n                    caption={'Withdraw'}\n                    imageSrc={'images/upload.svg'}\n                    isMobile={this.props.isMobile}\n                    // subcaption={'withdraw LP tokens'}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isWithdraw}\n                    handleClick={ e => this.setSelectedAction('withdraw') }\n                  />\n                </Flex>\n              </Box>\n              {\n                isStake && this.state.stakingEnabled && (\n                  <Box\n                    mb={2}\n                    width={1}\n                  >\n                    <Text mb={1}>\n                      Choose stake action:\n                    </Text>\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'space-between'}\n                    >\n                      <CardIconButton\n                        {...this.props}\n                        textProps={{\n                          fontSize:[1,2]\n                        }}\n                        cardProps={{\n                          px:3,\n                          py:2,\n                          width:0.49\n                        }}\n                        text={'Stake'}\n                        icon={'Layers'}\n                        iconColor={'deposit'}\n                        iconBgColor={'#ced6ff'}\n                        handleClick={ e => this.setStakeAction('stake') }\n                        isActive={ this.state.selectedStakeAction === 'stake' }\n                      />\n                      <CardIconButton\n                        {...this.props}\n                        textProps={{\n                          fontSize:[1,2]\n                        }}\n                        cardProps={{\n                          px:3,\n                          py:2,\n                          width:0.49\n                        }}\n                        text={'Unstake'}\n                        icon={'LayersClear'}\n                        iconColor={'redeem'}\n                        iconBgColor={'#ceeff6'}\n                        isDisabled={ !this.state.unstakeEnabled }\n                        isActive={ this.state.selectedStakeAction === 'unstake' }\n                        handleClick={ e => this.state.unstakeEnabled ? this.setStakeAction('unstake') : null }\n                      />\n                    </Flex>\n                  </Box>\n                )\n              }\n              {\n                this.state.infoText && this.props.account && (\n                  <IconBox\n                    cardProps={{\n                      p:2,\n                      mt:3,\n                      mb:2,\n                      width:1,\n                    }}\n                    isActive={true}\n                    isInteractive={false}\n                    iconProps={{\n                      size:'1.2em',\n                      color:'flashColor'\n                    }}\n                    textProps={{\n                      fontWeight:500,\n                      color:'flashColor',\n                      textAlign:'center',\n                      fontSize:['13px','15px']\n                    }}\n                    icon={'LightbulbOutline'}\n                    text={this.state.infoText}\n                  />\n                )\n              }\n              <Flex\n                width={1}\n                alignItems={'stretch'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                {\n                  isStake && !this.state.stakingEnabled ? (\n                    <DashboardCard\n                      cardProps={{\n                        p: 2,\n                        mt: 3\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          color={'cellText'}\n                          name={'DoNotDisturb'}\n                        />\n                        <Text\n                          mt={1}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Staking is not enabled for this Tranche.\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                  ) : (\n                    <SendTxWithBalance\n                      error={null}\n                      {...this.props}\n                      buttonProps={{\n                        width:[1,0.45]\n                      }}\n                      permitEnabled={false}\n                      tokenConfig={this.state.tokenConfig}\n                      tokenBalance={this.state.balanceProp}\n                      contractInfo={this.state.contractInfo}\n                      checkLimit={this.checkLimit.bind(this)}\n                      approveEnabled={this.state.approveEnabled}\n                      buttonDisabled={this.state.buttonDisabled}\n                      callback={this.transactionSucceeded.bind(this)}\n                      approveDescription={this.state.approveDescription}\n                      changeInputCallback={this.changeInputCallback.bind(this)}\n                      contractApproved={this.contractApprovedCallback.bind(this)}\n                      getTransactionParams={this.getTransactionParams.bind(this)}\n                      action={this.functionsUtil.capitalize(this.state.actionLabel)}\n                    >\n                      {\n                        isDeposit ? (\n                          <Flex\n                            width={1}\n                            alignItems={'stretch'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <BuyModal\n                              {...this.props}\n                              showInline={true}\n                              availableMethods={[]}\n                              buyToken={this.props.selectedToken}\n                            />\n                          </Flex>\n                        ) : isStake ? (\n                          <DashboardCard\n                            cardProps={{\n                              p: 2,\n                              my: 2\n                            }}\n                          >\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Icon\n                                size={'1.8em'}\n                                name={'MoneyOff'}\n                                color={'cellText'}\n                              />\n                              <Text\n                                mt={1}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                You don't have any <strong>{this.state.tokenConfig.label}</strong> token to {this.state.selectedStakeAction}.\n                              </Text>\n                            </Flex>\n                          </DashboardCard>\n                        ) : isWithdraw && (\n                          <DashboardCard\n                            cardProps={{\n                              p: 2,\n                              my: 2\n                            }}\n                          >\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Icon\n                                size={'1.8em'}\n                                name={'MoneyOff'}\n                                color={'cellText'}\n                              />\n                              <Text\n                                mt={1}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                You don't have any {this.props.selectedToken} to withdraw.<br />If you have staked your <strong>{this.state.tokenConfig.label}</strong> tokens please unstake them to be able to withdraw your {this.props.selectedToken}.\n                            </Text>\n                            </Flex>\n                          </DashboardCard>\n                        )\n                      }\n                    </SendTxWithBalance>\n                  )\n                }\n              </Flex>\n              <LimitReachedModal\n                {...this.props}\n                limit={trancheLimit}\n                closeModal={this.resetModal}\n                isOpen={this.state.activeModal === 'limit'}\n              />\n              <ShareModal\n                confettiEnabled={true}\n                icon={`images/medal.svg`}\n                title={`Congratulations!`}\n                account={this.props.account}\n                closeModal={this.resetModal}\n                tokenName={this.props.selectedToken}\n                isOpen={this.state.activeModal === 'share'}\n                text={`You have successfully deposited in Idle!<br />Enjoy <strong>${this.state.trancheAPY ? this.state.trancheAPY.toFixed(2) : '0.00'}% APY</strong> on your <strong>${this.props.selectedToken}</strong>!`}\n                tweet={`I'm earning ${this.state.trancheAPY ? this.state.trancheAPY.toFixed(2) : '0.00'}% APY on my ${this.props.selectedToken} with @idlefinance tranches! Go to ${this.functionsUtil.getGlobalConfig(['baseURL'])}${this.props.selectedSection.route} and start earning now from your idle tokens!`}\n              />\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TrancheDetails;\n","import { Line } from '@nivo/line';\nimport React, { Component } from 'react';\n// import { linearGradientDef } from '@nivo/core'\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport ChartCustomTooltip from '../ChartCustomTooltip/ChartCustomTooltip';\nimport ChartCustomTooltipRow from '../ChartCustomTooltipRow/ChartCustomTooltipRow';\n\nclass PortfolioEquityTranches extends Component {\n  state = {\n    startDate:null,\n    chartData:null,\n    chartProps:null,\n    chartwidth:null,\n    chartHeight:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadChartData();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const quickDateSelectionChanged = prevProps.quickDateSelection !== this.props.quickDateSelection;\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n    if (tokenChanged || quickDateSelectionChanged){\n      this.setState({\n        chartData:null\n      },() => {\n        this.componentDidMount();\n      });\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    if (mobileChanged || themeModeChanged){\n      this.loadChartData();\n    }\n  }\n\n  async loadChartData() {\n    let enabledTokens = this.props.enabledTokens;\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTranches).reduce( (enabledTokens,protocol) => {\n        const tokens = Object.keys(this.props.availableTranches[protocol]);\n        tokens.forEach( token => {\n          if (!enabledTokens.includes(token)){\n            enabledTokens.push(token);\n          }\n        });\n        return enabledTokens;\n      },[]);\n    }\n\n    const transactions = this.props.transactionsList;\n\n    const chartData = [];\n    let tokensBalance = {};\n    let firstTxTimestamp = null;\n\n    await this.functionsUtil.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      tokensBalance[selectedToken] = [];\n\n      const filteredTxs = Object.values(transactions).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        let amountLent = this.functionsUtil.BNify(0);\n\n        filteredTxs.forEach((tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending')){\n            return false;\n          }\n          \n          firstTxTimestamp = firstTxTimestamp ? Math.min(firstTxTimestamp,parseInt(tx.timeStamp)) : parseInt(tx.timeStamp);\n\n          const tokenAmount = this.functionsUtil.BNify(tx.tokenAmount);\n\n          switch (tx.action){\n            case 'Deposit':\n              amountLent = amountLent.plus(tokenAmount);\n            break;\n            case 'Withdraw':\n              amountLent = amountLent.minus(tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.functionsUtil.BNify(0);\n          }\n\n          const action = tx.action;\n          const balance = amountLent;\n          const timeStamp = parseInt(tx.timeStamp);\n          const tranchePrice = this.functionsUtil.BNify(tx.tranchePrice);\n          const trancheTokens = this.functionsUtil.BNify(tx.trancheTokens);\n\n          if (!tranchePrice.isNaN() && !tranchePrice.isNaN()){\n            tokensBalance[selectedToken].push({\n              action,\n              balance,\n              timeStamp,\n              tokenAmount,\n              tranchePrice,\n              trancheTokens\n            });\n          }\n        });\n      }\n    });\n\n    // console.log('tokensBalance',tokensBalance);\n\n    // Calculate Start Date\n    let startDate = null;\n    const currentDate = this.functionsUtil.strToMoment(new Date());\n\n    switch (this.props.quickDateSelection){\n      case 'week':\n        startDate = currentDate.clone().subtract(1,'week');\n      break;\n      case 'month':\n        startDate = currentDate.clone().subtract(1,'month');\n      break;\n      case 'month3':\n        startDate = currentDate.clone().subtract(3,'month');\n      break;\n      case 'month6':\n        startDate = currentDate.clone().subtract(6,'month');\n      break;\n      default:\n        startDate = null;\n      break;\n    }\n\n    const days = {};\n    let prevBalances = {};\n    let prevTimestamp = null;\n    let minChartValue = null;\n    let maxChartValue = null;\n    let aggregatedBalance = null;\n    const aggregatedBalancesKeys = {};\n    const tokensBalancesPerDate = {};\n    const currTimestamp = parseInt(Date.now()/1000)+86400;\n\n    const tokensData = {};\n\n    await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      // tokensData[token] = await this.functionsUtil.getTokenApiData(this.props.availableTokens[token].address,isRisk,firstTxTimestamp,null,false,3600);\n      tokensData[token] = [];\n    });\n\n    const trancheTokenBalance = {};\n\n    if (!firstTxTimestamp){\n      firstTxTimestamp = currTimestamp;\n    }\n\n    for (let timeStamp=firstTxTimestamp;timeStamp<=currTimestamp;timeStamp+=this.props.frequencySeconds){\n\n      const foundBalances = {};\n      const tokensBalances = {};\n      if (timeStamp > currTimestamp){\n        timeStamp = currTimestamp;\n      }\n      // timeStamp = Math.min(currTimestamp,timeStamp);\n      aggregatedBalance = this.functionsUtil.BNify(0);\n\n      // await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      // eslint-disable-next-line\n      Object.keys(tokensBalance).forEach(token => {\n\n        let lastTokenData = null;\n        const lastTokenDataUnfiltered = Object.values(tokensData[token]).pop();\n        const filteredTokenData = tokensData[token].filter(tx => (tx.timestamp>=prevTimestamp && tx.timestamp<=timeStamp));\n        if (filteredTokenData && filteredTokenData.length){\n          lastTokenData = filteredTokenData.pop();\n        }\n\n        if (!trancheTokenBalance[token]){\n          trancheTokenBalance[token] = this.functionsUtil.BNify(0);\n        }\n\n        const tokenDecimals = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'decimals']);\n        let filteredBalances = tokensBalance[token].filter(tx => (tx.timeStamp<=timeStamp && (!prevTimestamp || tx.timeStamp>prevTimestamp)));\n        \n        if (!filteredBalances.length){\n          if (prevBalances && prevBalances[token]){\n            filteredBalances = prevBalances[token];\n            const lastFilteredTx = Object.assign([],filteredBalances).pop();\n            const currentBalance = parseFloat(lastFilteredTx.balance);\n\n            // Take idleToken price from API and calculate new balance\n            if (currentBalance>0 && timeStamp>firstTxTimestamp && lastTokenData){\n              const trancheTokens = trancheTokenBalance[token];\n              const tranchePrice = this.functionsUtil.fixTokenDecimals(lastTokenData.tranchePrice,tokenDecimals);\n              let newBalance = trancheTokens.times(tranchePrice);\n\n              // Set new balance and tranchePrice\n              lastFilteredTx.balance = newBalance;\n              lastFilteredTx.tranchePrice = tranchePrice;\n              filteredBalances = [lastFilteredTx];\n            }\n          } else {\n            filteredBalances = [{\n              balance:this.functionsUtil.BNify(0),\n              tranchePrice:this.functionsUtil.BNify(0)\n            }];\n          }\n        } else {\n          filteredBalances.forEach(tx => {\n            switch (tx.action){\n              case 'Deposit':\n                trancheTokenBalance[token] = trancheTokenBalance[token].plus(tx.trancheTokens);\n              break;\n              default:\n                trancheTokenBalance[token] = trancheTokenBalance[token].minus(tx.trancheTokens);\n                if (trancheTokenBalance[token].lt(0)){\n                  trancheTokenBalance[token] = this.functionsUtil.BNify(0);\n                }\n              break;\n            }\n          });\n        }\n\n        const lastTx = Object.assign([],filteredBalances).pop();\n        // let lastTxBalance = this.functionsUtil.BNify(lastTx.balance);\n        let lastTxBalance = trancheTokenBalance[token].times(lastTx.tranchePrice);\n\n        if (lastTxBalance.gt(0)){\n          // Convert token balance to USD\n          let tokenUsdConversionRate = null;\n          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'conversionRateField']);\n          if (!this.props.chartToken && conversionRateField){\n            const conversionRate = lastTokenData && lastTokenData[conversionRateField] ? lastTokenData[conversionRateField] : (lastTokenDataUnfiltered && lastTokenDataUnfiltered[conversionRateField] ? lastTokenDataUnfiltered[conversionRateField] : null);\n            if (conversionRate){\n              tokenUsdConversionRate = this.functionsUtil.fixTokenDecimals(conversionRate,18);\n              if (tokenUsdConversionRate.gt(0)){\n                lastTxBalance = lastTxBalance.times(tokenUsdConversionRate);\n              }\n            }\n          }\n          \n          tokensBalances[token] = lastTxBalance;\n          aggregatedBalance = aggregatedBalance.plus(lastTxBalance);\n        }\n\n        foundBalances[token] = filteredBalances;\n      });\n\n      let momentDate = this.functionsUtil.strToMoment(timeStamp*1000);\n\n      if (startDate === null || (momentDate.isSameOrAfter(startDate) && momentDate.isSameOrBefore(new Date(),'day'))){\n        \n        // if (momentDate.isAfter(new Date(),'day')){\n        //   momentDate = this.functionsUtil.strToMoment(new Date());\n        // }\n\n        // Force date to midnight\n        const formattedDate = momentDate.format('YYYY/MM/DD 00:00');\n\n        // Save days for axisBottom format\n        days[momentDate.format('YYYY/MM/DD')] = 1;\n\n        aggregatedBalance = parseFloat(parseFloat(aggregatedBalance.toFixed(6)));\n\n        tokensBalancesPerDate[formattedDate] = tokensBalances;\n        aggregatedBalancesKeys[formattedDate] = aggregatedBalance;\n\n        // console.log(timeStamp,formattedDate,tokensBalances);\n\n        minChartValue = minChartValue === null ? aggregatedBalance : Math.min(minChartValue,aggregatedBalance);\n        maxChartValue = maxChartValue === null ? aggregatedBalance : Math.max(maxChartValue,aggregatedBalance);\n      }\n\n      prevTimestamp = timeStamp;\n      prevBalances = foundBalances;\n    }\n\n    const aggregatedBalances = Object.keys(aggregatedBalancesKeys).map(date => ({\n      x:date,\n      y:aggregatedBalancesKeys[date],\n      balances:tokensBalancesPerDate[date]\n    }));\n\n    let itemIndex = 0;\n    aggregatedBalances.forEach( (item,index) => {\n      const itemPos = Math.floor(itemIndex/aggregatedBalances.length*100);\n      aggregatedBalances[index].itemPos = itemPos;\n      itemIndex++;\n    });\n\n    /*\n    aggregatedBalances.push({\n      x:momentDate.format('YYYY/MM/DD HH:mm'),\n      y:aggregatedBalance\n    });\n    */\n\n    // Add day before to start with zero balance\n    /*\n    const firstTxMomentDate = this.functionsUtil.strToMoment(firstTxTimestamp*1000);\n    if ((startDate === null || startDate.isSameOrBefore(firstTxMomentDate)) && aggregatedBalances.length){\n      const firstItem = aggregatedBalances[0];\n      const firstDate = this.functionsUtil.strToMoment(firstItem.x,'YYYY/MM/DD HH:mm');\n      firstDate.subtract(1,'day');\n      aggregatedBalances.unshift({\n        x:firstDate.format('YYYY/MM/DD HH:mm'),\n        y:0\n      });\n    }\n    */\n\n    const chartToken = this.props.chartToken ? this.props.chartToken.toUpperCase() : 'USD';\n\n    // Add token Data\n    chartData.push({\n      id:chartToken,\n      color: 'hsl('+ this.functionsUtil.getGlobalConfig(['stats','tokens',chartToken,'color','hsl']).join(',')+')',\n      data:aggregatedBalances\n    });\n\n    // console.log('PortfolioEquityTranches',chartData);\n\n    let yFormatDecimals = 2;\n    if (maxChartValue-minChartValue<1){\n      yFormatDecimals = 4;\n    }\n\n    if (maxChartValue === minChartValue){\n      minChartValue = Math.max(0,maxChartValue-1);\n    }\n\n    const maxGridLines = 5;\n    const gridYStep = (maxChartValue-minChartValue)/maxGridLines;\n    const gridYValues = [];\n    for (let i=0;i<=maxGridLines;i++){\n      const gridYValue = parseFloat(parseFloat(minChartValue+(i*gridYStep)).toFixed(6));\n      gridYValues.push(gridYValue);\n    }\n    \n    const axisBottomMaxValues = 10;\n    const daysCount = Object.values(days).length;    \n    const daysFrequency = Math.max(1,Math.ceil(daysCount/axisBottomMaxValues));\n\n    const chartProps = {\n      xScale:{\n        type: 'time',\n        format: '%Y/%m/%d %H:%M',\n      },\n      yScale:{\n        type: 'linear',\n        stacked: false,\n        min: minChartValue,\n        max: maxChartValue\n      },\n      xFormat:'time:%b %d %Y',\n      yFormat:value => this.functionsUtil.formatMoney(value,yFormatDecimals),\n      axisBottom: this.props.isMobile ? null : {\n        legend: '',\n        tickSize:0,\n        format: '%b %d',\n        tickPadding: 15,\n        orient: 'bottom',\n        legendOffset: 36,\n        legendPosition: 'middle',\n        tickValues:'every '+daysFrequency+' days'\n      },\n      gridYValues,\n      pointSize:0,\n      useMesh:true,\n      axisLeft: this.props.isMobile ? null : {\n        legend: '',\n        tickSize: 0,\n        orient: 'left',\n        tickPadding: 10,\n        tickRotation: 0,\n        legendOffset: -70,\n        tickValues:gridYValues,\n        legendPosition: 'middle',\n        format: v => this.functionsUtil.abbreviateNumber(v,2),\n      },\n      animate:true,\n      pointLabel:'y',\n      enableArea:true,\n      enableSlices:'x',\n      enableGridY:true,\n      curve:'monotoneX',\n      enableGridX:false,\n      pointBorderWidth:1,\n      colors:d => d.color,\n      pointLabelYOffset:-12,\n      areaBaselineValue:minChartValue,\n      pointColor:{ from: 'color', modifiers: []},\n      areaOpacity:this.props.themeMode === 'light' ? 0.1 : 0.5,\n      theme:{\n        axis: {\n          ticks: {\n            text: {\n              fontSize:12,\n              fontWeight:600,\n              fill:this.props.theme.colors.legend,\n              fontFamily:this.props.theme.fonts.sansSerif\n            }\n          }\n        },\n        grid: {\n          line: {\n            stroke: this.props.theme.colors.lineChartStroke, strokeDasharray: '8 4'\n          }\n        },\n      },\n      /*\n      defs:[\n        linearGradientDef('gradientA', [\n          { offset: 0, color: 'inherit' },\n          { offset: 100, color: 'inherit', opacity: 0 },\n        ]),\n      ],\n      fill:[{ match: '*', id: 'gradientA' }],\n      */\n      margin: this.props.isMobile ? { top: 20, right: 25, bottom: 25, left: 20 } : { top: 30, right: 50, bottom: 45, left: 60 },\n      sliceTooltip:(slideData) => {\n        const { slice } = slideData;\n        const point = slice.points[0];\n        return (\n          <ChartCustomTooltip\n            point={point}\n          >\n            <ChartCustomTooltipRow\n              color={point.color}\n              label={point.serieId}\n              value={`$ ${point.data.yFormatted}`}\n            />\n            {\n            (typeof point.data.balances === 'object' && Object.keys(point.data.balances).length>0) &&\n              Object.keys(point.data.balances).map(token => {\n                if (token === point.serieId){\n                  return null;\n                }\n                const color = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'color','hex']);\n                const balance = point.data.balances[token];\n                let formattedBalance = this.functionsUtil.formatMoney(balance,2);\n                if (parseFloat(balance)>=0.01){\n                  return (\n                    <ChartCustomTooltipRow\n                      label={token}\n                      color={color}\n                      key={`row_${token}`}\n                      value={`$ ${formattedBalance}`}\n                    />\n                  );\n                }\n                return null;\n              })\n            }\n          </ChartCustomTooltip>\n        );\n      }\n    };\n\n    this.setState({\n      chartData,\n      chartProps\n    });\n  }\n\n  render() {\n    return (\n      <GenericChart\n        type={Line}\n        showLoader={true}\n        {...this.state.chartProps}\n        data={this.state.chartData}\n        parentId={this.props.parentId}\n        height={this.props.chartHeight}\n        parentIdHeight={this.props.parentIdHeight}\n      />\n    );\n  }\n}\n\nexport default PortfolioEquityTranches;","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TrancheField from '../TrancheField/TrancheField';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport { Flex, Heading, Text, Tooltip, Icon } from \"rimble-ui\";\nimport PortfolioEquityTranches from '../PortfolioEquityTranches/PortfolioEquityTranches';\n\nclass FundsOverviewTranche extends Component {\n\n  state = {\n    // govTokensAprs:null,\n    aggregatedValues:[],\n    govTokensTotalApr:null,\n    govTokensUserBalance:null,\n    govTokensDistribution:null,\n    govTokensTotalBalance:null,\n    govTokensTotalAprTooltip:null,\n    idleTokenUserDistribution:null,\n    govTokensDistributionTooltip:null,\n    govTokensTotalBalanceTooltip:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  idleGovToken = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    this.idleGovToken = this.functionsUtil.getIdleGovToken();\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n\n    /*\n    const govTokenAvailableTokens = {};\n    govTokenAvailableTokens[this.props.selectedToken] = this.props.tokenConfig;\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const [\n      // govTokensAprs,\n      idleTokenUserDistribution,\n      govTokensUserBalance,\n      apy,\n      depositTimestamp,\n      days\n    ] = await Promise.all([\n      // this.functionsUtil.getGovTokensAprs(this.props.selectedToken,this.props.tokenConfig),\n      this.idleGovToken.getUserDistribution(this.props.account,govTokenAvailableTokens,true),\n      this.functionsUtil.getGovTokensUserBalances(this.props.account,govTokenAvailableTokens,null),\n      this.functionsUtil.loadTrancheField('apy',this.props.selectedToken,this.props.tokenConfig,this.props.account,false),\n      this.functionsUtil.loadTrancheField('depositTimestamp',this.props.selectedToken,this.props.tokenConfig,this.props.account),\n      this.functionsUtil.loadTrancheField('daysFirstDeposit',this.props.selectedToken,this.props.tokenConfig,this.props.account),\n    ]);\n\n    let avgAPY = await this.functionsUtil.getAvgAPYStats(this.props.tokenConfig.address,isRisk,depositTimestamp);\n\n    if (!avgAPY || this.functionsUtil.BNify(avgAPY).lte(0)){\n      avgAPY = apy;\n    }\n\n    const govTokensTotalBalance = govTokensUserBalance ? Object.values(govTokensUserBalance).reduce( (totBalance,govTokenBalance) => {\n      return totBalance.plus(this.functionsUtil.BNify(govTokenBalance));\n    },this.functionsUtil.BNify(0)) : null;\n\n    const govTokensTotalBalanceTooltip = govTokensUserBalance ? Object.keys(govTokensUserBalance).map( govToken => {\n      const balance = govTokensUserBalance[govToken];\n      if (balance.gt(0)){\n        return `+${balance.toFixed(2)} ${govToken}`;\n      } else {\n        return null;\n      }\n    }).filter(v => (v !== null)) : null;\n\n    const aggregatedValues = [\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Avg APY',\n          desc:this.functionsUtil.getGlobalConfig(['messages','apyLong']),\n          children:(\n            <Flex\n              width={1}\n              alignItems={'center'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Text\n                lineHeight={1}\n                fontWeight={[3,4]}\n                color={'copyColor'}\n                fontFamily={'counter'}\n                fontSize={['1.7em','1.7em']}\n                dangerouslySetInnerHTML={{ __html: (avgAPY ? avgAPY.toFixed(2)+'%' : '0.00%') }}\n              />\n            </Flex>\n          )\n        }\n      },\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Current Allocation',\n          children:(\n            <Flex\n              width={1}\n              id={'allocationChart'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n            >\n              <TrancheField\n                {...this.props}\n                showLoader={true}\n                fieldInfo={{\n                  name:'allocationChart'\n                }}\n                parentId={'allocationChart'}\n                token={this.props.selectedToken}\n                tokenConfig={this.props.tokenConfig}\n              />\n            </Flex>\n          ),\n          label:'',\n        }\n      },\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Days since first deposit',\n          children:(\n            <Flex\n              width={1}\n              alignItems={'center'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Text\n                lineHeight={1}\n                fontWeight={[3,4]}\n                color={'copyColor'}\n                fontFamily={'counter'}\n                fontSize={['1.7em','1.7em']}\n                dangerouslySetInnerHTML={{ __html: (days ? parseInt(days) : '-') }}\n              />\n            </Flex>\n          )\n        }\n      }\n    ];\n\n    this.setState({\n      // govTokensAprs,\n      aggregatedValues,\n      // govTokensTotalApr,\n      govTokensUserBalance,\n      govTokensTotalBalance,\n      // govTokensTotalAprTooltip,\n      idleTokenUserDistribution,\n      govTokensTotalBalanceTooltip\n    });\n    */\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n\n    return (\n      <Flex\n        width={1}\n        flexDirection={'column'}\n      >\n        {\n          this.state.aggregatedValues.length>0 && \n            <Flex\n              width={1}\n              mb={[0,3]}\n              mt={[2,0]}\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.aggregatedValues.map((v,i) => (\n                  <Flex\n                    {...v.flexProps}\n                    flexDirection={'column'}\n                    key={`aggregatedValue_${i}`}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        py:[2,3],\n                        mb:[3,0]\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        {\n                          v.props.children ? v.props.children : (\n                            <Text\n                              lineHeight={1}\n                              fontWeight={[3,4]}\n                              color={'copyColor'}\n                              fontFamily={'counter'}\n                              fontSize={[4,'1.7em']}\n                              dangerouslySetInnerHTML={{ __html: v.props.value }}\n                            >\n                            </Text>\n                          )\n                        }\n                        <Flex\n                          mt={2}\n                          width={1}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                        >\n                          <Text\n                            fontWeight={2}\n                            fontSize={[1,2]}\n                            color={'cellText'}\n                          >\n                            {v.props.title}\n                          </Text>\n                          {\n                            v.props.desc && \n                              <Tooltip\n                                placement={'bottom'}\n                                message={v.props.desc}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                          }\n                        </Flex>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                ))\n              }\n            </Flex>\n        }\n        <DashboardCard\n          cardProps={{\n            px:2,\n            py:3\n          }}\n        >\n          {\n            this.props.transactionsList && this.props.transactionsList.length>0 && (\n              <Flex\n                width={1}\n                ml={[0,3]}\n                id={\"funds-overview\"}\n              >\n                <PortfolioEquityTranches\n                  {...this.props}\n                  chartHeight={350}\n                  parentId={'funds-overview'}\n                  chartToken={this.props.selectedToken}\n                  enabledTokens={[this.props.selectedToken]}\n                  frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n                />\n              </Flex>\n            )\n          }\n          <Flex\n            width={1}\n            flexDirection={['column','row']}\n          >\n            <Flex\n              mb={[2,0]}\n              width={[1,1/6]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Deposited\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'trancheDeposited',\n                  props:{\n                    decimals:7,\n                    fontWeight:300,\n                    maxPrecision:8,\n                    fontSize:['1.8em','1.9em'],\n                    color:this.props.theme.colors.counter,\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,1/6]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Staked Amount\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'trancheStaked',\n                  props:{\n                    decimals:7,\n                    fontWeight:300,\n                    maxPrecision:8,\n                    fontSize:['1.8em','1.9em'],\n                    color:this.props.theme.colors.counter,\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,1/6]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Redeemable\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'trancheRedeemableWithStaked',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      color:this.props.theme.colors.counter,\n                      fontSize: this.props.isMobile ? '1.8em' : '1.9em',\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n              <Flex\n                width={1}\n                mt={'-8px'}\n                justifyContent={'center'}\n              >\n                <TrancheField\n                  {...this.props}\n                  addTokenName={false}\n                  fieldInfo={{\n                    name:'earningsPerc',\n                    props:{\n                      fontSize:1,\n                      fontWeight:2,\n                      color:'cellText',\n                      flexProps:{\n                        justifyContent:'center'\n                      }\n                    }\n                  }}\n                />\n              </Flex>\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,1/6]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Earnings\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'earningsCounter',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      fontSize:this.props.isMobile ? '1.8em' : '1.9em',\n                      color:this.props.theme.colors.counter\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n              {\n                this.state.govTokensTotalBalanceTooltip && this.state.govTokensTotalBalanceTooltip.length>0 && (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    {\n                      this.state.govTokensTotalBalanceTooltip.map((govTokenBalance,govTokenIndex) => (\n                        <Text\n                          fontSize={1}\n                          lineHeight={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                          mt={govTokenIndex ? 1 : 0}\n                          key={`govToken_${govTokenIndex}`}\n                        >\n                          {govTokenBalance}\n                        </Text>\n                      ))\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,1/6]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Fees\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'feesCounter',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      fontSize:this.props.isMobile ? '1.8em' : '1.9em',\n                      color:this.props.theme.colors.counter\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,1/6]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Realized APY\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'realizedApy',\n                  props:{\n                    decimals:2,\n                    fontWeight:300,\n                    fontSize:['1.8em','1.9em'],\n                    color:this.props.theme.colors.counter,\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n              {\n                this.state.idleTokenUserDistribution && (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      mt={1}\n                      fontSize={1}\n                      lineHeight={1}\n                      fontWeight={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      {this.state.idleTokenUserDistribution.toFixed(4)} {this.idleGovToken.tokenName}/{this.idleGovToken.tokenConfig.distributionFrequency}\n                    </Text>\n                  </Flex>\n                )\n              }\n            </Flex>\n          </Flex>\n        </DashboardCard>\n      </Flex>\n    );\n  }\n}\n\nexport default FundsOverviewTranche;","import Title from '../Title/Title';\nimport { Button, Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport CustomList from '../CustomList/CustomList';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\n\nclass StakingRewardsTranche extends Component {\n\n  state = {\n    stakingRewards:null,\n    stakingRewardsRows:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadUserRewards();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const portfolioChanged = JSON.stringify(prevProps.portfolio) !== JSON.stringify(this.props.portfolio);\n    const trancheConfigChanged = JSON.stringify(prevProps.trancheConfig) !== JSON.stringify(this.props.trancheConfig);\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (accountChanged || trancheConfigChanged || portfolioChanged || transactionsChanged){\n      this.loadUserRewards();\n    }\n  }\n\n  async loadUserRewards(){\n    if (!this.props.account || !this.props.trancheConfig || !this.props.portfolio){\n      return false;\n    }\n\n    const [\n      stakingRewards,\n      trancheBalance,\n      rewardTokensInfo,\n      trancheStakedAmount\n    ] = await Promise.all([\n      this.functionsUtil.getTrancheStakingRewards(this.props.account,this.props.trancheConfig),\n      this.functionsUtil.getTokenBalance(this.props.trancheConfig.name,this.props.account,false),\n      this.functionsUtil.getTrancheRewardTokensInfo(this.props.tokenConfig,this.props.trancheConfig),\n      this.functionsUtil.getTrancheStakedBalance(this.props.trancheConfig.CDORewards.name,this.props.account,this.props.trancheConfig.CDORewards.decimals)\n    ]);\n\n    const trancheBalanceInfo = this.props.portfolio.tranchesBalance.find( p => p.token === this.props.token && p.protocol === this.props.protocol && p.tranche === this.props.tranche );\n    \n    const stakingRewardsRows = [];\n    await this.functionsUtil.asyncForEach(Object.keys(stakingRewards), async (rewardToken) => {\n      const tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',rewardToken]);\n      const rewardTokenInfo = rewardTokensInfo[rewardToken];\n      const tokenBalance = await this.functionsUtil.getTokenBalance(rewardToken,this.props.account);\n      let distributionSpeed = rewardTokenInfo ? rewardTokenInfo.lastAmount : null;\n      const tokenAmount = !this.functionsUtil.BNify(stakingRewards[rewardToken]).isNaN() ? this.functionsUtil.BNify(stakingRewards[rewardToken]) : this.functionsUtil.BNify(0);\n      if (trancheBalanceInfo && distributionSpeed){\n        distributionSpeed = distributionSpeed.times(trancheBalanceInfo.poolShare);\n      }\n      stakingRewardsRows.push({\n        token:rewardToken,\n        staked:trancheStakedAmount,\n        balance:tokenBalance.toFixed(8),\n        reedemable:tokenAmount.toFixed(8),\n        trancheBalance:this.functionsUtil.integerValue(trancheBalance),\n        tokenIcon:tokenConfig.icon || `images/tokens/${rewardToken}.svg`,\n        distributionSpeed:distributionSpeed ? distributionSpeed.toFixed(8)+` ${rewardToken} (last harvest)` : this.functionsUtil.BNify(0).toFixed(8)\n      });\n    });\n\n    this.setState({\n      stakingRewardsRows\n    });\n  }\n\n  claimCallback(tx){\n    this.loadUserRewards();\n  }\n\n  stakeCallback(tx){\n    this.loadUserRewards();\n  }\n\n  render() {\n    return (\n      this.state.stakingRewardsRows ?\n        <Flex\n          mb={[0,4]}\n          width={1}\n          flexDirection={'column'}\n          id={'funds-overview-container'}\n        >\n          <Title my={[3,4]}>Staking Rewards</Title>\n          <CustomList\n            rows={this.state.stakingRewardsRows}\n            cols={[\n              {\n                title:'TOKEN',\n                props:{\n                  width:[0.18,0.16]\n                },\n                fields:[\n                  {\n                    type:'image',\n                    props:{\n                      mr:2,\n                      size:this.props.isMobile ? '1.2em' : '1.8em'\n                    },\n                    path:['tokenIcon']\n                  },\n                  {\n                    type:'text',\n                    path:['token'],\n                  }\n                ]\n              },\n              {\n                mobile:false,\n                title:'BALANCE',\n                props:{\n                  width:[0.27,0.24],\n                  justifyContent:['center','flex-start']\n                },\n                fields:[\n                  {\n                    type:'text',\n                    path:['balance'],\n                    props:{\n                      decimals: this.props.isMobile ? 4 : 8\n                    }\n                  },\n                ]\n              },\n              {\n                title:'REDEEMABLE',\n                desc:this.functionsUtil.getGlobalConfig(['messages','govTokenRedeemableBalance']),\n                props:{\n                  width:[0.29,0.24],\n                  justifyContent:['center','flex-start']\n                },\n                fields:[\n                  {\n                    type:'text',\n                    path:['reedemable'],\n                    props:{\n                      decimals: this.props.isMobile ? 4 : 8\n                    }\n                  },\n                ]\n              },\n              {\n                title:'DISTRIBUTION',\n                desc:this.functionsUtil.getGlobalConfig(['messages','userDistributionSpeed']),\n                props:{\n                  width:[0.29,0.24],\n                },\n                fields:[\n                  {\n                    type:'text',\n                    path:['distributionSpeed'],\n                    props:{\n                      decimals: this.props.isMobile ? 4 : 8\n                    }\n                  }\n                ]\n              },\n              {\n                title:'',\n                props:{\n                  width:[0.26,0.16],\n                },\n                parentProps:{\n                  width:1\n                },\n                fields:[\n                  {\n                    funcProps:{\n                      componentProps:{\n                        disabled:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? true : false ),\n                      },\n                      // value:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? 'stake' : 'claim') : 'claim'),\n                      // action:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? 'Stake' : 'Claim') : 'Claim'),\n                      // methodName:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? 'stake' : 'claim') : 'claim'),\n                      // transactionParams:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? [this.functionsUtil.BNify(props.row.trancheBalance).toFixed()] : []) : []),\n                      // callback:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? this.stakeCallback.bind(this) : this.claimCallback.bind(this)) : this.claimCallback.bind(this))\n                    },\n                    fieldComponent:ExecuteTransaction,\n                    props:{\n                      params:[],\n                      parentProps:{\n                        width:1\n                      },\n                      Component:Button,\n                      componentProps:{\n                        style:{\n                          width:'100%'\n                        },\n                        value:'Claim',\n                        borderRadius:4,\n                        mainColor:'redeem',\n                        size:this.props.isMobile ? 'small' : 'medium'\n                      },\n                      value:'Claim',\n                      action:'claim',\n                      methodName:'claim',\n                      callback:this.claimCallback.bind(this),\n                      contractName:this.props.trancheConfig.CDORewards.name\n                    }\n                  }\n                ]\n              }\n            ]}\n            {...this.props}\n          />\n        </Flex>\n      : this.props.children || null\n    );\n  }\n}\n\nexport default StakingRewardsTranche;\n","import Title from '../Title/Title';\nimport { Box, Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport GenericFaqs from '../GenericFaqs/GenericFaqs';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TrancheDetails from '../TrancheDetails/TrancheDetails';\n// import TrancheWelcome from '../TrancheWelcome/TrancheWelcome';\nimport TrancheHarvests from '../TrancheHarvests/TrancheHarvests';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport TrancheDepositRedeem from '../TrancheDepositRedeem/TrancheDepositRedeem';\nimport FundsOverviewTranche from '../FundsOverviewTranche/FundsOverviewTranche';\nimport StakingRewardsTranche from '../StakingRewardsTranche/StakingRewardsTranche';\n\nclass TranchePage extends Component {\n\n  state = {\n    transactions:[],\n    userHasFunds:false,\n    componentLoaded:false\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTransactions();\n  }\n\n  async componentDidMount(){\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const portfolioChanged = (this.props.portfolio && !prevProps.portfolio) || JSON.stringify(this.props.portfolio) !== JSON.stringify(prevProps.portfolio);\n    if (portfolioChanged){\n      this.loadTransactions();\n    }\n  }\n\n  loadTransactions(){\n    const transactions = this.props.portfolio ? this.props.portfolio.transactions.filter( t => t.protocol.toLowerCase() === this.props.selectedProtocol.toLowerCase() && t.token.toLowerCase() === this.props.selectedToken.toLowerCase() && (!this.props.trancheType || t.tranche === this.props.trancheType) ) : [];\n\n    // console.log('loadTransactions',this.props.selectedProtocol,this.props.selectedToken,this.props.trancheType,transactions);\n    const componentLoaded = true;\n\n    // console.log('portfolio',this.props.portfolio);\n    const userHasFunds = this.props.portfolio && this.props.portfolio.tranchesBalance.find( balanceInfo => balanceInfo.protocol.toLowerCase() === this.props.selectedProtocol.toLowerCase() && balanceInfo.token.toLowerCase() === this.props.selectedToken.toLowerCase() && (!this.props.trancheType || balanceInfo.tranche.toLowerCase() === this.props.trancheType.toLowerCase()) ) ? true : false;\n\n    this.setState({\n      transactions,\n      userHasFunds,\n      componentLoaded\n    });\n  }\n\n  render() {\n    const tranchesDetails = this.functionsUtil.getGlobalConfig(['tranches']);\n    const filteredTranchesTypes = Object.keys(tranchesDetails).filter( trancheType => !this.props.trancheType || this.props.trancheType === trancheType );\n    return (\n      <Box\n        mb={4}\n        width={1}\n      >\n        <Title\n          mb={3}\n        >\n          {this.functionsUtil.capitalize(this.props.selectedProtocol)} - {this.props.selectedToken} - {this.props.trancheDetails ? this.props.trancheDetails.name : 'Tranches'} \n        </Title>\n        {\n          /*\n          !this.props.trancheType ? (\n            <TrancheWelcome\n              {...this.props}\n              tokenConfig={this.props.tokenConfig}\n              selectTrancheType={this.props.selectTrancheType}\n            />\n          ) : (\n          */\n            <Flex\n              mt={2}\n              width={1}\n              flexDirection={['column','row']}\n              justifyContent={this.props.trancheType ? 'center' : 'space-between'}\n            >\n              {\n                filteredTranchesTypes.map( trancheType => (\n                  <Flex\n                    mb={[3,0]}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    key={`tranche_${trancheType}`}\n                    width={[1,(1/filteredTranchesTypes.length)-0.02]}\n                  >\n                    {\n                      this.props.trancheType ? (\n                        <TrancheDepositRedeem\n                          {...this.props}\n                          selectedTranche={trancheType}\n                          cdoConfig={this.props.tokenConfig.CDO}\n                          showSelectButton={!this.props.trancheType}\n                          selectTrancheType={this.props.selectTrancheType}\n                          trancheConfig={this.props.tokenConfig[trancheType]}\n                        />\n                      ) : (\n                        <TrancheDetails\n                          {...this.props}\n                          selectedTranche={trancheType}\n                          cdoConfig={this.props.tokenConfig.CDO}\n                          showSelectButton={!this.props.trancheType}\n                          selectTrancheType={this.props.selectTrancheType}\n                          trancheConfig={this.props.tokenConfig[trancheType]}\n                        />\n                      )\n                    }\n                  </Flex>\n                ))\n              }\n            </Flex>\n            /*\n          )\n        */\n        }\n        {\n          this.state.componentLoaded && this.props.account && this.state.userHasFunds && this.props.trancheType &&\n            <Flex\n              width={1}\n              mb={[0,4]}\n              flexDirection={'column'}\n              id={'funds-overview-container'}\n            >\n              <Title my={[3,4]}>Funds Overview</Title>\n              <FundsOverviewTranche\n                {...this.props}\n                token={this.props.selectedToken}\n                tranche={this.props.trancheType}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                transactionsList={this.state.transactions}\n                trancheConfig={this.props.tokenConfig[this.props.trancheType]}\n              />\n            </Flex>\n        }\n        {\n          this.state.componentLoaded && this.props.account && this.state.userHasFunds && this.props.trancheType &&\n            <StakingRewardsTranche\n              {...this.props}\n              token={this.props.selectedToken}\n              tranche={this.props.trancheType}\n              tokenConfig={this.props.tokenConfig}\n              protocol={this.props.selectedProtocol}\n              transactionsList={this.state.transactions}\n              trancheConfig={this.props.tokenConfig[this.props.trancheType]}\n            />\n        }\n        {\n          this.state.componentLoaded && this.props.account && this.props.trancheType &&\n            <TrancheHarvests\n              {...this.props}\n              token={this.props.selectedToken}\n              tranche={this.props.trancheType}\n              tokenConfig={this.props.tokenConfig}\n              protocol={this.props.selectedProtocol}\n              trancheConfig={this.props.tokenConfig[this.props.trancheType]}\n            />\n        }\n        {\n          this.props.account && this.state.transactions && this.state.transactions.length>0 && \n            <Flex\n              width={1}\n              mb={[3,4]}\n              id={'transactions'}\n              flexDirection={'column'}\n            >\n              <Title my={[3,4]}>Transactions</Title>\n              <TransactionsList\n                {...this.props}\n                enabledTokens={[this.props.selectedToken]}\n                transactionsList={this.state.transactions}\n                availableActions={this.state.transactions.reduce( (availableActions,t) => {\n                  availableActions[t.action.toLowerCase()] = t.action;\n                  return availableActions;\n                },{})}\n                cols={[\n                  {\n                    title: this.props.isMobile ? '' : 'HASH',\n                    props:{\n                      width:[0.13,0.18]\n                    },\n                    fields:[\n                      {\n                        name:'icon',\n                        props:{\n                          mr:[0,2]\n                        }\n                      },\n                      {\n                        name:'hash',\n                        mobile:false\n                      }\n                    ]\n                  },\n                  {\n                    title:'ACTION',\n                    mobile:false,\n                    props:{\n                      width:0.12,\n                    },\n                    fields:[\n                      {\n                        name:'action'\n                      }\n                    ]\n                  },\n                  {\n                    title:'DATE',\n                    props:{\n                      width:[0.27,0.15],\n                    },\n                    fields:[\n                      {\n                        name:'date'\n                      }\n                    ]\n                  },\n                  {\n                    mobile:false,\n                    title:'STATUS',\n                    props:{\n                      width:[0.18,0.16],\n                      justifyContent:['center','flex-start']\n                    },\n                    fields:[\n                      {\n                        name:'statusIcon',\n                        props:{\n                          mr:[0,2]\n                        }\n                      },\n                      {\n                        mobile:false,\n                        name:'status'\n                      }\n                    ]\n                  },\n                  {\n                    title:'AMOUNT',\n                    props:{\n                      width:[0.23,0.11],\n                    },\n                    fields:[\n                      {\n                        name:'amount'\n                      },\n                    ]\n                  },\n                  {\n                    title:'PROTOCOL',\n                    props:{\n                      width:[0.21, 0.14],\n                    },\n                    fields:[\n                      {\n                        type:'image',\n                        name:'custom',\n                        path:['protocolIcon'],\n                        props:{\n                          mr:2,\n                          height:['1.4em','2em']\n                        }\n                      },\n                      {\n                        type:'text',\n                        mobile:false,\n                        name:'custom',\n                        path:['protocol']\n                      }\n                    ]\n                  },\n                  {\n                    title:'ASSET',\n                    props:{\n                      width:[0.16,0.14],\n                      justifyContent:['center','flex-start']\n                    },\n                    fields:[\n                      {\n                        name:'tokenIcon',\n                        props:{\n                          mr:[0,2],\n                          height:['1.4em','1.6em']\n                        }\n                      },\n                      {\n                        mobile:false,\n                        name:'tokenName'\n                      },\n                    ]\n                  },\n                ]}\n              />\n            </Flex>\n        }\n        {\n          this.props.trancheType && (\n            <Flex\n              width={1}\n              id={'faqs'}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Title\n                my={3}\n              >\n                Frequently asked questions\n              </Title>\n              <Flex\n                width={[1,0.5]}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <GenericFaqs\n                  showSections={false}\n                  questions={{\n                    '':[\n                      {\n                        q: 'Is there a locking period?',\n                        a: `There are no locking period or epochs and users are free to enter and exit at any time. The interest earned (and governance tokens, after being partially sold in the market) will be split between the two classes according to a predefined ratio called trancheAPRSplitRatio (eg 20% interest to Senior tranche holders and 80% to Junior tranche). Hence, the rate is variable for both classes of tranches.`\n                      },\n                      {\n                        q: 'How the APY is determined?',\n                        a: `The base APY, before being splitted between tranches, is provided by the underlying strategy that takes into account the reinvestment of the accrued governance tokens (except for eventual IDLE rewards). The actual APY of each tranche class is determined by the ratio between the current underlying TVL of Senior and Junior tranches (ie APY = share of yield allocated to senior tranches / Senior TVL). The APY has to be considered net of fees. For more info <a href=\"https://github.com/Idle-Labs/idle-tranches#idle-dynamic-tranches\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.link}\">view the readme</a>`\n                      },\n                      {\n                        q: 'What happens in case of hack?',\n                        a: `In case of hack, an emergency shutdown can be triggered (by both the guardian, which would be a multi-sig wallet, and the owner which will be the Idle governance) in order to pause both deposits and redeems.<br />The redistribution of remaining funds can happens selectively, by allowing only Senior tranche holders to withdraw first directly in the main contract, or through a separate contract for more complex cases and resolutions (managed by the Idle governance).`\n                      },\n                      {\n                        q: 'How are fees collected?',\n                        a: `Fees collected at each harvest event. When the strategy auto-reinvest accrued tokens, Idle protocol charges a 10% performance fee. Renevues get routed to FeeCollector address.`\n                      },\n                      {\n                        q: 'What are staking rewards?',\n                        a: `To keep a good ratio between Senior and Junior tranches and an healthy APY part of farmed governance tokens (eg IDLE) are redistributed to users who stakes their tranche tokens in specific tranche rewards contracts.`\n                      } \n                    ]\n                  }}\n                />\n              </Flex>\n            </Flex>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default TranchePage;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TrancheField from '../TrancheField/TrancheField';\n\nclass TranchesList extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n\n    let enabledProtocols = this.props.enabledProtocols;\n    if (!enabledProtocols || !enabledProtocols.length){\n      enabledProtocols = Object.keys(this.props.availableTranches);\n    }\n\n    return (\n      <Flex id=\"tranches-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"tranches-list\" flexDirection={'column'}>\n          {\n            enabledProtocols.map(protocol => {\n              const protocolConfig = this.props.availableTranches[protocol];\n              if (!protocolConfig){\n                return null;\n              }\n              const tranche = this.props.trancheType || null;\n              return Object.keys(protocolConfig).map( token => (\n                <TableRow\n                  {...this.props}\n                  token={token}\n                  tranche={tranche}\n                  protocol={protocol}\n                  rowId={`tranche-col-${protocol}`}\n                  tokenConfig={protocolConfig[token]}\n                  cardId={`tranche-card-${protocol}`}\n                  key={`tranche-${protocol}-${token}`}\n                  fieldComponent={this.props.fieldComponent || TrancheField}\n                />\n              ))\n            })\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TranchesList;\n","import React, { Component } from \"react\";\nimport RoundButton from \"../RoundButton/RoundButton\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\nimport TrancheField from \"../TrancheField/TrancheField\";\nimport { Box, Flex, Icon, Text, Image } from \"rimble-ui\";\n\n//import DashboardCard from \"../DashboardCard/DashboardCard\";\n\nclass Base extends Component {\n  // Utils\n  functionsUtil = null;\n\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n    const trancheDetails = this.props.trancheDetails;\n    const strategyInfo = this.functionsUtil.getGlobalConfig([\n      \"strategies\",\n      \"tranches\"\n    ]);\n\n    const tokenConfig =\n      this.props.tokenConfig ||\n      this.props.availableTranches[strategyInfo.protocol][strategyInfo.token];\n\n    return (\n      <Box my={[3, 0]} boxShadow={1} width={[1, 0.49]} borderRadius={2}>\n        <Flex\n          p={0}\n          mx={0}\n          border={\"0\"}\n          height={\"100%\"}\n          borderRadius={2}\n          overflow={\"hidden\"}\n          flexDirection={\"column\"}\n          backgroundColor={\"cardBg\"}\n          borderColor={\"transparent\"}\n          justifyContent={[\n            \"center\",\n            trancheDetails.type === \"AA\" ? \"left\" : \"right\"\n          ]}\n        >\n          <Flex\n            width={1}\n            borderBottom={`1px solid ${this.props.theme.colors.divider2}`}\n          >\n            <Flex pb={2} mx={2} my={3} flexDirection={\"column\"}>\n              <Flex mt={3} alignItems={\"center\"}>\n                <Image\n                  ml={3}\n                  mr={1}\n                  src={trancheDetails.image}\n                  alt={\"random unsplash image\"}\n                  size={this.props.isMobile ? \"2em\" : \"2.4em\"}\n                />\n                <Flex mx={1}>\n                  <Text\n                    ml={[2, 0]}\n                    fontWeight={4}\n                    fontSize={[4, 5]}\n                    lineHeight={1}\n                  >\n                    {trancheDetails.name}\n                  </Text>\n                </Flex>\n              </Flex>\n              <Flex\n                ml={5}\n                mr={3}\n                mt={3}\n                alignItems={\"flex-start\"}\n                flexDirection={\"column\"}\n              >\n                <Flex\n                  mr={1}\n                  flexDirection={\"row\"}\n                  alignItems={\"baseline\"}\n                >\n                  <TrancheField\n                    fieldInfo={{\n                      showTooltip: false,\n                      name: `${trancheDetails.baseName}Apy`,\n                      props: {\n                        decimals: 2,\n                        fontWeight: 4,\n                        lineHeight: \"1\",\n                        fontSize: [3, 4],\n                        textAlign: \"center\",\n                        flexProps: {\n                          justifyItems: \"flex-end\"\n                        },\n                        color: this.props.trancheDetails.color.hex\n                      }\n                    }}\n                    {...this.props}\n                    tokenConfig={tokenConfig}\n                    token={strategyInfo.token}\n                    tranche={strategyInfo.tranche}\n                    protocol={strategyInfo.protocol}\n                  />\n                  {\n                    /*\n                    <TrancheField\n                      fieldInfo={{\n                        name: `tokenIcon`,\n                        props: {\n                          width:'1.4em',\n                          height:'1.4em'\n                        }\n                      }}\n                      {...this.props}\n                      tokenConfig={tokenConfig}\n                      token={strategyInfo.token}\n                      tranche={strategyInfo.tranche}\n                      protocol={strategyInfo.protocol}\n                    />\n                    */\n                  }\n                  <Text\n                    my={1}\n                    ml={[2, 3]}\n                    fontSize={1}\n                    lineHeight={\"1\"}\n                    textAlign={\"left\"}\n                    color={\"cellText\"}\n                  >\n                    Current APY (variable)\n                  </Text>\n                </Flex>\n                {/*\n                <TrancheField\n                  fieldInfo={{\n                    showLoader:false,\n                    name:'trancheIDLEDistribution',\n                    props:{\n                      decimals:2,\n                      fontWeight:2,\n                      fontSize:[0,1],\n                      color:'cellText',\n                      textAlign:'center',\n                      flexProps:{\n                        justifyContent:'center'\n                      }\n                    },\n                  }}\n                  {...this.props}\n                  tokenConfig={tokenConfig}\n                  token={strategyInfo.token}\n                  trancheConfig={tokenConfig.AA}\n                  tranche={strategyInfo.tranche}\n                  protocol={strategyInfo.protocol}\n                />\n                */}\n                <Text\n                  mt={3}\n                  fontWeight={2}\n                  fontSize={[1, 2]}\n                  textAlign={\"left\"}\n                  lineHeight={\"1.5\"}\n                  color={\"copyColor\"}\n                >\n                  {trancheDetails.description.long}\n                </Text>\n              </Flex>\n            </Flex>\n          </Flex>\n          <Flex bg={\"cardBgContrast\"} height={\"100%\"} flexDirection={\"column\"}>\n            <Flex mt={3} my={3} pl={2} width={1} flexDirection={\"column\"}>\n              {trancheDetails.features.map((feature, index) => (\n                <Flex\n                  mb={2}\n                  my={1}\n                  px={2}\n                  mt={[2, 1]}\n                  alignItems={\"center\"}\n                  flexDirection={\"row\"}\n                  key={`feature_${index}`}\n                >\n                  <Icon\n                    mr={2}\n                    ml={3}\n                    name={\"Done\"}\n                    color={\"tick\"}\n                    size={this.props.isMobile ? \"1.6em\" : \"1.8em\"}\n                  />\n                  <Text ml={[2, 1]} fontSize={[1, 2]} fontWeight={\"500\"}>\n                    {feature}\n                  </Text>\n                </Flex>\n              ))}\n            </Flex>\n            <Flex\n              height={\"100%\"}\n              alignItems={\"flex-end\"}\n              width={1}\n              justifyContent={\"center\"}\n            >\n              <RoundButton\n                buttonProps={{\n                  my: 3,\n                  width: 0.85,\n                  fontSize: 2,\n                  contrastColor: \"white\",\n                  mainColor: trancheDetails.color.hex\n                }}\n                handleClick={e =>\n                  this.props.selectTrancheType(trancheDetails.route)\n                }\n              >\n                {this.props.tokenConfig\n                  ? `Go to ${trancheDetails.name}`\n                  : `Enter the ${trancheDetails.name}`}\n              </RoundButton>\n            </Flex>\n          </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default Base;\n","import React, { Component } from \"react\";\nimport { Link, Flex, Text, Image } from \"rimble-ui\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\n\n//import DashboardCard from \"../DashboardCard/DashboardCard\";\n\nclass TrancheFlash extends Component {\n  // Utils\n  functionsUtil = null;\n\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n    const flashData = this.functionsUtil.getGlobalConfig([\"tranchflash\"]);\n    return (\n      <Flex\n        width={1}\n        mx={4}\n        flexDirection={[\"column\", \"row\"]}\n        justifyContent={\"center\"}\n      >\n        <Flex mx={2} my={[2, 4]} width={[1, 0.4]} flexDirection={\"column\"}>\n          <Flex justifyContent={\"left\"} my={3} width={[1, 0.7]}>\n            <Text\n              bold={\"true\"}\n              fontWeight={4}\n              lineHeight={1}\n              color={\"white\"}\n              fontSize={[5, 6]}\n              textAlign={\"left\"}\n            >\n              {flashData.subtitle}\n            </Text>\n          </Flex>\n          <Flex\n            mt={2}\n            width={1}\n            mb={[2, 3]}\n            justifyContent={\"left\"}\n          >\n            <Text\n              color={\"white\"}\n              textAlign={\"left\"}\n              fontWeight={2}\n              fontSize={2}\n            >\n              {flashData.desc}\n            </Text>\n          </Flex>\n          <Flex\n            mt={2}\n            mb={2}\n            width={1}\n            flexDirection={\"column\"}\n          >\n            {\n              flashData.questions.map( (question,index) => (\n                <Flex\n                  my={2}\n                  key={`question_${index}`}\n                  alignItems={\"flex-start\"}\n                >\n                  <Link\n                    fontSize={2}\n                    fontWeight={2}\n                    opacity={\"50%\"}\n                    color={\"white\"}\n                    textAlign={\"left\"}\n                    onClick={e =>\n                      this.props.openTooltipModal(question.desc, question.msg)\n                    }\n                  >\n                    <Flex\n                      flexDirection={'row'}\n                      alignItems={\"flex-start\"}\n                    >\n                      <Image\n                        mr={2}\n                        src={flashData.helpcircle}\n                      />\n                      {question.desc}\n                    </Flex>\n                  </Link>\n                </Flex>\n              ))\n            }\n          </Flex>\n        </Flex>\n        <Flex\n          mt={6}\n          width={0.2}\n          hidden={this.props.isMobile ? 1 : 0}\n          alignItems={\"flex-start\"}\n        >\n          <Image hidden={this.props.isMobile ? 1 : 0} src={flashData.arrows} />\n        </Flex>\n        <Flex ml={2} my={[3, 5]} width={[1, 0.4]} flexDirection={\"column\"}>\n          <Flex my={[1, 0]} flexDirection={\"row\"} alignItems={\"flex-start\"}>\n            <Image\n              my={[0, 2]}\n              width={[\"2.4em\", \"4.7em\"]}\n              src={this.functionsUtil.getGlobalConfig([\n                \"tranches\",\n                \"AA\",\n                \"bubble\"\n              ])}\n            />\n            <Text\n              mt={[0, 2]}\n              mx={2}\n              mb={[2, 1]}\n              color={\"white\"}\n              textAlign={\"left\"}\n              fontWeight={2}\n              fontSize={2}\n              dangerouslySetInnerHTML={{\n                __html: flashData.seniorinfo\n              }}\n            ></Text>\n          </Flex>\n          <Flex my={[1, 0]} flexDirection={\"row\"} alignItems={\"flex-start\"}>\n            <Image\n              my={[0, 2]}\n              ml={[0, 4]}\n              width={[\"2.4em\", \"4.7em\"]}\n              src={this.functionsUtil.getGlobalConfig([\n                \"tranches\",\n                \"BB\",\n                \"bubble\"\n              ])}\n            />\n            <Text\n              mt={[0, 2]}\n              mx={2}\n              mb={[2, 1]}\n              color={\"white\"}\n              textAlign={\"left\"}\n              fontWeight={2}\n              fontSize={2}\n              dangerouslySetInnerHTML={{\n                __html: flashData.juniorinfo\n              }}\n            ></Text>\n          </Flex>\n        </Flex>\n        {/*<Flex width={0.3}>\n          <Text>ABC</Text>\n        </Flex>*/}\n      </Flex>\n    );\n  }\n}\nexport default TrancheFlash;\n","import Title from \"../Title/Title\";\nimport { Flex, Text } from \"rimble-ui\";\nimport ExtLink from \"../ExtLink/ExtLink\";\nimport React, { Component } from \"react\";\nimport styles from \"./TrancheWelcome.module.scss\";\nimport TrancheBox from \"../TrancheBox/TrancheBox\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\nimport TrancheFlash from \"../TrancheFlash/TrancheFlash\";\n\nclass TrancheWelcome extends Component {\n  // Utils\n  functionsUtil = null;\n\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n    const tranchesDetails = this.functionsUtil.getGlobalConfig([\"tranches\"]);\n    return (\n      <Flex width={1} aligItems={\"center\"} justifyContent={\"center\"}>\n        <Flex\n          mb={3}\n          width={1}\n          maxWidth={8}\n          aligItems={\"center\"}\n          flexDirection={\"column\"}\n          justifyContent={\"space-between\"}\n        >\n          {!this.props.tokenConfig ? (\n            <>\n              <Title fontSize={[5, 6]}>Perpetual Yield Tranches</Title>\n              <Flex\n                width={1}\n                mb={[3, 4]}\n                mx={\"auto\"}\n                aligItems={\"center\"}\n                justifyContent={\"center\"}\n              ></Flex>\n              <Flex\n                border={1}\n                borderRadius={2}\n                borderColor={\"transparent\"}\n                backgroundColor={\"newblue\"}\n                className={[\n                  styles.trancheFlash,\n                  this.props.isMobile ? styles.mobile : null\n                ]}\n              >\n                <TrancheFlash {...this.props}></TrancheFlash>\n              </Flex>\n            </>\n          ) : (\n            <Title\n              mb={3}\n              fontWeight={2}\n              fontSize={[3, 4]}\n              color={\"copyColor\"}\n              textAlign={\"center\"}\n            >\n              Select your preferred Tranche\n            </Title>\n          )}\n          <Flex my={3} mx={0} justifyContent={\"center\"}>\n            <Flex\n              width={1}\n              flexDirection={[\"column\", \"row\"]}\n              justifyContent={\"space-between\"}\n            >\n              {Object.keys(tranchesDetails).map((trancheType, index) => (\n                <TrancheBox\n                  {...this.props}\n                  key={`tranche_${index}`}\n                  tokenConfig={this.props.tokenConfig}\n                  trancheDetails={tranchesDetails[trancheType]}\n                />\n              ))}\n            </Flex>\n          </Flex>\n          <Flex\n            mt={3}\n            width={1}\n            px={[0,5]}\n            justifyContent={\"center\"}\n          >\n            <Text\n              fontSize={[0,1]}\n              color={'statValue'}\n              textAlign={\"center\"}\n            >\n              If you're still unsure in which Tranche to pick, reach out to us on our <ExtLink fontSize={[0,1]} href={this.functionsUtil.getGlobalConfig(['forumURL'])}>Forum</ExtLink>, <ExtLink fontSize={[0,1]} href={this.functionsUtil.getGlobalConfig(['discordURL'])}>Discord</ExtLink>, <ExtLink fontSize={[0,1]} href={this.functionsUtil.getGlobalConfig(['telegramURL'])}>Telegram</ExtLink> or <ExtLink fontSize={[0,1]} href={this.functionsUtil.getGlobalConfig(['twitterURL'])}>Twitter</ExtLink>.<br />The team and the community would be happy to help!\n            </Text>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TrancheWelcome;\n","import { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass GenericPieChart extends Component {\n  state = {\n    chartProps:null,\n    selectedSlice:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    if (mobileChanged){\n      this.setStateSafe({\n        chartProps:null,\n        selectedSlice:null,\n      },() => {\n        this.loadData();\n      });\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async loadData(){\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth: 0,\n      cornerRadius:0,\n      motionDamping:15,\n      innerRadius: 0.65,\n      motionStiffness:90,\n      colors:d => d.color,\n      onMouseEnter:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:data\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:null\n        });\n      },\n      tooltipFormat: this.props.tooltipFormat ? this.props.tooltipFormat : (v => v),\n      sliceLabel: this.props.sliceLabel,// ? this.props.sliceLabel : (d => d.value),\n      radialLabel: d => {\n        return null;\n      },\n      theme:{\n        tooltip: {\n          container: this.props.inline ? {\n            background: this.props.theme.colors.cardBg\n          } : {\n            display: 'none',\n          }\n        },\n        labels:{\n          text:{\n            fontWeight:600,\n            fontSize:this.props.isMobile ? 13 : 15,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      enableRadialLabels:false,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      enableSlicesLabels: !this.props.inline,\n      radialLabelsLinkColor:{ from: 'color' },\n      margin: this.props.margin || {top:0,right:0,bottom:0,left:0},\n      borderColor:{ from: 'color', modifiers: [ [ 'darker', 0.2 ] ] },\n    };\n\n    if (this.props.showLegend){\n      chartProps.legends = [\n        {\n          itemWidth: 60,\n          itemHeight: 18,\n          translateY: this.props.isMobile ? 25 : 50,\n          symbolSize: 10,\n          anchor: 'bottom',\n          direction: 'row',\n          itemTextColor: this.props.theme.colors.legend,\n          symbolShape: 'circle',\n          effects: [\n            {\n              on: 'hover',\n              style: {\n                itemTextColor: '#000'\n              }\n            }\n          ]\n        }\n      ];\n    }\n\n    this.setStateSafe({\n      chartProps\n    });\n  }\n\n  render() {\n\n    return (\n      <Flex\n        width={1}\n        position={'relative'}\n        alignItems={'center'}\n        justifyContent={'center'}\n      >\n        {\n          this.state.chartProps && !this.props.inline &&\n            <Flex\n              zIndex={0}\n              top={['23%','25%']}\n              left={['20%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              position={'absolute'}\n              width={['60%','46%']}\n              height={['53%','46%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                this.state.selectedSlice ? (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={this.state.selectedSlice.image}\n                    />\n                    <SmartNumber\n                      fontSize={[3,4]}\n                      decimals={3}\n                      fontWeight={4}\n                      maxPrecision={5}\n                      number={this.state.selectedSlice.valueHover || this.state.selectedSlice.value}\n                    />\n                    <Text\n                      fontSize={[1,2]}\n                      fontWeight={3}\n                      color={'cellTitle'}\n                    >\n                      {this.state.selectedSlice.label}\n                    </Text>\n                  </Flex>\n                ) : (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      height={'2.2em'}\n                      src={this.props.defaultImage}\n                    />\n                    <Text\n                      fontSize={[3,4]}\n                      fontWeight={[3,4]}\n                    >\n                      {this.props.defaultValue}\n                    </Text>\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      {this.props.defaultLabel}\n                    </Text>\n                  </Flex>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          showLoader={true}\n          {...this.props}\n          {...this.state.chartProps}\n          data={this.props.chartData}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default GenericPieChart;","import CountUp from 'react-countup';\nimport { Box, Loader } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TotalBalanceCounter extends Component {\n\n  state = {\n    counterEnd:null,\n    counterStart:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalEarnings();\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const styleChanged = JSON.stringify(prevProps.counterStyle) !== JSON.stringify(this.props.counterStyle);\n    if (styleChanged || themeModeChanged || mobileChanged){\n      const oldState = Object.assign({},this.state);\n      this.setState({\n        counterEnd:null,\n        counterStart:null\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  async loadTotalEarnings(){\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized){\n      return true;\n    }\n\n    const availableTokens = this.props.availableTokens || {};\n    const portfolio = this.props.portfolio || await this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account);\n\n    const counterStart = portfolio.totalAmountLent.plus(portfolio.totalEarnings);\n    const counterEnd = counterStart.plus(counterStart.times(portfolio.avgAPY.div(100)));\n\n    this.setState({\n      counterEnd,\n      counterStart\n    });\n  }\n\n  render() {\n\n    const counterStyle = {\n      lineHeight:1,\n      color:this.props.theme.colors.copyColor,\n      fontFamily:this.props.theme.fonts.counter,\n      fontWeight: this.props.isMobile ? 600 : 700,\n      fontSize:this.props.isMobile ? '21px' : '1.7em',\n    };\n\n    // Replace props\n    if (this.props.counterStyle && Object.keys(this.props.counterStyle).length){\n      Object.keys(this.props.counterStyle).forEach(p => {\n        counterStyle[p] = this.props.counterStyle[p];\n      });\n    }\n\n    const decimals = this.props.decimals || 8;\n\n    return this.state.counterStart && this.state.counterEnd ? (\n      <Box\n        width={1}\n      >\n        <CountUp\n          delay={0}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          decimals={decimals}\n          duration={31536000}\n          end={parseFloat(this.state.counterEnd)}\n          start={parseFloat(this.state.counterStart)}\n          formattingFn={ n => '$ '+this.functionsUtil.formatMoney(n,decimals) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              ref={countUpRef}\n              style={counterStyle}\n            />\n          )}\n        </CountUp>\n      </Box>\n    ) : (\n      <Loader size={\"20px\"} />\n    );\n  }\n}\n\nexport default TotalBalanceCounter;\n","import CountUp from 'react-countup';\nimport { Flex, Loader } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TotalEarningsCounter extends Component {\n\n  state = {\n    earningsEnd:null,\n    earningsStart:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalEarnings();\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const styleChanged = JSON.stringify(prevProps.counterStyle) !== JSON.stringify(this.props.counterStyle);\n    if (styleChanged || themeModeChanged || mobileChanged){\n      const oldState = Object.assign({},this.state);\n      this.setState({\n        earningsEnd:null,\n        earningsStart:null\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  async loadTotalEarnings(){\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized){\n      return true;\n    }\n\n    const availableTokens = this.props.availableTokens || {};\n    const portfolio = this.props.portfolio || await this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account);\n\n    const earningsStart = portfolio.totalEarnings;\n    const earningsEnd = earningsStart.plus(portfolio.totalAmountLent.times(portfolio.avgAPY.div(100)));\n\n    this.setState({\n      earningsEnd,\n      earningsStart\n    });\n  }\n\n  render() {\n\n    const counterStyle = {\n      lineHeight:1,\n      color:this.props.theme.colors.copyColor,\n      fontFamily:this.props.theme.fonts.counter,\n      fontWeight: this.props.isMobile ? 600 : 700,\n      fontSize:this.props.isMobile ? '21px' : '1.7em',\n    };\n\n    // Replace props\n    if (this.props.counterStyle && Object.keys(this.props.counterStyle).length){\n      Object.keys(this.props.counterStyle).forEach(p => {\n        counterStyle[p] = this.props.counterStyle[p];\n      });\n    }\n\n    const unit = this.props.unit || '$ ';\n    const decimals = this.props.decimals || 8;\n\n    return this.state.earningsStart && this.state.earningsEnd ? (\n      <Flex\n      >\n        <CountUp\n          delay={0}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          decimals={decimals}\n          duration={31536000}\n          end={parseFloat(this.state.earningsEnd)}\n          start={parseFloat(this.state.earningsStart)}\n          formattingFn={ n => unit+this.functionsUtil.formatMoney(n,decimals) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              ref={countUpRef}\n              style={counterStyle}\n            />\n          )}\n        </CountUp>\n      </Flex>\n    ) : (\n      <Loader size={\"20px\"} />\n    );\n  }\n}\n\nexport default TotalEarningsCounter;\n","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport Breadcrumb from '../Breadcrumb/Breadcrumb';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport TranchePage from '../TranchePage/TranchePage';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TranchesList from '../TranchesList/TranchesList';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TrancheWelcome from '../TrancheWelcome/TrancheWelcome';\nimport GenericPieChart from '../GenericPieChart/GenericPieChart';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport TotalBalanceCounter from '../TotalBalanceCounter/TotalBalanceCounter';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\nimport { Box, Flex, Heading, Loader, Text, Icon, Tooltip, Image } from \"rimble-ui\";\nimport PortfolioEquityTranches from '../PortfolioEquityTranches/PortfolioEquityTranches';\n\nclass Tranches extends Component {\n\n  state = {\n    portfolio:null,\n    transactions:[],\n    tokenConfig:null,\n    trancheType:null,\n    trancheRoute:null,\n    selectedToken:null,\n    userHasFunds:false,\n    depositedTokens:[],\n    trancheDetails:null,\n    useTrancheType:false,\n    portfolioLoaded:false,\n    componentLoaded:false,\n    selectedProtocol:null,\n    allocationChartData:null,\n    portfolioEquityQuickSelection:'week'\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n\n    this.loadPortfolio().then( () => {\n      const componentLoaded = true;\n      const trancheRoute = this.props.urlParams.param1;\n      const tranchesDetails = this.functionsUtil.getGlobalConfig(['tranches']);\n      const trancheDetails = Object.values(tranchesDetails).find( t => t.route === trancheRoute );\n\n      if (trancheDetails !== undefined){\n        const trancheType = trancheDetails.type;\n        const useTrancheType = !this.state.userHasFunds;\n        const selectedToken = this.props.urlParams.param3;\n        const selectedProtocol = this.props.urlParams.param2;\n        const tokenConfig = selectedProtocol ? (this.props.availableTranches[selectedProtocol] && this.props.availableTranches[selectedProtocol][selectedToken] ? this.props.availableTranches[selectedProtocol][selectedToken] : null) : null;\n\n        if (this.state.userHasFunds && !tokenConfig){\n          return this.props.goToSection(this.props.selectedSection.route);\n        }\n\n        this.setState({\n          trancheType,\n          tokenConfig,\n          trancheRoute,\n          selectedToken,\n          trancheDetails,\n          useTrancheType,\n          selectedProtocol\n        });\n      } else {\n        const selectedToken = this.props.urlParams.param2;\n        const selectedProtocol = this.props.urlParams.param1;\n        const tokenConfig = this.props.availableTranches[selectedProtocol] && this.props.availableTranches[selectedProtocol][selectedToken] ? this.props.availableTranches[selectedProtocol][selectedToken] : null;\n        if (tokenConfig){\n          this.setState({\n            tokenConfig,\n            selectedToken,\n            selectedProtocol\n          });\n        }\n      }\n\n      this.setState({\n        componentLoaded\n      });\n    });\n  }\n\n  async componentDidMount(){\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const availableTranchesChanged = JSON.stringify(prevProps.availableTranches) !== JSON.stringify(this.props.availableTranches);\n    if (accountChanged || availableTranchesChanged){\n      this.setState({\n        portfolioLoaded:false\n      },() => {\n        this.loadPortfolio();\n      });\n    }\n  }\n\n  async loadPortfolio(){\n    if (!this.props.account){\n      const userHasFunds = false;\n      const portfolioLoaded = true;\n      this.setState({\n        userHasFunds,\n        portfolioLoaded\n      });\n      return false;\n    }\n\n    const portfolio = await this.functionsUtil.getAccountPortfolioTranches(this.props.availableTranches,this.props.account);\n\n    if (portfolio){\n      const tranchesTokens = [];\n      const tranchesBalances = [];\n      const portfolioLoaded = true;\n      const tranchesConfig = this.functionsUtil.getGlobalConfig(['tranches']);\n\n      portfolio.tranchesBalance.forEach( trancheInfo => {\n        if (!tranchesBalances[trancheInfo.tranche]){\n          tranchesBalances[trancheInfo.tranche] = {\n            weight:this.functionsUtil.BNify(0),\n            balance:this.functionsUtil.BNify(0)\n          };\n        }\n        tranchesBalances[trancheInfo.tranche].weight = tranchesBalances[trancheInfo.tranche].weight.plus(trancheInfo.trancheWeight);\n        tranchesBalances[trancheInfo.tranche].balance = tranchesBalances[trancheInfo.tranche].balance.plus(trancheInfo.tokenBalance);\n\n        if (!tranchesTokens[trancheInfo.token]){\n          tranchesTokens[trancheInfo.token] = this.functionsUtil.BNify(0);\n        }\n        tranchesTokens[trancheInfo.token] = tranchesTokens[trancheInfo.token].plus(trancheInfo.tokenBalance);\n      });\n\n      const depositedTokens = Object.keys(tranchesTokens);\n\n      const portfolioDonutData = Object.keys(tranchesTokens).map( token => {\n        const balanceValue = parseFloat(tranchesTokens[token].toFixed(4));\n        const tokenPercentage = tranchesTokens[token].div(portfolio.totalAmountLent).times(100);\n        const tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',token]);\n        return {\n          id:token,\n          name:token,\n          label:token,\n          valueHover:balanceValue,\n          value:Math.round(tokenPercentage),\n          description: `$ ${balanceValue} in ${token}`,\n          color:'hsl('+tokenConfig.color.hsl.join(',')+')',\n          image:tokenConfig.icon || `images/tokens/${token}.svg`,\n        };\n      });\n\n      const allocationChartData = Object.keys(tranchesBalances).map((trancheName,i)=>{\n        const trancheConfig = tranchesConfig[trancheName];\n        const balanceInfo = tranchesBalances[trancheName];\n        const weightValue = parseFloat(balanceInfo.weight.times(100).toFixed(2));\n        return {\n          id:trancheName,\n          name:trancheName,\n          value:weightValue,\n          label: trancheConfig.name,\n          color:'hsl('+trancheConfig.color.hsl.join(',')+')',\n          description: `$ ${balanceInfo.balance.toFixed(2)} in ${trancheConfig.name}`\n        };\n      });\n\n      // console.log('allocationChartData',allocationChartData,'portfolioDonutData',portfolioDonutData);\n      \n      const transactions = portfolio.transactions;\n      const userHasFunds = portfolio && this.functionsUtil.BNify(portfolio.totalBalance).gt(0);\n\n      // console.log('loadPortfolio - userHasFunds',portfolio,userHasFunds);\n\n      this.setState({\n        portfolio,\n        userHasFunds,\n        transactions,\n        portfolioLoaded,\n        depositedTokens,\n        portfolioDonutData,\n        allocationChartData\n      });\n    }\n  }\n\n  selectTrancheType(trancheRoute){\n    let route = `${this.props.selectedSection.route}/${trancheRoute}`;\n    const tokenConfig = this.props.availableTranches[this.state.selectedProtocol] && this.props.availableTranches[this.state.selectedProtocol][this.state.selectedToken] ? this.props.availableTranches[this.state.selectedProtocol][this.state.selectedToken] : null;\n    if (tokenConfig){\n      route += `/${this.state.selectedProtocol}/${this.state.selectedToken}`;\n    }\n    this.props.goToSection(route);\n  }\n\n  selectTranche(protocol,token){\n    const tokenConfig = this.props.availableTranches[protocol] && this.props.availableTranches[protocol][token] ? this.props.availableTranches[protocol][token] : null;\n    if (tokenConfig){\n      let route = `${this.props.selectedSection.route}`;\n      if (this.state.trancheRoute){\n        route += `/${this.state.trancheRoute}`;\n      }\n      route += `/${protocol}/${token}`;\n\n      this.props.goToSection(route);\n    }\n  }\n\n  setPortfolioEquityQuickSelection(portfolioEquityQuickSelection){\n    this.setState({\n      portfolioEquityQuickSelection\n    });\n  }\n\n  goBack(){\n    if (this.state.tokenConfig && this.state.trancheType){\n      if (!this.state.userHasFunds){\n        this.props.goToSection(this.props.selectedSection.route+'/'+this.state.trancheDetails.route);\n      } else {\n        this.props.goToSection(this.props.selectedSection.route+'/'+this.state.selectedProtocol+'/'+this.state.selectedToken);\n      }\n    }/* else if (this.state.trancheType){\n      this.props.goToSection(this.props.selectedSection.route);\n    } */else {\n      this.props.goToSection(this.props.selectedSection.route);\n    }\n  }\n\n  render() {\n\n    const pathLink = [];\n    const breadcrumbPath = [];\n    if (this.state.trancheType){\n      breadcrumbPath.push(this.functionsUtil.capitalize(this.state.trancheDetails.baseName));\n      if (this.state.tokenConfig){\n        if (!this.state.userHasFunds){\n          pathLink.push(this.props.selectedSection.route+'/'+this.state.trancheDetails.route);\n        } else if (this.state.tokenConfig){\n          pathLink.push(this.props.selectedSection.route+'/'+this.state.selectedProtocol+'/'+this.state.selectedToken);\n        }\n      }\n    }\n    if (this.state.selectedProtocol){\n      breadcrumbPath.push(this.functionsUtil.getGlobalConfig(['stats','protocols',this.state.selectedProtocol,'label']));\n    }\n    if (this.state.selectedToken){\n      breadcrumbPath.push(this.state.selectedToken);\n    }\n\n    return (\n      <Box\n        width={1}\n      >\n        {\n          breadcrumbPath.length>0 && (\n            <Flex\n              width={1}\n              mb={[2,0]}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'flex-start'}\n            >\n              <Flex\n                width={0.5}\n              >\n                <Breadcrumb\n                  {...this.props}\n                  text={'Tranches'}\n                  pathLink={pathLink}\n                  path={breadcrumbPath}\n                  isMobile={this.props.isMobile}\n                  handleClick={this.goBack.bind(this)}\n                />\n              </Flex>\n              <Flex\n                width={0.5}\n                justifyContent={'flex-end'}\n              >\n                \n              </Flex>\n            </Flex>\n          )\n        }\n        {\n          !this.state.componentLoaded ? (\n            <FlexLoader\n              textProps={{\n                textSize:4,\n                fontWeight:2\n              }}\n              loaderProps={{\n                mb:3,\n                size:'40px'\n              }}\n              flexProps={{\n                my:3,\n                minHeight:'60vh',\n                flexDirection:'column'\n              }}\n              text={'Loading Portfolio...'}\n            />\n          ) : this.state.tokenConfig ? (\n            <TranchePage\n              {...this.props}\n              portfolio={this.state.portfolio}\n              trancheType={this.state.trancheType}\n              tokenConfig={this.state.tokenConfig}\n              userHasFunds={this.state.userHasFunds}\n              selectedToken={this.state.selectedToken}\n              trancheDetails={this.state.trancheDetails}\n              selectedProtocol={this.state.selectedProtocol}\n              availableTranches={this.props.availableTranches}\n              selectTrancheType={this.selectTrancheType.bind(this)}\n            />\n          ) : !this.state.trancheType && !this.state.userHasFunds ? (\n            <TrancheWelcome\n              {...this.props}\n              selectTrancheType={this.selectTrancheType.bind(this)}\n            />\n          ) : (\n            <Box\n              width={1}\n            >\n              {this.state.useTrancheType ? (\n                <Box\n                  width={1}\n                >\n                  <Flex\n                    mb={3}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  > \n                    {\n                    /*\n                      <Icon\n                        mr={2}\n                        name={this.state.trancheDetails.icon}\n                        color={this.state.trancheDetails.color.hex}\n                        size={this.props.isMobile ? '1.8em' : '2.2em'}\n                      />\n                    */\n                    }\n                    <Image\n                      mr={2}\n                      src={this.state.trancheDetails.image}\n                      size={this.props.isMobile ? '1.8em' : '2.2em'}\n                    />\n                    <Title\n                    >\n                      {this.functionsUtil.capitalize(this.state.trancheDetails.baseName)} Tranches\n                    </Title>\n                  </Flex>\n                  <Flex\n                    mb={3}\n                    mx={'auto'}\n                    width={[1,0.8]}\n                    aligItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      fontWeight={2}\n                      fontSize={[1,2]}\n                      textAlign={'center'}\n                    >\n                      {this.functionsUtil.getGlobalConfig(['tranches',this.state.trancheType,'description','long'])}\n                    </Text>\n                  </Flex>\n                </Box>\n              ) : (\n                <Title\n                  mb={3}\n                >\n                  Perpetual Yield Tranches\n                </Title>\n              )}\n              {\n                this.state.portfolioLoaded && this.state.userHasFunds && (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      mb={3}\n                      width={1}\n                      mt={[2,0]}\n                      alignItems={'center'}\n                      justifyContent={'center'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio.avgAPY ? (\n                                <Text\n                                  lineHeight={1}\n                                  fontWeight={[3,4]}\n                                  color={'copyColor'}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: this.state.portfolio.avgAPY.toFixed(2)+'<small>%</small>' }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Avg APY\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','apyLong'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio ? (\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <TotalBalanceCounter\n                                    decimals={5}\n                                    {...this.props}\n                                    portfolio={this.state.portfolio}\n                                  />\n                                  <Flex\n                                    width={1}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'center'}\n                                  >\n                                    <Flex\n                                      width={0.45}\n                                      alignItems={'center'}\n                                      justifyContent={'flex-end'}\n                                    >\n                                      <Text\n                                        fontSize={1}\n                                        fontWeight={3}\n                                        fontFamily={this.props.theme.fonts.counter}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >\n                                        +{this.state.portfolio.totalEarningsPerc.toFixed(2)}%\n                                      </Text>\n                                    </Flex>\n                                    <Text\n                                      mx={1}\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      fontFamily={this.props.theme.fonts.counter}\n                                      color={this.props.theme.colors.transactions.status.completed}\n                                    >|</Text>\n                                    <Flex\n                                      width={0.45}\n                                      alignItems={'center'}\n                                      justifyContent={'flex-start'}\n                                    >\n                                      <TotalEarningsCounter\n                                        {...this.props}\n                                        unit={'+$'}\n                                        decimals={5}\n                                        counterStyle={{\n                                          fontSize:14,\n                                          fontWeight:600,\n                                          color:this.props.theme.colors.transactions.status.completed\n                                        }}\n                                        portfolio={this.state.portfolio}\n                                      />\n                                    </Flex>\n                                  </Flex>\n                                </Flex>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Total Balance\n                              </Text>\n                              {\n                                /*\n                                this.state.govTokensTotalBalance && (\n                                  <Tooltip\n                                    placement={'bottom'}\n                                    message={'Total Balance does not include accrued governance tokens: '+(this.state.govTokensTotalBalance && this.state.govTokensTotalBalance.gt(0) ? ` (${this.state.govTokensTotalBalanceTooltip.join(' / ')})` : '')}\n                                  >\n                                    <Icon\n                                      ml={2}\n                                      name={\"Info\"}\n                                      size={'1em'}\n                                      color={'cellTitle'}\n                                    />\n                                  </Tooltip>\n                                )\n                                */\n                              }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.allocationChartData ? (\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  id={'allocationChart'}\n                                  height={['55px','59px']}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <GenericPieChart\n                                    {...this.props}\n                                    inline={true}\n                                    showLoader={false}\n                                    tooltipFormat={v => v+'%'}\n                                    sliceLabel={d => d.value+'%'}\n                                    width={ this.props.isMobile ? 55 : 59 }\n                                    height={ this.props.isMobile ? 55 : 59 }\n                                    chartData={this.state.allocationChartData}\n                                  />\n                                </Flex>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Portfolio Distribution\n                              </Text>\n                              {\n                                /*\n                                <Tooltip\n                                  placement={'bottom'}\n                                  message={this.functionsUtil.getGlobalConfig(['messages','riskScoreShort'])}\n                                >\n                                  <Icon\n                                    ml={2}\n                                    name={\"Info\"}\n                                    size={'1em'}\n                                    color={'cellTitle'}\n                                  />\n                                </Tooltip>\n                                */\n                              }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={3}\n                      width={1}\n                      id={\"portfolio-charts\"}\n                      justifyContent={'space-between'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        mb={[3,0]}\n                        width={[1,0.328]}\n                        flexDirection={'column'}\n                        id={\"portfolio-composition\"}\n                      >\n                        <DashboardCard\n                          title={'Composition'}\n                          titleProps={ !this.props.isMobile ? {\n                            style:{\n                              minHeight:'39px'\n                            }\n                          } : null}\n                        >\n                          <GenericPieChart\n                            {...this.props}\n                            showLegend={true}\n                            showLoader={false}\n                            tooltipFormat={v => v+'%'}\n                            defaultLabel={'Total Funds'}\n                            sliceLabel={d => {\n                              if (parseFloat(d.value)>=5){\n                                return d.value+'%';\n                              } else {\n                                return null;\n                              }\n                            }}\n                            parentId={'portfolio-composition'}\n                            chartData={this.state.portfolioDonutData}\n                            defaultImage={this.props.selectedSection.image}\n                            defaultValue={`$ ${this.functionsUtil.formatMoney(parseFloat(this.state.portfolio.totalBalance),4)}`}\n                            margin={this.props.isMobile ? { top: 15, right: 25, bottom: 30, left: 25 } : { top: 30, right: 50, bottom: 60, left: 50 }}\n                          />\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,0.666]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard>\n                          <Flex\n                            pt={[3,4]}\n                            px={[3,4]}\n                            aligItems={'center'}\n                            flexDirection={['column','row']}\n                          >\n                            <Flex\n                              width={[1,0.7]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-start'}\n                            >\n                              <Title\n                                fontWeight={4}\n                                fontSize={[2,3]}\n                                textAlign={'left'}\n                              >\n                                Performance\n                              </Title>\n                            </Flex>\n                            <Flex\n                              mt={[2,0]}\n                              width={[1,0.3]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-end'}\n                            >\n                              <GenericSelector\n                                innerProps={{\n                                  p:0,\n                                  px:1\n                                }}\n                                defaultValue={\n                                  {value:'week',label:'1W'}\n                                }\n                                name={'performance-time'}\n                                options={[\n                                  {value:'week',label:'1W'},\n                                  {value:'month',label:'1M'},\n                                  {value:'month3',label:'3M'},\n                                  {value:'month6',label:'6M'},\n                                  {value:'all',label:'MAX'},\n                                ]}\n                                onChange={ v => this.setPortfolioEquityQuickSelection(v) }\n                              />\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            ml={[0,3]}\n                            aligItems={'center'}\n                            justifyContent={'center'}\n                            id={\"portfolio-performance\"}\n                          >\n                            <PortfolioEquityTranches\n                              {...this.props}\n                              enabledTokens={[]}\n                              parentId={'portfolio-performance'}\n                              parentIdHeight={'portfolio-composition'}\n                              transactionsList={this.state.transactions}\n                              quickDateSelection={this.state.portfolioEquityQuickSelection}\n                              frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n                            />\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                )\n              }\n              <Flex\n                width={1}\n                mb={[3,4]}\n                id={\"migrate-assets\"}\n                flexDirection={'column'}\n              >\n                <Flex\n                  pb={2}\n                  width={1}\n                  mb={[2,3]}\n                  borderColor={'divider'}\n                  borderBottom={'1px solid transparent'}\n                >\n                  <Heading.h4\n                    fontSize={[2,4]}\n                    fontWeight={[3,4]}\n                  >\n                    Available Tranches\n                  </Heading.h4>\n                </Flex>\n                <TranchesList\n                  enabledProtocols={[]}\n                  trancheType={this.state.trancheType}\n                  availableTranches={this.props.availableTranches}\n                  handleClick={(props) => this.selectTranche(props.protocol,props.token)}\n                  cols={[\n                    {\n                      title:'PROTOCOL',\n                      props:{\n                        width:[0.25,0.15]\n                      },\n                      fields:[\n                        {\n                          name:'protocolIcon',\n                          props:{\n                            mr:2,\n                            height:['1.4em','2em']\n                          }\n                        },\n                        {\n                          name:'protocolName'\n                        }\n                      ]\n                    },\n                    {\n                      title:'TOKEN',\n                      props:{\n                        width:[0.16, 0.12],\n                      },\n                      fields:[\n                        {\n                          name:'tokenIcon',\n                          props:{\n                            mr:2,\n                            height:['1.4em','2em']\n                          }\n                        },\n                        {\n                          mobile:false,\n                          name:'tokenName'\n                        }\n                      ]\n                    },\n                    /*\n                    {\n                      title:'TYPE',\n                      props:{\n                        width:[0.29,0.13],\n                      },\n                      fields:[\n                        {\n                          name:'trancheTypeIcon',\n                          props:{\n                            flexProps:{\n                              mr:2\n                            },\n                            size:'1.4em'\n                          }\n                        },\n                        {\n                          name:'trancheType'\n                        }\n                      ],\n                      visible:this.state.useTrancheType\n                    },\n                    */\n                    {\n                      title:'POOL',\n                      props:{\n                        width:[0.21, 0.14],\n                      },\n                      fields:[\n                        {\n                          name:this.state.useTrancheType ? `${this.state.trancheDetails.baseName}Pool` : 'pool',\n                          props:{\n                            decimals:2\n                          }\n                        }\n                      ]\n                    },\n                    {\n                      title:this.state.useTrancheType ? 'APY' : 'SENIOR APY',\n                      visible:!this.state.useTrancheType || this.state.trancheType === 'AA',\n                      props:{\n                        width:[this.state.useTrancheType ? 0.16 : 0.29,this.state.useTrancheType ? 0.12 : 0.15],\n                      },\n                      parentProps:{\n                        flexDirection:'column',\n                        alignItems:'flex-start',\n                      },\n                      fields:[\n                        {\n                          name:'seniorApy',\n                          showTooltip:true\n                        },\n                      ],\n                    },\n                    {\n                      title:this.state.useTrancheType ? 'APY' : 'JUNIOR APY',\n                      visible:!this.state.useTrancheType || this.state.trancheType === 'BB',\n                      props:{\n                        width:[this.state.useTrancheType ? 0.16 : 0.29,this.state.useTrancheType ? 0.12 : 0.15],\n                      },\n                      parentProps:{\n                        flexDirection:'column',\n                        alignItems:'flex-start',\n                      },\n                      fields:[\n                        {\n                          name:'juniorApy',\n                          showTooltip:true\n                        },\n                      ],\n                    },\n                    {\n                      mobile:false,\n                      title:'AUTO-FARMING',\n                      props:{\n                        width:[0.25,this.state.useTrancheType ? 0.18 : 0.15],\n                      },\n                      fields:[\n                        {\n                          name:'autoFarming'\n                        }\n                      ]\n                    },\n                    {\n                      mobile:false,\n                      title:'STAKING REWARDS',\n                      props:{\n                        width:[0.25,this.state.useTrancheType ? 0.18 : 0.13],\n                      },\n                      fields:[\n                        {\n                          name:'stakingRewards'\n                        }\n                      ]\n                    },\n                    {\n                      mobile:true,\n                      title:'TOKENS',\n                      props:{\n                        width:[0.17],\n                      },\n                      fields:[\n                        {\n                          name:'govTokens'\n                        }\n                      ]\n                    },\n                    {\n                      title:'',\n                      mobile:false,\n                      props:{\n                        width:[0.29, 0.16],\n                      },\n                      parentProps:{\n                        width:1\n                      },\n                      fields:[\n                        {\n                          name:'button',\n                          label: 'Deposit',\n                          props:{\n                            width:1,\n                            fontSize:3,\n                            fontWeight:3,\n                            height:'45px',\n                            borderRadius:4,\n                            boxShadow:null,\n                            mainColor:'deposit',\n                            size: this.props.isMobile ? 'small' : 'medium',\n                            handleClick:(props) => this.selectTranche(props.protocol,props.token)\n                          }\n                        }\n                      ]\n                    }\n                  ]}\n                  {...this.props}\n                />\n              </Flex>\n              {\n                this.props.account && this.state.userHasFunds && \n                  <Flex\n                    mb={[3,4]}\n                    width={1}\n                    id={'transactions'}\n                    flexDirection={'column'}\n                  >\n                    <Title mb={[3,4]}>Transactions</Title>\n                    <TransactionsList\n                      {...this.props}\n                      enabledTokens={this.state.depositedTokens}\n                      transactionsList={this.state.transactions}\n                      availableActions={this.state.transactions.reduce( (availableActions,t) => {\n                        availableActions[t.action.toLowerCase()] = t.action;\n                        return availableActions;\n                      },{})}\n                      cols={[\n                        {\n                          title: this.props.isMobile ? '' : 'HASH',\n                          props:{\n                            width:[0.13,0.18]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              name:'hash',\n                              mobile:false\n                            }\n                          ]\n                        },\n                        {\n                          title:'ACTION',\n                          mobile:false,\n                          props:{\n                            width:0.12,\n                          },\n                          fields:[\n                            {\n                              name:'action'\n                            }\n                          ]\n                        },\n                        {\n                          title:'DATE',\n                          props:{\n                            width:[0.27,0.15],\n                          },\n                          fields:[\n                            {\n                              name:'date'\n                            }\n                          ]\n                        },\n                        {\n                          mobile:false,\n                          title:'STATUS',\n                          props:{\n                            width:[0.18,0.16],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'statusIcon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'status'\n                            }\n                          ]\n                        },\n                        {\n                          title:'AMOUNT',\n                          props:{\n                            width:[0.23,0.11],\n                          },\n                          fields:[\n                            {\n                              name:'amount'\n                            },\n                          ]\n                        },\n                        {\n                          title:'PROTOCOL',\n                          props:{\n                            width:[0.21, 0.14],\n                          },\n                          fields:[\n                            {\n                              type:'image',\n                              name:'custom',\n                              path:['protocolIcon'],\n                              props:{\n                                mr:2,\n                                height:['1.4em','2em']\n                              }\n                            },\n                            {\n                              type:'text',\n                              mobile:false,\n                              name:'custom',\n                              path:['protocol']\n                            }\n                          ]\n                        },\n                        {\n                          title:'ASSET',\n                          props:{\n                            width:[0.16,0.14],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'tokenIcon',\n                              props:{\n                                mr:[0,2],\n                                height:['1.4em','1.6em']\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'tokenName'\n                            },\n                          ]\n                        },\n                      ]}\n                    />\n                  </Flex>\n              }\n            </Box>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default Tranches;\n","import React, { Component } from 'react';\nimport { Flex, Box, Text, Button } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\n\nclass TokenSwap extends Component {\n\n  state = {\n    tokenConfig:null,\n    selectedFromToken:null,\n    selectedDestToken:null,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async loadKyberWidget(){\n\n    if (!this.state.selectedFromToken || !this.state.selectedDestToken){\n      return false;\n    }\n\n    const provider = 'kyberSwap';\n    const providerInfo = this.functionsUtil.getGlobalConfig(['payments','providers',provider]);\n    if (providerInfo.enabled && providerInfo.remoteResources){\n\n      const globalConfigs = this.functionsUtil.getGlobalConfigs();\n      const remoteResources = providerInfo.remoteResources;\n\n      Object.keys(remoteResources).forEach((url,j) => {\n\n        const resourceType = url.split('.').pop().toLowerCase();\n\n        switch (resourceType){\n          case 'js':\n            const scriptID = `script_${provider}_${j}_${this.state.selectedFromToken}_${this.state.selectedDestToken}`;\n\n            if (!document.getElementById(scriptID)){\n              const script = document.createElement(\"script\");\n              const remoteResourceParams = remoteResources[url];\n              const callback = remoteResourceParams && remoteResourceParams.callback ? remoteResourceParams.callback : null;\n              const precall = remoteResourceParams && remoteResourceParams.precall ? remoteResourceParams.precall : null;\n\n              if (precall && typeof precall === 'function'){\n                const precallProps = {\n                  baseToken:this.state.selectedFromToken,\n                  selectedToken:this.state.selectedDestToken,\n                  buttonId:`kyber-swapper-${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n                };\n                precall(precallProps,globalConfigs,providerInfo);\n              }\n\n              if (callback && typeof callback === 'function'){\n                if (script.readyState) {  // only required for IE <9\n                  script.onreadystatechange = function() {\n                    if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n                      script.onreadystatechange = null;\n                      callback();\n                    }\n                  };\n                } else {  //Others\n                  script.onload = callback;\n                }\n              }\n\n              script.id = scriptID;\n              script.className = `script_${provider}`;\n              script.src = url;\n              script.async = true;\n\n              if (remoteResourceParams && remoteResourceParams.parentElement){\n                remoteResourceParams.parentElement.appendChild(script)\n              } else {\n                document.head.appendChild(script);\n              }\n            }\n          break;\n          case 'css':\n            const stylesheetId = `stylesheet_${provider}_${j}`;\n\n            if (!document.getElementById(stylesheetId)){\n              const style = document.createElement(\"link\");\n\n              style.id = stylesheetId;\n              style.rel = 'stylesheet';\n              style.href = url;\n\n              document.head.appendChild(style);\n            }\n          break;\n          default:\n          break;\n        }\n      });\n    }\n\n    this.setState({\n      providerInfo\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async loadTokens(){\n    const selectedFromToken = Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    this.selectFromToken(selectedFromToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const fromTokenChanged = prevState.selectedFromToken !== this.state.selectedFromToken;\n    const destTokenChanged = prevState.selectedDestToken !== this.state.selectedDestToken;\n    if ((fromTokenChanged ||  destTokenChanged) && this.state.selectedFromToken && this.state.selectedDestToken){\n      this.loadKyberWidget();\n    }\n  }\n\n  selectFromToken = async (selectedFromToken) => {\n    let selectedDestToken = null;\n    const availableDestinationTokens = {};\n    const supportedTokens = this.functionsUtil.getGlobalConfig(['payments','providers','kyberSwap','supportedTokens']);\n\n    supportedTokens.forEach( token => {\n      if (token !== selectedFromToken){\n        if (!selectedDestToken){\n          selectedDestToken = token;\n        }\n        availableDestinationTokens[token] = {\n          token\n        };\n      }\n    });\n\n    const baseToken = this.functionsUtil.getGlobalConfig(['baseToken']);\n    if (baseToken !== selectedFromToken){\n      availableDestinationTokens[baseToken] = {\n        token:baseToken\n      };\n    }\n\n    this.setState({\n      selectedFromToken,\n      availableDestinationTokens\n    },() => {\n      this.selectDestToken(selectedDestToken);\n    });\n  }\n\n  selectDestToken = async (selectedDestToken) => {\n    this.setState({\n      selectedDestToken\n    });\n  }\n\n  swap = () => {\n    const globalConfigs = this.functionsUtil.getGlobalConfigs();\n    const paymentProvider = this.state.providerInfo;\n    const initProps = {\n      baseToken:this.state.selectedFromToken,\n      selectedToken:this.state.selectedDestToken,\n      buttonId:`kyber-swapper-${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n    };\n    const initParams = paymentProvider && paymentProvider.getInitParams ? paymentProvider.getInitParams(initProps,globalConfigs) : null;\n\n    // Render the Payment Provider\n    if (typeof paymentProvider.render === 'function'){\n      paymentProvider.render(initParams,null,initProps);\n    }\n\n    // Send GA event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Tools',\n      eventAction: 'TokenSwap',\n      eventLabel: `${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedFromToken){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to swap:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              showBalance={false}\n              isSearchable={true}\n              onChange={this.selectFromToken}\n              selectedToken={this.state.selectedFromToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            this.state.availableDestinationTokens && this.state.selectedDestToken && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text mb={1}>\n                  Select destination asset:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  showBalance={false}\n                  isSearchable={true}\n                  onChange={this.selectDestToken}\n                  selectedToken={this.state.selectedDestToken}\n                  availableTokens={this.state.availableDestinationTokens}\n                />\n              </Box>\n          }\n          <Flex\n            mt={2}\n            width={1}\n            justifyContent={'center'}\n          >\n            <Button\n              my={2}\n              mx={[0, 2]}\n              size={'medium'}\n              borderRadius={4}\n              mainColor={'blue'}\n              onClick={ e => this.swap(e) }\n              disabled={ !this.state.selectedFromToken || !this.state.selectedDestToken }\n            >\n              SWAP TOKENS\n            </Button>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenSwap;\n","import ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass LpStaking extends Component {\n\n  state = {\n    stats:[],\n    steps:null,\n    infoBox:null,\n    globalStats:[],\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    balanceProp:null,\n    statsLoaded:false,\n    tokenBalance:null,\n    contractInfo:null,\n    programEnded:false,\n    stakedBalance:null,\n    selectedToken:null,\n    rewardMultiplier:1,\n    accountingData:null,\n    programEndDate:null,\n    selectedAction:null,\n    selectedOption:null,\n    successMessage:null,\n    permitEnabled:false,\n    poolTokenPrice:null,\n    availableTokens:null,\n    approveEnabled:false,\n    rewardTokenPrice:null,\n    contractApproved:false,\n    tokenWrapperProps:null,\n    distributionSpeed:null,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    transactionSucceeded:false,\n    showTokenWrapperEnabled:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.setState({\n      selectedAction:'Stake'\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async componentDidMount(){\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    const contractInfoChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    if (selectedActionChanged || contractApprovedChanged || tokenConfigChanged){\n      this.setState({\n        tokenWrapperProps:null,\n        showTokenWrapperEnabled:false\n      },() => {\n        this.updateData(selectedActionChanged);\n      });\n    }\n\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async changeInputCallback(inputValue=null){\n\n    let infoBox = null;\n\n    if (inputValue && this.functionsUtil.BNify(inputValue).gt(0)){\n      inputValue = this.functionsUtil.BNify(inputValue);\n      switch (this.state.selectedAction){\n        case 'Stake':\n          const userStakedBalance = this.functionsUtil.fixTokenDecimals(this.state.stakedBalance,this.props.tokenConfig.decimals).plus(inputValue);\n          const totalStakedBalance = this.functionsUtil.fixTokenDecimals(this.state.totalStakingShares,this.props.contractInfo.decimals).plus(inputValue);\n          const userTotalStakingShare = userStakedBalance.div(totalStakedBalance);\n          const rewardsPerDay = this.state.distributionSpeed.times(86400).times(userTotalStakingShare);//.times(this.state.distributionSpeedMultiplier);\n\n          const stakedBalanceUSD = userStakedBalance.times(this.state.poolTokenPrice);\n          const rewardsPerYearUSD = rewardsPerDay.times(365).times(this.state.rewardTokenPrice);\n          const apy = stakedBalanceUSD.gt(0) ? rewardsPerYearUSD.div(stakedBalanceUSD).times(100) : this.functionsUtil.BNify(0);\n\n          // console.log(parseFloat(userStakedBalance),parseFloat(this.state.poolTokenPrice),parseFloat(stakedBalanceUSD),parseFloat(rewardsPerDay),parseFloat(this.state.rewardTokenPrice),parseFloat(rewardsPerYearUSD),parseFloat(apy));\n          infoBox = {\n            icon:'FileDownload',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`By staking <strong>${inputValue.toFixed(4)} ${this.props.tokenConfig.token}</strong> you will get <strong>${rewardsPerDay.toFixed(4)} ${this.props.contractInfo.rewardToken} / day</strong> with an average APY of <strong>${apy.toFixed(2)}%</strong><br /><small style=\"color:#ff9900\">assuming you have achieved the maximum reward multiplier</small>`\n          };\n        break;\n        case 'Withdraw':\n          const normalizedInputValue = this.functionsUtil.normalizeTokenAmount(inputValue,this.props.tokenConfig.decimals);\n          let unstakeRewards = await this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unstakeQuery',[normalizedInputValue],{from:this.props.account});\n          unstakeRewards = this.functionsUtil.formatMoney(this.functionsUtil.fixTokenDecimals(unstakeRewards,this.props.tokenConfig.decimals));\n          infoBox = {\n            icon:'FileUpload',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`By unstaking <strong>${inputValue.toFixed(4)} ${this.props.tokenConfig.token}</strong> you will get <strong>${unstakeRewards} ${this.props.contractInfo.rewardToken}</strong>`\n          };\n        break;\n        default:\n        break;\n      }\n    }\n\n    this.setState({\n      infoBox\n    });\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = [];\n    amount = this.functionsUtil.toBN(amount);\n    switch (this.state.selectedAction){\n      case 'Stake':\n        methodName = 'wrapAndStake';\n        methodParams = [amount];\n      break;\n      case 'Withdraw':\n        methodName = 'unstakeAndUnwrap';\n        methodParams = [amount];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  getPermitTransactionParams(amount,signedParameters){\n    let methodName = null;\n    let methodParams = [];\n    const { expiry, r, s, v } = signedParameters;\n    amount = this.functionsUtil.toBN(amount);\n    switch (this.state.selectedAction){\n      case 'Stake':\n        methodName = 'permitWrapAndStakeUnlimited';\n        methodParams = [amount, expiry, v, r, s];\n      break;\n      case 'Withdraw':\n        methodName = 'unstakeAndUnwrap';\n        methodParams = [amount];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async loadStats(){\n    const stats = [];\n\n    const [\n      totalLocked,\n      totalUnlocked,\n      totalStakingShares,\n      unlockScheduleCount,\n      accountingData,\n      collectedRewards\n    ] = await Promise.all([\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalLocked'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalUnlocked'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalStakingShares'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unlockScheduleCount'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'updateAccounting',[],{from:this.props.account}),\n      this.state.stakedBalance.gt(0) ? this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unstakeQuery',[this.functionsUtil.integerValue(this.state.stakedBalance)],{from:this.props.account}) : this.functionsUtil.BNify(0)\n    ]);\n\n    const unlockSchedulesPromises = [];\n    for (let i = 0; i < unlockScheduleCount ; i++){\n      unlockSchedulesPromises.push(this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unlockSchedules',[i]));\n    }\n\n    const unlockSchedules = await Promise.all(unlockSchedulesPromises);\n\n    const totalRewards = this.functionsUtil.fixTokenDecimals(this.functionsUtil.BNify(totalLocked).plus(this.functionsUtil.BNify(totalUnlocked)),this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Total Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(totalRewards))+' '+this.props.contractInfo.rewardToken\n    });\n\n    const totalDeposits = this.functionsUtil.fixTokenDecimals(totalStakingShares,this.props.contractInfo.decimals);\n    stats.push({\n      title:'Total Deposits',\n      value:this.functionsUtil.formatMoney(parseFloat(totalDeposits))+' '+this.props.tokenConfig.token\n    });\n\n    const lockedRewards = this.functionsUtil.fixTokenDecimals(totalLocked,this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Locked Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(lockedRewards))+' '+this.props.contractInfo.rewardToken\n    });\n\n    const unlockedRewards = this.functionsUtil.fixTokenDecimals(totalUnlocked,this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Unlocked Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(unlockedRewards))+' '+this.props.contractInfo.rewardToken\n    });\n\n    const programEndTime = unlockSchedules.length>0 ? unlockSchedules.reduce( (endTime,s) => {\n      endTime = Math.max(s.endAtSec,endTime);\n      return endTime;\n    },0) : null;\n\n    const programEndDate = programEndTime ? `${this.functionsUtil.strToMoment(programEndTime*1000).utc().format('DD MMM, YYYY @ HH:mm')} UTC` : 'None';\n    stats.push({\n      title:'Program End-Date',\n      value:programEndDate\n    });\n\n    const programEnded = programEndTime && programEndTime*1000<=Date.now();\n\n    const distributionSpeed = unlockSchedules.reduce( (distributionSpeed,s) => {\n      if (this.functionsUtil.BNify(s.initialLockedShares).gt(0) && this.functionsUtil.BNify(s.durationSec).gt(0)){\n        const tokensPerSecond = this.functionsUtil.fixTokenDecimals(s.initialLockedShares,this.props.contractInfo.decimals).div(s.durationSec);\n        if (!tokensPerSecond.isNaN()){\n          distributionSpeed = distributionSpeed.plus(tokensPerSecond);\n        }\n      }\n      return distributionSpeed;\n    },this.functionsUtil.BNify(0));\n\n    stats.push({\n      title:'Reward unlock rate',\n      value:this.functionsUtil.formatMoney(distributionSpeed.times(86400))+' '+this.props.contractInfo.rewardToken+' / day'\n    });\n\n    const globalStats = [];\n\n    const stakedBalance = this.functionsUtil.fixTokenDecimals(this.state.stakedBalance,this.props.tokenConfig.decimals);\n    const stakingShare = stakedBalance.div(totalDeposits); // accountingData && accountingData[2] && this.functionsUtil.BNify(accountingData[3]).gt(0) ? this.functionsUtil.BNify(accountingData[2]).div(this.functionsUtil.BNify(accountingData[3])) : this.functionsUtil.BNify(0);\n\n    const rewardMultiplier = accountingData && this.functionsUtil.BNify(accountingData[4]).gt(0) ? this.functionsUtil.BNify(Math.max(1,parseFloat(this.functionsUtil.BNify(collectedRewards).div(this.functionsUtil.BNify(accountingData[4])).times(this.props.contractInfo.maxMultiplier)))) : this.functionsUtil.BNify(1);\n\n    const distributionSpeedMultiplier = this.functionsUtil.BNify(1).div(this.props.contractInfo.maxMultiplier).times(rewardMultiplier);\n    const userDistributionSpeed = distributionSpeed.times(stakingShare).times(distributionSpeedMultiplier);\n    const rewardsPerDay = userDistributionSpeed.times(86400);\n\n    // console.log(parseFloat(this.functionsUtil.BNify(collectedRewards)),parseFloat(this.functionsUtil.BNify(accountingData[4])),this.props.contractInfo.maxMultiplier,parseFloat(this.functionsUtil.BNify(collectedRewards).div(this.functionsUtil.BNify(accountingData[4])).times(this.props.contractInfo.maxMultiplier)),parseFloat(rewardMultiplier));\n\n    // globalStats.push({\n    //   title:'Distribution rate',\n    //   description:'Your daily rewards distribution based on your current multiplier',\n    //   value:this.functionsUtil.formatMoney(rewardsPerDay)+' '+this.props.contractInfo.rewardToken+' / day',\n    // });\n\n    const stakedBalanceUSD = stakedBalance.times(this.state.poolTokenPrice);\n    const rewardsPerYearUSD = rewardsPerDay.times(365).times(this.state.rewardTokenPrice);\n    const apy = stakedBalanceUSD.gt(0) ? rewardsPerYearUSD.div(stakedBalanceUSD).times(100) : this.functionsUtil.BNify(0);\n\n    // console.log(parseFloat(this.state.stakedBalance),parseFloat(this.state.poolTokenPrice),parseFloat(stakedBalanceUSD),parseFloat(rewardsPerDay),parseFloat(this.state.rewardTokenPrice),parseFloat(rewardsPerYearUSD),parseFloat(apy));\n\n    globalStats.push({\n      title:'APY',\n      value:`${apy.toFixed(2)}%`,\n      description:'Annualized rewards based on your current multiplier',\n    });\n\n    globalStats.push({\n      title:'Share',\n      value:`${stakingShare.times(100).toFixed(2)}%`,\n      description:'Your share of the total deposits',\n    });\n\n    globalStats.push({\n      title:'Multiplier',\n      value:`${rewardMultiplier.toFixed(2)}x`,\n      description:`Deposit liquidity tokens for ${this.props.contractInfo.maxBonusDays} days to achieve a ${this.props.contractInfo.maxMultiplier}x reward multiplier`\n    });\n\n    const currentRewards = this.functionsUtil.formatMoney(this.functionsUtil.fixTokenDecimals(collectedRewards,this.props.tokenConfig.decimals));\n    globalStats.push({\n      title:'Rewards',\n      value:currentRewards+' '+this.props.contractInfo.rewardToken,\n      description:'Your share of the total unlocked reward pool. Larger your deposit and for longer, higher your share'\n    });\n\n    // console.log('loadStats',stats,globalStats);\n\n    const statsLoaded = true;\n\n    this.setState({\n      stats,\n      statsLoaded,\n      globalStats,\n      stakingShare,\n      programEnded,\n      totalRewards,\n      programEndDate,\n      accountingData,\n      rewardMultiplier,\n      distributionSpeed,\n      totalStakingShares,\n      userDistributionSpeed,\n      distributionSpeedMultiplier\n    });\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    // console.log('transactionSucceeded',tx);\n    let infoBox = null;\n    switch (this.state.selectedAction){\n      case 'Stake':\n        const stakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const stakedTokens = stakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(stakedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully staked <strong>${stakedTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n        }\n      break;\n      case 'Withdraw':\n        const unstakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() ) : null;\n        const unstakedTokens = unstakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(unstakedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        const rewardTokenConfig = {\n          address:this.functionsUtil.getContractByName(this.props.contractInfo.rewardToken)._address\n        };\n        const receivedRewardsLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => (log.address.toLowerCase() === rewardTokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) )) ) : null;\n        const receivedRewards = receivedRewardsLog ? this.functionsUtil.fixTokenDecimals(parseInt(receivedRewardsLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully withdrawn <strong>${unstakedTokens.toFixed(4)} ${this.props.selectedToken}</strong> and received <strong>${receivedRewards.toFixed(4)} ${this.props.contractInfo.rewardToken}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    const transactionSucceeded = true;\n\n    this.setState({\n      infoBox,\n      transactionSucceeded\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async updateData(selectedActionChanged=false){\n    const newState = {};\n\n    const DAITokenConfig = {\n      address:this.functionsUtil.getContractByName('DAI')._address\n    };\n    const rewardTokenConfig = {\n      address:this.functionsUtil.getContractByName(this.props.contractInfo.rewardToken)._address\n    };\n\n    const [\n      poolTokenPrice,\n      rewardTokenPrice,\n      tokenBalance,\n      stakedBalance,\n    ] = await Promise.all([\n      this.functionsUtil.getSushiswapPoolTokenPrice(this.props.selectedToken),\n      this.functionsUtil.getSushiswapConversionRate(DAITokenConfig,rewardTokenConfig),\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalStakedFor',[this.props.account]),\n    ]);\n\n    newState.balanceProp = this.functionsUtil.BNify(0);\n    newState.tokenBalance = !this.functionsUtil.BNify(tokenBalance).isNaN() ? this.functionsUtil.BNify(tokenBalance) : this.functionsUtil.BNify(0);\n    newState.stakedBalance = !this.functionsUtil.BNify(stakedBalance).isNaN() ? this.functionsUtil.BNify(stakedBalance) : this.functionsUtil.BNify(0);\n    newState.poolTokenPrice = !this.functionsUtil.BNify(poolTokenPrice).isNaN() ? this.functionsUtil.BNify(poolTokenPrice) : this.functionsUtil.BNify(0);\n    newState.rewardTokenPrice = !this.functionsUtil.BNify(rewardTokenPrice).isNaN() ? this.functionsUtil.BNify(rewardTokenPrice) : this.functionsUtil.BNify(0);\n\n    switch (this.state.selectedAction){\n      case 'Stake':\n        newState.permitEnabled = true;\n        newState.approveEnabled = true;\n        newState.balanceProp = newState.tokenBalance;\n        newState.approveDescription = 'Approve the Staking contract to stake your LP tokens';\n        newState.tokenWrapperProps = {\n          startContract:{\n            name:'ETH',\n            token:'ETH',\n            decimals:18,\n            wrapMethod:'deposit',\n          },\n          destContract:{\n            unwrapMethod:'withdraw',\n            ...this.props.tokenConfig\n          },\n        };\n      break;\n      case 'Withdraw':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = this.functionsUtil.fixTokenDecimals(newState.stakedBalance,this.props.tokenConfig.decimals);\n        newState.tokenWrapperProps = {\n          startContract:{\n            name:'ETH',\n            token:'ETH',\n            decimals:18,\n            wrapMethod:'deposit',\n          },\n          destContract:{\n            unwrapMethod:'withdraw',\n            ...this.props.tokenConfig\n          },\n        };\n      break;\n      default:\n      break;\n    }\n\n    if (newState.balanceProp.lte(0)){\n      newState.showTokenWrapperEnabled = true;\n    }\n\n    if (selectedActionChanged){\n      newState.infoBox = null;\n      newState.transactionSucceeded = false;\n    }\n\n    this.setState(newState,() => {\n      this.loadStats();\n    });\n  }\n\n  render() {\n\n    const StatsCard = props => {\n      const cardProps = {\n        p:3,\n        mb:2,\n        width:'49%',\n        ...props.cardProps\n      };\n      return (\n        <DashboardCard\n          title={props.title}\n          cardProps={cardProps}\n          titleProps={{\n            fontSize:1,\n            fontWeight:3,\n          }}\n          titleParentProps={{\n            mt:0,\n            ml:0\n          }}\n          description={props.description}\n        >\n          <Text\n            mt={1}\n            fontSize={[2,3]}\n            color={'statValue'}\n            {...props.textProps}\n          >\n            {props.value}\n          </Text>\n        </DashboardCard>\n      );\n    };\n\n    const isStake = this.state.selectedAction === 'Stake';\n    const isUnstake = this.state.selectedAction === 'Withdraw';\n    const isStats = this.state.selectedAction === 'Stats';\n    const txAction = this.state.selectedAction;\n\n    return (\n      <Box\n        width={1}\n      >\n      {\n        this.props.tokenConfig && this.props.tokenConfig.poolLink && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Pool link:\n            </Text>\n            <ExtLink\n              mt={1}\n              color={'link'}\n              hoverColor={'link'}\n              href={this.props.tokenConfig.poolLink}\n            >\n              <Text\n                color={'link'}\n                style={{\n                  maxWidth:'100%',\n                  overflow:'hidden',\n                  whiteSpace:'nowrap',\n                  textOverflow:'ellipsis'\n                }}\n              >\n                {this.props.tokenConfig.poolLink}\n              </Text>\n            </ExtLink>\n          </Box>\n        )\n      }\n      {\n        this.state.stakedBalance && this.functionsUtil.BNify(this.state.stakedBalance).gt(0) && this.state.globalStats.length>0 && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Your Stats:\n            </Text>\n            <Flex\n              mt={1}\n              width={1}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.globalStats.map( (statInfo,index) =>\n                  <StatsCard\n                    key={`globalStats_${index}`}\n                    cardProps={{\n                      mb:[2,0],\n                      mr:[0,index<this.state.globalStats.length-1 ? 1 : 0],\n                      width:[1,'100%']\n                    }}\n                    textProps={{\n                      fontSize:[1,2]\n                    }}\n                    {...statInfo}\n                  />\n                )\n              }\n            </Flex>\n          </Box>\n        )\n      }\n      {\n        this.props.selectedToken && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text mb={1}>\n              Select Action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isStake ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Stake'}\n                imageSrc={'images/mint.svg'}\n                isMobile={this.props.isMobile}\n                // subcaption={'stake LP Tokens'}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isStake}\n                handleClick={ e => this.setAction('Stake') }\n              />\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isUnstake ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Withdraw'}\n                imageSrc={'images/upload.svg'}\n                isMobile={this.props.isMobile}\n                // subcaption={'withdraw LP tokens'}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isUnstake}\n                handleClick={ e => this.setAction('Withdraw') }\n              />\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isStats ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Stats'}\n                imageSrc={'images/stats.svg'}\n                // subcaption={'view some stats'}\n                isMobile={this.props.isMobile}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isStats}\n                handleClick={ e => this.setAction('Stats') }\n              />\n            </Flex>\n            {\n              (isStake || isUnstake) ?\n                isStake && this.state.programEnded ? (\n                  <DashboardCard\n                    cardProps={{\n                      p:3,\n                      mt:1\n                    }}\n                  >\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                    >\n                      <Icon\n                        name={'Warning'}\n                        color={'cellText'}\n                        size={this.props.isMobile ? '1.8em' : '2.3em'}\n                      />\n                      <Text\n                        mt={1}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'center'}\n                      >\n                        The {this.props.selectedToken} staking program ended on {this.state.programEndDate}.\n                      </Text>\n                    </Flex>\n                  </DashboardCard>\n                ) : (this.props.tokenConfig && this.state.balanceProp && this.state.statsLoaded && this.props.contractInfo ? (\n                  <Box\n                    mt={1}\n                    width={1}\n                    mb={[4,3]}\n                  >\n                    <SendTxWithBalance\n                      error={null}\n                      {...this.props}\n                      action={txAction}\n                      steps={this.state.steps}\n                      infoBox={this.state.infoBox}\n                      tokenConfig={this.props.tokenConfig}\n                      tokenBalance={this.state.balanceProp}\n                      contractInfo={this.props.contractInfo}\n                      permitEnabled={this.state.permitEnabled}\n                      approveEnabled={this.state.approveEnabled}\n                      callback={this.transactionSucceeded.bind(this)}\n                      approveDescription={this.state.approveDescription}\n                      contractApproved={this.contractApproved.bind(this)}\n                      balanceSelectorInfo={this.state.balanceSelectorInfo}\n                      changeInputCallback={this.changeInputCallback.bind(this)}\n                      getTransactionParams={this.getTransactionParams.bind(this)}\n                      getPermitTransactionParams={this.getPermitTransactionParams.bind(this)}\n                    >\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            name={'MoneyOff'}\n                            color={'cellText'}\n                            size={this.props.isMobile ? '1.8em' : '2.3em'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            {\n                              isStake ? (\n                                `You don't have any ${this.props.selectedToken} in your wallet.`\n                              ) : isUnstake && (\n                                `You don't have any staked ${this.props.selectedToken} to withdraw.`\n                              )\n                            }\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    </SendTxWithBalance>\n                  </Box>\n                ) : (\n                  <Flex\n                    mt={3}\n                    mb={3}\n                    width={1}\n                  >\n                    <FlexLoader\n                      flexProps={{\n                        flexDirection:'row'\n                      }}\n                      loaderProps={{\n                        size:'30px'\n                      }}\n                      textProps={{\n                        ml:2\n                      }}\n                      text={'Loading info...'}\n                    />\n                  </Flex>\n                )\n              ) : isStats && (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  width={1}\n                  style={{\n                    flexWrap:'wrap'\n                  }}\n                  justifyContent={'space-between'}\n                >\n                  {\n                    (!this.state.stats || !this.state.stats.length) ? (\n                      <Flex\n                        mt={3}\n                        mb={3}\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading stats...'}\n                        />\n                      </Flex>\n                    ) : this.state.stats.map( (statInfo,index) =>\n                      <StatsCard\n                        key={`stats_${index}`}\n                        cardProps={{\n                          width:[1,'49%']\n                        }}\n                        {...statInfo}\n                      />\n                    )\n                  }\n                </Flex>\n              )\n            }\n          </Box>\n        )\n      }\n      </Box>\n    );\n  }\n}\n\nexport default LpStaking;","import { Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass Base extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    const cardProps = {\n      p:3,\n      mb:2,\n      width:'49%',\n      ...this.props.cardProps\n    };\n\n    return (\n      <DashboardCard\n        cardProps={cardProps}\n        title={this.props.title}\n        titleProps={{\n          fontSize:1,\n          fontWeight:3,\n        }}\n        titleParentProps={{\n          mt:0,\n          ml:0\n        }}\n        description={this.props.description}\n      >\n        {\n          this.props.value ? (\n            <Text\n              mt={1}\n              fontSize={[2,3]}\n              color={'statValue'}\n              {...this.props.textProps}\n            >\n              {this.props.value}\n            </Text>\n          ) : (this.props.children || null)\n        }\n      </DashboardCard>\n    );\n  }\n}\n\nexport default Base;\n","import ExtLink from '../ExtLink/ExtLink';\nimport IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport StatsCardSmall from '../StatsCardSmall/StatsCardSmall';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport { Flex, Box, Text, Icon, Input, Button } from \"rimble-ui\";\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\n\nclass IdleStaking extends Component {\n\n  state = {\n    stats:[],\n    steps:null,\n    maxApr:null,\n    infoBox:null,\n    globalStats:[],\n    lockPeriods:[\n      {\n        value:14,\n        type:'day',\n        label:'2 weeks'\n      },\n      {\n        value:1,\n        type:'month',\n        label:'1 month'\n      },\n      {\n        value:1,\n        type:'year',\n        label:'1 year'\n      },\n      {\n        value:4,\n        type:'year',\n        label:'4 years'\n      },\n    ],\n    lockedEnd:null,\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    balanceProp:null,\n    lockExpired:false,\n    statsLoaded:false,\n    tokenBalance:null,\n    contractInfo:null,\n    stakedBalance:null,\n    selectedToken:null,\n    rewardMultiplier:1,\n    claimedRewards:null,\n    accountingData:null,\n    increaseAction:null,\n    selectedAction:null,\n    selectedOption:null,\n    successMessage:null,\n    permitEnabled:false,\n    poolTokenPrice:null,\n    lockPeriodInput:null,\n    buttonDisabled:false,\n    internalInfoBox:null,\n    availableTokens:null,\n    approveEnabled:false,\n    rewardTokenPrice:null,\n    contractApproved:false,\n    tokenWrapperProps:null,\n    distributionSpeed:null,\n    distributedRewards:null,\n    selectedLockPeriod:null,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    lockPeriodTimestamp:null,\n    transactionSucceeded:false,\n    showTokenWrapperEnabled:false,\n    lockEndDateIsMaxEndDate:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.setState({\n      selectedAction:'Lock'\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async componentDidMount(){\n    const feeDistributorConfig = this.props.tokenConfig.feeDistributor;\n    await this.props.initContract(feeDistributorConfig.name,feeDistributorConfig.address,feeDistributorConfig.abi);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    const contractInfoChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    if (selectedActionChanged || accountChanged || contractApprovedChanged || tokenConfigChanged){\n      const increaseAction = selectedActionChanged ? null : this.state.increaseAction;\n      this.setState({\n        increaseAction,\n        tokenWrapperProps:null,\n        showTokenWrapperEnabled:false,\n      },() => {\n        this.updateData(selectedActionChanged);\n      });\n    }\n\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n\n    const lockPeriodChanged = prevState.lockPeriodTimestamp !== this.state.lockPeriodTimestamp;\n    const increaseActionChanged = prevState.increaseAction !== this.state.increaseAction;\n    if (lockPeriodChanged || increaseActionChanged || selectedActionChanged){\n      if (increaseActionChanged){\n        this.setState({\n          internalInfoBox:null\n        });\n      } else if (lockPeriodChanged){\n        this.calculateStkIDLEAmount();\n      }\n      this.checkButtonDisabled();\n    }\n  }\n\n  checkButtonDisabled(){\n    let buttonDisabled = false;\n    const minLockPeriod = this.state.lockPeriods[0];\n    const maxLockPeriod = Object.assign([],this.state.lockPeriods).pop();\n    const minDate = this.state.lockedEnd ? this.functionsUtil.strToMoment(this.state.lockedEnd*1000).add(minLockPeriod.value,minLockPeriod.type) : this.functionsUtil.strToMoment().add(minLockPeriod.value,minLockPeriod.type);\n    const mDate = this.functionsUtil.strToMoment(this.state.lockPeriodTimestamp*1000);\n    const maxDate = this.functionsUtil.strToMoment().add(maxLockPeriod.value,maxLockPeriod.type);\n    switch (this.state.selectedAction){\n      default:\n      case 'Lock':\n        buttonDisabled = mDate.isAfter(maxDate) || mDate.isSameOrBefore(minDate);\n      break;\n      case 'Increase Lock':\n        if (this.state.increaseAction === 'time'){\n          buttonDisabled = mDate.isAfter(maxDate) || mDate.isSameOrBefore(minDate);\n        }\n      break;\n    }\n\n    // console.log('checkButtonDisabled',this.state.selectedAction,this.state.increaseAction,buttonDisabled);\n\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  async changeInputCallback(inputValue=null){\n    inputValue = this.functionsUtil.BNify(inputValue);\n    this.setState({\n      inputValue\n    },() => {\n      this.calculateStkIDLEAmount();\n    });\n  }\n\n  calculateStkIDLEAmount(){\n    let internalInfoBox = null;\n    if (this.state.inputValue && this.functionsUtil.BNify(this.state.inputValue).gt(0) && this.state.lockPeriodTimestamp !== null){\n      switch (this.state.selectedAction){\n        case 'Lock':\n          const currTime = parseInt(Date.now()/1000);\n          const maxDate = this.functionsUtil.strToMoment().add(4,'year');\n          let endDate = this.functionsUtil.strToMoment(this.state.lockPeriodTimestamp*1000);\n          if (endDate.isAfter(maxDate)){\n            endDate = maxDate;\n          }\n          const endDateTime = parseInt(endDate._d.getTime()/1000)-currTime;\n          const maxDateTime = parseInt(maxDate._d.getTime()/1000)-currTime;\n          const stkIDLEAmount = this.state.inputValue.times(endDateTime).div(maxDateTime);\n\n          const percentage = stkIDLEAmount.div(this.state.inputValue).times(100);\n\n          // console.log(this.state.inputValue.toString(),endDate.format('YYYY-MM-DD HH:mm:ss'),maxDate.format('YYYY-MM-DD HH:mm:ss'),endDateTime,maxDateTime,stkIDLEAmount.toFixed());\n\n          let text = `By staking <strong>${this.state.inputValue.toFixed(4)} ${this.props.selectedToken}</strong> until <strong>${endDate.utc().format('YYYY-MM-DD HH:mm')} UTC</strong> you will get back <strong>${stkIDLEAmount.toFixed(4)} ${this.props.tokenConfig.contract.name}</strong> (${Math.ceil(percentage)}% of staking power).`;\n          if (Math.ceil(percentage)<100){\n            text += `<br />Stake your tokens for <strong>4 years</strong> to reach the maximum staking power.`;\n          }\n          text += `<br /><span style=\"color:${this.props.theme.colors.alert};font-size:14px\">Keep in mind that once you lock ${this.props.selectedToken} you cannot reverse the operation until the lock end date has been reached.</span>`;\n          internalInfoBox = {\n            text,\n            icon:'LockOutline',\n            iconProps:{\n              color:'cellText'\n            },\n          };\n        break;\n        default:\n        break;\n      }\n    }\n    this.setState({\n      internalInfoBox\n    });\n  }\n\n  getIncreaseTimeParams(){\n    const _unlock_time = parseInt(this.state.lockPeriodTimestamp);\n    // console.log('getIncreaseTimeParams',_unlock_time);\n    return [_unlock_time];\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = [];\n    const _value = this.functionsUtil.toBN(amount);\n    const _unlock_time = parseInt(this.state.lockPeriodTimestamp);\n    switch (this.state.selectedAction){\n      case 'Lock':\n        methodName = 'create_lock';\n        methodParams = [_value,_unlock_time];\n        // console.log('getTransactionParams',methodName,methodParams);\n      break;\n      case 'Increase Lock':\n        methodName = 'increase_amount';\n        methodParams = [_value];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async loadStats(){\n\n    const stats = [];\n    const globalStats = [];\n    const statsLoaded = true;\n\n    let [\n      etherscanRewardsTxs,\n      totalSupply,\n      tokenTotalSupply,\n      claimableRewards,\n      lockedInfo,\n      tokenUserBalance,\n      claimable,\n      claimEvents,\n      // checkpointEvents,\n      depositEvents\n    ] = await Promise.all([\n      this.functionsUtil.getIdleStakingRewardsTxs(),\n      this.functionsUtil.genericContractCallCached(this.props.contractInfo.name,'supply'),\n      this.functionsUtil.genericContractCallCached(this.props.contractInfo.name, 'totalSupply'),\n      this.functionsUtil.getTokenBalance(this.props.contractInfo.rewardToken,this.props.tokenConfig.feeDistributor.address),\n      this.props.account ? this.functionsUtil.genericContractCall(this.props.contractInfo.name,'locked',[this.props.account]) : null,\n      this.props.account ? this.functionsUtil.getContractBalance(this.props.contractInfo.name,this.props.account) : this.functionsUtil.BNify(0),\n      this.props.account ? this.functionsUtil.genericContractCall(this.props.tokenConfig.feeDistributor.name,'claim',[this.props.account]) : this.functionsUtil.BNify(0),\n      this.functionsUtil.getContractEvents(this.props.tokenConfig.feeDistributor.name,'Claimed',{fromBlock: this.props.tokenConfig.feeDistributor.fromBlock, toBlock:'latest'}),\n      // this.functionsUtil.getContractEvents(this.props.tokenConfig.feeDistributor.name,'CheckpointToken',{fromBlock: this.props.tokenConfig.feeDistributor.fromBlock, toBlock:'latest'}),\n      this.props.account ? this.functionsUtil.getContractEvents(this.props.contractInfo.name,'Deposit',{fromBlock: this.props.contractInfo.fromBlock, toBlock:'latest',filter:{provider:this.props.account}}) : []\n    ]);\n\n    // console.log('etherscanRewardsTxs',etherscanRewardsTxs);\n\n    const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.props.contractInfo.rewardToken]);\n\n    let distributedRewards = [];\n    let totalRewards = this.functionsUtil.BNify(0);\n    let totalRewardsDays = this.functionsUtil.BNify(0);\n\n    if (etherscanRewardsTxs && etherscanRewardsTxs.length){\n      totalRewardsDays = Math.abs(etherscanRewardsTxs[0].timeStamp-etherscanRewardsTxs[etherscanRewardsTxs.length-1].timeStamp)/86400;\n      distributedRewards = etherscanRewardsTxs.map( tx => {\n        const amount = this.functionsUtil.fixTokenDecimals(tx.value,rewardTokenConfig.decimals);\n        totalRewards = totalRewards.plus(amount);\n        return {\n          amount,\n          hash:tx.hash,\n          timeStamp:tx.timeStamp,\n          tokenName:tx.tokenSymbol,\n          date:this.functionsUtil.strToMoment(parseInt(tx.timeStamp)*1000).utc().format('YYYY-MM-DD HH:mm')+' UTC'\n        };\n      });\n    }\n\n    const claimedRewards = [];\n    let totalClaimedUser = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(claimEvents, async (e) => {\n      if (this.props.account && e.returnValues && e.returnValues.recipient && e.returnValues.recipient.toLowerCase() === this.props.account.toLowerCase()){\n        const blockInfo = await this.functionsUtil.getBlockInfo(e.blockNumber);\n        if (blockInfo){\n          const claimedAmount = this.functionsUtil.fixTokenDecimals(e.returnValues.amount,rewardTokenConfig.decimals);\n          totalClaimedUser = totalClaimedUser.plus(claimedAmount);\n          claimedRewards.push({\n            amount:claimedAmount,\n            hash:e.transactionHash,\n            tokenName:this.props.contractInfo.rewardToken,\n            date:this.functionsUtil.strToMoment(parseInt(blockInfo.timestamp)*1000).utc().format('YYYY-MM-DD HH:mm')+' UTC'\n          });\n        }\n      }\n    });\n\n    tokenUserBalance = this.functionsUtil.fixTokenDecimals(tokenUserBalance,this.props.contractInfo.decimals);\n\n    const totalDeposited = totalSupply ? this.functionsUtil.fixTokenDecimals(totalSupply,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const totalLockedFunds = totalSupply ? this.functionsUtil.formatMoney(totalDeposited,4)+' '+this.props.selectedToken : (this.state.stats.length ? this.state.stats[0] : this.functionsUtil.formatMoney(totalDeposited,4)+' '+this.props.selectedToken);\n    stats.push({\n      title:'Total Locked Funds',\n      value:totalLockedFunds\n    });\n\n    tokenTotalSupply = tokenTotalSupply ? this.functionsUtil.fixTokenDecimals(tokenTotalSupply,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const stkTokenTotalSupply = tokenTotalSupply ? this.functionsUtil.formatMoney(tokenTotalSupply,4)+' '+this.props.contractInfo.name : (this.state.stats.length ? this.state.stats[1] : this.functionsUtil.formatMoney(tokenTotalSupply,4)+' '+this.props.contractInfo.name);\n    stats.push({\n      title:`${this.props.contractInfo.name} Total Supply`,\n      value:stkTokenTotalSupply\n    });\n\n    const claimableRewardsFormatted = claimableRewards ? this.functionsUtil.formatMoney(claimableRewards,4)+' '+this.props.contractInfo.rewardToken : (this.state.stats.length ? this.state.stats[2] : this.functionsUtil.formatMoney(claimableRewards,4)+' '+this.props.contractInfo.rewardToken);\n    stats.push({\n      title:'Claimable Rewards',\n      value:claimableRewardsFormatted\n    });\n\n    // const totalClaimed = claimEvents.reduce( (totalClaimed,event) => {\n    //   const claimedAmount = this.functionsUtil.fixTokenDecimals(event.returnValues.amount,rewardTokenConfig.decimals);\n    //   totalClaimed = totalClaimed.plus(claimedAmount);\n    //   return totalClaimed;\n    // },this.functionsUtil.BNify(0));\n\n    const totalRewardsFormatted = this.functionsUtil.formatMoney(totalRewards,4)+' '+this.props.contractInfo.rewardToken;\n    stats.push({\n      title:'Total Rewards',\n      value:totalRewardsFormatted\n    });\n\n    const maxApr = totalRewards.div(tokenTotalSupply).times(365.2425).div(totalRewardsDays);\n    stats.push({\n      title:'APR (1 year staking)',\n      value:maxApr.div(4).times(100).toFixed(2)+'%'\n    });\n    stats.push({\n      title:'APR (4 years staking)',\n      value:maxApr.times(100).toFixed(2)+'%'\n    });\n\n    const stakedBalance = lockedInfo && lockedInfo.amount ? this.functionsUtil.fixTokenDecimals(lockedInfo.amount,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const userDeposited = this.functionsUtil.formatMoney(stakedBalance,4);\n    globalStats.push({\n      title:'Total Deposited',\n      description:'Your total deposited amount',\n      value:userDeposited+' '+this.props.contractInfo.rewardToken,\n    });\n\n    const stakingShare = tokenUserBalance.div(tokenTotalSupply);\n    globalStats.push({\n      title:'Share',\n      value:`${stakingShare.times(100).toFixed(2)}%`,\n      description:'Your share of the total deposits',\n    });\n\n    globalStats.push({\n      title:`${this.props.contractInfo.name} balance`,\n      value:`${this.functionsUtil.formatMoney(tokenUserBalance,4)} ${this.props.contractInfo.name}`,\n    });\n    \n    claimable = claimable ? this.functionsUtil.fixTokenDecimals(claimable,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const currentRewards = this.functionsUtil.formatMoney(claimable,4);\n    globalStats.push({\n      title:'Claimable Rewards',\n      value:`${currentRewards} ${this.props.contractInfo.rewardToken}`,\n      // description:'Your claimable rewards'\n    });\n\n    const totalCollectedRewards = claimable.plus(totalClaimedUser);\n\n    let stakeStartTime = depositEvents.reduce( (stakedTime,event) => {\n      const depositTimestamp = this.functionsUtil.BNify(event.returnValues.ts);\n      const depositValue = this.functionsUtil.fixTokenDecimals(event.returnValues.value,this.props.tokenConfig.decimals);\n      if (depositValue.gt(0)){\n        stakedTime = stakedTime.plus(depositValue.times(depositTimestamp));\n        // console.log(depositTimestamp.toString(),depositValue.toFixed(),stakedTime.toString());\n      }\n      return stakedTime;\n    },this.functionsUtil.BNify(0));\n\n    // console.log('stakeStartTime',stakeStartTime,stakedBalance.toFixed());\n\n    stakeStartTime = stakedBalance.gt(0) ? Math.ceil(stakeStartTime.div(stakedBalance)) : 0;\n    // const latestCheckpoint = checkpointEvents.length ? checkpointEvents[checkpointEvents.length-1] : null;\n    // const latestDistribution = etherscanRewardsTxs[0];\n    // const latestDistributionTime = latestDistribution ? this.functionsUtil.BNify(latestDistribution.timeStamp) : this.functionsUtil.BNify(parseInt(Date.now()/1000));\n    // const latestDistributionTime = latestCheckpoint ? this.functionsUtil.BNify(latestCheckpoint.returnValues.time) : this.functionsUtil.BNify(parseInt(Date.now()/1000));\n    const currTime = parseInt(Date.now()/1000);\n    const stakePeriod = this.functionsUtil.BNify(currTime).minus(stakeStartTime);\n    const currentProfit = stakedBalance.gt(0) ? totalCollectedRewards.div(stakedBalance) : this.functionsUtil.BNify(0);\n    const weeksPerYear = 52.14;\n    const secondsPerWeek = 604800;\n    const stakePeriodWeeks = Math.max(1,Math.floor(stakePeriod.div(secondsPerWeek)));\n    const apr = stakePeriod.gt(0) ? currentProfit.times(weeksPerYear).div(stakePeriodWeeks).times(100) : this.functionsUtil.BNify(0);\n    \n    // console.log('APR',currTime,stakeStartTime,apr.toFixed(),currentProfit.toFixed(),stakePeriod.toFixed(),stakePeriodWeeks,totalCollectedRewards.toFixed(),stakedBalance.toFixed());\n\n    globalStats.push({\n      title:'APR',\n      value:`${apr.toFixed(2)}%`,\n      description:'APR is based on your Claimable Rewards and Total Deposited'\n    });\n\n    const lockEndDate = this.state.lockedEnd ? this.functionsUtil.strToMoment(this.state.lockedEnd*1000).utc().format('YYYY/MM/DD HH:mm') : '';\n    globalStats.push({\n      value:lockEndDate,\n      title:'Lock End Date (UTC)',\n      description:'Ending date of your Lock'\n    });\n\n    this.setState({\n      stats,\n      maxApr,\n      claimable,\n      globalStats,\n      statsLoaded,\n      stakedBalance,\n      claimedRewards,\n      distributedRewards\n    });\n  }\n\n  async contractApprovedCallback(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  setIncreaseAction(increaseAction){\n    this.setState({\n      increaseAction\n    });\n  }\n\n  changelockPeriodInput(e){\n    const selectedLockPeriod = null;\n    const lockPeriodInput = e.target.value;\n    const currDate = this.functionsUtil.strToMoment();\n    const mDate = this.functionsUtil.strToMoment(lockPeriodInput+' '+currDate.format('HH:mm:ss'),'YYYY-MM-DD HH:mm:ss').add(1,'second');\n    if (mDate.isValid()){\n      const lockPeriodTimestamp = parseInt(mDate._d.getTime()/1000);\n      // console.log('changelockPeriodInput',lockPeriodTimestamp);\n      this.setState({\n        lockPeriodInput,\n        selectedLockPeriod,\n        lockPeriodTimestamp\n      });\n    }\n  }\n\n  selectLockPeriod(selectedLockPeriod){\n    const minDate = this.state.lockedEnd ? this.functionsUtil.strToMoment(this.state.lockedEnd*1000) : this.functionsUtil.strToMoment();\n    const maxDate = this.functionsUtil.strToMoment().add(4,'year');\n    let mDate = minDate.add(selectedLockPeriod.value,selectedLockPeriod.type).add(1,'second');\n\n    // Check if after 4 years from now\n    if (mDate.isAfter(maxDate)){\n      mDate = maxDate;\n    }\n\n    const lockPeriodInput = mDate.format('YYYY-MM-DD');\n    const lockPeriodTimestamp = parseInt(mDate._d.getTime()/1000);\n\n    // console.log('selectLockPeriod',lockPeriodInput,lockPeriodTimestamp);\n\n    this.setState({\n      lockPeriodInput,\n      selectedLockPeriod,\n      lockPeriodTimestamp\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    // console.log('transactionSucceeded',tx);\n    let infoBox = null;\n    let internalInfoBox = null;\n    switch (this.state.selectedAction){\n      case 'Lock':\n        const lockedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const lockedTokens = lockedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(lockedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        internalInfoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully locked <strong>${lockedTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n        }\n      break;\n      case 'Increase Lock':\n        switch (this.state.increaseAction){\n          case 'time':\n            internalInfoBox = {\n              icon:'DoneAll',\n              iconProps:{\n                color:this.props.theme.colors.transactions.status.completed\n              },\n              text:`You have successfully increased the lock until <strong>${this.functionsUtil.strToMoment(this.state.lockPeriodTimestamp*1000).utc().format('YYYY/MM/DD HH:mm')} UTC</strong>`\n            }\n          break;\n          case 'amount':\n            const increaseAmountTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n            const increaseTokens = increaseAmountTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(increaseAmountTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n            internalInfoBox = {\n              icon:'DoneAll',\n              iconProps:{\n                color:this.props.theme.colors.transactions.status.completed\n              },\n              text:`You have successfully increased the lock by <strong>${increaseTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n            }\n          break;\n          default:\n          break;\n        }\n      break;\n      case 'Withdraw':\n        const unstakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() ) : null;\n        const unstakedTokens = unstakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(unstakedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        internalInfoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully withdrawn <strong>${unstakedTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n        }\n      break;\n      case 'Claim':\n        const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.props.contractInfo.rewardToken]);\n        const receivedRewardsLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => (log.address.toLowerCase() === rewardTokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) )) ) : null;\n        const receivedRewards = receivedRewardsLog ? this.functionsUtil.fixTokenDecimals(parseInt(receivedRewardsLog.data,16),rewardTokenConfig.decimals) : this.functionsUtil.BNify(0);\n        internalInfoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully claimed <strong>${receivedRewards.toFixed(4)} ${this.props.contractInfo.rewardToken}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    const transactionSucceeded = true;\n\n    this.setState({\n      infoBox,\n      internalInfoBox,\n      transactionSucceeded\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async updateData(selectedActionChanged=false){\n    const newState = {};\n\n    // const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.contractInfo.rewardToken]);\n\n    const [\n      tokenBalance,\n      lockedEnd,\n    ] = await Promise.all([\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'locked__end',[this.props.account])\n    ]);\n\n    newState.lockedEnd = lockedEnd && parseInt(lockedEnd)>0 ? parseInt(lockedEnd) : null;\n    newState.lockExpired = newState.lockedEnd && newState.lockedEnd<=parseInt(Date.now()/1000);\n    newState.tokenBalance = !this.functionsUtil.BNify(tokenBalance).isNaN() ? this.functionsUtil.BNify(tokenBalance) : this.functionsUtil.BNify(0);\n\n    let selectedAction = this.state.selectedAction;\n\n    if (selectedAction==='Withdraw' && !newState.lockExpired){\n      selectedAction = 'Lock';\n      newState.selectedAction = selectedAction;\n    }\n\n    // Select Increase if already created a lock\n    if (newState.lockedEnd && selectedAction==='Lock'){\n      selectedAction = 'Increase Lock';\n      newState.increaseAction = 'time';\n      newState.selectedAction = selectedAction;\n    } else if (selectedAction==='Increase Lock' && !newState.increaseAction && !this.state.increaseAction){\n      newState.increaseAction = 'time';\n    }\n\n    // Select Withdraw if the lock has expired\n    if (selectedAction==='Increase Lock' && newState.lockExpired){\n      selectedAction = 'Withdraw';\n      newState.selectedAction = selectedAction;\n    }\n\n    switch (selectedAction){\n      case 'Lock':\n        newState.permitEnabled = false;\n        newState.approveEnabled = true;\n        newState.balanceProp = newState.tokenBalance;\n        newState.approveDescription = `Approve the Staking contract to stake your ${this.props.selectedToken} tokens`;\n      break;\n      case 'Increase Lock':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = newState.tokenBalance;\n        newState.lockPeriodInput = this.functionsUtil.strToMoment(newState.lockedEnd*1000).format('YYYY-MM-DD');\n      break;\n      case 'Withdraw':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = this.functionsUtil.fixTokenDecimals(newState.stakedBalance,this.props.tokenConfig.decimals);\n      break;\n      default:\n      break;\n    }\n\n    if (selectedActionChanged){\n      newState.infoBox = null;\n      newState.internalInfoBox = null;\n      newState.transactionSucceeded = false;\n    }\n\n    const maxDate = this.functionsUtil.strToMoment().add(4,'year').format('YYYY-MM-DD');\n    newState.lockEndDateIsMaxEndDate = newState.lockedEnd ? this.functionsUtil.strToMoment(newState.lockedEnd*1000).format('YYYY-MM-DD')===maxDate : false;\n\n    // console.log('lockEndDateIsMaxEndDate',newState.lockEndDateIsMaxEndDate,maxDate,this.functionsUtil.strToMoment(newState.lockedEnd*1000).format('YYYY-MM-DD'));\n\n    this.setState(newState,() => {\n      this.loadStats();\n    });\n  }\n\n  render() {\n\n    const isLock = this.state.selectedAction === 'Lock';\n    const isStats = this.state.selectedAction === 'Stats';\n    const isClaim = this.state.selectedAction === 'Claim';\n    const isUnstake = this.state.selectedAction === 'Withdraw';\n    const isIncrease = this.state.selectedAction === 'Increase Lock';\n    const txAction = this.state.selectedAction;\n    const canIncrease = !this.state.lockExpired;\n\n    return (\n      <Box\n        width={1}\n      >\n      {\n        this.props.tokenConfig && this.props.tokenConfig.poolLink && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Token link:\n            </Text>\n            <ExtLink\n              mt={1}\n              color={'link'}\n              hoverColor={'link'}\n              href={this.props.tokenConfig.poolLink}\n            >\n              <Text\n                color={'link'}\n                style={{\n                  maxWidth:'100%',\n                  overflow:'hidden',\n                  whiteSpace:'nowrap',\n                  textOverflow:'ellipsis'\n                }}\n              >\n                {this.props.tokenConfig.poolLink}\n              </Text>\n            </ExtLink>\n          </Box>\n        )\n      }\n      {\n        this.state.stakedBalance && this.functionsUtil.BNify(this.state.stakedBalance).gt(0) && this.state.globalStats.length>0 && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Your Stats:\n            </Text>\n            <Flex\n              mt={1}\n              mb={1}\n              width={1}\n              style={{\n                flexBasis:'0',\n                flex:'1 1 0px',\n                flexWrap:'wrap'\n              }}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.globalStats.map( (statInfo,index) =>\n                  <StatsCardSmall\n                    key={`globalStats_${index}`}\n                    cardProps={{\n                      mb:2,\n                      width:['49%','33%'],\n                      // mr:[0,index<this.state.globalStats.length-1 ? 1 : 0]\n                    }}\n                    textProps={{\n                      fontSize:[1,2]\n                    }}\n                    {...statInfo}\n                  />\n                )\n              }\n            </Flex>\n          </Box>\n        )\n      }\n      {\n        this.props.selectedToken && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text mb={1}>\n              Select Action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.lockedEnd === null ? (\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isLock ? 2 : 0\n                    }}\n                    caption={'Lock'}\n                    width={[1,'32%']}\n                    imageSrc={'images/lock.svg'}\n                    isMobile={this.props.isMobile}\n                    // subcaption={'stake LP Tokens'}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isLock}\n                    handleClick={ e => this.setAction('Lock') }\n                  />\n                ) : !this.state.lockExpired ? (\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isIncrease ? 2 : 0\n                    }}\n                    width={[1,'32%']}\n                    isActive={isIncrease}\n                    caption={'Increase Lock'}\n                    imageSrc={'images/lock.svg'}\n                    isMobile={this.props.isMobile}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '54px'\n                    }}\n                    handleClick={ e => this.setAction('Increase Lock') }\n                  />\n                ) : (\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isUnstake ? 2 : 0\n                    }}\n                    width={[1,'32%']}\n                    caption={'Withdraw'}\n                    imageSrc={'images/upload.svg'}\n                    isMobile={this.props.isMobile}\n                    // subcaption={'withdraw LP tokens'}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isUnstake}\n                    handleClick={ e => this.setAction('Withdraw') }\n                  />\n                )\n              }\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isClaim ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Claim'}\n                imageSrc={'images/reward.png'}\n                isMobile={this.props.isMobile}\n                // subcaption={'withdraw LP tokens'}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isClaim}\n                handleClick={ e => this.setAction('Claim') }\n              />\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isStats ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Stats'}\n                imageSrc={'images/stats.svg'}\n                isMobile={this.props.isMobile}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isStats}\n                handleClick={ e => this.setAction('Stats') }\n              />\n            </Flex>\n            {\n              this.state.internalInfoBox && (\n                <IconBox\n                  cardProps={{\n                    mt:1,\n                    mb:3\n                  }}\n                  {...this.state.internalInfoBox}\n                />\n              )\n            }\n            {\n              isStats ? (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  width={1}\n                  style={{\n                    flexWrap:'wrap'\n                  }}\n                  justifyContent={'space-between'}\n                >\n                  {\n                    (!this.state.stats || !this.state.stats.length) ? (\n                      <Flex\n                        mt={3}\n                        mb={3}\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading stats...'}\n                        />\n                      </Flex>\n                    ) : this.state.stats.map( (statInfo,index) =>\n                      <StatsCardSmall\n                        key={`stats_${index}`}\n                        cardProps={{\n                          width:[1,'49%']\n                        }}\n                        {...statInfo}\n                      />\n                    )\n                  }\n                  <Text\n                    mb={1}\n                  >\n                    Distributed Rewards:\n                  </Text>\n                  <Flex\n                    mb={3}\n                    width={1}\n                    justifyContent={'center'}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        pt:2,\n                        pb:3,\n                        px:3,\n                        width:1,\n                        display:'flex',\n                        justifyContent:'center'\n                      }}\n                      isActive={false}\n                      isInteractive={false}\n                    >\n                      {\n                        this.state.distributedRewards && this.state.distributedRewards.length ? (\n                          <Flex\n                            width={1}\n                            flexDirection={'column'}\n                          >\n                            <Flex\n                              pt={0}\n                              pb={1}\n                              width={1}\n                              flexDirection={'row'}\n                              borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                            >\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                width={this.props.isMobile ? 0.45 : 0.4}\n                              >\n                                Date\n                              </Text>\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                width={this.props.isMobile ? 0.4 : 0.3}\n                                textAlign={this.props.isMobile ? 'right' : 'left'}\n                              >\n                                Amount\n                              </Text>\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                width={this.props.isMobile ? 0.15 : 0.3}\n                              >\n                                { this.props.isMobile ? '' : 'Hash' }\n                              </Text>\n                            </Flex>\n                            <Flex\n                              flexDirection={'column'}\n                              alignItems={'flex-start'}\n                              overflow={['visible','scroll']}\n                              maxHeight={['initial','500px']}\n                            >\n                              {\n                                this.state.distributedRewards.map( (reward,index) => (\n                                  <Flex\n                                    width={1}\n                                    py={[2,1]}\n                                    flexDirection={'row'}\n                                    key={`rewards_${index}`}\n                                    borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                                  >\n                                    <Text\n                                      fontWeight={2}\n                                      color={'statValue'}\n                                      fontSize={this.props.isMobile ? 1 : 2}\n                                      width={this.props.isMobile ? 0.45 : 0.4}\n                                    >\n                                      {reward.date}\n                                    </Text>\n                                    <Text\n                                      fontWeight={2}\n                                      color={'statValue'}\n                                      fontSize={this.props.isMobile ? 1 : 2}\n                                      width={this.props.isMobile ? 0.4 : 0.3}\n                                      textAlign={this.props.isMobile ? 'right' : 'left'}\n                                    >\n                                      {reward.amount.toFixed(4)} {reward.tokenName}\n                                    </Text>\n                                    <Flex\n                                      width={this.props.isMobile ? 0.15 : 0.13}\n                                      justifyContent={this.props.isMobile ? 'flex-end' : 'flex-start'}\n                                    >\n                                      <ExtLink\n                                        color={'link'}\n                                        hoverColor={'link'}\n                                        href={this.functionsUtil.getEtherscanTransactionUrl(reward.hash)}\n                                      >\n                                        <Flex\n                                          alignItems={'center'}\n                                          flexDirection={'row'}\n                                        >\n                                          {\n                                            !this.props.isMobile && (\n                                              <Text\n                                                fontSize={2}\n                                                fontWeight={2}\n                                                color={'link'}\n                                              >\n                                                {this.functionsUtil.shortenHash(reward.hash)}\n                                              </Text>\n                                            )\n                                          }\n                                          <Icon\n                                            ml={1}\n                                            color={'link'}\n                                            name={'OpenInNew'}\n                                            size={this.props.isMobile ? '1.4em' : '1.2em'}\n                                          />\n                                        </Flex>\n                                      </ExtLink>\n                                    </Flex>\n                                  </Flex>\n                                ))\n                              }\n                            </Flex>\n                          </Flex>\n                        ) : (\n                          <Text\n                            fontSize={2}\n                            color={'statValue'}\n                          >\n                            No reward distributed yet.\n                          </Text>\n                        )\n                      }\n                    </DashboardCard>\n                  </Flex>\n                </Flex>\n              ) : (this.props.account && this.props.tokenConfig && this.state.balanceProp && this.state.statsLoaded && this.props.contractInfo) ? (\n                <Box\n                  mt={1}\n                  width={1}\n                  mb={[4,3]}\n                >\n                  {\n                    (isIncrease && canIncrease) && (\n                      <Box\n                        mb={2}\n                        width={1}\n                      >\n                        <Text mb={1}>\n                          Choose increase value:\n                        </Text>\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'space-between'}\n                        >\n                          <CardIconButton\n                            {...this.props}\n                            textProps={{\n                              fontSize:[1,2]\n                            }}\n                            cardProps={{\n                              px:3,\n                              py:2,\n                              width:0.49\n                            }}\n                            icon={'AccessTime'}\n                            iconColor={'deposit'}\n                            iconBgColor={'#ced6ff'}\n                            isActive={ this.state.increaseAction === 'time' }\n                            handleClick={ e => this.setIncreaseAction('time') }\n                            text={this.props.isMobile ? 'Time' : 'Increase Time'}\n                          />\n                          <CardIconButton\n                            {...this.props}\n                            textProps={{\n                              fontSize:[1,2]\n                            }}\n                            cardProps={{\n                              px:3,\n                              py:2,\n                              width:0.49\n                            }}\n                            icon={'AttachMoney'}\n                            iconColor={'redeem'}\n                            iconBgColor={'#ceeff6'}\n                            isActive={ this.state.increaseAction === 'amount' }\n                            handleClick={ e => this.setIncreaseAction('amount') }\n                            text={this.props.isMobile ? 'Amount' : 'Increase Amount'}\n                          />\n                        </Flex>\n                      </Box>\n                    )\n                  }\n                  {\n                    ((isLock && this.state.balanceProp && this.state.contractApproved && this.state.balanceProp.gt(0)) || (isIncrease && canIncrease)) && (\n                      <Box\n                        width={1}\n                      > \n                        {\n                          (isLock || this.state.increaseAction === 'time') && (\n                            <Box\n                              width={1}\n                            >\n                              <Text mb={1}>\n                                Choose lock period:\n                              </Text>\n                              {\n                                !this.state.lockEndDateIsMaxEndDate ? (\n                                  <Flex\n                                    width={1}\n                                    alignItems={'center'}\n                                    justifyContent={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Input\n                                      mb={2}\n                                      width={1}\n                                      type={\"date\"}\n                                      required={true}\n                                      height={'3.4em'}\n                                      borderRadius={2}\n                                      fontWeight={500}\n                                      borderColor={'cardBorder'}\n                                      backgroundColor={'cardBg'}\n                                      boxShadow={'none !important'}\n                                      value={this.state.lockPeriodInput || ''}\n                                      onChange={this.changelockPeriodInput.bind(this)}\n                                      border={`1px solid ${this.props.theme.colors.divider}`}\n                                    />\n                                    <Flex\n                                      mb={3}\n                                      width={1}\n                                      alignItems={'center'}\n                                      flexDirection={'row'}\n                                      justifyContent={'space-between'}\n                                    >\n                                      {\n                                        this.state.lockPeriods.map( (p,index) => {\n                                          const isActive = this.state.selectedLockPeriod ? this.state.selectedLockPeriod.value===p.value && this.state.selectedLockPeriod.type === p.type : false;\n                                          return (\n                                            <DashboardCard\n                                              cardProps={{\n                                                p:2,\n                                                width:0.24,\n                                              }}\n                                              isActive={isActive}\n                                              isInteractive={true}\n                                              key={`lockPeriod_${index}`}\n                                              handleClick={e => this.selectLockPeriod(p)}\n                                            >\n                                              <Text \n                                                fontWeight={3}\n                                                fontSize={[1,2]}\n                                                textAlign={'center'}\n                                                color={isActive ? 'copyColor' : 'cellText'}\n                                              >\n                                                {p.label}\n                                              </Text>\n                                            </DashboardCard>\n                                          );\n                                        })\n                                      }\n                                    </Flex>\n                                    {\n                                      isIncrease && (\n                                        <ExecuteTransaction\n                                          params={[]}\n                                          {...this.props}\n                                          parentProps={{\n                                            width:1,\n                                            alignItems:'center',\n                                            justifyContent:'center'\n                                          }}\n                                          Component={Button}\n                                          componentProps={{\n                                            fontSize:3,\n                                            fontWeight:3,\n                                            size:'medium',\n                                            width:[1,1/2],\n                                            borderRadius:4,\n                                            mainColor:'deposit',\n                                            value:'Increase Time',\n                                            disabled:this.state.buttonDisabled\n                                          }}\n                                          action={'Increase Time'}\n                                          methodName={'increase_unlock_time'}\n                                          contractName={this.props.contractInfo.name}\n                                          callback={this.transactionSucceeded.bind(this)}\n                                          getTransactionParams={this.getIncreaseTimeParams.bind(this)}\n                                        />\n                                      )\n                                    }\n                                  </Flex>\n                                ) : (\n                                  <IconBox\n                                    cardProps={{\n                                      mt:1,\n                                      mb:3\n                                    }}\n                                    icon={'Warning'}\n                                    iconProps={{\n                                      color:'cellText'\n                                    }}\n                                    text={`Your tokens are locked for the maxumum allowed period.`}\n                                  />\n                                )\n                              }\n                            </Box>\n                          )\n                        }\n                      </Box>\n                    )\n                  }\n                  {\n                    (isLock || this.state.increaseAction==='amount') ? (\n                      <SendTxWithBalance\n                        error={null}\n                        {...this.props}\n                        action={txAction}\n                        steps={this.state.steps}\n                        infoBox={this.state.infoBox}\n                        tokenConfig={this.props.tokenConfig}\n                        tokenBalance={this.state.balanceProp}\n                        contractInfo={this.props.contractInfo}\n                        permitEnabled={this.state.permitEnabled}\n                        buttonDisabled={this.state.buttonDisabled}\n                        approveEnabled={this.state.approveEnabled}\n                        callback={this.transactionSucceeded.bind(this)}\n                        approveDescription={this.state.approveDescription}\n                        balanceSelectorInfo={this.state.balanceSelectorInfo}\n                        changeInputCallback={this.changeInputCallback.bind(this)}\n                        contractApproved={this.contractApprovedCallback.bind(this)}\n                        getTransactionParams={this.getTransactionParams.bind(this)}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              {\n                                (isLock || isIncrease) ? (\n                                  `You don't have any ${this.props.selectedToken} in your wallet.`\n                                ) : isUnstake && (\n                                  `You don't have any staked ${this.props.selectedToken} to withdraw.`\n                                )\n                              }\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </SendTxWithBalance>\n                    ) : (isIncrease && !canIncrease) ? (\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            name={'LockOpen'}\n                            color={'cellText'}\n                            size={this.props.isMobile ? '1.8em' : '2.3em'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            You cannot increase an expired lock, please Withdraw.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    ) : isUnstake ? (\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        {\n                          this.state.lockExpired ? (\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                            >\n                              <Icon\n                                name={'LockOpen'}\n                                color={'cellText'}\n                                size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              />\n                              <Text\n                                mt={1}\n                                mb={3}\n                                fontSize={2}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                The lock has expired, you can withdraw your {this.props.selectedToken}.\n                              </Text>\n                              <ExecuteTransaction\n                                params={[]}\n                                {...this.props}\n                                Component={Button}\n                                parentProps={{\n                                  width:1,\n                                  alignItems:'center',\n                                  justifyContent:'center'\n                                }}\n                                componentProps={{\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  size:'medium',\n                                  width:[1,1/2],\n                                  borderRadius:4,\n                                  mainColor:'redeem',\n                                  value:'Withdraw',\n                                }}\n                                action={'Withdraw'}\n                                methodName={'withdraw'}\n                                contractName={this.props.contractInfo.name}\n                                callback={this.transactionSucceeded.bind(this)}\n                              />\n                            </Flex>\n                          ) : (\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                            >\n                              <Icon\n                                name={'LockOpen'}\n                                color={'cellText'}\n                                size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              />\n                              <Text\n                                mt={1}\n                                fontSize={2}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                The lock is not expired yet, please wait until {this.functionsUtil.strToMoment(this.state.lockedEnd*1000).utc().format('YYYY/MM/DD HH:mm')} UTC to withdraw your {this.props.selectedToken}.\n                              </Text>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    ) : isClaim && (\n                      <Flex\n                        width={1}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mb:1\n                          }}\n                        >\n                          {\n                            (this.state.claimable && this.state.claimable.gt(0)) ? (\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  color={'cellText'}\n                                  name={'MonetizationOn'}\n                                  size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                />\n                                <Text\n                                  mt={1}\n                                  mb={3}\n                                  fontSize={[2,3]}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You can claim <strong>{this.state.claimable.toFixed(8)} {this.props.contractInfo.rewardToken}</strong>.\n                                </Text>\n                                <ExecuteTransaction\n                                  params={[]}\n                                  {...this.props}\n                                  Component={Button}\n                                  parentProps={{\n                                    width:1,\n                                    alignItems:'center',\n                                    justifyContent:'center'\n                                  }}\n                                  componentProps={{\n                                    fontSize:3,\n                                    fontWeight:3,\n                                    size:'medium',\n                                    width:[1,1/3],\n                                    value:'Claim',\n                                    borderRadius:4,\n                                    mainColor:'redeem',\n                                  }}\n                                  action={'Claim'}\n                                  methodName={'claim'}\n                                  callback={this.transactionSucceeded.bind(this)}\n                                  contractName={this.props.tokenConfig.feeDistributor.name}\n                                />\n                              </Flex>\n                            ) : (\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  name={'MoneyOff'}\n                                  color={'cellText'}\n                                  size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                />\n                                <Text\n                                  mt={1}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You don't have rewards to Claim yet.\n                                </Text>\n                              </Flex>\n                            )\n                          }\n                        </DashboardCard>\n                        <Text\n                          mb={1}\n                        >\n                          Claimed Rewards:\n                        </Text>\n                        <Flex\n                          mb={3}\n                          width={1}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                        >\n                          <DashboardCard\n                            cardProps={{\n                              pt:2,\n                              pb:3,\n                              px:3,\n                              width:1,\n                              display:'flex',\n                              alignItems:'center',\n                              justifyContent:'center'\n                            }}\n                            isActive={false}\n                            isInteractive={false}\n                          >\n                            {\n                              this.state.claimedRewards && this.state.claimedRewards.length ? (\n                                <Flex\n                                  width={1}\n                                  flexDirection={'column'}\n                                >\n                                  <Flex\n                                    pt={0}\n                                    pb={1}\n                                    width={1}\n                                    flexDirection={'row'}\n                                    borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                                  >\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      width={this.props.isMobile ? 0.5 : 0.4}\n                                    >\n                                      Date\n                                    </Text>\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      width={this.props.isMobile ? 0.5 : 0.3}\n                                      textAlign={this.props.isMobile ? 'right' : 'left'}\n                                    >\n                                      Amount\n                                    </Text>\n                                    {\n                                      !this.props.isMobile && (\n                                        <Text\n                                          width={0.3}\n                                          fontSize={1}\n                                          fontWeight={3}\n                                        >\n                                          Hash\n                                        </Text>\n                                      )\n                                    }\n                                  </Flex>\n                                  {\n                                    this.state.claimedRewards.map( (claim,index) => (\n                                      <Flex\n                                        py={1}\n                                        width={1}\n                                        flexDirection={'row'}\n                                        key={`claim_${index}`}\n                                        borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                                      >\n                                        <Text\n                                          fontWeight={2}\n                                          color={'statValue'}\n                                          fontSize={this.props.isMobile ? 1 : 2}\n                                          width={this.props.isMobile ? 0.5 : 0.4}\n                                        >\n                                          {claim.date}\n                                        </Text>\n                                        <Text\n                                          fontWeight={2}\n                                          color={'statValue'}\n                                          fontSize={this.props.isMobile ? 1 : 2}\n                                          width={this.props.isMobile ? 0.5 : 0.3}\n                                          textAlign={this.props.isMobile ? 'right' : 'left'}\n                                        >\n                                          {claim.amount.toFixed(4)} {claim.tokenName}\n                                        </Text>\n                                        {\n                                          !this.props.isMobile && (\n                                            <ExtLink\n                                              width={0.3}\n                                              color={'link'}\n                                              hoverColor={'link'}\n                                              href={this.functionsUtil.getEtherscanTransactionUrl(claim.hash)}\n                                            >\n                                              <Flex\n                                                alignItems={'center'}\n                                                flexDirection={'row'}\n                                              >\n                                                <Text\n                                                  fontSize={2}\n                                                  fontWeight={2}\n                                                  color={'link'}\n                                                >\n                                                  {this.functionsUtil.shortenHash(claim.hash)}\n                                                </Text>\n                                                <Icon\n                                                  ml={1}\n                                                  size={'1.2em'}\n                                                  color={'link'}\n                                                  name={'OpenInNew'}\n                                                />\n                                              </Flex>\n                                            </ExtLink>\n                                          )\n                                        }\n                                      </Flex>\n                                    ))\n                                  }\n                                </Flex>\n                              ) : (\n                                <Text\n                                  fontSize={2}\n                                  color={'statValue'}\n                                >\n                                  No reward claimed yet.\n                                </Text>\n                              )\n                            }\n                          </DashboardCard>\n                        </Flex>\n                      </Flex>\n                    )\n                  }\n                </Box>\n              ) : !this.props.account ? (\n                <ConnectBox\n                  cardProps={{\n                    mt:2\n                  }}\n                  {...this.props}\n                />\n              ) : (\n                <Flex\n                  mt={3}\n                  mb={3}\n                  width={1}\n                >\n                  <FlexLoader\n                    flexProps={{\n                      flexDirection:'row'\n                    }}\n                    loaderProps={{\n                      size:'30px'\n                    }}\n                    textProps={{\n                      ml:2\n                    }}\n                    text={'Loading info...'}\n                  />\n                </Flex>\n              )\n            }\n          </Box>\n        )\n      }\n      </Box>\n    );\n  }\n}\n\nexport default IdleStaking;","import ExtLink from '../ExtLink/ExtLink';\nimport IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\n// import NXMaster from '../abis/nexus/NXMaster.json';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ButtonLoader from '../ButtonLoader/ButtonLoader';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\nimport { Flex, Box, Text, Input, Link, Progress, Button, Icon, Tooltip } from \"rimble-ui\";\n\nclass NexusMutual extends Component {\n\n  state = {\n    step:1,\n    quote:null,\n    steps:{\n      1:'Get Quote',\n      2:'Buy Cover'\n    },\n    periodOptions:{\n      30:{\n        label:'30d'\n      },\n      60:{\n        label:'60d'\n      },\n      90:{\n        label:'90d'\n      },\n      365:{\n        label:'1y'\n      }\n    },\n    coverId:null,\n    claimId:null,\n    capacity:null,\n    loading:false,\n    coverCost:null,\n    amountValue:'',\n    periodValue:'',\n    yearlyCost:null,\n    maxCapacity:null,\n    amountValid:true,\n    periodValid:true,\n    tokenConfig:null,\n    tokenBalance:null,\n    selectedToken:null,\n    claimableCovers:[],\n    tokenApproved:false,\n    selectedPeriod:null,\n    maxPriceWithFee:null,\n    transactionParams:[],\n    transactionValue:null,\n    yieldTokenBalance:null,\n    selectedUnderlying:null,\n    selectedAction:'deposit',\n    yieldTokenApproved:false,\n    claimButtonDisabled:false,\n    selectedCoverToClaim:null,\n    defaultClaimableCover:null,\n    selectedUnderlyingConfig:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadContracts();\n  }\n\n  async loadContracts(){\n    const claimableCovers = [];\n    const nexusMutualCoverages = await this.functionsUtil.getNexusMutualCoverages(this.props.account);\n    nexusMutualCoverages.forEach( coverage => {\n      if (coverage.incident){\n        claimableCovers.push(coverage);\n      }\n    });\n\n    const validClaimableCoverFromParam = this.props.urlParams.param3 ? claimableCovers.find( cover => parseInt(cover.value) === parseInt(this.props.urlParams.param3) ) : null;\n\n    const defaultClaimableCover = claimableCovers.length>0 ? claimableCovers[0] : null;\n    const selectedCoverToClaim = validClaimableCoverFromParam ? validClaimableCoverFromParam : defaultClaimableCover || null;\n\n    this.setState({\n      claimableCovers,\n      selectedCoverToClaim,\n      defaultClaimableCover\n    });\n\n    const selectedAction = ['deposit','claim'].includes(this.props.urlParams.param2) ? this.props.urlParams.param2 : this.state.selectedAction;\n    const paramIsValidToken = this.props.urlParams.param3 && Object.keys(this.props.toolProps.availableTokens).includes(this.props.urlParams.param3);\n    const selectedToken = paramIsValidToken ? this.props.urlParams.param3 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    this.setSelectedAction(selectedAction);\n    this.changeSelectedToken(selectedToken);\n    // console.log('coverBoughtEvents',coverBoughtEvents,'claimSubmittedEvents',claimSubmittedEvents,'claimableCovers',claimableCovers);\n  }\n\n  async getPoolCapacity(selectedUnderlying,tokenConfig){\n    const requiredNetwork = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    const baseEndpoint = this.functionsUtil.getGlobalConfig(['network','providers','nexus','endpoints',requiredNetwork]);\n    const response = await this.functionsUtil.makeRequest(`${baseEndpoint}contracts/${tokenConfig.address}/capacity`);\n    if (response && response.data){\n      const capacity = response.data;\n      // console.log('getPoolCapacity',capacity);\n      const maxCapacity = capacity && capacity[`capacity${selectedUnderlying}`] ? this.functionsUtil.fixTokenDecimals(capacity[`capacity${selectedUnderlying}`],tokenConfig.decimals) : this.functionsUtil.BNify(0);\n      return maxCapacity;\n    }\n    return false;\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const selectedUnderlyingChanged = prevState.selectedUnderlying !== this.state.selectedUnderlying;\n    if (selectedTokenChanged || selectedUnderlyingChanged){\n      this.loadTokenData();\n    }\n  }\n\n  async loadTokenData(){\n\n    const isETH = this.state.selectedToken === 'ETH';\n    const selectedUnderlyingConfig = this.state.tokenConfig.underlying[this.state.selectedUnderlying];\n\n    // Init Underlying Contract\n    await Promise.all([\n      this.props.initContract(this.state.tokenConfig.token, this.state.tokenConfig.realAddress, this.state.tokenConfig.abi),\n      this.props.initContract(selectedUnderlyingConfig.name, selectedUnderlyingConfig.address, selectedUnderlyingConfig.abi)\n    ]);\n\n    let [\n      maxCapacity,\n      yieldTokenBalance,\n      yieldTokenApproved,\n      tokenApproved,\n      tokenBalance\n    ] = await Promise.all([\n      this.getPoolCapacity(this.state.selectedUnderlying,this.state.tokenConfig),\n      this.functionsUtil.getTokenBalance(this.state.tokenConfig.token,this.props.account),\n      this.functionsUtil.checkTokenApproved(this.state.selectedToken,this.props.contractInfo.address,this.props.account),\n      this.functionsUtil.checkTokenApproved(selectedUnderlyingConfig.name,this.props.contractInfo.address,this.props.account),\n      isETH ? this.functionsUtil.getETHBalance(this.props.account,false) : this.functionsUtil.getTokenBalance(selectedUnderlyingConfig.name,this.props.account,false),\n    ]);\n\n    tokenBalance = tokenBalance || this.functionsUtil.BNify(0);\n    yieldTokenBalance = yieldTokenBalance || this.functionsUtil.BNify(0);\n\n    this.setState({\n      maxCapacity,\n      tokenBalance,\n      tokenApproved,\n      yieldTokenBalance,\n      yieldTokenApproved,\n      selectedUnderlyingConfig\n    });\n  }\n\n  async changeSelectedToken(selectedToken){\n    const periodValue = '';\n    const amountValue = '';\n    const tokenConfig = this.props.toolProps.availableTokens[selectedToken];\n    const selectedUnderlying = Object.keys(tokenConfig.underlying)[0];\n\n    this.setState({\n      amountValue,\n      periodValue,\n      tokenConfig,\n      selectedToken,\n      selectedUnderlying\n    });\n  }\n\n  changeSelectedUnderlying(selectedUnderlying){\n    this.setState({\n      selectedUnderlying\n    });\n  }\n\n  setMaxCoverAmount(){\n    const amountValue = this.state.maxCapacity.toFixed();\n    this.changeAmount({\n      target:{\n        value:amountValue\n      }\n    });\n  }\n\n  changeAmount = (e) => {\n    const amountValue = e.target.value.length && !isNaN(e.target.value) ? Math.floor(e.target.value) : '';\n    const amountValid = this.functionsUtil.BNify(amountValue).gt(0) && this.functionsUtil.BNify(amountValue).lte(this.state.maxCapacity);\n    this.setState({\n      amountValue,\n      amountValid\n    });\n  }\n\n  changePeriod = (e) => {\n    const periodValue = e.target.value.length && !isNaN(e.target.value) ? e.target.value : '';\n    const periodValid = parseInt(periodValue)>=30 && parseInt(periodValue)<=365;\n    this.setState({\n      periodValue,\n      periodValid,\n      selectedPeriod:null\n    });\n  }\n\n  selectPeriod = (selectedPeriod) => {\n    this.changePeriod({\n      target:{\n        value:selectedPeriod\n      }\n    });\n  }\n\n  async getQuote() {\n\n    this.setState({\n      loading:true\n    });\n\n    // Setup your cover data.\n    const coverData = {\n      period: this.state.periodValue, // days\n      coverAmount: this.state.amountValue, // ETH in units not wei\n      currency: this.state.selectedUnderlying,\n      contractAddress: this.state.tokenConfig.address, // the contract you will be buying cover for\n      asset: this.state.tokenConfig.underlying[this.state.selectedUnderlying].address\n    };\n\n    // URL to request a quote for.\n    // const quoteURL = 'https://api.nexusmutual.io/v1/quote?' +\n    const requiredNetwork = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    const baseEndpoint = this.functionsUtil.getGlobalConfig(['network','providers','nexus','endpoints',requiredNetwork]);\n    const quoteURL = `${baseEndpoint}quote?coverAmount=${coverData.coverAmount}&currency=${coverData.currency}&period=${coverData.period}&contractAddress=${coverData.contractAddress}`;\n\n    const response = await this.functionsUtil.makeRequest(quoteURL);\n\n    const quote = response && response.data ? response.data : null;\n\n    if (!quote){\n      this.setState({\n        loading:false\n      });\n      return false;\n    }\n\n    // encode the signature result in the data field\n    const data = this.props.web3.eth.abi.encodeParameters(\n      ['uint', 'uint', 'uint', 'uint', 'uint8', 'bytes32', 'bytes32'],\n      [quote.price, quote.priceInNXM, quote.expiresAt, quote.generatedAt, quote.v, quote.r, quote.s],\n    );\n\n    const COVER_TYPE = this.functionsUtil.toBN(0);\n    const feePercentage = await this.functionsUtil.genericContractCall(this.props.contractInfo.name,'feePercentage');\n    const basePrice = this.functionsUtil.toBN(quote.price);\n    const priceWithFee = basePrice.mul(this.functionsUtil.toBN(feePercentage)).divn(10000).add(basePrice);\n    const amountInWei = this.functionsUtil.toWei(coverData.coverAmount.toString());\n    const maxPriceWithFee = priceWithFee;\n    const coverCost = this.functionsUtil.fixTokenDecimals(maxPriceWithFee,this.state.tokenConfig.decimals);\n    const yearlyCost = coverCost.div(this.state.amountValue).times(365).div(this.state.periodValue).times(100);\n\n    // console.log('coverCost',maxPriceWithFee,coverCost.toFixed(),this.state.amountValue.toFixed(),this.state.periodValue,yearlyCost.toFixed());\n\n    const transactionParams = [\n      coverData.contractAddress,\n      coverData.asset,\n      amountInWei,\n      coverData.period,\n      COVER_TYPE,\n      maxPriceWithFee,\n      data\n    ];\n\n    const transactionValue = this.state.selectedUnderlying === 'ETH' ? priceWithFee : null;\n\n    // console.log(feePercentage,transactionParams,transactionValue,quote);\n\n    // debugger;\n\n    const step = 2;\n    const loading = false;\n\n    this.setState({\n      step,\n      quote,\n      loading,\n      coverCost,\n      yearlyCost,\n      maxPriceWithFee,\n      transactionValue,\n      transactionParams\n    });\n  }\n\n  approveSucceeded = (tx) => {\n    const tokenApproved = true;\n    this.setState({\n      tokenApproved\n    });\n  }\n\n  yieldTokenApproveSucceeded = (tx) => {\n    const yieldTokenApproved = true;\n    this.setState({\n      yieldTokenApproved\n    });\n  }\n\n  claimInputChange = (amount) => {\n    const normalizedAmount = this.functionsUtil.normalizeTokenAmount(amount,this.state.tokenConfig.decimals);\n    const claimButtonDisabled = this.functionsUtil.BNify(amount).lte(0) || this.functionsUtil.BNify(normalizedAmount).gt(this.state.selectedCoverToClaim.coveredTokenAmount);\n    this.setState({\n      claimButtonDisabled\n    });\n  }\n\n  getClaimTransactionParams = (coveredTokenAmount) => {\n    return {\n      methodName:'claimTokens',\n      methodParams:[this.state.selectedCoverToClaim.value,this.state.selectedCoverToClaim.incident.id,coveredTokenAmount,this.state.tokenConfig.realAddress]\n    };\n  }\n\n  claimTransactionSucceeded = (tx) => {\n    // const claimId = this.functionsUtil.getGlobalConfig(['txReceipt','events','ClaimSubmitted','returnValues','claimId'],tx);\n    // this.setState({\n    //   claimId\n    // });\n    this.loadContracts();\n  }\n\n  buyCoverTransactionSucceeded = (tx) => {\n    const coverId = this.functionsUtil.getGlobalConfig(['txReceipt','events','CoverBought','returnValues','coverId'],tx);\n    this.setState({\n      coverId\n    });\n  }\n\n  setSelectedAction(selectedAction){\n    if (selectedAction !== this.state.selectedAction){\n      this.setState({\n        selectedAction\n      });\n    }\n  }\n\n  selectCoverToClaim(coverId){\n    const selectedCoverToClaim = this.state.selectedCoverToClaim ? this.state.claimableCovers.find( cover => parseInt(cover.value) === coverId ) : null;\n    // console.log('selectCoverToClaim',selectedCoverToClaim);\n    this.setState({\n      selectedCoverToClaim\n    });\n  }\n\n  reset(){\n    const step = 1;\n    const quote = null;\n    const coverId = null;\n    const periodValue = '';\n    const amountValue = '';\n    const transactionParams = [];\n    this.setState({\n      step,\n      quote,\n      coverId,\n      periodValue,\n      amountValue,\n      transactionParams\n    });\n  }\n\n  render() {\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          mb={3}\n          width={[1,0.36]}\n          flexDirection={'column'}\n        >\n          <Box\n            mb={2}\n            width={1}\n          >\n            <Text mb={1}>\n              Choose action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'space-between'}\n            >\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:2,\n                  width:0.49\n                }}\n                textProps={{\n                  fontSize:[1,2]\n                }}\n                icon={'Security'}\n                iconColor={'deposit'}\n                text={'Buy Coverage'}\n                iconBgColor={'#ced6ff'}\n                isActive={ this.state.selectedAction === 'deposit' }\n                handleClick={ e => this.setSelectedAction('deposit') }\n              />\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:2,\n                  width:0.49\n                }}\n                textProps={{\n                  fontSize:[1,2]\n                }}\n                icon={'FileUpload'}\n                iconColor={'redeem'}\n                text={'Claim Tokens'}\n                iconBgColor={'#ceeff6'}\n                isActive={ this.state.selectedAction === 'claim' }\n                handleClick={ e => this.setSelectedAction('claim') }\n              />\n            </Flex>\n          </Box>\n          {\n            this.state.selectedAction === 'deposit' &&\n              <IconBox\n                cardProps={{\n                  py:2,\n                  px:3,\n                  my:2,\n                  width:1,\n                }}\n                isActive={true}\n                isInteractive={false}\n                icon={'LightbulbOutline'}\n                iconProps={{\n                  color:'flashColor'\n                }}\n                textProps={{\n                  color:'flashColor'\n                }}\n                text={`If your yield bearing token de-pegs in value by more than 10%, claim up to 90% of your loss by swapping your yield bearing token for a claim payment.`}\n              >\n                <ExtLink\n                  ml={1}\n                  fontWeight={500}\n                  color={'primary'}\n                  fontSize={'15px'}\n                  hoverColor={'primary'}\n                  href={'https://nexusmutual.io/pages/YieldTokenCoverv1.0.pdf'}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    Read More\n                    <Icon\n                      ml={1}\n                      size={'0.9em'}\n                      color={'primary'}\n                      name={'OpenInNew'}\n                    />\n                    .\n                  </Flex>\n                </ExtLink>\n              </IconBox>\n          }\n          {\n            this.state.selectedAction === 'deposit' ? (\n              <Flex\n                width={1}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Flex\n                  mb={1}\n                  width={1}\n                  flexDirection={'row'}\n                  justifyContent={'space-between'}\n                >\n                  {\n                    Object.keys(this.state.steps).map( stepIndex => (\n                      <Link\n                        style={{\n                          flexBasis:'0',\n                          flex:'1 1 0px',\n                          textDecoration:'none',\n                          cursor:this.state.step>=stepIndex ? 'pointer' : 'default'\n                        }}\n                        fontSize={2}\n                        textAlign={'center'}\n                        key={`step_${stepIndex}`}\n                        color={ this.state.step>=stepIndex ? 'primary' : 'cellText' }\n                        hoverColor={ this.state.step>=stepIndex ? 'primary' : 'cellText' }\n                        activeColor={ this.state.step>=stepIndex ? 'primary' : 'cellText' }\n                      >\n                        {this.state.steps[stepIndex]}\n                      </Link>\n                    ) )\n                  }\n                </Flex>\n                <Flex\n                  mb={2}\n                  width={1}\n                  flexDirection={'column'}\n                >\n                  <Progress\n                    style={{\n                      width:'100%',\n                      height:'15px'\n                    }}\n                    value={(1/Object.keys(this.state.steps).length)*this.state.step}\n                  />\n                </Flex>\n                {\n                  !this.state.selectedToken || !this.state.tokenBalance ? (\n                    <FlexLoader\n                      flexProps={{\n                        mt:2,\n                        flexDirection:'row'\n                      }}\n                      loaderProps={{\n                        size:'25px',\n                      }}\n                      textProps={{\n                        ml:2\n                      }}\n                      text={'Loading assets...'}\n                    />\n                  ) : this.state.coverId ? (\n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <IconBox\n                        cardProps={{\n                          mt:1,\n                        }}\n                        icon={'DoneAll'}\n                        iconProps={{\n                          color:this.props.theme.colors.transactions.status.completed\n                        }}\n                        text={`You have successfully bought your Cover! Your Cover ID is <strong>${this.state.coverId}</strong>`}\n                      />\n                      <Link\n                        mt={2}\n                        color={'link'}\n                        hoverColor={'primary'}\n                        onClick={this.reset.bind(this)}\n                      >\n                        Get New Quote\n                      </Link>\n                    </Flex>\n                  ) : !this.state.quote ? (\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Box\n                        width={1}\n                      >\n                        <Text mb={1}>\n                          Select Token to Cover:\n                        </Text>\n                        <AssetSelector\n                          {...this.props}\n                          id={'token-from'}\n                          showBalance={false}\n                          isSearchable={false}\n                          selectedToken={this.state.selectedToken}\n                          onChange={this.changeSelectedToken.bind(this)}\n                          availableTokens={this.props.toolProps.availableTokens}\n                        />\n                      </Box>\n                      <Box\n                        mt={2}\n                        width={1}\n                      >\n                        <Flex\n                          mb={1}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                        >\n                          <Text>\n                            Select Payment Asset:\n                          </Text>\n                          <Tooltip\n                            placement={'top'}\n                            message={`This is the asset that you will use as payment method for the coverage premium`}\n                          >\n                            <Icon\n                              ml={1}\n                              size={'1em'}\n                              name={\"Info\"}\n                              color={'cellTitle'}\n                            />\n                          </Tooltip>\n                        </Flex>\n                        <AssetSelector\n                          {...this.props}\n                          showBalance={false}\n                          selectedToken={this.state.selectedUnderlying}\n                          onChange={this.changeSelectedUnderlying.bind(this)}\n                          availableTokens={this.state.tokenConfig.underlying}\n                        />\n                      </Box>\n                      {\n                        this.functionsUtil.BNify(this.state.maxCapacity).gt(0) ? (\n                          <Box\n                            width={1}\n                          >\n                            <Box\n                              mt={2}\n                              width={1}\n                            >\n                              <Text\n                                mb={1}\n                              >\n                                How much do you want to cover?\n                              </Text>\n                              <Input\n                                min={0}\n                                step={1}\n                                width={'100%'}\n                                type={\"number\"}\n                                required={true}\n                                height={'3.4em'}\n                                borderRadius={2}\n                                fontWeight={500}\n                                borderColor={'cardBorder'}\n                                backgroundColor={'cardBg'}\n                                boxShadow={'none !important'}\n                                value={this.state.amountValue}\n                                onChange={this.changeAmount.bind(this)}\n                                border={`1px solid ${this.props.theme.colors.divider}`}\n                                placeholder={`Insert ${this.state.selectedUnderlying.toUpperCase()} amount`}\n                              />\n                              <Flex\n                                width={1}\n                                maxWidth={'100%'}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'flex-end'}\n                              >\n                                <Link\n                                  mt={1}\n                                  fontSize={1}\n                                  fontWeight={3}\n                                  color={'dark-gray'}\n                                  textAlign={'right'}\n                                  hoverColor={'copyColor'}\n                                  onClick={ (e) => this.setMaxCoverAmount() }\n                                  style={{\n                                    maxWidth:'100%',\n                                    overflow:'hidden',\n                                    whiteSpace:'nowrap',\n                                    textOverflow:'ellipsis'\n                                  }}\n                                >\n                                  Max Available: {this.state.maxCapacity.toFixed(this.props.isMobile ? 2 : 4)} {this.state.selectedUnderlying}\n                                </Link>\n                              </Flex>\n                            </Box>\n                            <Box\n                              mt={2}\n                              width={1}\n                            >\n                              <Text\n                                mb={1}\n                              >\n                                For how many days?\n                              </Text>\n                              <Input\n                                min={0}\n                                width={'100%'}\n                                type={\"number\"}\n                                required={true}\n                                height={'3.4em'}\n                                borderRadius={2}\n                                fontWeight={500}\n                                borderWidth={'1px'}\n                                borderStyle={'solid'}\n                                backgroundColor={'cardBg'}\n                                boxShadow={'none !important'}\n                                value={this.state.periodValue}\n                                placeholder={'Insert days of coverage'}\n                                onChange={this.changePeriod.bind(this)}\n                                borderColor={this.state.periodValid ? 'cardBorder' : 'red'}\n                              />\n                              {\n                                !this.state.periodValid && (\n                                  <Text\n                                    my={1}\n                                    fontSize={2}\n                                    color={'red'}\n                                  >\n                                    Enter a period between 30 and 365 days!\n                                  </Text>\n                                )\n                              }\n                              <Flex\n                                mt={2}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'space-between'}\n                              >\n                                {\n                                  Object.keys(this.state.periodOptions).map( period => {\n                                    const periodInfo = this.state.periodOptions[period];\n                                    const isActive = this.state.selectedPeriod===period;\n                                    const width = (1/Object.keys(this.state.periodOptions).length)-0.01;\n                                    return (\n                                      <DashboardCard\n                                        cardProps={{\n                                          p:2,\n                                          width:width,\n                                        }}\n                                        isActive={isActive}\n                                        isInteractive={true}\n                                        key={`coverPeriod_${period}`}\n                                        handleClick={e => this.selectPeriod(period)}\n                                      >\n                                        <Text\n                                          fontSize={2}\n                                          fontWeight={3}\n                                          textAlign={'center'}\n                                          color={this.props.isActive ? 'copyColor' : 'legend'}\n                                        >\n                                          {periodInfo.label}\n                                        </Text>\n                                      </DashboardCard>\n                                    );\n                                  })\n                                }\n                              </Flex>\n                            </Box>\n                            <Flex\n                              mt={2}\n                              width={1}\n                              justifyContent={'center'}\n                            >\n                              <ButtonLoader\n                                buttonProps={{\n                                  my:2,\n                                  mx:[0, 2],\n                                  size:'medium',\n                                  borderRadius:4,\n                                  mainColor:'blue',\n                                  disabled:(!this.state.amountValid || !this.state.selectedUnderlying || !this.state.periodValue || !this.state.periodValid)\n                                }}\n                                buttonText={'GET QUOTE'}\n                                isLoading={this.state.loading}\n                                handleClick={ e => this.getQuote(e) }\n                              />\n                            </Flex>\n                          </Box>\n                        ) : (\n                          <IconBox\n                            cardProps={{\n                              mt:3\n                            }}\n                            icon={'MoneyOff'}\n                            iconProps={{\n                              color:'cellText'\n                            }}\n                            text={`Coverage for ${this.state.selectedToken} is not available at the moment.`}\n                          />\n                        )\n                      }\n                    </Flex>\n                  ) : (\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Text\n                        mb={2}\n                        fontSize={3}\n                        fontWeight={3}\n                        color={'primary'}\n                      >\n                        Cover Summary:\n                      </Text>\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          mb:2,\n                          px:3\n                        }}\n                        isActive={false}\n                        isInteractive={false}\n                      >\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Protocol:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          Idle Finance\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Yield Token:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.selectedToken}\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Cover Amount:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.amountValue} {this.state.selectedUnderlying}\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Cover Period:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.periodValue} days\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Cover Price:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.coverCost.toFixed(6)} {this.state.selectedUnderlying}\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Yearly Cost:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.yearlyCost.toFixed(2)}%\n                        </Text>\n                      </DashboardCard>\n                      <Flex\n                        mt={2}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        {\n                          this.functionsUtil.BNify(this.state.tokenBalance).lt(this.functionsUtil.BNify(this.state.quote.price)) ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mb:3\n                              }}\n                            >\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Icon\n                                  size={'2em'}\n                                  name={'MoneyOff'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mt={1}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You don't have enough {this.state.selectedUnderlying} in your wallet.\n                                </Text>\n                                <Link\n                                  mt={1}\n                                  color={'link'}\n                                  hoverColor={'primary'}\n                                  onClick={this.reset.bind(this)}\n                                >\n                                  Get New Quote\n                                </Link>\n                              </Flex>\n                            </DashboardCard>\n                          ) : !this.state.tokenApproved ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mb:3\n                              }}\n                            >\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Icon\n                                  size={'2em'}\n                                  name={'MoneyOff'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mb={2}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  To buy the coverage you need to approve the Smart-Contract.\n                                </Text>\n                                <ExecuteTransaction\n                                  {...this.props}\n                                  parentProps={{\n                                    width:1,\n                                    alignItems:'center',\n                                    justifyContent:'center'\n                                  }}\n                                  Component={Button}\n                                  componentProps={{\n                                    fontSize:3,\n                                    fontWeight:3,\n                                    size:'medium',\n                                    width:[1,1/2],\n                                    borderRadius:4,\n                                    value:'Approve',\n                                    mainColor:'deposit'\n                                  }}\n                                  action={'Approve'}\n                                  methodName={'approve'}\n                                  callback={this.approveSucceeded.bind(this)}\n                                  contractName={this.state.selectedUnderlyingConfig.name}\n                                  params={[this.props.contractInfo.address,this.props.web3.utils.toTwosComplement('-1')]}\n                                />\n                                <Link\n                                  mt={1}\n                                  color={'link'}\n                                  hoverColor={'primary'}\n                                  onClick={this.reset.bind(this)}\n                                >\n                                  Get New Quote\n                                </Link>\n                              </Flex>\n                            </DashboardCard>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <ExecuteTransaction\n                                {...this.props}\n                                parentProps={{\n                                  width:1,\n                                  alignItems:'center',\n                                  justifyContent:'center'\n                                }}\n                                Component={Button}\n                                componentProps={{\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  size:'medium',\n                                  width:[1,1/2],\n                                  borderRadius:4,\n                                  mainColor:'deposit',\n                                  value:'Buy Coverage',\n                                  disabled:this.state.buttonDisabled\n                                }}\n                                action={'Buy Coverage'}\n                                methodName={'buyCover'}\n                                value={this.state.transactionValue}\n                                params={this.state.transactionParams}\n                                contractName={this.props.contractInfo.name}\n                                callback={this.buyCoverTransactionSucceeded.bind(this)}\n                              />\n                              <Link\n                                mt={1}\n                                color={'link'}\n                                hoverColor={'primary'}\n                                onClick={this.reset.bind(this)}\n                              >\n                                Get New Quote\n                              </Link>\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                    </Flex>\n                  )\n                }\n              </Flex>\n            ) : this.state.selectedAction === 'claim' && (\n              <Box\n                width={1}\n              >\n                {\n                  this.state.claimableCovers.length>0 ? (\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Text mb={1}>\n                        Select Cover:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        isSearchable={false}\n                        name={'claimable_covers'}\n                        options={this.state.claimableCovers}\n                        onChange={this.selectCoverToClaim.bind(this)}\n                        defaultValue={this.state.defaultClaimableCover}\n                      />\n                      {\n                        this.state.selectedCoverToClaim.claimId ? (\n                          <IconBox\n                            cardProps={{\n                              mt:2,\n                            }}\n                            icon={'DoneAll'}\n                            iconProps={{\n                              color:this.props.theme.colors.transactions.status.completed\n                            }}\n                            text={`You've successfully claimed <strong>${this.state.selectedCoverToClaim.claimedAmount.toFixed(4)} ${this.state.selectedCoverToClaim.coverAsset}</strong> for this Cover!`}\n                          />\n                        ) : (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mt:3,\n                                mb:1\n                              }}\n                            >\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Icon\n                                  size={'2em'}\n                                  color={'cellText'}\n                                  name={'FileUpload'}\n                                />\n                                <Text\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You can Claim up to <strong>{this.state.selectedCoverToClaim.claimableAmount.toFixed(4)} {this.state.selectedCoverToClaim.coverAsset}</strong> for this Cover!\n                                </Text>\n                                <Text\n                                  fontSize={1}\n                                  color={'alert'}\n                                  textAlign={'center'}\n                                >\n                                  Keep in mind that the cover becomes inactive once any amount of tokens are claimed.\n                                </Text>\n                              </Flex>\n                            </DashboardCard>\n                            <SendTxWithBalance\n                              error={null}\n                              {...this.props}\n                              permitEnabled={false}\n                              approveEnabled={true}\n                              action={'Claim Token'}\n                              tokenConfig={this.state.tokenConfig}\n                              contractInfo={this.props.contractInfo}\n                              buttonDisabled={this.state.claimButtonDisabled}\n                              callback={this.claimTransactionSucceeded.bind(this)}\n                              changeInputCallback={this.claimInputChange.bind(this)}\n                              contractApproved={this.yieldTokenApproveSucceeded.bind(this)}\n                              getTransactionParams={this.getClaimTransactionParams.bind(this)}\n                              approveDescription={'To claim your tokens you need to approve the Smart-Contract.'}\n                              tokenBalance={this.functionsUtil.BNify(this.state.yieldTokenBalance).gt(this.state.selectedCoverToClaim.maxCoveredAmount) ? this.state.selectedCoverToClaim.maxCoveredAmount : this.state.yieldTokenBalance }\n                            >\n                              <DashboardCard\n                                cardProps={{\n                                  p:3,\n                                  mt:2\n                                }}\n                              >\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                >\n                                  <Icon\n                                    name={'MoneyOff'}\n                                    color={'cellText'}\n                                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                  />\n                                  <Text\n                                    mt={1}\n                                    fontSize={2}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    You don't have any {this.state.selectedToken} in your wallet.\n                                  </Text>\n                                </Flex>\n                              </DashboardCard>\n                            </SendTxWithBalance>\n                          </Flex>\n                        )\n                      }\n                    </Flex>\n                  ) : (\n                    <IconBox\n                      cardProps={{\n                        mt:1,\n                      }}\n                      icon={'Warning'}\n                      iconProps={{\n                        color:'cellText'\n                      }}\n                      text={`You cannot submit any Claim for your Covers.`}\n                    />\n                  )\n                }\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default NexusMutual;\n","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Box, Flex, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass TokenWrapper extends Component {\n\n  state = {\n    action:null,\n    infoBox:null,\n    balanceDest:null,\n    tokenConfig:null,\n    balanceStart:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    approveEnabled:true,\n    approveDescription:null,\n    showTokenWrapperEnabled:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const actionChanged = (prevState.action !== this.state.action) || (this.props.action !== prevProps.action);\n    const startContractChanged = JSON.stringify(this.props.startContract) !== JSON.stringify(prevProps.startContract);\n    const destContractChanged = JSON.stringify(this.props.destContract) !== JSON.stringify(prevProps.destContract);\n    if (actionChanged || startContractChanged || destContractChanged){\n      this.loadData();\n    }\n  }\n\n  async loadData(){\n    const action = this.props.action || this.state.action || 'wrap';\n    this.setState({\n      action\n    },() => {\n      this.loadBalance();\n      this.updateActionData();\n    });\n  }\n\n  async getTokenBalance(contractInfo){\n\n    if (!contractInfo){\n      return false;\n    }\n\n    let tokenBalance = null;\n    switch (contractInfo.name){\n      case 'ETH':\n        tokenBalance = await this.functionsUtil.getETHBalance(this.props.account);\n      break;\n      default:\n        // Init Contract\n        await this.props.initContract(contractInfo.name,contractInfo.address,contractInfo.abi);\n        tokenBalance = await this.functionsUtil.getTokenBalance(contractInfo.name,this.props.account);\n      break;\n    }\n\n    tokenBalance = tokenBalance || this.functionsUtil.BNify(0);\n\n    return tokenBalance;\n  }\n\n  async loadBalance(){\n\n    if (!this.props.toolProps.startContract || !this.props.toolProps.destContract){\n      return false;\n    }\n\n    // Load Balances\n    const [\n      balanceDest,\n      balanceStart\n    ] = await Promise.all([\n      this.getTokenBalance(this.props.toolProps.destContract),\n      this.getTokenBalance(this.props.toolProps.startContract)\n    ]);\n\n    const tokenBalance = this.state.action === 'wrap' ? balanceStart : balanceDest;\n    // console.log('loadBalance',this.props.toolProps.startContract,parseFloat(balanceStart),this.props.toolProps.destContract,parseFloat(balanceDest));\n\n    this.setState({\n      balanceDest,\n      balanceStart,\n      tokenBalance\n    });\n  }\n\n  updateActionData(){\n    let infoBox = null;\n    let tokenConfig = null;\n    let tokenBalance = null;\n    let selectedToken = null;\n    let approveEnabled = true;\n    let approveDescription = null;\n\n    switch (this.state.action){\n      case 'wrap':\n        approveEnabled = true;\n        tokenBalance = this.state.balanceStart;\n        tokenConfig = this.props.toolProps.startContract;\n        selectedToken = this.props.toolProps.startContract.name;\n        approveDescription = `To Mint new ${this.props.toolProps.destContract.name} you need to approve the Smart-Contract first`;\n        infoBox = {\n          icon:'FileDownload',\n          // iconProps:{\n          //   color:this.props.theme.colors.transactions.action.deposit\n          // },\n          text:`Wrap your ${this.props.toolProps.startContract.name} and get ${this.props.toolProps.destContract.name}`\n        };\n      break;\n      case 'unwrap':\n        selectedToken = this.props.toolProps.destContract.name;\n        approveEnabled = false;\n        tokenBalance = this.state.balanceDest;\n        tokenConfig = this.props.toolProps.destContract;\n        approveDescription = `To withdraw your ${this.props.toolProps.startContract.name} you need to approve the Smart-Contract first`;\n        infoBox = {\n          icon:'FileUpload',\n          // iconProps:{\n          //   color:this.props.theme.colors.transactions.action.redeem\n          // },\n          text:`Unwrap your ${this.props.toolProps.destContract.name} and get back ${this.props.toolProps.startContract.name}`\n        };\n      break;\n      default:\n      break;\n    }\n\n    this.setState({\n      infoBox,\n      tokenConfig,\n      tokenBalance,\n      selectedToken,\n      approveEnabled,\n      approveDescription\n    },() => {\n      this.loadBalance();\n    });\n  }\n\n  setAction(action){\n    this.setState({\n      action\n    });\n  }\n\n  transactionSucceeded(tx,amount,params){\n    let infoBox = null;\n\n    switch (this.state.action){\n      case 'wrap':\n        const mintLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.destContract.address.toLowerCase() ) : null;\n        let mintedAmount = mintLog ? parseInt(mintLog.data,16) : amount;\n        mintedAmount = this.functionsUtil.fixTokenDecimals(mintedAmount,this.state.tokenConfig.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have received <strong>${mintedAmount.toFixed(4)} ${this.props.toolProps.destContract.name}</strong>`\n        }\n      break;\n      case 'unwrap':\n        const withdrawLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.destContract.address.toLowerCase() ) : null;\n        let withdrawnAmount = withdrawLog ? parseInt(withdrawLog.data,16) : amount;\n        withdrawnAmount = this.functionsUtil.fixTokenDecimals(withdrawnAmount,this.state.tokenConfig.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have received <strong>${withdrawnAmount.toFixed(4)} ${this.props.toolProps.startContract.name}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    // Update balances\n    this.loadBalance();\n\n    this.setState({\n      infoBox\n    });\n  }\n\n  getTransactionParams(amount){\n    const params = {};\n    switch (this.state.action){\n      case 'wrap':\n        params.value = amount;\n        params.methodParams = [];\n        params.methodName = this.props.toolProps.startContract.wrapMethod;\n      break;\n      case 'unwrap':\n        params.value = null;\n        params.methodParams = [amount];\n        params.methodName = this.props.toolProps.destContract.unwrapMethod;\n      break;\n      default:\n      break;\n    }\n    return params;\n  }\n\n  render() {\n\n    const fullWidth = !!this.props.fullWidth;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        mt={[2,fullWidth ? 2 : 3]}\n      >\n        <Flex\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n          width={[1,fullWidth ? 1 : 0.36]}\n        >\n          {\n            !this.props.account ? (\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mt:3\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                    name={'Input'}\n                    color={'cellText'}\n                  />\n                  <Text\n                    mt={[1,2]}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Please connect with your wallet interact with Idle.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:2,\n                      width:[1,1/2]\n                    }}\n                    handleClick={this.props.connectAndValidateAccount}\n                  >\n                    Connect\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            ) : (\n              <Box\n                width={1}\n              >\n                {\n                  !this.props.action && (\n                    <Flex\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        mb={2}\n                      >\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <CardIconButton\n                          {...this.props}\n                          cardProps={{\n                            px:3,\n                            py:3,\n                            width:0.48\n                          }}\n                          text={'Wrap'}\n                          iconColor={'deposit'}\n                          icon={'ArrowDownward'}\n                          iconBgColor={'#ced6ff'}\n                          isActive={ this.state.action === 'wrap' }\n                          handleClick={ e => this.setAction('wrap') }\n                        />\n                        <CardIconButton\n                          {...this.props}\n                          cardProps={{\n                            px:3,\n                            py:3,\n                            width:0.48\n                          }}\n                          text={'Unwrap'}\n                          iconColor={'redeem'}\n                          icon={'ArrowUpward'}\n                          iconBgColor={'#ceeff6'}\n                          isActive={ this.state.action === 'unwrap' }\n                          handleClick={ e => this.setAction('unwrap') }\n                        />\n                      </Flex>\n                    </Flex>\n\n                  )\n                }\n                <Box\n                  width={1}\n                  my={fullWidth ? 2 : 3}\n                >\n                  {\n                    this.state.tokenBalance!==null ? (\n                      <SendTxWithBalance\n                        {...this.props}\n                        approveEnabled={false}\n                        action={this.state.action}\n                        infoBox={this.state.infoBox}\n                        tokenConfig={this.state.tokenConfig}\n                        tokenBalance={this.state.tokenBalance}\n                        contractInfo={this.props.toolProps.destContract}\n                        callback={this.transactionSucceeded.bind(this)}\n                        approveDescription={this.state.approveDescription}\n                        // changeInputCallback={this.changeInputCallback.bind(this)}\n                        getTransactionParams={this.getTransactionParams.bind(this)}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedToken} to {this.state.action} in your wallet.\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </SendTxWithBalance>\n                    ) : (\n                      <Flex\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading Balance...'}\n                        />\n                      </Flex>\n                    )\n                  }\n                </Box>\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenWrapper;","import theme from '../theme';\nimport { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport AssetField from '../AssetField/AssetField';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass PortfolioDonut extends Component {\n  state = {\n    chartData:null,\n    totalFunds:null,\n    parentWidth:null,\n    selectedToken:null,\n    selectedTokenConfig:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentWillUnmount() {\n    \n  }\n\n  async componentDidMount(){\n    this.loadPortfolio();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  async loadPortfolio() {\n\n    const portfolio = {};\n    let totalFunds = this.functionsUtil.BNify(0);\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.availableTokens),async (token) => {\n      const tokenConfig = this.props.availableTokens[token];\n      const idleTokenBalance = await this.functionsUtil.getTokenBalance(tokenConfig.idle.token,this.props.account);\n\n      if (idleTokenBalance){\n        const tokenPrice = await this.functionsUtil.getIdleTokenPrice(tokenConfig);\n        const tokenBalance = await this.functionsUtil.convertTokenBalance(idleTokenBalance.times(tokenPrice),token,tokenConfig,isRisk);\n\n        if (tokenBalance.gt(0)){\n          portfolio[token] = tokenBalance;\n\n          // Increment total balance\n          totalFunds = totalFunds.plus(tokenBalance);\n        }\n      }\n    });\n\n    // Add Gov Tokens\n    const govTokensUserBalances = await this.functionsUtil.getGovTokensUserBalances(this.props.account,this.props.availableTokens,'DAI',null,true);\n    if (govTokensUserBalances){\n      Object.keys(govTokensUserBalances).forEach( govToken => {\n        const govTokenBalance = this.functionsUtil.BNify(govTokensUserBalances[govToken]);\n        portfolio[govToken] = govTokenBalance;\n        totalFunds = totalFunds.plus(govTokenBalance);\n      });\n    }\n\n    const chartData = [];\n\n    Object.keys(portfolio).forEach(token => {\n      const tokenBalance = portfolio[token];\n      if (tokenBalance.gt(0)){\n        const tokenPercentage = tokenBalance.div(totalFunds).times(100);\n        let tokenColorHsl = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'color','hsl']);\n        tokenColorHsl = tokenColorHsl ? tokenColorHsl.join(',') : '0,0%,0%';\n        chartData.push({\n          id:token,\n          color:'hsl('+tokenColorHsl+')',\n          value:Math.round(tokenPercentage),\n          label:token.substr(0,1).toUpperCase()+token.substr(1),\n        });\n      }\n    });\n\n    this.setState({\n      portfolio,\n      chartData,\n      totalFunds\n    });\n  }\n\n  render() {\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth:0,\n      cornerRadius:0,\n      innerRadius:0.65,\n      motionDamping:15,\n      motionStiffness:90,\n      colors:d => d.color,\n      tooltipFormat: v => v+'%',\n      sliceLabel: d => {\n        if (parseFloat(d.value)>=5){\n          return d.value+'%';\n        } else {\n          return null;\n        }\n      },\n      radialLabel: d => {\n        return null;//Object.keys(this.props.availableTokens).indexOf(d.label.toUpperCase());\n      },\n      theme:{\n        tooltip: {\n          container: {\n            display: 'none'\n          },\n        },\n        labels:{\n          text:{\n            fontSize:16,\n            fontWeight:500,\n            fontFamily: theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      radialLabelsLinkColor:{ from: 'color' },\n      radialLabelsLinkOffset:-parseInt(this.state.parentWidth*0.2),\n      margin: this.props.isMobile ? { top: 15, right: 25, bottom: 30, left: 25 } : { top: 30, right: 50, bottom: 60, left: 50 },\n      onMouseEnter:(data, e) => {\n        const selectedToken = data.id;\n        const selectedTokenConfig = selectedToken ? this.props.availableTokens[selectedToken] || this.functionsUtil.getGlobalConfig(['stats','tokens',selectedToken]) : null;\n        this.setState({\n          selectedToken,\n          selectedTokenConfig\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setState({\n          selectedToken:null,\n          selectedTokenConfig:null\n        });\n      },\n      legends:[\n        {\n          itemWidth: 60,\n          itemHeight: 18,\n          translateY: this.props.isMobile ? 25 : 50,\n          symbolSize: 10,\n          anchor: 'bottom',\n          direction: 'row',\n          itemTextColor: theme.colors.legend,\n          symbolShape: 'circle',\n          effects: [\n            {\n              on: 'hover',\n              style: {\n                itemTextColor: '#000'\n              }\n            }\n          ]\n        }\n      ]\n    };\n\n    const selectedToken = this.state.selectedToken !== null && this.state.portfolio[this.state.selectedToken] ? this.state.portfolio[this.state.selectedToken] : false;\n    const strategyIcon = this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'icon']);\n    const convertToken = this.state.selectedToken ? this.functionsUtil.getGlobalConfig(['stats','tokens',this.state.selectedToken,'conversionRateField']) : false;\n\n    return (\n      <Flex\n        width={1}\n      >\n        { \n          (this.state.totalFunds || selectedToken) && \n            <Flex\n              zIndex={0}\n              top={['32%','35%']}\n              left={['23%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              width={['55%','46%']}\n              position={'absolute'}\n              height={['40%','35%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                selectedToken ? (\n                  <>\n                    <AssetField\n                      fieldInfo={{\n                        name:'icon',\n                        props:{\n                          mb:1,\n                          height:'2.2em'\n                        }\n                      }}\n                      token={this.state.selectedToken}\n                      tokenConfig={this.state.selectedTokenConfig}\n                    />\n                    <SmartNumber\n                      unitProps={{\n                        ml:2,\n                        fontSize:4,\n                        fontWeight:3\n                      }}\n                      decimals={2}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      fontWeight={[3,4]}\n                      unit={ convertToken ? '$' : null}\n                      number={this.state.portfolio[this.state.selectedToken]}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      {this.state.selectedToken}\n                    </Text>\n                  </>\n                ) : (\n                  <>\n                    <Image\n                      mb={1}\n                      height={'2.2em'}\n                      src={strategyIcon}\n                    />\n                    <SmartNumber\n                      unit={'$'}\n                      unitProps={{\n                        ml:2,\n                        fontSize:4,\n                        fontWeight:3\n                      }}\n                      decimals={2}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      fontWeight={[3,4]}\n                      number={this.state.totalFunds}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      Total funds\n                    </Text>\n                  </>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          {...chartProps}\n          showLoader={true}\n          data={this.state.chartData}\n          parentId={this.props.parentId}\n          parentIdHeight={this.props.parentId}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default PortfolioDonut;\n","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport { Card, Flex, Image, Text } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\n\nclass EarningsEstimation extends Component {\n  state = {\n    tokensEarnings:null,\n    estimationStepsPerc:null,\n    estimationStepsOptions:null,\n    estimationStepsDefaultOption:null,\n    estimationSteps:{\n      0:{\n        'Month':{\n          perc:1/12,\n          width:1/3\n        },\n        '2 months':{\n          perc:1/6,\n          width:1/3\n        },\n        '3 months':{\n          perc:1/4,\n          width:1/3,\n          optionName:'3M'\n        }\n      },\n      25:{\n        '3 months':{\n          perc:3/12,\n          width:3/12\n        },\n        '8 months':{\n          perc:8/12,\n          width:5/12\n        },\n        'Year':{\n          perc:1,\n          width:4/12,\n          optionName:'1Y'\n        }\n      },\n      90:{\n        'Year':{\n          perc:1,\n          width:1/3,\n        },\n        '2 Years':{\n          perc:2,\n          width:1/3,\n        },\n        '5 Years':{\n          perc:5,\n          width:3/5,\n          optionName:'5Y'\n        }\n      }\n    }\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  setEstimationStepsPerc(estimationStepsPerc){\n    this.setState({\n      estimationStepsPerc\n    });\n  }\n\n  async loadEarnings(){\n    let stepsCount = {};\n    let tokensEarnings = {};\n    // let estimationStepsPerc = 0;\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const aggregatedEarnings = {\n      earnings:this.functionsUtil.BNify(0),\n      amountLent:this.functionsUtil.BNify(0),\n      earningsYear:this.functionsUtil.BNify(0),\n    };\n\n    await this.functionsUtil.asyncForEach(this.props.enabledTokens,async (token) => {\n      const tokenConfig = this.props.availableTokens[token];\n      const amountDeposited = await this.functionsUtil.getAmountDeposited(tokenConfig,this.props.account);\n\n      const [amountLent,avgBuyPrice,idleTokenPrice] = await Promise.all([\n        this.functionsUtil.convertTokenBalance(amountDeposited,token,tokenConfig,isRisk),\n        this.functionsUtil.getAvgBuyPrice([token],this.props.account),\n        this.functionsUtil.getIdleTokenPrice(tokenConfig)\n      ]);\n\n      const earningsPerc = idleTokenPrice.div(avgBuyPrice[token]).minus(1);\n      const earnings = amountLent.times(earningsPerc);\n\n      let earningsYear = 0;\n      let tokenAPY = 0;\n      const tokenAprs = await this.functionsUtil.getTokenAprs(tokenConfig);\n      if (tokenAprs && tokenAprs.avgApr !== null){\n        tokenAPY = tokenAprs.avgApy;\n        earningsYear = amountLent.times(tokenAPY.div(100));\n      }\n\n      const earningsPercStep = Math.floor(earnings.div(earningsYear).times(100));\n      \n      const possibleSteps = Object.keys(this.state.estimationSteps).filter(perc => perc<=earningsPercStep);\n      const maxPossibleStep = parseInt(possibleSteps.pop());\n\n      stepsCount[maxPossibleStep] = stepsCount[maxPossibleStep] ? stepsCount[maxPossibleStep]+1 : 1;\n\n      if (!this.functionsUtil.BNify(amountLent).isNaN() && !this.functionsUtil.BNify(idleTokenPrice).isNaN() && !this.functionsUtil.BNify(earnings).isNaN() && !this.functionsUtil.BNify(earningsYear).isNaN()){\n        tokensEarnings[token] = {\n          earnings,\n          amountLent,\n          earningsYear,\n          idleTokenPrice\n        };\n\n        // const earningsUSD = await this.functionsUtil.convertTokenBalance(earningsYearings,token,tokenConfig,isRisk);\n        // const amountLentUSD = await this.functionsUtil.convertTokenBalance(amountLent,token,tokenConfig,isRisk);\n        // const earningsYearUSD = await this.functionsUtil.convertTokenBalance(earningsYear,token,tokenConfig,isRisk);\n\n        aggregatedEarnings.earnings = aggregatedEarnings.earnings.plus(earnings);\n        aggregatedEarnings.amountLent = aggregatedEarnings.amountLent.plus(amountLent);\n        aggregatedEarnings.earningsYear = aggregatedEarnings.earningsYear.plus(earningsYear);\n      }\n    });\n\n    const maxCountStep = Object.keys(stepsCount).reduce( (maxCountStep,step) => {\n      const count = stepsCount[step];\n      if (count>maxCountStep.count){\n        maxCountStep.step = parseInt(step);\n        maxCountStep.count = parseInt(count);\n      }\n      return maxCountStep;\n    },{\n      step:0,\n      count:0\n    });\n\n    const estimationStepsPerc = maxCountStep.step || parseInt(Object.keys(this.state.estimationSteps)[1]);\n\n    const orderedTokensEarnings = {};\n    this.props.enabledTokens.forEach( token => {\n      if (tokensEarnings[token]){\n        orderedTokensEarnings[token] = tokensEarnings[token];\n      }\n    });\n\n    tokensEarnings = orderedTokensEarnings;\n\n    // Add USD aggregated earnings\n    if (Object.keys(tokensEarnings).length>1){\n      tokensEarnings['USD'] = aggregatedEarnings;\n    }\n\n    let estimationStepsDefaultOption = null;\n    const estimationStepsOptions = Object.keys(this.state.estimationSteps).map( step => {\n      const estimationStep = Object.values(this.state.estimationSteps[step]).pop();\n      const label = estimationStep.optionName ? estimationStep.optionName : Object.keys(this.state.estimationSteps[step]).pop();\n      const value = parseInt(step);\n      const option = { value, label };\n\n      if (value === estimationStepsPerc){\n        estimationStepsDefaultOption = option;\n      }\n      return option;\n    });\n\n    this.setState({\n      tokensEarnings,\n      estimationStepsPerc,\n      estimationStepsOptions,\n      estimationStepsDefaultOption,\n    });\n  }\n\n  render() {\n\n    if (!this.state.tokensEarnings){\n      return (\n        <FlexLoader\n          flexProps={{\n            flexDirection:'row',\n            minHeight:this.props.height\n          }}\n          loaderProps={{\n            size:'30px'\n          }}\n          textProps={{\n            ml:2\n          }}\n          text={'Loading estimations...'}\n        />\n      );\n    }\n\n    const estimationSteps = this.state.estimationSteps[this.state.estimationStepsPerc] ? this.state.estimationSteps[this.state.estimationStepsPerc] : this.state.estimationSteps[0];\n\n    return (\n      <Card\n        pr={0}\n        my={1}\n        width={1}\n        px={[3,4]}\n        py={[2,3]}\n        boxShadow={1}\n        borderRadius={2}\n        borderColor={'cardBorder'}\n        backgroundColor={'cardBg'}\n      >\n        <Flex\n          mt={2}\n          mb={3}\n          zIndex={9999}\n          justifyContent={'flex-end'}\n        >\n          <Flex\n            zIndex={9999}\n            width={[1,0.2]}\n            flexDirection={'column'}\n          >\n            <GenericSelector\n              innerProps={{\n                p:0,\n                px:1\n              }}\n              name={'estimation-step'}\n              options={this.state.estimationStepsOptions}\n              onChange={ v => this.setEstimationStepsPerc(v) }\n              defaultValue={this.state.estimationStepsDefaultOption}\n            />\n          </Flex>\n        </Flex>\n        {\n          Object.keys(this.state.tokensEarnings).map((token,tokenIndex) => {\n            const tokenConfig = this.props.availableTokens[token];\n            const tokenEarnings = this.state.tokensEarnings[token];\n            const estimationStepPerc = this.functionsUtil.BNify(Object.values(estimationSteps).pop().perc);\n            const finalEarnings = tokenEarnings.earningsYear.times(estimationStepPerc);\n            const cursorPerc = finalEarnings.gt(0) ? Math.min(1,parseFloat(tokenEarnings.earnings.div(finalEarnings))) : 1;\n            const tokenIcon = tokenConfig && tokenConfig.icon ? tokenConfig.icon :`images/tokens/${token}.svg`;\n            const tokenRGBColor = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'color','rgb']).join(',');\n            // console.log(tokenEarnings.earnings.toFixed(10),tokenEarnings.earningsYear.toFixed(10),finalEarnings.toFixed(10),cursorPerc.toFixed(10),estimationStepPerc.toFixed(10));\n            return (\n              <Flex\n                id={`asset-${token}`}\n                flexDirection={'row'}\n                key={`asset-${token}`}\n                borderTop={ token === 'USD' ? `1px solid ${this.props.theme.colors.divider}` : null }\n              >\n                <Flex\n                  width={[1,0.93]}\n                  position={'relative'}\n                >\n                  <Flex\n                    width={1}\n                    height={'100%'}\n                    position={'absolute'}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    <Flex\n                      width={[0.15,0.1]}\n                    >\n                    </Flex>\n                    <Flex\n                      width={[0.85,0.9]}\n                      height={'100%'}\n                      flexDirection={'row'}\n                    >\n                      {\n                        Object.keys(estimationSteps).map((label,estimateIndex) => {\n                          const estimationStep = estimationSteps[label];\n                          const estimationStepEarnings = tokenEarnings.earningsYear.times(this.functionsUtil.BNify(estimationStep.perc));\n                          let estimationStepEarningsFormatted = this.functionsUtil.formatMoney(estimationStepEarnings,this.props.isMobile ? 2 : estimationStepEarnings.lt(1) ? 3 : 2);\n                          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'conversionRateField']);\n                          if (conversionRateField){\n                            estimationStepEarningsFormatted = '$ '+estimationStepEarningsFormatted;\n                          }\n                          return (\n                            <Flex\n                              pr={2}\n                              justifyContent={'flex-end'}\n                              width={estimationStep.width}\n                              pt={ token === 'USD' ? 2 : null }\n                              key={`asset-estimate-${token}-${estimateIndex}`}\n                              borderRight={`1px solid ${this.props.theme.colors.divider}`}\n                            >\n                              {\n                                (token === 'USD' || (estimateIndex === Object.keys(estimationSteps).length-1)) && \n                                  <Text\n                                    fontWeight={3}\n                                    fontSize={[0,'1em']}\n                                    style={{\n                                      wordBreak:'break-all'\n                                    }}\n                                    color={tokenEarnings.earnings.gte(estimationStepEarnings) ? 'copyColor' : 'legend'}\n                                  >\n                                    {estimationStepEarningsFormatted}\n                                  </Text>\n                              }\n                            </Flex>\n                          );\n                        })\n                      }\n                    </Flex>\n                  </Flex>\n                  <Flex\n                    width={1}\n                    zIndex={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                    pt={ token === 'USD' ? ['2em','2.8em'] : '1.4em' }\n                    pb={ tokenIndex<Object.keys(this.state.tokensEarnings).length-1 ? '1em' : 0 }\n                  >\n                    <Flex\n                      width={[0.15,0.1]}\n                      justifyContent={['flex-start','flex-end']}\n                    >\n                      <Text\n                        pr={[0,2]}\n                        fontSize={[0,3]}\n                        fontWeight={[3,4]}\n                      >\n                        {token}\n                      </Text>\n                    </Flex>\n                    <Flex\n                      width={[0.85,0.9]}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      height={['20px','35px']}\n                      justifyContent={'flex-start'}\n                    >\n                      <Flex\n                        height={'100%'}\n                        width={cursorPerc}\n                        backgroundColor={'cardBg'}\n                      >\n                        <Flex\n                          height={'100%'}\n                          width={'100%'}\n                          borderRadius={['0 20px 20px 0','0 35px 35px 0']}\n                          style={{background:`linear-gradient(90deg, rgba(${tokenRGBColor},0) 0%, rgba(${tokenRGBColor},0.1) 30%, rgba(${tokenRGBColor},1) 100%)`}}\n                        ></Flex>\n                      </Flex>\n                      <Flex\n                        pl={2}\n                        width={'auto'}\n                        height={'100%'}\n                        alignItems={'center'}\n                        justifyContent={'flex-start'}\n                      >\n                        <Image src={tokenIcon} height={['1.4em','2.2em']} />\n                      </Flex>\n                      {\n                        <Flex\n                          pl={2}\n                          alignItems={'center'}\n                        >\n                          {\n                            token !== 'USD' ? (\n                              <AssetField\n                                {...this.props}\n                                token={token}\n                                tokenConfig={tokenConfig}\n                                fieldInfo={{\n                                  name:'earningsCounter',\n                                  props:{\n                                    decimals:this.props.isMobile ? 6 : 7,\n                                    maxPrecision:this.props.isMobile ? 9 : 10,\n                                    style:{\n                                      color:this.props.theme.colors.copyColor,\n                                      fontWeight:this.props.isMobile ? 500 : 700,\n                                      fontSize:this.props.isMobile ? '14px' : '22px',\n                                    }\n                                  }\n                                }}\n                              />\n                            ) : (\n                              <TotalEarningsCounter\n                                {...this.props}\n                                decimals={this.props.isMobile ? 6 : 7}\n                                maxPrecision={this.props.isMobile ? 9 : 10}\n                                counterStyle={{\n                                  color:this.props.theme.colors.copyColor,\n                                  fontWeight:this.props.isMobile ? 500 : 700,\n                                  fontFamily:this.props.theme.fonts.sansSerif,\n                                  fontSize:this.props.isMobile ? '14px' : '22px',\n                                }}\n                              />\n                            )\n                          }\n                        </Flex>\n                      }\n                    </Flex>\n                  </Flex>\n                </Flex>\n                {\n                  !this.props.isMobile && \n                    <Flex width={0.07} alignItems={'flex-start'} justifyContent={'flex-end'}>\n                    </Flex>\n                }\n              </Flex>\n            )\n          })\n        }\n        <Flex\n          flexDirection={'row'}\n        >\n          <Flex\n            width={[1,0.93]}\n            position={'relative'}\n          >\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'center'}\n            >\n              <Flex width={[0.15,0.1]}></Flex>\n              <Flex\n                width={[0.85,0.9]}\n                flexDirection={'row'}\n              >\n                {\n                  Object.keys(estimationSteps).map((estimationLabel,estimateIndex) => {\n                    const estimationStep = estimationSteps[estimationLabel];\n                    return (\n                      <Flex\n                        pt={2}\n                        pr={[1,2]}\n                        justifyContent={'flex-end'}\n                        width={estimationStep.width}\n                        key={`estimate-label-${estimateIndex}`}\n                        borderRight={`1px solid ${this.props.theme.colors.divider}`}\n                      >\n                        <Text\n                          fontWeight={3}\n                          fontSize={[0,2]}\n                          color={'legend'}\n                        >\n                          {estimationLabel}\n                        </Text>\n                      </Flex>\n                    );\n                  })\n                }\n              </Flex>\n            </Flex>\n          </Flex>\n          {\n            !this.props.isMobile && \n              <Flex width={0.07} alignItems={'flex-start'} justifyContent={'center'}>\n                <Text fontWeight={4} fontSize={3}></Text>\n              </Flex>\n          }\n        </Flex>\n      </Card>\n    );\n  }\n}\n\nexport default EarningsEstimation;\n","import React, { Component } from 'react';\nimport { Flex, Icon, Text, Image } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass DashboardIconButton extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          pr:2,\n          py:[2,3],\n          pl:[2,3],\n        }}\n        isActive={false}\n        isInteractive={true}\n        handleClick={this.props.handleClick}\n      >\n        <Flex\n          height={'100%'}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'center'}\n        > \n          <Flex\n            px={[1,0]}\n          >\n            {\n              this.props.icon ? (\n                <Icon\n                  name={this.props.icon}\n                  size={this.props.isMobile ? '1.8em' : '3em'}\n                  color={this.props.iconColor ? this.props.iconColor : 'redeem'}\n                />\n              ) : this.props.image && (\n                <Image\n                  src={this.props.image}\n                  width={this.props.isMobile ? '1.8em' : '2.7em'}\n                  height={this.props.isMobile ? '1.8em' : '2.7em'}\n                />\n              )\n            }\n          </Flex>\n          <Flex\n            ml={[2,3]}\n            flexDirection={'column'}\n            alignItems={'flex-start'}\n            justifyContent={'center'}\n          >\n            <Text\n              fontWeight={3}\n              fontSize={[1,3]}\n            >\n              {this.props.title}\n            </Text>\n            <Text\n              fontWeight={2}\n              fontSize={[0,2]}\n              color={'cellText'}\n            >\n              {this.props.text}\n            </Text>\n          </Flex>\n          <Icon\n            align={'center'}\n            color={'cellText'}\n            name={'KeyboardArrowRight'}\n            size={this.props.isMobile ? '1.8em' : '2.5em'}\n          />\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default DashboardIconButton;\n","import { Flex } from \"rimble-ui\";\nimport Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport CustomList from '../CustomList/CustomList';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass PolygonBridgeTransactions extends Component {\n\n  state = {\n    loaded:false,\n    bridgeEnabled:false,\n    polygonTransactions:null,\n    polygonTransactionsAvailableTokens:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    if (accountChanged){\n      this.loadData();\n    }\n  }\n\n  async loadData(){\n    if (!this.props.account){\n      return false;\n    }\n\n    let polygonTransactionsAvailableTokens = null;\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    const polygonBridgeConfig = this.functionsUtil.getGlobalConfig(['tools','polygonBridge']);\n    const bridgeEnabled = polygonBridgeConfig.enabled && polygonBridgeConfig.availableNetworks.includes(currentNetwork.id);\n\n    if (!bridgeEnabled){\n      return this.setState({\n        loaded:true,\n        bridgeEnabled\n      });\n    }\n\n    const polygonTransactions = await this.functionsUtil.getPolygonBridgeTxs(this.props.account);\n\n    // console.log('polygonTransactions',this.props.account,this.props.web3,polygonTransactions);\n\n    if (polygonTransactions && polygonTransactions.length>0){\n      polygonTransactionsAvailableTokens = polygonTransactions.map( (tx) => {\n        const tokenConfig = this.functionsUtil.getGlobalConfig(['tools','polygonBridge','props','availableTokens',tx.tokenSymbol]);\n        let actionIcon = null;\n        switch (tx.action){\n          default:\n          case 'Deposit':\n            actionIcon = 'ArrowDownward';\n          break;\n          case 'Withdraw':\n            actionIcon = 'ArrowUpward';\n          break;\n          case 'Exit':\n            actionIcon = 'Undo';\n          break;\n        }\n        const depositInfo = {\n          actionIcon,\n          amount:tx.value,\n          token:tx.tokenSymbol,\n          action:tx.action.toUpperCase(),\n          bridgeType:tx.bridgeType.toUpperCase(),\n          status:tx.included ? 'Completed' : 'pending',\n          hash:this.functionsUtil.shortenHash(tx.hash),\n          statusIcon:tx.included ? 'Done' : 'Timelapse',\n          actionIconProps:{\n            color:this.props.theme.colors.transactions.action[tx.action.toLowerCase()],\n            bgColor:this.props.theme.colors.transactions.actionBg[tx.action.toLowerCase()]\n          },\n          url:this.functionsUtil.getEtherscanTransactionUrl(tx.hash,tx.networkId),\n          date:this.functionsUtil.strToMoment(parseInt(tx.timeStamp)*1000).format('DD MMM, YYYY'),\n          statusIconProps:{\n            color:tx.included ? this.props.theme.colors.transactions.status.completed : this.props.theme.colors.transactions.status.pending\n          },\n          tokenIcon:tokenConfig.icon || this.functionsUtil.getGlobalConfig(['stats','tokens',tx.tokenSymbol,'icon']) || `images/tokens/${tx.tokenSymbol}.svg`\n        };\n        return depositInfo;\n      });\n    }\n\n    // console.log('PolygonBridgeTransactions',polygonTransactions,polygonTransactionsAvailableTokens);\n\n    this.setState({\n      loaded:true,\n      bridgeEnabled,\n      polygonTransactions,\n      polygonTransactionsAvailableTokens\n    });\n  }\n\n  render() {\n\n    if (!this.state.loaded || !this.state.bridgeEnabled){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          this.props.title && ((this.state.polygonTransactionsAvailableTokens && this.state.polygonTransactionsAvailableTokens.length>0) || this.props.children) && (\n            <Title\n              {...this.props.titleProps}\n            >\n              {this.props.title}\n            </Title>\n          )\n        }\n        {\n          this.state.polygonTransactionsAvailableTokens && this.state.polygonTransactionsAvailableTokens.length>0 ? (\n            <CustomList\n              paginationEnabled={true}\n              handleClick={(props) => this.functionsUtil.openWindow(props.row.url)}\n              cols={[\n                {\n                  title:'HASH',\n                  mobile:false,\n                  props:{\n                    width:[0.44,0.18],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'bgIcon',\n                      path:['actionIcon'],\n                    },\n                    {\n                      type:'text',\n                      path:['hash'],\n                      props:{\n                        ml:[0,2]\n                      }\n                    },\n                  ]\n                },\n                {\n                  title:'ACTION',\n                  props:{\n                    width:[0.25,0.14],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'text',\n                      path:['action'],\n                    },\n                  ]\n                },\n                {\n                  title:'DATE',\n                  props:{\n                    width:[0.25,0.15],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'text',\n                      path:['date'],\n                    },\n                  ]\n                },\n                {\n                  title:'BRIDGE',\n                  mobile:false,\n                  props:{\n                    width:[0.44,0.12],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'text',\n                      path:['bridgeType'],\n                    },\n                  ]\n                },\n                {\n                  title:'STATUS',\n                  props:{\n                    width:[0.25,0.15],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'icon',\n                      mobile:false,\n                      path:['statusIcon'],\n                      props:{\n                        mr:2,\n                        size:this.props.isMobile ? '1.2em' : '1.8em'\n                      }\n                    },\n                    {\n                      name:'custom',\n                      path:['status'],\n                      props:{\n                        style:{\n                          textTransform:'capitalize'\n                        }\n                      }\n                    }\n                  ]\n                },\n                {\n                  mobile:false,\n                  title:'AMOUNT',\n                  props:{\n                    width:[0.25, 0.15],\n                  },\n                  fields:[\n                    {\n                      type:'number',\n                      path:['amount'],\n                      props:{\n                        decimals: 4\n                      }\n                    },\n                    {\n                      name:'tokenName',\n                      props:{\n                        ml:2\n                      }\n                    }\n                  ]\n                },\n                {\n                  title:'TOKEN',\n                  props:{\n                    width:[0.25,0.13]\n                  },\n                  fields:[\n                    {\n                      type:'image',\n                      path:['tokenIcon'],\n                      props:{\n                        mr:2,\n                        height:['1.4em','1.6em']\n                      }\n                    },\n                    {\n                      type:'text',\n                      path:['token'],\n                    }\n                  ]\n                },\n              ]}\n              {...this.props}\n              rows={this.state.polygonTransactionsAvailableTokens}\n            />\n          ) : this.props.children\n        }\n      </Flex>\n    )\n  }\n}\n\nexport default PolygonBridgeTransactions;","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetsList from '../AssetsList/AssetsList';\n// import RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport PortfolioDonut from '../PortfolioDonut/PortfolioDonut';\nimport ActiveCoverages from '../ActiveCoverages/ActiveCoverages';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport PortfolioEquity from '../PortfolioEquity/PortfolioEquity';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport EarningsEstimation from '../EarningsEstimation/EarningsEstimation';\nimport { Flex, Box, Heading, Text, Tooltip, Icon, Loader } from \"rimble-ui\";\nimport DashboardIconButton from '../DashboardIconButton/DashboardIconButton';\nimport TotalBalanceCounter from '../TotalBalanceCounter/TotalBalanceCounter';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\nimport PolygonBridgeTransactions from '../PolygonBridgeTransactions/PolygonBridgeTransactions';\n\n// const env = process.env;\n\nclass StrategyPage extends Component {\n\n  state = {\n    portfolio:null,\n    depositedTokens:[],\n    tokensToMigrate:{},\n    aggregatedValues:[],\n    remainingTokens:null,\n    batchedDeposits:null,\n    portfolioLoaded:false,\n    portfolioLoading:false,\n    availableGovTokens:null,\n    portfolioEquityStartDate:null,\n    batchedDepositsAvailableTokens:null,\n    portfolioEquityQuickSelection:'week',\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    await this.loadPortfolio();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const availableTokensChanged = JSON.stringify(prevProps.availableTokens) !== JSON.stringify(this.props.availableTokens);\n    if (accountChanged || availableTokensChanged){\n      this.setStateSafe({\n        portfolioLoaded:false\n      },() => {\n        this.loadPortfolio();\n      });\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return await this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  setPortfolioEquityQuickSelection(portfolioEquityQuickSelection){\n    this.setStateSafe({\n      portfolioEquityQuickSelection\n    });\n  }\n\n  async loadPortfolio(){\n    const availableTokens = this.props.availableTokens || {};\n    // const currentNetwork = this.functionsUtil.getRequiredNetwork();\n\n    if (this.state.portfolioLoaded || this.state.portfolioLoading){\n      return false;\n    }\n\n    await this.setStateSafe({\n      portfolioLoading:true\n    });\n\n    // Load portfolio if account is set\n    if (this.props.account){\n      const newState = {};\n      const firstBlockNumber = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n\n      // Load and process Etherscan Txs\n      this.functionsUtil.getEtherscanTxs(this.props.account,firstBlockNumber,'latest',Object.keys(availableTokens))\n\n      // Load data\n      const [\n        batchedDeposits,\n        portfolio,\n      ] = await Promise.all([\n        // Load claimable batches\n        [],//this.functionsUtil.getBatchedDeposits(this.props.account),\n        // Load portfolio\n        this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account),\n      ]);\n\n      newState.portfolio = portfolio;\n\n      newState.batchedDeposits = batchedDeposits && Object.keys(batchedDeposits).length>0 ? batchedDeposits : null;\n\n      if (newState.batchedDeposits){\n        newState.batchedDepositsAvailableTokens = Object.keys(newState.batchedDeposits).reduce( (batchedDepositsAvailableTokens,token) => {\n          const batchInfo = newState.batchedDeposits[token];\n          const tokenConfig = this.functionsUtil.getGlobalConfig(['tools','batchDeposit','props','availableTokens',token]);\n          if (tokenConfig.strategy === this.props.selectedStrategy){\n            switch (batchInfo.status){\n              case 'pending':\n                tokenConfig.statusIcon = 'Timelapse';\n                tokenConfig.statusIconProps = {\n                  color:this.props.theme.colors.transactions.status.pending\n                };\n              break;\n              case 'executed':\n                tokenConfig.statusIcon = 'Done';\n                tokenConfig.statusIconProps = {\n                  color:this.props.theme.colors.transactions.status.completed\n                };\n              break;\n              default:\n              break;\n            }\n            tokenConfig.token = token;\n            tokenConfig.status = batchInfo.status;\n            tokenConfig.deposited = batchInfo.batchDeposits;\n            tokenConfig.redeemable = batchInfo.batchRedeems;\n            batchedDepositsAvailableTokens[tokenConfig.baseToken] = tokenConfig;\n          }\n          return batchedDepositsAvailableTokens;\n        },{});\n      }\n\n      newState.depositedTokens = [];\n      newState.tokensToMigrate = [];\n\n      if (portfolio){\n        const depositedTokens = Object.keys(portfolio.tokensBalance).filter(token => ( this.functionsUtil.BNify(portfolio.tokensBalance[token].idleTokenBalance).gt(0) ));\n\n        newState.depositedTokens = depositedTokens;\n\n        const isRisk = this.props.selectedStrategy === 'risk';\n\n        let avgAPY = this.functionsUtil.BNify(0);\n        // let avgScore = this.functionsUtil.BNify(0);\n        let totalAmountLent = this.functionsUtil.BNify(0);\n        // let totalBalanceWithScore = this.functionsUtil.BNify(0);\n\n        await this.functionsUtil.asyncForEach(depositedTokens,async (token) => {\n          const tokenConfig = availableTokens[token];\n\n          const [\n            tokenAprs,\n            // tokenScore,\n            amountLent,\n          ] = await Promise.all([\n            this.functionsUtil.getTokenAprs(tokenConfig),\n            // this.functionsUtil.getTokenScore(tokenConfig,isRisk),\n            this.functionsUtil.getAmountDeposited(tokenConfig,this.props.account)\n          ]);\n\n          const amountLentToken = await this.functionsUtil.convertTokenBalance(amountLent,token,tokenConfig,isRisk);\n\n          const tokenBalance = portfolio.tokensBalance[token].tokenBalance;\n          const tokenWeight = tokenBalance.div(portfolio.totalBalance);\n          const tokenAPY = tokenAprs.avgApy && !this.functionsUtil.BNify(tokenAprs.avgApy).isNaN() ? this.functionsUtil.BNify(tokenAprs.avgApy) : this.functionsUtil.BNify(0);\n\n          if (!tokenAPY.isNaN()){\n            avgAPY = avgAPY.plus(tokenAPY.times(tokenWeight));\n          }\n\n          // if (!tokenScore.isNaN() && tokenScore.gt(0)){\n          //   avgScore = avgScore.plus(tokenScore.times(tokenBalance));\n          //   totalBalanceWithScore = totalBalanceWithScore.plus(tokenBalance);\n          // }\n\n          if (amountLentToken){\n            totalAmountLent = totalAmountLent.plus(amountLentToken);\n          }\n        });\n\n        // if (!totalBalanceWithScore.isNaN() && totalBalanceWithScore.gt(0)){\n        //   avgScore = avgScore.div(totalBalanceWithScore);\n        // }\n\n        // console.log('avgAPY',avgAPY.toFixed());\n\n        // Add gov tokens to earnings\n        const govTokensTotalBalance = await this.functionsUtil.getGovTokensUserTotalBalance(this.props.account,availableTokens,'DAI');\n        const govTokensUserBalance = await this.functionsUtil.getGovTokensUserBalances(this.props.account,availableTokens,null);\n        const govTokensTotalBalanceTooltip = govTokensUserBalance ? Object.keys(govTokensUserBalance).map( govToken => {\n          const balance = govTokensUserBalance[govToken];\n          if (balance.gt(0)){\n            return `+${balance.toFixed(2)} ${govToken}`;\n          } else {\n            return null;\n          }\n        }).filter(v => (v !== null)) : null;\n\n        newState.avgAPY = avgAPY;\n        // newState.avgScore = avgScore;\n        newState.tokensToMigrate = portfolio.tokensToMigrate;\n        newState.govTokensTotalBalance = govTokensTotalBalance;\n        newState.govTokensTotalBalanceTooltip = govTokensTotalBalanceTooltip;\n      }\n\n      newState.portfolioLoaded = true;\n      newState.portfolioLoading = false;\n      \n      const remainingTokens = Object.keys(availableTokens).filter(token => (!newState.depositedTokens.includes(token) && !Object.keys(newState.tokensToMigrate).includes(token)) );\n      newState.remainingTokens = remainingTokens;\n\n      // Portfolio loaded\n      this.setStateSafe(newState);\n    // Show available assets for not logged users\n    } else {\n      this.setStateSafe({\n        tokensToMigrate:{},\n        depositedTokens:[],\n        portfolioLoaded:true,\n        portfolioLoading:false,\n        remainingTokens:Object.keys(availableTokens),\n      });\n    }\n  }\n\n  render(){\n    const viewOnly = this.props.connectorName === 'custom';\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    const govTokens = this.functionsUtil.getGlobalConfig(['govTokens']);\n    const apyLong = this.functionsUtil.getGlobalConfig(['messages','apyLong']);\n    const yieldFarming = this.functionsUtil.getGlobalConfig(['messages','yieldFarming']);\n    const nexusMutualConfig = this.functionsUtil.getGlobalConfig(['tools','nexusMutual']);\n    const batchDepositConfig = this.functionsUtil.getGlobalConfig(['tools','batchDeposit']);\n    const polygonBridgeConfig = this.functionsUtil.getGlobalConfig(['tools','polygonBridge']);\n    const strategyName = this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'title']);\n    const toolsToShow = ['addFunds','nexusMutual','tokenSwap'].filter( toolName => {\n      const toolConfig = this.functionsUtil.getGlobalConfig(['tools',toolName]);\n      return toolConfig.enabled && (!toolConfig.availableNetworks.length || toolConfig.availableNetworks.includes(parseInt(currentNetwork.id)));\n    })\n\n    return (\n      <Box\n        width={1}\n      >\n        <Title\n          mb={3}\n        >\n          {strategyName} strategy\n        </Title>\n        {\n          /*\n          currentNetwork.id === 137 ? (\n            <Flex\n              width={1}\n              minHeight={'45vh'}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'center'}\n            >\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  width:[1,0.5],\n                }}\n              >\n                <Flex\n                  aligItems={'center'}\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={'2.3em'}\n                    color={'cellText'}\n                    name={'AccessTime'}\n                  />\n                  <Text\n                    mt={2}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Hang on, please!<br />The {strategyName} strategy has not yet been activated in Polygon.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:3,\n                      width:[1,1/2]\n                    }}\n                    handleClick={e => this.props.goToSection(`stake`)}\n                  >\n                    Go to Staking\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            </Flex>\n          ) :\n          */\n          !this.state.portfolioLoaded ? (\n            <FlexLoader\n              textProps={{\n                textSize:4,\n                fontWeight:2\n              }}\n              loaderProps={{\n                mb:3,\n                size:'40px'\n              }}\n              flexProps={{\n                minHeight:'50vh',\n                flexDirection:'column'\n              }}\n              text={'Loading portfolio...'}\n            />\n          ) : (\n            <Box\n              width={1}\n            >\n              {\n                this.props.account && this.state.depositedTokens.length>0 ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      mb={3}\n                      width={1}\n                      mt={[2,0]}\n                      alignItems={'center'}\n                      justifyContent={'center'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.avgAPY ? (\n                                <Text\n                                  lineHeight={1}\n                                  fontWeight={[3,4]}\n                                  color={'copyColor'}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: this.state.avgAPY.toFixed(2)+'<small>%</small>' }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Avg APY\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','apyLong'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio ? (\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <TotalBalanceCounter\n                                    decimals={5}\n                                    {...this.props}\n                                    portfolio={this.state.portfolio}\n                                  />\n                                  <Flex\n                                    mt={1}\n                                    width={1}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'center'}\n                                  >\n                                    {\n                                      /*\n                                      <Flex\n                                        width={0.45}\n                                        alignItems={'center'}\n                                        justifyContent={'flex-end'}\n                                      >\n                                        <Text\n                                          fontSize={1}\n                                          fontWeight={3}\n                                          fontFamily={this.props.theme.fonts.counter}\n                                          color={this.props.theme.colors.transactions.status.completed}\n                                        >\n                                          +{this.state.portfolio.totalEarningsPerc.toFixed(2)}%\n                                        </Text>\n                                      </Flex>\n                                      <Text\n                                        mx={1}\n                                        fontSize={1}\n                                        fontWeight={3}\n                                        fontFamily={this.props.theme.fonts.counter}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >|</Text>\n                                      */\n                                    }\n                                    <TotalEarningsCounter\n                                      {...this.props}\n                                      unit={'+$'}\n                                      decimals={4}\n                                      counterStyle={{\n                                        fontSize:14,\n                                        fontWeight:600,\n                                        color:this.props.theme.colors.transactions.status.completed\n                                      }}\n                                      portfolio={this.state.portfolio}\n                                    />\n                                  </Flex>\n                                </Flex>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Total Balance\n                              </Text>\n                              {\n                                this.state.govTokensTotalBalance && (\n                                  <Tooltip\n                                    placement={'bottom'}\n                                    message={'Total Balance does not include accrued governance tokens: '+(this.state.govTokensTotalBalance && this.state.govTokensTotalBalance.gt(0) ? ` (${this.state.govTokensTotalBalanceTooltip.join(' / ')})` : '')}\n                                  >\n                                    <Icon\n                                      ml={2}\n                                      name={\"Info\"}\n                                      size={'1em'}\n                                      color={'cellTitle'}\n                                    />\n                                  </Tooltip>\n                                )\n                              }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio ? (\n                                <Text\n                                  lineHeight={1}\n                                  fontWeight={[3,4]}\n                                  color={'copyColor'}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: '<small>+</small>'+this.state.portfolio.totalEarningsPerc.toFixed(2)+'<small>%</small>' }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Total Profit\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','totalProfitPerc'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      width={1}\n                      id={\"portfolio-charts\"}\n                      justifyContent={'space-between'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        mb={[3,0]}\n                        width={[1,0.328]}\n                        flexDirection={'column'}\n                        id={\"portfolio-composition\"}\n                      >\n                        <DashboardCard\n                          title={'Composition'}\n                          titleProps={ !this.props.isMobile ? {\n                            style:{\n                              minHeight:'39px'\n                            }\n                          } : null}\n                        >\n                          <PortfolioDonut\n                            {...this.props}\n                            parentId={'portfolio-composition'}\n                          />\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,0.666]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard>\n                          <Flex\n                            pt={[3,4]}\n                            px={[3,4]}\n                            aligItems={'center'}\n                            flexDirection={['column','row']}\n                          >\n                            <Flex\n                              width={[1,0.7]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-start'}\n                            >\n                              <Title\n                                fontWeight={4}\n                                fontSize={[2,3]}\n                                textAlign={'left'}\n                              >\n                                Performance\n                              </Title>\n                            </Flex>\n                            <Flex\n                              mt={[2,0]}\n                              width={[1,0.3]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-end'}\n                            >\n                              <GenericSelector\n                                innerProps={{\n                                  p:0,\n                                  px:1\n                                }}\n                                defaultValue={\n                                  {value:'week',label:'1W'}\n                                }\n                                name={'performance-time'}\n                                options={[\n                                  {value:'week',label:'1W'},\n                                  {value:'month',label:'1M'},\n                                  {value:'month3',label:'3M'},\n                                  {value:'month6',label:'6M'},\n                                  {value:'all',label:'MAX'},\n                                ]}\n                                onChange={ v => this.setPortfolioEquityQuickSelection(v) }\n                              />\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            ml={[0,3]}\n                            aligItems={'center'}\n                            justifyContent={'center'}\n                            id={\"portfolio-performance\"}\n                          >\n                            <PortfolioEquity\n                              {...this.props}\n                              enabledTokens={[]}\n                              parentId={'portfolio-performance'}\n                              parentIdHeight={'portfolio-composition'}\n                              quickDateSelection={this.state.portfolioEquityQuickSelection}\n                              frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n                            />\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Flex\n                    mb={3}\n                    mx={'auto'}\n                    width={[1,0.8]}\n                    aligItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      fontWeight={2}\n                      fontSize={[1,2]}\n                      textAlign={'center'}\n                    >\n                      {\n                        this.props.isMobile ?\n                          this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'descShort'])\n                        :\n                          this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'descLong'])\n                      }\n                    </Text>\n                  </Flex>\n                )\n              }\n              {\n                !viewOnly && this.state.depositedTokens.length>0 && this.props.account && toolsToShow.length>=2 && (\n                  <Flex\n                    mt={3}\n                    width={1}\n                    id={\"tools\"}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      pb={2}\n                      width={1}\n                      mb={[2,3]}\n                      borderColor={'divider'}\n                      borderBottom={'1px solid transparent'}\n                    >\n                      <Heading.h4\n                        fontSize={[2,4]}\n                        fontWeight={[3,4]}\n                      >\n                        Tools\n                      </Heading.h4>\n                    </Flex>\n                    <Flex\n                      flexDirection={['column','row']}\n                    >\n                      {\n                        ['addFunds','nexusMutual','tokenSwap'].map( (toolName,toolIndex) => {\n                          const toolConfig = this.functionsUtil.getGlobalConfig(['tools',toolName]);\n                          return (\n                            <Flex\n                              key={`tool_${toolIndex}`}\n                              mb={toolIndex<2 ? [2,0] : 0}\n                              pr={toolIndex<2 ? [0,3] : 0}\n                              width={[1,1/toolsToShow.length]}\n                            >\n                              <DashboardIconButton\n                                {...this.props}  \n                                icon={toolConfig.icon}\n                                text={toolConfig.desc}\n                                image={toolConfig.image}\n                                title={toolConfig.label}\n                                handleClick={ e => this.props.goToSection(`tools/${toolConfig.route}`) }\n                              />\n                            </Flex>\n                          );\n                        })\n                      }\n                    </Flex>\n                  </Flex>\n                )\n              }\n              {\n                nexusMutualConfig.enabled && nexusMutualConfig.availableNetworks.includes(currentNetwork.id) && this.state.portfolio && this.state.portfolio.totalBalance.gt(0) && (\n                  <Flex\n                    width={1}\n                    id={'active-coverages'}\n                    flexDirection={'column'}\n                  >\n                    <ActiveCoverages\n                      {...this.props}\n                      title={'Coverage'}\n                      titleProps={{\n                        my:4\n                      }}\n                    />\n                  </Flex>\n                )\n              }\n              {\n                this.state.batchedDeposits && (\n                  <Flex\n                    width={1}\n                    mb={[0,3]}\n                    id={'batched-deposits'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Batched Deposits</Title>\n                    <Flex\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <AssetsList\n                        enabledTokens={Object.keys(this.state.batchedDepositsAvailableTokens)}\n                        cols={[\n                          {\n                            title:'TOKEN',\n                            props:{\n                              width:[0.3,0.2]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'DEPOSITED',\n                            props:{\n                              width:[0.33, 0.21],\n                            },\n                            fields:[\n                              {\n                                name:'custom',\n                                type:'number',\n                                path:['deposited'],\n                                props:{\n                                  decimals: 4\n                                }\n                              },\n                              {\n                                name:'tokenName',\n                                props:{\n                                  ml:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'REDEEMABLE',\n                            props:{\n                              width:[0.44,0.23],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                name:'custom',\n                                type:'number',\n                                path:['redeemable'],\n                                props:{\n                                  decimals: 4\n                                }\n                              },\n                              {\n                                type:'text',\n                                name:'custom',\n                                path:['token'],\n                                props:{\n                                  ml:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'STATUS',\n                            props:{\n                              width:[0.26,0.19],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                type:'icon',\n                                mobile:false,\n                                name:'custom',\n                                path:['statusIcon'],\n                                props:{\n                                  mr:2,\n                                  size:this.props.isMobile ? '1.2em' : '1.8em'\n                                }\n                              },\n                              {\n                                name:'custom',\n                                path:['status'],\n                                props:{\n                                  style:{\n                                    textTransform:'capitalize'\n                                  }\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[0.35,0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label:'Claim',\n                                funcProps:{\n                                  disabled:(props) => (props.tokenConfig.status === 'pending')\n                                },\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'migrate',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.goToSection(`tools/${batchDepositConfig.route}/${props.tokenConfig.token}`)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                        availableTokens={this.state.batchedDepositsAvailableTokens}\n                      />\n                    </Flex>\n                  </Flex>\n                )\n              }\n              <Flex\n                width={1}\n                id={'available-assets'}\n                flexDirection={'column'}\n                mb={!this.state.depositedTokens.length ? 4 : 0}\n              >\n                {\n                  (this.state.depositedTokens.length>0 || Object.keys(this.state.tokensToMigrate).length>0 || this.state.remainingTokens.length>0 ) &&\n                    <Title my={[3,4]}>Available assets</Title>\n                }\n                <Flex width={1} flexDirection={'column'}>\n                  {\n                    Object.keys(this.state.tokensToMigrate).length>0 &&\n                    <Flex\n                      width={1}\n                      mb={[3,4]}\n                      id={\"migrate-assets\"}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Assets to migrate\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={Object.keys(this.state.tokensToMigrate)}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.15]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account !== null,\n                            props:{\n                              width:[0.21, 0.12],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.26,0.15],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                showLoader:false,\n                                name:'idleDistribution',\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                },\n                                visible:currentNetwork.provider==='infura' ? true : false\n                              },\n                            ]\n                          },\n                          {\n                            title:'OLD APY',\n                            props:{\n                              width:[0.26,0.12],\n                            },\n                            fields:[\n                              {\n                                name:'oldApy'\n                              }\n                            ]\n                          },\n                          {\n                            title:'BALANCE',\n                            mobile:false,\n                            props:{\n                              width:[0.16,0.14],\n                            },\n                            parentProps:{\n                              width:1,\n                              pr:[2,4]\n                            },\n                            fields:[\n                              {\n                                name:'amountToMigrate',\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.15],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens'\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[ this.props.account === null ? 0.29 : 0 ,0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label: 'Migrate',\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'migrate',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                  {\n                  this.state.depositedTokens.length>0 &&\n                    <Flex\n                      mb={ this.state.remainingTokens.length>0 ? [3,4] : 0 }\n                      width={1}\n                      id={\"deposited-assets\"}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Deposited assets\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={this.state.depositedTokens}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.13]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            props:{\n                              width:[0.21,0.11],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.30,0.16],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                },\n                                visible:currentNetwork.provider==='infura' ? true : false\n                              },\n                            ]\n                          },\n                          {\n                            title:'DEPOSITED',\n                            props:{\n                              width:[0.22,0.15],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                name:'amountLent'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.13],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'EARNINGS',\n                            props:{\n                              width:[0.15,0.15],\n                              textAlign:'center'\n                            },\n                            parentProps:{\n                              alignItems:'center',\n                              flexDirection:'column',\n                            },\n                            fields:[\n                              {\n                                name:'earnings',\n                                props:{\n                                  decimals:3\n                                }\n                              },\n                              {\n                                name:'earningsPerc',\n                                showLoader:false,\n                                showDirection:false,\n                                props:{\n                                  fontSize:0,\n                                  decimals:3\n                                }\n                              }\n                            ]\n                          },\n                          /*\n                          {\n                            title:'EARNINGS %',\n                            props:{\n                              width:[0.27,0.14],\n                            },\n                            fields:[\n                              {\n                                name:'earningsPerc'\n                              }\n                            ]\n                          },\n                          */\n                          {\n                            title:'',\n                            mobile:false,\n                            props:{\n                              width:0.17,\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label:'Manage',\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'redeem',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                  {\n                    this.state.remainingTokens.length>0 &&\n                    <Flex id=\"remaining-assets\" width={1} flexDirection={'column'}>\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Available assets\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={this.state.remainingTokens}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.13]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:true,\n                            title:'POOL',\n                            visibleOnDesktop:true,\n                            props:{\n                              width:[0.21, 0.13],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.31,0.16],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                },\n                                visible:currentNetwork.provider==='infura' ? true : false\n                              },\n                            ]\n                          },\n                          {\n                            title:'FARMING',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account !== null,\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.22,0.16],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APR LAST WEEK',\n                            mobile:false,\n                            props:{\n                              width:0.25,\n                            },\n                            parentProps:{\n                              width:1,\n                              pr:[2,4]\n                            },\n                            fields:[\n                              {\n                                name:'aprChart',\n                                style:{\n                                  overflow:'visible',\n                                },\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[ this.props.account === null ? 0.26 : 0 , 0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label: (props) => {\n                                  return Object.keys(this.state.tokensToMigrate).includes(props.token) ? 'Migrate' : 'Deposit';\n                                },\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                },\n                                funcProps:{\n                                  mainColor: (props) => {\n                                    return Object.keys(this.state.tokensToMigrate).includes(props.token) ? 'migrate' : 'deposit'\n                                  }\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                </Flex>\n              </Flex>\n              {\n                this.state.depositedTokens.length>0 &&\n                  <Flex\n                    width={1}\n                    id={\"yield-farming\"}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Yield Farming</Title>\n                    <AssetsList\n                      enabledTokens={Object.keys(this.functionsUtil.getGovTokensFarming())}\n                      cols={[\n                        {\n                          title:'TOKEN',\n                          props:{\n                            width:[0.3,0.15]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:2,\n                                height:['1.4em','2.3em']\n                              }\n                            },\n                            {\n                              name:'tokenName'\n                            }\n                          ]\n                        },\n                        {\n                          mobile:false,\n                          title:'BALANCE',\n                          props:{\n                            width:[0.33, 0.25],\n                          },\n                          fields:[\n                            {\n                              name:'tokenBalance',\n                              props:{\n                                decimals: this.props.isMobile ? 6 : 8\n                              }\n                            }\n                          ]\n                        },\n                        {\n                          title:'REDEEMABLE',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','govTokenRedeemableBalance']),\n                          props:{\n                            width:[0.35,0.30],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'redeemableBalance',\n                              props:{\n                                decimals: this.props.isMobile ? 6 : 8\n                              }\n                            },\n                          ]\n                        },\n                        {\n                          title:'DISTRIBUTION',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','userDistributionSpeed']),\n                          props:{\n                            width:[0.35,0.30],\n                          },\n                          fields:[\n                            {\n                              name:'userDistributionSpeed',\n                              props:{\n                                decimals:6\n                              }\n                            }\n                          ]\n                        },\n                        /*\n                        {\n                          mobile:false,\n                          title:'APR',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','govTokenApr']),\n                          props:{\n                            width:[0.2,0.15],\n                          },\n                          fields:[\n                            {\n                              name:'apr',\n                            }\n                          ]\n                        },\n                        {\n                          title:'TOKEN PRICE',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','tokenPrice']),\n                          mobile:false,\n                          props:{\n                            width: 0.17,\n                          },\n                          parentProps:{\n                            width:1,\n                            pr:[2,4]\n                          },\n                          fields:[\n                            {\n                              name:'tokenPrice',\n                              props:{\n                                unit:'$',\n                                unitPos:'left',\n                                unitProps:{\n                                  mr:1,\n                                  fontWeight:3,\n                                  fontSize:[0,2],\n                                  color:'cellText'\n                                }\n                              }\n                            }\n                          ]\n                        },\n                        */\n                      ]}\n                      {...this.props}\n                      availableTokens={govTokens}\n                    />\n                  </Flex>\n              }\n              {\n                this.state.depositedTokens.length>0 &&\n                  <Flex\n                    width={1}\n                    id=\"earnings-estimation\"\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Estimated earnings</Title>\n                    <EarningsEstimation\n                      {...this.props}\n                      enabledTokens={this.state.depositedTokens}\n                    />\n                  </Flex>\n              }\n              {\n                this.props.account && polygonBridgeConfig.enabled && polygonBridgeConfig.availableNetworks.includes(currentNetwork.id) && (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                    id={'polygon-transactions'}\n                  >\n                    <PolygonBridgeTransactions\n                      {...this.props}\n                      title={'Polygon Bridge Transactions'}\n                      titleProps={{\n                        my:4\n                      }}\n                    />\n                  </Flex>\n                )\n              }\n              {\n                this.props.account && this.state.depositedTokens.length>0 && \n                  <Flex\n                    mb={[3,4]}\n                    width={1}\n                    id={'transactions'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Transactions</Title>\n                    <TransactionsList\n                      {...this.props}\n                      enabledTokens={[]}\n                      cols={[\n                        {\n                          title: this.props.isMobile ? '' : 'HASH',\n                          props:{\n                            width:[0.15,0.24]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              name:'hash',\n                              mobile:false\n                            }\n                          ]\n                        },\n                        {\n                          title:'ACTION',\n                          mobile:false,\n                          props:{\n                            width:0.15,\n                          },\n                          fields:[\n                            {\n                              name:'action'\n                            }\n                          ]\n                        },\n                        {\n                          title:'DATE',\n                          props:{\n                            width:[0.32,0.23],\n                          },\n                          fields:[\n                            {\n                              name:'date'\n                            }\n                          ]\n                        },\n                        {\n                          title:'STATUS',\n                          props:{\n                            width:[0.18,0.22],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'statusIcon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'status'\n                            }\n                          ]\n                        },\n                        {\n                          title:'AMOUNT',\n                          props:{\n                            width:0.19,\n                          },\n                          fields:[\n                            {\n                              name:'amount'\n                            },\n                          ]\n                        },\n                        {\n                          title:'ASSET',\n                          props:{\n                            width:[0.15,0.20],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'tokenIcon',\n                              props:{\n                                mr:[0,2],\n                                height:['1.4em','1.6em']\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'tokenName'\n                            },\n                          ]\n                        },\n                      ]}\n                    />\n                  </Flex>\n              }\n            </Box>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default StrategyPage;","/*\n// batchDeposits[user][batchId] = amount\nmapping (address => mapping (uint256 => uint256)) public batchDeposits;\nmapping (uint256 => uint256) batchTotals; // in idleToken\nmapping (uint256 => uint256) batchRedeemedTotals; // in newIdleToken\n\nuint256 public currBatch;\naddress public idleToken;\naddress public newIdleToken;\naddress public underlying;\n\nfunction deposit() external\nfunction withdraw(uint256 batchId) external\n*/\n\nimport Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TransactionField from '../TransactionField/TransactionField';\nimport { Flex, Box, Text, Icon, Link, Checkbox, Tooltip } from \"rimble-ui\";\n\nclass BatchDeposit extends Component {\n\n  state = {\n    canClaim:false,\n    batchTotals:{},\n    canDeposit:true,\n    action:'deposit',\n    batchDeposits:{},\n    tokenConfig:null,\n    processing:{\n      execute:{\n        txHash:null,\n        loading:false\n      },\n      claim:{\n        txHash:null,\n        loading:false\n      },\n    },\n    usePermit:false,\n    batchRedeems:{},\n    lastExecution:null,\n    permitEnabled:true,\n    hasDeposited:false,\n    permitSigned:false,\n    selectedToken:null,\n    showPermitBox:false,\n    currBatchIndex:null,\n    batchCompleted:false,\n    claimSucceeded:false,\n    availableTokens:null,\n    selectedStrategy:null,\n    componentLoaded:false,\n    executeSucceeded:false,\n    migrationEnabled:false,\n    migrationSucceeded:false,\n    selectedTokenConfig:null,\n    availableStrategies:null,\n    batchDepositEnabled:false,\n    migrationContractApproved:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadStrategies();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      this.setState({\n        componentLoaded:false\n      },async () => {\n        await this.loadTokens();\n      });\n    }\n\n    const selectedStrategyChanged = prevState.selectedStrategy !== this.state.selectedStrategy;\n    if (selectedStrategyChanged){\n      const selectedToken = Object.keys(this.state.availableTokens)[0];\n      this.selectToken(selectedToken);\n    }\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const executeSucceededChanged = prevState.executeSucceeded !== this.state.executeSucceeded;\n    const contractApprovedChanged = prevState.migrationContractApproved !== this.state.migrationContractApproved;\n    if (selectedTokenChanged || contractApprovedChanged || executeSucceededChanged){\n      this.checkBatchs();\n    }\n\n  }\n\n  async execute () {\n\n    const loading = true;\n\n    const callbackExecute = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'Execute',\n        eventCategory: 'BatchDeposit',\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        executeSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          execute:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptExecute = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          execute:{\n            ...prevState.processing.execute,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'executeBatch', [true], null, callbackExecute, callbackReceiptExecute);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        execute:{\n          ...prevState.processing.execute,\n          loading\n        }\n      }\n    }));\n  }\n\n  async checkBatchs(migrationSucceeded=false){\n\n    const migrationContractInfo = this.state.selectedTokenConfig.migrationContract;\n\n    await Promise.all([\n      this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi),\n      this.props.initContract(this.state.tokenConfig.name,this.state.tokenConfig.address,this.state.tokenConfig.abi)\n    ]);\n\n    let [\n      batchExecutions,\n      currBatchIndex,\n      migrationContractApproved\n    ] = await Promise.all([\n      this.functionsUtil.getBatchedDepositExecutions(migrationContractInfo.address),\n      this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'currBatch'),\n      this.functionsUtil.checkTokenApproved(this.state.tokenConfig.name,migrationContractInfo.address,this.props.account)\n    ]);\n\n    // If use Permit don't ask for Approve\n    let usePermit = false;\n    if (!migrationContractApproved && migrationContractInfo.functions && migrationContractInfo.functions.length === 1){\n      const functionInfo = migrationContractInfo.functions[0];\n      usePermit = typeof functionInfo.usePermit !== 'undefined' ? functionInfo.usePermit : false;\n      const nonceMethod = this.functionsUtil.getGlobalConfig(['permit',this.state.tokenConfig.name,'nonceMethod']);\n      const permitContract = this.functionsUtil.getContractByName(this.state.tokenConfig.name);\n      usePermit = usePermit && permitContract && (!nonceMethod || permitContract.methods[nonceMethod] !== undefined);\n    }\n\n    const newState = {};\n    const batchTotals = {};\n    const batchRedeems = {};\n    const batchDeposits = {};\n    let batchCompleted = false;\n\n    currBatchIndex = currBatchIndex || 0;\n    for (let batchIndex = 0; batchIndex <= parseInt(currBatchIndex) ; batchIndex++){\n      let [\n        batchTotal,\n        batchRedeem,\n        batchDeposit\n      ] = await Promise.all([\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchTotals',[batchIndex]),\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchRedeemedTotals',[batchIndex]),\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n      ]);\n      if (batchTotal && batchTotal !== null){\n        batchTotals[batchIndex] = this.functionsUtil.fixTokenDecimals(batchTotal,this.state.tokenConfig.decimals);\n      }\n      if (batchDeposit !== null){\n        batchRedeem = this.functionsUtil.fixTokenDecimals(batchRedeem,18);\n        batchDeposit = this.functionsUtil.fixTokenDecimals(batchDeposit,this.state.tokenConfig.decimals);\n        if (batchDeposit.gt(0)){\n          batchDeposits[batchIndex] = batchDeposit;\n          // Calculate redeemable idleTokens\n          batchRedeems[batchIndex] = batchDeposit.times(batchRedeem).div(batchTotals[batchIndex]);\n          if (batchRedeems[batchIndex].gt(batchRedeem)){\n            batchRedeems[batchIndex] = batchRedeem;\n          }\n          // Check claimable\n          if (batchIndex < currBatchIndex){\n            batchCompleted = true;\n          }\n        }\n      }\n    }\n\n    newState.batchDeposits = batchDeposits;\n\n    const hasDeposited = (batchDeposits && Object.keys(batchDeposits).length>0);\n\n    const lastExecution = batchExecutions && batchExecutions.length ? batchExecutions[0] : null;\n    const batchDepositInfo = this.functionsUtil.getGlobalConfig(['tools','batchDeposit']);\n    const batchDepositEnabled = batchDepositInfo.depositEnabled;\n\n    newState.usePermit = usePermit;\n    newState.showPermitBox = false;\n    newState.claimSucceeded = false;\n    newState.componentLoaded = true;\n    newState.executeSucceeded = false;\n    newState.batchTotals = batchTotals;\n    newState.hasDeposited = hasDeposited;\n    newState.batchRedeems = batchRedeems;\n    newState.lastExecution = lastExecution;\n    newState.currBatchIndex = currBatchIndex;\n    newState.batchCompleted = batchCompleted;\n    newState.migrationSucceeded = migrationSucceeded;\n    newState.batchDepositEnabled = batchDepositEnabled;\n    newState.canClaim = batchCompleted || hasDeposited;\n    // Prevent user to deposit if the batch has been completed\n    newState.canDeposit = batchDepositEnabled && !batchCompleted;\n    newState.migrationContractApproved = migrationContractApproved;\n    newState.action = hasDeposited || newState.canClaim ? 'redeem' : 'deposit';\n\n    this.setState(newState);\n  }\n\n  async loadStrategies(){\n\n    // Init tokens contracts\n    const availableStrategiesKeys = {};\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n      availableStrategiesKeys[tokenConfig.strategy] = true;\n    });\n\n    const availableStrategies = Object.keys(availableStrategiesKeys).map( strategy => {\n      const strategyConfig = this.functionsUtil.getGlobalConfig(['strategies',strategy]);\n      return {\n        value:strategy,\n        icon:strategyConfig.icon,\n        label:strategyConfig.title\n      };\n    });\n\n    // console.log('availableStrategies',availableStrategies);\n\n    if (availableStrategies && availableStrategies.length>0){\n      let selectedStrategy = availableStrategies[0].value;\n      let selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : null;\n      if (selectedToken){\n        const selectedTokenConfig = this.props.toolProps.availableTokens[selectedToken];\n        selectedToken = selectedTokenConfig.baseToken;\n        selectedStrategy = selectedTokenConfig.strategy;\n      }\n\n      this.setState({\n        availableStrategies\n      },() => {\n        this.selectStrategy(selectedStrategy,selectedToken);\n      });\n    }\n  }\n\n  /*\n  async loadTokens(){\n    const selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : null;\n    if (selectedToken){\n      this.selectToken(selectedToken);\n    }\n  }\n  */\n\n  async selectStrategy (selectedStrategy,selectedToken=null) {\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens)\n      .filter(key => this.props.toolProps.availableTokens[key].strategy === selectedStrategy )\n      .reduce((obj, key) => {\n        const tokenConfig = this.props.toolProps.availableTokens[key];\n        const baseTokenConfig = this.props.availableStrategies[selectedStrategy][tokenConfig.baseToken];\n\n        tokenConfig.abi = baseTokenConfig.abi;\n        tokenConfig.token = baseTokenConfig.token;\n        tokenConfig.address = baseTokenConfig.address;\n        tokenConfig.decimals = baseTokenConfig.decimals;\n        obj[tokenConfig.baseToken] = tokenConfig;\n        return obj;\n      }, {});\n\n    this.setState({\n      availableTokens,\n      selectedStrategy\n    },() => {\n      if (selectedToken){\n        this.selectToken(selectedToken);\n      }\n    });\n  }\n\n  async selectToken (selectedToken) {\n    const selectedTokenConfig = this.state.availableTokens[selectedToken];\n    const strategyAvailableTokens = this.props.availableStrategies[selectedTokenConfig.strategy];\n\n    const baseTokenConfig = strategyAvailableTokens[selectedTokenConfig.token];\n\n    const tokenConfig = {\n      name:baseTokenConfig.token,\n      token:baseTokenConfig.token,\n      address:baseTokenConfig.address,\n      decimals:baseTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = baseTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:baseTokenConfig.abi,\n      name:baseTokenConfig.token,\n      token:baseTokenConfig.token,\n      address:baseTokenConfig.address\n    };\n    \n    const migrationContract = selectedTokenConfig.migrationContract;\n\n    // Add migration function\n    if (baseTokenConfig.migrateFunction){\n      migrationContract.functions[0].name = baseTokenConfig.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(selectedTokenConfig.strategy,baseTokenConfig.token);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedTokenConfig\n    },() => {\n      // Select strategy and available tokens\n      if (selectedTokenConfig.strategy !== this.state.selectedStrategy){\n        const selectedStrategy = selectedTokenConfig.strategy;\n        this.selectStrategy(selectedStrategy);\n      }\n    });\n  }\n\n  async claim () {\n    if (!this.state.batchCompleted){\n      return null;\n    }\n\n    const loading = true;\n    const claimableValue = 0;\n    const batchId = Object.keys(this.state.batchDeposits)[0];\n\n    const callbackClaim = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'Claim',\n        eventCategory: `BatchDeposit`,\n        eventValue: parseInt(claimableValue),\n        eventLabel: this.props.selectedToken,\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        claimSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          claim:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptClaim = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          claim:{\n            ...prevState.processing.claim,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'withdraw', [batchId], null, callbackClaim, callbackReceiptClaim);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        claim:{\n          ...prevState.processing.claim,\n          loading\n        }\n      }\n    }));\n  }\n\n  async callbackPermit(){\n    this.setState({\n      permitSigned:true\n    });\n  }\n\n  showPermitBox(){\n    this.setState({\n      showPermitBox:true\n    });\n  }\n\n  async callbackApprove(migrationContractApproved){\n    // console.log('callbackApprove',this.state.migrationContractApproved,migrationContractApproved);\n    if (migrationContractApproved !== this.state.migrationContractApproved){\n      this.setState({\n        migrationContractApproved\n      });\n    }\n  }\n\n  setAction = (action) => {\n    if (action !== null && ['deposit','redeem'].includes(action.toLowerCase())){\n      const migrationSucceeded = false;\n      this.setState({\n        action,\n        migrationSucceeded\n      });\n    }\n  }\n\n  togglePermitEnabled(permitEnabled){\n    this.setState({\n      permitEnabled\n    });\n  }\n\n  migrationEnabledCallback = (migrationEnabled) => {\n    this.setState({\n      migrationEnabled\n    });\n  }\n\n  migrationCallback = (tx) => {\n    this.checkBatchs(true);\n  }\n\n  render() {\n\n    if (!this.state.selectedStrategy){\n      return null;\n    }\n\n    const usePermit = this.state.permitEnabled && this.state.usePermit;\n    // const batchId = this.state.batchDeposits && Object.keys(this.state.batchDeposits).length>0 ? Object.keys(this.state.batchDeposits)[0] : null;\n    const batchRedeem = this.state.batchRedeems && Object.values(this.state.batchRedeems).length>0 ? Object.values(this.state.batchRedeems)[0] : null;\n    const batchDeposit = this.state.batchDeposits && Object.values(this.state.batchDeposits).length>0 ? Object.values(this.state.batchDeposits)[0] : null;\n    const contractApproved = (usePermit && this.state.permitSigned) || (!usePermit && this.state.migrationContractApproved);\n    const canExecuteBatch = this.state.batchTotals && this.state.batchTotals[this.state.currBatchIndex] && this.state.batchTotals[this.state.currBatchIndex].gt(0);\n    const strategyDefaultValue = this.state.selectedStrategy ? this.state.availableStrategies.find( s => s.value === this.state.selectedStrategy ) : this.state.availableStrategies[0];\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Choose the strategy:\n            </Text>\n            <GenericSelector\n              {...this.props}\n              name={'strategy'}\n              isSearchable={false}\n              defaultValue={strategyDefaultValue}\n              CustomOptionValue={CustomOptionValue}\n              options={this.state.availableStrategies}\n              onChange={this.selectStrategy.bind(this)}\n              CustomValueContainer={CustomValueContainer}\n            />\n          </Box>\n          {\n            this.state.availableTokens && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Select asset to deposit:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  id={'token-from'}\n                  showBalance={true}\n                  isSearchable={false}\n                  onChange={this.selectToken.bind(this)}\n                  selectedToken={this.state.selectedToken}\n                  availableTokens={this.state.availableTokens}\n                />\n              </Box>\n          }\n          {\n            !this.state.componentLoaded && (\n              <Flex\n                mt={4}\n                flexDirection={'column'}\n              >\n                <FlexLoader\n                  flexProps={{\n                    flexDirection:'row'\n                  }}\n                  loaderProps={{\n                    size:'30px'\n                  }}\n                  textProps={{\n                    ml:2\n                  }}\n                  text={'Loading asset info...'}\n                />\n              </Flex>\n            )\n          }\n          {\n            !this.props.account ? (\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mt:3\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                    name={'Input'}\n                    color={'cellText'}\n                  />\n                  <Text\n                    mt={[1,2]}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Please connect with your wallet interact with Idle.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:2,\n                      width:[1,1/2]\n                    }}\n                    handleClick={this.props.connectAndValidateAccount}\n                  >\n                    Connect\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            ) : this.state.componentLoaded &&  this.state.selectedTokenConfig && (this.state.canDeposit || this.state.canClaim) && (\n              <Box\n                width={1}\n              >\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                    px:4,\n                    mt:3,\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  > \n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ contractApproved ? 'CheckBox' : 'LooksOne'}\n                        color={ contractApproved ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        {\n                          usePermit ? 'Sign Approve message' : 'Approve the batch deposit contract'\n                        }\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ (this.state.hasDeposited || this.state.batchCompleted) ? 'CheckBox' : 'LooksTwo'}\n                        color={ (this.state.hasDeposited || this.state.batchCompleted) ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        Deposit your {this.state.selectedToken}\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ this.state.batchCompleted ? 'CheckBox' : 'Looks3'}\n                        color={ this.state.batchCompleted ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        Wait for batch execution\n                        <Link\n                          ml={1}\n                          fontWeight={2}\n                          color={'primary'}\n                          display={'inline'}\n                          hoverColor={'primary'}\n                          onClick={ e => this.props.openTooltipModal('Batch Execution Schedule',this.functionsUtil.getGlobalConfig(['messages','batchDepositExecutionSchedule'])) }\n                        >\n                          (Read More)\n                        </Link>\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ this.state.claimSucceeded ? 'CheckBox' : 'Looks4'}\n                        color={ this.state.claimSucceeded ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'flex-start'}\n                      >\n                        <Text\n                          ml={1}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'left'}\n                        >\n                          Claim your {this.state.tokenConfig.idle.token}\n                        </Text>\n                        <Tooltip\n                          placement={'top'}\n                          message={`You will start earning gov tokens after the batch is executed and you claim your ${this.state.tokenConfig.idle.token}`}\n                        >\n                          <Icon\n                            ml={1}\n                            size={'1.2em'}\n                            name={'Warning'}\n                            color={'#ffe000'}\n                            style={{\n                              cursor:'pointer'\n                            }}\n                          />\n                        </Tooltip>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                </DashboardCard>\n              </Box>\n            )\n          }\n          {\n            this.state.componentLoaded && this.props.account && this.state.availableTokens && this.state.selectedToken && (\n              <Box width={1}>\n                {\n                  (contractApproved || this.state.canClaim) && \n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text mb={2}>\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canDeposit ? this.setAction('deposit') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canDeposit }\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canClaim ? this.setAction('redeem') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canClaim }\n                          isActive={ this.state.action === 'redeem' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Claim\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                }\n                {\n                  this.state.showPermitBox && this.state.action === 'deposit' && this.state.usePermit && this.state.migrationEnabled && !this.state.migrationSucceeded ? (\n                    <DashboardCard\n                      cardProps={{\n                        py:3,\n                        px:2,\n                        mt:3,\n                        display:'flex',\n                        alignItems:'center',\n                        flexDirection:'column',\n                        justifyContent:'center',\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          color={'cellText'}\n                          name={'LightbulbOutline'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={1}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          {this.state.selectedToken} supports Approve and Deposit in a single transaction, disable this feature and try again if you can't deposit in the batch.\n                        </Text>\n                      </Flex>\n                      <Checkbox\n                        mt={1}\n                        required={false}\n                        checked={this.state.permitEnabled}\n                        label={`Approve and Deposit in a single transaction`}\n                        onChange={ e => this.togglePermitEnabled(e.target.checked) }\n                      />\n                    </DashboardCard>\n                  ) : !this.state.showPermitBox && this.state.action === 'deposit' && this.state.usePermit && this.state.migrationEnabled && !this.state.migrationSucceeded && (\n                    <Flex\n                      p={0}\n                      mt={3}\n                      width={1}\n                      borderRadius={2}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'center'}\n                    >\n                      <Link\n                        textAlign={'center'}\n                        hoverColor={'primary'}\n                        onClick={this.showPermitBox.bind(this)}\n                      >\n                        Having trouble with the Batch Deposit?\n                      </Link>\n                    </Flex>\n                  )\n                }\n                {\n                  this.state.action === 'deposit' ? \n                    this.state.batchDepositEnabled ? (\n                      <Migrate\n                        {...this.props}\n                        useMetaTx={false}\n                        showActions={false}\n                        usePermit={usePermit}\n                        getTokenPrice={false}\n                        isMigrationTool={true}\n                        showBalanceSelector={true}\n                        migrationIcon={'FileDownload'}\n                        waitText={'Deposit estimated in'}\n                        tokenConfig={this.state.tokenConfig}\n                        selectedToken={this.state.selectedToken}\n                        migrationParams={toMigrate => [toMigrate]}\n                        selectedStrategy={this.props.selectedStrategy}\n                        callbackPermit={this.callbackPermit.bind(this)}\n                        callbackApprove={this.callbackApprove.bind(this)}\n                        migrationCallback={this.migrationCallback.bind(this)}\n                        migrationEnabledCallback={this.migrationEnabledCallback.bind(this)}\n                        migrationText={`Deposit your ${this.state.selectedToken} and wait until it is converted to the new ${this.state.tokenConfig.idle.token}.`}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:3\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedToken} in your wallet.\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Migrate>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          my:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Text\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            Batch Deposit is disabled for this asset.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      {\n                        this.state.processing.claim.loading ? (\n                          <Flex\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar {...this.props} web3={this.props.web3} waitText={`Claim estimated in`} endMessage={`Finalizing approve request...`} hash={this.state.processing.claim.txHash} />\n                          </Flex>\n                        ) : this.state.claimSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'DoneAll'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You have successfully withdrawn your {this.state.tokenConfig.idle.token}!\n                            </Text>\n                            <Link\n                              mt={2}\n                              textAlign={'center'}\n                              hoverColor={'primary'}\n                              onClick={ e => this.props.goToSection(this.state.selectedTokenConfig.strategy+'/'+this.state.selectedTokenConfig.baseToken) }\n                            >\n                              Go to the Dashboard\n                            </Link>\n                          </Flex>\n                        ) : this.state.batchCompleted ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              color={'cellText'}\n                              name={'FileUpload'}\n                            />\n                            <Text\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The Batch has been executed!<br />You can now claim your {batchRedeem.toFixed(4)} {this.state.tokenConfig.idle.token}\n                            </Text>\n                            <Text\n                              fontSize={1}\n                              color={'#ff9900'}\n                              textAlign={'center'}\n                            >\n                              (You need to claim your {this.state.tokenConfig.idle.token} to start earning Gov Tokens)\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                              <RoundButton\n                                buttonProps={{\n                                  mt:2,\n                                  width:[1,0.5],\n                                  mainColor:this.props.theme.colors.redeem\n                                }}\n                                handleClick={ e => this.claim() }\n                              >\n                                Claim\n                              </RoundButton>\n                            </Flex>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'1.8em'}\n                              color={'cellText'}\n                              name={'HourglassEmpty'}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              <Text.span\n                                color={'cellText'}\n                              >\n                                You have successfully deposited <strong>{batchDeposit.toFixed(4)} {this.state.selectedToken}</strong>, please wait until the batch is executed to claim your {this.state.tokenConfig.idle.token}.\n                              </Text.span>\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n                {\n                  this.state.batchTotals[this.state.currBatchIndex] && \n                    <DashboardCard\n                      cardProps={{\n                        p:2,\n                        my:3\n                      }}\n                    >\n                      {\n                        this.state.processing.execute.loading ? (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <TxProgressBar {...this.props} waitText={`Batch execution estimated in`} endMessage={`Finalizing batch execution request...`} hash={this.state.processing.execute.txHash} />\n                          </Flex>\n                        ) : this.state.executeSucceeded ? (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Icon\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The Batch has been executed!\n                            </Text>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Text\n                              fontWeight={500}\n                              color={'copyColor'}\n                              textAlign={'center'}\n                            >\n                              Batch Pool: {this.state.batchTotals[this.state.currBatchIndex].toFixed(4)} {this.state.selectedToken}\n                            </Text>\n                            {\n                              canExecuteBatch && \n                                <Link\n                                  textAlign={'center'}\n                                  hoverColor={'primary'}\n                                  onClick={this.execute.bind(this)}\n                                >\n                                  Execute Batch\n                                </Link>\n                            }\n                            {\n                              this.state.batchTotals[this.state.currBatchIndex].lt(this.state.selectedTokenConfig.minPoolSize) && (\n                                <Text\n                                  mb={1}\n                                  fontSize={1}\n                                  color={'alert'}\n                                  textAlign={'center'}\n                                >\n                                  (The pool size has to reach at least {this.functionsUtil.formatMoney(this.state.selectedTokenConfig.minPoolSize,0)} {this.state.selectedToken} to be executed)\n                                </Text>\n                              )\n                            }\n                            {\n                              this.state.lastExecution && (\n                                <Text\n                                  fontSize={0}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  Last Batch Execution: {this.functionsUtil.strToMoment(this.state.lastExecution.timeStamp*1000).utc().format('YYYY-MM-DD HH:mm UTC')}\n                                </Text>\n                              )\n                            }\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                }\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default BatchDeposit;","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\n// import TokenWrapper from '../TokenWrapper/TokenWrapper';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\n\nclass PolygonBridge extends Component {\n\n  state = {\n    stats:[],\n    steps:null,\n    txsToExit:[],\n    infoBox:null,\n    polygonTxs:[],\n    inputValue:null,\n    dataLoaded:false,\n    description:null,\n    tokenConfig:null,\n    balanceProp:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    selectedAction:null,\n    selectedOption:null,\n    successMessage:null,\n    permitEnabled:false,\n    availableTokens:null,\n    availableNetworks:[],\n    approveEnabled:false,\n    contractApproved:false,\n    defaultTransaction:null,\n    approveDescription:null,\n    selectedTransaction:null,\n    balanceSelectorInfo:null,\n    transactionSucceeded:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentDidMount(){\n    this.loadData();\n  }\n\n  async loadPolygonTxs(){\n    const polygonTxs = await this.functionsUtil.getPolygonBridgeTxs();\n    this.setState({\n      polygonTxs,\n      dataLoaded:true\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      const tokenConfig = this.props.toolProps.availableTokens[this.state.selectedToken];\n      const rootTokenConfig = tokenConfig.rootToken;\n      const childTokenConfig = tokenConfig.childToken;\n\n      // Init contracts\n      await Promise.all([\n        rootTokenConfig ? this.props.initContract(rootTokenConfig.name,rootTokenConfig.address,rootTokenConfig.abi) : null,\n        childTokenConfig ? this.props.initContract(childTokenConfig.name,childTokenConfig.address,childTokenConfig.abi) : null\n      ]);\n\n      this.setState({\n        tokenConfig\n      },() => {\n        this.updateData();\n      });\n    } else {\n      const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n      const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n      if (selectedActionChanged || contractApprovedChanged){\n        this.updateData();\n      }\n    }\n\n    const contractInfoChanged = JSON.stringify(prevState.contractInfo) !== JSON.stringify(this.state.contractInfo);\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async changeInputCallback(inputValue=null){\n\n  }\n\n  getTransactionParams(amount){\n    let value = null;\n    let methodName = null;\n    let methodParams = [];\n    let contractName = null;\n    amount = this.functionsUtil.toBN(amount);\n    const bridgeType = this.state.tokenConfig.bridgeType;\n    switch (this.state.selectedAction){\n      case 'Deposit':\n        switch (this.state.selectedToken){\n          case 'WETH':\n            methodName = 'depositEtherFor';\n            contractName = 'RootChainManager';\n            value = this.props.web3.eth.abi.encodeParameter('uint256', amount);\n            methodParams = [this.props.account];\n          break;\n          default:\n            const depositData = this.props.web3.eth.abi.encodeParameter('uint256', amount);\n            switch (bridgeType){\n              case 'plasma':\n                contractName = 'DepositManager';\n                methodName = 'depositERC20ForUser';\n                methodParams = [this.state.tokenConfig.rootToken.address,this.props.account,depositData];\n              break;\n              default:\n              case 'pos':\n                methodName = 'depositFor';\n                contractName = 'RootChainManager';\n                methodParams = [this.props.account,this.state.tokenConfig.rootToken.address,depositData];\n              break;\n            }\n          break;\n        }\n      break;\n      case 'Withdraw':\n        methodName = 'withdraw';\n        methodParams = [amount];\n        contractName = this.state.tokenConfig.childToken.name;\n        if (this.state.tokenConfig.sendValue){\n          value = this.props.web3.eth.abi.encodeParameter('uint256', amount);\n        }\n      break;\n      default:\n      break;\n    }\n\n    // console.log('getTransactionParams',{\n    //   value,\n    //   methodName,\n    //   methodParams,\n    //   contractName\n    // });\n\n    return {\n      value,\n      methodName,\n      methodParams,\n      contractName\n    };\n  }\n\n  exitCallback(){\n\n  }\n\n  async getExitTransactionParams(){\n    const txHash = this.state.selectedTransaction;\n    const exitCalldata = await this.props.maticPOSClient.exitERC20(txHash, { from:this.props.account, encodeAbi: true })\n    if (exitCalldata && exitCalldata.data){\n      return exitCalldata.data;\n    }\n    return null;\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  async selectTransaction(selectedTransaction){\n    this.setState({\n      selectedTransaction\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    /*\n    switch (this.state.selectedAction){\n      case 'Deposit':\n        const depositedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const depositedTokens = depositedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(depositedTokensLog.data,16),this.state.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n      break;\n      case 'Withdraw':\n        const withdrawnTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const withdrawnTokens = withdrawnTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(withdrawnTokensLog.data,16),this.state.tokenConfig.decimals) : (tx.txReceipt && tx.txReceipt.events && tx.txReceipt.events.Transfer ? this.functionsUtil.fixTokenDecimals(tx.txReceipt.events.Transfer.returnValues.value,this.state.tokenConfig.decimals) : this.functionsUtil.BNify(0));\n      break;\n      default:\n      break;\n    }\n    */\n    const transactionSucceeded = tx;\n    this.setState({\n      transactionSucceeded\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async updateData(){\n    const newState = {};\n    const isETH = this.state.selectedToken==='WETH';\n    const bridgeType = this.state.tokenConfig.bridgeType;\n    switch (this.state.selectedAction){\n      case 'Deposit':\n        newState.steps = [];\n        newState.permitEnabled = false;\n        newState.availableNetworks = [1,5];\n        newState.approveEnabled = !isETH;\n        newState.approveDescription = `Approve the contract to deposit your ${this.state.selectedToken}`;\n        newState.contractInfo = bridgeType === 'pos' ? this.props.toolProps.contracts.ERC20Predicate : this.props.toolProps.contracts.DepositManager;\n        newState.balanceProp = isETH ? await this.functionsUtil.getETHBalance(this.props.account) : await this.functionsUtil.getTokenBalance(this.state.tokenConfig.rootToken.name,this.props.account);\n        if (this.state.transactionSucceeded){\n          let depositedTokensLog = null;\n          let depositedTokensEvent = null;\n          if (!isETH){\n            depositedTokensEvent = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.events ? Object.values(this.state.transactionSucceeded.txReceipt.events).find( event => event.address.toLowerCase() === this.state.tokenConfig.rootToken.address.toLowerCase() && event.raw.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && event.raw.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && event.raw.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n            depositedTokensLog = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.logs ? this.state.transactionSucceeded.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.rootToken.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n          } else {\n            depositedTokensEvent = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.events ? Object.values(this.state.transactionSucceeded.txReceipt.events).find( event => event.address.toLowerCase() === this.props.toolProps.contracts.EtherPredicate.address.toLowerCase() && event.raw.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && event.raw.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n            depositedTokensLog = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.logs ? this.state.transactionSucceeded.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.contracts.EtherPredicate.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n          }\n          const depositedTokens = depositedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(depositedTokensLog.data,16),this.state.tokenConfig.decimals) : ( depositedTokensEvent ? this.functionsUtil.fixTokenDecimals(parseInt(depositedTokensEvent.raw.data,16),this.state.tokenConfig.decimals) : this.functionsUtil.BNify(0));\n          newState.infoBox = {\n            icon:'DoneAll',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`You have successfully deposited <strong>${depositedTokens.toFixed(4)} ${this.state.selectedToken}</strong> in the Polygon chain. Please wait ~7-8 minutes for your balance to be accounted in the Polygon chain.`\n          }\n        } else {\n          newState.infoBox = {\n            icon:'InfoOutline',\n            iconProps:{\n              color:'cellText'\n            },\n            text:`Please note that deposit of funds takes ~7-8 minutes to be accounted in the Polygon chain.`\n          }\n        }\n        // console.log('updateData',newState);\n      break;\n      case 'Withdraw':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.availableNetworks = [137,80001];\n        newState.contractInfo = this.state.tokenConfig.childToken;\n        newState.balanceProp = await this.functionsUtil.getTokenBalance(this.state.tokenConfig.childToken.name,this.props.account);\n\n        const currentNetwork = this.functionsUtil.getRequiredNetwork();\n        const maticNetwork = currentNetwork.name;\n        const mainNetworkId = this.functionsUtil.getGlobalConfig(['network','providers','polygon','networkPairs',currentNetwork.id]);\n        const mainNetworkName = this.functionsUtil.getGlobalConfig(['network','availableNetworks',mainNetworkId,'name']);\n        newState.steps = [\n          {\n            icon:'LooksOne',\n            completed:false,\n            description:`Withdraw ${this.state.selectedToken} from ${maticNetwork} network`\n          },\n          {\n            icon:'LooksTwo',\n            completed:false,\n            description:`Wait for the checkpoint to be submitted`\n          },\n          {\n            icon:'Looks3',\n            completed:false,\n            description:`Exit ${this.state.selectedToken} from ${mainNetworkName} network`\n          },\n        ];\n        if (this.state.transactionSucceeded){\n          const withdrawnTokensEvent = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.events ? Object.values(this.state.transactionSucceeded.txReceipt.events).find( event => event.address.toLowerCase() === this.state.tokenConfig.childToken.address.toLowerCase() && event.raw.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && event.raw.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && event.raw.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n          const withdrawnTokensLog = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.logs ? this.state.transactionSucceeded.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.childToken.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n          const withdrawnTokens = withdrawnTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(withdrawnTokensLog.data,16),this.state.tokenConfig.decimals) : (this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.events && this.state.transactionSucceeded.txReceipt.events.Transfer ? this.functionsUtil.fixTokenDecimals(this.state.transactionSucceeded.txReceipt.events.Transfer.returnValues.value,this.state.tokenConfig.decimals) : ( withdrawnTokensEvent ? this.functionsUtil.fixTokenDecimals(parseInt(withdrawnTokensEvent.raw.data,16),this.state.tokenConfig.decimals)  : this.functionsUtil.BNify(0)));\n          newState.infoBox = {\n            icon:'DoneAll',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`You have successfully withdrawn <strong>${withdrawnTokens.toFixed(4)} ${this.state.selectedToken}</strong> from the Polygon chain. Please wait up to 2-3 hours to be able to complete the withdrawal.`\n          }\n        } else {\n          let text = '';\n          switch (bridgeType){\n            case 'plasma':\n              text = `Please note that withdraw of funds takes ~7 days in Plasma.`;\n            break;\n            default:\n            case 'pos':\n              text = `Please note that withdraw of funds takes ~45 mins to 1 hour in PoS.`;\n            break;\n          }\n          newState.infoBox = {\n            text,\n            icon:'InfoOutline',\n            iconProps:{\n              color:'cellText'\n            },\n          }\n        }\n      break;\n      case 'Exit':\n        newState.availableNetworks = [1,5];\n        newState.txsToExit = this.state.polygonTxs.filter( tx => tx.included && tx.action === 'Withdraw' && !tx.exited && tx.tokenSymbol === this.state.selectedToken ).map( tx => {\n          const label = this.functionsUtil.strToMoment(tx.timeStamp*1000).format('DD-MM-YYYY HH:mm')+' - '+tx.value.toFixed(6)+' '+tx.token;\n          return {\n            label,\n            data:tx,\n            value:tx.hash\n          }\n        });\n\n        newState.defaultTransaction = newState.txsToExit.length>0 ? newState.txsToExit[0] : null;\n        newState.selectedTransaction = newState.defaultTransaction ? newState.defaultTransaction.data.hash : null;\n      break;\n      default:\n      break;\n    }\n\n    if (!newState.balanceProp){\n      newState.balanceProp = this.functionsUtil.BNify(0);\n    }\n\n    // console.log('updateData',newState);\n\n    this.setState(newState);\n  }\n\n  async loadData(){\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens).reduce( (output,token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      if (tokenConfig.enabled){\n        output.push({\n          value:token,\n          label:token,\n          ...tokenConfig\n        });\n      }\n      return output;\n    },[]);\n\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    const paramIsToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2];\n    const selectedToken = paramIsToken ? this.props.urlParams.param2 : (this.props.selectedToken || this.state.selectedToken || availableTokens[0].value);\n    const selectedOption = availableTokens.find( t => t.value === selectedToken );\n    const defaultAction = !paramIsToken ? (currentNetwork.provider === 'infura' ? 'Deposit' : 'Withdraw') : 'Deposit';\n    const selectedAction = this.props.action || this.state.action || defaultAction;\n    const tokenConfig = this.props.toolProps.availableTokens[selectedToken];\n\n    // console.log('loadData',this.props.urlParams);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedOption,\n      selectedAction,\n      availableTokens\n    },() => {\n      this.loadPolygonTxs();\n    });\n  }\n\n  async exitSelectedTransaction(){\n\n  }\n\n  selectToken(selectedToken){\n    this.setState({\n      selectedToken\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  render() {\n    const fullWidth = !!this.props.fullWidth;\n    const isExit = this.state.selectedAction === 'Exit';\n    const isDeposit = this.state.selectedAction === 'Deposit';\n    const isWithdraw = this.state.selectedAction === 'Withdraw';\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    const currentNetworkId = currentNetwork.id;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.availableTokens ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading tokens...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.availableTokens.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active tokens.\n                  </Text>\n                ) : (\n                  <Flex\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                    width={[1,fullWidth ? 1 : '33em']}\n                  >\n                    {\n                      !this.props.selectedToken && (\n                        <Box\n                          width={1}\n                        >\n                          <Text\n                            mb={1}\n                          >\n                            Select Token:\n                          </Text>\n                          <AssetSelector\n                            id={'tokens'}\n                            {...this.props}\n                            showBalance={false}\n                            isSearchable={false}\n                            onChange={this.selectToken.bind(this)}\n                            selectedToken={this.state.selectedToken}\n                            availableTokens={this.props.toolProps.availableTokens}\n                          />\n                        </Box>\n                      )\n                    }\n                    {\n                      this.state.selectedToken && (\n                        <Box\n                          mt={2}\n                          width={1}\n                        >\n                          {\n                            !this.props.action && (\n                              <Box\n                                width={1}\n                              >\n                                <Text\n                                  mb={2}\n                                >\n                                  Choose the action:\n                                </Text>\n                                <Flex\n                                  mb={3}\n                                  alignItems={'center'}\n                                  flexDirection={'row'}\n                                  justifyContent={'space-between'}\n                                >\n                                  <CardIconButton\n                                    {...this.props}\n                                    cardProps={{\n                                      px:3,\n                                      py:2,\n                                      width:0.325\n                                    }}\n                                    textProps={{\n                                      fontWeight:2,\n                                      fontSize:[1,2]\n                                    }}\n                                    text={'Deposit'}\n                                    iconColor={'deposit'}\n                                    icon={'ArrowDownward'}\n                                    iconBgColor={'#ced6ff'}\n                                    handleClick={ e => this.setAction('Deposit') }\n                                    isActive={ this.state.selectedAction === 'Deposit' }\n                                  />\n                                  <CardIconButton\n                                    {...this.props}\n                                    cardProps={{\n                                      px:3,\n                                      py:2,\n                                      width:0.325\n                                    }}\n                                    textProps={{\n                                      fontWeight:2,\n                                      fontSize:[1,2]\n                                    }}\n                                    text={'Withdraw'}\n                                    iconColor={'redeem'}\n                                    icon={'ArrowUpward'}\n                                    iconBgColor={'#ceeff6'}\n                                    handleClick={ e => this.setAction('Withdraw') }\n                                    isActive={ this.state.selectedAction === 'Withdraw' }\n                                  />\n                                  <CardIconButton\n                                    {...this.props}\n                                    cardProps={{\n                                      px:3,\n                                      py:2,\n                                      width:0.325\n                                    }}\n                                    textProps={{\n                                      fontWeight:2,\n                                      fontSize:[1,2]\n                                    }}\n                                    text={'Exit'}\n                                    icon={'SwapHoriz'}\n                                    iconColor={'redeem'}\n                                    iconBgColor={'#ceeff6'}\n                                    handleClick={ e => this.setAction('Exit') }\n                                    isActive={ this.state.selectedAction === 'Exit' }\n                                  />\n                                </Flex>\n                              </Box>\n                            )\n                          }\n                          {\n                            !this.state.availableNetworks.includes(currentNetworkId) ? (\n                              <DashboardCard\n                                cardProps={{\n                                  p:3,\n                                  mb:3,\n                                  width:1\n                                }}\n                              >\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                >\n                                  <Icon\n                                    size={'1.8em'}\n                                    name={'Warning'}\n                                    color={'cellText'}\n                                  />\n                                  <Text\n                                    mt={1}\n                                    fontSize={2}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    The <strong>{this.functionsUtil.capitalize(currentNetwork.name)} network</strong> is not supported for this function, please switch to <strong>{this.functionsUtil.getGlobalConfig(['network','availableNetworks',this.functionsUtil.getGlobalConfig(['network','providers','polygon','networkPairs',currentNetworkId]),'name'])} network</strong>.\n                                  </Text>\n                                  <RoundButton\n                                    buttonProps={{\n                                      mt:3,\n                                      width:[1,1/2],\n                                      fontSize:[1,2]\n                                    }}\n                                    handleClick={e => this.props.setRequiredNetwork(this.functionsUtil.getGlobalConfig(['network','providers','polygon','networkPairs',currentNetworkId]))}\n                                  >\n                                    Switch Network\n                                  </RoundButton>\n                                </Flex>\n                              </DashboardCard>\n                            ) : (this.state.tokenConfig && this.state.balanceProp && this.state.contractInfo) ? (\n                              <Box\n                                mt={1}\n                                width={1}\n                                mb={[4,3]}\n                              >\n                                {\n                                  (isDeposit || isWithdraw) ? (\n                                    <SendTxWithBalance\n                                      {...this.props}\n                                      error={this.state.error}\n                                      steps={this.state.steps}\n                                      infoBox={this.state.infoBox}\n                                      action={this.state.selectedAction}\n                                      tokenConfig={this.state.tokenConfig}\n                                      tokenBalance={this.state.balanceProp}\n                                      contractInfo={this.state.contractInfo}\n                                      permitEnabled={this.state.permitEnabled}\n                                      approveEnabled={this.state.approveEnabled}\n                                      callback={this.transactionSucceeded.bind(this)}\n                                      approveDescription={this.state.approveDescription}\n                                      contractApproved={this.contractApproved.bind(this)}\n                                      balanceSelectorInfo={this.state.balanceSelectorInfo}\n                                      changeInputCallback={this.changeInputCallback.bind(this)}\n                                      getTransactionParams={this.getTransactionParams.bind(this)}\n                                    >\n                                      {\n                                        isDeposit ? (\n                                          <Flex\n                                            width={1}\n                                            alignItems={'stretch'}\n                                            flexDirection={'column'}\n                                            justifyContent={'center'}\n                                          >\n                                            <BuyModal\n                                              {...this.props}\n                                              showInline={true}\n                                              availableMethods={[]}\n                                              buyToken={this.state.selectedToken}\n                                            />\n                                          </Flex>\n                                          // `You don't have any ${this.state.selectedToken} in your wallet.`\n                                        ) : isWithdraw && (\n                                          <DashboardCard\n                                            cardProps={{\n                                              p:3\n                                            }}\n                                          >\n                                            <Flex\n                                              alignItems={'center'}\n                                              flexDirection={'column'}\n                                            >\n                                              <Icon\n                                                name={'MoneyOff'}\n                                                color={'cellText'}\n                                                size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                              />\n                                              <Text\n                                                mt={1}\n                                                fontSize={2}\n                                                color={'cellText'}\n                                                textAlign={'center'}\n                                              >\n                                                You don't have any {this.state.selectedToken} to withdraw.\n                                              </Text>\n                                            </Flex>\n                                          </DashboardCard>\n                                        )\n                                      }\n                                    </SendTxWithBalance>\n                                  ) : isExit && (\n                                    <Box\n                                      width={1}\n                                    >\n                                      {\n                                        !this.state.dataLoaded ? (\n                                          <Flex\n                                            mt={4}\n                                            flexDirection={'column'}\n                                          >\n                                            <FlexLoader\n                                              flexProps={{\n                                                flexDirection:'row'\n                                              }}\n                                              loaderProps={{\n                                                size:'30px'\n                                              }}\n                                              textProps={{\n                                                ml:2\n                                              }}\n                                              text={'Loading transactions...'}\n                                            />\n                                          </Flex>\n                                        ) : this.state.txsToExit.length ? (\n                                          <Box\n                                            width={1}\n                                          >\n                                            <Text mb={1}>\n                                              Select Transaction:\n                                            </Text>\n                                            <GenericSelector\n                                              {...this.props}\n                                              isSearchable={false}\n                                              name={'transactions'}\n                                              options={this.state.txsToExit}\n                                              onChange={this.selectTransaction.bind(this)}\n                                              defaultValue={this.state.defaultTransaction}\n                                            />\n                                            {\n                                              this.state.selectedTransaction && (\n                                                <ExecuteTransaction\n                                                  action={'Exit'}\n                                                  Component={RoundButton}\n                                                  parentProps={{\n                                                    mt:3,\n                                                    alignItems:'center',\n                                                    justifyContent:'center'\n                                                  }}\n                                                  componentProps={{\n                                                    buttonProps:{\n                                                      value:'Exit',\n                                                      width:[1,1/3],\n                                                      size:'medium',\n                                                      mainColor:'redeem'\n                                                    },\n                                                    value:'Exit Transaction',\n                                                  }}\n                                                  params={[]}\n                                                  methodName={'exit'}\n                                                  sendRawTransaction={true}\n                                                  contractName={'RootChainManager'}\n                                                  callback={this.exitCallback.bind(this)}\n                                                  getTransactionParamsAsync={this.getExitTransactionParams.bind(this)}\n                                                  {...this.props}\n                                                >\n                                                  <Flex\n                                                    flexDirection={'row'}\n                                                    alignItems={'center'}\n                                                    justifyContent={'center'}\n                                                  >\n                                                    <Icon\n                                                      mr={1}\n                                                      name={'Done'}\n                                                      size={'1.4em'}\n                                                      color={this.props.theme.colors.transactions.status.completed}\n                                                    />\n                                                    <Text\n                                                      fontWeight={500}\n                                                      fontSize={'15px'}\n                                                      color={'copyColor'}\n                                                      textAlign={'center'}\n                                                    >\n                                                      Transaction successfully exited!\n                                                    </Text>\n                                                  </Flex>\n                                                </ExecuteTransaction>\n                                              )\n                                            }\n                                          </Box>\n                                        ) : (\n                                          <DashboardCard\n                                            cardProps={{\n                                              p:3,\n                                              width:1\n                                            }}\n                                          >\n                                            <Flex\n                                              alignItems={'center'}\n                                              flexDirection={'column'}\n                                            >\n                                              <Icon\n                                                size={'1.8em'}\n                                                name={'Warning'}\n                                                color={'cellText'}\n                                              />\n                                              <Text\n                                                mt={1}\n                                                fontSize={2}\n                                                color={'cellText'}\n                                                textAlign={'center'}\n                                              >\n                                                You cannot exit any transaction yet.\n                                              </Text>\n                                            </Flex>\n                                          </DashboardCard>\n                                        )\n                                      }\n                                    </Box>\n                                  )\n                                }\n                              </Box>\n                            ) : (\n                              <Flex\n                                mt={3}\n                                mb={3}\n                                width={1}\n                              >\n                                <FlexLoader\n                                  flexProps={{\n                                    flexDirection:'row'\n                                  }}\n                                  loaderProps={{\n                                    size:'30px'\n                                  }}\n                                  textProps={{\n                                    ml:2\n                                  }}\n                                  text={'Loading info...'}\n                                />\n                              </Flex>\n                            )\n                          }\n                        </Box>\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default PolygonBridge;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass CoverProtocol extends Component {\n\n  state = {\n    steps:null,\n    infoBox:null,\n    swapInfo:null,\n    portfolio:null,\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    selectedAction:null,\n    successMessage:null,\n    activeCoverages:null,\n    defaultCoverage:null,\n    selectedCoverage:null,\n    contractApproved:false,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    transactionSucceeded:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n    // window.transactionSucceeded = this.transactionSucceeded.bind(this);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedCoverageChanged = prevState.selectedCoverage !== this.state.selectedCoverage;\n    if (selectedCoverageChanged){\n      const selectedToken = this.state.selectedCoverage.collateral;\n      const tokenConfig = Object.values(this.props.availableStrategies)[0][selectedToken];\n      const tokenBalance = await this.functionsUtil.getTokenBalance(selectedToken,this.props.account);\n      const selectedAction = !this.state.selectedAction ? (this.props.urlParams.param2 || 'Claim') : this.state.selectedAction;\n      this.setState({\n        tokenConfig,\n        tokenBalance,\n        selectedToken,\n        selectedAction\n      });\n    }\n\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue && this.state.inputValue.gt(0);\n    const swapInfoChanged = JSON.stringify(prevState.swapInfo) !== JSON.stringify(this.state.swapInfo) && this.state.inputValue && this.state.inputValue.gt(0);\n    if (selectedActionChanged || inputValueChanged || swapInfoChanged || contractApprovedChanged){\n      this.updateData();\n    }\n\n    const contractInfoChanged = JSON.stringify(prevState.contractInfo) !== JSON.stringify(this.state.contractInfo);\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async getSwapInfo(amount){\n    amount = this.functionsUtil.BNify(amount);\n    if (!amount.isNaN() && amount.gt(0)){\n      // console.log('getSwapInfo',this.state.contractInfo.name,this.state.tokenConfig.address,balancerTokenConfig.address,swapFee,covTokens,tokenPrice);\n\n      if (this.state.tokenPrice && this.state.swapFee && this.state.covTokens){\n\n        const swapFee = this.state.swapFee;\n        const tokenPrice = this.state.tokenPrice;\n        let tokenAmountOut = amount.div(tokenPrice);\n        tokenAmountOut = tokenAmountOut.minus(tokenAmountOut.times(swapFee));\n\n        return {\n          amount,\n          tokenAmountOut\n        };\n      }\n    }\n\n    return null;\n  }\n\n  async changeInputCallback(inputValue=null){\n    let swapInfo = null;\n    let balanceSelectorInfo = null;\n    inputValue = inputValue || this.state.inputValue;\n\n    if (inputValue && this.functionsUtil.BNify(inputValue).gt(0)){\n      switch (this.state.selectedAction){\n        case 'Mint':\n          balanceSelectorInfo = {\n            color:this.props.theme.colors.transactions.status.completed,\n            text:`You will Mint: ${inputValue.toFixed(4)} CLAIM and NOCLAIM`\n          };\n        break;\n        case 'Claim':\n        case 'NoClaim':\n          const amount = this.functionsUtil.normalizeTokenAmount(inputValue,this.state.tokenConfig.decimals);\n          swapInfo = await this.getSwapInfo(amount);\n          if (swapInfo){\n            if (swapInfo.tokenAmountOut.lte(this.state.covTokens)){\n              balanceSelectorInfo = {\n                color:this.props.theme.colors.transactions.status.completed,\n                text:`You will Buy: ~${this.functionsUtil.fixTokenDecimals(swapInfo.tokenAmountOut,18).toFixed(4)} ${this.state.selectedAction}`\n              };\n            } else {\n              balanceSelectorInfo = {\n                text:`Not enough liquidity`,\n                color:this.props.theme.colors.transactions.status.failed,\n              };\n            }\n          }\n        break;\n        default:\n        break;\n      }\n    }\n\n    this.setState({\n      swapInfo,\n      inputValue,\n      balanceSelectorInfo\n    });\n  }\n\n  async getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = null;\n    amount = this.functionsUtil.BNify(amount);\n    const MAX_UINT256 = this.functionsUtil.BNify(2).pow(256).minus(1).toFixed(0);\n    switch (this.state.selectedAction){\n      case 'Mint':\n        methodName = 'addCover';\n        methodParams = [this.state.tokenConfig.address,parseInt(this.state.selectedCoverage.expirationTimestamp),this.functionsUtil.integerValue(amount)];\n      break;\n      case 'Claim':\n      case 'NoClaim':\n        methodName = 'swapExactAmountOut';\n        const balancerTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const swapInfo = await this.getSwapInfo(amount);\n        if (swapInfo){\n          if (swapInfo.tokenAmountOut.lte(this.state.covTokens)){\n            methodParams = [this.state.tokenConfig.address,this.functionsUtil.integerValue(amount),balancerTokenConfig.address, this.functionsUtil.integerValue(swapInfo.tokenAmountOut), MAX_UINT256];\n          } else {\n            return null;\n          }\n        }\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    let infoBox = null;\n    const dashboardUrl = `#${this.functionsUtil.getGlobalConfig(['dashboard','baseRoute'])}/best`;\n    const fixedAmount = this.functionsUtil.fixTokenDecimals(amount,this.state.tokenConfig.decimals);\n    switch (this.state.selectedAction){\n      case 'Mint':\n        const mintedClaimLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.selectedCoverage.tokens['Claim'].address ) : null;\n        const mintedNoClaimLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.selectedCoverage.tokens['NoClaim'].address ) : null;\n        const mintedClaimAmount = mintedClaimLog ? this.functionsUtil.fixTokenDecimals(parseInt(mintedClaimLog.data,16),this.state.contractInfo.decimals) : fixedAmount;\n        const mintedNoClaimAmount = mintedNoClaimLog ? this.functionsUtil.fixTokenDecimals(parseInt(mintedNoClaimLog.data,16),this.state.contractInfo.decimals) : fixedAmount;\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully minted <strong>${mintedClaimAmount.toFixed(4)} CLAIM</strong> and <strong>${mintedNoClaimAmount.toFixed(4)} NOCLAIM</strong> tokens<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      case 'Claim':\n        const claimTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const claimTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === claimTokenConfig.address ) : null;\n        const receivedClaimAmount = claimTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(claimTokensLog.data,16),claimTokenConfig.balancerPool.decimals) : this.functionsUtil.fixTokenDecimals(params[3],claimTokenConfig.balancerPool.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully bought <strong>${receivedClaimAmount.toFixed(4)} ${this.state.selectedAction}</strong> tokens, you are now covered in the event that there is a successful attack on the protocol<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      case 'NoClaim':\n        debugger;\n        const noClaimTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const noClaimTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === noClaimTokenConfig.address ) : null;\n        const receivedNoClaimAmount = noClaimTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(noClaimTokensLog.data,16),noClaimTokenConfig.balancerPool.decimals) : this.functionsUtil.fixTokenDecimals(params[3],noClaimTokenConfig.balancerPool.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully bought <strong>${receivedNoClaimAmount.toFixed(4)} ${this.state.selectedAction}</strong> tokens, you will be rewarded if there is no successful attack on the protocol by the expiry date<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    // Set second step completed\n    let steps = this.state.steps;\n    steps[1].completed = true;\n\n    const transactionSucceeded = true;\n    const tokenBalance = await this.functionsUtil.getTokenBalance(this.state.selectedToken,this.props.account);\n\n    // console.log('transactionSucceeded',infoBox);\n\n    this.setState({\n      steps,\n      infoBox,\n      tokenBalance,\n      transactionSucceeded\n    });\n  }\n\n  async updateData(){\n    let apy = null;\n    const steps = [];\n    let infoBox = null;\n    let swapFee = null;\n    let covTokens = null;\n    let tokenPrice = null;\n    let tokenAmount = null;\n    let contractInfo = null;\n    let collateralAmount = null;\n    let approveDescription = null;\n\n    const claimTokenConfig = this.state.selectedCoverage.tokens['Claim'];\n    const noClaimTokenConfig = this.state.selectedCoverage.tokens['NoClaim'];\n    const balancerClaimConfig = claimTokenConfig.balancerPool;\n    const balancerNoClaimConfig = noClaimTokenConfig.balancerPool;\n\n    await Promise.all([\n      this.props.initContract(claimTokenConfig.name,claimTokenConfig.address,claimTokenConfig.abi),\n      this.props.initContract(noClaimTokenConfig.name,noClaimTokenConfig.address,noClaimTokenConfig.abi),\n      this.props.initContract(balancerClaimConfig.name,balancerClaimConfig.address,balancerClaimConfig.abi),\n      this.props.initContract(balancerNoClaimConfig.name,balancerNoClaimConfig.address,balancerNoClaimConfig.abi)\n    ]);\n\n    const [\n      claimTokenBalance,\n      noClaimTokenBalance,\n      balancerPoolClaimBalance,\n      balancerPoolNoClaimBalance\n    ] = await Promise.all([\n      // Get Claim token balance\n      this.functionsUtil.getTokenBalance(claimTokenConfig.name,this.props.account),\n      // Get NOCLAIM token balance\n      this.functionsUtil.getTokenBalance(noClaimTokenConfig.name,this.props.account),\n      // Get Balancer Claim token Pool balance\n      this.functionsUtil.getTokenBalance(balancerClaimConfig.name,this.props.account),\n      // Get Balancer NOCLAIM token Pool balance\n      this.functionsUtil.getTokenBalance(balancerNoClaimConfig.name,this.props.account)\n    ]);\n\n    // Check if user has both Claim and NOCLAIM tokens\n    const hasMintedTokens = claimTokenBalance && noClaimTokenBalance && claimTokenBalance.gt(0) && noClaimTokenBalance.gt(0);\n\n    // Set Contract Info\n    switch (this.state.selectedAction){\n      case 'Mint':\n        contractInfo = this.props.toolProps.contract;\n      break;\n      case 'NoClaim':\n        contractInfo = noClaimTokenConfig.balancerPool;\n      break;\n      case 'Claim':\n        contractInfo = claimTokenConfig.balancerPool;\n      break;\n      default:\n      break;\n    }\n\n    const balancerTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n\n    if (contractInfo){\n      if (balancerTokenConfig){\n        [\n          swapFee,\n          covTokens,\n          tokenPrice\n        ] = await Promise.all([\n          this.functionsUtil.genericContractCall(contractInfo.name,'getSwapFee'),\n          this.functionsUtil.genericContractCall(contractInfo.name,'getBalance',[balancerTokenConfig.address]),\n          this.functionsUtil.genericContractCall(contractInfo.name,'getSpotPrice',[this.state.tokenConfig.address,balancerTokenConfig.address])\n        ]);\n\n        // Calculate yearly returns\n        if (tokenPrice){\n          const isClaim = this.state.selectedAction === 'Claim';\n          const expirationTimestamp = this.state.selectedCoverage.expirationTimestamp;\n          const days =  (expirationTimestamp*1000 - Date.now())/(60 * 60 * 24 * 1000);\n          tokenPrice = this.functionsUtil.fixTokenDecimals(tokenPrice,this.state.tokenConfig.decimals);\n          const apyPrice = isClaim ? tokenPrice : this.functionsUtil.BNify(1).minus(tokenPrice).div(tokenPrice);\n          apy = this.functionsUtil.BNify(100).times(apyPrice).times(365).div(days);\n        }\n\n        // Fix swap Fees\n        if (swapFee){\n          swapFee = this.functionsUtil.fixTokenDecimals(swapFee,18);\n        }\n      }\n\n      switch (this.state.selectedAction){\n        case 'Mint':\n          approveDescription = `Approve the Cover Protocol contract`;\n          infoBox = {\n            icon:'MonetizationOn',\n            text:`Stake ${this.state.selectedToken} to mint both CLAIM and NOCLAIM tokens in a 1:1 ratio then add them to the respective Balancer Pool to earn trading fees.<br /><small>Prior to expiry or an accepted claim, users can redeem back their collateral with both their CLAIM and NOCLAIM tokens. <a href=\"https://docs.coverprotocol.com/user-guide/redemption\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a></small>`\n          };\n          // Add Approve Step\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:hasMintedTokens,\n            description:`Mint CLAIM and NOCLAIM tokens`\n          });\n          // Add Liquidity to Balancer Step\n          steps.push({\n            icon:'Looks3',\n            description:`Add your CLAIM tokens to the Balancer Pool`,\n            completed:balancerPoolClaimBalance && balancerPoolClaimBalance.gt(0),\n            link:`https://pools.balancer.exchange/#/pool/${this.state.selectedCoverage.tokens['Claim'].balancerPool.address}/`,\n          });\n          // Add Liquidity to Balancer Step\n          steps.push({\n            icon:'Looks4',\n            description:`Add your NOCLAIM tokens to the Balancer Pool`,\n            completed:balancerPoolNoClaimBalance && balancerPoolNoClaimBalance.gt(0),\n            link:`https://pools.balancer.exchange/#/pool/${this.state.selectedCoverage.tokens['NoClaim'].balancerPool.address}/`,\n          });\n        break;\n        case 'NoClaim':\n          if (this.state.swapInfo){\n            collateralAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.amount,this.state.tokenConfig.decimals);\n            tokenAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.tokenAmountOut,contractInfo.decimals);\n            infoBox = {\n              icon:'VerifiedUser',\n              text:`By providing <strong>${collateralAmount.toFixed(4)} ${this.state.selectedToken}</strong> your NOCLAIM tokens will pay out <strong>~${tokenAmount.toFixed(4)} ${this.state.selectedToken}</strong> if there is no successful attack on the protocol by the expiry date.`\n            };\n          } else {\n            infoBox = {\n              icon:'VerifiedUser',\n              text:`NOCLAIM tokens will pay out 1 ${this.state.selectedToken} for each token you hold if there is no successful attack on the protocol by the expiry date.`\n            };\n          }\n\n          // Add Yearly cost and read more\n          infoBox.text+=`${apy ? `<br /><span style=\"color:${this.props.theme.colors.primary}\">The yearly return of buying and holding NOCLAIM until expiration is <strong>${apy.toFixed(2)}%</strong>` : null}</span><br /><small><a href=\"https://docs.coverprotocol.com/product/claims-guidelines\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a> to understand how claims are assessed and paid out by Cover Protocol.</small>`;\n\n          // Add Approve Step\n          approveDescription = `Approve the NOCLAIM Balancer Pool contract`;\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:noClaimTokenBalance && noClaimTokenBalance.gt(0),\n            description:`Buy NOCLAIM tokens with your ${this.state.selectedToken}`\n          });\n        break;\n        case 'Claim':\n          if (this.state.swapInfo){\n            collateralAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.amount,this.state.tokenConfig.decimals);\n            tokenAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.tokenAmountOut,contractInfo.decimals);\n            const portfolioCoveredPerc = 32;//this.state.portfolio && this.state.portfolio.totalBalance.gt(0) ? tokenAmount.div(this.state.portfolio.totalBalance).times(100) : null;\n            infoBox = {\n              icon:'BeachAccess',\n              text:`By providing <strong>${collateralAmount.toFixed(4)} ${this.state.selectedToken}</strong> your CLAIM tokens will pay out <strong>~${tokenAmount.toFixed(4)} ${this.state.selectedToken}</strong>${ portfolioCoveredPerc ? ` <strong>(${portfolioCoveredPerc}% of your portfolio)</strong>` : '' } in the event that there is a successful attack on the protocol before the expiry date.`\n            };\n          } else {\n            infoBox = {\n              icon:'BeachAccess',\n              text:`CLAIM tokens will pay out 1 ${this.state.selectedToken} for each token you hold in the event that there is a successful attack on the protocol before the expiry date.`\n            };\n          }\n\n          infoBox.text+=`${apy ? `<br /><span style=\"color:${this.props.theme.colors.primary}\">The yearly cost of buying and holding CLAIM until expiration is <strong>${apy.toFixed(2)}%` : null}</strong></span><br /><small><a href=\"https://docs.coverprotocol.com/product/claims-guidelines\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a> to understand how claims are assessed and paid out by Cover Protocol.</small>`;\n\n          // Add Approve Step\n          approveDescription = `Approve the CLAIM Balancer Pool contract`;\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:claimTokenBalance && claimTokenBalance.gt(0),\n            description:`Buy CLAIM tokens with your ${this.state.selectedToken}`\n          });\n        break;\n        default:\n        break;\n      }\n\n      const transactionSucceeded = false;\n      this.setState({\n        apy,\n        steps,\n        infoBox,\n        swapFee,\n        covTokens,\n        tokenPrice,\n        contractInfo,\n        approveDescription,\n        transactionSucceeded\n      });\n    }\n  }\n\n  async loadData(){\n    const currTime = parseInt(Date.now()/1000);\n    const activeCoverages = this.props.toolProps.coverages.reduce( (output,c,index) => {\n      if (c.expirationTimestamp>currTime){\n        const expirationDate = this.functionsUtil.strToMoment(c.expirationTimestamp*1000).utc().format('YYYY-MM-DD HH:mm:ss')+' UTC';\n        const icon = `images/tokens/${c.collateral}.svg`;\n        const label = `Collateral: ${c.collateral} - Expiration: ${expirationDate}`;\n        output.push({\n          icon,\n          label,\n          data:c,\n          value:expirationDate,\n        });\n      }\n      return output;\n    },[]);\n\n    const portfolio = await this.functionsUtil.getAccountPortfolio();\n    const defaultCoverage = activeCoverages.length ? activeCoverages[0] : null;\n\n    this.setState({\n      portfolio,\n      defaultCoverage,\n      activeCoverages\n    },() => {\n      if (defaultCoverage){\n        this.selectCoverage(defaultCoverage);\n      }\n    });\n  }\n\n  async selectCoverage(coverage){\n    const selectedCoverage = coverage.data;\n    this.setState({\n      selectedCoverage\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  render() {\n\n    const isMint = this.state.selectedAction === 'Mint';\n    const isBuyClaim = this.state.selectedAction === 'Claim';\n    const isBuyNoClaim = this.state.selectedAction === 'NoClaim';\n    const txAction = isMint ? this.state.selectedAction : `Buy ${this.state.selectedAction}`;\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.activeCoverages ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading active coverages...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.activeCoverages.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active coverages.\n                  </Text>\n                ) : (\n                  <Flex\n                    width={[1,0.46]}\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Box\n                      width={1}\n                    >\n                      <Text mb={1}>\n                        Select Coverage:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        name={'strategy'}\n                        isSearchable={false}\n                        options={this.state.activeCoverages}\n                        CustomOptionValue={CustomOptionValue}\n                        defaultValue={this.state.defaultCoverage}\n                        onChange={this.selectCoverage.bind(this)}\n                        CustomValueContainer={CustomValueContainer}\n                      />\n                    </Box>\n                    {\n                      this.state.selectedCoverage && (\n                        <Box\n                          mt={3}\n                          width={1}\n                        >\n                          <Text mb={1}>\n                            Select Action:\n                          </Text>\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={['column','row']}\n                            justifyContent={'space-between'}\n                          >\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isMint ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Add Liquidity'}\n                              imageSrc={'images/mint.svg'}\n                              isMobile={this.props.isMobile}\n                              subcaption={'mint CLAIM and NOCLAIM\\nand stake in Balancer Pool'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isMint}\n                              handleClick={ e => this.setAction('Mint') }\n                            />\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isBuyClaim ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Buy CLAIM'}\n                              imageSrc={'images/claim.svg'}\n                              isMobile={this.props.isMobile}\n                              subcaption={'protect in case of attacks\\nagainst the Idle protocol'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isBuyClaim}\n                              handleClick={ e => this.setAction('Claim') }\n                            />\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isBuyNoClaim ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Buy NOCLAIM'}\n                              isMobile={this.props.isMobile}\n                              imageSrc={'images/noclaim.svg'}\n                              subcaption={'get rewarded if no attack\\noccurs on the Idle protocol'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isBuyNoClaim}\n                              handleClick={ e => this.setAction('NoClaim') }\n                            />\n                          </Flex>\n                          {\n                            this.state.tokenConfig && this.state.tokenBalance && this.state.contractInfo &&\n                              <Box\n                                mt={2}\n                                mb={3}\n                                width={1}\n                              >\n                                <SendTxWithBalance\n                                  {...this.props}\n                                  action={txAction}\n                                  error={this.state.error}\n                                  steps={this.state.steps}\n                                  infoBox={this.state.infoBox}\n                                  tokenConfig={this.state.tokenConfig}\n                                  tokenBalance={this.state.tokenBalance}\n                                  contractInfo={this.state.contractInfo}\n                                  callback={this.transactionSucceeded.bind(this)}\n                                  contractApproved={this.contractApproved.bind(this)}\n                                  approveDescription={this.state.approveDescription}\n                                  balanceSelectorInfo={this.state.balanceSelectorInfo}\n                                  changeInputCallback={this.changeInputCallback.bind(this)}\n                                  getTransactionParams={this.getTransactionParams.bind(this)}\n                                >\n                                  <BuyModal\n                                    {...this.props}\n                                    showInline={true}\n                                    availableMethods={[]}\n                                    buyToken={this.state.selectedToken}\n                                  />\n                                </SendTxWithBalance>\n                              </Box>\n                          }\n                        </Box>\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default CoverProtocol;\n","import Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass TokenMigration extends Component {\n\n  state = {\n    tokenConfig:null,\n    selectedFromToken:null,\n    selectedDestToken:null,\n    migrationSucceeded:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async loadTokens(){\n    const selectedFromToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    if (selectedFromToken && selectedFromToken !== this.props.urlParams.param2){\n      this.changeFromToken(selectedFromToken);\n    }\n\n    this.selectFromToken(selectedFromToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      await this.loadTokens();\n    }\n  }\n\n  changeFromToken = (selectedToken) => {\n    const convertTool = this.functionsUtil.getGlobalConfig(['tools','tokenMigration']);\n    this.props.goToSection(`tools/${convertTool.route}/${selectedToken}`);\n  }\n\n  selectFromToken = async (selectedFromToken) => {\n    const tokenInfo = this.props.toolProps.availableTokens[selectedFromToken];\n\n    let selectedDestToken = null;\n    const availableDestinationTokens = {};\n\n    const availableStrategies = typeof this.props.toolProps.availableStrategies !== 'undefined' ? this.props.toolProps.availableStrategies : Object.keys(this.props.availableStrategies);\n\n    availableStrategies.forEach( strategy => {\n      const strategyAvailableTokens =  this.props.availableStrategies[strategy];\n      const baseTokenConfig = strategyAvailableTokens[tokenInfo.baseToken];\n      if (!baseTokenConfig){\n        return false;\n      }\n\n      // Remove icon\n      delete baseTokenConfig.icon;\n\n      if (!selectedDestToken){\n        selectedDestToken = baseTokenConfig.idle.token;\n      }\n      baseTokenConfig.strategy = strategy;\n      baseTokenConfig.baseToken = tokenInfo.baseToken;\n      availableDestinationTokens[baseTokenConfig.idle.token] = baseTokenConfig;\n    });\n\n    this.setState({\n      tokenConfig:null,\n      selectedFromToken,\n      availableDestinationTokens\n    },() => {\n      this.selectDestToken(selectedDestToken);\n    });\n  }\n\n  selectDestToken = async (selectedDestToken) => {\n\n    const destTokenConfig = this.state.availableDestinationTokens[selectedDestToken];\n    const tokenInfo = this.props.toolProps.availableTokens[this.state.selectedFromToken];\n\n    const tokenConfig = {\n      token:destTokenConfig.baseToken,\n      address:destTokenConfig.address,\n      decimals:destTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = destTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:tokenInfo.abi,\n      name:tokenInfo.token,\n      token:tokenInfo.token,\n      address:tokenInfo.address\n    };\n    \n    const migrationContract = this.props.toolProps.migrationContract;\n\n    // Add migration function\n    if (tokenInfo.migrateFunction){\n      migrationContract.functions[0].name = tokenInfo.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(destTokenConfig.strategy,tokenInfo.baseToken);\n\n    this.setState({\n      tokenConfig,\n      selectedDestToken\n    });\n  }\n\n  migrationCallback = () => {\n    this.setState({\n      migrationSucceeded:true\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedFromToken){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to migrate:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              id={'token-from'}\n              showBalance={true}\n              isSearchable={true}\n              onChange={this.changeFromToken}\n              selectedToken={this.state.selectedFromToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            this.state.availableDestinationTokens && this.state.selectedDestToken && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text mb={1}>\n                  Select destination asset:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  id={'token-dest'}\n                  showBalance={false}\n                  onChange={this.selectDestToken}\n                  selectedToken={this.state.selectedDestToken}\n                  availableTokens={this.state.availableDestinationTokens}\n                />\n              </Box>\n          }\n          {\n            this.state.selectedFromToken && this.state.selectedDestToken ? (\n              <Migrate\n                {...this.props}\n                showActions={false}\n                getTokenPrice={false}\n                isMigrationTool={true}\n                tokenConfig={this.state.tokenConfig}\n                migrationCallback={this.migrationCallback}\n                selectedToken={this.state.selectedFromToken}\n                selectedStrategy={this.props.selectedStrategy}\n              >\n                {\n                  !this.props.account ? (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'2.3em'}\n                          name={'Input'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={2}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Please connect with your wallet interact with Idle.\n                        </Text>\n                        <RoundButton\n                          buttonProps={{\n                            mt:2,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.props.connectAndValidateAccount}\n                        >\n                          Connect\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      {\n                        this.state.migrationSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              Your {this.state.selectedFromToken} have been successfully migrated!\n                            </Text>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedFromToken} in your wallet.\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n              </Migrate>\n            ) : null\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenMigration;\n","/*\n// batchDeposits[user][batchId] = amount\nmapping (address => mapping (uint256 => uint256)) public batchDeposits;\nmapping (uint256 => uint256) batchTotals; // in idleToken\nmapping (uint256 => uint256) batchRedeemedTotals; // in newIdleToken\n\nuint256 public currBatch;\naddress public idleToken;\naddress public newIdleToken;\naddress public underlying;\n\nfunction deposit() external\nfunction withdraw(uint256 batchId) external\n*/\n\nimport Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Box, Text, Icon, Link } from \"rimble-ui\";\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport TransactionField from '../TransactionField/TransactionField';\n\nclass BatchMigration extends Component {\n\n  state = {\n    canClaim:false,\n    batchTotals:{},\n    canDeposit:true,\n    action:'deposit',\n    batchDeposits:{},\n    tokenConfig:null,\n    processing:{\n      claim:{\n        txHash:null,\n        loading:false\n      },\n    },\n    hasDeposited:false,\n    selectedToken:null,\n    batchCompleted:false,\n    claimSucceeded:false,\n    migrationSucceeded:false,\n    selectedTokenConfig:null,\n    migrationContractApproved:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async checkBatchs(){\n\n    const migrationContractInfo = this.state.selectedTokenConfig.migrationContract;\n\n    await Promise.all([\n      this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi),\n      this.props.initContract(this.state.selectedTokenConfig.name,this.state.selectedTokenConfig.address,this.state.selectedTokenConfig.abi)\n    ]);\n\n    const [currBatchIndex,migrationContractApproved] = await Promise.all([\n      this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'currBatch'),\n      this.functionsUtil.checkTokenApproved(this.state.selectedTokenConfig.name,migrationContractInfo.address,this.props.account)\n    ]);\n\n    const newState = {};\n    const batchDeposits = {};\n    const batchTotals = {};\n    let batchCompleted = false;\n\n    if (currBatchIndex !== null){\n      for (let batchIndex = 0; batchIndex <= currBatchIndex ; batchIndex++){\n        let [batchTotal,batchDeposit] = await Promise.all([\n          this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchTotals',[batchIndex]),\n          this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n        ]);\n        if (batchTotal && batchTotal !== null){\n          batchTotals[batchIndex] = this.functionsUtil.fixTokenDecimals(batchTotal,this.state.selectedTokenConfig.decimals);\n        }\n        if (batchDeposit !== null){\n          batchDeposit = this.functionsUtil.fixTokenDecimals(batchDeposit,this.state.selectedTokenConfig.decimals);\n          if (batchDeposit.gt(0)){\n\n            batchDeposits[batchIndex] = batchDeposit;\n            // Check claimable\n            if (batchIndex < currBatchIndex){\n              batchCompleted = true;\n            }\n          }\n        }\n      }\n\n      newState.batchDeposits = batchDeposits;\n    }\n\n    const hasDeposited = (batchDeposits && Object.keys(batchDeposits).length>0);\n\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    newState.claimSucceeded = false;\n    newState.batchTotals = batchTotals;\n    newState.batchCompleted = batchCompleted;\n    newState.hasDeposited = hasDeposited;\n    newState.canDeposit = !hasDeposited && batchMigrationDepositEnabled;\n    newState.canClaim = batchCompleted || hasDeposited;\n    newState.action = hasDeposited ? 'redeem' : 'deposit';\n    newState.migrationContractApproved = migrationContractApproved;\n\n    this.setState(newState);\n  }\n\n  async loadTokens(){\n    const selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    this.selectFromToken(selectedToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      await this.loadTokens();\n    }\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      this.checkBatchs();\n    }\n  }\n\n  selectFromToken = async (selectedToken) => {\n\n    const selectedTokenConfig = this.props.toolProps.availableTokens[selectedToken];\n    const strategyAvailableTokens =  this.props.availableStrategies[selectedTokenConfig.strategy];\n\n    const baseTokenConfig = strategyAvailableTokens[selectedTokenConfig.baseToken];\n\n    const tokenConfig = {\n      token:selectedTokenConfig.baseToken,\n      address:selectedTokenConfig.address,\n      decimals:selectedTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = baseTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:selectedTokenConfig.abi,\n      name:selectedTokenConfig.name,\n      token:selectedTokenConfig.token,\n      address:selectedTokenConfig.address\n    };\n    \n    const migrationContract = selectedTokenConfig.migrationContract;\n\n    // Add migration function\n    if (baseTokenConfig.migrateFunction){\n      migrationContract.functions[0].name = baseTokenConfig.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(selectedTokenConfig.strategy,baseTokenConfig.baseToken);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedTokenConfig\n    });\n  }\n\n  claim = async () => {\n    if (!this.state.batchCompleted){\n      return null;\n    }\n\n    const loading = true;\n    const claimableValue = 0;\n    const batchId = Object.keys(this.state.batchDeposits)[0];\n\n    const callbackClaim = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: `BatchMigration`,\n        eventAction: 'Claim',\n        eventLabel: this.props.selectedToken,\n        eventValue: parseInt(claimableValue)\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        claimSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          claim:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptClaim = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          claim:{\n            ...prevState.processing.claim,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'withdraw', [batchId], null, callbackClaim, callbackReceiptClaim);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        claim:{\n          ...prevState.processing.claim,\n          loading\n        }\n      }\n    }));\n  }\n\n  setAction = (action) => {\n    if (action !== null && ['deposit','redeem'].includes(action.toLowerCase())){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  migrationCallback = () => {\n    this.checkBatchs();\n    this.setState({\n      migrationSucceeded:true\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedToken){\n      return null;\n    }\n\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    const batchId = this.state.batchDeposits && Object.keys(this.state.batchDeposits).length>0 ? Object.keys(this.state.batchDeposits)[0] : null;\n    const batchDeposit = this.state.batchDeposits && Object.values(this.state.batchDeposits).length>0 ? Object.values(this.state.batchDeposits)[0] : null;\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to migrate:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              id={'token-from'}\n              showBalance={true}\n              isSearchable={false}\n              onChange={this.selectFromToken}\n              selectedToken={this.state.selectedToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            (this.state.canDeposit || this.state.canClaim) && \n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  px:4,\n                  mt:3,\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                > \n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.migrationContractApproved ? 'CheckBox' : 'LooksOne'}\n                      color={ this.state.migrationContractApproved ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Approve the batch migration contract\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.hasDeposited ? 'CheckBox' : 'LooksTwo'}\n                      color={ this.state.hasDeposited ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Deposit your {this.state.selectedTokenConfig.token}\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.batchCompleted ? 'CheckBox' : 'Looks3'}\n                      color={ this.state.batchCompleted ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Wait for the batch to be migrated\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.claimSucceeded ? 'CheckBox' : 'Looks4'}\n                      color={ this.state.claimSucceeded ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Claim your {this.state.selectedToken}V4\n                    </Text>\n                  </Flex>\n                </Flex>\n              </DashboardCard>\n          }\n          {\n            this.state.selectedToken ? (\n              <Box width={1}>\n                {\n                  this.state.migrationContractApproved && (this.state.canDeposit || this.state.canClaim) && \n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text mb={2}>\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canDeposit ? this.setAction('deposit') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canDeposit }\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canClaim ? this.setAction('redeem') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canClaim }\n                          isActive={ this.state.action === 'redeem' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Claim\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                }\n                {\n                  this.state.action === 'deposit' ? \n                    batchMigrationDepositEnabled ? (\n                      <Migrate\n                        {...this.props}\n                        showActions={false}\n                        migrationParams={[]}\n                        getTokenPrice={false}\n                        isMigrationTool={true}\n                        migrationIcon={'FileDownload'}\n                        waitText={'Deposit estimated in'}\n                        tokenConfig={this.state.tokenConfig}\n                        selectedToken={this.state.selectedToken}\n                        callbackApprove={this.checkBatchs.bind(this)}\n                        selectedStrategy={this.props.selectedStrategy}\n                        migrationCallback={this.migrationCallback.bind(this)}\n                        migrationText={`Deposit your ${this.state.selectedTokenConfig.token} and wait until it is converted to the new ${this.state.tokenConfig.idle.token}.`}\n                      >\n                        {\n                          !this.props.account ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mt:3\n                              }}\n                            >\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  size={'2.3em'}\n                                  name={'Input'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mt={2}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  Please connect with your wallet interact with Idle.\n                                </Text>\n                                <RoundButton\n                                  buttonProps={{\n                                    mt:2,\n                                    width:[1,1/2]\n                                  }}\n                                  handleClick={this.props.connectAndValidateAccount}\n                                >\n                                  Connect\n                                </RoundButton>\n                              </Flex>\n                            </DashboardCard>\n                          ) : (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                my:3\n                              }}\n                            >\n                              {\n                                batchId ? (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      color={'cellText'}\n                                      name={'HourglassEmpty'}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      {\n                                        this.state.batchCompleted ? (\n                                          <Text.span\n                                            color={'cellText'}\n                                          >The batch has been migrated, click on the \"Claim\" button to withdraw your tokens.</Text.span>\n                                        ) : (\n                                          <Text.span\n                                            color={'cellText'}\n                                          >\n                                            You have successfully deposited {batchDeposit.toFixed(4)} {this.state.selectedTokenConfig.token}, please wait until the batch is migrated to claim your tokens.\n                                            {\n                                              typeof this.state.batchTotals[batchId] !== 'undefined' && \n                                              <Text.span\n                                                color={'cellText'}\n                                              >\n                                                <br />Batch pool: {this.state.batchTotals[batchId].toFixed(4)} {this.state.selectedTokenConfig.token}\n                                              </Text.span>\n                                            }\n                                          </Text.span>\n                                        )\n                                      }\n                                    </Text>\n                                  </Flex>\n                                ) : this.state.migrationSucceeded ? (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      name={'DoneAll'}\n                                      color={this.props.theme.colors.transactions.status.completed}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      You have successfully deposited your {this.state.selectedTokenConfig.token} into the batch!\n                                    </Text>\n                                  </Flex>\n                                ) : (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      name={'MoneyOff'}\n                                      color={'cellText'}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      You don't have any {this.state.selectedTokenConfig.token} in your wallet.\n                                    </Text>\n                                  </Flex>\n                                )\n                              }\n                            </DashboardCard>\n                          )\n                        }\n                      </Migrate>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          my:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Text\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            Batch migration is disabled for this asset.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        my:3\n                      }}\n                    >\n                      {\n                        this.state.processing.claim.loading ? (\n                          <Flex\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar {...this.props} waitText={`Claim estimated in`} endMessage={`Finalizing approve request...`} hash={this.state.processing.claim.txHash} />\n                          </Flex>\n                        ) : this.state.claimSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You have successfully withdrawn your {this.state.selectedToken} V4!\n                            </Text>\n                            <Link\n                              mt={2}\n                              textAlign={'center'}\n                              hoverColor={'primary'}\n                              onClick={ e => this.props.goToSection(this.state.selectedTokenConfig.strategy+'/'+this.state.selectedTokenConfig.baseToken) }\n                            >\n                              Go to the Dashboard\n                            </Link>\n                          </Flex>\n                        ) : this.state.batchCompleted ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              color={'cellText'}\n                              name={'FileUpload'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The batch has been migrated!<br />You can now claim your {this.state.tokenConfig.idle.token} V4.\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                              <RoundButton\n                                buttonProps={{\n                                  mt:3,\n                                  width:[1,0.5],\n                                  mainColor:this.props.theme.colors.redeem\n                                }}\n                                handleClick={ e => this.claim() }\n                              >\n                                Claim\n                              </RoundButton>\n                            </Flex>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              color={'cellText'}\n                              name={'HourglassEmpty'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              <Text.span\n                                color={'cellText'}\n                              >\n                                You have successfully deposited {batchDeposit.toFixed(4)} {this.state.selectedTokenConfig.token}, please wait until the batch is migrated to claim your V4 tokens.\n                                {\n                                  typeof this.state.batchTotals[batchId] !== 'undefined' && \n                                  <Text.span\n                                    color={'cellText'}\n                                  >\n                                    <br />Batch pool: {this.state.batchTotals[batchId].toFixed(4)} {this.state.selectedTokenConfig.token}\n                                  </Text.span>\n                                }\n                              </Text.span>\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n              </Box>\n            ) : null\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default BatchMigration;","import ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\nimport { Flex, Text, Heading, Input, Form, Field, Icon, Link, Loader, Button } from \"rimble-ui\";\n\nclass DeployB2BVesting extends Component {\n\n  state = {\n    actions:[],\n    processing: {\n      txHash:null,\n      loading:false,\n      actionIndex:[]\n    },\n    action:'deploy',\n    validated:false,\n    viewAction:null,\n    editAction:null,\n    newAction:false,\n    maxContracts:10,\n    tokenConfig:null,\n    tokenBalance:null,\n    contractInfo:null,\n    actionValid:false,\n    actionInputs:null,\n    claimedTokens:null,\n    deployedContracts:[],\n    contractDeployed:false,\n    inputs:[\n      {\n        name:'owner',\n        type:'address'\n      },\n      {\n        name:'recipient',\n        type:'address'\n      },\n      {\n        name:'vestingPeriod',\n        type:'uint256'\n      }\n    ]\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  setAction(action){\n    this.setState({\n      action,\n      editAction:null,\n      viewAction:null,\n      claimedTokens:null,\n      contractDeployed:null\n    });\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false,\n        actionIndex:[]\n      }\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadContracts();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    this.validateForm();\n    this.checkInputs();\n\n    const contractDeployed = prevState.contractDeployed !== this.state.contractDeployed && this.state.contractDeployed;\n    if (contractDeployed){\n      this.loadContracts();\n    }\n  }\n\n  async loadContracts(){\n    const tokenConfig = this.functionsUtil.getGlobalConfig(['govTokens','IDLE']);\n    const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n    const fromBlock = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n    const proxyCreated = await this.functionsUtil.getContractPastEvents('ProxyFactory', 'ProxyCreated', {fromBlock, toBlock: 'latest'});\n    const deployedContractsAddresses = proxyCreated.filter( p => p.returnValues.implementation.toLowerCase() === vesterImplementation.address.toLowerCase() ).map( p => p.returnValues.proxy );\n    // console.log('proxyCreated',proxyCreated,'deployedContractsAddresses',deployedContractsAddresses);\n\n    const deployedContracts = [];\n    await this.functionsUtil.asyncForEach(deployedContractsAddresses, async (contractAddress) => {\n      const contractName = `b2bVesting_${contractAddress}`;\n      await this.props.initContract(contractName,contractAddress,vesterImplementation.abi);\n      const [\n        // initialized,\n        owner,\n        recipient,\n        vestingPeriod,\n        availableBalance,\n        depositAmounts,\n      ] = await Promise.all([\n          // this.functionsUtil.genericContractCall(contractName,'initialized'),\n          this.functionsUtil.genericContractCall(contractName,'owner'),\n          this.functionsUtil.genericContractCall(contractName,'recipient'),\n          this.functionsUtil.genericContractCall(contractName,'vestingPeriod'),\n          this.functionsUtil.getTokenBalance(tokenConfig.token,contractAddress),\n          this.functionsUtil.genericContractCall(contractName,'getDepositAmounts')\n      ]);\n\n      let totalDeposited = this.functionsUtil.BNify(0);\n      if (depositAmounts) {\n        totalDeposited = depositAmounts.reduce( (total,amount) => {\n          total = total.plus(amount);\n          return total;\n        },this.functionsUtil.BNify(0));\n\n        totalDeposited = this.functionsUtil.fixTokenDecimals(totalDeposited,tokenConfig.decimals);\n      }\n\n      // console.log(contractName,initialized,owner,recipient,vestingPeriod,depositAmounts,parseFloat(totalDeposited));\n\n      deployedContracts.push({\n        owner,\n        recipient,\n        contractName,\n        vestingPeriod,\n        totalDeposited,\n        contractAddress,\n        availableBalance\n      });\n    });\n    const tokenBalance = await this.functionsUtil.getTokenBalance('IDLE',this.props.account);\n\n    // console.log(deployedContracts);\n\n    this.setState({\n      tokenConfig,\n      tokenBalance,\n      deployedContracts\n    });\n  }\n\n  validateForm(){\n    const validated = Object.values(this.state.actions).length>0;\n    if (validated !== this.state.validated){\n      this.setState({\n        validated\n      });\n    }\n  }\n\n  getTransactionParams(amount){\n    const params = {\n      value:null,\n      methodName:'deposit',\n      methodParams:[amount]\n    };\n    return params;\n  }\n\n  claimCallback(tx){\n    // console.log('claimCallback',tx);\n    if (tx.status === 'success'){\n      this.loadContracts();\n\n      const claimedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.address.toLowerCase() ) : null;\n      if (claimedTokensLog){\n        const claimedTokens = this.functionsUtil.fixTokenDecimals(parseInt(claimedTokensLog.data,16),this.state.tokenConfig.decimals);\n        this.setState({\n          claimedTokens\n        });\n      }\n    }\n  }\n\n  depositCallback(tx,amount,params){\n    // console.log('depositCallback',tx,amount,params);\n    if (tx.status === 'success'){\n      this.loadContracts();\n    }\n  }\n\n  getPatternByFieldType(type,returnString=false){\n    let fieldPattern = null;\n    switch (type){\n      case 'address':\n        fieldPattern = '^0x[a-fA-F0-9]{40}$';\n      break;\n      case 'address[]':\n        fieldPattern = '^((0x[a-fA-F0-9]{40})[,]?)+$';\n      break;\n      case 'string':\n        fieldPattern = '[\\\\w]+';\n      break;\n      case 'bool':\n        fieldPattern = '(0|1)';\n      break;\n      case 'uint256':\n      case 'uint8':\n        fieldPattern = '[\\\\d]+';\n      break;\n      default:\n        fieldPattern = null;\n      break;\n    }\n\n    if (!returnString && fieldPattern){\n      fieldPattern = new RegExp(fieldPattern);\n    }\n\n    return fieldPattern;\n  }\n\n  checkInputs(){\n\n    if (!this.state.actionInputs){\n      return false;\n    }\n\n    const inputs = this.state.inputs;\n    let actionValid = Object.values(this.state.actionInputs).length === inputs.length;\n\n    if (actionValid){\n      Object.values(this.state.actionInputs).forEach( (inputValue,inputIndex) => {\n        const inputInfo = inputs[inputIndex];\n        const fieldPattern = this.getPatternByFieldType(inputInfo.type);\n        const inputValid = fieldPattern ? inputValue.match(fieldPattern) !== null : true;\n        actionValid = actionValid && inputValid;\n        // console.log('checkInputs',inputInfo.name,inputInfo.type,inputValue,inputValid,actionValid);\n      });\n    }\n\n    if (actionValid !== this.state.actionValid){\n      this.setState({\n        actionValid\n      });\n    }\n  }\n\n  valueChange(e,inputIndex){\n    let actionValue = e.target.value;\n    this.setState({\n      actionValue\n    });\n  }\n\n  inputChange(e,inputIndex){\n    let inputValue = e.target.value;\n\n    this.setState((prevState) => ({\n      actionInputs:{\n        ...prevState.actionInputs,\n        [inputIndex]:inputValue\n      }\n    }));\n  }\n\n  deleteAction(){\n    if (this.state.editAction !== null){\n      let actions = this.state.actions;\n      if (actions[this.state.editAction]){\n        delete actions[this.state.editAction];\n        actions = Object.values(actions);\n        const editAction = null;\n        const actionInputs = null;\n\n        this.setState({\n          actions,\n          editAction,\n          actionInputs\n        });\n      }\n    }\n  }\n\n  addAction(){\n\n    // Check inputs number\n    const inputs = Object\n                    .values(this.state.actionInputs).filter( v => v.length>0 )\n                    .map( (inputValue,inputIndex) => {\n                      const inputInfo = this.state.inputs[inputIndex];\n                      switch (inputInfo.type){\n                        case 'address[]':\n                          inputValue = inputValue.split(',');\n                        break;\n                        case 'uint256[]':\n                          inputValue = inputValue.split(',').map( n => this.functionsUtil.toBN(n) );\n                        break;\n                        case 'uint256':\n                          inputValue = this.functionsUtil.toBN(inputValue);\n                        break;\n                        default:\n                          if (inputInfo.type.substr(-2) === '[]'){\n                            inputValue = inputValue.split(',');\n                          }\n                        break;\n                      }\n\n                      return inputValue;\n                    });\n\n    if (inputs.length<this.state.inputs.length){\n      return false;\n    }\n\n    const action = {\n      txError:null,\n      contractAddress:null,\n      inputs:this.state.actionInputs,\n    };\n\n    const newAction = false;\n    const actions = Object.values(this.state.actions);\n\n    if (this.state.editAction === null){\n      actions.push(action);\n    } else {\n      actions[this.state.editAction] = action;\n    }\n\n    const editAction = null;\n    const actionInputs = null;\n\n    this.setState({\n      actions,\n      newAction,\n      editAction,\n      actionInputs\n    });\n  }\n\n  setEditAction(editAction){\n\n    if (!this.state.actions[editAction]){\n      return false;\n    }\n\n    if (editAction === this.state.editAction){\n      return false;\n    }\n\n    const action = this.state.actions[editAction];\n\n    const newAction = false;\n    const actionInputs = action.inputs;\n\n    this.setState({\n      newAction,\n      editAction,\n      actionInputs\n    });\n  }\n\n  setViewAction(viewAction){\n\n    if (viewAction !== this.state.viewAction){\n      const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n      const deployedContract = this.state.deployedContracts[viewAction];\n      const contractInfo = {\n        abi:vesterImplementation.abi,\n        name:deployedContract.contractName,\n        address:deployedContract.contractAddress\n      };\n      this.setState({\n        viewAction,\n        contractInfo,\n        claimedTokens:null\n      });\n    }\n  }\n\n  setNewAction(newAction){\n    if (newAction === this.state.newAction){\n      return false;\n    }\n\n    const editAction = null;\n\n    this.setState({\n      newAction,\n      editAction,\n    });\n  }\n\n  async handleSubmit(e){\n    e.preventDefault();\n\n    const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n    const idleAddress = this.functionsUtil.getGlobalConfig(['govTokens','IDLE','address']);\n\n    const callback = (tx,error,actionIndex) => {\n      const txSucceeded = tx.status === 'success';\n      const actions = Object.values(this.state.actions);\n      const isLastAction = parseInt(actionIndex)===parseInt(this.state.actions.length)-1;\n      const contractDeployed = txSucceeded && isLastAction;\n      // console.log('callback_1 -',actionIndex,txSucceeded,contractDeployed,tx);\n      if (txSucceeded){\n        const clonedVesterAddress = tx.txReceipt.events && tx.txReceipt.events.ProxyCreated ? tx.txReceipt.events.ProxyCreated.returnValues[1] : `0x${tx.txReceipt.logs[0].data.substr(-40)}`;\n        actions[actionIndex].contractAddress = clonedVesterAddress;\n        // console.log('callback_2 -',actionIndex,actions[actionIndex].contractAddress);\n      } else {\n        actions[actionIndex].txError = true;\n      }\n\n      // console.log('callback_3 -',actionIndex,actions);\n\n      this.setState({\n        actions,\n        contractDeployed\n      },()=>{\n        if (isLastAction){\n          this.cancelTransaction();\n        }\n      });\n    };\n\n    const callbackReceipt = (tx,actionIndex) => {\n      const txHash = tx.transactionHash;\n      // console.log('callbackReceipt',actionIndex,tx);\n      const processing = Object.assign({},this.state.processing);\n      processing.txHash = txHash;\n      processing.actionIndex.push(actionIndex);\n      this.setState({\n        processing\n      });\n    };\n\n    this.state.actions.forEach((action,actionIndex) => {\n      const ownerAddress = action.inputs[0];\n      const recipientAddress = action.inputs[1];\n      const vestingPeriod = action.inputs[2];\n      const initSig = \"initialize(address,address,address,uint256)\";\n      const initData = this.props.web3.eth.abi.encodeParameters(\n        ['address','address','address','uint256'],\n        [ownerAddress,idleAddress,recipientAddress,vestingPeriod]\n      );\n      const methodParams = [vesterImplementation.address,initSig,initData];\n      this.functionsUtil.contractMethodSendWrapper('ProxyFactory', 'createAndCall', methodParams, (tx,error) => callback(tx,error,actionIndex), (tx) => callbackReceipt(tx,actionIndex) );\n    });\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n\n    return false;\n  }\n\n  render() {\n\n    const depositContracts = this.props.account ? this.state.deployedContracts.filter( c => c.owner.toLowerCase() === this.props.account.toLowerCase() ) : [];\n    const claimContracts = this.props.account ? this.state.deployedContracts.filter( c => c.recipient.toLowerCase() === this.props.account.toLowerCase() ) : [];\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.42]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Flex\n            width={1}\n            flexDirection={'column'}\n          >\n            <Text\n              mb={2}\n            >\n              Choose the action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'space-between'}\n            >\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Deploy'}\n                icon={'CloudUpload'}\n                iconColor={'deposit'}\n                iconBgColor={'#ced6ff'}\n                isActive={ this.state.action === 'deploy' }\n                handleClick={ e => this.setAction('deploy') }\n              />\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Deposit'}\n                iconColor={'deposit'}\n                icon={'ArrowDownward'}\n                iconBgColor={'#ced6ff'}\n                isActive={ this.state.action === 'deposit' }\n                handleClick={ e => this.setAction('deposit') }\n              />\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Claim'}\n                iconColor={'redeem'}\n                icon={'ArrowUpward'}\n                iconBgColor={'#ceeff6'}\n                isActive={ this.state.action === 'claim' }\n                handleClick={ e => this.setAction('claim') }\n              />\n            </Flex>\n          </Flex>\n          <Flex\n            pb={2}\n            width={1}\n            my={[2,3]}\n            borderColor={'divider'}\n            borderBottom={'1px solid transparent'}\n          >\n            <Heading.h4\n              fontSize={[2,3]}\n              fontWeight={[2,3]}\n              style={{\n                textTransform:'capitalize'\n              }}\n            >\n              {this.state.action}\n            </Heading.h4>\n          </Flex>\n          <Flex\n            flexDirection={'column'}\n          >\n            {\n              this.state.action === 'deploy' ? (\n                <Form\n                  width={1}\n                  validated={this.state.validated}\n                  onSubmit={this.handleSubmit.bind(this)}\n                >\n                  {\n                    Object.values(this.state.actions).map( (action,actionIndex) => {\n                      return (\n                        <DashboardCard\n                          cardProps={{\n                            py:2,\n                            px:3,\n                            mb:3,\n                            width:1\n                          }}\n                          titleParentProps={{\n                            ml:0,\n                            my:1,\n                            justifyContent:'center'\n                          }}\n                          titleProps={{\n                            fontSize:2,\n                            fontWeight:3\n                          }}\n                          isInteractive={true}\n                          key={`action_${actionIndex}`}\n                          title={ this.state.editAction === actionIndex ? 'Edit Contract' : null }\n                          handleClick={ e => /*action.contractAddress ? this.functionsUtil.openWindow(this.functionsUtil.getEtherscanAddressUrl(action.contractAddress)) : */this.setEditAction(actionIndex) }\n                        >\n                          {\n                            this.state.editAction === actionIndex ? (\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                {\n                                  this.state.inputs.map( (input,inputIndex) => {\n                                    const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                    const fieldPattern = this.getPatternByFieldType(input.type,true);\n                                    return (\n                                      <Field\n                                        style={{\n                                          width:'100%',\n                                          display:'flex',\n                                          alignItems:'stretch',\n                                          flexDirection:'column'\n                                        }}\n                                        key={`input_${inputIndex}`}\n                                        label={`${input.name} (${input.type})`}\n                                      >\n                                        <Input\n                                          required\n                                          width={1}\n                                          type={fieldType}\n                                          pattern={fieldPattern}\n                                          borderColor={'cardBorder'}\n                                          backgroundColor={'cardBg'}\n                                          placeholder={`${input.name} (${input.type})`}\n                                          onChange={ e => this.inputChange(e,inputIndex) }\n                                          value={this.state.actionInputs && this.state.actionInputs[inputIndex] ? this.state.actionInputs[inputIndex] : ''}\n                                        />\n                                      </Field>\n                                    )\n                                  })\n                                }\n                                <Flex\n                                  mb={2}\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  {\n                                    action.contractAddress ? (\n                                      <ExtLink\n                                        fontSize={1}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                        hoverColor={this.props.theme.colors.transactions.status.completed}\n                                        href={this.functionsUtil.getEtherscanAddressUrl(action.contractAddress)}\n                                      >\n                                        Deployed at {action.contractAddress}\n                                      </ExtLink>\n                                    ) : !this.state.processing.loading && (\n                                      <Flex\n                                        width={1}\n                                        alignItems={'center'}\n                                        flexDirection={'column'}\n                                        justifyContent={'center'}\n                                      >\n                                        <RoundButton\n                                          buttonProps={{\n                                            px:[0,4],\n                                            type:'button',\n                                            width:[1,'auto'],\n                                            disabled:!this.state.actionValid\n                                          }}\n                                          handleClick={this.addAction.bind(this)}\n                                        >\n                                          Save Contract\n                                        </RoundButton>\n                                        <Link\n                                          mt={2}\n                                          color={'red'}\n                                          hoverColor={'red'}\n                                          onClick={this.deleteAction.bind(this)}\n                                        >\n                                          Delete Contract\n                                        </Link>\n                                      </Flex>\n                                    )\n                                  }\n                                </Flex>\n                              </Flex>\n                            ) : (\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'space-between'}\n                              >\n                                <Text>\n                                  {this.functionsUtil.shortenHash(action.inputs[0])} - {this.functionsUtil.shortenHash(action.inputs[1])} - {action.inputs[2]} { action.contractAddress ? '- DEPLOYED' : '' }\n                                </Text>\n                                { \n                                  action.contractAddress ? (\n                                    <Flex\n                                      p={'3px'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                    >\n                                      <Icon\n                                        name={'Done'}\n                                        align={'center'}\n                                        size={this.props.isMobile ? '1.2em' : '1.8em'}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      />\n                                    </Flex>\n                                  ) : this.state.processing.loading && this.state.processing.actionIndex && this.state.processing.actionIndex.includes(parseInt(actionIndex)) ? (\n                                    <Loader size=\"28px\" />\n                                  ) : action.txError ? (\n                                    <Flex\n                                      p={'3px'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                    >\n                                      <Icon\n                                        color={'red'}\n                                        name={'Error'}\n                                        align={'center'}\n                                        size={ this.props.isMobile ? '1.2em' : '1.8em' }\n                                      />\n                                    </Flex>\n                                  ) : (\n                                    <Flex\n                                      p={['4px','7px']}\n                                      borderRadius={'50%'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                      backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                                    >\n                                      <Icon\n                                        name={'Edit'}\n                                        align={'center'}\n                                        color={'redeem'}\n                                        size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                      />\n                                    </Flex>\n                                  )\n                                }\n                              </Flex>\n                            )\n                          }\n                        </DashboardCard>\n                      );\n                    })\n                  }\n                  {\n                    (!this.state.contractDeployed && !this.state.processing.loading && (!this.state.actions || Object.values(this.state.actions).length<this.state.maxContracts)) && (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        handleClick={ e => this.setNewAction(true) }\n                        title={ this.state.newAction ? 'Add Contract' : null }\n                      >\n                        {\n                          this.state.newAction ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  const fieldPattern = this.getPatternByFieldType(input.type,true);\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        width={1}\n                                        type={fieldType}\n                                        pattern={fieldPattern}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        placeholder={`${input.name} (${input.type})`}\n                                        onChange={ e => this.inputChange(e,inputIndex) }\n                                        value={this.state.actionInputs && this.state.actionInputs[inputIndex] ? this.state.actionInputs[inputIndex] : ''}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                              >\n                                <RoundButton\n                                  buttonProps={{\n                                    px:[0,4],\n                                    type:'button',\n                                    width:[1,'auto'],\n                                    disabled:!this.state.actionValid\n                                  }}\n                                  handleClick={this.addAction.bind(this)}\n                                >\n                                  Add Contract\n                                </RoundButton>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                Add Contract\n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'Add'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    )\n                  }\n                  <Flex\n                    mb={3}\n                    width={1}\n                    alignItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    {\n                      this.state.contractDeployed ? (\n                        <DashboardCard\n                          cardProps={{\n                            py:3,\n                            px:4,\n                            width:[1,'100%']\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Icon\n                              name={'DoneAll'}\n                              align={'center'}\n                              size={ this.props.isMobile ? '1.4em' : '2.2em' }\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={1}\n                              fontWeight={3}\n                              fontSize={[2,3]}\n                              color={'dark-gray'}\n                              textAlign={'center'}\n                            >\n                              B2B Vesting contracts have been deployed\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      ) : this.state.processing && this.state.processing.loading ? (\n                        <TxProgressBar\n                          {...this.props}\n                          hash={this.state.processing.txHash}\n                          waitText={`Deployment estimated in`}\n                          endMessage={`Finalizing deployment request...`}\n                          cancelTransaction={this.cancelTransaction.bind(this)}\n                        />\n                      ) : (\n                        <RoundButton\n                          buttonProps={{\n                            type:'submit',\n                            width:[1,'15em'],\n                            disabled:!this.state.validated\n                          }}\n                        >\n                          Deploy Contracts\n                        </RoundButton>\n                      )\n                    }\n                  </Flex>\n                </Form>\n              ) : this.state.action === 'deposit' ?\n                depositContracts.length>0 ?\n                  depositContracts.map( (contractInfo,actionIndex) => {\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        key={`action_${actionIndex}`}\n                        handleClick={ e => this.setViewAction(actionIndex) }\n                        title={ this.state.viewAction === actionIndex ? 'View Contract' : null }\n                      >\n                        {\n                          this.state.viewAction === actionIndex ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Contract Address`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.contractAddress}\n                                />\n                              </Field>\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        readOnly\n                                        width={1}\n                                        type={fieldType}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        value={contractInfo[input.name]}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Total Deposited`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.totalDeposited.toFixed(6)}\n                                />\n                              </Field>\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Available Balance`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.availableBalance.toFixed(6)}\n                                />\n                              </Field>\n                              <Flex\n                                mb={2}\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                                borderTop={'1px solid transparent'}\n                              >\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <SendTxWithBalance\n                                    {...this.props}\n                                    action={this.state.action}\n                                    tokenConfig={this.state.tokenConfig}\n                                    tokenBalance={this.state.tokenBalance}\n                                    contractInfo={this.state.contractInfo}\n                                    callback={this.depositCallback.bind(this)}\n                                    getTransactionParams={this.getTransactionParams.bind(this)}\n                                    approveDescription={'You need to approve the Smart-Contract first'}\n                                  >\n                                    <DashboardCard\n                                      cardProps={{\n                                        p:3,\n                                      }}\n                                    >\n                                      <Flex\n                                        alignItems={'center'}\n                                        flexDirection={'column'}\n                                      >\n                                        <Icon\n                                          size={'2.3em'}\n                                          name={'MoneyOff'}\n                                          color={'cellText'}\n                                        />\n                                        <Text\n                                          mt={2}\n                                          fontSize={2}\n                                          color={'cellText'}\n                                          textAlign={'center'}\n                                        >\n                                          You don't have any $IDLE in your wallet.\n                                        </Text>\n                                      </Flex>\n                                    </DashboardCard>\n                                  </SendTxWithBalance>\n                                </Flex>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                {this.functionsUtil.shortenHash(contractInfo.owner)} - {this.functionsUtil.shortenHash(contractInfo.recipient)} - {contractInfo.vestingPeriod} \n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'ZoomIn'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    );\n                  })\n                : (\n                  <Text\n                    textAlign={'center'}\n                  >\n                    You can't deposit in any contract yet.\n                  </Text>\n                )\n              : this.state.action === 'claim' &&\n                claimContracts.length>0 ?\n                  claimContracts.map( (contractInfo,actionIndex) => {\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        key={`action_${actionIndex}`}\n                        handleClick={ e => this.setViewAction(actionIndex) }\n                        title={ this.state.viewAction === actionIndex ? 'View Contract' : null }\n                      >\n                        {\n                          this.state.viewAction === actionIndex ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Contract Address`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.contractAddress}\n                                />\n                              </Field>\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        readOnly\n                                        width={1}\n                                        type={fieldType}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        value={contractInfo[input.name]}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Total Deposited`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.totalDeposited.toFixed(6)}\n                                />\n                              </Field>\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Available Balance`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.availableBalance.toFixed(6)}\n                                />\n                              </Field>\n                              <Flex\n                                mb={2}\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                                borderTop={'1px solid transparent'}\n                              >\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  {\n                                    this.state.claimedTokens && (\n                                      <Text\n                                        mb={2}\n                                        fontSize={2}\n                                        fontWeight={3}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >\n                                        You have successfully claimed {this.state.claimedTokens.toFixed(4)} {this.state.tokenConfig.token}\n                                      </Text>\n                                    )\n                                  }\n                                  {\n                                    contractInfo.availableBalance && contractInfo.availableBalance.gt(0.00000001) ? (\n                                      <ExecuteTransaction\n                                        params={[]}\n                                        {...this.props}\n                                        Component={Button}\n                                        componentProps={{\n                                          size:'medium',\n                                          value:'Claim',\n                                          mainColor:'redeem',\n                                        }}\n                                        methodName={'claim'}\n                                        action={this.state.action}\n                                        callback={this.claimCallback.bind(this)}\n                                        contractName={contractInfo.contractName}\n                                      />\n                                    ) : (\n                                      <Text\n                                        mb={2}\n                                        fontSize={2}\n                                        fontWeight={3}\n                                        color={'cellText'}\n                                      >\n                                        No balance available.\n                                      </Text>\n                                    )\n                                  }\n                                </Flex>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                {this.functionsUtil.shortenHash(contractInfo.owner)} - {this.functionsUtil.shortenHash(contractInfo.recipient)} - {contractInfo.vestingPeriod} \n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'ZoomIn'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    );\n                  })\n                : (\n                  <Text\n                    textAlign={'center'}\n                  >\n                    You can't claim from any contract yet.\n                  </Text>\n                )\n            }\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default DeployB2BVesting;\n","import Staking from \"../Staking/Staking\";\nimport DAI from '../abis/tokens/DAI.json';\nimport IDLE from '../contracts/IDLE.json';\nimport Tranches from '../Tranches/Tranches';\nimport USDC from '../abis/tokens/USDC.json';\nimport WETH from '../abis/tokens/WETH.json';\nimport COMP from '../abis/compound/COMP.json';\nimport aToken from '../abis/aave/AToken.json';\nimport ERC20 from '../abis/tokens/ERC20.json';\nimport TokenSwap from '../TokenSwap/TokenSwap';\nimport yDAIv3 from '../abis/iearn/yDAIv3.json';\nimport LpStaking from '../LpStaking/LpStaking';\nimport stkIDLE from '../contracts/stkIDLE.json';\nimport yUSDCv3 from '../abis/iearn/yUSDCv3.json';\nimport yUSDTv3 from '../abis/iearn/yUSDTv3.json';\nimport ySUSDv3 from '../abis/iearn/ySUSDv3.json';\nimport yTUSDv3 from '../abis/iearn/yTUSDv3.json';\nimport Timelock from '../contracts/Timelock.json';\nimport CurveZap from '../abis/curve/CurveZap.json';\nimport CovToken from '../abis/cover/CovToken.json';\nimport B2BVester from '../contracts/B2BVester.json';\nimport IdleStaking from '../IdleStaking/IdleStaking';\n// import CurveSwap from '../abis/curve/CurveSwap.json';\nimport CurvePool from \"../abis/curve/CurvePool.json\";\nimport NexusMutual from \"../NexusMutual/NexusMutual\";\nimport CoverMint from \"../abis/cover/CoverMint.json\";\nimport LockedIDLE from \"../contracts/LockedIDLE.json\";\nimport LpStakingAbi from \"../contracts/LpStaking.json\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\nimport TokenWrapper from \"../TokenWrapper/TokenWrapper\";\nimport PriceOracle from \"../contracts/PriceOracle.json\";\nimport FeeTreasury from \"../contracts/FeeTreasury.json\";\nimport IdleTokenV2 from \"../contracts/IdleTokenV2.json\";\nimport StrategyPage from \"../StrategyPage/StrategyPage\";\nimport BuyModal from \"../utilities/components/BuyModal\";\nimport IdleTokenV3 from \"../contracts/IdleTokenV3.json\";\nimport IdleTokenV4 from \"../contracts/IdleTokenV4.json\";\nimport BatchDeposit from \"../BatchDeposit/BatchDeposit\";\nimport ChildERC20 from '../abis/polygon/ChildERC20.json';\nimport EarlyRewards from '../contracts/EarlyRewards.json';\nimport PolygonBridge from '../PolygonBridge/PolygonBridge';\nimport CoverProtocol from '../CoverProtocol/CoverProtocol';\nimport CurveDeposit from '../abis/curve/CurveDeposit.json';\nimport VesterFactory from '../contracts/VesterFactory.json';\nimport GovernorAlpha from '../contracts/GovernorAlpha.json';\nimport EcosystemFund from '../contracts/EcosystemFund.json';\nimport Comptroller from '../abis/compound/Comptroller.json';\nimport erc20Forwarder from '../contracts/erc20Forwarder.json';\nimport BalancerPool from '../abis/balancer/BalancerPool.json';\nimport IdleController from '../contracts/IdleController.json';\nimport TokenMigration from '../TokenMigration/TokenMigration';\nimport BatchMigration from '../BatchMigration/BatchMigration';\nimport IdleBatchedMint from '../contracts/IdleBatchedMint.json';\nimport { RampInstantSDK } from '@ramp-network/ramp-instant-sdk';\nimport IdleProxyMinter from '../contracts/IdleProxyMinter.json';\nimport ERC20Predicate from '../abis/polygon/ERC20Predicate.json';\nimport EtherPredicate from '../abis/polygon/EtherPredicate.json';\nimport DepositManager from '../abis/polygon/DepositManager.json';\nimport IdleRebalancerV3 from '../contracts/IdleRebalancerV3.json';\nimport LiquidityGaugeV2 from '../abis/curve/LiquidityGaugeV2.json';\nimport DeployB2BVesting from '../DeployB2BVesting/DeployB2BVesting';\nimport RootChainManager from '../abis/polygon/RootChainManager.json';\nimport SushiV2Router02 from \"../abis/sushiswap/SushiV2Router02.json\";\nimport IdleBatchConverter from \"../contracts/IdleBatchConverter.json\";\nimport UniswapV2Router02 from \"../abis/uniswap/UniswapV2Router02.json\";\nimport ChildChainManager from '../abis/polygon/ChildChainManager.json';\nimport IdleDepositForwarder from \"../contracts/IdleDepositForwarder.json\";\nimport ProtocolDataProvider from '../abis/aave/ProtocolDataProvider.json';\nimport SushiLiquidityPool from \"../abis/sushiswap/SushiLiquidityPool.json\";\nimport NexusMutualIncidents from \"../abis/nexus/NexusMutualIncidents.json\";\nimport StakingFeeDistributor from \"../contracts/StakingFeeDistributor.json\";\nimport NexusMutualDistributor from \"../abis/nexus/NexusMutualDistributor.json\";\nimport BalancerExchangeProxy from \"../abis/balancer/BalancerExchangeProxy.json\";\nimport IdleConverterPersonalSignV4 from \"../contracts/IdleConverterPersonalSignV4.json\";\nimport MinimalInitializableProxyFactory from \"../contracts/MinimalInitializableProxyFactory.json\";\n\nconst env = process.env;\n\nconst globalConfigs = {\n  appName: \"Idle\",\n  version: \"v6.1\",\n  baseToken: \"ETH\",\n  baseURL: \"https://idle.finance\",\n  forumURL: \"https://gov.idle.finance\",\n  telegramURL: \"https://t.me/idlefinance\",\n  discordURL: \"https://discord.gg/mpySAJp\",\n  twitterURL: \"https://twitter.com/idlefinance\",\n  theme: {\n    darkModeEnabled: true\n  },\n  environments:{\n    live:{\n      requiredNetwork:1,\n      url:\"https://idle.finance\"\n    },\n    beta:{\n      requiredNetwork:1,\n      url:\"https://beta.idle.finance\"\n    },\n    polygon:{\n      requiredNetwork:137,\n      url:\"https://polygon.idle.finance\"\n    }\n  },\n  betaURL: \"https://beta.idle.finance\",\n  countries: {\n    USA: \"United States of America\",\n    GBR: \"United Kingdom\",\n    AUS: \"Australia\",\n    BRA: \"Brazil\",\n    CHN: \"China\",\n    CAN: \"Canada\",\n    EUR: \"Europe\",\n    HKG: \"Hong Kong\",\n    IND: \"India\",\n    MEX: \"Mexico\",\n    RUS: \"Russia\",\n    ZAF: \"South Africa\",\n    KOR: \"South Korea\"\n  },\n  logs: {\n    // Enable logs levels\n    errorsEnabled: false,\n    messagesEnabled: false\n  },\n  connectors: {\n    // Connectors props\n    metamask: {\n      enabled: true,\n      subcaption: \"Browser extension\"\n    },\n    opera: {\n      enabled: true,\n      subcaption: \"Opera injected wallet\"\n    },\n    dapper: {\n      enabled: true,\n      icon: \"dapper.png\",\n      subcaption: \"Browser extension\"\n    },\n    coinbase: {\n      enabled: true,\n      icon: \"coinbase.png\",\n      subcaption: \"Connect with Coinbase wallet\"\n    },\n    trustwallet: {\n      enabled: true,\n      subcaption: \"Connect with Trust Wallet\"\n    },\n    walletconnect: {\n      enabled: true,\n      iconModal: \"walletconnect.png\",\n      subcaption: \"Connect with QR code\"\n    },\n    walletlink: {\n      enabled: true,\n      icon: \"coinbase.png\",\n      name: \"Coinbase Wallet\",\n      subcaption: \"Connect with QR code\"\n    },\n    gnosis: {\n      enabled: true,\n      // icon:'coinbase.png',\n      name: \"Gnosis Safe App\",\n      subcaption: \"Connect with Gnosis Safe App\"\n    },\n    fortmatic: {\n      enabled: true,\n      subcaption: \"Login with phone-number\"\n    },\n    portis: {\n      enabled: true,\n      subcaption: \"Login with e-mail\"\n    },\n    authereum: {\n      enabled: true,\n      subcaption: \"Cross-device wallet\"\n    },\n    torus: {\n      enabled: true,\n      icon: \"torus.png\",\n      subcaption: \"One-Click login for Web 3.0\"\n    },\n    trezor: {\n      enabled: true,\n      subcaption: \"Hardware wallet\"\n    },\n    ledger: {\n      enabled: true,\n      subcaption: \"Hardware wallet\"\n    },\n    ledgerlive: {\n      enabled: true,\n      subcaption: \"Ledger Live Browser\"\n    },\n    custom: {\n      enabled: true,\n      subcaption: \"Custom address\"\n    }\n  },\n  newsletterSubscription: {\n    endpoint: \"https://dev.lapisgroup.it/idle/newsletter.php\"\n  },\n  messages: {\n    scoreShort: \"Protocol Risk Score\",\n    apyShort: \"Annual Percentage Yield\",\n    totalProfitPerc: \"Total percentage profit generated on your balance\",\n    tokenPrice: \"The token price is calculated using Uniswap spot prices.\",\n    cheapRedeem: \"Amount of unlent funds available for low gas fees redeem\",\n    curveBonusSlippage: \"Slippage or bonus depending on if the coin is low or high in the Curve Pool\",\n    distributionSpeed: \"The distribution indicates the amount of tokens distributed for the entire pool.\",\n    directMint: \"Pay an additional gas fee to rebalance the pool and help all users gain an additional APR\",\n    performanceFee: \"This fee is charged on positive returns generated by Idle including accrued gov tokens except IDLE\",\n    userDistributionSpeed: \"The distribution indicates the amount of tokens distributed for your account based on your current pool share.\",\n    govTokenApr: \"Governance Token APR is calculated using the spot price from Uniswap and the current distribution speed for the specific pool.\",\n    govTokenRedeemableBalance: \"The redeemable balance is re-calculated on every interaction with the smart-contract so, the shown balance may be lower than the real one.\",\n    riskScoreShort: \"It's a single, consistently, comparable value for measuring protocol risk, based on factors including smart contract risk, collateralization and liquidity.\",\n    redeemSkipGov: \"This feature allows you to save some gas by skipping the redeem of all or some of your accrued governance tokens, the skipped governance tokens will be given away to the entire pool\",\n    batchDepositExecutionSchedule: \"Batches are executed twice a week, usually on Sunday and Wednesday, and only when the pool size reaches at least 20,000$. The time of each execution will vary depending on the gas price of the Ethereum network.\",\n    riskAdjustedDisabledMessageDeposit: `The Risk Adjusted strategy is no longer available.<br />Please consider to deposit in the <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://beta.idle.finance/#/dashboard/tranches/senior/idle\" class=\"link\">Senior Tranche</a> to have a similar risk profile.`,\n    apyLong: \"APY is based on (I) the current yield advertised by the underlying protocol, (II) the current distribution rate of governance tokens provided by underlying lending protocols (III) the current estimated price of governance tokens from Uniswap spot prices. (IV) IDLE token distribution is referred to the entire pool.\",\n    riskScore: `It's a single, consistently, comparable value for measuring protocol risk, based on factors including smart contract risk, collateralization and liquidity.<br /><br />The model outputs a 0-10 score, where <strong>0 is the most risky and 10 is the most safe.</strong> Visit <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://defiscore.io/overview\">https://defiscore.io/overview</a> for further information.`,\n    curveInstructions: `<strong>Depositing into the pool:</strong><br />By depositing your funds into the Curve Pool you may incur in slippage or bonus depending on if the coin is low or high in the pool.<br /><br /><strong>Withdrawing share from the pool:</strong><br />When you redeem your tokens previously deposited in the Curve Pool you get back an uneven amounts of tokens, that can give slippage or bonus depending on if the coin is low or high in the pool.`,\n    yieldFarming: 'Strategies in Idle now will be able to support and distribute a vast range of yield opportunities across multiple protocols. Users will be able to receive their equivalent share of governance token that the protocol is receiving while allocating liquidity to yield farming opportunities. <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://idlefinance.medium.com/idle-yield-farming-upgrade-18e4bc483c8f\" class=\"link\">Read more here</a>.',\n    riskAdjustedDisabledMessageRedeem: `The Risk Adjusted strategy is no longer available, please redeem your funds from this strategy. You can deposit in the <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://beta.idle.finance/#/dashboard/tranches/senior/idle\" class=\"link\">Senior Tranche</a> to maintain a similar risk profile and receive an incentive. <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://gov.idle.finance/t/risk-adjusted-removal-for-tranches-migration/673\" class=\"link\">Read more here</a>.`,\n  },\n  analytics: {\n    google: {\n      events: {\n        enabled: true, // Enable Google Analytics events\n        debugEnabled: false, // Enable sending for test environments\n        addPostfixForTestnet: true // Append testnet to eventCategory\n      },\n      pageView: {\n        enabled: true\n      }\n    }\n  },\n  modals: {\n    // Enable modals\n    first_deposit_referral: false, // Referral share modal\n    first_deposit_share: true, // First deposit share modal\n    migrate: {\n      enabled: true,\n      availableNetworks: [1]\n    },\n    welcome: {\n      // Welcome modal\n      enabled: true,\n      frequency: 604800 // One week\n    }\n  },\n  dashboard: {\n    baseRoute: \"/dashboard\",\n    theme: {\n      mode: \"light\",\n      darkModeEnabled: true\n    }\n  },\n  governance:{\n    test:false,\n    enabled:true,\n    startBlock:11333729,\n    availableNetworks:[1],\n    baseRoute:'/governance',\n    props:{\n      tokenName:'IDLE',\n      availableContracts:{\n        IDLE,\n        FeeTreasury,\n        PriceOracle,\n        GovernorAlpha,\n        EcosystemFund,\n        IdleController\n      }\n    },\n    proposals: {\n      12: {\n        description: 'Details in the gov forum post: <a class=\"link\" href=\"https://gov.idle.finance/t/iip-12-enable-idle-lm-on-idlerai-and-fund-leagues-mandate/620\">https://gov.idle.finance/t/iip-12-enable-idle-lm-on-idlerai-and-fund-leagues-mandate/620</a>'\n      },\n      7: {\n        description: `Upgrade of IdleTokenGovernance contract to include the following changes:<br />\n        <ul>\n          <li>support for EIP 3165 flashLoans (fee is set to 0.08% of the flash loaned amount redistributed to LP)</li>\n          <li>support for stkAAVE distribution</li>\n          <li>support for new cWBCT distribution</li>\n          <li>other minor updates for gas and redeems</li>\n        </ul>\n        See more in the gov forum post: <a class=\"link\" href=\"https://gov.idle.finance/t/iip-7-idletoken-upgrade-stkaave-distribution/466\">https://gov.idle.finance/t/iip-7-idletoken-upgrade-stkaave-distribution/466</a>`\n      }\n    },\n    contracts: {\n      delegates: \"IDLE\",\n      governance: \"GovernorAlpha\"\n    }\n  },\n  curve: {\n    enabled: false,\n    params: {\n      n_coins: 3,\n      label: \"Curve\",\n      route: \"/dashboard/curve\",\n      image: \"images/protocols/curve.svg\",\n      imageInactive: \"images/protocols/curve-off.svg\"\n    },\n    rates: {\n      path: [\"apy\", \"day\", \"idle\"],\n      endpoint: \"https://www.curve.fi/raw-stats/apys.json\"\n    },\n\n    poolContract: {\n      decimals: 18,\n      abi: CurvePool,\n      name: \"idleDAI+idleUSDC+idleUSDT\",\n      token: \"idleDAI+idleUSDC+idleUSDT\",\n      address: \"0x09f4b84a87fc81fc84220fd7287b613b8a9d4c05\"\n    },\n    depositContract: {\n      abi: CurveDeposit,\n      name: \"idleCurveDeposit\",\n      address: \"0x83f252f036761a1e3d10daca8e16d7b21e3744d7\"\n    },\n    gaugeContract: {\n      abi: LiquidityGaugeV2,\n      name: \"LiquidityGaugeV2\",\n      address: \"0xd69ac8d9D25e99446171B5D0B3E4234dAd294890\"\n    },\n    zapContract: {\n      abi: CurveZap,\n      name: \"idleCurveZap\",\n      address: \"0x456974df1042ba7a46fd49512a8778ac3b840a21\"\n    },\n    migrationContract: {\n      abi: CurveDeposit,\n      name: \"idleCurveDeposit\",\n      address: \"0x83f252f036761a1e3d10daca8e16d7b21e3744d7\",\n      functions: [\n        {\n          label: \"Deposit\",\n          name: \"add_liquidity\"\n        }\n      ]\n    },\n    availableTokens: {\n      idleDAIYield: {\n        decimals: 18,\n        enabled: true,\n        baseToken: \"DAI\",\n        token: \"idleDAIYield\",\n        address: \"0x3fe7940616e5bc47b0775a0dccf6237893353bb4\",\n        migrationParams: {\n          n_coins: 3,\n          coinIndex: 0\n        }\n      },\n      idleUSDCYield: {\n        decimals: 18,\n        enabled: true,\n        baseToken: \"USDC\",\n        token: \"idleUSDCYield\",\n        address: \"0x5274891bEC421B39D23760c04A6755eCB444797C\",\n        migrationParams: {\n          n_coins: 3,\n          coinIndex: 1\n        }\n      },\n      idleUSDTYield: {\n        decimals: 18,\n        enabled: true,\n        baseToken: \"USDT\",\n        token: \"idleUSDTYield\",\n        address: \"0xF34842d05A1c888Ca02769A633DF37177415C2f8\",\n        migrationParams: {\n          n_coins: 3,\n          coinIndex: 2\n        }\n      }\n    }\n  },\n  permit: {\n    DAI: {\n      version: 1,\n      EIPVersion: null,\n      nonceMethod: \"nonces\",\n      name: \"Dai Stablecoin\",\n      type: [\n        { name: \"holder\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"expiry\", type: \"uint256\" },\n        { name: \"allowed\", type: \"bool\" }\n      ]\n    },\n    USDC: {\n      version: 2,\n      name: \"USD Coin\",\n      EIPVersion: 2612,\n      nonceMethod: \"nonces\",\n      type: [\n        { name: \"owner\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"value\", type: \"uint256\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"deadline\", type: \"uint256\" }\n      ]\n    },\n    SLP: {\n      version: 1,\n      EIPVersion: 2612,\n      nonceMethod: \"nonces\",\n      name: \"SushiSwap LP Token\",\n      type: [\n        { name: \"owner\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"value\", type: \"uint256\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"deadline\", type: \"uint256\" }\n      ]\n    }\n  },\n  govTokens:{\n    IDLE: {\n      abi: IDLE,\n      decimals: 18,\n      token: \"IDLE\",\n      enabled: true,\n      showAUM: false, // Include IDLE balance in AUM\n      showAPR: false, // Include IDLE Apr\n      protocol: \"idle\",\n      showPrice: false, // Show price in Yield Farming section\n      showBalance: false, // Include IDLE balance in Portfolio Donut\n      aprTooltipMode: false,\n      availableNetworks:[1,137],\n      distributionMode: \"block\",\n      distributionFrequency: \"day\", // Multiply distribution per block\n      color: \"hsl(162, 100%, 41%)\",\n      icon: \"images/tokens/IDLE.svg\",\n      addresses:{\n        1:\"0x875773784Af8135eA0ef43b5a374AaD105c5D39e\",\n        137:\"0xc25351811983818c9fe6d8c580531819c8ade90f\"\n      },\n      address: \"0x875773784Af8135eA0ef43b5a374AaD105c5D39e\", // MAIN\n      disabledTokens:{\n        1:[\"idleDAISafe\",\"idleUSDCSafe\",\"idleUSDTSafe\"],\n        137:[\"idleDAIYield\",\"idleUSDCYield\",\"idleWETHYield\"],\n      }\n    },\n    COMP: {\n      abi: COMP,\n      decimals: 18,\n      token: \"COMP\",\n      enabled: true,\n      showAUM: true, // Include IDLE balance in AUM\n      showAPR: true, // Include COMP Apr\n      showPrice: true,\n      showBalance: true, // Include COMP balance in Portfolio Donut\n      disabledTokens: [],\n      protocol: \"compound\",\n      aprTooltipMode: false,\n      availableNetworks:[1],\n      distributionMode: \"block\",\n      distributionFrequency: \"day\",\n      color: \"hsl(162, 100%, 41%)\",\n      address: \"0xc00e94cb662c3520282e6f5717214004a7f26888\" // MAIN\n      // address:'0x61460874a7196d6a22d1ee4922473664b3e95270' // KOVAN\n    },\n    stkAAVE:{\n      abi:aToken,\n      decimals:18,\n      showAUM:true, // Include stkAAVE balance in AUM\n      showAPR:true, // Include stkAAVE Apr\n      enabled:true,\n      showPrice:true,\n      token:'stkAAVE',\n      showBalance:true, // Include stkAAVE balance in Portfolio Donut\n      protocol:'aavev2',\n      aprTooltipMode:false,\n      availableNetworks:[1],\n      distributionMode:'second',\n      color:'hsl(314, 41%, 51%)',\n      distributionFrequency:'day',\n      address:'0x4da27a545c0c5b758a6ba100e3a049001de870f5', // MAIN\n      addressForPrice:'0x7Fc66500c84A76Ad7e9c93437bFc5Ac33E2DDaE9', // MAIN\n      disabledTokens:{\n        1:[\"idleTUSDYield\", \"idleSUSDYield\", \"idleFEIYield\"]\n      }\n    },\n    WMATIC:{\n      abi:ERC20,\n      decimals:18,\n      showAUM:true, // Include stkAAVE balance in AUM\n      showAPR:true, // Include stkAAVE Apr\n      enabled:true,\n      token:'WMATIC',\n      showPrice:true,\n      showBalance:true, // Include stkAAVE balance in Portfolio Donut\n      protocol:'aavev2',\n      disabledTokens:[],\n      aprTooltipMode:false,\n      distributionMode:'second',\n      color:'hsl(314, 41%, 51%)',\n      distributionFrequency:'day',\n      availableNetworks:[137,80001],\n      // address:'0x9c3C9283D3e44854697Cd22D3Faa240Cfb032889', // Mumbai\n      address:'0x0d500B1d8E8eF31E21C99d1Db9A6444d3ADf1270', // Polygon\n      addressForPrice:'0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0' // Mainnet\n    }\n  },\n  contracts:{\n    137:{\n      ProtocolDataProvider:{\n        abi:ProtocolDataProvider,\n        address:'0x7551b5D2763519d4e37e8B81929D336De671d46d'\n      },\n      ChildChainManager:{\n        abi:ChildChainManager,\n        // address:'0x2e5e27d50EFa501D90Ad3638ff8441a0C0C0d75e' // Mumbai\n        address:'0xA6FA4fB5f76172d178d61B04b0ecd319C5d1C0aa' // Matic\n      },\n      UniswapRouter:{\n        networkId:1,\n        abi:UniswapV2Router02,\n        address:'0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D'\n      },\n      SushiswapRouter:{\n        abi:SushiV2Router02,\n        address:'0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506'\n      },\n    },\n    1:{\n      DepositManager:{\n        abi:DepositManager,\n        address:'0x401f6c983ea34274ec46f84d70b31c151321188b'\n      },\n      RootChainManager:{\n        abi:RootChainManager,\n        // address:'0xBbD7cBFA79faee899Eaf900F13C9065bF03B1A74' // Goerli\n        address:'0xA0c68C638235ee32657e8f720a23ceC1bFc77C77' // Mainnet\n      },\n      ProxyFactory: {\n        abi: MinimalInitializableProxyFactory,\n        address: \"0x91baced76e3e327ba7850ef82a7a8251f6e43fb8\"\n      },\n      LockedIDLE:{\n        abi:LockedIDLE,\n        address:'0xF241a0151841AE2E6ea750D50C5794b5EDC31D99'\n      },\n      FeeTreasury:{\n        abi:FeeTreasury,\n        address:'0x69a62c24f16d4914a48919613e8ee330641bcb94' // MAIN\n      },\n      PriceOracle:{\n        abi:PriceOracle,\n        address:'0x972A64d108e250dF98dbeac8170678501f5EF181' // MAIN\n        // address:'0xCab5760688db837Bb453FE1DFBC5eDeE6fa8F0FF' // KOVAN\n      },\n      Timelock:{\n        abi:Timelock,\n        address:'0xD6dABBc2b275114a2366555d6C481EF08FDC2556' // MAIN\n        // address:'0xfD88D7E737a06Aa9c62B950C1cB5eE63DA379AFd' // KOVAN\n      },\n      EcosystemFund:{\n        abi:EcosystemFund,\n        address:'0xb0aA1f98523Ec15932dd5fAAC5d86e57115571C7' // MAIN\n        // address:'0x125d3D6A8e546BD13802c309429CBB4db5737d57' // KOVAN\n      },\n      VesterFactory:{\n        abi:VesterFactory,\n        address:'0xbF875f2C6e4Cc1688dfe4ECf79583193B6089972' // MAIN\n        // address:'0x9b52f91578c8AfA8e2DF07d4D7726bB6b73Ec1FE' // KOVAN\n      },\n      IdleController:{\n        abi:IdleController,\n        address:'0x275DA8e61ea8E02d51EDd8d0DC5c0E62b4CDB0BE' // MAIN\n        // address:'0x8Ad5F0644b17208c81bA5BDBe689c9bcc7143d87' // KOVAN\n      },\n      EarlyRewards:{\n          abi:EarlyRewards,\n          address:'0xa1F71ED24ABA6c8Da8ca8C046bBc9804625d88Fc' // MAIN\n          // address:'0x07A94A60B54c6b2Da19e23D6E9123180Bf92ED40' // KOVAN\n      },\n      GovernorAlpha:{\n        abi:GovernorAlpha,\n        address:'0x2256b25CFC8E35c3135664FD03E77595042fe31B' // MAIN\n        // address:'0x782cB1dbd0bD4df95c2497819be3984EeA5c2c25' // KOVAN\n      },\n      Comptroller:{\n        abi:Comptroller,\n        address:'0x3d9819210a31b4961b30ef54be2aed79b9c9cd3b', // Main\n        // address:'0x5eae89dc1c671724a672ff0630122ee834098657' // Kovan\n      },\n      SushiswapRouter:{\n        abi:SushiV2Router02,\n        address:'0xd9e1cE17f2641f24aE83637ab66a2cca9C378B9F'\n      },\n      UniswapRouter:{\n        abi:UniswapV2Router02,\n        address:'0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D'\n      },\n      BalancerExchangeProxy:{\n        abi:BalancerExchangeProxy,\n        address:'0x3E66B66Fd1d0b02fDa6C811Da9E0547970DB2f21'\n      }\n    }\n  },\n  tokens: {\n    DAI: {\n      zeroExInstant: {\n        orderSource: \"https://api.0x.org/sra/\",\n        assetData:\n          \"0xf47261b00000000000000000000000006b175474e89094c44da98b954eedeac495271d0f\",\n        affiliateInfo: {\n          feeRecipient: \"0x4215606a720477178AdFCd5A59775C63138711e8\",\n          feePercentage: 0.0025\n        }\n      }\n    },\n    USDC: {\n      zeroExInstant: {\n        orderSource: \"https://api.0x.org/sra/\",\n        assetData:\n          \"0xf47261b0000000000000000000000000a0b86991c6218b36c1d19d4a2e9eb0ce3606eb48\",\n        affiliateInfo: {\n          feeRecipient: \"0x4215606a720477178AdFCd5A59775C63138711e8\",\n          feePercentage: 0.0025\n        }\n      }\n    }\n  },\n  tranchflash: {\n    name: \"perpetual yield tranches\",\n    subtitle: \"Make yield your own.\",\n    desc:\"Choose the benefits of high-yield or low-risk, while enjoying the flexibility of Tranches. This comes with auto-compounding for accrued governance tokens and no locking period.\",\n    arrows: \"images/idlearrows.svg\",\n    juniorinfo:\n      \"<b>Junior Tranches</b><br>Higher risk, leveraged for variable rate rewards\",\n    seniorinfo:\n      \"<b>Senior Tranches</b><br>Lower risk, built-in coverage for variable rate rewards\",\n    helpcircle: \"images/help-circle.svg\",\n    questions: [\n      {\n        desc: \"How it Works?\",\n        msg:\"This product aggregates user deposits into underlying markets and allocates the accrued yield on the sum between two different risk profile subsets. You get to choose the strategy according to your risk tolerance. Users are able to deposit funds into either the Junior or Senior Tranches in exchange for a token indicating their claim on their principal and whatever yield is allocated for them. These aggregated holdings are then deposited into the specified originating lending market, in this current version Idle Best-Yield strategy.\"\n      },\n      {\n        desc: \"What happens in a case of a default?\",\n        msg:\"In case of hack, an emergency shutdown can be triggered (by both the guardian, which would be a multi-sig wallet, and the owner which will be the Idle governance) in order to pause both deposits and redeems.<br />The redistribution of remaining funds can happens selectively, by allowing only Senior tranche holders to withdraw first directly in the main contract, or through a separate contract for more complex cases and resolutions (managed by the Idle governance).\"\n      }\n    ]\n  },\n  tranches: {\n    AA: {\n      color: {\n        hex: \"#337de5\",\n        rgb: [51, 125, 229],\n        hsl: [\"215\", \"77%\", \"55%\"]\n      },\n      type: \"AA\",\n      route: \"senior\",\n      icon: \"Security\",\n      image: \"images/SeniorTranche.svg\",\n      bubble: \"images/SeniorBubble.svg\",\n      baseName: \"senior\",\n      name: \"Senior Tranche\",\n      features: [\n        \"Covered by Junior tranches funds\",\n        \"Minimized risk exposure\",\n        \"No locking period or epochs\",\n        \"Auto-Reinvest accrued tokens\",\n        \"Stake to receive $IDLE tokens\"\n      ],\n      description: {\n        withdraw: \"You can withdraw your funds at any time from the tranche.\",\n        stake:\"Stake your tranche tokens to earn additional rewards and boost the APY.\",\n        unstake:\"By unstaking your tranche tokens you will no more get additional rewards.\",\n        cantUnstake:\"To unstake your funds you just need to wait 10 blocks after your last stake transaction.\",\n        cantWithdraw:\"To withdraw your funds you just need to wait at least 1 block from the latest harvest transaction.\",\n        long:\"Senior Tranches provide a shielded access to optimized DeFi yields, thanks to an integrated funds' coverage given by Junior Tranches\",\n        deposit:\"By depositing in the Senior Tranche in case of Smart-Contract breach your funds are covered by the funds deposited in the Junior Tranche.\",\n      }\n    },\n    BB: {\n      color: {\n        hex: \"#FAB325\",\n        rgb: [250, 179, 37],\n        hsl: [\"40\", \"95%\", \"56%\"]\n      },\n      type: \"BB\",\n      route: \"junior\",\n      icon: \"TrendingUp\",\n      image: \"images/JuniorTranche.svg\",\n      bubble: \"images/JuniorBubble.svg\",\n      baseName: \"junior\",\n      name: \"Junior Tranche\",\n      features: [\n        \"Leverage yield using Senior tranches funds\",\n        \"Higher risk exposure by protecting senior tranches\",\n        \"No locking period or epochs\",\n        \"Auto-Reinvest accrued tokens\",\n        \"Stake to receive $IDLE tokens\"\n      ],\n      description: {\n        withdraw: \"You can withdraw your funds at any time from the tranche.\",\n        stake:\"Stake your tranche tokens to earn additional rewards and boost the APY.\",\n        unstake:\"By unstaking your tranche tokens you will no more get additional rewards.\",\n        cantUnstake:\"To unstake your funds you just need to wait 10 blocks after your last stake transaction.\",\n        cantWithdraw:\"To withdraw your funds you just need to wait at least 1 block from the latest harvest transaction.\",\n        long:\"The Junior Tranches provide amplified optimized DeFi yields by carrying a higher grade of risks and protecting Senior Tranches\",\n        deposit:\"By depositing in the Junior Tranche in case of Smart-Contract breach your funds will be used to cover eventual losses on the Senior Tranche.\",\n      }\n    }\n  },\n  extraicons: {\n    best: {\n      icon: \"images/sidebar/best-on.svg\",\n      iconDark: \"images/sidebar/best-on-dark.svg\",\n      iconInactive: \"images/sidebar/best-off.svg\",\n      iconInactiveDark: \"images/sidebar/best-off-dark.svg\",\n    },\n    tranches: {\n      icon: \"images/sidebar/tranches-on.svg\",\n      iconDark: \"images/sidebar/tranches-on-dark.svg\",\n      iconInactive: \"images/strategies/tranches-off.svg\",\n      iconInactiveDark: \"images/strategies/tranches-off-dark.svg\"\n    },\n    risk: {\n      icon: \"images/sidebar/risk-on.svg\",\n      iconDark: \"images/sidebar/risk-on-dark.svg\",\n      iconInactive: \"images/sidebar/risk-off.svg\",\n      iconInactiveDark: \"images/sidebar/risk-off-dark.svg\"\n    },\n    stats: {\n      icon: \"images/sidebar/stats-on.svg\",\n      iconDark: \"images/sidebar/stats-on-dark.svg\",\n      iconInactive: \"images/sidebar/stats-off.svg\",\n      iconInactiveDark: \"images/sidebar/stats-off-dark.svg\"\n    },\n    tools: {\n      icon: \"images/sidebar/tools-on.svg\",\n      iconDark: \"images/sidebar/tools-on-dark.svg\",\n      iconInactive: \"images/sidebar/tools-off.svg\",\n      iconInactiveDark: \"images/sidebar/tools-off-dark.svg\"\n    },\n    forum: {\n      icon: \"images/sidebar/forum-on.svg\",\n      iconDark: \"images/sidebar/forum-on-dark.svg\",\n      iconInactive: \"images/sidebar/forum-off.svg\",\n      iconInactiveDark: \"images/sidebar/forum-off-dark.svg\"\n    },\n    stake: {\n      icon: \"images/sidebar/stake-on.svg\",\n      iconDark: \"images/sidebar/stake-on-dark.svg\",\n      iconInactive: \"images/sidebar/stake-off.svg\",\n      iconInactiveDark: \"images/sidebar/stake-off-dark.svg\"\n    },\n    leaderboard: {\n      icon: \"images/sidebar/leaderboard-on.svg\",\n      iconDark: \"images/sidebar/leaderboard-on-dark.svg\",\n      iconInactive: \"images/sidebar/leaderboard-off.svg\",\n      iconInactiveDark: \"images/sidebar/leaderboard-off-dark.svg\"\n    }, overview: {\n      icon: \"images/sidebar/overview-on.svg\",\n      iconDark: \"images/sidebar/overview-on-dark.svg\",\n      iconInactive: \"images/sidebar/overview-off.svg\",\n      iconInactiveDark: \"images/sidebar/overview-off-dark.svg\"\n    }, proposals: {\n      icon: \"images/sidebar/proposals-on.svg\",\n      iconDark: \"images/sidebar/proposals-on-dark.svg\",\n      iconInactive: \"images/sidebar/proposals-off.svg\",\n      iconInactiveDark: \"images/sidebar/proposals-off-dark.svg\"\n    }, delegate: {\n      icon: \"images/sidebar/delegate-on.svg\",\n      iconDark: \"images/sidebar/delegate-on-dark.svg\",\n      iconInactive: \"images/sidebar/delegate-off.svg\",\n      iconInactiveDark: \"images/sidebar/delegate-off-dark.svg\"\n    },\n  },\n  landingStrategies:{\n    best: {\n      networkId:1,\n      token: \"DAI\",\n      visible: true,\n      strategy:'best',\n      enabledEnvs: [],\n      color: \"#f32121\",\n      type: \"strategy\",\n      comingSoon: false,\n      addGovTokens: true,\n      titlePostfix: null,\n      title: \"Best-Yield\",\n      iconName: \"Whatshot\",\n      availableNetworks:[],\n      govTokensEnabled: true,\n      component: StrategyPage,\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/best-on.svg\",\n      iconInactive: \"images/strategies/best-off.svg\",\n      iconInactiveDark: \"images/strategies/best-white.svg\",\n      desc: \"Maximize your returns across DeFi protocols\",\n      descLong:\"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols. Idle’s monitoring system automatically triggers a rebalance if it spots a better-performing allocation: this includes taking account of the total liquidity within the pool, incorporating underlying protocol rate functions and levels of supply and demand. As a user, you will end up with an higher return without constantly checking rates and burning gas on every transfer. Unlock your funds from a single protocol performance with this strategy.\",\n      descShort:\"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols.\"\n    },\n    polygon: {\n      token: \"DAI\",\n      visible: true,\n      networkId:137,\n      enabledEnvs: [],\n      strategy:'best',\n      color: \"#f32121\",\n      type: \"strategy\",\n      comingSoon: false,\n      addGovTokens: true,\n      titlePostfix: null,\n      title: \"Best-Yield\",\n      iconName: \"Whatshot\",\n      availableNetworks:[],\n      govTokensEnabled: true,\n      component: StrategyPage,\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/best-on.svg\",\n      iconInactive: \"images/strategies/best-on.svg\",\n      iconInactiveDark: \"images/strategies/best-on.svg\",\n      desc: \"Maximize your returns on Polygon across DeFi protocols\",\n      descLong:\"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols. Idle’s monitoring system automatically triggers a rebalance if it spots a better-performing allocation: this includes taking account of the total liquidity within the pool, incorporating underlying protocol rate functions and levels of supply and demand. As a user, you will end up with an higher return without constantly checking rates and burning gas on every transfer. Unlock your funds from a single protocol performance with this strategy.\",\n      descShort:\"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols.\"\n    },\n    tranches: {\n      networkId:1,\n      token: \"DAI\",\n      visible: true,\n      type: \"tranche\",\n      protocol: \"idle\",\n      color: \"#f32121\",\n      comingSoon: false,\n      addGovTokens: true,\n      titlePostfix: null,\n      strategy:'tranches',\n      component: Tranches,\n      iconName: \"Whatshot\",\n      enabledEnvs: ['beta'],\n      availableNetworks:[1],\n      govTokensEnabled: true,\n      title: \"Perpetual Tranches\",\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/tranches-on.png\",\n      iconInactive: \"images/strategies/tranches-off.png\",\n      iconInactiveDark: \"images/strategies/tranches-white.png\",\n      desc:\"Diversify your risk profile with dynamic tranched yield derivatives\",\n      descShort:\"Tranches deposit assets (eg DAI) into yield sources (eg Idle Finance) and split the accrued interest between 2 classes of products with different risk profiles.\",\n      descLong:\"Choose the benefits of high-yield or low-risk, while enjoying the flexibility of Tranches. This comes with auto-compounding for accrued governance tokens and no locking period.\"\n    },\n  },\n  strategies: {\n    tranches: {\n      token: \"DAI\",\n      visible: true,\n      type: \"tranche\",\n      protocol: \"idle\",\n      color: \"#f32121\",\n      comingSoon: false,\n      title: \"Tranches\",\n      addGovTokens: true,\n      titlePostfix: null,\n      component: Tranches,\n      iconName: \"Whatshot\",\n      enabledEnvs: ['beta'],\n      availableNetworks:[1],\n      govTokensEnabled: true,\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/tranches-on.png\",\n      iconInactive: \"images/strategies/tranches-off.png\",\n      iconInactiveDark: \"images/strategies/tranches-white.png\",\n      desc:\"Diversify your risk profile with dynamic tranched yield derivatives\",\n      descShort:\"Tranches deposit assets (eg DAI) into yield sources (eg Idle Finance) and split the accrued interest between 2 classes of products with different risk profiles.\",\n      descLong:\"Choose the benefits of high-yield or low-risk, while enjoying the flexibility of Tranches. This comes with auto-compounding for accrued governance tokens and no locking period.\"\n    },\n    best: {\n      token: \"DAI\",\n      visible: true,\n      enabledEnvs: [],\n      color: \"#f32121\",\n      type: \"strategy\",\n      comingSoon: false,\n      addGovTokens: true,\n      titlePostfix: null,\n      title: \"Best-Yield\",\n      iconName: \"Whatshot\",\n      govTokensEnabled: true,\n      component: StrategyPage,\n      availableNetworks:[1,137],\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/best-on.svg\",\n      iconInactive: \"images/strategies/best-off.svg\",\n      iconInactiveDark: \"images/strategies/best-white.svg\",\n      desc: \"Maximize your returns across DeFi protocols\",\n      descLong:\"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols. Idle’s monitoring system automatically triggers a rebalance if it spots a better-performing allocation: this includes taking account of the total liquidity within the pool, incorporating underlying protocol rate functions and levels of supply and demand. As a user, you will end up with an higher return without constantly checking rates and burning gas on every transfer. Unlock your funds from a single protocol performance with this strategy.\",\n      descShort:\"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols.\"\n    },\n    risk: {\n      token: \"DAI\",\n      visible: true,\n      enabledEnvs: [],\n      color: \"#2196F3\",\n      type: \"strategy\",\n      comingSoon: false,\n      titlePostfix: null,\n      addGovTokens: true,\n      iconName: \"Security\",\n      availableNetworks:[1],\n      title: \"Risk-Adjusted\",\n      govTokensEnabled: true,\n      component: StrategyPage,\n      chartColor: \"hsl(211,67%,47%)\",\n      icon: \"images/strategies/risk-on.svg\",\n      iconInactive: \"images/strategies/risk-off.svg\",\n      iconInactiveDark: \"images/strategies/risk-white.svg\",\n      desc: \"Optimize your risk exposure across DeFi protocols\",\n      descLong:\"The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level. The risk-management algorithm takes account of the total assets within a pool, incorporates underlying protocol rate functions and levels of supply and demand, skimming protocols with a bad score/rate mix, and finally determining an allocation that achieves the highest risk-return score possible after the rebalance happens.\",\n      descShort:\"The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level.\"\n    }\n    /*\n    new:{\n      token:'DAI',\n      color:'#2196F3',\n      comingSoon:true,\n      addGovTokens:true,\n      iconName:'Adjust',\n      title:'Coming Soon',\n      chartColor:'hsl(211,67%,47%)',\n      icon:'images/strategies/solr-on.svg',\n      desc:'More strategies are coming soon!',\n      iconInactive:'images/strategies/solr-off.svg',\n      descLong:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level. The risk-management algorithm takes account of the total assets within a pool, incorporates underlying protocol rate functions and levels of supply and demand, skimming protocols with a bad score/rate mix, and finally determining an allocation that achieves the highest risk-return score possible after the rebalance happens.',\n      descShort:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level.'\n    }\n    */\n  },\n  stats: {\n    enabled: true, // Enable endpoint\n    availableNetworks:[1,137],\n    rates: {\n      TTL: 300, // 5 minutes\n      endpoint:{\n        1:\"https://api.idle.finance/rates/\",\n        137:\"https://api-polygon.idle.finance/rates/\"\n      }\n    },\n    tvls: {\n      TTL: 120,\n      endpoint:{\n        1:\"https://api.idle.finance/tvls/\",\n        137:\"https://api-polygon.idle.finance/tvls/\"\n      }\n    },\n    aprs: {\n      TTL: 120,\n      endpoint:{\n        1:\"https://api.idle.finance/aprs/\",\n        137:\"https://api-polygon.idle.finance/aprs/\"\n      }\n    },\n    substack: {\n      TTL: 1800,\n      endpoint:{\n        1:\"https://api.idle.finance/substack/\",\n        137:\"https://api-polygon.idle.finance/substack/\"\n      }\n    },\n    scores: {\n      TTL: 300, // 5 minutes\n      endpoint:{\n        1:\"https://api.idle.finance/scores/\"\n      }\n    },\n    config: {\n      headers: env.REACT_APP_IDLE_KEY ? { Authorization: `Bearer ${env.REACT_APP_IDLE_KEY}` } : {}\n    },\n    versions: {\n      /*\n      v2:{\n        label:'Idle V2',\n        startTimestamp:null,\n        additionalProtocols:[],\n        endTimestamp:1589752999,\n        enabledStrategies:['best'],\n        showPerformanceTooltip:false,\n        enabledTokens:['DAI','USDC'],\n      },\n      */\n      v3: {\n        label: \"Idle V3\",\n        additionalProtocols: [],\n        endTimestamp: 1597237542,\n        startTimestamp: 1589801874,\n        showPerformanceTooltip: false,\n        strategiesParams: {\n          risk: {\n            endTimestamp: 1597233922\n          }\n        },\n        enabledStrategies: [\"best\", \"risk\"],\n        enabledTokens: [\"DAI\", \"USDC\", \"USDT\", \"TUSD\", \"SUSD\", \"WBTC\"]\n      },\n      v4: {\n        label: \"Idle V4\",\n        endTimestamp: null,\n        startTimestamp: 1597442400, // 1598220000\n        enabledStrategies: [\"best\", \"risk\"],\n        showPerformanceTooltip: true,\n        strategiesParams: {\n          risk: {\n            startTimestamp: 1599183170\n          }\n        },\n        enabledTokens: ['DAI', 'USDC', 'USDT', 'TUSD', 'SUSD', 'WBTC', 'WETH', 'RAI', 'FEI'],\n        additionalProtocols: [\n          {\n            decimals: 16,\n            protocol: \"compound\",\n            name: \"compoundWithCOMP\",\n            enabledTokens: [\n              \"DAI\",\n              \"USDC\",\n              \"USDT\",\n              \"TUSD\",\n              \"SUSD\",\n              \"WBTC\",\n              \"WETH\"\n            ]\n          },\n          {\n            decimals: 18,\n            protocol: \"aavev2\",\n            name: \"aavev2WithStkAAVE\",\n            enabledTokens: [\n              \"DAI\",\n              \"USDC\",\n              \"USDT\",\n              \"TUSD\",\n              \"SUSD\",\n              \"WBTC\",\n              \"WETH\",\n              \"RAI\"\n            ]\n          }\n        ]\n      }\n    },\n    tokens:{\n      DAI:{\n        decimals:18,\n        enabled:true,\n        color:{\n          rgb:[250,184,51],\n          hex:'#F7B24A',\n          hsl:['40', '95%', '59%']\n        },\n        chart:{\n          labelTextColorModifiers:['darker', 2]\n        },\n        startTimestamp:'2020-02-11',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      ETH:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#333',\n          rgb:[51, 51, 51],\n          hsl:['0, 0%, 20%']\n        },\n        address:'0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0'\n      },\n      MATIC:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#8247E5',\n          rgb:[130, 71, 229],\n          hsl:['262, 75%, 59%']\n        },\n        address:'0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0'\n      },\n      USD: {\n        enabled: true,\n        color: {\n          hex: \"#85bb65\",\n          rgb: [133, 187, 101],\n          hsl: [\"98\", \"39%\", \"56%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"brighter\", 2]\n        },\n        address: null,\n        startTimestamp: \"2020-02-04\"\n      },\n      USDC: {\n        decimals: 6,\n        enabled: true,\n        color: {\n          hex: \"#2875C8\",\n          rgb: [40, 117, 200],\n          hsl: [\"211\", \"67%\", \"47%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"brighter\", 2]\n        },\n        startTimestamp: \"2020-02-04\",\n        address: \"0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48\",\n        performanceTooltip:\n          \"APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.\"\n      },\n      USDT: {\n        decimals: 6,\n        enabled: true,\n        color: {\n          hex: \"#22a079\",\n          rgb: [34, 160, 121],\n          hsl: [\"161\", \"65%\", \"38%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        startTimestamp: \"2020-02-04\",\n        address: \"0xdac17f958d2ee523a2206206994597c13d831ec7\",\n        performanceTooltip:\n          \"APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.\"\n      },\n      TUSD: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"0340a1\",\n          rgb: [3, 64, 161],\n          hsl: [\"217\", \"96%\", \"32%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"brighter\", 5]\n        },\n        startTimestamp: \"2020-06-22\",\n        address: \"0x0000000000085d4780b73119b644ae5ecd22b376\"\n      },\n      SUSD: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#1e1a31\",\n          rgb: [30, 26, 49],\n          hsl: [\"250\", \"31%\", \"15%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"brighter\", 5]\n        },\n        startTimestamp: \"2020-06-22\",\n        address: \"0x57ab1ec28d129707052df4df418d58a2d46d5f51\"\n      },\n      WBTC: {\n        decimals: 8,\n        enabled: true,\n        color: {\n          hex: \"#eb9444\",\n          rgb: [235, 148, 68],\n          hsl: [\"29\", \"81%\", \"59%\"]\n        },\n        startTimestamp: \"2020-06-15\",\n        conversionRateField: \"wbtcDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0x2260fac5e5542a773aa44fbcfedf7c193bc2c599\",\n        performanceTooltip:\n          \"APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.\"\n      },\n      WETH: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#ee1f79\",\n          rgb: [238, 31, 121],\n          hsl: [\"334\", \"86%\", \"53%\"]\n        },\n        startTimestamp: \"2021-02-16\",\n        conversionRateField: \"wethDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\",\n        performanceTooltip:\n          \"APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.\"\n      },\n      COMP: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#00d395\",\n          rgb: [0, 211, 149],\n          hsl: [\"162\", \"100%\", \"41%\"]\n        },\n        startTimestamp: \"2020-06-15\",\n        conversionRateField: \"compDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0xc00e94cb662c3520282e6f5717214004a7f26888\"\n      },\n      stkAAVE: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#B6509E\",\n          rgb: [182, 80, 158],\n          hsl: [\"314\", \"41%\", \"51%\"]\n        },\n        startTimestamp: \"2021-04-30\",\n        conversionRateField: \"aaveDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0x4da27a545c0c5b758a6ba100e3a049001de870f5\"\n      },\n      IDLE: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#0d55bb\",\n          rgb: [13, 85, 187],\n          hsl: [\"215\", \"87%\", \"39%\"]\n        },\n        startTimestamp: \"2020-11-10\",\n        conversionRateField: \"idleDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0x875773784Af8135eA0ef43b5a374AaD105c5D39e\"\n      },\n      RAI: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#378879\",\n          rgb: [55, 136, 121],\n          hsl: [\"169\", \"42%\", \"37%\"]\n        },\n        disabledCharts: [\"score\"],\n        startTimestamp: \"2021-05-25\",\n        icon: \"images/tokens/RAI.png\",\n        conversionRateField: \"raiDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0x03ab458634910aad20ef5f1c8ee96f1d6ac54919\"\n      },\n      FEI: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: '#229b6e',\n          rgb: [34, 155, 110],\n          hsl: ['158', '64%', '37%']\n        },\n        disabledCharts: ['score'],\n        startTimestamp: '2021-09-24',\n        conversionRateField: 'feiDAIPrice',\n        chart: {\n          labelTextColorModifiers: ['darker', 4]\n        },\n        address: '0x956f47f50a910163d8bf957cf5846d573e7f87ca',\n      },\n      WMATIC:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#2891f8',\n          rgb:[40, 145, 248],\n          hsl:['210', '94%', '56%']\n        },\n        startTimestamp:'2021-05-25',\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        address:'0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0',\n      },\n      'idleDAI+idleUSDC+idleUSDT':{\n        decimals:18,\n        enabled:false,\n        name:'Curve.fi',\n        color:{\n          hex:'#ff0000',\n          rgb:[255, 0, 0],\n          hsl:['0', '100%', '50%']\n        },\n        startTimestamp: \"2020-06-15\"\n      }\n    },\n    protocols: {\n      compound: {\n        legend: true,\n        enabled: true,\n        label: \"Compound\",\n        color: {\n          rgb: [0, 209, 146],\n          hsl: [\"162\", \"100%\", \"41%\"]\n        }\n      },\n      aavev2WithStkAAVE: {\n        enabled: true,\n        label: \"Aave V2 + stkAAVE\",\n        startTimestamp: \"2021-05-08 14:30:00\",\n        // tokensProps:{\n        //   WETH:{\n        //     startTimestamp:'2021-05-19 12:20:00',\n        //   }\n        // },\n        color: {\n          hex: \"#B6509E\",\n          rgb: [182, 80, 158],\n          hsl: [\"314\", \"41%\", \"51%\"]\n        },\n        rateField: [\"rate\", \"aaveAdditionalAPR\"]\n      },\n      compoundWithCOMP: {\n        enabled: true,\n        label: \"Compound + COMP\",\n        color: {\n          rgb: [0, 153, 107],\n          hsl: [\"162\", \"100%\", \"30%\"]\n        },\n        rateField: [\"rate\", \"compoundAdditionalAPR\"]\n      },\n      fulcrum: {\n        legend: false,\n        enabled: false,\n        label: \"Fulcrum\",\n        color: {\n          rgb: [2, 138, 192],\n          hsl: [\"197\", \"98%\", \"38%\"]\n        }\n      },\n      dsr: {\n        label: \"DSR\",\n        enabled: false,\n        icon: \"CHAI.png\",\n        color: {\n          rgb: [222, 52, 67],\n          hsl: [\"355\", \"72%\", \"54%\"]\n        }\n      },\n      dydx: {\n        legend: true,\n        label: \"DyDx\",\n        enabled: true,\n        color: {\n          rgb: [87, 87, 90],\n          hsl: [\"240\", \"2%\", \"35%\"]\n        }\n      },\n      iearn: {\n        label: \"Yearn\",\n        enabled: true\n      },\n      aave: {\n        label: \"Aave V1\",\n        legend: false,\n        enabled: false,\n        color: {\n          rgb: [230, 131, 206],\n          hsl: [\"315\", \"66%\", \"71%\"]\n        }\n      },\n      aavev2: {\n        legend: true,\n        enabled: true,\n        icon: \"aave.svg\",\n        label: \"Aave V2\",\n        color: {\n          rgb: [151, 79, 141],\n          hsl: [\"308\", \"31%\", \"45%\"]\n        }\n      },\n      cream: {\n        legend: true,\n        enabled: true,\n        label: \"Cream\",\n        icon: \"cream.svg\",\n        color: {\n          rgb: [105, 226, 220],\n          hsl: [\"177\", \"68%\", \"65%\"]\n        }\n      },\n      fuse: {\n        legend: true,\n        enabled: true,\n        label: \"Fuse\",\n        icon: \"fuse.png\",\n        color: {\n          rgb: [0, 0, 0],\n          hsl: [\"0\", \"0%\", \"0%\"]\n        }\n      },\n      curve: {\n        label: \"\",\n        enabled: true,\n        color: {\n          rgb: [0, 55, 255],\n          hsl: [\"227\", \"100%\", \"50%\"]\n        }\n      },\n      idle: {\n        label: \"Idle\",\n        enabled: true,\n        color: {\n          rgb: [0, 55, 255],\n          hsl: [\"227\", \"100%\", \"50%\"]\n        }\n      }\n    }\n  },\n  contract: {\n    methods: {\n      refreshIdleSpeed:{\n        enabled:true,\n        availableNetworks:[1]\n      },\n      redeem: {\n        skipRebalance: true,\n        metaTransactionsEnabled: false\n      },\n      deposit: {\n        skipMint: true,\n        minAmountForMint: 100000,\n        erc20ForwarderEnabled: true,\n        skipMintCheckboxEnabled: true,\n        metaTransactionsEnabled: false,\n        // Proxy contract for Meta Tx or ERC20 Forwarder\n        erc20ForwarderProxyContract: {\n          forwarder: {\n            enabled: true,\n            abi: erc20Forwarder,\n            name: \"erc20Forwarder\",\n            function: \"emitMessage\",\n            address: \"0xfaadbe5f0a19f0ebf92aeb73534cbc96b96e2bda\" // Main\n            // address:'0xCB3F801C91DEcaaE9b08b1eDb915F9677D8fdB4A' // Kovan\n          },\n          tokens: {\n            DAI: {\n              enabled: true,\n              permitType: \"DAI_Permit\",\n              abi: IdleDepositForwarder,\n              function: \"permitAndDeposit\", // foo\n              name: \"IdleDepositForwarderDAI\",\n              address: \"0xDe3c769cCD1878372864375e9f89956806B86daA\" // Main\n              // address:'0x1E32F1E96B9735E5D31a23e12fe8e6D9845a9072', // Kovan\n            },\n            USDC: {\n              enabled: true,\n              abi: IdleDepositForwarder,\n              permitType: \"EIP2612_Permit\",\n              name: \"IdleDepositForwarderUSDC\",\n              function: \"permitEIP2612AndDeposit\", // 'foo'\n              address: \"0x43bD6a78b37b50E3f52CAcec53F1202dbDe6a761\" // Main\n              // address:'0x8f9048CFAa27b1A1b77c32a0b87D2DcF5D016cb5', // Kovan\n            }\n          }\n        },\n        proxyContract: {\n          enabled: false,\n          abi: IdleProxyMinter,\n          name: \"IdleProxyMinter\",\n          function: \"mintIdleTokensProxy\",\n          address: \"0x7C4414aA6B0c6CB1Bc7e5BFb7433138426AC637a\"\n        }\n      },\n      migrate: {\n        skipRebalance: true,\n        minAmountForRebalance: 10000,\n        minAmountForRebalanceMetaTx: 10000\n      },\n      redeemGovTokens: {\n        enabled: true\n      },\n      redeemSkipGov: {\n        enabled: true,\n        disabledTokens: [\"idleDAISafe\", \"idleUSDCSafe\", \"idleUSDTSafe\"]\n      },\n      rebalance: {\n        enabled: true,\n        abi: IdleRebalancerV3\n      }\n    }\n  },\n  network:{ // Network configurations\n    availableNetworks:{\n      1:{\n        version:'v1',\n        name:'Ethereum',\n        baseToken:'ETH',\n        color:'#4474f1',\n        provider:'infura',\n        network:'mainnet',\n        explorer:'etherscan',\n        chainName:'Ethereum Mainnet',\n      },\n      42:{\n        name:'Kovan',\n        color:'#9064ff',\n        baseToken:'ETH',\n        provider:'infura',\n        explorer:'etherscan',\n        chainName:'Ethereum Testnet Kovan',\n      },\n      3:{\n        name:'Ropsten',\n        color:'#ff4a8d',\n        baseToken:'ETH',\n        provider:'infura',\n        explorer:'etherscan',\n        chainName:'Ethereum Testnet Ropsten',\n      },\n      4:{\n        name:'Rinkeby',\n        color:'#f6c343',\n        baseToken:'ETH',\n        provider:'infura',\n        explorer:'etherscan',\n        chainName:'Ethereum Testnet Rinkeby',\n      },\n      137:{\n        version:'v1',\n        name:'Polygon',\n        color:'#8247E5',\n        network:'mainnet',\n        baseToken:'MATIC',\n        explorer:'polygon',\n        provider:'polygon',\n        chainName:'Matic(Polygon) Mainnet',\n      },\n      5:{\n        name:'Görli',\n        color:'#3099f2',\n        baseToken:'ETH',\n        version:'mumbai',\n        network:'testnet',\n        provider:'infura',\n        explorer:'etherscan',\n        chainName:'Ethereum Testnet Görli',\n      },\n      1337:{\n        name:'Hardhat',\n        baseToken:'ETH',\n        color:'#4474f1',\n        provider:'infura',\n        explorer:'etherscan',\n        chainName:'Ethereum Mainnet',\n      },\n      80001:{\n        name:'Mumbai',\n        color:'#4474f1',\n        version:'mumbai',\n        network:'testnet',\n        baseToken:'MATIC',\n        explorer:'polygon',\n        provider:'polygon',\n        chainName:'Matic Testnet Mumbai',\n      }\n    },\n    isForked: false, // If TRUE the tx confirmation callback is fired on the receipt\n    requiredNetwork: 1, // { 1: Mainnet, 3: Ropsten, 42: Kovan }\n    blocksPerYear: 2371428,\n    secondsPerYear: 31536000,\n    requiredConfirmations: 1,\n    enabledNetworks: [1, 137],\n    firstBlockNumber: 8119247,\n    accountBalanceMinimum: 0, // in ETH for gas fees\n    providers:{\n      infura:{\n        key:env.REACT_APP_INFURA_KEY,\n        rpc:{\n          5: 'https://goerli.infura.io/v3/',\n          42: 'https://kovan.infura.io/v3/',\n          1: 'https://mainnet.infura.io/v3/',\n          1337: 'https://mainnet.infura.io/v3/',\n          137: 'https://mainnet.infura.io/v3/',\n          80001: 'https://goerli.infura.io/v3/'\n        }\n      },\n      polygon:{\n        enabled:true,\n        // key:env.REACT_APP_POLYGON_KEY,\n        key:env.REACT_APP_INFURA_KEY,\n        baseUrl:{\n          137:'https://polygonscan.com',\n          80001:'https://explorer-mumbai.maticvigil.com'\n        },\n        networkPairs:{\n          1:137,\n          137:1,\n          5:80001,\n          80001:5\n        },\n        publicRpc:{\n          137:'https://polygon-rpc.com'\n        },\n        rpc:{\n          // 1:'https://rpc-mainnet.maticvigil.com/v1/',\n          // 5:'https://rpc-mumbai.maticvigil.com/v1/',\n          // 137:'https://rpc-mainnet.maticvigil.com/v1/',\n          // 80001:'https://rpc-mumbai.maticvigil.com/v1/'\n\n          1:'https://polygon-mainnet.infura.io/v3/',\n          5:'https://polygon-mainnet.infura.io/v3/',\n          137:'https://polygon-mainnet.infura.io/v3/',\n          80001:'https://polygon-mainnet.infura.io/v3/'\n\n          // 1:'https://matic-mainnet.chainstacklabs.com/',\n          // 137:'https://matic-mainnet.chainstacklabs.com/',\n          // 5:'https://matic-mumbai.chainstacklabs.com/',\n          // 80001:'https://matic-mumbai.chainstacklabs.com/' \n        }\n      },\n      nexus: {\n        endpoints: {\n          1: \"https://api.nexusmutual.io/v1/\",\n          42: \"https://api.staging.nexusmutual.io/v1/\"\n        }\n      },\n      ens:{\n        enabled:true,\n        supportedNetworks:[1]\n      },\n      covalent:{\n        enabled:true,\n        key:env.REACT_APP_COVALENT_KEY,\n        endpoints:{\n          137:'https://api.covalenthq.com/v1/137/',\n          80001:'https://api.covalenthq.com/v1/80001/'\n        }\n      },\n      etherscan:{\n        enabled:true, // False for empty txs list (try new wallet)\n        keys: [\n          env.REACT_APP_ETHERSCAN_KEY,\n          env.REACT_APP_ETHERSCAN_KEY2,\n          env.REACT_APP_ETHERSCAN_KEY3,\n          env.REACT_APP_ETHERSCAN_KEY4\n        ],\n        endpoints:{\n          1: 'https://api.etherscan.io/api',\n          1337: 'https://api.etherscan.io/api',\n          5: 'https://api-goerli.etherscan.io/api',\n          42: 'https://api-kovan.etherscan.io/api'\n        },\n        baseUrl:{\n          1: 'https://etherscan.io',\n          1337: 'https://etherscan.io',\n          5: 'https://goerli.etherscan.io',\n          42: 'https://kovan.etherscan.io',\n        }\n      },\n      snapshot: {\n        whitelist: [\n          \"0x9993ADB62085AcB05Fc493f7A1D10C11227A78fa\",\n          \"0xf12ce5807e3d3128B876aa1Cec0632D63547E22E\"\n        ],\n        endpoints: {\n          proposals: \"https://hub.snapshot.page/api/idlefinance.eth/proposals\"\n        },\n        urls: {\n          proposals: \"https://signal.idle.finance/#/idlefinance.eth/proposal/\"\n        }\n      },\n      biconomy: {\n        enabled: true,\n        enableLogin: false,\n        supportedNetworks: [1, 42],\n        disabledWallets: [\"authereum\"],\n        endpoints: {\n          limits: \"https://api.biconomy.io/api/v1/dapp/checkLimits\"\n        },\n        params: {\n          debug: false,\n          apiKey: env.REACT_APP_BICONOMY_KEY, // Mainnet\n          dappId: env.REACT_APP_BICONOMY_APPID,\n          apiId: \"36572ec9-ae5c-4c4a-9530-f3ae7c7ac829\"\n          // apiKey: env.REACT_APP_BICONOMY_KEY_KOVAN, // Kovan\n        }\n      },\n      simpleID: {\n        enabled: false,\n        supportedNetworks: [1],\n        getNetwork: (networkId, availableNetworks) => {\n          let networkName = null;\n          switch (networkId) {\n            case 1:\n              networkName = \"mainnet\";\n              break;\n            default:\n              networkName = availableNetworks[networkId]\n                ? availableNetworks[networkId].toLowerCase()\n                : \"mainnet\";\n              break;\n          }\n          return networkName;\n        },\n        params: {\n          appOrigin: window.location.origin,\n          appName: \"Idle\",\n          appId: \"eb4d1754-a76e-4c58-8422-54b5ca2395e7\",\n          renderNotifications: false,\n          network: \"mainnet\"\n        }\n      }\n    }\n  },\n  events: {\n    DAI: {\n      fields: {\n        to: \"dst\",\n        from: \"src\",\n        value: \"wad\"\n      }\n    },\n    FEI: {\n      fields: {\n        to: \"dst\",\n        from: \"src\",\n        value: \"wad\"\n      }\n    }\n  },\n  notifications: [\n    {\n      enabled: false,\n      end: 1612282726374,\n      start: 1611677841027,\n      date: \"Jan 26, 2021 16:18 UTC\",\n      title: \"Cover Protocol Available\",\n      hash: \"/dashboard/tools/cover-protocol\",\n      image: \"/images/protocols/cover-logo.svg\",\n      text: \"Protect your portfolio with Cover Protocol\"\n    }\n  ],\n  tools: {\n    stake: {\n      enabled: true,\n      icon: \"Layers\",\n      label: \"Staking\",\n      route: \"staking\",\n      subComponent: Staking,\n      availableNetworks:[1],\n      desc: \"Stake your IDLE / Sushi Swap LP tokens and earn $IDLE rewards\",\n      props: {\n        availableTokens: {\n          IDLE: {\n            component: IdleStaking,\n            contract: {\n              abi: stkIDLE,\n              decimals: 18,\n              name: \"stkIDLE\",\n              fromBlock: 12561464,\n              rewardToken: \"IDLE\",\n              address: \"0xaac13a116ea7016689993193fce4badc8038136f\" // Mainnet\n            },\n            feeDistributor: {\n              fromBlock: 12649361,\n              abi: StakingFeeDistributor,\n              name: \"StakingFeeDistributor\",\n              address: \"0xbabb82456c013fd7e3f25857e0729de8207f80e2\" // Mainnet\n            },\n            abi: IDLE,\n            name: \"IDLE\",\n            token: \"IDLE\",\n            decimals: 18,\n            enabled: true,\n            label: \"IDLE Token\",\n            icon: \"images/tokens/IDLE.svg\",\n            address: \"0x875773784Af8135eA0ef43b5a374AaD105c5D39e\", // Mainnet\n            poolLink:\n              \"https://etherscan.com/address/0x875773784Af8135eA0ef43b5a374AaD105c5D39e\"\n          },\n          SLP: {\n            component: LpStaking,\n            contract: {\n              decimals: 24,\n              name: \"LpStaking\",\n              maxMultiplier: 3,\n              abi: LpStakingAbi,\n              maxBonusDays: 120,\n              rewardToken: \"IDLE\",\n              address: \"0xcc0b9f7ed0e6bc7c2e69dbd247e8420f29aeb48d\" // Mainnet\n            },\n            name: \"SLP\",\n            token: \"SLP\",\n            decimals: 18,\n            enabled: true,\n            abi: SushiLiquidityPool,\n            label: \"SushiSwap IDLE/ETH LP Token\",\n            icon: \"images/protocols/sushiswap.png\",\n            address: \"0xa7f11e026a0af768d285360a855f2bded3047530\", // Mainnet\n            poolLink:\n              \"https://analytics.sushi.com/pairs/0xa7f11e026a0af768d285360a855f2bded3047530\"\n          }\n        }\n      }\n    },\n    stakePolygon: {\n      enabled: true,\n      icon: \"Layers\",\n      label: \"Staking\",\n      subComponent: Staking,\n      availableNetworks:[137],\n      route: \"staking-polygon\",\n      desc: \"Stake your Sushi Swap LP tokens and earn $IDLE rewards\",\n      props: {\n        availableTokens: {\n          SLP: {\n            component: LpStaking,\n            contract: {\n              decimals: 24,\n              name: \"LpStaking\",\n              maxMultiplier: 3,\n              abi: LpStakingAbi,\n              maxBonusDays: 60,\n              rewardToken: \"IDLE\",\n              address: \"0x59CDF902b6A964CD5dB04d28f12b774bFB876Be9\" // Polygon\n            },\n            name: \"SLP\",\n            token: \"SLP\",\n            decimals: 18,\n            enabled: true,\n            abi: SushiLiquidityPool,\n            label: \"SushiSwap IDLE/WETH LP Token\",\n            icon: \"images/protocols/sushiswap.png\",\n            address: \"0x5518a3af961eee8771657050c5cb23d2b3e2f6ee\", // Polygon\n            poolLink: \"https://analytics-polygon.sushi.com/pairs/0x5518a3af961eee8771657050c5cb23d2b3e2f6ee\"\n          }\n        }\n      }\n    },\n    nexusMutual: {\n      enabled: true,\n      icon: \"Security\",\n      route: \"coverage\",\n      label: \"Coverage\",\n      availableNetworks:[1],\n      desc: \"Buy Nexus Mutual coverage without KYC for your deposits\",\n      subComponent: NexusMutual,\n      props: {\n        availableTokens: {\n          idleDAIYield: {\n            decimals: 18,\n            abi: IdleTokenV4,\n            name: \"idleDAIYield\",\n            token: \"idleDAIYield\", // Mainnet\n            // token:'idleDAIYieldMock', // Kovan\n            address: \"0x0000000000000000000000000000000000000011\",\n            realAddress: \"0x3fe7940616e5bc47b0775a0dccf6237893353bb4\", // Mainnet\n            // realAddress:'0xbd0b0205408509544815d377214d8f2cbe3e5381', // Kovan\n            underlying: {\n              DAI: {\n                abi: ERC20,\n                name: \"DAI\", // Mainnet\n                token: \"DAI\",\n                decimals: 18,\n                // name:'DAIMock', // Kovan\n                address: \"0x6b175474e89094c44da98b954eedeac495271d0f\" // Mainnet\n                // address:'0x5C422252C6a47CdacF667521566Bf7bD5b0d769B' // Kovan\n              }\n            }\n          },\n          idleUSDTYield: {\n            decimals: 18,\n            abi: IdleTokenV4,\n            name: \"idleUSDTYield\",\n            token: \"idleUSDTYield\", // Mainnet\n            // token:'idleUSDTYieldMock', // Kovan\n            address: \"0x0000000000000000000000000000000000000012\",\n            realAddress: \"0xF34842d05A1c888Ca02769A633DF37177415C2f8\",\n            underlying: {\n              DAI: {\n                abi: ERC20,\n                name: \"DAI\", // Mainnet\n                token: \"DAI\",\n                decimals: 18,\n                // name:'DAIMock', // Kovan\n                address: \"0x6b175474e89094c44da98b954eedeac495271d0f\" // Mainnet\n                // address:'0x5C422252C6a47CdacF667521566Bf7bD5b0d769B' // Kovan\n              }\n            }\n          }\n        }\n      },\n      directProps: {\n        // startBlock:25858186, // Kovan\n        startBlock: 12783137, // Mainnet\n        // Yield token covers have a 14 days grace period\n        yieldTokenCoverGracePeriod: 14 * 24 * 60 * 60 * 1000,\n        contractInfo: {\n          abi: NexusMutualDistributor,\n          name: \"NexusMutualDistributor\",\n          // address:'0xe2d569dc064b3b91f514e775c6026e04d2c887a9' // Kovan\n          address: \"0xf2b36f823eae36e53a5408d8bd452748b24fbf76\" // Mainnet\n        },\n        incidentsInfo: {\n          abi: NexusMutualIncidents,\n          name: \"NexusMutualIncidents\",\n          // address:'0x322f9a880189E3FFFf59b74644e13e5763C5AdB9' // Kovan\n          address: \"0x8ceba69a8e96a4ce71aa65859dbdb180b489a719\" // Mainnet\n        }\n      }\n    },\n    b2bVesting: {\n      enabled: true,\n      visible: true,\n      icon: \"CloudUpload\",\n      label: \"B2B Vesting\",\n      availableNetworks:[1],\n      route: \"b2b-vesting-contract\",\n      subComponent: DeployB2BVesting,\n      desc:'Deploy/Deposit/Claim for B2B Vesting Contracts<br /><small style=\"color:#ff9900\">(only for partners that joined the B2B Affiliate program)</small>',\n      props: {\n        contracts: {\n          vesterImplementation: {\n            abi: B2BVester,\n            address: \"0x3024656ae91d7bf724f613c314bc56030ba2344c\"\n          }\n        }\n      }\n    },\n    polygonBridge:{\n      enabled:true,\n      route:'polygon-bridge',\n      availableNetworks:[1,137],\n      subComponent:PolygonBridge,\n      image:'images/protocols/polygon.svg',\n      label:'Ethereum ⇔ Polygon Bridge',\n      desc:'Transfer your tokens from Ethereum to Polygon and vice versa with Plasma and PoS Bridge.',\n      props:{\n        contracts:{\n          ERC20Predicate:{\n            abi:ERC20Predicate,\n            name:'ERC20Predicate',\n            // address:'0xdD6596F2029e6233DEFfaCa316e6A95217d4Dc34', // Goerli\n            address:'0x40ec5B33f54e0E8A33A975908C5BA1c14e5BbbDf' // Mainnet\n          },\n          EtherPredicate:{\n            abi:EtherPredicate,\n            name:'EtherPredicate',\n            // address:'0xdD6596F2029e6233DEFfaCa316e6A95217d4Dc34', // Goerli\n            address:'0x8484Ef722627bf18ca5Ae6BcF031c23E6e922B30' // Mainnet\n          },\n          DepositManager:{\n            abi:DepositManager,\n            name:'DepositManager',\n            address:'0x401f6c983ea34274ec46f84d70b31c151321188b'\n          },\n          RootChainManager:{\n            name:'RootChainManager',\n            address:'0xA0c68C638235ee32657e8f720a23ceC1bFc77C77' // Mainnet\n          },\n          StateSender:{\n            name:'StateSender',\n            address:'0x28e4F3a7f651294B9564800b2D01f35189A5bFbE'\n          }\n        },\n        availableTokens:{\n          /*\n          DERC20:{\n            decimals:18,\n            enabled:true,\n            name:'DERC20',\n            token:'DERC20',\n            rootToken:{\n              name:'DERC20',\n              abi:DummyERC20,\n              address:'0x655F2166b0709cd575202630952D71E2bB0d61Af' // Goerli\n            },\n            childToken:{\n              abi:ChildERC20,\n              name:'DummyERC20',\n              address:'0xfe4F5145f6e09952a5ba9e956ED0C25e3Fa4c7F1' // Mumbai\n            }\n          },\n          */\n          MATIC:{\n            name:'MATIC',\n            token:'MATIC',\n            decimals:18,\n            enabled:true,\n            sendValue:true,\n            bridgeType:'plasma',\n            rootToken:{\n              abi:ERC20,\n              name:'MATIC',\n              address:'0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0', // Mainnet\n            },\n            childToken:{\n              abi:ChildERC20,\n              name:'childMATIC',\n              address:'0x0000000000000000000000000000000000001010' // Matic\n            }\n          },\n          WETH:{\n            name:'WETH',\n            token:'ETH',\n            decimals:18,\n            enabled:true,\n            bridgeType:'pos',\n            childToken:{\n              abi:ChildERC20,\n              name:'maticWETH',\n              address:'0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619' // Matic\n            }\n          },\n          /*\n          WETH:{\n            name:'WETH',\n            token:'WETH',\n            decimals:18,\n            enabled:true,\n            sendValue:false,\n            bridgeType:'pos',\n            rootToken:{\n              abi:ERC20,\n              name:'WETH',\n              address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2', // Mainnet\n            },\n            childToken:{\n              abi:ChildERC20,\n              name:'childWETH',\n              address:'0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619' // Matic\n            }\n          },\n          */\n          DAI:{\n            name:'DAI',\n            token:'DAI',\n            decimals:18,\n            enabled:true,\n            sendValue:false,\n            bridgeType:'pos',\n            rootToken:{\n              abi:DAI,\n              name:'DAI',\n              // address:'0x6311344B50D2077BF9804d376EA4C2cEDcB75C1f', // Goerli\n              address:'0x6b175474e89094c44da98b954eedeac495271d0f', // Mainnet\n            },\n            childToken:{\n              abi:ChildERC20,\n              name:'childDAI',\n              // address:'0x001B3B4d0F3714Ca98ba10F6042DaEbF0B1B7b6F', // Mumbai\n              address:'0x8f3Cf7ad23Cd3CaDbD9735AFf958023239c6A063' // Matic\n            }\n          },\n          USDC:{\n            decimals:6,\n            name:'USDC',\n            token:'USDC',\n            enabled:true,\n            bridgeType:'pos',\n            rootToken:{\n              abi:USDC,\n              name:'USDC',\n              // address:'0x98339D8C260052B7ad81c28c16C0b98420f2B46a' // Goerli\n              address:'0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48', // Mainnet\n            },\n            childToken:{\n              abi:ChildERC20,\n              name:'childUSDC',\n              // address:'0x6D4dd09982853F08d9966aC3cA4Eb5885F16f2b2' // Mubai\n              address:'0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174' // Matic\n            }\n          },\n          IDLE:{\n            decimals:18,\n            name:'IDLE',\n            token:'IDLE',\n            enabled:true,\n            bridgeType:'pos',\n            rootToken:{\n              abi:IDLE,\n              name:'IDLE',\n              address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e', // Mainnet\n            },\n            childToken:{\n              abi:ChildERC20,\n              name:'childUSDC',\n              address:'0xc25351811983818c9fe6d8c580531819c8ade90f' // Matic\n            }\n          },\n          /*\n          AAVE:{\n            decimals:18,\n            name:'AAVE',\n            token:'AAVE',\n            enabled:true,\n            bridgeType:'pos',\n            rootToken:{\n              abi:ERC20,\n              name:'AAVE',\n              address:'0x7fc66500c84a76ad7e9c93437bfc5ac33e2ddae9', // Mainnet\n            },\n            childToken:{\n              abi:ChildERC20,\n              name:'childAAVE',\n              address:'0xD6DF932A45C0f255f85145f286eA0b292B21C90B' // Matic\n            }\n          }\n          */\n        }\n      }\n    },\n    ethWrapper:{\n      enabled:true,\n      label:'ETH Wrapper',\n      route:'eth-wrapper',\n      availableNetworks:[1,42],\n      subComponent:TokenWrapper,\n      image:'images/tokens/WETH.svg',\n      desc:'Wrap your ETH and get WETH. Unwrap your WETH and get back ETH.',\n      props:{\n        startContract:{\n          name:'ETH',\n          token:'ETH',\n          decimals:18,\n          wrapMethod:'deposit',\n        },\n        destContract:{\n          abi:WETH,\n          name:'WETH',\n          decimals:18,\n          token:'WETH',\n          unwrapMethod:'withdraw',\n          address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2'\n        },\n      }\n    },\n    coverProtocol:{\n      enabled:false,\n      availableNetworks:[1],\n      label:'Cover Protocol',\n      route:'cover-protocol',\n      subComponent:CoverProtocol,\n      image:'images/protocols/cover-logo.svg',\n      desc:'Get your Idle Portfolio covered against Smart Contract risk',\n      fileClaimUrl:'https://app.coverprotocol.com/app/claims/new?protocol=IDLE',\n      props:{\n        contract:{\n          decimals:18,\n          abi:CoverMint,\n          name:'CoverMint',\n          address:'0x46f2f34742c1d9b9b220aabf0ff26bf59ec9f8a0'\n        },\n        coverages:[\n          {\n            collateral: \"DAI\",\n            expirationTimestamp: 1714470400,\n            tokens: {\n              Claim: {\n                abi: CovToken,\n                name: \"COVER_IDLE_2021_02_28_DAI_0_CLAIM\",\n                address: \"0xa7dac6774e5e40f56a0bf06af6cf9b1f3d037bcc\",\n                balancerPool: {\n                  decimals: 18,\n                  abi: BalancerPool,\n                  name: \"BAL_COVER_IDLE_2021_02_28_DAI_0_CLAIM\",\n                  address: \"0xeb2b9959c7943eb3c0bdb69ede25247bab4d1c6c\"\n                }\n              },\n              NoClaim: {\n                abi: CovToken,\n                name: \"COVER_IDLE_2021_02_28_DAI_0_NOCLAIM\",\n                address: \"0x53df0bfa014b7522299c129c5a7b318f02adb469\",\n                balancerPool: {\n                  decimals: 18,\n                  abi: BalancerPool,\n                  name: \"BAL_COVER_IDLE_2021_02_28_DAI_0_NOCLAIM\",\n                  address: \"0xce0e9e7a1163badb7ee79cfe96b5148e178cab73\"\n                }\n              }\n            }\n          }\n        ]\n      }\n    },\n    batchDeposit:{\n      enabled: true,\n      icon: \"Storage\",\n      claimEnabled: true,\n      depositEnabled: true,\n      availableNetworks:[1],\n      route: \"batch-deposit\",\n      label: \"Batch Deposit\",\n      subComponent: BatchDeposit,\n      desc:\"Deposit your tokens in the batch and wait until its execution to claim your Idle Tokens V4\",\n      props: {\n        availableTokens: {\n          idleDAIYield: {\n            decimals: 18,\n            strategy: \"best\",\n            baseToken: \"DAI\",\n            minPoolSize: 20000,\n            migrationContract: {\n              abi: IdleBatchedMint,\n              name: \"IdleBatchedMintDAI\",\n              address: \"0x633fb4d38B24dC890b11Db2AE2B248D13F996A79\", // Main\n              // address:'0x1B7bA0361A15CCF62521cF7d2Cbb2Ba90b1521a7', // Kovan\n              functions: [\n                {\n                  name: \"deposit\",\n                  usePermit: true,\n                  label: \"Deposit\",\n                  permitName: \"permitAndDeposit\"\n                }\n              ]\n            }\n          },\n          idleUSDCYield: {\n            decimals: 6,\n            strategy: \"best\",\n            baseToken: \"USDC\",\n            minPoolSize: 20000,\n            migrationContract: {\n              abi: IdleBatchedMint,\n              name: \"IdleBatchedMintUSDC\",\n              address: \"0x562C4fd96F0652F5Fcfa96b0a33088B5a6eAeE9B\", // Main\n              // address:'0x3F35eB839f91b614195a47A593dB46b14cd7EaF8', // Kovan\n              functions: [\n                {\n                  name: \"deposit\",\n                  label: \"Deposit\",\n                  usePermit: true,\n                  permitName: \"permitEIP2612AndDepositUnlimited\"\n                }\n              ]\n            }\n          }\n        }\n      }\n    },\n    batchMigration: {\n      enabled: true,\n      claimEnabled: true,\n      icon: \"FileDownload\",\n      depositEnabled:false,\n      availableNetworks:[1],\n      route: \"batch-migration\",\n      label: \"Batch Migration\",\n      subComponent: BatchMigration,\n      desc:\"Deposit your Idle Tokens V3 into a batch and wait until its conversion to the Idle Token V4\",\n      props: {\n        availableTokens: {\n          idleDAIYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"DAI\",\n            name: \"idleDAIYieldV3\",\n            token: \"idleDAIYieldV3\",\n            address: \"0x78751b12da02728f467a44eac40f5cbc16bd7934\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterDAI\",\n              address: \"0xe0BfD08dA4DAf8f8BA11d1c3802009E75f963497\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleUSDCYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"USDC\",\n            name: \"idleUSDCYieldV3\",\n            token: \"idleUSDCYieldV3\",\n            address: \"0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterUSDC\",\n              address: \"0x86c8b56d124c2a8e7ea8a9e6a7f8ed99dde5cca8\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleUSDTYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"USDT\",\n            name: \"idleUSDTYieldV3\",\n            token: \"idleUSDTYieldV3\",\n            address: \"0x63D27B3DA94A9E871222CB0A32232674B02D2f2D\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterUSDT\",\n              address: \"0xee5c50c7c49dec47dde2f9b0233b9e14a8f00cf2\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleSUSDYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"SUSD\",\n            name: \"idleSUSDYieldV3\",\n            token: \"idleSUSDYieldV3\",\n            address: \"0xe79e177d2a5c7085027d7c64c8f271c81430fc9b\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterSUSD\",\n              address: \"0xE2eE519399a49f1A2004a25DA61e82867A69b9b1\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleTUSDYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"TUSD\",\n            name: \"idleTUSDYieldV3\",\n            token: \"idleTUSDYieldV3\",\n            address: \"0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterTUSD\",\n              address: \"0x174a273f0ea28e55b6dd13259aa43d262b863a86\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleWBTCYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"WBTC\",\n            name: \"idleWBTCYieldV3\",\n            token: \"idleWBTCYieldV3\",\n            address: \"0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterWBTC\",\n              address: \"0xbfDC7d97559173B52EF2A2f1bC9BeCf97B0D401D\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleDAISafe: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"risk\",\n            baseToken: \"DAI\",\n            name: \"idleDAISafeV3\",\n            token: \"idleDAISafeV3\",\n            address: \"0x1846bdfDB6A0f5c473dEc610144513bd071999fB\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterDAISafe\",\n              address: \"0x08db226d63cE724A6091Ba82D28dFc76ceCa23d8\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleUSDCSafe: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"risk\",\n            baseToken: \"USDC\",\n            name: \"idleUSDCSafeV3\",\n            token: \"idleUSDCSafeV3\",\n            address: \"0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterUSDCSafe\",\n              address: \"0xA6C89A31D59f9C68D9Cba28d690C5E52058fb472\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleUSDTSafe: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"risk\",\n            baseToken: \"USDT\",\n            name: \"idleUSDTSafeV3\",\n            token: \"idleUSDTSafeV3\",\n            address: \"0x42740698959761baf1b06baa51efbd88cb1d862b\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterUSDTSafe\",\n              address: \"0xd47B96Fb33b79a4Dd81a2bfa676eBB669166f619\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          }\n        }\n      }\n    },\n    tokenMigration: {\n      enabled: true,\n      icon: \"SwapHoriz\",\n      route: \"convert\",\n      availableNetworks:[1],\n      label: \"Token Migration\",\n      desc:\"Easily convert your Compound, Fulcrum, Aave and iEarn tokens into Idle\",\n      subComponent: TokenMigration,\n      props: {\n        migrationContract: {\n          name: \"IdleConverterV4\",\n          abi: IdleConverterPersonalSignV4,\n          address: \"0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743\",\n          oldAddresses: [],\n          functions: [\n            {\n              label: \"Migrate\",\n              name: \"migrateFromToIdle\"\n            }\n          ]\n        },\n        availableStrategies: [\"best\", \"risk\"],\n        availableTokens: {\n          idleDAIv2: {\n            decimals: 18,\n            enabled: true,\n            protocol: \"idle\",\n            baseToken: \"DAI\",\n            abi: IdleTokenV2,\n            token: \"idleDAIOld\",\n            icon: \"images/tokens/idleDAI.svg\",\n            migrateFunction: \"migrateFromToIdle\",\n            address: \"0x10eC0D497824e342bCB0EDcE00959142aAa766dD\"\n          },\n          cDAI: {\n            decimals: 8,\n            enabled: true,\n            token: \"cDAI\",\n            baseToken: \"DAI\",\n            protocol: \"compound\",\n            migrateFunction: \"migrateFromCompoundToIdle\",\n            address: \"0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643\"\n          },\n          iDAI: {\n            decimals: 18,\n            enabled: false,\n            token: \"iDAI\",\n            baseToken: \"DAI\",\n            protocol: \"fulcrum\",\n            migrateFunction: \"migrateFromFulcrumToIdle\",\n            address: \"0x493c57c4763932315a328269e1adad09653b9081\"\n          },\n          aDAI: {\n            decimals: 18,\n            enabled: true,\n            token: \"aDAI\",\n            protocol: \"aave\",\n            baseToken: \"DAI\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d\"\n          },\n          yDAIv3: {\n            decimals: 18,\n            enabled: true,\n            token: \"yDAIv3\",\n            abi: yDAIv3.abi,\n            baseToken: \"DAI\",\n            protocol: \"iearn\",\n            icon: \"images/tokens/yDAI.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0xC2cB1040220768554cf699b0d863A3cd4324ce32\"\n          },\n          yDAIv2: {\n            decimals: 18,\n            enabled: true,\n            token: \"yDAIv2\",\n            baseToken: \"DAI\",\n            abi: yDAIv3.abi,\n            protocol: \"iearn\",\n            icon: \"images/tokens/yDAI.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0x16de59092dAE5CcF4A1E6439D611fd0653f0Bd01\"\n          },\n          idleUSDCv2: {\n            decimals: 18,\n            enabled: true,\n            protocol: \"idle\",\n            abi: IdleTokenV2,\n            baseToken: \"USDC\",\n            token: \"idleUSDCOld\",\n            icon: \"images/tokens/idleUSDC.svg\",\n            migrateFunction: \"migrateFromToIdle\",\n            address: \"0xeB66ACc3d011056B00ea521F8203580C2E5d3991\"\n          },\n          cUSDC: {\n            decimals: 8,\n            enabled: true,\n            token: \"cUSDC\",\n            baseToken: \"USDC\",\n            protocol: \"compound\",\n            migrateFunction: \"migrateFromCompoundToIdle\",\n            address: \"0x39aa39c021dfbae8fac545936693ac917d5e7563\"\n          },\n          iUSDC: {\n            decimals: 6,\n            enabled: false,\n            token: \"iUSDC\",\n            baseToken: \"USDC\",\n            protocol: \"fulcrum\",\n            migrateFunction: \"migrateFromFulcrumToIdle\",\n            address: \"0xf013406a0b1d544238083df0b93ad0d2cbe0f65f\"\n          },\n          aUSDC: {\n            decimals: 6,\n            enabled: true,\n            token: \"aUSDC\",\n            protocol: \"aave\",\n            baseToken: \"USDC\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0x9bA00D6856a4eDF4665BcA2C2309936572473B7E\"\n          },\n          yUSDCv3: {\n            decimals: 6,\n            enabled: true,\n            token: \"yUSDCv3\",\n            protocol: \"iearn\",\n            abi: yUSDCv3.abi,\n            baseToken: \"USDC\",\n            icon: \"images/tokens/yUSDC.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0x26EA744E5B887E5205727f55dFBE8685e3b21951\"\n          },\n          yUSDCv2: {\n            decimals: 6,\n            enabled: true,\n            token: \"yUSDCv2\",\n            protocol: \"iearn\",\n            abi: yUSDCv3.abi,\n            baseToken: \"USDC\",\n            icon: \"images/tokens/yUSDC.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0xd6aD7a6750A7593E092a9B218d66C0A814a3436e\"\n          },\n          cUSDT: {\n            decimals: 8,\n            enabled: true,\n            token: \"cUSDT\",\n            baseToken: \"USDT\",\n            protocol: \"compound\",\n            migrateFunction: \"migrateFromCompoundToIdle\",\n            address: \"0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9\"\n          },\n          iUSDT: {\n            decimals: 6,\n            enabled: false,\n            token: \"iUSDT\",\n            baseToken: \"USDT\",\n            protocol: \"fulcrum\",\n            migrateFunction: \"migrateFromFulcrumToIdle\",\n            address: \"0x8326645f3aa6de6420102fdb7da9e3a91855045b\"\n          },\n          aUSDT: {\n            decimals: 6,\n            enabled: true,\n            token: \"aUSDT\",\n            protocol: \"aave\",\n            baseToken: \"USDT\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0x71fc860F7D3A592A4a98740e39dB31d25db65ae8\"\n          },\n          yUSDTv3: {\n            decimals: 6,\n            enabled: true,\n            token: \"yUSDTv3\",\n            abi: yUSDTv3.abi,\n            protocol: \"iearn\",\n            baseToken: \"USDT\",\n            icon: \"images/tokens/yUSDT.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0xE6354ed5bC4b393a5Aad09f21c46E101e692d447\"\n          },\n          yUSDTv2: {\n            decimals: 6,\n            enabled: true,\n            token: \"yUSDTv2\",\n            abi: yUSDTv3.abi,\n            protocol: \"iearn\",\n            baseToken: \"USDT\",\n            icon: \"images/tokens/yUSDT.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0x83f798e925BcD4017Eb265844FDDAbb448f1707D\"\n          },\n          idleSUSDv2: {\n            decimals: 18,\n            enabled: true,\n            abi: IdleTokenV2,\n            protocol: \"idle\",\n            baseToken: \"SUSD\",\n            token: \"idleSUSDYieldOld\",\n            availableStrategies: [\"best\"],\n            migrateFunction: \"migrateFromToIdle\",\n            icon: \"images/tokens/idleSUSDYield.svg\",\n            address: \"0xb39ca0261a1b2986a6a9Fe38d344B56374963dE5\"\n          },\n          aSUSD: {\n            decimals: 6,\n            enabled: true,\n            token: \"aSUSD\",\n            protocol: \"aave\",\n            baseToken: \"SUSD\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0x625aE63000f46200499120B906716420bd059240\"\n          },\n          ySUSDv3: {\n            decimals: 18,\n            enabled: true,\n            token: \"ySUSDv3\",\n            abi: ySUSDv3,\n            baseToken: \"SUSD\",\n            protocol: \"iearn\",\n            availableStrategies: [\"best\"],\n            icon: \"images/tokens/ySUSDv3.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0xf61718057901f84c4eec4339ef8f0d86d2b45600\"\n          },\n          idleTUSDv2: {\n            decimals: 18,\n            enabled: true,\n            abi: IdleTokenV2,\n            protocol: \"idle\",\n            baseToken: \"TUSD\",\n            token: \"idleTUSDYieldOld\",\n            availableStrategies: [\"best\"],\n            migrateFunction: \"migrateFromToIdle\",\n            icon: \"images/tokens/idleTUSDYield.svg\",\n            address: \"0x7DB7A4a50b26602E56536189Aa94678C80F8E5b6\"\n          },\n          aTUSD: {\n            decimals: 6,\n            enabled: true,\n            token: \"aTUSD\",\n            protocol: \"aave\",\n            baseToken: \"TUSD\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0x4DA9b813057D04BAef4e5800E36083717b4a0341\"\n          },\n          yTUSDv3: {\n            decimals: 18,\n            enabled: true,\n            abi: yTUSDv3,\n            token: \"yTUSDv3\",\n            baseToken: \"TUSD\",\n            protocol: \"iearn\",\n            icon: \"images/tokens/yTUSDv3.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0x73a052500105205d34daf004eab301916da8190f\"\n          },\n          cWBTC: {\n            decimals: 8,\n            enabled: true,\n            token: \"cWBTC\",\n            baseToken: \"WBTC\",\n            protocol: \"compound\",\n            migrateFunction: \"migrateFromCompoundToIdle\",\n            address: \"0xc11b1268c1a384e55c48c2391d8d480264a3a7f4\"\n          },\n          iWBTC: {\n            decimals: 8,\n            enabled: false,\n            token: \"iWBTC\",\n            baseToken: \"WBTC\",\n            protocol: \"fulcrum\",\n            migrateFunction: \"migrateFromFulcrumToIdle\",\n            address: \"0xba9262578efef8b3aff7f60cd629d6cc8859c8b5\"\n          },\n          aWBTC: {\n            decimals: 8,\n            enabled: true,\n            token: \"aWBTC\",\n            protocol: \"aave\",\n            baseToken: \"WBTC\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0xfc4b8ed459e00e5400be803a9bb3954234fd50e3\"\n          }\n        }\n      }\n    },\n    addFunds:{\n      enabled:true,\n      route:'add-funds',\n      label:'Add Funds',\n      availableNetworks:[1],\n      icon:'AddCircleOutline',\n      desc:'Buy tokens with your Bank account, Credit card or Ethereum Wallet',\n      subComponent:BuyModal,\n      directProps:{\n        showInline:true,\n        showAllTokens:true\n      }\n    },\n    tokenSwap: {\n      enabled: true,\n      icon: \"Sync\",\n      route: \"token-swap\",\n      label: \"Token Swap\",\n      availableNetworks:[1],\n      desc: \"Easily swap your tokens using Kyber Swap widget\",\n      subComponent: TokenSwap,\n      props: {\n        availableTokens: {\n          ETH: { token: \"ETH\" },\n          DAI: { token: \"DAI\" },\n          SUSD: { token: \"SUSD\" },\n          TUSD: { token: \"TUSD\" },\n          USDC: { token: \"USDC\" },\n          USDS: { token: \"USDS\" },\n          USDT: { token: \"USDT\" },\n          WBTC: { token: \"WBTC\" },\n          WETH: { token: \"WETH\" },\n          BUSD: { token: \"BUSD\" },\n          EURS: { token: \"EURS\" },\n          \"2KEY\": { token: \"2KEY\" },\n          ABT: { token: \"ABT\" },\n          ABYSS: { token: \"ABYSS\" },\n          AMPL: { token: \"AMPL\" },\n          ANT: { token: \"ANT\" },\n          BAM: { token: \"BAM\" },\n          BAND: { token: \"BAND\" },\n          BAT: { token: \"BAT\" },\n          BLZ: { token: \"BLZ\" },\n          BNT: { token: \"BNT\" },\n          BQX: { token: \"BQX\" },\n          BTU: { token: \"BTU\" },\n          CDT: { token: \"CDT\" },\n          CVC: { token: \"CVC\" },\n          DAT: { token: \"DAT\" },\n          DGX: { token: \"DGX\" },\n          EKG: { token: \"EKG\" },\n          ELF: { token: \"ELF\" },\n          ENJ: { token: \"ENJ\" },\n          EQUAD: { token: \"EQUAD\" },\n          FXC: { token: \"FXC\" },\n          GDC: { token: \"GDC\" },\n          GEN: { token: \"GEN\" },\n          GHT: { token: \"GHT\" },\n          GNO: { token: \"GNO\" },\n          IOST: { token: \"IOST\" },\n          KEY: { token: \"KEY\" },\n          KNC: { token: \"KNC\" },\n          LEND: { token: \"LEND\" },\n          LINK: { token: \"LINK\" },\n          LOOM: { token: \"LOOM\" },\n          LRC: { token: \"LRC\" },\n          MANA: { token: \"MANA\" },\n          MCO: { token: \"MCO\" },\n          MET: { token: \"MET\" },\n          MFG: { token: \"MFG\" },\n          MKR: { token: \"MKR\" },\n          MLN: { token: \"MLN\" },\n          MTL: { token: \"MTL\" },\n          MYB: { token: \"MYB\" },\n          NEXXO: { token: \"NEXXO\" },\n          NPXS: { token: \"NPXS\" },\n          OGN: { token: \"OGN\" },\n          OMG: { token: \"OMG\" },\n          OST: { token: \"OST\" },\n          PAX: { token: \"PAX\" },\n          PBTC: { token: \"PBTC\" },\n          PLR: { token: \"PLR\" },\n          PNK: { token: \"PNK\" },\n          POLY: { token: \"POLY\" },\n          POWR: { token: \"POWR\" },\n          PT: { token: \"PT\" },\n          QKC: { token: \"QKC\" },\n          QNT: { token: \"QNT\" },\n          RAE: { token: \"RAE\" },\n          REN: { token: \"REN\" },\n          REP: { token: \"REP\" },\n          REQ: { token: \"REQ\" },\n          RLC: { token: \"RLC\" },\n          RSR: { token: \"RSR\" },\n          RSV: { token: \"RSV\" },\n          SAN: { token: \"SAN\" },\n          SNT: { token: \"SNT\" },\n          SNX: { token: \"SNX\" },\n          SPIKE: { token: \"SPIKE\" },\n          SPN: { token: \"SPN\" },\n          TKN: { token: \"TKN\" },\n          TKX: { token: \"TKX\" },\n          TRYB: { token: \"TRYB\" },\n          UBT: { token: \"UBT\" },\n          UPP: { token: \"UPP\" },\n          ZRX: { token: \"ZRX\" }\n        }\n      },\n      directProps: {}\n    }\n  },\n  insurance: {\n    nexusMutual: {\n      label: \"Nexus Mutual\",\n      image: \"images/protocols/nexus-mutual.png\",\n      imageDark: \"images/protocols/nexus-mutual-white.png\"\n    },\n    coverProtocol: {\n      label: \"Cover Protocol\",\n      image: \"images/protocols/cover-logo.svg\",\n      imageDark: \"images/protocols/cover-logo.svg\"\n    }\n  },\n  payments: {\n    // Payment methods & providers\n    methods: {\n      bank: {\n        defaultProvider: null,\n        showDefaultOnly: false,\n        props: {\n          imageSrc: \"images/bank.png\",\n          caption: \"Bank Account\"\n        }\n      },\n      card: {\n        defaultProvider: null,\n        showDefaultOnly: false,\n        props: {\n          imageSrc: \"images/debit-card.png\",\n          caption: \"Credit Card\"\n        }\n      },\n      wallet: {\n        defaultProvider: \"zeroExInstant\",\n        showDefaultOnly: false,\n        props: {\n          imageSrc: \"images/ethereum-wallet.svg\",\n          caption: \"Ethereum Wallet\",\n          imageProps: {\n            padding: [\"0\", \"5px\"]\n          }\n        }\n      }\n    },\n    providers: {\n      wyre: {\n        enabled: true,\n        imageSrc: \"images/payments/wyre.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0.75% fee ~\",\n        supportedMethods: [\"card\"],\n        supportedCountries: [\"USA\", \"GBR\", \"AUS\", \"BRA\", \"CHN\", \"MEX\", \"EUR\"],\n        supportedTokens: [\"USDC\", \"DAI\", \"ETH\"],\n        remoteResources: {},\n        env: \"prod\",\n        envParams: {\n          test: {\n            accountId: \"AC_Q2Y4AARC3TP\"\n          },\n          prod: {\n            accountId: \"AC_PQQBX33XVEQ\"\n          }\n        },\n        getInfo: props => {\n          const info = {};\n          if (props.selectedMethod && props.selectedMethod) {\n            switch (props.selectedMethod) {\n              case \"bank\":\n                info.subcaption = `~ 0.75% fee ~\\nKYC REQUIRED`;\n                break;\n              case \"card\":\n                info.subcaption = `~ 3.2% fee ~\\n$250.00/day`;\n                break;\n              default:\n                break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props, globalConfigs, buyParams) => {\n          const env = globalConfigs.payments.providers.wyre.env;\n          const envParams = globalConfigs.payments.providers.wyre.envParams[env];\n          const referrerAccountId = envParams.accountId;\n          const url = \"https://pay.sendwyre.com/purchase\";\n\n          const params = {\n            dest: `ethereum:${props.account}`,\n            destCurrency: buyParams.selectedToken ? buyParams.selectedToken : props.tokenConfig.wyre && props.tokenConfig.wyre.destCurrency ? props.tokenConfig.wyre.destCurrency : props.selectedToken,\n            referrerAccountId,\n            redirectUrl: globalConfigs.baseURL\n            // failureRedirectUrl:globalConfigs.baseURL\n          };\n\n          return (\n            `${url}?` +\n            Object.keys(params)\n              .map(\n                k => encodeURIComponent(k) + \"=\" + encodeURIComponent(params[k])\n              )\n              .join(\"&\")\n          );\n        },\n        render: (initParams, amount, props, globalConfigs) => {\n          const wyreWidget = document.getElementById(\"wyre-widget\");\n          if (!wyreWidget) {\n            const iframeBox = document.createElement(\"div\");\n            iframeBox.innerHTML = `\n              <div id=\"wyre-widget\" class=\"wyre-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                <div id=\"wyre-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\"></div>\n                <a class=\"wyre-close-button\" href=\"javascript:void(0);\" onclick=\"document.getElementById('wyre-widget').remove();\" style=\"position:absolute;width:30px;height:30px;top:10px;right:10px;font-size:22px;line-height:30px;text-align:center;color:#fff;font-weight:bold;z-index:10;text-decoration:none\">✕</a>\n                <div id=\"wyre-widget-container\" style=\"position:relative;z-index:2;width:400px;height:650px\">\n                  <iframe\n                    style=\"position:relative;z-index:2;\"\n                    frameborder=\"0\"\n                    height=\"100%\"\n                    src=\"${initParams}\"\n                    width=\"100%\"\n                  >\n                    <p>Your browser does not support iframes.</p>\n                  </iframe>\n                  <div id=\"wyre-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                    <div style=\"display:flex;flex-direction:row;align-items:center\">\n                      <img src=\"${globalConfigs.payments.providers.wyre.imageSrc}\" style=\"height:50px;\" />\n                      <h3 style=\"font-weight:600;font-style:italic;color:#000;padding-left:10px\">is loading...</h3>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            `;\n            document.body.appendChild(iframeBox);\n\n            // Add wyre Widget style (mobile)\n            if (!document.getElementById(\"wyreWidget_style\")) {\n              const wyreStyle = document.createElement(\"style\");\n              wyreStyle.id = \"wyreWidget_style\";\n              wyreStyle.innerHTML = `\n              @media (max-width: 40em){\n                #wyre-widget {\n                  align-items: flex-start !important;\n                }\n                #wyre-widget-overlay{\n                  background:#fff !important;\n                }\n                #wyre-widget-container{\n                  width:100vw;\n                  min-height: calc( 100vh - 60px ) !important;\n                }\n              }`;\n              document.body.appendChild(wyreStyle);\n            }\n          }\n        }\n      },\n      ramp: {\n        enabled: true,\n        imageSrc: \"images/payments/ramp.png\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: `~ 2.5% fee ~\\nEUR / GBP`,\n        supportedMethods: [\"bank\", \"card\"],\n        badge: {\n          text: \"NO ID REQUIRED\",\n          color: \"#fff\",\n          bgColor: \"#0cade4\"\n        },\n        supportedTokens: [\"ETH\", \"DAI\", \"USDC\"],\n        supportedCountries: [\n          \"USA\",\n          \"GBR\",\n          \"AUS\",\n          \"BRA\",\n          \"CAN\",\n          \"EUR\",\n          \"HKG\",\n          \"IND\",\n          \"MEX\",\n          \"RUS\",\n          \"ZAF\",\n          \"KOR\"\n        ],\n        getInfo: props => {\n          const info = {};\n          switch (props.selectedMethod) {\n            case \"bank\":\n              info.supportedCountries = [\"GBR\", \"EUR\"];\n              info.subcaption = `~ 1.49-1.99% fee ~`;\n              break;\n            case \"card\":\n              info.supportedCountries = [\n                \"USA\",\n                \"GBR\",\n                \"AUS\",\n                \"BRA\",\n                \"CAN\",\n                \"EUR\",\n                \"HKG\",\n                \"IND\",\n                \"MEX\",\n                \"RUS\",\n                \"ZAF\",\n                \"KOR\"\n              ];\n              info.subcaption = `~ 2.90% fee ~`;\n              break;\n            default:\n              break;\n          }\n          return info;\n        },\n        getInitParams: (props, globalConfigs, buyParams) => {\n          return {\n            hostAppName: \"Idle\",\n            userAddress: props.account,\n            hostApiKey: env.REACT_APP_RAMP_KEY,\n            variant: props.isMobile ? \"mobile\" : \"desktop\",\n            hostLogoUrl: `${globalConfigs.baseURL}/images/idle-round.png`,\n            swapAsset: buyParams.selectedToken\n              ? buyParams.selectedToken\n              : props.tokenConfig.ramp && props.tokenConfig.ramp.swapAsset\n                ? props.tokenConfig.ramp.swapAsset\n                : props.selectedToken\n          };\n        },\n        render: (initParams, amount, props, globalConfigs) => {\n          new RampInstantSDK(initParams)\n            .on(\"*\", async event => {\n              const functionsUtil = new FunctionsUtil(props);\n              let tokenDecimals = null;\n              let tokenAmount = null;\n\n              switch (event.type) {\n                case \"PURCHASE_SUCCESSFUL\":\n                  // Update balance\n                  props.getAccountBalance();\n\n                  tokenDecimals = await props.getTokenDecimals();\n\n                  tokenAmount = event.payload.purchase.tokenAmount;\n                  tokenAmount = functionsUtil\n                    .BNify(tokenAmount.toString())\n                    .div(\n                      functionsUtil.BNify(\n                        Math.pow(10, parseInt(tokenDecimals)).toString()\n                      )\n                    )\n                    .toString();\n\n                  // Toast message\n                  window.toastProvider.addMessage(`Payment completed`, {\n                    secondaryMessage: `${tokenAmount} ${props.selectedToken} are now in your wallet`,\n                    colorTheme: \"light\",\n                    actionHref: \"\",\n                    actionText: \"\",\n                    variant: \"success\"\n                  });\n\n                  break;\n                default:\n                  break;\n              }\n            })\n            .show();\n        }\n      },\n      transak: {\n        enabled: true,\n        imageSrc: \"images/payments/transak.png\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: `~ 1.5% fee ~\\nALL CURRENCIES`,\n        supportedMethods: [\"bank\", \"card\"],\n        supportedCountries: [\n          \"USA\",\n          \"GBR\",\n          \"AUS\",\n          \"BRA\",\n          \"CHN\",\n          \"MEX\",\n          \"EUR\",\n          \"IND\"\n        ],\n        supportedTokens: [\"ETH\", \"DAI\", \"USDC\", \"USDT\", \"TUSD\", \"SUSD\", \"WBTC\"],\n        remoteResources: { \"https://global.transak.com/v1/widget.js\": {} },\n        env: \"prod\",\n        badge: {\n          text: \"INSTANT\",\n          bgColor: \"#0069ee\"\n        },\n        envParams: {\n          test: {\n            apiKey: env.REACT_APP_TRANSAK_KEY_TEST,\n            url: \"https://global.transak.com\"\n          },\n          prod: {\n            apiKey: env.REACT_APP_TRANSAK_KEY_PROD,\n            url: \"https://global.transak.com\"\n          }\n        },\n        getInfo: props => {\n          const info = {};\n\n          const selectedMethod = props.selectedMethod && props.selectedMethod;\n          let fee = selectedMethod === \"bank\" ? \"1.5%\" : \"4.5%\";\n\n          if (props.selectedCountry && props.selectedCountry.value) {\n            switch (props.selectedCountry.value.toUpperCase()) {\n              case \"GBR\":\n                info.badge = {\n                  text: \"INSTANT\",\n                  bgColor: \"#0069ee\"\n                };\n                info.subcaption = `~ ${fee} fee ~\\nGBP ONLY`;\n                break;\n              case \"IND\":\n                fee = \"1.0%\";\n                info.badge = {\n                  text: \"INSTANT\",\n                  bgColor: \"#0069ee\"\n                };\n                info.subcaption = `~ ${fee} fee ~\\nINR ONLY`;\n                break;\n              case \"EUR\":\n                if (selectedMethod === \"bank\") {\n                  info.badge = {\n                    text: \"SEPA\",\n                    color: \"#f7cb05 \",\n                    bgColor: \"#10288a\"\n                  };\n                } else {\n                  info.badge = {\n                    text: \"INSTANT\",\n                    bgColor: \"#0069ee\"\n                  };\n                }\n                info.subcaption = `~ ${fee} fee ~\\nEUR ONLY`;\n                break;\n              default:\n                break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props, globalConfigs, buyParams) => {\n          const env = globalConfigs.payments.providers.transak.env;\n          const envParams =\n            globalConfigs.payments.providers.transak.envParams[env];\n\n          let fiatCurrency = null;\n\n          if (buyParams.selectedCountry && buyParams.selectedCountry.value) {\n            switch (buyParams.selectedCountry.value.toUpperCase()) {\n              case \"IND\":\n                fiatCurrency = \"INR\";\n                break;\n              case \"GBR\":\n                fiatCurrency = \"GBP\";\n                break;\n              case \"EUR\":\n                fiatCurrency = \"EUR\";\n                break;\n              case \"USA\":\n                fiatCurrency = \"USD\";\n                break;\n              default:\n                fiatCurrency = \"GBP\";\n                break;\n            }\n          }\n\n          let cryptoCurrencyCode = buyParams.selectedToken\n            ? buyParams.selectedToken.toLowerCase()\n            : props.tokenConfig.transak &&\n              props.tokenConfig.transak.currencyCode\n              ? props.tokenConfig.transak.currencyCode\n              : props.selectedToken;\n          cryptoCurrencyCode = cryptoCurrencyCode.toUpperCase();\n\n          const apiKey = envParams.apiKey;\n          const walletAddress = props.account;\n          const partnerCustomerId = props.account;\n          const disableWalletAddressForm = false;\n\n          return {\n            apiKey,\n            cryptoCurrencyCode,\n            walletAddress,\n            fiatCurrency,\n            partnerCustomerId,\n            disableWalletAddressForm,\n            width: \"100%\",\n            height: \"100%\"\n            // email,\n          };\n        },\n        render: (initParams, amount, props, globalConfigs) => {\n          if (window.transakGlobal) {\n            const transakWidget = document.getElementById(\"transak-widget\");\n            if (!transakWidget) {\n              const iframeBox = document.createElement(\"div\");\n              iframeBox.innerHTML = `\n                <div id=\"transak-widget\" class=\"transak-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                  <div id=\"transak-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\" onclick=\"document.getElementById('transak-widget').remove();\"></div>\n                  <a class=\"transak-close-button\" href=\"javascript:void(0);\" onclick=\"document.getElementById('transak-widget').remove();\" style=\"position:absolute;width:30px;height:30px;top:10px;right:10px;font-size:22px;line-height:30px;text-align:center;color:#fff;font-weight:bold;z-index:10;text-decoration:none\">✕</a>\n                  <div class=\"transak-widget-container\" style=\"position:relative;z-index:2;width:500px;height:550px\">\n                    <div id=\"transak-widget-container\" style=\"position:relative;z-index:2;width:500px;height:550px\"></div>\n                    <div id=\"transak-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                      <div style=\"display:flex;flex-direction:row;align-items:center\">\n                        <img src=\"${globalConfigs.payments.providers.transak.imageSrc}\" style=\"height:50px;\" />\n                        <h3 style=\"font-weight:600;font-style:italic;color:#0040ca\">is loading...</h3>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              `;\n              document.body.appendChild(iframeBox);\n\n              // Add transak Widget style (mobile)\n              if (!document.getElementById(\"transakWidget_style\")) {\n                const transakStyle = document.createElement(\"style\");\n                transakStyle.id = \"transakWidget_style\";\n                transakStyle.innerHTML = `\n                @media (max-width: 40em){\n                  #transak-widget {\n                    align-items: flex-start !important;\n                  }\n                  #transak-widget-overlay{\n                    background:#fff !important;\n                  }\n                  #transak-widget-container{\n                    width:100vw;\n                    min-height: calc( 100vh - 60px ) !important;\n                  }\n                }`;\n                document.body.appendChild(transakStyle);\n              }\n            }\n\n            window.transakGlobal.render(initParams, \"transak-widget-container\");\n          }\n        }\n      },\n      moonpay: {\n        enabled: true,\n        imageSrc: \"images/payments/moonpay.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 4.5% fee ~\",\n        supportedMethods: [\"card\", \"bank\"],\n        supportedCountries: [\n          \"GBR\",\n          \"EUR\",\n          \"AUS\",\n          \"BRA\",\n          \"CHN\",\n          \"MEX\",\n          \"CAN\",\n          \"HKG\",\n          \"RUS\",\n          \"ZAF\",\n          \"KOR\"\n        ],\n        supportedTokens: [\"USDC\", \"DAI\", \"ETH\"],\n        env: \"prod\",\n        envParams: {\n          test: {\n            url: \"https://buy-staging.moonpay.io\",\n            apiKey: env.REACT_APP_MOONPAY_KEY_TEST\n          },\n          prod: {\n            url: \"https://buy.moonpay.io\",\n            apiKey: env.REACT_APP_MOONPAY_KEY_PROD\n          }\n        },\n        getInfo: props => {\n          const info = {};\n          if (props.selectedMethod && props.selectedMethod) {\n            switch (props.selectedMethod) {\n              case \"bank\":\n                if (props.selectedCountry && props.selectedCountry.value) {\n                  switch (props.selectedCountry.value.toUpperCase()) {\n                    case \"EUR\":\n                      info.badge = {\n                        text: \"SEPA\",\n                        color: \"#f7cb05 \",\n                        bgColor: \"#10288a\"\n                      };\n                      info.subcaption = `~ 1.5% fee ~\\nEUR ONLY`;\n                      break;\n                    case \"GBR\":\n                      info.badge = {\n                        text: \"GBP\"\n                      };\n                      info.subcaption = `~ 1.5% fee ~\\nGBP ONLY`;\n                      break;\n                    default:\n                      info.badge = null;\n                      info.subcaption = `~ 1.5% fee ~\\nEUR/GBP ONLY`;\n                      break;\n                  }\n                }\n                break;\n              case \"card\":\n                info.badge = null;\n                info.subcaption = `~ 5% fee ~`;\n                break;\n              default:\n                break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props, globalConfigs, buyParams) => {\n          const env = globalConfigs.payments.providers.moonpay.env;\n          const envParams =\n            globalConfigs.payments.providers.moonpay.envParams[env];\n          const apiKey = envParams.apiKey;\n          const params = {\n            apiKey,\n            currencyCode: buyParams.selectedToken\n              ? buyParams.selectedToken.toLowerCase()\n              : props.tokenConfig.moonpay &&\n                props.tokenConfig.moonpay.currencyCode\n                ? props.tokenConfig.moonpay.currencyCode\n                : props.selectedToken.toLowerCase(),\n            walletAddress: props.account,\n            baseCurrencyCode: \"USD\",\n            showWalletAddressForm: true\n          };\n\n          const methods = {\n            bank: {\n              GBR: \"gbp_bank_transfer\",\n              EUR: \"sepa_bank_transfer\"\n            },\n            card: \"credit_debit_card\"\n          };\n\n          const selectedCountry =\n            buyParams.selectedCountry && buyParams.selectedCountry.value\n              ? buyParams.selectedCountry.value.toUpperCase()\n              : null;\n\n          // Set payment method\n          if (buyParams.selectedMethod) {\n            switch (buyParams.selectedMethod) {\n              case \"bank\":\n                params.enabledPaymentMethods =\n                  methods[buyParams.selectedMethod][\"EUR\"];\n                switch (selectedCountry) {\n                  case \"GBR\":\n                  case \"EUR\":\n                    params.enabledPaymentMethods =\n                      methods[buyParams.selectedMethod][selectedCountry];\n                    break;\n                  default:\n                    params.enabledPaymentMethods = Object.values(\n                      methods[buyParams.selectedMethod]\n                    ).join(\",\");\n                    break;\n                }\n                break;\n              case \"card\":\n              default:\n                params.enabledPaymentMethods =\n                  methods[buyParams.selectedMethod];\n                break;\n            }\n          }\n\n          // Set baseCurrencyCode\n          switch (selectedCountry) {\n            case \"GBR\":\n              params.baseCurrencyCode = \"GBP\";\n              break;\n            case \"EUR\":\n              params.baseCurrencyCode = \"EUR\";\n              break;\n            default:\n              params.baseCurrencyCode = \"USD\";\n              break;\n          }\n\n          let url = envParams.url;\n\n          // Safari Fix\n          var isSafari = navigator.userAgent.indexOf(\"Safari\") > -1;\n          if (isSafari) {\n            if (\n              !document.cookie.match(\n                /^(.*;)?\\s*moonpay-fixed\\s*=\\s*[^;]+(.*)?$/\n              )\n            ) {\n              document.cookie =\n                \"moonpay-fixed=fixed; expires=Tue, 19 Jan 2038 03:14:07 UTC; path=/\";\n              url += \"/safari_fix\";\n            }\n          }\n\n          return (\n            `${url}?` +\n            Object.keys(params)\n              .map(\n                k => encodeURIComponent(k) + \"=\" + encodeURIComponent(params[k])\n              )\n              .join(\"&\")\n          );\n        },\n        render: (initParams, amount, props, globalConfigs) => {\n          const moonpayWidget = document.getElementById(\"moonpay-widget\");\n          if (!moonpayWidget) {\n            const iframeBox = document.createElement(\"div\");\n            iframeBox.innerHTML = `\n              <div id=\"moonpay-widget\" class=\"moonpay-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                <div id=\"moonpay-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\"></div>\n                  <div id=\"moonpay-widget-container\" style=\"position:relative;z-index:2;width:500px;height:490px\">\n                    <iframe\n                      style=\"position:relative;z-index:2;\"\n                      frameborder=\"0\"\n                      height=\"100%\"\n                      src=\"${initParams}\"\n                      width=\"100%\"\n                    >\n                      <p>Your browser does not support iframes.</p>\n                    </iframe>\n                    <div id=\"moonpay-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                      <div style=\"display:flex;flex-direction:row;align-items:end\">\n                        <img src=\"${globalConfigs.payments.providers.moonpay.imageSrc}\" style=\"height:50px;\" />\n                        <h3 style=\"padding-left:5px;font-weight:600;font-style:italic;\">is loading...</h3>\n                      </div>\n                    </div>\n                    <div id=\"moonpay-widget-footer\" style=\"position:relative;display:flex;justify-content:center;align-items:center;padding:8px 16px;width:100%;background:#fff;top:-20px;z-index:3\">\n                      <button style=\"background:#000;color:#fff;text-align:center;border-radius:5px;width:100%;height:51px;line-height:51px;font-weight:500;border:0;cursor:pointer\" onclick=\"document.getElementById('moonpay-widget').remove();\">Close</button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            `;\n            document.body.appendChild(iframeBox);\n\n            // Add Moonpay Widget style (mobile)\n            if (!document.getElementById(\"moonpayWidget_style\")) {\n              const moonpayStyle = document.createElement(\"style\");\n              moonpayStyle.id = \"moonpayWidget_style\";\n              moonpayStyle.innerHTML = `\n              @media (max-width: 40em){\n                #moonpay-widget {\n                  align-items: flex-start !important;\n                }\n                #moonpay-widget-overlay{\n                  background:#fff !important;\n                }\n                #moonpay-widget-container{\n                  width:100vw;\n                  min-height: calc( 100vh - 60px ) !important;\n                }\n              }`;\n              document.body.appendChild(moonpayStyle);\n            }\n          }\n        }\n      },\n      zeroExInstant: {\n        enabled: true,\n        imageSrc: \"images/payments/zeroexinstant.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0.25% fee ~\",\n        supportedMethods: [\"wallet\"],\n        supportedTokens: [\"USDC\", \"DAI\"],\n        remoteResources: { \"https://instant.0x.org/v3/instant.js\": {} },\n        getInitParams: (\n          props,\n          globalConfigs,\n          buyParams,\n          onSuccess,\n          onClose\n        ) => {\n          const tokenParams = globalConfigs.tokens[buyParams.selectedToken];\n          const connectorName = window.RimbleWeb3_context\n            ? window.RimbleWeb3_context.connectorName\n            : null;\n\n          if (!tokenParams.zeroExInstant) {\n            return null;\n          }\n\n          return {\n            networkId: globalConfigs.network.requiredNetwork,\n            chainId: globalConfigs.network.requiredNetwork,\n            provider:\n              connectorName &&\n                connectorName !== \"Injected\" &&\n                window.RimbleWeb3_context.connector[connectorName.toLowerCase()]\n                ? window.RimbleWeb3_context.connector[\n                  window.RimbleWeb3_context.connectorName.toLowerCase()\n                ].provider\n                : window.ethereum,\n            orderSource: tokenParams.zeroExInstant.orderSource,\n            affiliateInfo: tokenParams.zeroExInstant.affiliateInfo,\n            defaultSelectedAssetData: tokenParams.zeroExInstant.assetData,\n            availableAssetDatas: [tokenParams.zeroExInstant.assetData],\n            shouldDisableAnalyticsTracking: true,\n            onSuccess: onSuccess ? onSuccess : () => { },\n            onClose: onClose ? onClose : () => { }\n          };\n        },\n        render: (initParams, amount) => {\n          if (window.zeroExInstant && initParams) {\n            if (amount) {\n              initParams.defaultAssetBuyAmount = parseFloat(amount);\n            }\n            window.zeroExInstant.render(initParams, \"body\");\n          }\n        }\n      },\n      kyberSwap: {\n        enabled: true,\n        imageSrc: \"images/payments/kyber.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Swap with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0.25% fee ~\",\n        supportedMethods: [\"wallet\"],\n        supportedTokens: [\n          \"WETH\",\n          \"USDC\",\n          \"DAI\",\n          \"USDT\",\n          \"TUSD\",\n          \"SUSD\",\n          \"WBTC\",\n          \"RAI\",\n          \"FEI\"\n        ],\n        web3Subscription: {\n          // Data for web3 subscription\n          enabled: true,\n          contractAddress: \"0x818e6fecd516ecc3849daf6845e3ec868087b755\",\n          decodeLogsData: [\n            {\n              internalType: \"address\",\n              name: \"_startAddress\",\n              type: \"address\"\n            },\n            {\n              internalType: \"address\",\n              name: \"_tokenAddress\",\n              type: \"address\"\n            },\n            {\n              internalType: \"uint256\",\n              name: \"_startAmount\",\n              type: \"uint256\"\n            },\n            {\n              internalType: \"uint256\",\n              name: \"_tokenAmount\",\n              type: \"uint256\"\n            }\n          ]\n        },\n        remoteResources: {\n          \"https://widget.kyber.network/v0.7.5/widget.css\": {},\n          \"https://widget.kyber.network/v0.7.5/widget.js\": {\n            parentElement: document.body,\n            precall: (props, globalConfigs, providerInfo) => {\n              // Remove previous elements\n              const buttons = document.querySelectorAll(\".kyber-widget-button\");\n              for (let i = 0; i < buttons.length; i++) {\n                buttons[i].remove();\n              }\n\n              // const kyberWidgetScript = document.getElementById('kyber-widget-script');\n              // if (kyberWidgetScript){\n              //   kyberWidgetScript.remove();\n              // }\n\n              const scripts = document.querySelectorAll(\".script_kyberSwap\");\n              for (let i = 0; i < scripts.length; i++) {\n                scripts[i].remove();\n              }\n\n              const buttonId = props.buttonId\n                ? props.buttonId\n                : `kyber-swapper-${props.selectedToken}`;\n              if (!document.getElementById(buttonId)) {\n                const a = document.createElement(\"a\");\n                a.id = buttonId;\n                a.href = providerInfo.getInitParams(props, globalConfigs);\n                a.target = \"_blank\";\n                a.rel = \"nofollow noopener noreferrer\";\n                a.className = \"kyber-widget-button theme-ocean theme-supported\";\n                a.title = \"Swap with Kyber\";\n                a.style = \"display:none;\";\n                document.body.appendChild(a);\n              }\n            }\n          }\n        },\n        getInitParams: (props, globalConfigs, buyParams = null) => {\n          const baseToken = props.baseToken ? props.baseToken : \"ETH\";\n          const params = {\n            lang: \"en\",\n            type: \"swap\",\n            mode: \"iframe\",\n            theme: \"theme-ocean\",\n            paramForwarding: true,\n            // callback:globalConfigs.baseURL,\n            pinnedTokens: `${baseToken}_${props.selectedToken}`,\n            title: `Swap ${baseToken} for ${props.selectedToken}`,\n            defaultPair: `${baseToken}_${props.selectedToken}`,\n            commissionId: \"0x4215606a720477178AdFCd5A59775C63138711e8\",\n            network:\n              globalConfigs.network.requiredNetwork === 1 ? \"mainnet\" : \"test\"\n          };\n\n          const url = \"https://widget.kyber.network/v0.7.5/\";\n\n          return (\n            `${url}?` +\n            Object.keys(params)\n              .map(\n                k => encodeURIComponent(k) + \"=\" + encodeURIComponent(params[k])\n              )\n              .join(\"&\")\n          );\n        },\n        render: (initParams, amount, props) => {\n          const buttonId = props.buttonId\n            ? props.buttonId\n            : `kyber-swapper-${props.selectedToken}`;\n          const a = document.getElementById(buttonId);\n          if (a) {\n            a.click();\n\n            // Observe for pending transaction\n            /*\n            if (window.MutationObserver){\n              setTimeout(() => {\n\n                const observer = new window.MutationObserver(function(mutations) {\n                  mutations.forEach((m,i) => {\n                    if (m.addedNodes.length && m.target.className === 'kyber_widget-broadcast'){\n\n                      // Show persistent toast message\n                      window.showToastMessage({\n                        variant:'processing',\n                        message:'Pending deposit',\n                        secondaryMessage:'kyberSwap is processing your request'\n                      });\n\n                      observer.disconnect();\n                    } else if (m.target.id === 'kyber-widget' && m.removedNodes.length && m.removedNodes[0].firstChild.className.includes('kyber_widget-widget-container')) {\n                      observer.disconnect();\n                    }\n                  });\n                });\n                const target = document.querySelector('#kyber-widget');\n                observer.observe(target, { childList: true, subtree: true });\n              },1000);\n            }\n            */\n          }\n        }\n      },\n      airSwap: {\n        enabled: false,\n        imageSrc: \"images/payments/airswap.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0% fee ~\",\n        supportedMethods: [\"wallet\"],\n        supportedTokens: [\"USDC\", \"DAI\"],\n        env: \"production\",\n        remoteResources: {\n          \"https://cdn.airswap.io/airswap-instant-widget.js\": {}\n        },\n        getInitParams: (\n          props,\n          globalConfigs,\n          buyParams,\n          onComplete,\n          onClose\n        ) => {\n          return {\n            env: \"production\",\n            mode: \"buy\",\n            token: props.tokenConfig.address,\n            baseToken: \"ETH\",\n            onComplete: onComplete ? onComplete : () => { },\n            onClose: onClose ? onClose : () => { }\n          };\n        },\n        render: (initParams, amount, props) => {\n          if (window.AirSwapInstant) {\n            if (amount) {\n              initParams.amount = amount.toString();\n            }\n            window.AirSwapInstant.render(initParams, \"body\");\n          }\n        }\n      },\n      totle: {\n        enabled: false,\n        imageSrc: \"images/payments/totle.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0% fee ~\",\n        supportedMethods: [\"wallet\"],\n        supportedTokens: [\"USDC\", \"DAI\"],\n        env: \"production\",\n        remoteResources: { \"https://widget.totle.com/latest/dist.js\": {} },\n        getInitParams: (\n          props,\n          globalConfigs,\n          buyParams,\n          onComplete,\n          onClose\n        ) => {\n          return {\n            sourceAssetAddress: null,\n            sourceAmountDecimal: null,\n            destinationAssetAddress: null,\n            destinationAmountDecimal: null,\n            apiKey: null,\n            partnerContractAddress: null\n          };\n        },\n        render: (initParams, amount, props) => {\n          if (window.TotleWidget) {\n            const nodeId = \"totle-widget\";\n            if (!document.getElementById(nodeId)) {\n              const totleWidgetContainer = document.createElement(\"div\");\n              totleWidgetContainer.id = nodeId;\n              document.body.appendChild(totleWidgetContainer);\n            }\n\n            window.TotleWidget.default.run(\n              initParams,\n              document.getElementById(nodeId)\n            );\n          }\n        }\n      }\n    }\n  }\n};\n\nexport default globalConfigs;\n","var map = {\n\t\"./mainnet/v1/index.json\": 1876,\n\t\"./testnet/mumbai/index.json\": 1877\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 4440;","var map = {\n\t\"./mainnet/v1/artifacts/fx-portal/FxChild.json\": 4442,\n\t\"./mainnet/v1/artifacts/fx-portal/FxERC1155ChildTunnel.json\": 4443,\n\t\"./mainnet/v1/artifacts/fx-portal/FxERC1155RootTunnel.json\": 4444,\n\t\"./mainnet/v1/artifacts/fx-portal/FxERC20ChildToken.json\": 4445,\n\t\"./mainnet/v1/artifacts/fx-portal/FxERC20ChildTunnel.json\": 4446,\n\t\"./mainnet/v1/artifacts/fx-portal/FxERC20RootToken.json\": 4447,\n\t\"./mainnet/v1/artifacts/fx-portal/FxERC20RootTunnel.json\": 4448,\n\t\"./mainnet/v1/artifacts/fx-portal/FxERC721ChildTunnel.json\": 4449,\n\t\"./mainnet/v1/artifacts/fx-portal/FxERC721RootTunnel.json\": 4450,\n\t\"./mainnet/v1/artifacts/fx-portal/FxRoot.json\": 4451,\n\t\"./mainnet/v1/artifacts/genesis/BorValidatorSet.json\": 4452,\n\t\"./mainnet/v1/artifacts/genesis/IStateReceiver.json\": 4453,\n\t\"./mainnet/v1/artifacts/genesis/Migrations.json\": 4454,\n\t\"./mainnet/v1/artifacts/genesis/StateReceiver.json\": 4455,\n\t\"./mainnet/v1/artifacts/genesis/System.json\": 4456,\n\t\"./mainnet/v1/artifacts/genesis/TestBorValidatorSet.json\": 4457,\n\t\"./mainnet/v1/artifacts/genesis/TestCommitState.json\": 4458,\n\t\"./mainnet/v1/artifacts/genesis/TestStateReceiver.json\": 4459,\n\t\"./mainnet/v1/artifacts/genesis/TestSystem.json\": 4460,\n\t\"./mainnet/v1/artifacts/genesis/ValidatorSet.json\": 4461,\n\t\"./mainnet/v1/artifacts/genesis/ValidatorVerifier.json\": 4462,\n\t\"./mainnet/v1/artifacts/plasma/BaseERC20.json\": 4463,\n\t\"./mainnet/v1/artifacts/plasma/ChainIdMixin.json\": 4464,\n\t\"./mainnet/v1/artifacts/plasma/ChildChain.json\": 4465,\n\t\"./mainnet/v1/artifacts/plasma/ChildERC20.json\": 4466,\n\t\"./mainnet/v1/artifacts/plasma/ChildERC20Proxified.json\": 4467,\n\t\"./mainnet/v1/artifacts/plasma/ChildERC721.json\": 4468,\n\t\"./mainnet/v1/artifacts/plasma/ChildERC721Mintable.json\": 4469,\n\t\"./mainnet/v1/artifacts/plasma/ChildERC721Proxified.json\": 4470,\n\t\"./mainnet/v1/artifacts/plasma/ChildToken.json\": 4471,\n\t\"./mainnet/v1/artifacts/plasma/ChildTokenProxy.json\": 4472,\n\t\"./mainnet/v1/artifacts/plasma/Common.json\": 4473,\n\t\"./mainnet/v1/artifacts/plasma/ContractReceiver.json\": 4474,\n\t\"./mainnet/v1/artifacts/plasma/ContractWitRevertingFallback.json\": 4475,\n\t\"./mainnet/v1/artifacts/plasma/ContractWithFallback.json\": 4476,\n\t\"./mainnet/v1/artifacts/plasma/ContractWithoutFallback.json\": 4477,\n\t\"./mainnet/v1/artifacts/plasma/DelegateProxy.json\": 4478,\n\t\"./mainnet/v1/artifacts/plasma/DepositManager.json\": 4479,\n\t\"./mainnet/v1/artifacts/plasma/DepositManagerHeader.json\": 4480,\n\t\"./mainnet/v1/artifacts/plasma/DepositManagerProxy.json\": 4481,\n\t\"./mainnet/v1/artifacts/plasma/DepositManagerStorage.json\": 4482,\n\t\"./mainnet/v1/artifacts/plasma/DrainStakeManager.json\": 4483,\n\t\"./mainnet/v1/artifacts/plasma/Drainable.json\": 4484,\n\t\"./mainnet/v1/artifacts/plasma/ECVerify.json\": 4485,\n\t\"./mainnet/v1/artifacts/plasma/ERC165.json\": 4486,\n\t\"./mainnet/v1/artifacts/plasma/ERC20.json\": 4487,\n\t\"./mainnet/v1/artifacts/plasma/ERC20Detailed.json\": 4488,\n\t\"./mainnet/v1/artifacts/plasma/ERC20Mintable.json\": 4489,\n\t\"./mainnet/v1/artifacts/plasma/ERC20NonTransferable.json\": 4490,\n\t\"./mainnet/v1/artifacts/plasma/ERC20Predicate.json\": 4491,\n\t\"./mainnet/v1/artifacts/plasma/ERC20PredicateBurnOnly.json\": 4492,\n\t\"./mainnet/v1/artifacts/plasma/ERC721.json\": 4493,\n\t\"./mainnet/v1/artifacts/plasma/ERC721Enumerable.json\": 4494,\n\t\"./mainnet/v1/artifacts/plasma/ERC721Full.json\": 4495,\n\t\"./mainnet/v1/artifacts/plasma/ERC721Metadata.json\": 4496,\n\t\"./mainnet/v1/artifacts/plasma/ERC721MetadataMintable.json\": 4497,\n\t\"./mainnet/v1/artifacts/plasma/ERC721Mintable.json\": 4498,\n\t\"./mainnet/v1/artifacts/plasma/ERC721PlasmaMintable.json\": 4499,\n\t\"./mainnet/v1/artifacts/plasma/ERC721Predicate.json\": 4500,\n\t\"./mainnet/v1/artifacts/plasma/ERC721PredicateBurnOnly.json\": 4501,\n\t\"./mainnet/v1/artifacts/plasma/ERCProxy.json\": 4502,\n\t\"./mainnet/v1/artifacts/plasma/ExitNFT.json\": 4503,\n\t\"./mainnet/v1/artifacts/plasma/FallbackManager.json\": 4504,\n\t\"./mainnet/v1/artifacts/plasma/GnosisSafe.json\": 4505,\n\t\"./mainnet/v1/artifacts/plasma/GnosisSafeProxy.json\": 4506,\n\t\"./mainnet/v1/artifacts/plasma/Governable.json\": 4507,\n\t\"./mainnet/v1/artifacts/plasma/Governance.json\": 4508,\n\t\"./mainnet/v1/artifacts/plasma/GovernanceLockable.json\": 4509,\n\t\"./mainnet/v1/artifacts/plasma/GovernanceLockableTest.json\": 4510,\n\t\"./mainnet/v1/artifacts/plasma/GovernanceProxy.json\": 4511,\n\t\"./mainnet/v1/artifacts/plasma/IDepositManager.json\": 4512,\n\t\"./mainnet/v1/artifacts/plasma/IERC165.json\": 4513,\n\t\"./mainnet/v1/artifacts/plasma/IERC20.json\": 4514,\n\t\"./mainnet/v1/artifacts/plasma/IERC721.json\": 4515,\n\t\"./mainnet/v1/artifacts/plasma/IERC721Enumerable.json\": 4516,\n\t\"./mainnet/v1/artifacts/plasma/IERC721Metadata.json\": 4517,\n\t\"./mainnet/v1/artifacts/plasma/IERC721Receiver.json\": 4518,\n\t\"./mainnet/v1/artifacts/plasma/IErcPredicate.json\": 4519,\n\t\"./mainnet/v1/artifacts/plasma/IGovernance.json\": 4520,\n\t\"./mainnet/v1/artifacts/plasma/IParentToken.json\": 4521,\n\t\"./mainnet/v1/artifacts/plasma/IPredicate.json\": 4522,\n\t\"./mainnet/v1/artifacts/plasma/IRootChain.json\": 4523,\n\t\"./mainnet/v1/artifacts/plasma/ISignatureValidator.json\": 4524,\n\t\"./mainnet/v1/artifacts/plasma/ISlashingManager.json\": 4525,\n\t\"./mainnet/v1/artifacts/plasma/IStakeManager.json\": 4526,\n\t\"./mainnet/v1/artifacts/plasma/IStakeManagerLocal.json\": 4527,\n\t\"./mainnet/v1/artifacts/plasma/IValidatorShare.json\": 4528,\n\t\"./mainnet/v1/artifacts/plasma/IWithdrawManager.json\": 4529,\n\t\"./mainnet/v1/artifacts/plasma/LibEIP712Domain.json\": 4530,\n\t\"./mainnet/v1/artifacts/plasma/LibTokenTransferOrder.json\": 4531,\n\t\"./mainnet/v1/artifacts/plasma/Lockable.json\": 4532,\n\t\"./mainnet/v1/artifacts/plasma/MRC20.json\": 4533,\n\t\"./mainnet/v1/artifacts/plasma/Marketplace.json\": 4534,\n\t\"./mainnet/v1/artifacts/plasma/MarketplacePredicate.json\": 4535,\n\t\"./mainnet/v1/artifacts/plasma/MarketplacePredicateTest.json\": 4536,\n\t\"./mainnet/v1/artifacts/plasma/MarketplaceToken.json\": 4537,\n\t\"./mainnet/v1/artifacts/plasma/MasterCopy.json\": 4538,\n\t\"./mainnet/v1/artifacts/plasma/MaticWETH.json\": 4539,\n\t\"./mainnet/v1/artifacts/plasma/Merkle.json\": 4540,\n\t\"./mainnet/v1/artifacts/plasma/Migrations.json\": 4541,\n\t\"./mainnet/v1/artifacts/plasma/MintableERC721Predicate.json\": 4542,\n\t\"./mainnet/v1/artifacts/plasma/MinterRole.json\": 4543,\n\t\"./mainnet/v1/artifacts/plasma/Module.json\": 4544,\n\t\"./mainnet/v1/artifacts/plasma/ModuleManager.json\": 4545,\n\t\"./mainnet/v1/artifacts/plasma/Ownable.json\": 4546,\n\t\"./mainnet/v1/artifacts/plasma/OwnableLockable.json\": 4547,\n\t\"./mainnet/v1/artifacts/plasma/OwnerManager.json\": 4548,\n\t\"./mainnet/v1/artifacts/plasma/ParentTokenMock.json\": 4549,\n\t\"./mainnet/v1/artifacts/plasma/PredicateUtils.json\": 4550,\n\t\"./mainnet/v1/artifacts/plasma/PriorityQueue.json\": 4551,\n\t\"./mainnet/v1/artifacts/plasma/Proxy.json\": 4552,\n\t\"./mainnet/v1/artifacts/plasma/ProxyStorage.json\": 4553,\n\t\"./mainnet/v1/artifacts/plasma/ProxyTestImpl.json\": 4554,\n\t\"./mainnet/v1/artifacts/plasma/ProxyTestImplStorageLayoutChange.json\": 4555,\n\t\"./mainnet/v1/artifacts/plasma/Registry.json\": 4556,\n\t\"./mainnet/v1/artifacts/plasma/RootChain.json\": 4557,\n\t\"./mainnet/v1/artifacts/plasma/RootChainHeader.json\": 4558,\n\t\"./mainnet/v1/artifacts/plasma/RootChainProxy.json\": 4559,\n\t\"./mainnet/v1/artifacts/plasma/RootChainStorage.json\": 4560,\n\t\"./mainnet/v1/artifacts/plasma/RootChainable.json\": 4561,\n\t\"./mainnet/v1/artifacts/plasma/RootERC721.json\": 4562,\n\t\"./mainnet/v1/artifacts/plasma/SlashingManager.json\": 4563,\n\t\"./mainnet/v1/artifacts/plasma/StakeManager.json\": 4564,\n\t\"./mainnet/v1/artifacts/plasma/StakeManagerProxy.json\": 4565,\n\t\"./mainnet/v1/artifacts/plasma/StakeManagerStorage.json\": 4566,\n\t\"./mainnet/v1/artifacts/plasma/StakeManagerTest.json\": 4567,\n\t\"./mainnet/v1/artifacts/plasma/StakeManagerTestable.json\": 4568,\n\t\"./mainnet/v1/artifacts/plasma/StakingInfo.json\": 4569,\n\t\"./mainnet/v1/artifacts/plasma/StakingNFT.json\": 4570,\n\t\"./mainnet/v1/artifacts/plasma/StateReceiver.json\": 4571,\n\t\"./mainnet/v1/artifacts/plasma/StateSender.json\": 4572,\n\t\"./mainnet/v1/artifacts/plasma/StateSyncerVerifier.json\": 4573,\n\t\"./mainnet/v1/artifacts/plasma/TestMRC20.json\": 4574,\n\t\"./mainnet/v1/artifacts/plasma/TestToken.json\": 4575,\n\t\"./mainnet/v1/artifacts/plasma/TransferWithSigPredicate.json\": 4576,\n\t\"./mainnet/v1/artifacts/plasma/TransferWithSigUtils.json\": 4577,\n\t\"./mainnet/v1/artifacts/plasma/UpgradableProxy.json\": 4578,\n\t\"./mainnet/v1/artifacts/plasma/ValidatorShare.json\": 4579,\n\t\"./mainnet/v1/artifacts/plasma/ValidatorShareFactory.json\": 4580,\n\t\"./mainnet/v1/artifacts/plasma/ValidatorShareProxy.json\": 4581,\n\t\"./mainnet/v1/artifacts/plasma/ValidatorShareTest.json\": 4582,\n\t\"./mainnet/v1/artifacts/plasma/WETH.json\": 4583,\n\t\"./mainnet/v1/artifacts/plasma/WithdrawManager.json\": 4584,\n\t\"./mainnet/v1/artifacts/plasma/WithdrawManagerHeader.json\": 4585,\n\t\"./mainnet/v1/artifacts/plasma/WithdrawManagerProxy.json\": 4586,\n\t\"./mainnet/v1/artifacts/plasma/WithdrawManagerStorage.json\": 4587,\n\t\"./mainnet/v1/artifacts/pos/AccessControl.json\": 4588,\n\t\"./mainnet/v1/artifacts/pos/AccessControlMixin.json\": 4589,\n\t\"./mainnet/v1/artifacts/pos/ChainConstants.json\": 4590,\n\t\"./mainnet/v1/artifacts/pos/ChildChainManager.json\": 4591,\n\t\"./mainnet/v1/artifacts/pos/ChildChainManagerProxy.json\": 4592,\n\t\"./mainnet/v1/artifacts/pos/ChildERC1155.json\": 4593,\n\t\"./mainnet/v1/artifacts/pos/ChildERC20.json\": 4594,\n\t\"./mainnet/v1/artifacts/pos/ChildERC721.json\": 4595,\n\t\"./mainnet/v1/artifacts/pos/ChildMintableERC721.json\": 4596,\n\t\"./mainnet/v1/artifacts/pos/ChildTunnel.json\": 4597,\n\t\"./mainnet/v1/artifacts/pos/DummyERC1155.json\": 4598,\n\t\"./mainnet/v1/artifacts/pos/DummyERC20.json\": 4599,\n\t\"./mainnet/v1/artifacts/pos/DummyERC721.json\": 4600,\n\t\"./mainnet/v1/artifacts/pos/DummyMintableERC721.json\": 4601,\n\t\"./mainnet/v1/artifacts/pos/DummyStateSender.json\": 4602,\n\t\"./mainnet/v1/artifacts/pos/EIP712Base.json\": 4603,\n\t\"./mainnet/v1/artifacts/pos/ERC1155.json\": 4604,\n\t\"./mainnet/v1/artifacts/pos/ERC1155Predicate.json\": 4605,\n\t\"./mainnet/v1/artifacts/pos/ERC1155PredicateProxy.json\": 4606,\n\t\"./mainnet/v1/artifacts/pos/ERC1155Receiver.json\": 4607,\n\t\"./mainnet/v1/artifacts/pos/ERC165.json\": 4608,\n\t\"./mainnet/v1/artifacts/pos/ERC20.json\": 4609,\n\t\"./mainnet/v1/artifacts/pos/ERC20Predicate.json\": 4610,\n\t\"./mainnet/v1/artifacts/pos/ERC20PredicateProxy.json\": 4611,\n\t\"./mainnet/v1/artifacts/pos/ERC721.json\": 4612,\n\t\"./mainnet/v1/artifacts/pos/ERC721Predicate.json\": 4613,\n\t\"./mainnet/v1/artifacts/pos/ERC721PredicateProxy.json\": 4614,\n\t\"./mainnet/v1/artifacts/pos/EtherPredicate.json\": 4615,\n\t\"./mainnet/v1/artifacts/pos/EtherPredicateProxy.json\": 4616,\n\t\"./mainnet/v1/artifacts/pos/ICheckpointManager.json\": 4617,\n\t\"./mainnet/v1/artifacts/pos/IChildChainManager.json\": 4618,\n\t\"./mainnet/v1/artifacts/pos/IChildToken.json\": 4619,\n\t\"./mainnet/v1/artifacts/pos/IERC1155.json\": 4620,\n\t\"./mainnet/v1/artifacts/pos/IERC1155MetadataURI.json\": 4621,\n\t\"./mainnet/v1/artifacts/pos/IERC1155Receiver.json\": 4622,\n\t\"./mainnet/v1/artifacts/pos/IERC165.json\": 4623,\n\t\"./mainnet/v1/artifacts/pos/IERC20.json\": 4624,\n\t\"./mainnet/v1/artifacts/pos/IERC721.json\": 4625,\n\t\"./mainnet/v1/artifacts/pos/IERC721Enumerable.json\": 4626,\n\t\"./mainnet/v1/artifacts/pos/IERC721Metadata.json\": 4627,\n\t\"./mainnet/v1/artifacts/pos/IERC721Receiver.json\": 4628,\n\t\"./mainnet/v1/artifacts/pos/IERCProxy.json\": 4629,\n\t\"./mainnet/v1/artifacts/pos/IMintableERC721.json\": 4630,\n\t\"./mainnet/v1/artifacts/pos/IRootChainManager.json\": 4631,\n\t\"./mainnet/v1/artifacts/pos/IStateSender.json\": 4632,\n\t\"./mainnet/v1/artifacts/pos/ITokenPredicate.json\": 4633,\n\t\"./mainnet/v1/artifacts/pos/MaticWETH.json\": 4634,\n\t\"./mainnet/v1/artifacts/pos/Merkle.json\": 4635,\n\t\"./mainnet/v1/artifacts/pos/MerklePatriciaTest.json\": 4636,\n\t\"./mainnet/v1/artifacts/pos/Migrations.json\": 4637,\n\t\"./mainnet/v1/artifacts/pos/MintableERC1155Predicate.json\": 4638,\n\t\"./mainnet/v1/artifacts/pos/MintableERC1155PredicateProxy.json\": 4639,\n\t\"./mainnet/v1/artifacts/pos/MintableERC20Predicate.json\": 4640,\n\t\"./mainnet/v1/artifacts/pos/MintableERC20PredicateProxy.json\": 4641,\n\t\"./mainnet/v1/artifacts/pos/MintableERC721Predicate.json\": 4642,\n\t\"./mainnet/v1/artifacts/pos/MintableERC721PredicateProxy.json\": 4643,\n\t\"./mainnet/v1/artifacts/pos/MockCheckpointManager.json\": 4644,\n\t\"./mainnet/v1/artifacts/pos/NativeMetaTransaction.json\": 4645,\n\t\"./mainnet/v1/artifacts/pos/NetworkAgnostic.json\": 4646,\n\t\"./mainnet/v1/artifacts/pos/Proxy.json\": 4647,\n\t\"./mainnet/v1/artifacts/pos/ProxyTestImpl.json\": 4648,\n\t\"./mainnet/v1/artifacts/pos/ProxyTestImplStorageLayoutChange.json\": 4649,\n\t\"./mainnet/v1/artifacts/pos/RootChainManager.json\": 4650,\n\t\"./mainnet/v1/artifacts/pos/RootChainManagerProxy.json\": 4651,\n\t\"./mainnet/v1/artifacts/pos/RootChainManagerStorage.json\": 4652,\n\t\"./mainnet/v1/artifacts/pos/RootTunnel.json\": 4653,\n\t\"./mainnet/v1/artifacts/pos/UpgradableProxy.json\": 4654,\n\t\"./mainnet/v1/index.json\": 1876,\n\t\"./networks.json\": 1875,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxChild.json\": 4655,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxERC1155ChildTunnel.json\": 4656,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxERC1155RootTunnel.json\": 4657,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxERC20ChildToken.json\": 4658,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxERC20ChildTunnel.json\": 4659,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxERC20RootToken.json\": 4660,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxERC20RootTunnel.json\": 4661,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxERC721ChildTunnel.json\": 4662,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxERC721RootTunnel.json\": 4663,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxRoot.json\": 4664,\n\t\"./testnet/mumbai/artifacts/genesis/BorValidatorSet.json\": 4665,\n\t\"./testnet/mumbai/artifacts/genesis/IStateReceiver.json\": 4666,\n\t\"./testnet/mumbai/artifacts/genesis/Migrations.json\": 4667,\n\t\"./testnet/mumbai/artifacts/genesis/StateReceiver.json\": 4668,\n\t\"./testnet/mumbai/artifacts/genesis/System.json\": 4669,\n\t\"./testnet/mumbai/artifacts/genesis/TestBorValidatorSet.json\": 4670,\n\t\"./testnet/mumbai/artifacts/genesis/TestCommitState.json\": 4671,\n\t\"./testnet/mumbai/artifacts/genesis/TestStateReceiver.json\": 4672,\n\t\"./testnet/mumbai/artifacts/genesis/TestSystem.json\": 4673,\n\t\"./testnet/mumbai/artifacts/genesis/ValidatorSet.json\": 4674,\n\t\"./testnet/mumbai/artifacts/genesis/ValidatorVerifier.json\": 4675,\n\t\"./testnet/mumbai/artifacts/plasma/BaseERC20.json\": 4676,\n\t\"./testnet/mumbai/artifacts/plasma/ChainIdMixin.json\": 4677,\n\t\"./testnet/mumbai/artifacts/plasma/ChildChain.json\": 4678,\n\t\"./testnet/mumbai/artifacts/plasma/ChildERC20.json\": 4679,\n\t\"./testnet/mumbai/artifacts/plasma/ChildERC20Proxified.json\": 4680,\n\t\"./testnet/mumbai/artifacts/plasma/ChildERC721.json\": 4681,\n\t\"./testnet/mumbai/artifacts/plasma/ChildERC721Mintable.json\": 4682,\n\t\"./testnet/mumbai/artifacts/plasma/ChildERC721Proxified.json\": 4683,\n\t\"./testnet/mumbai/artifacts/plasma/ChildToken.json\": 4684,\n\t\"./testnet/mumbai/artifacts/plasma/ChildTokenProxy.json\": 4685,\n\t\"./testnet/mumbai/artifacts/plasma/Common.json\": 4686,\n\t\"./testnet/mumbai/artifacts/plasma/ContractReceiver.json\": 4687,\n\t\"./testnet/mumbai/artifacts/plasma/ContractWitRevertingFallback.json\": 4688,\n\t\"./testnet/mumbai/artifacts/plasma/ContractWithFallback.json\": 4689,\n\t\"./testnet/mumbai/artifacts/plasma/ContractWithoutFallback.json\": 4690,\n\t\"./testnet/mumbai/artifacts/plasma/DelegateProxy.json\": 4691,\n\t\"./testnet/mumbai/artifacts/plasma/DepositManager.json\": 4692,\n\t\"./testnet/mumbai/artifacts/plasma/DepositManagerHeader.json\": 4693,\n\t\"./testnet/mumbai/artifacts/plasma/DepositManagerProxy.json\": 4694,\n\t\"./testnet/mumbai/artifacts/plasma/DepositManagerStorage.json\": 4695,\n\t\"./testnet/mumbai/artifacts/plasma/DrainStakeManager.json\": 4696,\n\t\"./testnet/mumbai/artifacts/plasma/Drainable.json\": 4697,\n\t\"./testnet/mumbai/artifacts/plasma/ECVerify.json\": 4698,\n\t\"./testnet/mumbai/artifacts/plasma/ERC165.json\": 4699,\n\t\"./testnet/mumbai/artifacts/plasma/ERC20.json\": 4700,\n\t\"./testnet/mumbai/artifacts/plasma/ERC20Detailed.json\": 4701,\n\t\"./testnet/mumbai/artifacts/plasma/ERC20Mintable.json\": 4702,\n\t\"./testnet/mumbai/artifacts/plasma/ERC20NonTransferable.json\": 4703,\n\t\"./testnet/mumbai/artifacts/plasma/ERC20Predicate.json\": 4704,\n\t\"./testnet/mumbai/artifacts/plasma/ERC20PredicateBurnOnly.json\": 4705,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721.json\": 4706,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721Enumerable.json\": 4707,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721Full.json\": 4708,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721Metadata.json\": 4709,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721MetadataMintable.json\": 4710,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721Mintable.json\": 4711,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721PlasmaMintable.json\": 4712,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721Predicate.json\": 4713,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721PredicateBurnOnly.json\": 4714,\n\t\"./testnet/mumbai/artifacts/plasma/ERCProxy.json\": 4715,\n\t\"./testnet/mumbai/artifacts/plasma/ExitNFT.json\": 4716,\n\t\"./testnet/mumbai/artifacts/plasma/FallbackManager.json\": 4717,\n\t\"./testnet/mumbai/artifacts/plasma/GnosisSafe.json\": 4718,\n\t\"./testnet/mumbai/artifacts/plasma/GnosisSafeProxy.json\": 4719,\n\t\"./testnet/mumbai/artifacts/plasma/Governable.json\": 4720,\n\t\"./testnet/mumbai/artifacts/plasma/Governance.json\": 4721,\n\t\"./testnet/mumbai/artifacts/plasma/GovernanceLockable.json\": 4722,\n\t\"./testnet/mumbai/artifacts/plasma/GovernanceLockableTest.json\": 4723,\n\t\"./testnet/mumbai/artifacts/plasma/GovernanceProxy.json\": 4724,\n\t\"./testnet/mumbai/artifacts/plasma/IDepositManager.json\": 4725,\n\t\"./testnet/mumbai/artifacts/plasma/IERC165.json\": 4726,\n\t\"./testnet/mumbai/artifacts/plasma/IERC20.json\": 4727,\n\t\"./testnet/mumbai/artifacts/plasma/IERC721.json\": 4728,\n\t\"./testnet/mumbai/artifacts/plasma/IERC721Enumerable.json\": 4729,\n\t\"./testnet/mumbai/artifacts/plasma/IERC721Metadata.json\": 4730,\n\t\"./testnet/mumbai/artifacts/plasma/IERC721Receiver.json\": 4731,\n\t\"./testnet/mumbai/artifacts/plasma/IErcPredicate.json\": 4732,\n\t\"./testnet/mumbai/artifacts/plasma/IGovernance.json\": 4733,\n\t\"./testnet/mumbai/artifacts/plasma/IParentToken.json\": 4734,\n\t\"./testnet/mumbai/artifacts/plasma/IPredicate.json\": 4735,\n\t\"./testnet/mumbai/artifacts/plasma/IRootChain.json\": 4736,\n\t\"./testnet/mumbai/artifacts/plasma/ISignatureValidator.json\": 4737,\n\t\"./testnet/mumbai/artifacts/plasma/ISlashingManager.json\": 4738,\n\t\"./testnet/mumbai/artifacts/plasma/IStakeManager.json\": 4739,\n\t\"./testnet/mumbai/artifacts/plasma/IStakeManagerLocal.json\": 4740,\n\t\"./testnet/mumbai/artifacts/plasma/IValidatorShare.json\": 4741,\n\t\"./testnet/mumbai/artifacts/plasma/IWithdrawManager.json\": 4742,\n\t\"./testnet/mumbai/artifacts/plasma/LibEIP712Domain.json\": 4743,\n\t\"./testnet/mumbai/artifacts/plasma/LibTokenTransferOrder.json\": 4744,\n\t\"./testnet/mumbai/artifacts/plasma/Lockable.json\": 4745,\n\t\"./testnet/mumbai/artifacts/plasma/MRC20.json\": 4746,\n\t\"./testnet/mumbai/artifacts/plasma/Marketplace.json\": 4747,\n\t\"./testnet/mumbai/artifacts/plasma/MarketplacePredicate.json\": 4748,\n\t\"./testnet/mumbai/artifacts/plasma/MarketplacePredicateTest.json\": 4749,\n\t\"./testnet/mumbai/artifacts/plasma/MarketplaceToken.json\": 4750,\n\t\"./testnet/mumbai/artifacts/plasma/MasterCopy.json\": 4751,\n\t\"./testnet/mumbai/artifacts/plasma/MaticWETH.json\": 4752,\n\t\"./testnet/mumbai/artifacts/plasma/Merkle.json\": 4753,\n\t\"./testnet/mumbai/artifacts/plasma/Migrations.json\": 4754,\n\t\"./testnet/mumbai/artifacts/plasma/MintableERC721Predicate.json\": 4755,\n\t\"./testnet/mumbai/artifacts/plasma/MinterRole.json\": 4756,\n\t\"./testnet/mumbai/artifacts/plasma/Module.json\": 4757,\n\t\"./testnet/mumbai/artifacts/plasma/ModuleManager.json\": 4758,\n\t\"./testnet/mumbai/artifacts/plasma/Ownable.json\": 4759,\n\t\"./testnet/mumbai/artifacts/plasma/OwnableLockable.json\": 4760,\n\t\"./testnet/mumbai/artifacts/plasma/OwnerManager.json\": 4761,\n\t\"./testnet/mumbai/artifacts/plasma/ParentTokenMock.json\": 4762,\n\t\"./testnet/mumbai/artifacts/plasma/PredicateUtils.json\": 4763,\n\t\"./testnet/mumbai/artifacts/plasma/PriorityQueue.json\": 4764,\n\t\"./testnet/mumbai/artifacts/plasma/Proxy.json\": 4765,\n\t\"./testnet/mumbai/artifacts/plasma/ProxyStorage.json\": 4766,\n\t\"./testnet/mumbai/artifacts/plasma/ProxyTestImpl.json\": 4767,\n\t\"./testnet/mumbai/artifacts/plasma/ProxyTestImplStorageLayoutChange.json\": 4768,\n\t\"./testnet/mumbai/artifacts/plasma/Registry.json\": 4769,\n\t\"./testnet/mumbai/artifacts/plasma/RootChain.json\": 4770,\n\t\"./testnet/mumbai/artifacts/plasma/RootChainHeader.json\": 4771,\n\t\"./testnet/mumbai/artifacts/plasma/RootChainProxy.json\": 4772,\n\t\"./testnet/mumbai/artifacts/plasma/RootChainStorage.json\": 4773,\n\t\"./testnet/mumbai/artifacts/plasma/RootChainable.json\": 4774,\n\t\"./testnet/mumbai/artifacts/plasma/RootERC721.json\": 4775,\n\t\"./testnet/mumbai/artifacts/plasma/SlashingManager.json\": 4776,\n\t\"./testnet/mumbai/artifacts/plasma/StakeManager.json\": 4777,\n\t\"./testnet/mumbai/artifacts/plasma/StakeManagerProxy.json\": 4778,\n\t\"./testnet/mumbai/artifacts/plasma/StakeManagerStorage.json\": 4779,\n\t\"./testnet/mumbai/artifacts/plasma/StakeManagerTest.json\": 4780,\n\t\"./testnet/mumbai/artifacts/plasma/StakeManagerTestable.json\": 4781,\n\t\"./testnet/mumbai/artifacts/plasma/StakingInfo.json\": 4782,\n\t\"./testnet/mumbai/artifacts/plasma/StakingNFT.json\": 4783,\n\t\"./testnet/mumbai/artifacts/plasma/StateReceiver.json\": 4784,\n\t\"./testnet/mumbai/artifacts/plasma/StateSender.json\": 4785,\n\t\"./testnet/mumbai/artifacts/plasma/StateSyncerVerifier.json\": 4786,\n\t\"./testnet/mumbai/artifacts/plasma/TestMRC20.json\": 4787,\n\t\"./testnet/mumbai/artifacts/plasma/TestToken.json\": 4788,\n\t\"./testnet/mumbai/artifacts/plasma/TransferWithSigPredicate.json\": 4789,\n\t\"./testnet/mumbai/artifacts/plasma/TransferWithSigUtils.json\": 4790,\n\t\"./testnet/mumbai/artifacts/plasma/UpgradableProxy.json\": 4791,\n\t\"./testnet/mumbai/artifacts/plasma/ValidatorShare.json\": 4792,\n\t\"./testnet/mumbai/artifacts/plasma/ValidatorShareFactory.json\": 4793,\n\t\"./testnet/mumbai/artifacts/plasma/ValidatorShareProxy.json\": 4794,\n\t\"./testnet/mumbai/artifacts/plasma/ValidatorShareTest.json\": 4795,\n\t\"./testnet/mumbai/artifacts/plasma/WETH.json\": 4796,\n\t\"./testnet/mumbai/artifacts/plasma/WithdrawManager.json\": 4797,\n\t\"./testnet/mumbai/artifacts/plasma/WithdrawManagerHeader.json\": 4798,\n\t\"./testnet/mumbai/artifacts/plasma/WithdrawManagerProxy.json\": 4799,\n\t\"./testnet/mumbai/artifacts/plasma/WithdrawManagerStorage.json\": 4800,\n\t\"./testnet/mumbai/artifacts/pos/AccessControl.json\": 4801,\n\t\"./testnet/mumbai/artifacts/pos/AccessControlMixin.json\": 4802,\n\t\"./testnet/mumbai/artifacts/pos/ChainConstants.json\": 4803,\n\t\"./testnet/mumbai/artifacts/pos/ChildChainManager.json\": 4804,\n\t\"./testnet/mumbai/artifacts/pos/ChildChainManagerProxy.json\": 4805,\n\t\"./testnet/mumbai/artifacts/pos/ChildERC1155.json\": 4806,\n\t\"./testnet/mumbai/artifacts/pos/ChildERC20.json\": 4807,\n\t\"./testnet/mumbai/artifacts/pos/ChildERC721.json\": 4808,\n\t\"./testnet/mumbai/artifacts/pos/ChildMintableERC721.json\": 4809,\n\t\"./testnet/mumbai/artifacts/pos/ChildTunnel.json\": 4810,\n\t\"./testnet/mumbai/artifacts/pos/DummyERC1155.json\": 4811,\n\t\"./testnet/mumbai/artifacts/pos/DummyERC20.json\": 4812,\n\t\"./testnet/mumbai/artifacts/pos/DummyERC721.json\": 4813,\n\t\"./testnet/mumbai/artifacts/pos/DummyMintableERC721.json\": 4814,\n\t\"./testnet/mumbai/artifacts/pos/DummyStateSender.json\": 4815,\n\t\"./testnet/mumbai/artifacts/pos/EIP712Base.json\": 4816,\n\t\"./testnet/mumbai/artifacts/pos/ERC1155.json\": 4817,\n\t\"./testnet/mumbai/artifacts/pos/ERC1155Predicate.json\": 4818,\n\t\"./testnet/mumbai/artifacts/pos/ERC1155PredicateProxy.json\": 4819,\n\t\"./testnet/mumbai/artifacts/pos/ERC1155Receiver.json\": 4820,\n\t\"./testnet/mumbai/artifacts/pos/ERC165.json\": 4821,\n\t\"./testnet/mumbai/artifacts/pos/ERC20.json\": 4822,\n\t\"./testnet/mumbai/artifacts/pos/ERC20Predicate.json\": 4823,\n\t\"./testnet/mumbai/artifacts/pos/ERC20PredicateProxy.json\": 4824,\n\t\"./testnet/mumbai/artifacts/pos/ERC721.json\": 4825,\n\t\"./testnet/mumbai/artifacts/pos/ERC721Predicate.json\": 4826,\n\t\"./testnet/mumbai/artifacts/pos/ERC721PredicateProxy.json\": 4827,\n\t\"./testnet/mumbai/artifacts/pos/EtherPredicate.json\": 4828,\n\t\"./testnet/mumbai/artifacts/pos/EtherPredicateProxy.json\": 4829,\n\t\"./testnet/mumbai/artifacts/pos/ICheckpointManager.json\": 4830,\n\t\"./testnet/mumbai/artifacts/pos/IChildChainManager.json\": 4831,\n\t\"./testnet/mumbai/artifacts/pos/IChildToken.json\": 4832,\n\t\"./testnet/mumbai/artifacts/pos/IERC1155.json\": 4833,\n\t\"./testnet/mumbai/artifacts/pos/IERC1155MetadataURI.json\": 4834,\n\t\"./testnet/mumbai/artifacts/pos/IERC1155Receiver.json\": 4835,\n\t\"./testnet/mumbai/artifacts/pos/IERC165.json\": 4836,\n\t\"./testnet/mumbai/artifacts/pos/IERC20.json\": 4837,\n\t\"./testnet/mumbai/artifacts/pos/IERC721.json\": 4838,\n\t\"./testnet/mumbai/artifacts/pos/IERC721Enumerable.json\": 4839,\n\t\"./testnet/mumbai/artifacts/pos/IERC721Metadata.json\": 4840,\n\t\"./testnet/mumbai/artifacts/pos/IERC721Receiver.json\": 4841,\n\t\"./testnet/mumbai/artifacts/pos/IERCProxy.json\": 4842,\n\t\"./testnet/mumbai/artifacts/pos/IMintableERC721.json\": 4843,\n\t\"./testnet/mumbai/artifacts/pos/IRootChainManager.json\": 4844,\n\t\"./testnet/mumbai/artifacts/pos/IStateSender.json\": 4845,\n\t\"./testnet/mumbai/artifacts/pos/ITokenPredicate.json\": 4846,\n\t\"./testnet/mumbai/artifacts/pos/MaticWETH.json\": 4847,\n\t\"./testnet/mumbai/artifacts/pos/Merkle.json\": 4848,\n\t\"./testnet/mumbai/artifacts/pos/MerklePatriciaTest.json\": 4849,\n\t\"./testnet/mumbai/artifacts/pos/Migrations.json\": 4850,\n\t\"./testnet/mumbai/artifacts/pos/MintableERC1155Predicate.json\": 4851,\n\t\"./testnet/mumbai/artifacts/pos/MintableERC1155PredicateProxy.json\": 4852,\n\t\"./testnet/mumbai/artifacts/pos/MintableERC20Predicate.json\": 4853,\n\t\"./testnet/mumbai/artifacts/pos/MintableERC20PredicateProxy.json\": 4854,\n\t\"./testnet/mumbai/artifacts/pos/MintableERC721Predicate.json\": 4855,\n\t\"./testnet/mumbai/artifacts/pos/MintableERC721PredicateProxy.json\": 4856,\n\t\"./testnet/mumbai/artifacts/pos/MockCheckpointManager.json\": 4857,\n\t\"./testnet/mumbai/artifacts/pos/NativeMetaTransaction.json\": 4858,\n\t\"./testnet/mumbai/artifacts/pos/NetworkAgnostic.json\": 4859,\n\t\"./testnet/mumbai/artifacts/pos/Proxy.json\": 4860,\n\t\"./testnet/mumbai/artifacts/pos/ProxyTestImpl.json\": 4861,\n\t\"./testnet/mumbai/artifacts/pos/ProxyTestImplStorageLayoutChange.json\": 4862,\n\t\"./testnet/mumbai/artifacts/pos/RootChainManager.json\": 4863,\n\t\"./testnet/mumbai/artifacts/pos/RootChainManagerProxy.json\": 4864,\n\t\"./testnet/mumbai/artifacts/pos/RootChainManagerStorage.json\": 4865,\n\t\"./testnet/mumbai/artifacts/pos/RootTunnel.json\": 4866,\n\t\"./testnet/mumbai/artifacts/pos/UpgradableProxy.json\": 4867,\n\t\"./testnet/mumbai/index.json\": 1877\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 4441;","import React, { Component } from 'react';\nimport { Flex, Icon, Text } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass ConnectBox extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          p:3,\n          mt:3,\n          ...this.props.cardProps\n        }}\n      >\n        <Flex\n          alignItems={'center'}\n          flexDirection={'column'}\n        >\n          <Icon\n            size={'1.8em'}\n            name={'Input'}\n            color={'cellText'}\n          />\n          <Text\n            mt={2}\n            fontSize={2}\n            color={'cellText'}\n            textAlign={'center'}\n          >\n            Please connect with your wallet interact with Idle.\n          </Text>\n          <RoundButton\n            buttonProps={{\n              mt:2,\n              width:[1,1/2]\n            }}\n            handleClick={this.props.connectAndValidateAccount}\n          >\n            Connect\n          </RoundButton>\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default ConnectBox;\n","import theme from '../theme';\nimport React, { Component } from 'react';\nimport styles from './TransactionListFilters.module.scss';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TableCellHeader from '../TableCellHeader/TableCellHeader';\nimport { Flex, Text, Icon, Radio, Button, Link } from \"rimble-ui\";\n\nclass TransactionListFilters extends Component {\n\n  state = {\n    maxWidth:0.4,\n    minWidth:0.18,\n    maxHeight:425,\n    isOpened:false,\n    activeFilters:{\n      status:null,\n      assets:null,\n      actions:null\n    }\n  }\n\n  setFilter = (filter,value) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:value\n      }\n    }));\n  }\n\n  applyFilters = (toggle=true) => {\n    if (typeof this.props.applyFilters === 'function'){\n      this.props.applyFilters(this.state.activeFilters);\n    }\n    if (toggle){\n      this.toggleOpened();\n    }\n  }\n\n  resetFilter = (filter) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:null\n      }\n    }),() => {\n      this.applyFilters(false);\n    });\n  }\n\n  resetFilters = (toggle=true) => {\n    this.setState({\n      activeFilters:{\n        status:null,\n        assets:null,\n        actions:null\n      }\n    },() => {\n      if (typeof this.props.resetFilters === 'function'){\n        this.props.resetFilters();\n      }\n      if (toggle){\n        this.toggleOpened();\n      }\n    })\n  }\n\n  toggleOpened = () => {\n    this.setState((prevState) => ({\n      isOpened: !prevState.isOpened\n    }));\n  }\n\n  render() {\n    return (\n      <Flex\n        mb={3}\n        top={0}\n        width={1}\n        zIndex={1}\n        flexDirection={'column'}\n        alignItems={'flex-start'}\n        justifyContent={'center'}\n        position={['relative','absolute']}\n      >\n        <DashboardCard\n          cardProps={{\n            py:2,\n            px:3,\n            width:[1, this.state.isOpened ? this.state.maxWidth : this.state.minWidth ],\n            style:{\n              transition:'width 0.3s ease-in-out'\n            }\n          }}\n          isInteractive={ !this.state.isOpened }\n          handleClick={ !this.state.isOpened ? this.toggleOpened : null }\n        >\n          <Flex\n            width={1}\n            style={{\n              cursor:'pointer'\n            }}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'space-between'}\n            onClick={ this.state.isOpened ? this.toggleOpened : null }\n          >\n            <Text\n              fontSize={2}\n              fontWeight={500}\n              color={'copyColor'}\n            >\n              Filters\n            </Text>\n            <Icon\n              color={'copyColor'}\n              size={ this.props.isMobile ? '1.3em' : '1.5em'}\n              name={ this.state.isOpened ? 'Close' : 'Tune' }\n            />\n          </Flex>\n          <Flex\n            flexDirection={'column'}\n            style={{\n              overflow:'hidden',\n              transition:'max-height 0.3s ease-in-out',\n              maxHeight:this.state.isOpened ? this.state.maxHeight : 0\n            }}\n          >\n            <Flex\n              mt={2}\n              py={2}\n              width={1}\n              flexDirection={'row'}\n              borderTop={`1px solid ${theme.colors.divider}`}\n            >\n              {\n                Object.keys(this.props.filters).map((filterCategory) => {\n                  const filterValues = this.props.filters[filterCategory];\n                  return (\n                    <Flex\n                      flexDirection={'column'}\n                      key={`filter_${filterCategory}`}\n                      style={{\n                        flexBasis:'0',\n                        flex:'1 1 0px'\n                      }}\n                    >\n                      <TableCellHeader\n                        pb={2}\n                        fontWeight={3}\n                        fontSize={[0,2]}\n                        color={'cellText'}\n                      >\n                        {filterCategory.toUpperCase()}\n                      </TableCellHeader>\n                      {\n                        Object.keys(filterValues).map((filterValue) => {\n                          const filterLabel = filterValues[filterValue];\n                          const isChecked = this.state.activeFilters[filterCategory]===filterValue;\n                          return (\n                            <Radio\n                              my={2}\n                              fontSize={[0,2]}\n                              label={filterLabel}\n                              checked={isChecked}\n                              className={styles.radioBtn}\n                              key={`filter_${filterCategory}_${filterValue}`}\n                              onChange={ e => this.setFilter(filterCategory,filterValue) }\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                  );\n                })\n              }\n            </Flex>\n            <Flex\n              flexDirection={'row'}\n            >\n              <Button.Text\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.applyFilters}\n              >\n                Apply filters\n              </Button.Text>\n              <Button.Text\n                ml={3}\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.resetFilters}\n              >\n                Reset\n              </Button.Text>\n            </Flex>\n          </Flex>\n        </DashboardCard>\n        {\n          !this.state.isOpened && this.props.activeFilters && Object.values(this.props.activeFilters).filter( v => (v !== null) ).length>0 &&\n            <Flex\n              mt={3}\n              width={1}\n              flexDirection={['column','row']}\n              alignItems={['flex-start','flex-end']}\n              justifyContent={['flex-end','flex-start']}\n            >\n              {\n                Object.keys(this.props.activeFilters).map((filterName) => {\n                  const filterValue = this.props.activeFilters[filterName];\n                  if (filterValue !== null){\n                    const filterLabel = this.props.filters[filterName][filterValue];\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:[2,0],\n                          mr:[0,3],\n                          width:[1,this.state.minWidth]\n                        }}\n                        isInteractive={true}\n                        key={`filter_${filterName}`}\n                      >\n                        <Flex\n                          width={1}\n                          style={{\n                            cursor:'pointer'\n                          }}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'space-between'}\n                          onClick={e => this.resetFilter(filterName)}\n                        >\n                          <Text\n                            fontSize={2}\n                            fontWeight={500}\n                            color={'cellText'}\n                            style={{\n                              textTransform:'capitalize'\n                            }}\n                          >\n                            {filterLabel}\n                          </Text>\n                          <Icon\n                            name={'Close'}\n                            color={'cellText'}\n                            size={ this.props.isMobile ? '1.3em' : '1.5em'}\n                          />\n                        </Flex>\n                      </DashboardCard>\n                    );\n                  }\n                  return null;\n                })\n              }\n              <Link\n                mt={[2,0]}\n                fontSize={[3,2]}\n                fontWeight={[3]}\n                color={'dark-gray'}\n                hoverColor={'copyColor'}\n                textAlign={['center','left']}\n                onClick={ e => this.resetFilters(false) }\n              >\n                Clear all filters\n              </Link>\n            </Flex>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TransactionListFilters;","import React, { Component } from 'react';\n// import style from './TransactionsList.module.scss';\nimport TableRow from '../TableRow/TableRow';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Heading, Text, Link, Icon } from \"rimble-ui\";\nimport TransactionField from '../TransactionField/TransactionField';\nimport TransactionListFilters from '../TransactionListFilters/TransactionListFilters';\n\nclass TransactionsList extends Component {\n\n  state = {\n    page:1,\n    prevTxs:{},\n    txsPerPage:5,\n    loading:false,\n    totalTxs:null,\n    totalPages:null,\n    activeFilters:{\n      status:null,\n      assets:null,\n      actions:null,\n    },\n    filters:{\n      actions:{\n        deposit:'Deposit',\n        redeem:'Redeem',\n        send:'Send',\n        receive:'Receive',\n        migrate:'Migrate',\n        swap:'Swap-In',\n        swapout:'Swap-Out',\n        withdraw:'Withdraw',\n        // curvein:'CurveIn',\n        // curveout:'CurveOut',\n        // curvezapin:'CurveZapIn',\n        // curvezapout:'CurveZapOut',\n      },\n      status:{\n        completed:'Completed',\n        pending:'Pending',\n        failed:'Failed'\n      },\n      assets:{}\n    },\n    renderedTxs:null,\n    processedTxs:null,\n    lastBlockNumber:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  prevPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.max(1,this.state.page-1);\n    this.setState({\n      page\n    });\n  }\n\n  nextPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.min(this.state.totalPages,this.state.page+1);this.processTxs(page);\n    this.setState({\n      page\n    });\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadTxs();\n  }\n\n  applyFilters = activeFilters => {\n    this.setState({\n      activeFilters\n    },() => {\n      this.processTxs();\n    });\n  }\n\n  resetFilters = () => {\n    this.setState({\n      activeFilters:{\n        status:null,\n        assets:null,\n        actions:null,\n      }\n    },() => {\n      this.processTxs();\n    });\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n    const transactionsChanged = JSON.stringify(prevProps.transactions) !== JSON.stringify(this.props.transactions);\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n\n    if (tokenChanged || transactionsChanged){\n      this.setState({\n        page:1,\n        prevTxs:{}\n      },()=>{\n        this.loadTxs();\n      })\n      return false;\n    }\n    const pageChanged = prevState.page !== this.state.page;\n    if (pageChanged){\n      this.processTxs();\n    }\n  }\n\n  async loadTxs(count,endBlockNumber='latest'){\n    if (!this.props.account){\n      return false;\n    }\n\n    count = count ? count : 0;\n\n    this.setState({\n      loading:true\n    });\n\n    const firstBlockNumber = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n\n    // Take last block number, is null take first block number\n    let prevTxs = {...this.state.prevTxs};\n    let lastBlockNumber = Math.max(firstBlockNumber,this.state.lastBlockNumber);\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    const assets = {...this.state.filters.assets};\n\n    enabledTokens.forEach((token) => {\n      assets[token] = token;\n    });\n\n    let actions = this.props.availableActions || {...this.state.filters.actions};\n    \n    const enabledActions = typeof this.props.enabledActions !== 'undefined' ? this.props.enabledActions : [];\n\n    if (enabledActions.length){\n      actions = {};\n      enabledActions.forEach( action => {\n        actions[action.toLowerCase()] = action;\n      });\n    }\n\n    const etherscanTxs = this.props.transactionsList || await this.functionsUtil.getEtherscanTxs(this.props.account,lastBlockNumber,'latest',enabledTokens);\n\n    // console.log('TransactionsList',etherscanTxs);\n\n    // Merge new txs with previous ones\n    if (etherscanTxs && etherscanTxs.length){\n      etherscanTxs.forEach((tx) => {\n        if (tx.hashKey){\n          prevTxs[tx.hashKey] = tx;\n        } else {\n          prevTxs[`t${tx.timeStamp}`] = tx;\n        }\n      });\n    }\n\n    const lastTx = Object.values(prevTxs).pop();\n\n    // Update last block number\n    if (lastTx && lastTx.blockNumber && (!this.state.lastBlockNumber || lastTx.blockNumber>this.state.lastBlockNumber)){\n      lastBlockNumber = parseInt(lastTx.blockNumber)+1;\n    }\n\n    return this.setState( prevState => ({\n      prevTxs,\n      loading:false,\n      lastBlockNumber,\n      filters:{\n        ...prevState.filters,\n        assets,\n        actions\n      }\n    }), () => {\n      this.processTxs()\n    });\n  };\n\n  processTxs = (page=null) => {\n\n    page = page ? page : this.state.page;\n\n    const availableActions = Object.keys(this.state.filters.actions).map( action => (action.toLowerCase()) );\n\n    // Sort prevTxs by timeStamp\n    const txsIndexes = Object.values(this.state.prevTxs)\n                        .filter(tx => (!!parseFloat(tx.value))) // Filter txs with value\n                        .filter(tx => (\n                          (this.state.activeFilters.status === null || (tx.status && tx.status.toLowerCase() === this.state.activeFilters.status.toLowerCase())) && \n                          (this.state.activeFilters.assets === null || (tx.token && tx.token.toLowerCase() === this.state.activeFilters.assets.toLowerCase())) &&\n                          ( tx.action && availableActions.includes(tx.action.toLowerCase()) && (this.state.activeFilters.actions === null || (tx.action.toLowerCase() === this.state.activeFilters.actions.toLowerCase()) ))\n                        )) // Filter by activeFilters\n                        .sort((a,b) => (a.timeStamp > b.timeStamp) ? -1 : 1 );\n\n    // Calculate max number of pages\n    const totalTxs = txsIndexes.length;\n    const totalPages = Math.ceil(totalTxs/this.state.txsPerPage);\n\n    const processedTxs = [];\n\n    // console.log(this.state.prevTxs,txsIndexes);\n\n    txsIndexes.forEach((tx, i) => {\n      const selectedToken = tx.token;\n      const tokenConfig = this.props.availableTokens && this.props.availableTokens[selectedToken] ? this.props.availableTokens[selectedToken] : this.functionsUtil.getGlobalConfig(['stats','tokens',selectedToken]);\n      const decimals = Math.min(tokenConfig.decimals,8);\n      \n      const date = new Date(tx.timeStamp*1000);\n      const action = tx.action ? tx.action : this.functionsUtil.getTxAction(tx,tokenConfig);\n\n      const parsedValue = parseFloat(tx.tokenAmount);\n\n      const amount = parsedValue ? (this.props.isMobile ? parsedValue.toFixed(4) : parsedValue.toFixed(decimals)) : '-';\n      const momentDate = this.functionsUtil.strToMoment(date);\n\n      // Save new params\n      tx.action = action;\n      tx.amount = amount;\n      tx.momentDate = momentDate;\n      tx.status = tx.status ? tx.status : 'Completed';\n\n      if (i>=((page-1)*this.state.txsPerPage) && i<((page-1)*this.state.txsPerPage)+this.state.txsPerPage) {\n        processedTxs.push(tx);\n      }\n    });\n\n    // console.log('processedTxs',this.state.page,txsIndexes,processedTxs);\n\n    const loading = false;\n  \n    this.setState({\n      loading,\n      totalTxs,\n      totalPages,\n      processedTxs\n    });\n  }\n\n  render() {\n\n    const hasActiveFilters = Object.values(this.state.activeFilters).filter( v => (v !== null) ).length>0;\n\n    // console.log('processedTxs',this.state.processedTxs);\n    const processedTxs = this.state.processedTxs ? Object.values(this.state.processedTxs) : null;\n\n    return (\n      <Flex flexDirection={'column'} width={1} m={'0 auto'}>\n        {\n          this.state.loading ? (\n            <FlexLoader\n              flexProps={{\n                flexDirection:'row',\n                minHeight:this.props.height\n              }}\n              loaderProps={{\n                size:'30px'\n              }}\n              textProps={{\n                ml:2\n              }}\n              text={'Loading transactions...'}\n            />\n          ) : (\n            <Flex\n              width={1}\n              position={'relative'}\n              flexDirection={'column'}\n              id={'transactions-list-container'}\n              pt={[0, hasActiveFilters ? '116px' : 5]}\n            >\n              <TransactionListFilters\n                {...this.props}\n                filters={this.state.filters}\n                activeFilters={this.state.activeFilters}\n                resetFilters={this.resetFilters.bind(this)}\n                applyFilters={this.applyFilters.bind(this)}\n              />\n              {\n                processedTxs && processedTxs.length ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <TableHeader\n                      cols={this.props.cols}\n                      isMobile={this.props.isMobile}\n                    />\n                    <Flex\n                      id={'transactions-list'}\n                      flexDirection={'column'}\n                    >\n                      {\n                        processedTxs.map( (tx,index) => {\n                          const txHash = tx.hash;\n                          const txHashKey = tx.hashKey;\n                          const handleClick = (e) => {\n                            return (txHash ? window.open(this.functionsUtil.getEtherscanTransactionUrl(txHash)) : null);\n                          };\n\n                          return (\n                            <TableRow\n                              {...this.props}\n                              rowProps={{\n                                isInteractive:true\n                              }}\n                              hash={txHash}\n                              transaction={tx}\n                              key={`tx-${index}`}\n                              handleClick={handleClick}\n                              rowId={`tx-col-${txHashKey}`}\n                              cardId={`tx-card-${txHashKey}`}\n                              fieldComponent={TransactionField}\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                    <Flex\n                      height={'50px'}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'flex-end'}\n                      id={'transactions-list-pagination'}\n                    >\n                      <Flex mr={3}>\n                        <Link mr={1} onClick={ e => this.prevPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowLeft'}\n                            size={'2em'}\n                            color={ this.state.page>1 ? 'arrowActive' : 'arrowInactive' }\n                          />\n                        </Link>\n                        <Link onClick={ e => this.nextPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowRight'}\n                            size={'2em'}\n                            color={ this.state.page<this.state.totalPages ? 'arrowActive' : 'arrowInactive' }\n                          />\n                        </Link>\n                      </Flex>\n                      <Flex alignItems={'center'}>\n                        <Text \n                          fontSize={1}\n                          fontWeight={3}\n                          color={'cellText'}\n                        >\n                          Page {this.state.page} of {this.state.totalPages}\n                        </Text>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Heading.h3 textAlign={'center'} fontFamily={'sansSerif'} fontWeight={2} fontSize={[2]} color={'dark-gray'}>\n                    There are no transactions\n                  </Heading.h3>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TransactionsList;\n","import React, { Component } from 'react';\nimport styles from './Migrate.module.scss';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport TransactionField from '../TransactionField/TransactionField';\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\nimport { Box, Flex, Text, Icon, Checkbox, Input, Link, Image } from \"rimble-ui\";\n\nclass Migrate extends Component {\n\n  state = {\n    nonce:0,\n    loading:true,\n    action:'migrate',\n    processing:{\n      approve:{\n        txHash:null,\n        loading:false\n      },\n      migrate:{\n        txHash:null,\n        loading:false\n      },\n      redeem:{\n        txHash:null,\n        loading:false\n      }\n    },\n    inputValue:{},\n    usePermit:false,\n    oldTokenName:null,\n    oldIdleTokens:null,\n    skipMigration:false,\n    buttonDisabled:true,\n    migrationEnabled:null,\n    fastBalanceSelector:{},\n    oldContractBalance:null,\n    biconomyLimitReached:false,\n    metaTransactionsEnabled:true,\n    oldContractTokenDecimals:null,\n    migrationContractApproved:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  setAction = (action) => {\n    if (action !== null){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  toggleSkipMigration = (skipMigration) => {\n    this.setState({\n      skipMigration\n    });\n\n    if (typeof this.props.toggleSkipMigration === 'function'){\n      this.props.toggleSkipMigration(skipMigration);\n    }\n  }\n\n  changeInputValue = (e) => {\n    if (!this.state.action){\n      return false;\n    }\n    const amount = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: null\n      },\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  checkButtonDisabled = (amount=null) => {\n    if (!this.state.action){\n      return false;\n    }\n    if (!amount){\n      amount = this.state.inputValue[this.state.action];\n    }\n    let buttonDisabled = true;\n    if (amount){\n      buttonDisabled = amount.lte(0);\n      switch (this.state.action){\n        case 'migrate':\n        case 'redeem':\n          buttonDisabled = buttonDisabled || amount.gt(this.state.oldIdleTokens);\n        break;\n        default:\n        break;\n      }\n    }\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  setInputValue = () => {\n    if (!this.state.action || this.state.fastBalanceSelector[this.state.action] === null){\n      return false;\n    }\n\n    let amount = null;\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector[this.state.action]).div(100);\n\n    switch(this.state.action){\n      case 'migrate':\n      case 'redeem':\n        amount = this.state.oldIdleTokens ? this.functionsUtil.BNify(this.state.oldIdleTokens).times(selectedPercentage) : null;\n      break;\n      default:\n      break;\n    }\n\n    this.setState((prevState) => ({\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  setFastBalanceSelector = (percentage) => {\n    if (!this.state.action){\n      return false;\n    }\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: percentage\n      }\n    }));\n  }\n\n  executeAction = async () => {\n\n    const inputValue = this.state.inputValue[this.state.action];\n\n    if (this.state.buttonDisabled || !inputValue || this.functionsUtil.BNify(inputValue).lte(0)){\n      return false;\n    }\n\n    const loading = true;\n\n    switch (this.state.action){\n      case 'redeem':\n\n        if (!this.props.tokenConfig.migration || !this.props.tokenConfig.migration.oldContract){\n          return false;\n        }\n\n        const oldContractName = this.props.tokenConfig.migration.oldContract.name;\n\n        const idleTokenToRedeem = this.functionsUtil.normalizeTokenAmount(inputValue,18);\n\n        // Get amounts for best allocations\n        const _skipRebalance = true;\n        let paramsForRedeem = null;\n\n        /*\n        if (this.props.account){\n          const callParams = { from: this.props.account, gas: this.props.web3.utils.toBN(5000000) };\n          paramsForRedeem = await this.functionsUtil.genericContractCall(oldContractName,'getParamsForRedeemIdleToken',[idleTokenToRedeem, _skipRebalance],callParams);\n        }\n        */\n\n        const _clientProtocolAmountsRedeem = paramsForRedeem && paramsForRedeem.length ? paramsForRedeem[1] : [];\n        const gasLimitRedeem = _clientProtocolAmountsRedeem.length && _clientProtocolAmountsRedeem.indexOf('0') === -1 ? this.functionsUtil.BNify(1500000) : this.functionsUtil.BNify(1000000);\n\n        const callbackRedeem = (tx,error) => {\n          const txSucceeded = tx.status === 'success';\n\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: `Redeem_old`,\n            eventAction: this.props.selectedToken,\n            eventLabel: tx.status,\n            eventValue: parseInt(inputValue)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (txSucceeded){\n            this.setState((prevState) => ({\n              inputValue:{\n                ...prevState.inputValue,\n                [this.state.action]: this.functionsUtil.BNify(0)\n              }\n            }));\n          }\n        };\n\n        const callbackReceiptRedeem = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                ...prevState.processing[this.state.action],\n                txHash\n              }\n            }\n          }));\n        };\n\n        this.props.contractMethodSendWrapper(oldContractName, 'redeemIdleToken', [\n          idleTokenToRedeem, _skipRebalance, _clientProtocolAmountsRedeem\n        ], null, callbackRedeem, callbackReceiptRedeem, gasLimitRedeem);\n      break;\n      default:\n      break;\n    }\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        [this.state.action]:{\n          ...prevState.processing[this.state.action],\n          loading\n        }\n      }\n    }));\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n    this.checkMigration();\n  }\n\n  componentDidMount(){\n    \n  }\n\n  componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const biconomyChanged = prevProps.biconomy !== this.props.biconomy;\n    const usePermitChanged = prevProps.usePermit !== this.props.usePermit;\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken || (!prevProps.tokenConfig && this.props.tokenConfig);\n\n    if (tokenChanged || accountChanged || biconomyChanged || usePermitChanged){\n      this.checkMigration();\n    }\n\n    const actionChanged = this.state.action !== prevState.action;\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector[this.state.action] !== prevState.fastBalanceSelector[this.state.action];\n    if (actionChanged || fastBalanceSelectorChanged){\n      this.setInputValue();\n    }\n\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue;\n    if (inputValueChanged){\n      this.checkButtonDisabled();\n    }\n\n    const contractApprovedChanged = prevState.migrationContractApproved !== this.state.migrationContractApproved;\n    if (contractApprovedChanged){\n      // console.log(this.props.selectedToken,'contractApprovedChanged',this.state.migrationContractApproved);\n      if (typeof this.props.callbackApprove === 'function'){\n        this.props.callbackApprove(this.state.migrationContractApproved);\n      }\n    }\n  }\n\n  toggleMetaTransactionsEnabled = (metaTransactionsEnabled) => {\n    this.setState({\n      metaTransactionsEnabled\n    });\n  }\n\n  checkMigrationContractApproved = async () => {\n    if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.migrationContract){\n      const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n      const migrationContractName = migrationContractInfo.name;\n      const migrationContract = this.functionsUtil.getContractByName(migrationContractName);\n      if (migrationContract){\n        const oldContractName = this.props.tokenConfig.migration.oldContract.name;\n        const tokenApproved = await this.functionsUtil.checkTokenApproved(oldContractName,migrationContractInfo.address,this.props.account);\n        return tokenApproved;\n      }\n    }\n    return false;\n  }\n\n  checkMigration = async () => {\n\n    if (!this.props.tokenConfig || !this.props.account){\n      return false;\n    }\n\n    let loading = true;\n    this.setState({\n      loading,\n      processing:{\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        migrate:{\n          txHash:null,\n          loading:false\n        },\n        redeem:{\n          txHash:null,\n          loading:false\n        }\n      },\n    });\n\n    let migrationEnabled = false;\n    let oldTokenName = 'idleTokens';\n    let oldIdleTokensConverted = null;\n    let oldContractTokenDecimals = null;\n    let migrationContractApproved = false;\n    let oldTokenPrice = this.functionsUtil.BNify(0);\n    let oldIdleTokens = this.functionsUtil.BNify(0);\n    let oldContractBalance = this.functionsUtil.BNify(0);\n    const getTokenPrice = this.props.getTokenPrice !== undefined ? this.props.getTokenPrice : true;\n\n    // Check migration contract enabled and balance\n    if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.enabled){\n      const oldContractInfo = this.props.tokenConfig.migration.oldContract;\n      const oldContractABI = oldContractInfo.abi;\n      const oldContractName = oldContractInfo.name;\n      let oldContract = this.functionsUtil.getContractByName(oldContractName);\n\n      // Initialize contract\n      if (!oldContract && oldContractABI){\n        oldContract = await this.props.initContract(oldContractName,oldContractInfo.address,oldContractABI);\n      }\n\n      let migrationContract = this.functionsUtil.getContractByName(this.props.tokenConfig.migration.migrationContract.name);\n\n      if (!migrationContract && this.props.tokenConfig.migration.migrationContract.abi){\n        migrationContract = await this.props.initContract(this.props.tokenConfig.migration.migrationContract.name,this.props.tokenConfig.migration.migrationContract.address,this.props.tokenConfig.migration.migrationContract.abi);\n      }\n\n      if (oldContract && migrationContract){\n\n        oldTokenName = this.props.tokenConfig.migration.oldContract.token;\n\n        [\n          oldContractTokenDecimals,\n          migrationContractApproved,\n          oldContractBalance,\n          oldTokenPrice,\n        ] = await Promise.all([\n          // Get old contract token decimals\n          this.functionsUtil.getTokenDecimals(oldContractName),\n          // Check migration contract approval\n          this.checkMigrationContractApproved(),\n          // Check old contractBalance\n          this.functionsUtil.getContractBalance(oldContractName,this.props.account),\n          // Get token price\n          (getTokenPrice ? this.functionsUtil.genericContractCall(oldContractName,'tokenPrice') : null)\n        ]);\n\n        // console.log('Migration',oldContractName,migrationContractApproved,this.props.selectedToken,oldContractBalance ? oldContractBalance.toString() : null,oldTokenPrice ? oldTokenPrice.toString() : null);\n\n        if (oldContractBalance){\n          // Convert old idleTokens\n          oldIdleTokens = this.functionsUtil.fixTokenDecimals(oldContractBalance,oldContractTokenDecimals);\n          if (oldTokenPrice){\n            oldTokenPrice = this.functionsUtil.fixTokenDecimals(oldTokenPrice,this.props.tokenConfig.decimals);\n            oldIdleTokensConverted = this.functionsUtil.BNify(oldIdleTokens).times(this.functionsUtil.BNify(oldTokenPrice));\n          }\n          // Enable migration if old contract balance if greater than 0\n          migrationEnabled = this.functionsUtil.BNify(oldContractBalance).gt(0);\n        }\n      }\n    }\n    \n    loading = false;\n\n    // If use Permit don't ask for Approve\n    const usePermit = this.props.usePermit;\n\n    const newState = {\n      loading,\n      usePermit,\n      oldTokenName,\n      oldIdleTokens,\n      migrationEnabled,\n      oldContractBalance,\n      oldIdleTokensConverted,\n      oldContractTokenDecimals,\n      migrationContractApproved\n    };\n\n    if (this.props.biconomy){\n      const biconomyLimits = await this.functionsUtil.checkBiconomyLimits(this.props.account);\n      if (biconomyLimits && !biconomyLimits.allowed){\n        newState.biconomyLimitReached = true;\n      }\n    }\n\n    if (typeof this.props.migrationEnabledCallback === 'function'){\n      this.props.migrationEnabledCallback(migrationEnabled);\n    }\n\n    // console.log('checkMigration',this.props.selectedToken,'usePermit',this.props.usePermit,'migrationContractApproved',newState.migrationContractApproved);\n\n    // Set migration contract balance\n    return this.setState(newState);\n  }\n\n  disapproveMigration = async (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n      this.disableERC20(null,this.props.tokenConfig.migration.oldContract.name,migrationContractInfo.address);\n    }\n  }\n\n  cancelTransaction = async () => {\n    this.setState({\n      processing: {\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        migrate:{\n          txHash:null,\n          loading:false\n        },\n        redeem:{\n          txHash:null,\n          loading:false\n        }\n      },\n    });\n  }\n\n  approveMigration = async (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n\n      // Check if the migration contract is approved\n      const migrationContractApproved = await this.checkMigrationContractApproved();\n\n      if (!migrationContractApproved){\n\n        const callbackApprove = (tx,error) => {\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: 'Migrate',\n            eventAction: 'approve',\n            eventLabel: tx ? tx.status : null\n          };\n\n          const txSucceeded = tx && tx.status === 'success';\n\n          // console.log('callbackApprove',tx,error);\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            migrationContractApproved: txSucceeded, // True\n            processing: {\n              ...prevState.processing,\n              approve:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (typeof this.props.callbackApprove === 'function' && txSucceeded){\n            this.props.callbackApprove(tx);\n          }\n\n          this.checkMigration();\n        };\n\n        const callbackReceiptApprove = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              approve:{\n                ...prevState.processing.approve,\n                txHash\n              }\n            }\n          }));\n        };\n\n        this.functionsUtil.enableERC20(this.props.tokenConfig.migration.oldContract.name,migrationContractInfo.address,callbackApprove,callbackReceiptApprove);\n\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            approve:{\n              txHash:null,\n              loading:true\n            }\n          },\n          migrationContractApproved:false\n        }));\n      } else {\n        this.setState({\n          migrationContractApproved:true\n        });\n      }\n    }\n  }\n\n  migrate = async (e,migrationMethod) => {\n    e.preventDefault();\n\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n\n      // Check if the migration contract is approved\n      // const migrationContractApproved = await this.checkMigrationContractApproved();\n\n      // if (!migrationContractApproved){\n      //   return this.approveMigration();\n      // } else {\n        const callbackMigrate = (tx,error) => {\n\n          if (!error && tx && tx.status === 'error'){\n            error = {\n              message:'Unknown error'\n            };\n          } else if (!tx && error){\n            tx = {\n              status:'error'\n            };\n          }\n\n          const txSucceeded = tx && tx.status === 'success';\n\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: 'Migrate',\n            eventAction: migrationMethod,\n            eventLabel: tx ? tx.status : null,\n            eventValue: parseInt(oldIdleTokens)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          // console.log('callbackMigrate',tx,tx.status,txSucceeded,error,this.props.migrationCallback);\n\n          if (txSucceeded){\n            // Toast message\n            window.toastProvider.addMessage(`Migration completed`, {\n              secondaryMessage: `Your funds has been migrated`,\n              colorTheme: 'light',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"success\",\n            });\n\n            if (this.props.migrationCallback && typeof this.props.migrationCallback === 'function'){\n              this.props.migrationCallback(tx);\n            }\n\n          } else { // Show migration error toast only for real error\n            window.toastProvider.addMessage(`Migration error`, {\n              secondaryMessage: `The migration has failed, try again...`,\n              colorTheme: 'light',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"failure\",\n            });\n\n            // Check migration if failed\n            this.checkMigration();\n          }\n\n          this.setState((prevState) => ({\n            migrationEnabled:txSucceeded ? false : true,\n            processing: {\n              ...prevState.processing,\n              migrate:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n        }\n\n        const callbackReceiptMigrate = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              migrate:{\n                ...prevState.processing.migrate,\n                txHash\n              }\n            }\n          }));\n        };\n\n        const callbackPermit = () => {\n          if (typeof this.props.callbackPermit === 'function'){\n            this.props.callbackPermit();\n          }\n        }\n\n        const useMetaTx = this.props.useMetaTx !== false && this.props.biconomy && this.state.metaTransactionsEnabled && !this.state.biconomyLimitReached;\n\n        // Call migration contract function to migrate funds\n        const oldIdleTokens = this.state.oldIdleTokens;\n        const toMigrate = this.props.showBalanceSelector ? this.functionsUtil.integerValue(this.functionsUtil.normalizeTokenAmount(this.state.inputValue[this.state.action],this.state.oldContractTokenDecimals)) : this.functionsUtil.integerValue(this.state.oldContractBalance);\n        // const toMigrate =  this.functionsUtil.normalizeTokenAmount('1',this.state.oldContractTokenDecimals).toString(); // TEST AMOUNT\n\n        let _skipRebalance = typeof this.props.tokenConfig.skipMintForDeposit !== 'undefined' ? this.props.tokenConfig.skipMintForDeposit : this.functionsUtil.getGlobalConfig(['contract','methods','migrate','skipRebalance']);\n\n        // Mint if someone mint over X amount\n        let minAmountForRebalance = null;\n        \n        if (_skipRebalance){\n\n          // Check if the amount is over a certain amount to rebalance the pool\n          if (useMetaTx){\n            minAmountForRebalance = this.functionsUtil.getGlobalConfig(['contract','methods','migrate','minAmountForRebalanceMetaTx']);\n          } else {\n            minAmountForRebalance = this.functionsUtil.getGlobalConfig(['contract','methods','migrate','minAmountForRebalance']);\n          }\n\n          if (minAmountForRebalance){\n            const amountToDeposit = await this.functionsUtil.convertTokenBalance(oldIdleTokens,this.props.selectedToken,this.props.tokenConfig,false);\n            if (amountToDeposit.gte(this.functionsUtil.BNify(minAmountForRebalance))){\n              _skipRebalance = false;\n            }\n          }\n        }\n\n        let migrationParams = this.props.migrationParams ? this.props.migrationParams : [toMigrate,this.props.tokenConfig.migration.oldContract.address,this.props.tokenConfig.idle.address,this.props.tokenConfig.address,_skipRebalance];\n\n        if (typeof migrationParams === 'function'){\n          migrationParams = migrationParams(toMigrate);\n        }\n\n        // Check if Biconomy is enabled\n        if (useMetaTx){\n          const functionSignature = migrationContract.methods[migrationMethod](...migrationParams).encodeABI();\n          this.functionsUtil.sendBiconomyTxWithPersonalSign(migrationContractInfo.name, functionSignature, callbackMigrate, callbackReceiptMigrate);\n          // this.functionsUtil.sendBiconomyTx(migrationContractInfo.name, migrationContractInfo.address, functionSignature, callbackMigrate, callbackReceiptMigrate);\n        } else {\n          const permitContract = this.functionsUtil.getContractByName(this.props.tokenConfig.name);\n          const functionInfo = migrationContractInfo.functions.find( f => f.name === migrationMethod );\n          if (this.props.usePermit && permitContract){\n            this.functionsUtil.sendTxWithPermit(this.props.tokenConfig.name, this.props.account, migrationContractInfo.name, functionInfo.permitName, migrationParams, callbackMigrate, callbackReceiptMigrate, callbackPermit);\n          } else {\n            // Send migration tx\n            this.functionsUtil.contractMethodSendWrapper(migrationContractInfo.name, migrationMethod, migrationParams, callbackMigrate, callbackReceiptMigrate);\n          }\n        }\n\n        // debugger;\n\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            migrate:{\n              txHash:null,\n              loading:true\n            }\n          }\n        }));\n      // }\n    }\n\n    return false;\n  }\n\n  render() {\n\n    if (!this.props.tokenConfig || !this.props.selectedToken){\n      return null;\n    }\n\n    const contractApproved = this.props.usePermit || this.state.migrationContractApproved;\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationEnabled = batchMigrationInfo.enabled && typeof batchMigrationInfo.props.availableTokens[this.props.tokenConfig.idle.token] !== 'undefined';\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    // console.log('contractApproved',contractApproved,this.props.usePermit,this.state.migrationContractApproved);\n\n    const SkipMigrationComponent = (props) => (\n      <DashboardCard\n        cardProps={{\n          pt:2,\n          pb:3,\n          px:2,\n          mb:2,\n          display:'flex',\n          alignItems:'center',\n          flexDirection:'column',\n          justifyContent:'center',\n          mt:this.state.skipMigration ? 3 : 2,\n        }}\n      >\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Icon\n            size={'1.8em'}\n            color={'cellText'}\n            name={'FastForward'}\n          />\n        </Flex>\n        <Checkbox\n          required={false}\n          checked={this.state.skipMigration}\n          label={`Skip migration and deposit in Idle v4`}\n          onChange={ e => this.toggleSkipMigration(e.target.checked) }\n        />\n      </DashboardCard>\n    );\n\n    const biconomyEnabled = this.functionsUtil.getGlobalConfig(['network','providers','biconomy','enabled']) && !this.state.biconomyLimitReached;\n\n    return (\n      this.state.loading && this.props.account ? (\n        <DashboardCard\n          cardProps={{\n            p:3,\n            mt:3,\n            minHeight:'195px',\n            style:{\n              display:'flex',\n              alignItems:'center',\n              justifyContent:'center'\n            }\n          }}\n        >\n          <FlexLoader\n            flexProps={{\n              flexDirection:'row'\n            }}\n            loaderProps={{\n              size:'30px'\n            }}\n            textProps={{\n              ml:2\n            }}\n            text={'Checking migration...'}\n          />\n        </DashboardCard>\n      ) : (\n        (this.state.migrationEnabled && !this.state.skipMigration) ? (\n          <Box width={1}>\n            {\n              !this.props.isMigrationTool &&\n              <Flex\n                mt={3}\n                flexDirection={'column'}\n              >\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  >\n                    <Icon\n                      size={'2.3em'}\n                      color={'cellText'}\n                      name={ this.props.isMigrationTool ? 'SwapHoriz' : 'Warning' }\n                    />\n                    <Text\n                      mt={1}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      { this.props.migrateTextBefore !== null ? this.props.migrateTextBefore : null }\n                      { this.props.migrateTextBefore !== null &&\n                        <br />\n                      }\n                      You { !this.props.isMigrationTool ? 'still' : '' } have <strong>{this.state.oldIdleTokens.toFixed(4)} {this.state.oldTokenName} {this.state.oldIdleTokensConverted ? `(${this.state.oldIdleTokensConverted.toFixed(4)} ${this.props.selectedToken})` : ''}</strong> to migrate.<br />\n                      { this.props.migrateText !== null ? this.props.migrateText : 'Please use the section below to migrate or redeem your old tokens.' }\n                    </Text>\n                  </Flex>\n                </DashboardCard>\n              </Flex>\n            }\n            {\n              (this.props.showActions === undefined || this.props.showActions) && \n                <Flex\n                  mt={2}\n                  flexDirection={'column'}\n                >\n                  {\n                    !this.props.isMigrationTool && \n                      <SkipMigrationComponent />\n                  }\n                  <Text mb={2}>\n                    Choose the action:\n                  </Text>\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'space-between'}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        width:0.48,\n                        onMouseDown:() => {\n                          this.setAction('migrate');\n                        }\n                      }}\n                      isInteractive={true}\n                      isActive={ this.state.action === 'migrate' }\n                    >\n                      <Flex\n                        my={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <TransactionField\n                          transaction={{\n                            action:'migrate'\n                          }}\n                          fieldInfo={{\n                            name:'icon',\n                            props:{\n                              mr:3\n                            }\n                          }}\n                        />\n                        <Text\n                          fontSize={3}\n                          fontWeight={3}\n                        >\n                          Migrate\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        width:0.48,\n                        onMouseDown:() => {\n                          this.setAction('redeem');\n                        }\n                      }}\n                      isInteractive={true}\n                      isActive={ this.state.action === 'redeem' }\n                    >\n                      <Flex\n                        my={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <TransactionField\n                          transaction={{\n                            action:'redeem'\n                          }}\n                          fieldInfo={{\n                            name:'icon',\n                            props:{\n                              mr:3\n                            }\n                          }}\n                        />\n                        <Text\n                          fontSize={3}\n                          fontWeight={3}\n                        >\n                          Redeem\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                </Flex>\n            }\n            {\n              this.state.action === 'migrate' ? (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  flexDirection={'column'}\n                >\n                  {\n                    (batchMigrationEnabled && batchMigrationDepositEnabled && !this.props.isMigrationTool) &&\n                      <Flex\n                        mb={3}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <Link\n                          textAlign={'center'}\n                          hoverColor={'primary'}\n                          href={`/#/dashboard/tools/${batchMigrationInfo.route}/${this.props.tokenConfig.idle.token}`}\n                        >\n                          Gas fees too high? Save gas with our Batch Migrator!\n                        </Link>\n                        <Icon\n                          ml={1}\n                          size={'1em'}\n                          color={'primary'}\n                          name={'LocalGasStation'}\n                        />\n                      </Flex>\n                  }\n                  {\n                    contractApproved ? (\n                      this.state.processing.migrate.loading ? (\n                        <Flex\n                          mt={3}\n                          flexDirection={'column'}\n                        >\n                          <TxProgressBar\n                            {...this.props}\n                            hash={this.state.processing.migrate.txHash}\n                            endMessage={`Finalizing migration request...`}\n                            cancelTransaction={this.cancelTransaction.bind(this)}\n                            waitText={ this.props.waitText ? this.props.waitText : 'Migration estimated in'}\n                            sendingMessage={ this.props.biconomy && this.state.metaTransactionsEnabled ? 'Sending meta-transaction...' : 'Sending transaction...' }\n                          />\n                        </Flex>\n                      ) : this.props.showBalanceSelector ? (\n                        <Flex\n                          mt={1}\n                          flexDirection={'column'}\n                        >\n                          <Flex\n                            mb={3}\n                            width={1}\n                            flexDirection={'column'}\n                          >\n                            <Flex\n                              mb={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={this.props.balanceSelectorInfo ? 'space-between' : 'flex-end'}\n                            >\n                              {\n                                this.props.balanceSelectorInfo && (\n                                  <Flex\n                                    width={1}\n                                    maxWidth={'50%'}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                  >\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      textAlign={'left'}\n                                      style={{\n                                        maxWidth:'100%',\n                                        overflow:'hidden',\n                                        whiteSpace:'nowrap',\n                                        textOverflow:'ellipsis'\n                                      }}\n                                      color={this.props.balanceSelectorInfo.color ? this.props.balanceSelectorInfo.color : 'copyColor'}\n                                    >\n                                      {this.props.balanceSelectorInfo.text}\n                                    </Text>\n                                  </Flex>\n                                )\n                              }\n                              {\n                                this.state.oldIdleTokens && (\n                                  <Flex\n                                    width={1}\n                                    maxWidth={'50%'}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'flex-end'}\n                                  >\n                                    <Link\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      color={'dark-gray'}\n                                      textAlign={'right'}\n                                      hoverColor={'copyColor'}\n                                      onClick={ (e) => this.setFastBalanceSelector(100) }\n                                    >\n                                      Balance: {this.state.oldIdleTokens.toFixed(6)} {this.props.selectedToken}\n                                    </Link>\n                                  </Flex>\n                                )\n                              }\n                            </Flex>\n                            <Input\n                              min={0}\n                              type={\"number\"}\n                              required={true}\n                              height={'3.4em'}\n                              borderRadius={2}\n                              fontWeight={500}\n                              borderColor={'cardBorder'}\n                              backgroundColor={'cardBg'}\n                              boxShadow={'none !important'}\n                              placeholder={'Insert amount'}\n                              onChange={this.changeInputValue.bind(this)}\n                              border={`1px solid ${this.props.theme.colors.divider}`}\n                              value={this.state.inputValue[this.state.action] ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]).toFixed() : ''}\n                            />\n                            <Flex\n                              mt={2}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              {\n                                [25,50,75,100].map( percentage => (\n                                  <FastBalanceSelector\n                                    percentage={percentage}\n                                    key={`selector_${percentage}`}\n                                    onMouseDown={()=>this.setFastBalanceSelector(percentage)}\n                                    isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(percentage)}\n                                  />\n                                ))\n                              }\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            mt={1}\n                            width={1}\n                            alignItems={'center'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.props.tokenConfig.migration.migrationContract.functions.map((functionInfo,i) => {\n                                const functionName = functionInfo.name;\n                                return (\n                                  <RoundButton\n                                    buttonProps={{\n                                      width:[1,0.5],\n                                      disabled:this.state.buttonDisabled,\n                                      mainColor:this.props.theme.colors.migrate\n                                    }}\n                                    key={`migrate_${i}`}\n                                    handleClick={ e => this.migrate(e,functionName) }\n                                  >\n                                    { functionInfo.label }\n                                  </RoundButton>\n                                )\n                              })\n                            }\n                          </Flex>\n                        </Flex>\n                      ) : (\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:2,\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            {\n                              this.props.migrationImage ? (\n                                <Image\n                                  {...this.props.migrationImage}\n                                />\n                              ) : (\n                                <Icon\n                                  size={'2.3em'}\n                                  color={'cellText'}\n                                  name={ this.props.migrationIcon ? this.props.migrationIcon : (this.props.isMigrationTool ? 'SwapHoriz' : 'Repeat') }\n                                />\n                              )\n                            }\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              {\n                                this.props.migrationText ? (\n                                  <Text.span\n                                    migrationTextProps={this.props.migrationTextProps}\n                                    dangerouslySetInnerHTML={{\n                                      __html:this.props.migrationText\n                                    }}\n                                  >\n                                  </Text.span>\n                                ) : (\n                                  <Text.span\n                                    color={'cellText'}\n                                  >\n                                    You are one step away from the migration of your { this.props.isMigrationTool ? this.state.oldIdleTokens.toFixed(4) : 'old' } {this.state.oldTokenName}{ this.props.isMigrationTool ? ` into the Idle ${this.props.tokenConfig.token} ${this.props.selectedStrategy} strategy` : '' }!\n                                  </Text.span>\n                                )\n                              }\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                            {\n                              biconomyEnabled && \n                                <Flex\n                                  py={3}\n                                  px={2}\n                                  mt={2}\n                                  width={1}\n                                  borderRadius={2}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                  backgroundColor={'dashboardBg'}\n                                  border={`1px solid ${this.props.theme.colors.boxBorder}`}\n                                >\n                                  <Text\n                                    mt={1}\n                                    fontSize={1}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    {\n                                      this.props.biconomy ?\n                                        `Meta-Transactions allow you to migrate without spending a dime! But, if you are stuck, please disable it and try again.`\n                                      :\n                                        'Your wallet does not support Meta-transactions, you are still able to migrate with a normal transaction.'\n                                    }\n                                  </Text>\n                                  {\n                                  this.props.biconomy &&\n                                    <Checkbox\n                                      mt={2}\n                                      required={false}\n                                      label={\"Migrate with Meta-Transaction\"}\n                                      checked={this.state.metaTransactionsEnabled}\n                                      onChange={ e => this.toggleMetaTransactionsEnabled(e.target.checked) }\n                                    />\n                                  }\n                                </Flex>\n                            }\n                            {\n                              this.props.tokenConfig.migration.migrationContract.functions.map((functionInfo,i) => {\n                                const functionName = functionInfo.name;\n                                return (\n                                  <RoundButton\n                                    buttonProps={{\n                                      mt:3,\n                                      width:[1,0.5],\n                                      mainColor:this.props.theme.colors.migrate\n                                    }}\n                                    key={`migrate_${i}`}\n                                    handleClick={ e => this.migrate(e,functionName) }\n                                  >\n                                    { functionInfo.label }\n                                  </RoundButton>\n                                )\n                              })\n                            }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      )\n                    ) : this.state.processing.approve.loading ? (\n                      <Flex\n                        mt={3}\n                        flexDirection={'column'}\n                      >\n                        <TxProgressBar\n                          {...this.props}\n                          waitText={`Approve estimated in`}\n                          hash={this.state.processing.approve.txHash}\n                          endMessage={`Finalizing approve request...`}\n                          cancelTransaction={this.cancelTransaction.bind(this)}\n                        />\n                      </Flex>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          mt:2,\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            size={'2.3em'}\n                            name={'LockOpen'}\n                            color={'cellText'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            {\n                              this.props.approveText ? this.props.approveText : `To migrate your ${ !this.props.isMigrationTool ? 'old' : '' } ${this.state.oldTokenName} you need to approve our Smart-Contract first.`\n                            }\n                          </Text>\n                          <RoundButton\n                            buttonProps={{\n                              mt:3,\n                              width:[1,1/2]\n                            }}\n                            handleClick={this.approveMigration.bind(this)}\n                          >\n                            Approve\n                          </RoundButton>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  }\n                </Flex>\n              ) : (\n                !this.state.processing[this.state.action].loading ? (\n                  <Flex\n                    mt={3}\n                    flexDirection={'column'}\n                  >\n                    <Input\n                      min={0}\n                      type={\"number\"}\n                      required={true}\n                      height={'3.4em'}\n                      borderRadius={2}\n                      fontWeight={500}\n                      className={styles.input}\n                      borderColor={'cardBorder'}\n                      backgroundColor={'cardBg'}\n                      boxShadow={'none !important'}\n                      onChange={this.changeInputValue.bind(this)}\n                      border={`1px solid ${this.props.theme.colors.divider}`}\n                      placeholder={`Insert ${this.state.oldTokenName} amount`}\n                      value={this.state.inputValue[this.state.action] !== null ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]).toString() : ''}\n                    />\n                    <Flex\n                      mt={3}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'space-between'}\n                    >\n                      <FastBalanceSelector\n                        percentage={25}\n                        onMouseDown={()=>this.setFastBalanceSelector(25)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(25)}\n                      />\n                      <FastBalanceSelector\n                        percentage={50}\n                        onMouseDown={()=>this.setFastBalanceSelector(50)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(50)}\n                      />\n                      <FastBalanceSelector\n                        percentage={75}\n                        onMouseDown={()=>this.setFastBalanceSelector(75)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(75)}\n                      />\n                      <FastBalanceSelector\n                        percentage={100}\n                        onMouseDown={()=>this.setFastBalanceSelector(100)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(100)}\n                      />\n                    </Flex>\n                    <Flex\n                      mt={3}\n                      justifyContent={'center'}\n                    >\n                      <RoundButton\n                        buttonProps={{\n                          width:[1,1/2],\n                          disabled:this.state.buttonDisabled,\n                          style:{\n                            textTransform:'capitalize'\n                          }\n                        }}\n                        handleClick={this.state.buttonDisabled ? null : this.executeAction.bind(this) }\n                      >\n                        {this.state.action}\n                      </RoundButton>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Flex\n                    mt={4}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      {...this.props}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                      hash={this.state.processing[this.state.action].txHash}\n                      endMessage={`Finalizing ${this.state.action} request...`}\n                      waitText={`${this.functionsUtil.capitalize(this.state.action)} estimated in`}\n                    />\n                  </Flex>\n                )\n              )\n            }\n          </Box>\n        ) : (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'column'}\n            justifyContent={'center'}\n          >\n            {\n              (!this.props.isMigrationTool && this.state.migrationEnabled) && \n                <SkipMigrationComponent />\n            }\n            {\n              this.props.children ? this.props.children : null\n            }\n          </Flex>\n        )\n      )\n    )\n  }\n}\n\nexport default Migrate;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\n\nclass ChartCustomTooltipRow extends Component {\n\n  async componentWillMount(){\n    \n  }\n\n  async componentDidUpdate(prevProps,prevState){\n\n  }\n\n  render() {\n    return (\n      <Flex\n        mb={2}\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n      >\n        <Flex\n          pr={2}\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-start'}\n        > \n          {\n            this.props.color && \n            <Box\n              mr={2}\n              width={'10px'}\n              height={'10px'}\n              borderRadius={'50%'}\n              backgroundColor={this.props.color}\n            >\n            </Box>\n          }\n          <Text\n            fontSize={1}\n            fontWeight={2}\n            textAlign={'left'}\n            color={'dark-gray'}\n            style={{\n              textTransform:'capitalize'\n            }}\n          >\n            {this.props.label}\n          </Text>\n        </Flex>\n        <Flex\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-end'}\n        >\n          <Text\n            fontSize={1}\n            fontWeight={3}\n            color={'cellText'}\n            textAlign={'right'}\n            style={{\n              whiteSpace:'nowrap'\n            }}\n            dangerouslySetInnerHTML={{\n              __html: this.props.value\n            }}\n          >\n          </Text>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default ChartCustomTooltipRow;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport AssetField from '../AssetField/AssetField';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass AssetsList extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    return (\n      <Flex id=\"assets-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"assets-list\" flexDirection={'column'}>\n          {\n            enabledTokens.map(token => {\n              const tokenConfig = this.props.availableTokens ? this.props.availableTokens[token] : null;\n              if (!tokenConfig){\n                return null;\n              }\n              return (\n                <TableRow\n                  token={token}\n                  {...this.props}\n                  key={`asset-${token}`}\n                  tokenConfig={tokenConfig}\n                  rowId={`asset-col-${token}`}\n                  cardId={`asset-card-${token}`}\n                  fieldComponent={this.props.fieldComponent || AssetField}\n                />\n              );\n            })\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default AssetsList;\n","import Footer from '../Footer/Footer';\nimport styles from './Tos.module.scss';\nimport React, { Component } from 'react';\nimport { Box, Flex, Text, Heading } from 'rimble-ui'\n\nclass Tos extends Component {\n  state = {};\n\n  render() {\n    return (\n      <Box>\n        <Box className={styles.headerContainer} pb={[3,5]} px={[3,6]} pt={['2em', '3em']}>\n          <Box className={styles.headerBgFiller}></Box>\n          <Box position={'relative'} zIndex={10}>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"60em\"]} mx={'auto'} pb={3} textAlign={'center'} pt={['8vh', '8vh']}>\n              <Heading.h1 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.2em'} fontSize={['2.5em',7]} textAlign={'center'} color={'white'}>\n                Terms of Service\n              </Heading.h1>\n              <Heading.h2 fontWeight={'400'} lineHeight={['1.4em', '2em']} fontSize={[2,3]} textAlign={'center'} color={'white'}>\n                Updated: November 28, 2019\n              </Heading.h2>\n            </Flex>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"70em\"]} mx={'auto'} textAlign={'center'}>\n              <Box className={styles.textContainer} alignItems={'center'} width={'100%'} minHeight={['auto','20em']} backgroundColor={'white'} color={'dark-gray'} p={[3,4]} boxShadow={'0 0 25px 5px rgba(102, 139, 255, 0.7)'} borderRadius={'15px'} style={{position:'relative'}}>\n                <Box id={'first-paragraph'} pb={3}>\n                  <Text pb={3}>\n                    These terms of service, together with any documents and additional terms they expressly incorporate by reference (collectively, these “Terms”), are entered into between Idle Labs Inc. (“Idle,” “we,” “us” and “our”) and you or the company or other legal entity you represent (“you” or “your”), and constitute a binding legal agreement.\n                  </Text>\n                  <Text pb={3}>\n                    Please read these Terms carefully, as these Terms govern your use of our Portal and our Services, and expressly cover your rights and obligations, and our disclaimers and limitations of legal liability, relating to such use. By accessing or using the Interface, you signify that you have read, understand, and agree to be bound by and to comply with these Terms, including the mandatory arbitration provision in Section 12. If you do not agree to these Terms, you must not access or use our Portal or the Services.\n                  </Text>\n                  <Text pb={3}>\n                    You must be able to form a legally binding contract online either on behalf of a company or as an individual. Accordingly, you represent that: (a) if you are agreeing to these Terms on behalf of a company or other legal entity, you have the legal authority to bind the company or other legal entity to these Terms; and (b) you are at least 18 years old (or the age of majority where you reside, whichever is older), can form a legally binding contract online, and have the full, right, power and authority to enter into and to comply with the obligations under these Terms.\n                  </Text>\n                  <Text pb={3}>\n                    In addition to the foregoing, you also represent and warrant that you are not a citizen or resident of a state, country, territory or other jurisdiction that is embargoed by the United States or where your use of the Portal or the Services would be illegal or otherwise violate any applicable law.  Specifically, you represent that you are not located in, organized in, or a resident of New York, Cuba, Iran, Syria, North Korea, the Crimea region, Venezuela, or any other jurisdiction where Applicable law prohibits you from accessing or using the Services; and you represent that you are not be named on the Office of Foreign Asset Control of the U.S. Department of the Treasury’s Specially Designated and Blocked Persons List.\n                   </Text>\n                  <Text>\n                    Please carefully review the disclosures and disclaimers set forth in Section 9 in their entirety before using any software developed by Idle. The information in Section 9 provides important details about the legal obligations associated with your use of the Idle open-source software. By accessing or using our Portal or our Services, you agree that Idle is a provider of open-source software that optimizes the allocation of your digital assets to third-party decentralized web protocols.  Idle is not affiliated with and has no control over these third-party protocols and is not responsible for any losses that occur as a result of interconnection with these third-party protocols. The Protocol is open-source software deployed on the Ethereum Blockchain.  While Idle developed and deployed the Protocol, the software operates in an autonomous fashion on a decentralized network and, as a result, Idle has no control over user transactions. You accordingly acknowledge that you use the Services at your own risk and agree that Idle will not be responsible for any losses that occur as a result of your use of the Services.\n                  </Text>\n                </Box>\n\n                <Box id={'key-definitions'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    1. KEY DEFINITIONS\n                  </Heading.h3>\n\n                  <Text py={2}>\n                    For the purpose of these Terms, the following capitalized terms shall have the following meanings:\n                  </Text>\n\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>1.1. “Affiliate”</strong> means, with respect to a party to these Terms, any legal entity that, directly or indirectly controls, is controlled by, or is under common control with such party.\n                    </li>\n                    <li>\n                      <strong>1.2. “Applicable Law”</strong> means any domestic or foreign law, rule, statute, regulation, by-law, order, protocol, code, decree, or other directive, requirement or guideline, published or in force which applies to or is otherwise intended to govern or regulate any person, property, transaction, activity, event or other matter, including any rule, order, judgment, directive or other requirement or guideline issued by any Governmental Authority having jurisdiction over Idle, you, the Portal or the Services, or as otherwise duly enacted, enforceable by law, the common law or equity.\n                    </li>\n                    <li>\n                      <strong>1.3. “Ether”</strong> means the Ethereum Blockchain utility token that may be used to purchase computational resources to run decentralized applications or perform actions on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.4. “Ethereum Address”</strong> means the unique public key digital asset identifier that points to an Ethereum-compatible wallet to which Ether may be sent or stored.\n                    </li>\n                    <li>\n                      <strong>1.5. “Ethereum Blockchain”</strong> means the underlying blockchain infrastructure which the Portal leverages to perform portions of the Services.\n                    </li>\n                    <li>\n                      <strong>1.6. “Governmental Authority”</strong> includes any domestic or foreign federal, provincial or state, municipal, local or other governmental, regulatory, judicial or administrative authority.\n                    </li>\n                    <li>\n                      <strong>1.7. “Portal”</strong> means the Idle site located at https://idle.finance and all associated sites linked thereto by Idle and its Affiliates, which includes, for certainty, Idle’s decentralized application layer on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.8. “Protocol”</strong> means the Idle decentralized web protocol, which optimizes the allocation of users’ digital assets to third-party decentralized web protocols.\n                    </li>\n                    <li>\n                      <strong>1.9. “Token”</strong> means an “ERC-20” digital asset issued on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.10. “Services”</strong> has the meaning set out in Section 3.1.\n                    </li>\n                    <li>\n                      <strong>1.11. “Third-Parties Services”</strong> means other services (such as fiat-to-token gateway, or token-to-token swap) provided by third parties services running on Ethereum Blockchain.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'modifications-terms'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    2. MODIFICATIONS TO THESE TERMS\n                  </Heading.h3>\n\n                  <Text py={2}>\n                    We reserve the right, in our sole discretion, to modify these Terms from time to time. If we make changes, we will provide you with notice of such changes, such as by sending an email, providing a notice through our Services or updating the date at the top of these Terms. Unless we say otherwise in our notice, any and all such modifications are effective immediately, and your continued use of our Services after we provide such notice will confirm your acceptance of the changes. If you do not agree to the amended Terms, you must stop using our Services.\n                  </Text>\n                </Box>\n\n                <Box id={'services'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    3. SERVICES\n                  </Heading.h3>\n                </Box>\n\n                <ul className={styles.list}>\n                  <li>\n                    <strong>3.1. Services</strong><br />\n                    The primary purpose of the Portal and Protocol is to enable users to interact with smart contracts that allocate their digital assets to third-party decentralized web protocols and enable users to receive an optimized allocation of digital assets from these protocols in return (the “Services”).\n                  </li>\n                  <li>\n                    <strong>3.2. Fees</strong><br />\n                    Use of the Services is provided to you at no charge. Fees are charged on-top of Third-Parties.\n                  </li>\n                  <li>\n                    <strong>3.3. Ethereum Gas Charges</strong><br />\n                    Some Services involve the use of the Ethereum Blockchain, which may require that you pay a fee, commonly known as “Ethereum Gas Charges,” for the computational resources required to perform a transaction on the Ethereum Blockchain. You acknowledge and agree that Idle has no control over: (a) any Ethereum Blockchain transactions; (b) the method of payment of any Ethereum Gas Charges; or (c) any actual payments of Ethereum Gas Charges. Accordingly, you must ensure that you have a sufficient balance of Ether stored at your Ethereum Address to complete any transaction on the Ethereum Blockchain before initiating such Ethereum Blockchain transaction. We will make reasonable efforts to notify you of any Ethereum Gas Charges before initiating any Services that require the use of the Ethereum Blockchain.\n                  </li>\n                  <li>\n                    <strong>3.4. Conditions and Restrictions</strong><br />\n                    We may, at any time and in our sole discretion, restrict your access to, or otherwise impose conditions or restrictions upon your use of, the Services or the Portal, with or without prior notice.\n                  </li>\n                  <li>\n                    <strong>3.5. No Broker, Legal or Fiduciary Relationship</strong><br />\n                    Idle is not your broker, lawyer, intermediary, agent, or advisor and has no fiduciary relationship or obligation to you regarding any other decisions or activities that you effect when using the Portal or the Services. Neither our communications nor any information that we provide to you is intended as, or shall be considered or construed as, advice.\n                  </li>\n                  <li>\n                    <strong>3.6. Your Responsibilities</strong><br />\n                    As a condition to accessing or using the Services or the Portal, you shall:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>only use the Services and the Portal for lawful purposes and in accordance with these Terms;</li>\n                      <li>ensure that, at all times, all information that you provide on the Portal is current, complete and accurate; and maintain the security and confidentiality of your Ethereum Address.</li>\n                      <li>shall be responsible for payment of all applicable taxes, if any, to which the Services might be subject and any and all other taxes which may apply to you.</li>\n                    </ul>\n                  </li>\n                  <li>\n                    <strong>3.7. Unacceptable Use or Conduct</strong><br />\n                    As a condition to accessing or using the Portal or the Services, you will not:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>violate any Applicable Law, including, without limitation, any relevant and applicable anti-money laundering and anti-terrorist financing laws, such as the Bank Secrecy Act, each as may be amended;</li>\n                      <li>infringe on or misappropriate any contract, intellectual property or other third-party right, or commit a tort while using the Portal or the Services;</li>\n                      <li>use the Services in any manner that could interfere with, disrupt, negatively affect, or inhibit other users from fully enjoying the Services, or that could damage, disable, overburden, or impair the functioning of the Services in any manner;</li>\n                      <li>attempt to circumvent any content filtering techniques or security measures that Idle employs on the Portal, or attempt to access any service or area of the Portal or the Services that you are not authorized to access;</li>\n                      <li>use the Services to pay for, support, or otherwise engage in any illegal gambling activities, fraud, money-laundering, or terrorist activities, or other illegal activities;</li>\n                      <li>use any robot, spider, crawler, scraper, or other automated means or interface not provided by us, to access the Services or to extract data;</li>\n                      <li>introduce any malware, virus, Trojan horse, worm, logic bomb, drop-dead device, backdoor, shutdown mechanism or other harmful material into the Portal or the Services;</li>\n                      <li>provide false, inaccurate, or misleading information;</li>\n                      <li>post content or communications on the Portal that are, in our sole discretion, libelous, defamatory, profane, obscene, pornographic, sexually explicit, indecent, lewd, vulgar, suggestive, harassing, hateful, threatening, offensive, discriminatory, bigoted, abusive, inflammatory, fraudulent, deceptive or otherwise objectionable;</li>\n                      <li>post content on the Portal containing unsolicited promotions, political campaigning, or commercial messages or any chain messages or user content designed to deceive or trick the user of the Service;</li>\n                      <li>use the Portal or the Services from a jurisdiction that we have, in our sole discretion, or a relevant Governmental Authority has determined is a jurisdiction where the use of the Portal or the Services is prohibited; or</li>\n                      <li>encourage or induce any third party to engage in any of the activities prohibited under this Section 3.7.</li>\n                    </ul>\n                  </li>\n\n                  <li>\n                    <strong>3.8. Your Assumption of Risks</strong><br />\n                    You represent and warrant that you:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>have the necessary technical expertise and ability to review and evaluate the security, integrity and operation of any transactions that you engage in through the Protocol;</li>\n                      <li>have the knowledge, experience, understanding, professional advice and information to make your own evaluation of the merits, risks and applicable compliance requirements under Applicable Law of engaging in transactions through the Protocol;</li>\n                      <li>acknowledge and understand that the Protocol allocates your digital assets to third-party decentralized web protocols to facilitate your lending and borrowing through these third-party protocols and that Idle is not responsible or liable for these transactions or the operation of these third-party protocols;</li>\n                      <li>know, understand and accept the risks associated with your Ethereum Address, the Ethereum Blockchain, Ether and Tokens; and</li>\n                      <li>accept the risks associated with lending, borrowing and trading Ether and Tokens, and are responsible for conducting your own independent analysis of the risks specific to any Ether and Tokens lent, borrowed or traded by you and your use of the Services.</li>\n                    </ul>\n                    You hereby assume, and agree that Idle will have no responsibility or liability for, such risks. You hereby irrevocably waive, release and discharge all claims, whether known or unknown to you, against Idle, its affiliates and their respective shareholders, members, directors, officers, employees, agents and representatives related to any of the risks set forth herein.\n                  </li>\n                  <li>\n                    <strong>3.9. Additional Representations</strong><br />\n                    You represent and warrant that you:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>are not using the Protocol to engage in the leveraged, margined, or financed purchase of digital assets; and</li>\n                      <li>are using the Protocol for the purpose of accessing third-party decentralized web protocols.</li>\n                    </ul>\n                  </li>\n                  <li>\n                    <strong>3.10. Your Content</strong><br />\n                    You hereby grant to us a royalty-free, fully paid-up, sublicensable, transferable, perpetual, irrevocable, non-exclusive, worldwide license to use, copy, modify, create derivative works of, display, perform, publish and distribute, in any form, medium or manner, any content that is available to other users via the Idle Platform as a result of your use of the Portal (collectively, “Your Content”) through your use of the Services or the Portal, including, without limitation, for promoting Idle (or its Affiliates), the Services or the Portal. You represent and warrant that: (a) you own Your Content or have the right to grant the rights and licenses in these Terms; and (b) Your Content and our use of Your Content, as licensed herein, does not and will not violate, misappropriate or infringe on any third party’s rights.\n                  </li>\n                </ul>\n\n                <Box id={'privacy-policy'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    4. PRIVACY POLICY\n                  </Heading.h3>\n                  <Text py={2}>\n                    Please refer to our privacy policy available at https://idle.finance/privacy-policy for information about how we collect, use, share and otherwise process information about you.\n                  </Text>\n                </Box>\n\n                <Box id={'proprietary-rights'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    5. PROPRIETARY RIGHTS\n                  </Heading.h3>\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>5.1. Ownership of Services; License to Services</strong><br />\n                      Excluding any open source software (as further described in Section 5.2) or third-party software that the Portal or the Services incorporates, as between you and Idle, Idle owns the Portal and the Services, including all technology, content and other materials used, displayed or provided on the Portal or in connection with the Services (including all intellectual property rights subsisting therein), and hereby grants you a limited, revocable, transferable, license to access and use those portions of the Portal and the Services that are proprietary to Idle.\n                    </li>\n                    <li>\n                      <strong>5.2. Idle License; Open Source Software License; Limitations</strong><br />\n                      The Portal and the Services are governed by the most recent version of the open source license commonly known as the Apache 2.0 a copy of which (as it applies to the Portal and the Services) can be found at:  https://apache.org/licenses/LICENSE-2.0 (as of the date these Terms were last updated) and any other applicable licensing terms for the Portal and the Services in these Terms (collectively, the “Idle License”). You acknowledge that the Portal or the Services may use, incorporate or link to certain open-source components and that your use of the Portal or Services is subject to, and you will comply with any, applicable open-source licenses that govern any such open-source components (collectively, “Open-Source Licenses”). Without limiting the generality of the foregoing, you may not: (a) resell, lease, lend, share, distribute or otherwise permit any third party to use the Portal or the Services; (b) use the Portal or the Services for time-sharing or service bureau purposes; or (c) otherwise use the Portal or the Services in a manner that violates the Idle License or any other Open-Source Licenses.\n                    </li>\n                    <li>\n                      <strong>5.3. Trademarks</strong><br />\n                      Any of Idle’s product or service names, logos, and other marks used in the Portal or as a part of the Services, including Idle's name and logo are trademarks owned by Idle, its Affiliates or its applicable licensors. You may not copy, imitate or use them without Idle’s (or the applicable licensor’s) prior written consent.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'changes-suspension-termination'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    6. CHANGES; SUSPENSION; TERMINATION\n                  </Heading.h3>\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>6.1. Changes to Services</strong><br />\n                      We may, at our sole discretion, from time to time and with or without prior notice to you, modify, suspend or disable, temporarily or permanently, the Services, in whole or in part, for any reason whatsoever, including, but not limited to, as a result of a security incident.\n                    </li>\n                    <li>\n                      <strong>6.2. No Liability</strong><br />\n                      We will not be liable for any losses suffered by you resulting from any modification to any Services or from any suspension or termination, for any reason, of your access to all or any portion of the Portal or the Services.\n                    </li>\n                    <li>\n                      <strong>6.3. Survival</strong><br />\n                      The following sections will survive any termination of your access to the Portal or the Services, regardless of the reasons for its expiration or termination, in addition to any other provision which by law or by its nature should survive: Sections 1, 4, 5, 6.3, and 7-14.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'electronic-notices'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    7. ELECTRONIC NOTICES\n                  </Heading.h3>\n                  <Text py={2}>\n                    You consent to receive all communications, agreements, documents, receipts, notices, and disclosures electronically (collectively, our “Communications”) that we provide in connection with these Terms or any Services. You agree that we may provide our Communications to you by posting them on the Portal or by emailing them to you at the email address you provide in connection with using the Services, if any. You should maintain copies of our Communications by printing a paper copy or saving an electronic copy. You may also contact our support team to request additional electronic copies of our Communications by filing a support request at info@idle.finance.\n                  </Text>\n                </Box>\n\n                <Box id={'indemnification'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    8. INDEMNIFICATION\n                  </Heading.h3>\n                  <Text py={2}>\n                    You will defend, indemnify, and hold harmless us, our Affiliates, and our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers and contractors (collectively, “Indemnified Parties”) from any claim, demand, lawsuit, action, proceeding, investigation, liability, damage, loss, cost or expense, including without limitation reasonable attorneys’ fees, arising out of or relating to (a) your use of, or conduct in connection with, the Portal, Services or Margin Tokens; (b) Ethereum Blockchain assets associated with your Ethereum Address; (c) any feedback or user content you provide to the Portal, if any; (d) your violation of these Terms; or (e) your infringement or misappropriation of the rights of any other person or entity. If you are obligated to indemnify any Indemnified Party, Idle (or, at its discretion, the applicable Indemnified Party) will have the right, in its sole discretion, to control any action or proceeding and to determine whether Idle wishes to settle, and if so, on what terms.\n                  </Text>\n                </Box>\n\n                <Box id={'disclosures-disclaimers'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    9. Disclosures; DISCLAIMERS\n                  </Heading.h3>\n                  <Text py={2}>\n                    Idle is a developer of open-source software. Idle does not operate a digital asset exchange platform or execute peer-to-peer transactions through its Protocol and therefore has no oversight, involvement, or control with respect to your transactions, which are executed through third-party protocols and the Ethereum Blockchain.  The Protocol is an autonomous decentralized web protocol deployed to the Ethereum Blockchain that operates in a disintermediated fashion, and, as such, Idle does not participate in any of these transactions.  In each instance, when you interact with the Protocol, you are interacting with a smart contract that transfers your digital assets to a third-party protocol.\n                  </Text>\n                  <Text py={2}>\n                    [Under U.S. federal law, unless you are an “eligible contract participant” as defined in 7 U.S.C. § 1a(18), your transaction must settle within 28 days. Individuals who do not have more than $10 million invested on a discretionary basis (or $5 million if the transaction is for the purpose of managing risk associated with an asset owned or liability incurred, or reasonably likely to be owned or incurred) are not eligible contract participants and may not enter into transactions using the Idle open-source software that do not result in actual delivery of digital assets within 28 days.]\n                  </Text>\n                  <Text py={2}>\n                    You are responsible for complying with all laws and regulations applicable to your transactions, including, but not limited to, the Commodity Exchange Act and the regulations promulgated thereunder by the U.S. Commodity Futures Trading Commission (“CFTC”), and the federal securities laws and the regulations promulgated thereunder by the U.S. Securities and Exchange Commission (“SEC”).\n                  </Text>\n                  <Text py={2}>\n                    You understand that Idle is not registered or licensed by the CFTC, SEC, the Financial Crimes Enforcement Network or any financial regulatory authority. No financial regulatory authority has reviewed or approved the use of the Idle open-source software. This website and the Idle open-source software do not constitute advice or a recommendation concerning any commodity, security or other asset. Idle is not acting as an investment adviser or commodity trading adviser to any person.\n                  </Text>\n                  <Text py={2}>\n                    Idle does not own or control the underlying software protocols that enable the Protocol to function. In general, the underlying protocols are open-source and anyone can use, copy, modify, and distribute them. Idle is not responsible for operation of the underlying protocols, and Idle makes no guarantee of their functionality, security, or availability.\n                  </Text>\n                  <Text py={2}>\n                    To the maximum extent permitted under Applicable Law, the Portal and the Services (and any of their content or functionality) provided by or on behalf of us are provided on an “AS IS” and “AS AVAILABLE” basis, and we expressly disclaim, and you hereby waive, any representations, conditions or warranties of any kind, whether express or implied, legal, statutory or otherwise, or arising from statute, otherwise in law, course of dealing, or usage of trade, including, without limitation, the implied or legal warranties and conditions of merchantability, merchantable quality, quality or fitness for a particular purpose, title, security, availability, reliability, accuracy, quiet enjoyment and non-infringement of third party rights. Without limiting the foregoing, we do not represent or warrant that the Portal or the Services (including any data relating thereto) will be uninterrupted, available at any particular time or error-free. Further, we do not warrant that errors in the Portal or the Service are correctable or will be correctable.\n                  </Text>\n                  <Text py={2}>\n                    You acknowledge that your data on the Portal may become irretrievably lost or corrupted or temporarily unavailable due to a variety of causes, and agree that, to the maximum extent permitted under Applicable Law, we will not be liable for any loss or damage caused by denial-of-service attacks, software failures, viruses or other technologically harmful materials (including those which may infect your computer equipment), protocol changes by third party providers, Internet outages, force majeure events or other disasters, scheduled or unscheduled maintenance, or other causes either within or outside our control.\n                  </Text>\n                  <Text py={2}>\n                    The disclaimer of implied warranties contained herein may not apply if and to the extent such warranties cannot be excluded or limited under the Applicable Law of the jurisdiction in which you reside.\n                  </Text>\n                </Box>\n\n                <Box id={'exclusion-consequential-related-damages'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    10. EXCLUSION OF CONSEQUENTIAL AND RELATED DAMAGES\n                  </Heading.h3>\n                  <Text py={2}>\n                    In no event shall we (together with our Affiliates, including our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers or contractors) be liable for any incidental, indirect, special, punitive, consequential or similar damages or liabilities whatsoever (including, without limitation, damages for loss of data, information, revenue, goodwill, profits or other business or financial benefit) arising out of or in connection with the Portal and the Services (and any of their content and functionality), any execution or settlement of a transaction, any performance or non-performance of the Services, your Ether, Margin Tokens or any other product, service or other item provided by or on behalf of us, whether under contract, tort (including negligence), civil liability, statute, strict liability, breach of warranties, or under any other theory of liability, and whether or not we have been advised of, knew of or should have known of the possibility of such damages and notwithstanding any failure of the essential purpose of these Terms or any limited remedy hereunder nor is Idle in any way responsible for the execution or settlement of transactions between users of Idle open-source software.\n                  </Text>\n                </Box>\n\n                <Box id={'exclusion-consequential-related-damages'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    11. LIMITATION OF LIABILITY\n                  </Heading.h3>\n                  <Text py={2}>\n                    In no event shall our aggregate liability (together with our Affiliates, including our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers or contractors) arising out of or in connection with the Portal and the Services (and any of their content and functionality), any performance or non-performance of the Services, your Ether, Margin Tokens or any other product, service or other item provided by or on behalf of us, whether under contract, tort (including negligence), civil liability, statute, strict liability or other theory of liability exceed the amount of fees paid by you to us under these Terms, if any, in the twelve (12) month period immediately preceding the event giving rise to the claim for liability.\n                  </Text>\n                </Box>\n\n                <Box id={'dispute-resolution-arbitration'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    12. DISPUTE RESOLUTION AND ARBITRATION\n                  </Heading.h3>\n                  <Text py={2}>\n                    Please read the following section carefully because it requires you to arbitrate certain disputes and claims with Idle and limits the manner in which you can seek relief from us, unless you opt out of arbitration by following the instructions set forth below. In addition, arbitration precludes you from suing in court or having a jury trial.\n                    You and Idle agree that any dispute arising out of or related to these Terms or our Services is personal to you and Idle and that any dispute will be resolved solely through individual action, and will not be brought as a class arbitration, class action or any other type of representative proceeding.\n                  </Text>\n                  <Text py={2}>\n                    Except for small claims disputes in which you or Idle seeks to bring an individual action in small claims court located in the county of your billing address or disputes in which you or Idle seeks injunctive or other equitable relief for the alleged unlawful use of intellectual property, you and Idle waive your rights to a jury trial and to have any dispute arising out of or related to these Terms or our Services resolved in court. Instead, for any dispute or claim that you have against Idle or relating in any way to the Services, you agree to first contact Idle and attempt to resolve the claim informally by sending a written notice of your claim (“Notice”) to Idle by email at info@idle.finance or by certified mail addressed to info@idle.finance. The Notice must (a) include your name, residence address, email address, and telephone number; (b) describe the nature and basis of the claim; (c) set forth the specific relief sought. Our notice to you will be similar in form to that described above. If you and Idle cannot reach an agreement to resolve the claim within thirty (30) days after such Notice is received, then either party may submit the dispute to binding arbitration administered by JAMS or, under the limited circumstances set forth above, in court. All disputes submitted to JAMS will be resolved through confidential, binding arbitration before one arbitrator. Arbitration proceedings will be held in New York City, New York, in accordance with the JAMS Streamlined Arbitration Rules and Procedures (“JAMS Rules”). The most recent version of the JAMS Rules are available on the JAMS website and are hereby incorporated by reference. You either acknowledge and agree that you have read and understand the JAMS Rules or waive your opportunity to read the JAMS Rules and waive any claim that the JAMS Rules are unfair or should not apply for any reason.\n                  </Text>\n                  <Text py={2}>\n                    You and Idle agree that these Terms affect interstate commerce and that the enforceability of this Section 12 will be substantively and procedurally governed by the Federal Arbitration Act, 9 U.S.C. § 1, et seq. (the “FAA”), to the maximum extent permitted by applicable law. As limited by the FAA, these Terms and the JAMS Rules, the arbitrator will have exclusive authority to make all procedural and substantive decisions regarding any dispute and to grant any remedy that would otherwise be available in court, including the power to determine the question of arbitrability. The arbitrator may conduct only an individual arbitration and may not consolidate more than one individual’s claims, preside over any type of class or representative proceeding or preside over any proceeding involving more than one individual.\n                  </Text>\n                  <Text py={2}>\n                    The arbitrator, Idle, and you will maintain the confidentiality of any arbitration proceedings, judgments and awards, including, but not limited to, all information gathered, prepared and presented for purposes of the arbitration or related to the dispute(s) therein. The arbitrator will have the authority to make appropriate rulings to safeguard confidentiality, unless the law provides to the contrary. The duty of confidentiality does not apply to the extent that disclosure is necessary to prepare for or conduct the arbitration hearing on the merits, in connection with a court application for a preliminary remedy or in connection with a judicial challenge to an arbitration award or its enforcement, or to the extent that disclosure is otherwise required by law or judicial decision.\n                  </Text>\n                  <Text py={2}>\n                    You and Idle agree that for any arbitration you initiate, you will pay the filing fee and Idle will pay the remaining JAMS fees and costs. For any arbitration initiated by Idle, Idle will pay all JAMS fees and costs. You and Idle agree that the state or federal courts of the State of New York and the United States sitting in New York City, New York have exclusive jurisdiction over any appeals and the enforcement of an arbitration award.\n                  </Text>\n                  <Text py={2}>\n                    Any claim arising out of or related to these Terms or our Services must be filed within one year after such claim arose; otherwise, the claim is permanently barred, which means that you and Idle will not have the right to assert the claim.\n                  </Text>\n                  <Text py={2}>\n                    You have the right to opt out of binding arbitration within 30 days of the date you first accepted the terms of this Section 12 by emailing us at info@idle.finance. In order to be effective, the opt-out notice must include your full name and address and clearly indicate your intent to opt out of binding arbitration. By opting out of binding arbitration, you are agreeing to resolve disputes in accordance with Section 13.\n                  </Text>\n                  <Text py={2}>\n                    If any portion of this Section 12 is found to be unenforceable or unlawful for any reason, (a) the unenforceable or unlawful provision shall be severed from these Terms; (b) severance of the unenforceable or unlawful provision shall have no impact whatsoever on the remainder of this Section 12 or the parties’ ability to compel arbitration of any remaining claims on an individual basis pursuant to this Section 12; and (c) to the extent that any claims must therefore proceed on a class, collective, consolidated, or representative basis, such claims must be litigated in a civil court of competent jurisdiction and not in arbitration, and the parties agree that litigation of those claims shall be stayed pending the outcome of any individual claims in arbitration. Further, if any part of this Section 12 is found to prohibit an individual claim seeking public injunctive relief, that provision will have no effect to the extent such relief is allowed to be sought out of arbitration, and the remainder of this Section 12 will be enforceable.\n                  </Text>\n                </Box>\n\n                <Box id={'governing-law'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    13. GOVERNING LAW\n                  </Heading.h3>\n                  <Text py={2}>\n                    The interpretation and enforcement of these Terms, and any dispute related to these Terms, the Portal or the Services, will be governed by and construed and enforced in accordance with the laws of the State of Delaware, as applicable, without regard to conflict of law rules or principles (whether of the State of Delaware or any other jurisdiction) that would cause the application of the laws of any other jurisdiction. You agree that we may initiate a proceeding related to the enforcement or validity of our intellectual property rights in any court having jurisdiction. With respect to any other proceeding that is not subject to arbitration under these Terms, the state and federal courts located in Wilmington, Delaware, will have exclusive jurisdiction. You waive any objection to venue in any such courts.\n                  </Text>\n                </Box>\n\n                <Box id={'miscellaneous'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    14. MISCELLANEOUS\n                  </Heading.h3>\n                  <Text py={2}>\n                    Any right or remedy of Idle set forth in these Terms is in addition to, and not in lieu of, any other right or remedy whether described in these Terms, under Applicable Law, at law or in equity. Our failure or delay in exercising any right, power, or privilege under these Terms shall not operate as a waiver thereof. The invalidity or unenforceability of any of these Terms shall not affect the validity or enforceability of any other of these Terms, all of which shall remain in full force and effect. We will have no responsibility or liability for any failure or delay in performance of the Portal or any of the Services, or any loss or damage that you may incur, due to any circumstance or event beyond our control, including without limitation any flood, extraordinary weather conditions, earthquake, or other act of God, fire, war, insurrection, riot, labor dispute, accident, action of government, communications, power failure, or equipment or software malfunction. You may not assign or transfer any right to use the Portal or the Services, or any of your rights or obligations under these Terms, without our express prior written consent, including by operation of law or in connection with any change of control. We may assign or transfer any or all of our rights or obligations under these Terms, in whole or in part, without notice or obtaining your consent or approval. Headings of sections are for convenience only and shall not be used to limit or construe such sections. These Terms contain the entire agreement and supersede all prior and contemporaneous understandings between the parties regarding the Portal and the Services. In the event of any conflict between these Terms and any other agreement you may have with us, these Terms will control unless the other agreement specifically identifies these Terms and declares that the other agreement supersedes these Terms.\n                  </Text>\n                </Box>\n\n              </Box>\n            </Flex>\n          </Box>\n        </Box>\n        <Footer />\n      </Box>\n    );\n  }\n}\n\nexport default Tos;\n","import baseColors, { blue, green, yellow, red } from \"./colors\";\nimport { tint, shade } from 'polished';\n\n// theme.js\nexport default {\n  breakpoints: ['52em', '64em'],\n  // breakpoints: ['40em', '52em', '64em', '80em'],\n  fontSizes: [12, 14, 16, 18, 21, 32, 38, 48, 54, 64, 72, 84],\n  fontWeights: [0, 300, 400, 600, 700, 800],\n  letterSpacings: [0, 1, 2, 4, 8],\n  lineHeights: {\n    solid: 1,\n    title: 1.25,\n    copy: 1.5,\n  },\n  fonts: {\n    serif: '\"georgia regular\", athelas, times, serif',\n    sansSerif: '\"Inter\", -apple-system, sans-serif',\n    counter: '\"Roboto Mono\", Arial, -apple-system, sans-serif'\n  },\n  space: [0, 4, 8, 16, 32, 64, 128, 256],\n  radii: ['0', '4px', '8px', '16px', '2rem'],\n  width: [0, 16, 32, 64, 128, 256],\n  minWidths: [0, 16, 32, 64, 128, 256],\n  maxWidths: [0, 16, 32, 64, 128, 256, 512, 768, 1024, 1536],\n  heights: [0, 16, 32, 64, 128, 256],\n  minHeights: [0, 16, 32, 64, 128, 256],\n  maxHeights: [0, 16, 32, 64, 128, 256],\n  borders: [0, '1px solid #0d2034','1px solid #475d7c'],\n  borderWidths: ['0', '1px', '2px', '4px'],\n  shadows: [\n    '0',\n    '0px 2px 4px rgba(0, 0, 0, 0.1)',\n    '0 7px 14px rgba(50,50,93,.1)',\n    '1px 1px 0px rgba(0,0,0,0.2)',\n    '0px 0px 16px 2px rgb(71,93,123,0.6)'\n  ],\n  opacity: {\n    disabled: 0.4,\n  },\n  colors: {\n    primary: '#fcfcfc',\n    'gradient-bg': 'linear-gradient(120deg, #f6d365 0%, #ea0d73 100%)',\n    'primary-light': blue.light[1],\n    'primary-dark': blue.dark[1],\n    bgBlue: '#0030e0',\n    blue: '#0036ff',\n    tick: \"#00b84a\",\n    'dark-blue': '#00219a',\n    skyBlue: '#00abfe',\n    lightBlue: '#79f4e1',\n    copyColor: '#fcfcfc',\n    subColor: '#a7a7a7',\n    black: baseColors.black,\n    'near-black': '#1e3657',\n    'dark-gray': '#fcfcfc',\n    'mid-gray': '#999',\n    gray: ' #e0e0e0',\n    grey: '#CCC',\n    silver: '#999',\n    'light-silver': '#aaa',\n    'moon-gray': '#ccc',\n    'light-gray': '#eee',\n    'near-white': '#a4aec6',\n    white: '#fff',\n    transparent: 'transparent',\n    green:'#00b84a',\n    /*\n    NEW COLORS\n    */\n    newblue: \"#2B65D9\",\n    alert:'#ff9900',\n    arrowActive:'#d8d8d8',\n    arrowInactive:'#4f4f4f',\n    selectBgFocused:'#1e3657',\n    selectBg:'#162e4d',\n    backButtonBg:'#162e4d',\n    lineChartStroke:'#a4aec6',\n    wrongNetworkBannerBg:'#0e2133',\n    dashboardBg: '#13273f',\n    statValue: '#a4aec6',\n    boxBorder: '#eeeeee',\n    cellTitle: '#a4aec6',\n    cellText: '#a4aec6',\n    divider: '#a4aec6',\n    counter: '#a4aec6',\n    redeem: '#00a9fe',\n    link:'#00a9fe',\n    deposit: '#0239ff',\n    migrate: '#00a9fe',\n    legend: '#c9c9c9',\n    cardBg:'#162e4d',\n    menuBg:'#162e4d',\n    menuHover:'#1e3657',\n    flashColor:'#bac5ff',\n    cardBgHover:'#1e3657',\n    cardBorder:'#0d2034',\n    pageActive:'#d8d8d8',\n    pageInactive:'#4f4f4f',\n    menuIconActive:'#2a65d9',\n    cardBgContrast:\"#1e3657\",\n    menuRightBorder:'#0d2034',\n    cardHoverShadow:'0px 0px 0px 1px rgb(45 74 114)',\n    transactions:{\n      action:{\n        send:'#10a0dd',\n        swap:'#3d53c0',\n        exit:'#10a0dd',\n        boost:'#ffff00',\n        redeem:'#10a0dd',\n        swapout:'#10a0dd',\n        deposit:'#3d53c0',\n        curvein:'#10a0dd',\n        receive:'#3d53c0',\n        migrate:'#3d53c0',\n        default:'#4f4f4f',\n        curveout:'#3d53c0',\n        withdraw:'#10a0dd',\n        curvedepositin:'#10a0dd',\n        curvedepositout:'#3d53c0'\n      },\n      actionBg:{\n        send:'#ceeff6',\n        swap:'#ced6ff',\n        exit:'#ceeff6',\n        boost:'#ff7979',\n        redeem:'#ceeff6',\n        swapout:'#ceeff6',\n        deposit:'#ced6ff',\n        curvein:'#ceeff6',\n        default:'#dadada',\n        receive:'#ced6ff',\n        migrate:'#ced6ff',\n        withdraw:'#ceeff6',\n        curveout:'#ced6ff',\n        curvedepositin:'#ceeff6',\n        curvedepositout:'#ced6ff'\n      },\n      status:{\n        completed:'#00b84a',\n        pending:'#a5a5a5',\n        failed:'#fa0000'\n      }\n    },\n    blacks: [\n      'rgba(0,0,0,.0125)',\n      'rgba(0,0,0,.025)',\n      'rgba(0,0,0,.05)',\n      'rgba(0,0,0,.1)',\n      'rgba(0,0,0,.2)',\n      'rgba(0,0,0,.3)',\n      'rgba(0,0,0,.4)',\n      'rgba(0,0,0,.5)',\n      'rgba(0,0,0,.6)',\n      'rgba(0,0,0,.7)',\n      'rgba(0,0,0,.8)',\n      'rgba(0,0,0,.9)',\n    ],\n    whites: [\n      'rgba(255,255,255,.0125)',\n      'rgba(255,255,255,.025)',\n      'rgba(255,255,255,.05)',\n      'rgba(255,255,255,.1)',\n      'rgba(255,255,255,.2)',\n      'rgba(255,255,255,.3)',\n      'rgba(255,255,255,.4)',\n      'rgba(255,255,255,.5)',\n      'rgba(255,255,255,.6)',\n      'rgba(255,255,255,.7)',\n      'rgba(255,255,255,.8)',\n      'rgba(255,255,255,.9)',\n    ],\n  },\n  zIndices: [0, 9, 99, 999, 9999],\n  messageStyle: {\n    base: {\n      color: '#fcfcfc',\n      borderColor: '#0d2034',\n      backgroundColor: '#162e4d',\n    },\n    success: {\n      color: shade(0.4, green.base),\n      backgroundColor: tint(0.9, green.base),\n      borderColor: green.base,\n    },\n    warning: {\n      color: shade(0.4, yellow.base),\n      backgroundColor: tint(0.9, yellow.base),\n      borderColor: yellow.base,\n    },\n    danger: {\n      color: shade(0.4, red.base),\n      backgroundColor: tint(0.9, red.base),\n      borderColor: red.base,\n    },\n    info: {\n      color: '#fcfcfc',\n      borderColor: '#0d2034',\n      backgroundColor: '#162e4d',\n    },\n  },\n  buttons: {\n    primary: {\n      color: blue.text,\n      backgroundColor: blue.base,\n      // use css custom props\n      '--main-color': blue.base,\n      '--contrast-color': blue.text,\n    },\n    normal: {\n      color: baseColors.black,\n      '--contrast-color': baseColors.black,\n    },\n    success: {\n      '--main-color': green.base,\n      '--contrast-color': green.text,\n    },\n    danger: {\n      '--main-color': red.base,\n      '--contrast-color': red.text,\n    },\n  },\n  buttonSizes: {\n    small: {\n      fontSize: '0.75rem',\n      height: '2rem',\n      minWidth: '2rem',\n      padding: '0 1rem',\n    },\n    medium: {\n      fontSize: '1rem',\n      height: '3rem',\n      minWidth: '3rem',\n    },\n    large: {\n      fontSize: '1.5rem',\n      height: '4rem',\n      minWidth: '4rem',\n      borderRadius: '2rem'\n    },\n  },\n};\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class TorusConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: Torus, initParams, ...rest } = kwargs;\n    super(rest);\n\n    this.torus = null;\n    this.Torus = Torus;\n    this.initParams = initParams;\n  }\n\n  async onActivation() {\n    if (!this.torus) {\n      this.torus = new this.Torus({\n        buttonPosition: \"bottom-right\" // default: bottom-left\n      });\n    }\n    await this.torus.init();\n    await this.torus.login();\n  }\n\n  async getProvider(){\n    return new Promise( async (resolve, reject) => {\n      resolve(this.torus.provider);\n    });\n  }\n\n  async getAccount(provider) {\n    const userInfo = await this.torus.getUserInfo();\n    if (userInfo){\n      return await this.torus.getPublicAddress({\n        verifier:userInfo.verifier,\n        verifierId:userInfo.verifierId\n      });\n    }\n    return null;\n  }\n\n  async onDeactivation() {\n    await this.torus.logout();\n  }\n\n  changeNetwork(network) {\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class AuthereumConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: Authereum, network, ...rest } = kwargs;\n    super(rest);\n\n    this.authereum = null;\n    this.Authereum = Authereum;\n    this.network = network;\n  }\n\n  async onActivation() {\n    if (!this.authereum) {\n      this.authereum = new this.Authereum(this.network);\n    }\n    const provider = await this.getProvider();\n    if (provider){\n      await provider.enable();\n      return provider;\n    }\n  }\n\n  async getProvider(){\n    return new Promise( async (resolve, reject) => {\n      resolve(this.authereum.getProvider());\n    });\n  }\n\n  async getAccount(provider) {\n    if (provider){\n      const accounts = await provider.getAccounts();\n      if (accounts && accounts.length){\n        return accounts[0];\n      }\n    }\n    return null;\n  }\n\n  async disable() {\n    const provider = await this.getProvider();\n    if (provider){\n      await provider.disable();\n      return provider;\n    }\n  }\n\n  changeNetwork(network) {\n    this.constructor({\n      api: this.Authereum,\n      network\n    })\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class GnosisSafeConnector extends Connector {\n\n  constructor(SafeAppConnector) {\n    super(...arguments);\n    this.safeLoaded = false;\n    this.SafeAppConnector = SafeAppConnector;\n    this.provider = new this.SafeAppConnector();\n    this.checkSafeApp();\n  }\n\n  async onActivation() {\n    if (!this.provider) {\n      this.provider = new this.SafeAppConnector();\n    }\n\n    if (this.provider){\n      await this.provider.activate();\n      return this.provider;\n    }\n  }\n\n  async getAccount() {\n    if (this.provider){\n      return await this.provider.getAccount();\n    }\n  }\n\n  async getProvider(){\n    if (this.provider){\n      return await this.provider.getProvider();\n    }\n  }\n\n  async getSafeInfo() {\n    if (this.provider){\n      return await this.provider.getSafeInfo();\n    }\n  }\n\n  async getChainId() {\n    if (this.provider){\n      return await this.provider.getChainId();\n    }\n  }\n\n  async checkSafeApp() {\n    if (this.provider){\n      const isSafeApp = await this.provider.isSafeApp();\n      this.safeLoaded = true;\n      return isSafeApp;\n    }\n  }\n\n  async disable() {\n    if (this.provider){\n      this.provider.deactivate();\n      return this.provider;\n    }\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class WalletLinkConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: WalletLink, appName, infuraUrl, chainId, appLogoUrl, ...rest } = kwargs;\n    super(rest);\n\n    this.provider = null;\n    this.walletLink = null;\n    this.appName = appName;\n    this.chainId = chainId;\n    this.infuraUrl = infuraUrl;\n    this.appLogoUrl = appLogoUrl;\n    this.WalletLink = WalletLink;\n  }\n\n  async onActivation() {\n    if (!this.walletLink){\n      this.walletLink = new this.WalletLink({\n        darkMode: false,\n        appName: this.appName,\n        infuraUrl: this.infuraUrl,\n        appLogoUrl: this.appLogoUrl,\n      });\n    }\n\n    const provider = this.getProvider();\n    if (provider){\n      await provider.enable();\n      return provider;\n    }\n  }\n\n  getProvider(){\n    if (!this.provider){\n      this.provider = this.walletLink.makeWeb3Provider(this.infuraUrl, this.chainId);\n    }\n    return this.provider;\n  }\n\n  async getAccount(provider) {\n    if (provider){\n      // Use eth_RequestAccounts\n      const accounts = await provider.send('eth_requestAccounts');\n      if (accounts && accounts.length){\n        return accounts[0];\n      }\n    }\n    return null;\n  }\n\n  async disable() {\n    const provider = this.getProvider();\n    if (provider){\n      this.walletLink.disconnect();\n      await provider.close();\n      return provider;\n    }\n  }\n\n  changeNetwork(network) {\n    this.constructor({\n      network,\n      api: this.WalletLink,\n      appName: this.appName,\n      chainId: this.chainId,\n      infuraUrl: this.infuraUrl,\n      appLogoUrl: this.appLogoUrl,\n    })\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class WalletConnectConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: WalletConnectProvider, defaultNetwork, infuraId, ...rest } = kwargs;\n    super(rest);\n\n    this.provider = null;\n    this.WalletConnectProvider = WalletConnectProvider;\n    this.infuraId = infuraId;\n  }\n\n  async onActivation() {\n    if (!this.provider) {\n      this.provider = new this.WalletConnectProvider({\n        infuraId:this.infuraId\n      });\n    }\n\n    if (this.provider){\n      await this.provider.enable();\n      return this.provider;\n    }\n  }\n\n  async getProvider(){\n    return this.provider;\n  }\n\n  async disable() {\n    if (this.provider){\n      this.provider.close();\n      return this.provider;\n    }\n  }\n}\n","import WalletLink from 'walletlink';\nimport AuthereumApi from 'authereum';\nimport PortisApi from \"@portis/web3\";\nimport FortmaticApi from \"fortmatic\";\nimport TrezorApi from \"trezor-connect\";\nimport { Connectors } from \"web3-react\";\nimport TorusApi from '@toruslabs/torus-embed';\nimport globalConfigs from '../configs/globalConfigs';\nimport TorusConnector from './connectors/TorusConnector';\nimport AuthereumConnector from './connectors/AuthereumConnector';\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport GnosisSafeConnector from './connectors/GnosisSafeConnector';\nimport WalletLinkConnector from './connectors/WalletLinkConnector';\nimport { SafeAppConnector } from '@gnosis.pm/safe-apps-web3-react';\nimport WalletConnectConnector from './connectors/WalletConnectConnector';\n\nconst {\n  InjectedConnector,\n  NetworkOnlyConnector,\n  TrezorConnector,\n  LedgerConnector,\n  FortmaticConnector,\n  PortisConnector\n} = Connectors;\n\nconst env = process.env;\n\nconst manifestEmail = env.REACT_APP_TREZOR_MANIFEST_EMAIL; // trezor\nconst manifestAppUrl = env.REACT_APP_TREZOR_MANIFEST_URL; // trezor\nconst defaultNetwork = globalConfigs.network.requiredNetwork;\nconst fortmaticApiKey = env.REACT_APP_FORTMATIC_KEY_MAINNET;\nconst portisDAppId = env.REACT_APP_PORTIS_DAPP_ID;\nconst portisNetwork = env.REACT_APP_PORTIS_NETWORK;\n\nconst supportedNetworkURLs = {};\n  \nObject.keys(globalConfigs.network.providers.infura.rpc).forEach((networkId,index) => {\n  networkId = parseInt(networkId);\n  supportedNetworkURLs[networkId] = globalConfigs.network.providers.infura.rpc[networkId]+env.REACT_APP_INFURA_KEY;\n});\n\nconst Injected = new InjectedConnector({\n  supportedNetworks: globalConfigs.network.enabledNetworks\n});\n\nconst Infura = new NetworkOnlyConnector({\n  providerURL: supportedNetworkURLs[defaultNetwork]\n});\n\n\nconst Trezor = new TrezorConnector({\n  api: TrezorApi,\n  supportedNetworkURLs,\n  defaultNetwork,\n  manifestEmail,\n  manifestAppUrl\n});\n\nconst Ledger = new LedgerConnector({\n  supportedNetworkURLs,\n  defaultNetwork\n});\n\nconst WalletConnect = new WalletConnectConnector({\n  defaultNetwork,\n  supportedNetworkURLs,\n  api: WalletConnectProvider,\n  infuraId:env.REACT_APP_INFURA_KEY,\n  bridge: \"https://bridge.walletconnect.org\",\n});\n\nconst Fortmatic = new FortmaticConnector({\n  api: FortmaticApi,\n  apiKey: fortmaticApiKey,\n  logoutOnDeactivation: false\n});\n\nconst Portis = new PortisConnector({\n  api: PortisApi,\n  dAppId: portisDAppId,\n  network: portisNetwork\n});\n\nconst Authereum = new AuthereumConnector({\n  api: AuthereumApi,\n  network: globalConfigs.network.availableNetworks[defaultNetwork].name.toLowerCase()\n});\n\nconst walletLink = new WalletLinkConnector({\n  api: WalletLink,\n  darkMode: false,\n  chainId: defaultNetwork,\n  appName: globalConfigs.appName,\n  infuraUrl: supportedNetworkURLs[defaultNetwork],\n  appLogoUrl: 'https://idle.finance/images/idle-mark.png',\n});\n\nconst Torus = new TorusConnector({\n  api: TorusApi,\n  initParams:{\n    buildEnv: 'production', // default: production\n    enableLogging: false, // default: false\n    network: {\n      host: globalConfigs.network.availableNetworks[defaultNetwork].name.toLowerCase(), // default: mainnet\n      chainId: defaultNetwork, // default: 1\n      networkName: globalConfigs.network.availableNetworks[defaultNetwork].name.toLowerCase() // default: Main Ethereum Network\n    },\n    showTorusButton: false // default: true\n  }\n});\n\nconst gnosis = new GnosisSafeConnector(SafeAppConnector);\n\nexport default {\n  Injected,\n  Infura,\n  WalletConnect,\n  gnosis,\n  walletLink,\n  Fortmatic,\n  Portis,\n  Authereum,\n  Torus,\n  Trezor,\n  Ledger,\n};","import React from \"react\";\nimport { Box, Flex, Text, Icon } from \"rimble-ui\";\n\nclass WrongNetworkBanner extends React.Component {\n  render() {\n    const bannerStyle = {\n      position: \"fixed\",\n      bottom: 0,\n      left: 0,\n      right: 0,\n      width: \"100%\",\n      zIndex: 9999\n    };\n\n    return (\n      <Box style={bannerStyle} backgroundColor={'wrongNetworkBannerBg'} p={3}>\n        <Flex alignItems={\"center\"}>\n          <Box p={4}>\n            <Icon name=\"Warning\" color=\"gold\" size=\"30\" />\n          </Box>\n          <Flex flexDirection={\"column\"}>\n            <Text fontWeight={\"bold\"}>\n              Looks like you're on the wrong network\n            </Text>\n            <Text>\n              The network you are currently connected{\" \"}\n              <Text.span style={{ textTransform: \"capitalize\" }}>\n                ({this.props.network.current.name})\n              </Text.span>{\" \"}\n              is not supported - please switch to the correct network.\n            </Text>\n          </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default WrongNetworkBanner;\n","import React from \"react\";\n\nimport WrongNetworkBanner from \"./components/WrongNetworkBanner\";\n\nclass NetworkUtil extends React.Component {\n  render() {\n    return (\n      <div>\n        { this.props.network.isSupportedNetwork === false && this.props.web3 &&\n          <WrongNetworkBanner\n            network={this.props.network}\n          />\n        }\n      </div>\n    );\n  }\n}\n\nexport default NetworkUtil;\n","import React from \"react\";\nimport { Box, Heading, Text, Modal, Link } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport RimbleUtil from \"@rimble/utils\";\n\nclass NoWeb3BrowserModal extends React.Component {\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2\n          fontSize={4}\n          fontWeight={3}\n          lineHeight={\"1.375em\"}\n          my={3}\n        >\n          Switch browsers to use the Idle App\n        </Heading.h2>\n\n        {RimbleUtil.isMobileDevice() ? (\n          <Text my={4}>\n            You can't use our blockchain features, like increasing the count\n            value, in this browser. We recommend using{\" \"}\n            <Link\n              href=\"https://status.im/\"\n              title=\"status.im website\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Status\n            </Link>\n            ,{\" \"}\n            <Link\n              href=\"https://www.cipherbrowser.com/\"\n              title=\"Cipher Wallet\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Cipher\n            </Link>{\" \"}\n            or{\" \"}\n            <Link\n              href=\"https://wallet.coinbase.com/\"\n              title=\"Coinbase Wallet\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Coinbase wallet\n            </Link>{\" \"}\n            browsers.\n          </Text>\n        ) : (\n          <Box>\n            <Text my={4}>\n              You can't use our blockchain features, like increasing the\n              count value, in this browser. Switch to{\" \"}\n              <Link\n                href=\"https://brave.com/download/\"\n                title=\"Download Brave browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Brave\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.mozilla.org/\"\n                title=\"Download FireFox browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                FireFox\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.opera.com/download\"\n                title=\"Download Opera Browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Opera\n              </Link>\n              , or{\" \"}\n              <Link\n                href=\"https://www.google.com/chrome/\"\n                title=\"Download Chrome browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Chrome\n              </Link>{\" \"}\n              to continue.\n            </Text>\n\n            <Text>\n              <Text.span bold>Rather use your phone?</Text.span> You can use\n              the Idle App in mobile browser wallets like{\" \"}\n              <Link\n                href=\"https://status.im/\"\n                title=\"status.im website\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Status\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.cipherbrowser.com/\"\n                title=\"Cipher Wallet\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Cipher\n              </Link>{\" \"}\n              or{\" \"}\n              <Link\n                href=\"https://wallet.coinbase.com/\"\n                title=\"Coinbase Wallet\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Coinbase wallet\n              </Link>\n              .\n            </Text>\n          </Box>\n        )}\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default NoWeb3BrowserModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Flex,\n  Icon,\n  Modal,\n  Link,\n  Button\n} from \"rimble-ui\";\n\nclass NoWalletModal extends React.Component {\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card p={5} maxWidth={\"600px\"}>\n          <Button.Text\n            icononly\n            icon={\"Close\"}\n            color={\"moon-gray\"}\n            position={\"absolute\"}\n            top={0}\n            right={0}\n            mt={3}\n            mr={3}\n            onClick={this.props.closeModal}\n          />\n\n          <Flex flexDirection={\"column\"} justifyContent={\"space-between\"}>\n            <Flex justifyContent={\"center\"} my={4}>\n              <Icon name=\"Warning\" color=\"gold\" size=\"40\" />\n            </Flex>\n\n            <Heading.h2 my={3}>No Wallet Available</Heading.h2>\n\n            <Text my={4}>\n              Your current browser does not have a blockchain connected wallet.\n              Try using MetaMask, Fortmatic, Portis.\n            </Text>\n\n            <Link\n              href=\"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              <Button.Outline size=\"small\">Get MetaMask Extension</Button.Outline>\n            </Link>\n          </Flex>\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default NoWalletModal;\n","// Checks for MetaMask\nconst GeneralUtil = {\n  hasMetaMask: () => {\n    let hasMetaMask = false;\n\n    if (typeof window.ethereum !== \"undefined\") {\n      hasMetaMask = typeof window.ethereum.isMetaMask !== \"undefined\";\n    } else if (typeof window.web3 !== 'undefined') {\n      hasMetaMask = typeof window.web3.currentProvider.isMetaMask !== 'undefined' && window.web3.currentProvider.isMetaMask;\n    }\n\n    return hasMetaMask;\n  },\n  isTrustWallet: () => {\n    if (typeof window.web3 !== \"undefined\" && typeof window.web3.currentProvider !== 'undefined'){\n      return typeof window.web3.currentProvider.isTrust !== 'undefined' && window.web3.currentProvider.isTrust;\n    }\n    return false;\n  },\n  isCoinbaseWallet: () => {\n    if (typeof window.web3 !== \"undefined\" && typeof window.web3.currentProvider !== 'undefined'){\n      return typeof window.web3.currentProvider.isCoinbaseWallet !== 'undefined' && window.web3.currentProvider.isCoinbaseWallet;\n    }\n    return false;\n  },\n  hasDapper: () => {\n    let hasDapper = typeof window.DapperEthereum !== 'undefined';\n\n    if (typeof window.ethereum !== \"undefined\") {\n      hasDapper = typeof window.ethereum.isDapper !== \"undefined\" && window.ethereum.isDapper;\n    }\n\n    return hasDapper;\n  },\n  isOpera: () => {\n    return /Opera|OPR\\//.test(navigator.userAgent);\n  },\n  // Current device is Android\n  isAndroid: () => {\n    const isAndroid = /android/i.test(navigator.userAgent) ? true : false;\n\n    return isAndroid;\n  },\n  // Current device is iOS\n  isIos() {\n    const isIos =\n      /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream\n        ? true\n        : false;\n\n    return isIos;\n  }\n};\n\nexport default GeneralUtil;\n","import React from \"react\";\nimport {\n  Heading,\n  Text,\n  Flex,\n  Modal,\n  Button,\n  Box,\n  Loader\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport GeneralUtil from \"../GeneralUtil\";\nimport RimbleUtils from \"@rimble/utils\";\n\nclass WrongNetworkModal extends React.Component {\n  renderContent = () => {\n    return (\n      <ModalCard.Body>\n        <Heading.h2 my={3}>\n          Switch to the {this.props.network.required.name} network in{\" \"}\n          {GeneralUtil.hasMetaMask() ? `MetaMask` : `Settings`}\n        </Heading.h2>\n\n        <Text my={4}>\n          The Idle App only works on the{\" \"}\n          <Text.span style={{ textTransform: \"capitalize\" }}>\n            {this.props.network.required.name}\n          </Text.span>{\" \"}\n          network. You’re currently on the{\" \"}\n          <Text.span style={{ textTransform: \"capitalize\" }}>\n            {\" \"}\n            {this.props.network.current.name}\n          </Text.span>{\" \"}\n          network.\n        </Text>\n\n        {GeneralUtil.hasMetaMask() && !RimbleUtils.isMobileDevice() ? (\n          <Box bg={\"#f6f6fc\"} p={3} display={[\"none\", \"block\"]}>\n            <Flex alignItems={\"center\"}>\n              <Box position={\"relative\"} width={\"4em\"}>\n                <Box>\n                  <Loader size={\"3em\"} />\n                </Box>\n              </Box>\n              <Box>\n                <Text fontWeight={4}>Waiting for the right network...</Text>\n                <Text fontWeight={2}>\n                  Go to your Wallet and to switch\n                </Text>\n              </Box>\n            </Flex>\n          </Box>\n        ) : null}\n\n        <Box display={[\"block\", \"none\"]}>\n          <Button onClick={this.props.closeModal} width={1}>\n            OK\n          </Button>\n        </Box>\n      </ModalCard.Body>\n    )\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <React.Fragment>\n            {this.renderContent()}\n          </React.Fragment>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default WrongNetworkModal;\n","import React from \"react\";\nimport { Heading, Text, Box, Flex, Icon } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\n\nfunction TransactionFeeModal(props) {\n  return (\n    <Box>\n      <ModalCard.Header title={'Transaction fees, what are you paying for?'} subtitle={'You need to pay a fee to use the Ethereum blockchain.'} subtitle2={'This pays for someone to process your transaction and store the data.'}></ModalCard.Header>\n      <ModalCard.Body>\n        <Flex flexDirection={['column', 'row']}\n          justifyContent={\"space-between\"}\n          my={[0, 4]}>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"Fingerprint\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Undeniable proof</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              You get a public record of any funds you send or receive, a bit like\n              a deed for a house.\n            </Text>\n          </Box>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"EnhancedEncryption\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Unbreakable encryption</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              Your funds can only ever go to your intended recipients.\n            </Text>\n          </Box>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"AccountBalance\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n              <Icon\n                name=\"NotInterested\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Unparalleled control</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              You can pay or get paid without using any banks or companies.\n            </Text>\n          </Box>\n        </Flex>\n      </ModalCard.Body>\n    </Box>\n  );\n}\n\nexport default TransactionFeeModal;\n","import React from 'react'\nimport moment from 'moment';\nimport connectors from '../App/connectors';\nimport { useWeb3Context } from 'web3-react';\nimport GeneralUtil from \"../utilities/GeneralUtil\";\nimport ImageButton from '../ImageButton/ImageButton';\nimport globalConfigs from '../configs/globalConfigs';\nimport styles from './Web3ConnectionButtons.module.scss';\nimport { Button, Box, Text, Flex, Link } from 'rimble-ui';\n\nconst LOG_ENABLED = false;\nconst customLog = (...props) => { if (LOG_ENABLED) console.log(moment().format('HH:mm:ss'),...props); };\n\nexport default function Web3ConnectionButtons(props) {\n  const context = useWeb3Context();\n\n  if (!context.active && !context.error) {\n    customLog('context loading', context);\n  } else if (context.error) {\n    customLog('context error', context);\n  } else {\n    customLog('context success', context);\n  }\n\n  const setConnector = async (connectorName,name) => {\n    let walletProvider = connectorName === 'Injected' ? name : connectorName;\n    if (localStorage) {\n      localStorage.setItem('walletProvider', walletProvider);\n      localStorage.setItem('connectorName', connectorName);\n    }\n\n    if (props.setConnector && typeof props.setConnector === 'function'){\n      props.setConnector(connectorName,walletProvider);\n    }\n    \n    // Close modal\n    if (typeof props.connectionCallback === 'function'){\n      props.connectionCallback();\n    }\n\n    return connectorName;\n    // return await context.setConnector(connectorName);\n  };\n\n  const unsetConnector = async () => {\n    context.unsetConnector();\n    if (props.setConnector && typeof props.setConnector === 'function'){\n      props.setConnector('Infura','Infura');\n    }\n  };\n\n  // Show provider fields to detect in-app browser\n  // alert(JSON.stringify(Object.keys(window.web3.currentProvider)));\n    \n  const isOpera = GeneralUtil.isOpera();\n  const isDapper = GeneralUtil.hasDapper();\n  const isMetamask = GeneralUtil.hasMetaMask();\n  const isTrustWallet = GeneralUtil.isTrustWallet();\n  const isGnosisSafe = !!connectors.gnosis.provider.safe;\n  const isCoinbaseWallet = GeneralUtil.isCoinbaseWallet();\n  const browserWalletDetected = isMetamask || isOpera || isDapper || isCoinbaseWallet || isTrustWallet;\n  \n  const allowedConnectors = props.allowedConnectors;\n  const registerPage = props.registerPage;\n\n  if (connectors.Portis) {\n    if (registerPage) {\n      connectors.Portis.options = connectors.Portis.options || {};\n      connectors.Portis.options.registerPageByDefault = true;\n    } else {\n      connectors.Portis.options = connectors.Portis.options || {};\n      connectors.Portis.options.registerPageByDefault = false;\n    }\n  }\n\n  let basicConnectorsName = Object.keys(connectors).filter(c => c !== 'Infura');\n\n  if (allowedConnectors) {\n    basicConnectorsName = basicConnectorsName.filter(n => allowedConnectors.map((v) => { return v.toLowerCase(); }).indexOf(n.toLowerCase()) !== -1 );\n  }\n\n  // Handle Gnosis Safe connector\n  if (isGnosisSafe){\n    const injectedIndex = basicConnectorsName.indexOf('Injected');\n    // Remove Injected\n    basicConnectorsName.splice(injectedIndex,1);\n    // Remove Gnosis\n    const gnosisIndex = basicConnectorsName.indexOf('gnosis');\n    basicConnectorsName.splice(gnosisIndex,1);\n    // Insert Gnosis in first place\n    basicConnectorsName.unshift('gnosis');\n  } else {\n    const gnosisIndex = basicConnectorsName.indexOf('gnosis');\n    // Remove Gnosis\n    basicConnectorsName.splice(gnosisIndex,1);\n  }\n\n  const buttons = basicConnectorsName.map( (connectorName,index) => {\n    switch (connectorName) {\n      case 'Injected':\n        if (browserWalletDetected) {\n          let name = null;\n          if (isMetamask) {\n            name = 'Metamask';\n          } else if (isOpera) {\n            name = 'Opera';\n          } else if (isDapper){\n            name = 'Dapper';\n          } else if (isCoinbaseWallet){\n            name = 'Coinbase';\n          } else if (isTrustWallet){\n            name = 'TrustWallet';\n          }\n\n          const connectorInfo = globalConfigs.connectors[name.toLowerCase()];\n          if (connectorInfo && connectorInfo.enabled){\n            const walletIcon = connectorInfo.icon ? connectorInfo.icon : `${name.toLowerCase()}.svg`;\n            return (\n              <Flex\n                width={1}\n                key={`wallet_${name}`}\n                justifyContent={'space-between'}\n                style={{\n                  flex:'0 100%',\n                }}\n                flexDirection={['column','row']}\n              >\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={name}\n                  isMobile={true}\n                  width={[1,0.48]}\n                  imageProps={{width:'auto',height:'42px'}}\n                  imageSrc={`images/connectors/${walletIcon}`}\n                  handleClick={ async () => await setConnector(connectorName,name)}\n                  subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using ${name}` }\n                />\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  isMobile={true}\n                  width={[1,0.48]}\n                  caption={'Watch Address'}\n                  imageSrc={`images/tokens/ETH.svg`}\n                  subcaption={'Watch an Ethereum address'}\n                  imageProps={{width:'auto',height:'42px'}}\n                  handleClick={ e => props.setCustomAddress(true) }\n                />\n              </Flex>\n            )\n          }\n          return null;\n        } else {\n          const connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n          return (\n            <ImageButton\n              buttonProps={{\n                border:2\n              }}\n              isMobile={true}\n              caption={'Browser Wallet'}\n              key={`wallet_${connectorName}`}\n              imageProps={{width:'auto',height:'42px'}}\n              imageSrc={`images/connectors/browser-wallet.png`}\n              handleClick={ async () => await setConnector(connectorName) }\n              subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using a browser wallet`}\n              buttonStyle={ props.isMobile ? {justifyContent:'flex-start',flex:'0 100%'} : {justifyContent:'flex-start',flex:'0 48%'} }\n            />\n          );\n        }\n      default:\n        const connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n        if (connectorInfo && connectorInfo.enabled){\n          const walletIcon = connectorInfo.iconModal ? connectorInfo.iconModal : (connectorInfo.icon ? connectorInfo.icon : `${connectorName.toLowerCase()}.svg`);\n\n          let caption = connectorInfo.name ? connectorInfo.name : connectorName;\n          return (\n            <ImageButton\n              buttonProps={{\n                border:2\n              }}\n              isMobile={true}\n              caption={caption}\n              key={`wallet_${connectorName}`}\n              imageSrc={`images/connectors/${walletIcon}`}\n              imageProps={{width:'auto',height:'42px'}}\n              handleClick={ async () => await setConnector(connectorName) }\n              subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using ${connectorName}`}\n              buttonStyle={ props.isMobile ? {justifyContent:'flex-start',flex:'0 100%'} : {justifyContent:'flex-start',flex:'0 48%'} }\n            />\n          );\n        }\n        return null;\n    }\n  });\n\n  return (\n    <Box width={[1]}>\n      <Flex flexDirection={'column'} alignItems={\"center\"}>\n        {context.error && (\n          <Text.p textAlign=\"center\">\n            An error occurred, are you using an Ethereum browser such as\n            <Link href=\"https://metamask.io/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">\n              &nbsp; Metamask &nbsp;\n            </Link>\n             or\n            <Link href=\"https://www.meetdapper.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">\n              &nbsp; Dapper\n            </Link>\n            ?\n            If you do not have an Ethereum wallet follow the\n            \"I'm new to Ethereum\" flow when connecting.\n            If you do have a wallet, click Reset and retry one of the wallet listed below,\n            Generic wallet option is used for Ethereum browsers only.\n          </Text.p>\n        )}\n        {(context.active || (context.error && context.connectorName)) && context.connectorName !== 'Infura' && (\n          <Button.Outline\n            width={[1/2]}\n            className={[styles.button]}\n            mb={[1, 3]}\n            size={'large'}\n            key={'reset'}\n            onClick={async () => await unsetConnector()}\n          >\n            {context.active ? \"Deactivate Connector\" : \"Reset\"}\n          </Button.Outline>\n        )}\n      </Flex>\n      <Flex\n        flexWrap={'wrap'}\n        flexDirection={'row'}\n        justifyContent={'space-between'}\n      >\n        {buttons}\n      </Flex>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport {\n  Box,\n  Text,\n  Link,\n  Icon,\n  Flex,\n  Field,\n  Modal,\n  Input,\n  Loader,\n  Button,\n  Heading\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard.js';\nimport styles from './Header.module.scss';\nimport FunctionsUtil from '../FunctionsUtil.js';\nimport ImageButton from '../../ImageButton/ImageButton.js';\nimport TransactionFeeModal from \"./TransactionFeeModal.js\";\nimport Web3ConnectionButtons from \"../../Web3ConnectionButtons/Web3ConnectionButtons.js\";\n\nimport {\n  Link as RouterLink\n} from \"react-router-dom\";\n\nclass ConnectionModal extends React.Component {\n  // TODO save pref in localstorage and do not show 'Before connecting' info every time\n  state = {\n    validated:false,\n    showTxFees:false,\n    customAddress:'',\n    currentSection:null,\n    showInstructions:false,\n    askCustomAddress:false,\n    closeRemainingTime:null,\n    customAddressError:false,\n    newToEthereumChoice:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  toggleShowTxFees = e => {\n    e.preventDefault();\n\n    this.setState({\n      showTxFees: !this.state.showTxFees\n    });\n  }\n\n  setStoredSection = () => {\n    let currentSection = null;\n    if (localStorage){\n      currentSection = localStorage.getItem('currentSection');\n      if (currentSection){\n        this.setState({\n          currentSection\n        });\n      }\n    }\n    return currentSection;\n  }\n\n  componentDidMount = () => {\n    this.loadUtils();\n    this.setStoredSection();\n  }\n\n  componentDidUpdate = () => {\n    this.loadUtils();\n  }\n\n  resetModal = e => {\n    this.setState({\n      showTxFees: false,\n      currentSection:null,\n      askCustomAddress:false,\n      showInstructions: false,\n      newToEthereumChoice:null,\n    });\n  }\n\n  setConnector = async (connectorName,name) => {\n    let walletProvider = connectorName === 'Injected' ? name : connectorName;\n\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory:'Connect',\n      eventLabel:walletProvider,\n      eventAction:'select_wallet'\n    });\n\n    if (this.props.setConnector && typeof this.props.setConnector === 'function'){\n      this.props.setConnector(connectorName,walletProvider);\n    }\n\n    // Set Wallet choice\n    this.setState({\n      newToEthereumChoice: connectorName\n    });\n\n    this.closeCountdown();\n\n    return connectorName;\n\n    // return await window.RimbleWeb3_context.setConnector(connectorName);\n  }\n\n  closeCountdown = () => {\n    const closeRemainingTime = this.state.closeRemainingTime ? this.state.closeRemainingTime-1 : 5;\n    if (!closeRemainingTime){\n      this.closeModal();\n    } else {\n      setTimeout(() => { this.closeCountdown() },1000);\n    }\n    this.setState({\n      closeRemainingTime\n    });\n  }\n\n  setWalletChoice = (e,choice) => {\n    e.preventDefault();\n    this.setState({\n      newToEthereumChoice: choice\n    });\n  }\n\n  closeModal = () => {\n    // Reset modal\n    this.resetModal();\n    // Set latest stored sections\n    this.setStoredSection();\n    // Close modal\n    this.props.closeModal();\n  }\n\n  setCurrentSection = (e,currentSection) => {\n    e.preventDefault();\n    this.setState({\n      currentSection\n    });\n\n    if (currentSection!=='instructions'){\n      // Send Google Analytics event\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Connect',\n        eventAction: 'select_mode',\n        eventLabel: currentSection\n      });\n\n      this.functionsUtil.setLocalStorage('currentSection',currentSection);\n    }\n  }\n\n  connectCustomAddress = () => {\n    const addressValid = this.functionsUtil.checkAddress(this.state.customAddress);\n    if (addressValid){\n      this.setCustomAddress(false);\n      this.functionsUtil.setCustomAddress(this.state.customAddress);\n      this.setConnector('custom','custom');\n      setTimeout(() => { this.closeModal() },1000);\n      return true;\n    } else {\n      return this.setState({\n        customAddressError:true\n      });\n    }\n  }\n\n  updateCustomAddress = (e) => {\n    const customAddressError = false;\n    const customAddress = e.target.value;\n    const validated = this.functionsUtil.checkAddress(customAddress);\n    this.setState({\n      validated,\n      customAddress,\n      customAddressError\n    });\n  }\n\n  setCustomAddress = (askCustomAddress) => {\n    this.setState({\n      askCustomAddress\n    });\n  }\n\n  renderModalContent = () => {\n\n    const TOSacceptance = (\n      <Box>\n        <Text textAlign={'center'} fontSize={1} py={[2,3]}>By connecting, I accept Idle's <RouterLink to=\"/terms-of-service\" color={'primary'} style={{color:this.props.theme.colors.primary,textDecoration:'underline'}} target={'_blank'} rel=\"nofollow noopener noreferrer\">Terms of Service</RouterLink></Text>\n      </Box>\n    );\n\n    const newToEthereum = this.state.currentSection === 'new';\n    const showConnectionButtons = this.state.currentSection === 'wallet';\n    const showInstructions = this.state.currentSection === 'instructions';\n\n    if (showInstructions){\n      return (\n        <React.Fragment>\n          <ModalCard.Header title={'Before you connect'} subtitle={'Connecting lets you use Idle via your Ethereum account.'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              flexDirection={['column', 'row']}\n              justifyContent={\"space-between\"}\n              my={[0, 3]}\n            >\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"Public\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>The blockchain is public</Heading>\n                <Text fontSize={1} textAlign={'center'}>\n                  Your Ethereum account activity is public on the\n                  blockchain. Choose an account you don’t mind being\n                  linked with your activity here.\n                </Text>\n              </Box>\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"AccountBalanceWallet\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>Have some Ether for fees</Heading>\n                <Text fontSize={1} mb={3} textAlign={'center'}>\n                  You’ll need Ether to pay transaction fees. Buy Ether\n                  from exchanges like Coinbase or directly via enabled wallet\n                  such as Portis or Dapper.<br />\n                  <Link\n                    title=\"Learn about Ethereum transaction fees\"\n                    fontWeight={'0'}\n                    color={'blue'}\n                    textAlign={'center'}\n                    hoverColor={'blue'}\n                    href=\"#\"\n                    onClick={this.toggleShowTxFees}\n                  >\n                    What are transaction fees?\n                  </Link>\n                </Text>\n              </Box>\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"People\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>Have the right account ready</Heading>\n                <Text fontSize={1} textAlign={'center'}>\n                  If you have multiple Ethereum accounts, check that the\n                  one you want to use is active in your browser.\n                </Text>\n              </Box>\n            </Flex>\n          </ModalCard.Body>\n        </React.Fragment>\n      );\n    }\n\n    if (this.state.askCustomAddress){\n      return (\n        <Box>\n          <ModalCard.Header\n            title={'Connect ETH wallet'}\n            icon={'images/idle-mark.png'}\n            subtitle={'And get started with Idle.'}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              width={1}\n              minWidth={[1,'30em']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Field\n                width={1}\n                label={'Ethereum address'}\n              >\n                <Input\n                  required\n                  width={1}\n                  type={'text'}\n                  className={styles.input}\n                  borderColor={'cardBorder'}\n                  backgroundColor={'cardBg'}\n                  pattern={'^0x[a-fA-F0-9]{40}$'}\n                  value={this.state.customAddress}\n                  onChange={ e => this.updateCustomAddress(e) }\n                  placeholder={'Insert a valid Ethereum address'}\n                />\n              </Field>\n              {\n                this.state.customAddressError && (\n                  <Text\n                    mb={2}\n                    fontSize={2}\n                    color={'red'}\n                    fontWeight={3}\n                    textAlign={'center'}\n                  >\n                    Insert a valid Ethereum Address\n                  </Text>\n                )\n              }\n              <Button\n                px={[3,4]}\n                mx={'auto'}\n                fontWeight={3}\n                size={'medium'}\n                fontSize={[2,2]}\n                borderRadius={4}\n                contrastColor={'primary'}\n                className={[styles.gradientButton]}\n                onClick={ e => this.connectCustomAddress() }\n              >\n                CONNECT\n              </Button>\n            </Flex>\n            <Flex\n              pt={3}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <Link\n                hoverColor={'blue'}\n                textAlign={'center'}\n                onClick={ e => this.setCustomAddress(false) }\n              >\n                Select another Wallet\n              </Link>\n            </Flex>\n            { TOSacceptance }\n          </ModalCard.Body>\n        </Box>\n      );\n    }\n\n    if (showConnectionButtons) {\n      return (\n        <Box>\n          <ModalCard.Header title={'Select your Wallet'} subtitle={'And get started with Idle.'} icon={'images/idle-mark.png'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex width={1} px={[0,5]} flexDirection={'column'} justifyContent={'center'}>\n              <Web3ConnectionButtons\n                width={1/2}\n                isMobile={this.props.isMobile}\n                setConnector={this.setConnector}\n                connectionCallback={this.closeModal}\n                size={this.props.isMobile ? 'medium' : 'large'}\n                setCustomAddress={this.setCustomAddress.bind(this)}\n              />\n            </Flex>\n            <Flex pt={3} alignItems={'center'} justifyContent={'center'}>\n              <Link textAlign={'center'} hoverColor={'blue'} onClick={ e => this.setCurrentSection(e,'new') }>I don't have a wallet</Link>\n            </Flex>\n            { TOSacceptance }\n          </ModalCard.Body>\n        </Box>\n      );\n    }\n\n    if (newToEthereum) {\n      return (\n        <React.Fragment>\n          <ModalCard.Header title={'Let\\'s create your first Ethereum wallet'} icon={'images/idle-mark.png'}></ModalCard.Header>\n          <ModalCard.Body>\n            {\n              !this.state.newToEthereumChoice ? (\n                <Flex width={1} px={[0,4]} flexDirection={'column'} justifyContent={'center'}>\n                  <Box mb={3}>\n                    <Text fontSize={[2,3]} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                      Connect with e-mail or phone number?\n                    </Text>\n                  </Box>\n                  <Flex mb={3} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                    <ImageButton\n                      buttonProps={{\n                        border:2\n                      }}\n                      caption={'Use e-mail'}\n                      imageSrc={'images/email.svg'}\n                      isMobile={this.props.isMobile}\n                      subcaption={'Powered by Portis'}\n                      handleClick={ e => this.setConnector('Portis','Portis') }\n                      imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {mb:'3px',width:'auto',height:'55px'}}\n                    />\n                    <ImageButton\n                      buttonProps={{\n                        border:2\n                      }}\n                      caption={'Use phone number'}\n                      isMobile={this.props.isMobile}\n                      imageSrc={'images/mobile.svg'}\n                      subcaption={'Powered by Fortmatic'}\n                      handleClick={ e => this.setConnector('Fortmatic','Fortmatic') }\n                      imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {mb:'3px',width:'auto',height:'55px'}}\n                    />\n                  </Flex>\n                  <Flex alignItems={'center'} justifyContent={'center'}>\n                    <Link textAlign={'center'} hoverColor={'blue'} onClick={ e => this.setCurrentSection(e,'wallet') }>I already have a wallet</Link>\n                  </Flex>\n                </Flex>\n              ) : (\n                <Box>\n                  <Text fontSize={3} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                    We are connecting you to {this.state.newToEthereumChoice} wallet provider...\n                  </Text>\n                  <Flex\n                    mt={2}\n                    justifyContent={'center'}\n                    alignItems={'center'}\n                    textAlign={'center'}>\n                    <Loader size=\"40px\" /> <Text ml={2} color={'dark-gray'}>Closing in {this.state.closeRemainingTime} seconds...</Text>\n                  </Flex>\n                </Box>\n              )\n            }\n            { TOSacceptance }\n          </ModalCard.Body>\n        </React.Fragment>\n      );\n    }\n\n    return (\n      <React.Fragment>\n        <ModalCard.Header title={'Connect to Idle'} icon={'images/idle-mark.png'}></ModalCard.Header>\n        <ModalCard.Body>\n          {\n            <Flex\n              width={1}\n              px={[0,4]}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Box mb={3}>\n                <Text\n                  fontWeight={2}\n                  fontSize={[2,3]}\n                  lineHeight={1.5}\n                  textAlign={'center'}\n                >\n                  How do you want to connect to Idle?\n                </Text>\n              </Box>\n              <Flex\n                mb={[2,3]}\n                alignItems={'center'}\n                justifyContent={'center'}\n                flexDirection={['column','row']}\n              >\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={`Ethereum wallet`}\n                  isMobile={this.props.isMobile}\n                  subcaption={'Choose your favourite'}\n                  imageSrc={'images/ethereum-wallet.svg'}\n                  handleClick={ e => this.setCurrentSection(e,'wallet') }\n                  imageProps={this.props.isMobile ? {width:'auto',height:'42px'} : {width:'auto',height:'55px',marginBottom:'5px'}}\n                />\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={`New wallet`}\n                  isMobile={this.props.isMobile}\n                  subcaption={'Use email / phone'}\n                  imageSrc={'images/new-wallet.png'}\n                  handleClick={ e => this.setCurrentSection(e,'new') }\n                  imageProps={this.props.isMobile ? {width:'auto',height:'42px'} : {width:'auto',height:'55px',marginBottom:'5px'}}\n                />\n              </Flex>\n              <Flex\n                alignItems={'center'}\n                justifyContent={'center'}\n              >\n                <Link\n                  color={'primary'}\n                  hoverColor={'primary'}\n                  onClick={ e => this.setCustomAddress(true) }\n                >\n                  Watch Ethereum Address\n                </Link>\n              </Flex>\n            </Flex>\n          }\n          { TOSacceptance }\n        </ModalCard.Body>\n      </React.Fragment>\n    );\n  }\n\n  renderFooter = () => {\n\n    if (this.state.newToEthereumChoice || (this.state.currentSection && this.state.askCustomAddress)){\n      return null;\n    }\n\n    return (\n      <ModalCard.Footer>\n        { !this.state.currentSection ? (\n            <Button\n              className={[styles.gradientButton,styles.empty]}\n              onClick={ e => this.setCurrentSection(e,'instructions') }\n              size={'medium'}\n              borderRadius={4}\n              contrastColor={'blue'}\n              fontWeight={3}\n              fontSize={[2,2]}\n              mx={'auto'}\n              px={[4,5]}\n            >\n              READ INSTRUCTIONS\n            </Button>\n          ) : (!this.state.askCustomAddress || this.state.currentSection==='instructions') && (\n            <Button\n              className={[styles.gradientButton,styles.empty]}\n              onClick={this.resetModal}\n              size={'medium'}\n              borderRadius={4}\n              contrastColor={'blue'}\n              fontWeight={3}\n              fontSize={[2,2]}\n              mx={'auto'}\n              px={[4,5]}\n            >\n              BACK\n            </Button>\n          )\n        }\n      </ModalCard.Footer>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.closeModal}>\n          {this.state.showTxFees === false ? (\n            <React.Fragment>\n              {this.renderModalContent()}\n              {this.renderFooter()}\n            </React.Fragment>\n          ) : (\n            <Box>\n              <TransactionFeeModal />\n              {this.renderFooter()}\n            </Box>\n          )}\n\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionModal;\n","import React from \"react\";\nimport {\n  Heading,\n  Text,\n  Modal,\n  Flex,\n  Box,\n  Loader\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport GeneralUtil from \"../GeneralUtil\";\n\nclass ConnectionPendingModal extends React.Component {\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2 my={3}>Connect Ethereum account</Heading.h2>\n\n        <Text my={4}>\n          Confirm the request that's just appeared. If you can't see a\n          request, open your{\" \"}\n          {GeneralUtil.hasMetaMask()\n            ? `MetaMask extension`\n            : `eth wallet settings`}\n          .\n        </Text>\n\n        <Box bg={\"#f6f6fc\"} p={3} display={[\"none\", \"block\"]}>\n          <Flex alignItems={\"center\"}>\n            <Box position={\"relative\"} width={\"4em\"}>\n              <Box>\n                <Loader size={\"3em\"} />\n              </Box>\n            </Box>\n            <Box>\n              <Text fontWeight={4}>\n                Waiting for connection confirmation...\n              </Text>\n              <Text fontWeight={2}>This won’t cost you any Ether</Text>\n            </Box>\n          </Flex>\n        </Box>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionPendingModal;\n","import React from \"react\";\nimport { Heading, Text, Flex, Button, Modal } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\n\nclass UserRejectedConnectionModal extends React.Component {\n  sendMessageAgain = event => {\n    this.props.closeModal();\n    this.props.initAccount();\n  };\n\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2 my={3}>\n          You can't continue without connecting your account\n        </Heading.h2>\n\n        <Text my={4}>\n          To use our blockchain features you need to confirm the connection\n          request.\n        </Text>\n\n        <Flex flexDirection={['column', 'row']} justifyContent={\"flex-end\"} mt={4}>\n          <Button.Outline onClick={this.props.closeModal} mr={[0, 3]} mb={[3, 0]}>\n            Cancel connection\n          </Button.Outline>\n          <Button onClick={this.sendMessageAgain}>\n            Try again\n          </Button>\n        </Flex>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default UserRejectedConnectionModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Icon,\n  Modal,\n  Flex,\n  Box,\n  Button,\n  EthAddress,\n  QR,\n  Link\n} from \"rimble-ui\";\nimport TransactionFeeModal from \"./TransactionFeeModal\";\n\nclass LowFundsModal extends React.Component {\n  state = {\n    showSecondary: false,\n    showTxFees: false\n  };\n\n  toggleQRVisible = () => {\n    this.setState({\n      showSecondary: !this.state.showSecondary\n    });\n  };\n\n  toggleShowTxFees = e => {\n    console.log(\"showTxFees\", this.state.showTxFees);\n    e.preventDefault();\n\n    this.setState({\n      showTxFees: !this.state.showTxFees\n    });\n  };\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card\n          pr={[0, 5]}\n          pl={[0, 5]}\n          pt={[\"48px\", 5]}\n          pb={[\"97px\", 4]}\n          maxWidth={\"960px\"}\n          overflow={\"hidden\"}\n          position={\"relative\"}\n        >\n          <Box position={\"relative\"}>\n            <Flex\n              justifyContent={\"flex-end\"}\n              mr={[0, -5]}\n              mt={[\"-48px\", -5]}\n              position={\"absolute\"}\n              top={\"0\"}\n              left={\"0\"}\n              right={\"0\"}\n              bg={\"white\"}\n              zIndex={\"1\"}\n            >\n              <Button.Text\n                icononly\n                icon={\"Close\"}\n                color={\"moon-gray\"}\n                onClick={this.props.closeModal}\n              />\n            </Flex>\n          </Box>\n\n          {this.state.showSecondary === false &&\n          this.state.showTxFees === false ? (\n            <Box>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start primary content */}\n\n                  <Box alignContent=\"center\" py={3}>\n                    <Heading.h2>\n                      Not enough Ether for transaction fees\n                    </Heading.h2>\n                  </Box>\n                  <Text mb={4}>\n                    This is a blockchain action so you’ll have to pay a\n                    transaction fee. A few dollars worth of Ether should be\n                    enough but fees do change based on how busy the network is.{\" \"}\n                    <strong>Fund your account and try again.</strong>{\" \"}\n                    <Link\n                      title=\"Learn about Ethereum transaction fees\"\n                      as={\"a\"}\n                      href=\"#\"\n                      onClick={this.toggleShowTxFees}\n                    >\n                      What are transaction fees?\n                    </Link>\n                  </Text>\n\n                  <Heading.h3>How to add funds</Heading.h3>\n\n                  <Flex\n                    alignItems={\"stretch\"}\n                    mx={0}\n                    mb={[4, 5]}\n                    mt={[3, 4]}\n                    flexWrap={[\"wrap\", \"no-wrap\"]}\n                  >\n                    <Box p={[1, 2]} width={[1, 1 / 2]}>\n                      <Flex\n                        flexDirection={\"column\"}\n                        justifyContent={\"space-between\"}\n                        height={\"100%\"}\n                      >\n                        <Box>\n                          <Heading.h5>Buy ETH from an exchange</Heading.h5>\n                          <Text fontSize=\"1\">\n                            You can buy ETH from exchanges like Coinbase and\n                            send it to your account. If you don’t already have\n                            a Coinbase account, it can take a while to get set\n                            up.\n                          </Text>\n                        </Box>\n\n                        <Button.Outline my={3}>\n                          <Flex alignItems={\"center\"}>\n                            <Icon name=\"OpenInNew\" mr={2} />\n                            Go to CoinBase\n                          </Flex>\n                        </Button.Outline>\n                      </Flex>\n                    </Box>\n                    <Box p={[1, 2]} width={[1, 1 / 2]}>\n                      <Flex\n                        flexDirection={\"column\"}\n                        justifyContent={\"space-between\"}\n                        height={\"100%\"}\n                      >\n                        <Box>\n                          <Heading.h5>\n                            Send ETH from another account\n                          </Heading.h5>\n                          <Text fontSize=\"1\">\n                            If you have ETH in another Ethereum account, you\n                            can send it to this account using your public\n                            Ethereum address or QR code.\n                          </Text>\n                        </Box>\n                        <Button.Outline my={3} onClick={this.toggleQRVisible}>\n                          <Flex alignItems={\"center\"}>\n                            <Icon name=\"FilterCenterFocus\" mr={2} />\n                            Show account QR code\n                          </Flex>\n                        </Button.Outline>\n                      </Flex>\n                    </Box>\n                  </Flex>\n                  {/* End primary content */}\n                </Box>\n              </Box>\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start primary footer */}\n                <Flex borderTop={1} borderColor={\"#eee\"} />\n                <Flex pt={4} justifyContent={[\"center\", \"flex-end\"]}>\n                  <Button onClick={this.props.closeModal} width={[1, \"auto\"]}>\n                    Back to Idle\n                  </Button>\n                </Flex>\n                {/* End primary footer */}\n              </Box>\n            </Box>\n          ) : null}\n\n          {this.state.showSecondary ? (\n            <Box mb={3}>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start secondary content */}\n                  <Flex my={3} justifyContent={\"center\"}>\n                    <QR\n                      size={130}\n                      value={\n                        this.props.account ? this.props.account : \"1234512345\"\n                      }\n                    />\n                  </Flex>\n\n                  <EthAddress my={4} address={this.props.account} />\n                  <Flex mb={3} />\n                  {/* End secondary content */}\n                </Box>\n              </Box>\n\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start secondary footer */}\n                <Flex borderTop={1} borderColor={\"#eee\"} />\n                <Flex mt={4} justifyContent={[\"center\", \"flex-end\"]}>\n                  <Button.Outline\n                    width={[1, \"auto\"]}\n                    onClick={this.toggleQRVisible}\n                  >\n                    Go back\n                  </Button.Outline>\n                </Flex>\n                {/* End secondary footer */}\n              </Box>\n            </Box>\n          ) : null}\n\n          {this.state.showTxFees ? (\n            <Box mb={3}>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start tx fee content */}\n                  <TransactionFeeModal />\n                  {/* End tx fee content */}\n                </Box>\n              </Box>\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start primary footer */}\n                <Flex\n                  pt={4}\n                  justifyContent={[\"center\", \"flex-end\"]}\n                  borderTop={1}\n                  borderColor={\"#eee\"}\n                >\n                  <Button.Outline\n                    width={[1, \"auto\"]}\n                    onClick={this.toggleShowTxFees}\n                  >\n                    Go Back\n                  </Button.Outline>\n                </Flex>\n                {/* End primary footer */}\n              </Box>\n            </Box>\n          ) : null}\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default LowFundsModal;\n","import React from \"react\";\n\nimport NoWeb3BrowserModal from \"./components/NoWeb3BrowserModal\";\nimport NoWalletModal from \"./components/NoWalletModal\";\nimport WrongNetworkModal from \"./components/WrongNetworkModal\";\n\nimport ConnectionModal from \"./components/ConnectionModal\";\nimport ConnectionPendingModal from \"./components/ConnectionPendingModal\";\nimport UserRejectedConnectionModal from \"./components/UserRejectedConnectionModal\";\n\nimport LowFundsModal from \"./components/LowFundsModal\";\n\nclass ConnectionModalUtil extends React.Component {\n  render() {\n    return (\n      <div>\n        <NoWeb3BrowserModal\n          closeModal={this.props.modals.methods.closeNoWeb3BrowserModal}\n          isOpen={this.props.modals.data.noWeb3BrowserModalIsOpen}\n          transaction={this.props.transaction}\n        />\n\n        <NoWalletModal\n          closeModal={this.props.modals.methods.closeNoWalletModal}\n          isOpen={this.props.modals.data.noWalletModalIsOpen}\n          transaction={this.props.transaction}\n        />\n\n        <WrongNetworkModal\n          closeModal={this.props.modals.methods.closeWrongNetworkModal}\n          isOpen={this.props.modals.data.wrongNetworkModalIsOpen}\n          network={this.props.network}\n        />\n\n        <ConnectionModal\n          {...this.props}\n          isMobile={this.props.isMobile}\n          setConnector={this.props.setConnector}\n          currentNetwork={this.props.network.current}\n          validateAccount={this.props.validateAccount}\n          closeModal={this.props.modals.methods.closeConnectionModal}\n          isOpen={ this.props.modals.data.connectionModalIsOpen && !this.props.accountValidated }\n        />\n\n        <ConnectionPendingModal\n          closeModal={this.props.modals.methods.closeConnectionPendingModal}\n          isOpen={this.props.modals.data.accountConnectionPending}\n          currentNetwork={this.props.network.current}\n        />\n        <UserRejectedConnectionModal\n          closeModal={\n            this.props.modals.methods.closeUserRejectedConnectionModal\n          }\n          isOpen={this.props.modals.data.userRejectedConnect}\n          initAccount={this.props.initAccount}\n        />\n\n        <LowFundsModal\n          closeModal={this.props.modals.methods.closeLowFundsModal}\n          isOpen={this.props.modals.data.lowFundsModalIsOpen}\n          currentNetwork={this.props.network.current}\n          account={this.props.account}\n        />\n      </div>\n    );\n  }\n}\n\nexport default ConnectionModalUtil;\n","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Flex,\n  Button\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass ConnectionErrorModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  async closeModal(e){\n    e.preventDefault();\n    // Disconnect to Infura only if the wallet is not logged\n    if (!this.props.account){\n      // await this.props.context.setFirstValidConnector(['Infura']);\n      // this.props.context.setConnector('Infura');\n      this.props.context.unsetConnector();\n      this.props.setConnector('Infura',null);\n      await this.props.context.setFirstValidConnector(['Infura']);\n    }\n    this.props.modals.methods.closeConnectionErrorModal();\n  }\n\n  render() {\n\n    const walletProvider = this.functionsUtil.getWalletProvider();\n    const isLedger = (walletProvider && walletProvider.toLowerCase() === 'ledger') || (typeof this.props.modals.data.connectionError === 'string' && this.props.modals.data.connectionError.toLowerCase().includes('ledger'));\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={ e => this.closeModal(e) }>\n          <ModalCard.Header title={ isLedger ? 'Ledger Error' : `Connection Error` } icon={'images/warning.svg'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={1} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text.p color={'dark-gray'} textAlign={'center'}>\n                The following error occured while trying to connect with your { isLedger ? 'Ledger' : 'account' }:<br />\n                <Text.span color={'red'} fontWeight={3}>\"{this.props.modals.data.connectionError}\"</Text.span><br />\n                {\n                  isLedger ? (\n                    <Text.span>\n                      Make sure that your Ledger is <strong>connected</strong> and <strong>unlocked</strong>. Also check that both <strong>Contract data</strong> and <strong>Browser support</strong> are enabled in the Ledger settings.<br />\n\n                    </Text.span>\n                  ) : 'Make sure that your wallet is unlocked and try again.'\n                }\n              </Text.p>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ async (e) => { await this.closeModal(e); } }\n              >\n              GOT IT\n              </Button>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionErrorModal;","import React from \"react\";\nimport {\n  Text,\n  Link,\n  Flex,\n  Modal,\n  Button\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass TransactionErrorModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  async closeModal(e){\n    e.preventDefault();\n    this.props.modals.methods.closeTransactionErrorModal();\n  }\n\n  render() {\n\n    const isLedgerError = typeof this.props.modals.data.transactionError === 'string' && this.props.modals.data.transactionError.toLowerCase().includes('ledger');\n    const isSlowTxError = typeof this.props.modals.data.transactionError === 'string' && this.props.modals.data.transactionError.toLowerCase().includes('not mined within 50 blocks');\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={ e => this.closeModal(e) }>\n          <ModalCard.Header title={ 'Transaction Error' } icon={'images/warning.svg'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={1} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text.p color={'dark-gray'} textAlign={'center'}>\n                The following error occured while trying to send a transaction:<br />\n                <Text.span color={'red'} fontWeight={3}>\"{this.props.modals.data.transactionError}\"</Text.span><br />\n                {\n                  isLedgerError ? (\n                    <Text.span\n                      fontSize={1}\n                    >\n                      <br />Make sure that your Ledger is <strong>connected</strong> and <strong>unlocked</strong>. Also check that both <strong>Contract data</strong> and <strong>Browser support</strong> are enabled in the Ledger settings.<br />\n                      We also suggest you to connect your Ledger with Metamask, read the <Link fontSize={1} color={'blue'} hoverColor={'blue'} target={'_blank'} rel={\"nofollow noopener noreferrer\"} href={'https://metamask.zendesk.com/hc/en-us/articles/360020394612-How-to-connect-a-Trezor-or-Ledger-Hardware-Wallet'}>instructions here</Link>.\n                    </Text.span>\n                  ) : isSlowTxError ? 'This could happen when the gas price is low, check the transaction status with your Wallet.' : 'Make sure that your have enough funds in your wallet.'\n                }\n              </Text.p>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ async (e) => { await this.closeModal(e); } }\n              >\n              GOT IT\n              </Button>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default TransactionErrorModal;","import Web3 from \"web3\";\nimport React from 'react';\nimport BigNumber from 'bignumber.js';\nimport SimpleID from 'simpleid-js-sdk';\nimport NetworkUtil from \"./NetworkUtil\";\nimport { Biconomy } from \"@biconomy/mexa\";\nimport * as Sentry from '@sentry/browser';\nimport FunctionsUtil from './FunctionsUtil';\nimport MaticJs from '@maticnetwork/maticjs';\nimport globalConfigs from '../configs/globalConfigs';\nimport ConnectionModalUtil from \"./ConnectionModalsUtil\";\n// import detectEthereumProvider from '@metamask/detect-provider';\nimport { IFrameEthereumProvider } from '@ledgerhq/iframe-provider';\nimport ConnectionErrorModal from './components/ConnectionErrorModal';\nimport TransactionErrorModal from './components/TransactionErrorModal';\n\nrequire('dotenv').config();\n\nconst RimbleTransactionContext = React.createContext({\n  web3: {},\n  account: {},\n  biconomy: {},\n  simpleID: {},\n  contracts: [],\n  web3Infura: {},\n  currentWeb3: {},\n  web3Polygon: {},\n  tokenConfig: {},\n  transactions: {},\n  permitClient: {},\n  web3Providers: {},\n  accountBalance: {},\n  initWeb3: () => {},\n  accountValidated: {},\n  maticPlasmaClient :{},\n  initAccount: () => {},\n  accountBalanceLow: {},\n  contractsNetworks: {},\n  initSimpleID: () => {},\n  initContract: () => {},\n  erc20ForwarderClient: {},\n  accountBalanceToken: {},\n  checkPreflight: () => {},\n  validateAccount: () => {},\n  network: {\n    current: {},\n    required: {},\n    checkNetwork: () => {},\n    isCorrectNetwork: null,\n    isSupportedNetwork: null,\n  },\n  accountInizialized: false,\n  getTokenDecimals: () => {},\n  rejectValidation: () => {},\n  getAccountBalance: () => {},\n  contractsInitialized: false,\n  accountValidationPending: {},\n  initializeContracts: () => {},\n  rejectAccountConnect: () => {},\n  enableUnderlyingWithdraw: false,\n  connectAndValidateAccount: () => {},\n  modals: {\n    data: {\n      connectionError: {},\n      lowFundsModalIsOpen: {},\n      noWalletModalIsOpen: {},\n      userRejectedConnect: {},\n      connectionModalIsOpen: {},\n      userRejectedValidation: {},\n      wrongNetworkModalIsOpen: {},\n      accountValidationPending: {},\n      accountConnectionPending: {},\n      noWeb3BrowserModalIsOpen: {},\n      transactionConnectionModalIsOpen: {},\n    },\n    methods: {\n      openLowFundsModal: () => {},\n      closeLowFundsModal: () => {},\n      openWrongNetworkModal: () => {},\n      closeWrongNetworkModal: () => {},\n      openNoWeb3BrowserModal: () => {},\n      closeNoWeb3BrowserModal: () => {},\n      openConnectionErrorModal: () => {},\n      closeConnectionErrorModal: () => {},\n      openTransactionErrorModal: () => {},\n      closeTransactionErrorModal: () => {},\n      openConnectionPendingModal: () => {},\n      closeConnectionPendingModal: () => {},\n      openUserRejectedConnectionModal: () => {},\n      openUserRejectedValidationModal: () => {},\n      closeUserRejectedConnectionModal: () => {},\n      closeUserRejectedValidationModal: () => {},\n    }\n  },\n  transaction: {\n    data: {\n      transactions: {}\n    },\n    meta: {},\n    methods: {}\n  }\n});\n\nlet setConnectorName = null;\nlet biconomyLoginProcessing = false;\n\nclass RimbleTransaction extends React.Component {\n  static Consumer = RimbleTransactionContext.Consumer;\n\n  componentUnmounted = false;\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    const props = Object.assign({},this.props);\n    props.contracts = this.state.contracts;\n    if (this.functionsUtil){\n      props.account = this.state.account;\n      this.functionsUtil.setProps(props);\n    } else {\n      props.account = this.state.account;\n      this.functionsUtil = new FunctionsUtil(props);\n    }\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.checkNetwork();\n\n    // detect Network account change\n    if (window.ethereum){\n      window.ethereum.on('networkChanged', async (networkId) => {\n        this.handleNetworkChanged(networkId);\n        // window.location.reload();\n      });\n    }\n\n    window.initWeb3 = this.initWeb3;\n    window.initAccount = this.initAccount;\n  }\n\n  handleNetworkChanged = async (networkId=null) => {\n    this.functionsUtil.removeStoredItem('cachedRequests');\n    this.functionsUtil.removeStoredItem('cachedRequests_polygon');\n    this.functionsUtil.removeStoredItem('transactions');\n    await this.props.clearCachedData(async () => {\n      // console.log(networkId,this.state.network);\n      // const network = await this.checkNetwork();\n      // if (network.isCorrectNetwork){\n      //   window.location.reload();\n      // }\n\n      if (this.state.network.required && networkId && parseInt(networkId) === parseInt(this.state.network.required.id)){\n        window.location.reload();\n      } else {\n        this.setState({\n          web3:null,\n          contracts:[],\n          biconomy:null,\n          permitClient:null,\n          contractsNetworks:{},\n          networkInitialized:false,\n          erc20ForwarderClient:null,\n          contractsInitialized:false\n        },() => {\n          this.checkNetwork();\n        });\n      }\n    });\n  }\n\n  componentDidMount = async () => {\n    // this.initSimpleID();\n    // this.initWeb3();\n\n    this.connectGnosisSafe();\n\n    // TEST - Manually triggers transaction error\n    // this.openTransactionErrorModal(null,'Your Ledger device is Ineligible');\n\n    window.testTransaction = (method) => {\n      const transaction = this.createTransaction();\n      transaction.method = method;\n      this.addTransaction(transaction);\n      return transaction;\n    }\n\n    window.updateTransaction = (transaction,hash,status,params) => {\n      // Add meta data to transaction\n      transaction.status = status;\n      transaction.params = params;\n      transaction.type = \"contract\";\n      transaction.created = Date.now();\n      transaction.transactionHash = hash;\n\n      // console.log('window.updateTransaction',transaction);\n\n      this.updateTransaction(transaction);\n      return transaction;\n    }\n  }\n\n  connectGnosisSafe = () => {\n    const gnosisSafeLoaded = this.props.connectors.gnosis.safeLoaded;\n    if (gnosisSafeLoaded){\n      const walletProvider = this.functionsUtil.getWalletProvider();\n      const isGnosisSafe = this.props.connectors.gnosis.safeLoaded && !!this.props.connectors.gnosis.provider.safe;\n      // console.log('isGnosisSafe',this.props.connectors.gnosis.provider.safe,isGnosisSafe);\n      if (isGnosisSafe){\n        this.props.setConnector('gnosis','gnosis');\n      } else if (walletProvider === 'gnosis') {\n        this.props.setConnector('Infura',null);\n      }\n    }\n  }\n\n  componentDidUpdate = async (prevProps, prevState) => {\n\n    this.loadUtils();\n\n    // this.functionsUtil.customLog('componentDidUpdate',prevProps.connectorName,this.props.connectorName,this.props.context.connectorName,this.props.context.active,(this.props.context.error ? this.props.context.error.message : null));\n\n    const gnosisSafeLoaded = !this.state.gnosisSafeLoaded && this.props.connectors.gnosis.safeLoaded;\n    // console.log('gnosisSafeLoaded',this.state.gnosisSafeLoaded,this.props.connectors.gnosis.safeLoaded,gnosisSafeLoaded);\n    if (gnosisSafeLoaded){\n      this.setState({\n        gnosisSafeLoaded:true\n      },() => {\n        this.connectGnosisSafe();\n      });\n    }\n\n    if (prevProps.connectorName !== this.props.connectorName && this.props.connectorName){\n      this.initWeb3();\n    } else if ( prevProps.context !== this.props.context ){\n      if (this.props.context.error instanceof Error && this.props.context.error.message.length){\n        const errorMessage = this.props.context.error.message;\n        const isWalletConnectClosedModalError = (errorMessage === 'User closed WalletConnect modal' || errorMessage === 'User closed modal');\n        // this.functionsUtil.customLog('componentDidUpdate',setConnectorName,errorMessage);\n        if (setConnectorName === 'WalletConnect' && isWalletConnectClosedModalError){\n          // this.functionsUtil.customLog('WalletConnect disconnected! Set Infura connector');\n          this.props.setConnector('Infura',null);\n          // this.functionsUtil.removeStoredItem('walletProvider');\n          // this.functionsUtil.removeStoredItem('connectorName');\n          // this.functionsUtil.setLocalStorage('context',JSON.stringify({active:this.props.context.active,connectorName:'Infura'}));\n          setConnectorName = null;\n          // await this.props.context.setConnector('Infura');\n        } else if (!isWalletConnectClosedModalError) {\n          this.openConnectionErrorModal(null,errorMessage);\n        } else {\n          this.initWeb3();\n        }\n      // WalletConnect double trigger initWeb3\n      } else if (this.props.context.active && this.props.context.connectorName!=='WalletConnect' && this.props.connectorName==='WalletConnect') {\n        this.initWeb3();\n      }\n    } else if ( (this.props.context.connectorName && this.props.context.connectorName !== this.props.connectorName) || prevProps.customAddress !== this.props.customAddress){\n      this.initWeb3();\n    }\n\n\n    const currentNetworkChanged = this.state.networkInitialized && prevState.network.current.id !== this.state.network.current.id;\n    if (currentNetworkChanged){\n      // console.log('requiredNetworkChanged',this.state.networkInitialized,JSON.stringify(prevState.network),JSON.stringify(this.state.network));\n      this.initWeb3();\n    }\n\n    const requiredNetworkChanged = prevState.network.required.id !== this.state.network.required.id;\n    if (requiredNetworkChanged){\n      // console.log('requiredNetworkChanged',this.state.networkInitialized,JSON.stringify(prevState.network),JSON.stringify(this.state.network));\n      this.setState({\n        contracts:[],\n        contractsNetworks:{},\n        contractsInitialized:false\n      }, () => {\n        this.props.setNetwork(this.state.network);\n        this.initWeb3();\n      });\n    }\n\n    const availableStrategiesChanged = (!prevProps.availableStrategies && this.props.availableStrategies) || (prevProps.availableStrategies && this.props.availableStrategies && JSON.stringify(Object.keys(prevProps.availableStrategies)) !== JSON.stringify(Object.keys(this.props.availableStrategies)));\n    // console.log('availableStrategiesChanged',this.props.availableStrategies,availableStrategiesChanged);\n    if (availableStrategiesChanged){\n      await this.initializeContracts();\n    }\n\n    const customAddressChanged = prevProps.customAddress !== this.props.customAddress;\n    const contextAccountChanged = prevProps.context.account !== this.props.context.account;\n    const accountDisconnected = prevProps.connectorName !== this.props.connectorName && this.props.connectorName === 'Infura';\n    if (contextAccountChanged){\n      // console.log('contextAccountChanged',prevProps.context.account,this.props.context.account,contextAccountChanged);\n    }\n\n    if (accountDisconnected){\n      // console.log('accountDisconnected',prevProps.connectorName,this.props.connectorName,accountDisconnected);\n    }\n\n    if (customAddressChanged || contextAccountChanged || accountDisconnected){\n      this.initAccount();\n    }\n\n    // const availableTokensChanged = prevProps.availableTokens && this.props.availableTokens && JSON.stringify(Object.keys(prevProps.availableTokens)) !== JSON.stringify(Object.keys(this.props.availableTokens));\n\n    // Reset tokenDecimals if token is changed\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    if (tokenChanged){\n      this.setState({\n        tokenDecimals: null\n      });\n    }\n\n    // this.functionsUtil.customLog(prevProps.enableUnderlyingWithdraw,this.props.enableUnderlyingWithdraw,this.state.enableUnderlyingWithdraw);\n    if (prevProps.enableUnderlyingWithdraw !== this.props.enableUnderlyingWithdraw){\n      this.setState({\n        enableUnderlyingWithdraw:this.props.enableUnderlyingWithdraw\n      });\n    }\n\n    if (localStorage){\n      const context = JSON.parse(localStorage.getItem('context'));\n      if (!context || (this.props.context.active !== context.active || this.props.context.connectorName !== context.connectorName)){\n        this.functionsUtil.setLocalStorage('context',JSON.stringify({active:this.props.context.active,connectorName:this.props.context.connectorName}));\n      }\n    }\n\n    const selectedNetworkChanged = prevProps.config.requiredNetwork !== this.props.config.requiredNetwork;\n    if (selectedNetworkChanged){\n      // console.log('selectedNetworkChanged',JSON.stringify(prevProps.config.requiredNetwork),this.props.config.requiredNetwork);\n      this.handleNetworkChanged();\n    }\n  }\n\n  initCurrentWeb3 = async () => {\n\n  }\n\n  // Initialize a web3 provider\n  initWeb3 = async (connectorName=null) => {\n\n    // Detect ethereum provider\n    // const metamaskProvider = await detectEthereumProvider();\n    // if (metamaskProvider && (!window.ethereum || window.ethereum !== metamaskProvider)){\n    //   window.ethereum = metamaskProvider;\n    // }\n    if (!this.state.networkInitialized){\n      return false;\n    }\n\n    const context = this.props.context;\n    const networkId = this.state.network.required.id;\n    const walletProvider = this.functionsUtil.getWalletProvider();\n\n    // console.log(this.functionsUtil.strToMoment().format('HH:mm:ss'),'initWeb3 - START',networkId,walletProvider);\n\n    const availableNetworks = this.functionsUtil.getGlobalConfig(['network','availableNetworks']);\n    const networkConfig = availableNetworks[networkId];\n    const provider = networkConfig ? networkConfig.provider : 'infura';\n    const web3RpcKey = this.functionsUtil.getGlobalConfig(['network','providers',provider,'key']);\n    const web3Rpc = this.functionsUtil.getGlobalConfig(['network','providers',provider,'rpc',networkId])+web3RpcKey;\n\n    const useWeb3Provider = this.state.networkInitialized && this.state.network.isCorrectNetwork;\n    const web3InfuraRpc = this.functionsUtil.getGlobalConfig(['network','providers','infura','rpc',networkId])+this.functionsUtil.getGlobalConfig(['network','providers','infura','key']);\n    \n\n    const enabledNetworks = this.functionsUtil.getGlobalConfig(['network','enabledNetworks']);\n    const web3Providers = Object.keys(availableNetworks).filter( netId => enabledNetworks.includes(parseInt(netId)) ).reduce( (acc,netId) => {\n      const networkConfig = availableNetworks[netId];\n      const providerConfig = this.functionsUtil.getGlobalConfig(['network','providers',networkConfig.provider]);\n      const providerRpc = providerConfig.rpc[netId]+providerConfig.key;\n      acc[netId] = new Web3(new Web3.providers.HttpProvider(providerRpc));\n      return acc;\n    },{});\n\n    const web3Infura = new Web3(new Web3.providers.HttpProvider(web3InfuraRpc));\n\n    let currentWeb3 = context.library;\n    let web3 = useWeb3Provider ? context.library : null;\n\n    // 0x Instant Wallet Provider Injection\n    if (!window.RimbleWeb3_context || context.connectorName !== window.RimbleWeb3_context.connectorName){\n      window.RimbleWeb3_context = context;\n    }\n\n    // Reset setConnectorName if force connectorName\n    if (connectorName){\n      setConnectorName = null;\n    } else {\n      connectorName = this.props.connectorName;\n    }\n\n    // const last_context = localStorage ? JSON.parse(localStorage.getItem('context')) : null;\n\n    // this.functionsUtil.customLog('initWeb3',context.active,connectorName,context.connectorName,context.connector,(web3 && web3.currentProvider ? web3.currentProvider.disable : null),(context.connector ? context.connector.disable : null));\n    if (context && connectorName === 'Infura' && connectorName !== context.connectorName){\n      if (web3 && typeof web3.currentProvider.disable === 'function'){\n        web3.currentProvider.disable();\n      } else if (context.connector && typeof context.connector.disable === 'function'){\n        context.connector.disable();\n      }\n      web3 = null;\n      currentWeb3 = null;\n      setConnectorName = null;\n    }\n\n    const connectorNameChanged = (context.connectorName && context.connectorName !== connectorName) || (connectorName !== 'Infura' && connectorName !== setConnectorName);\n\n    // console.log('context',context.active,connectorNameChanged,context.connectorName,connectorName,setConnectorName);\n\n    if (connectorName !== 'ledgerLive'){\n      if (!context.active || connectorNameChanged) {\n        // Select preferred web3 provider\n        if (connectorName && connectorNameChanged){\n\n          if (connectorName === 'gnosis' && !this.state.gnosisSafeLoaded){\n            return false;\n          }\n\n          // this.functionsUtil.customLog('initWeb3 set connector',connectorName);\n          setConnectorName = connectorName;\n          await context.setConnector(connectorName);\n          // await context.setFirstValidConnector([connectorName, 'Infura']);\n          return web3;\n        }\n      }\n    }\n\n    let web3Host = web3Rpc;\n    let web3Provider = null;\n\n    if (!web3) { // safety web3 implementation\n      if (window.ethereum) {\n        this.functionsUtil.customLog(\"Using modern web3 provider.\");\n        web3Provider = window.ethereum;\n      } else if (window.web3) {\n        this.functionsUtil.customLog(\"Legacy web3 provider. Try updating.\");\n        web3Provider = window.web3;\n      } else {\n        this.functionsUtil.customLog(\"Non-Ethereum browser detected. Using Infura fallback.\");\n        web3Host = web3InfuraRpc;\n      }\n    } else {\n      web3Provider = web3.currentProvider;\n    }\n\n    let forceCallback = false;\n\n    if ((!connectorName || connectorName === 'Infura') && web3Provider && typeof web3Provider.enable === 'function'){\n      try {\n        await web3Provider.enable();\n      } catch (connectionError){\n        web3Provider = null;\n        web3Host = web3InfuraRpc;\n        forceCallback = true;\n      }\n    }\n\n    // Ledger Live\n    if (connectorName === 'ledgerLive'){\n      web3Provider = new IFrameEthereumProvider();\n    }\n\n    // Injected web3 provider\n    if (web3Provider && useWeb3Provider){\n      web3 = new Web3(web3Provider);\n    // Infura\n    } else if (web3Host) {\n      web3 = web3Providers[networkId];\n    }\n\n    let web3Polygon = null;\n    let maticPOSClient = null;\n    let maticPlasmaClient = null;\n\n    // const infuraConfig = globalConfigs.network.providers.infura;\n    const polygonConfig = globalConfigs.network.providers.polygon;\n\n    const currentNetwork = this.functionsUtil.getGlobalConfig(['network','availableNetworks',networkId]);\n    const polygonNetworkId = currentNetwork.provider === 'polygon' ? networkId : this.functionsUtil.getGlobalConfig(['network','providers','polygon','networkPairs',networkId]);\n\n    if (polygonConfig && polygonConfig.enabled && polygonConfig.rpc && Object.keys(polygonConfig.rpc).includes(parseInt(polygonNetworkId).toString())){\n      const web3PolygonRpc = polygonConfig.rpc[polygonNetworkId]+this.functionsUtil.getGlobalConfig(['network','providers','polygon','key']);\n      web3Polygon = new Web3(new Web3.providers.HttpProvider(web3PolygonRpc));\n\n      const maticProvider = new Web3(new Web3.providers.HttpProvider(web3PolygonRpc));\n      const parentProvider = new Web3(new Web3.providers.HttpProvider(web3InfuraRpc));\n      // console.log('maticProvider',web3PolygonRpc);\n      // console.log('parentProvider',web3InfuraRpc);\n\n      const maticPOSClientConfig = {\n        maticProvider,\n        parentProvider,\n        network: networkConfig.network,\n        version: networkConfig.version\n      };\n      maticPOSClient = new MaticJs.MaticPOSClient(maticPOSClientConfig);\n\n      // console.log('maticPOSClientConfig',networkConfig,maticPOSClientConfig);\n\n      const maticPlasmaClientConfig = {\n        maticProvider,\n        parentProvider,\n        network: networkConfig.network,\n        version: networkConfig.version\n      };\n      maticPlasmaClient = new MaticJs(maticPlasmaClientConfig);\n    }\n\n    window.web3Polygon = web3Polygon;\n    window.maticPOSClient = maticPOSClient;\n    window.maticPlasmaClient = maticPlasmaClient;\n\n    if (window.ethereum) {\n      currentWeb3 = new Web3(window.ethereum);\n    } else if (window.web3) {\n      currentWeb3 = new Web3(window.web3);\n    } else {\n      currentWeb3 = web3Providers[networkId];\n    }\n\n    this.setState({\n      web3Infura,\n      currentWeb3,\n      web3Polygon,\n      web3Providers,\n      maticPOSClient,\n      maticPlasmaClient\n    },() => {\n      // this.checkNetwork();\n    });\n\n    const web3Callback = async () => {\n\n      window.web3Injected = this.state.web3;\n      // window.web3InfuraInjected = this.state.web3Infura;\n\n      if (typeof this.props.callbackAfterLogin === 'function'){\n        this.props.callbackAfterLogin();\n        this.props.setCallbackAfterLogin(null);\n      }\n\n      // console.log(this.functionsUtil.strToMoment().format('HH:mm:ss'),'initWeb3 - web3Callback');\n\n      // console.log('web3Callback',context.account,this.state.network.isSupportedNetwork,this.state.contractsInitialized,this.state.networkInitialized);\n\n      // After setting the web3 provider, check network\n      try {\n        // if (!this.state.networkInitialized){\n        //   await this.checkNetwork();\n        // }\n\n        if (this.state.network.isSupportedNetwork){\n\n          if (!this.state.contractsInitialized){\n            await this.initializeContracts();\n          }\n\n          if (context.account){\n            // Login with biconomy\n            if (this.state.biconomy){\n              const biconomy = this.state.biconomy;\n              const biconomyInfo = globalConfigs.network.providers.biconomy;\n              if (biconomyInfo.enableLogin && !biconomy.isLogin && !biconomyLoginProcessing){\n                biconomyLoginProcessing = true;\n                biconomy.login(context.account, (error, response) => {\n                  // this.functionsUtil.customLog('biconomy login',error,response);\n                  // Failed to login with Biconomy\n                  if (error) {\n                    return this.setState({\n                      biconomy:false,\n                    },() => {\n                      this.initAccount(context.account);\n                    });\n                  }\n\n                  biconomyLoginProcessing = false;\n\n                  if (response.transactionHash) {\n                    this.initAccount(context.account);\n                  } else if(response.userContract) {\n                    this.initAccount(context.account);\n                  }\n                });\n                return false;\n              }\n            }\n\n            await this.initAccount(context.account);\n          } else {\n\n            await this.initAccount();\n            // await this.setState({\n            //   accountInizialized: true,\n            //   account: this.props.customAddress\n            // });\n          }\n        }\n      // Initialize Infura Web3 and display error\n      } catch (error) {\n        this.openConnectionErrorModal(null,error.message);\n      }\n    }\n\n    // Save original web3 connector in case Mexa initialization fails\n    const originalWeb3 = web3;\n    const biconomyInfo = globalConfigs.network.providers.biconomy;\n\n    if (connectorName !== 'Infura' && biconomyInfo && biconomyInfo.enabled && biconomyInfo.supportedNetworks.includes(networkId) && (!walletProvider || !biconomyInfo.disabledWallets.includes(walletProvider.toLowerCase()))){\n\n      if (this.state.biconomy === null){\n        const biconomyWeb3Provider = web3Provider ? web3Provider : web3Host;\n\n        // console.log('biconomyWeb3Provider',web3Provider,web3Host,biconomyWeb3Provider===web3Provider);\n\n        const biconomy = new Biconomy(biconomyWeb3Provider,biconomyInfo.params);\n\n        if (biconomy && typeof biconomy.onEvent === 'function'){\n          web3 = new Web3(biconomy);\n          biconomy.onEvent(biconomy.READY, () => {\n            if (this.componentUnmounted || this.state.biconomy === false || this.state.biconomy === biconomy){\n              return false;\n            }\n            \n            const permitClient = biconomy.permitClient;\n            const erc20ForwarderClient = biconomy.erc20ForwarderClient;\n\n            const newState = {\n              web3,\n              biconomy,\n              web3Infura,\n              permitClient,\n              web3Providers,\n              erc20ForwarderClient\n            };\n            // console.log('biconomy',newState);\n\n            if (web3 !== this.state.web3){\n              this.setState(newState, web3Callback);\n            }\n          }).onEvent(biconomy.ERROR, (error, message) => {\n            // console.error('Biconomy error',error,message,this.state.biconomy);\n            web3 = originalWeb3;\n            // Handle error while initializing mexa\n            if (this.state.biconomy !== false){\n              this.setState({\n                web3,\n                biconomy:false\n              }, web3Callback);\n            }\n          });\n        } else {\n          this.setState({\n            web3,\n            biconomy:false\n          }, web3Callback);\n        }\n      }\n    } else {\n      if (web3 !== this.state.web3){\n        this.setState({\n          web3\n        }, web3Callback);\n      } else if (context.account || forceCallback){\n        web3Callback();\n      }\n    }\n\n    return web3;\n  }\n\n  initContract = async (name, address, abi, useInfuraProvider=false) => {\n    // console.log(`initContract: ${name} - addr: ${address}`);\n    return await this.createContract(name, address, abi, useInfuraProvider);\n  }\n\n  initContractWithoutSet = (name, address, abi, networkId=null) => {\n    // Reset networkId is equal to injected\n    if (networkId && parseInt(networkId) === parseInt(this.state.network.required.id) && this.state.network.isCorrectNetwork){\n      networkId = null;\n    }\n    const web3Provider = networkId && this.state.web3Providers[networkId] ? this.state.web3Providers[networkId] : (this.state.network.isCorrectNetwork ? this.state.web3 : this.state.web3Providers[this.state.network.required.id]);\n\n    if (!web3Provider){\n      return null;\n    }\n\n    // Create contract on initialized web3 provider with given abi and address\n    try {\n      const contract = new web3Provider.eth.Contract(abi, address);\n      return {name, contract};\n    } catch (error) {\n      this.functionsUtil.customLogError(\"Could not create contract.\",name,address,error);\n    }\n\n    return null;\n  }\n\n  createContract = async (name, address, abi, useInfuraProvider=false) => {\n\n    const web3Provider = useInfuraProvider && this.state.web3Infura ? this.state.web3Infura : (this.state.network.isCorrectNetwork ? this.state.web3 : this.state.web3Providers[this.state.network.required.id]);\n\n    // if (name==='ERC20Predicate'){\n    //   console.log('createContract',this.state.network,web3Provider);\n    // }\n\n    if (!web3Provider){\n      return null;\n    }\n\n    if (!abi){\n      abi = [];\n    }\n\n    // Create contract on initialized web3 provider with given abi and address\n    try {\n      const contract = new web3Provider.eth.Contract(abi, address);\n      this.setState(state => ({\n        ...state,\n        contracts: [...state.contracts, {name, contract}]\n      }));\n\n      // if (name==='ERC20Predicate'){\n      //   debugger;\n      // }\n\n      return {name, contract};\n    } catch (error) {\n      console.error(\"Could not create contract.\",name,address,abi,error);\n    }\n\n    return null;\n  }\n\n  initSimpleID = () => {\n\n    if (this.state.simpleID){\n      return this.state.simpleID;\n    }\n\n    const simpleIDInfo = globalConfigs.network.providers.simpleID;\n    let simpleID = null;\n    const networkId = this.state.network.current.id || this.state.network.required.id;\n\n    if (simpleIDInfo && simpleIDInfo.enabled && simpleIDInfo.supportedNetworks.indexOf(networkId) !== -1 ){\n      const simpleIDParams = simpleIDInfo.params;\n      simpleIDParams.network = simpleIDInfo.getNetwork(this.state.network.current.id,globalConfigs.network.availableNetworks);\n      simpleID = new SimpleID(simpleIDParams);\n    }\n\n    window.simpleID = simpleID;\n\n    this.setState({\n      simpleID\n    });\n\n    return simpleID;\n  }\n\n  initAccount = async (account=false) => {\n    \n    const customAddress = this.props.customAddress;\n    const walletProvider = this.functionsUtil.getWalletProvider('Infura');\n\n    if (customAddress){\n      // Set custom account\n      return this.setState({\n        account:customAddress,\n        accountInizialized:true,\n      },()=>{\n        this.getAccountBalance();\n      });\n    } else if (this.props.connectorName === 'Infura' || !this.props.connectorName){\n      return this.setState({\n        account:null,\n        accountInizialized:true\n      });\n    }\n\n    try {\n      if (!account){\n        const wallets = await Promise.race([\n            this.state.web3.eth.getAccounts(),\n            new Promise((resolve) => setTimeout(resolve, 300))\n        ]);\n\n        if (wallets && wallets.length){\n          account = wallets[0];\n        }\n      }\n\n      if (!account){\n        account = this.props.context.account;\n      }\n\n      if (!account || this.state.account === account){\n        return this.setState({\n          accountInizialized: true\n        });\n      }\n\n\n      // Request account access if needed\n      if (account){\n\n        // Send address info to SimpleID\n        const simpleID = this.initSimpleID();\n\n        if (simpleID){\n\n          const notifications = await simpleID.notifications();\n\n          if (notifications && notifications.length && window.$crisp){\n\n            let shownNotifications = [];\n            if (localStorage){\n              shownNotifications = localStorage.getItem('shownNotifications') && JSON.parse(localStorage.getItem('shownNotifications')) ? JSON.parse(localStorage.getItem('shownNotifications')) : [];\n            }\n\n            notifications.forEach((n,i) => {\n\n              const notificationId = n.name;\n\n              // Show notification if not shown already\n              if (shownNotifications.indexOf(notificationId) === -1){\n                window.$crisp.push([\"do\", \"message:show\", [\"text\", this.functionsUtil.normalizeSimpleIDNotification(n.content) ]]);\n\n                // Save notification id\n                shownNotifications.push(notificationId);\n              }\n            });\n\n            // Store shown notification\n            if (localStorage){\n              this.functionsUtil.setLocalStorage('shownNotifications',JSON.stringify(shownNotifications));\n            }\n          }\n        }\n\n        // Send Google Analytics connection event\n        this.functionsUtil.sendGoogleAnalyticsEvent({\n          eventCategory: 'Connect',\n          eventAction: 'connected',\n          eventLabel: walletProvider\n        });\n\n        // this.functionsUtil.customLog('initAccount',account);\n\n        // Set custom account\n        this.setState({\n          account,\n          // web3SocketProvider,\n          accountInizialized: true\n        });\n\n        // After account is complete, get the balance\n        this.getAccountBalance();\n\n        // TODO subscribe for account changes, no polling\n        // set a state flag which indicates if the subscribe handler has been\n        // called at least once\n      } else {\n        return this.setState({\n          account:null,\n          accountInizialized: true,\n        });\n      }\n    } catch (error) {\n\n      this.setState({\n        accountInizialized: true\n      });\n\n      // User denied account access...\n      this.functionsUtil.customLog(\"User cancelled connect request. Error:\", error);\n\n      // this.functionsUtil.customLog(error);\n\n      // Catch ledger error\n      if (error && error.message && error.message.includes('MULTIPLE_OPEN_CONNECTIONS_DISALLOWED')) {\n        return;\n      }\n\n      // Send Sentry connection error\n      const isError = error instanceof Error;\n      if (this.functionsUtil.checkUrlOrigin() && isError){\n        Sentry.captureException(error);\n      }\n\n      // Reject Connect\n      // this.rejectAccountConnect(error);\n    }\n  }\n\n  // TODO: Can this be moved/combined?\n  rejectAccountConnect = error => {\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    modals.data.userRejectedConnect = true;\n    this.setState({ modals });\n  }\n\n  getAccountBalance = async (increaseAmount) => {\n\n    increaseAmount = increaseAmount ? this.functionsUtil.BNify(increaseAmount) : null;\n\n    try {\n\n      let [accountBalance,accountBalanceToken,tokenDecimals] = await Promise.all([\n        this.state.web3.eth.getBalance(this.state.account), // Get ETH balance\n        this.getTokenBalance(this.state.account), // Get token balance\n        this.getTokenDecimals()\n      ]);\n\n      // console.log('getAccountBalance',parseFloat(accountBalance));\n\n      if (accountBalance) {\n\n        // Convert to wei if decimals found\n        if (accountBalance.toString().includes('.')){\n          accountBalance = this.state.web3.utils.toWei(accountBalance);\n        }\n\n        // Convert to Eth amount\n        accountBalance = this.state.web3.utils.fromWei(\n          accountBalance,\n          'ether'\n        );\n\n        accountBalance = this.functionsUtil.BNify(accountBalance).toString();\n\n        this.setState({\n          accountBalance\n        });\n\n        this.functionsUtil.customLog(\"account balance: \", accountBalance);\n      }\n\n      // this.functionsUtil.customLog('accountBalance',res,(accountBalanceToken ? accountBalanceToken.toString() : null),tokenDecimals,increaseAmount);\n\n      if (accountBalanceToken) {\n\n        accountBalanceToken = this.functionsUtil.BNify(accountBalanceToken);\n\n        // Increase balance amount if passed and balance didn't change\n        if (increaseAmount && this.state.accountBalanceToken && this.functionsUtil.normalizeTokenAmount(this.state.accountBalanceToken,tokenDecimals).toString() === accountBalanceToken.toString()){\n          accountBalanceToken = accountBalanceToken.plus(increaseAmount);\n        }\n        \n        accountBalanceToken = this.functionsUtil.fixTokenDecimals(accountBalanceToken,tokenDecimals).toString();\n\n        // this.functionsUtil.customLog('increaseAmount',(increaseAmount ? increaseAmount.toString() : '0'),(this.state.accountBalanceToken ? this.state.accountBalanceToken.toString() : '0'),(accountBalanceToken ? accountBalanceToken.toString() : 'ERROR'));\n        // this.functionsUtil.customLog(`account balance ${this.props.selectedToken}: `, accountBalanceToken);\n\n        this.setState({\n          accountBalanceToken,\n          [`accountBalance${this.props.selectedToken}`]:accountBalanceToken\n        });\n\n      } else {\n        this.functionsUtil.customLog('accountBalanceToken is not set:',accountBalanceToken);\n      }\n    } catch (error) {\n      this.functionsUtil.customLogError(\"Failed to get account balance.\", error);\n    }\n  }\n\n  initializeContracts = async () => {\n\n    if (!this.state.web3 || !this.props.availableStrategies){\n      return false;\n    }\n\n    // console.log(this.functionsUtil.strToMoment().format('HH:mm:ss'),'initializeContracts - START',this.state.network.required.id,this.props.availableStrategies,this.props.availableStrategiesNetworks);\n\n    const contracts = [];\n    const contractsNetworks = {};\n    const requiredNetworkId = parseInt(this.state.network.required.id);\n    const availableNetworks = this.functionsUtil.getGlobalConfig(['network','enabledNetworks']);\n\n    if (this.props.availableStrategiesNetworks){\n      Object.keys(this.props.availableStrategiesNetworks).forEach( networkId => {\n        contractsNetworks[networkId] = [];\n        const strategies = this.props.availableStrategiesNetworks[networkId];\n        Object.keys(strategies).forEach( strategy => {\n          const availableTokens = this.props.availableStrategiesNetworks[networkId][strategy];\n          Object.keys(availableTokens).forEach( token => {\n            const tokenConfig = availableTokens[token];\n\n            this.functionsUtil.customLog('initializeContracts, init contract',token, tokenConfig.address);\n            contractsNetworks[networkId].push(this.initContractWithoutSet(token, tokenConfig.address, tokenConfig.abi, networkId));\n\n            this.functionsUtil.customLog('initializeContracts, init contract',tokenConfig.idle.token, tokenConfig.idle.address);\n            contractsNetworks[networkId].push(this.initContractWithoutSet(tokenConfig.idle.token, tokenConfig.idle.address, tokenConfig.idle.abi, networkId));\n\n            tokenConfig.protocols.forEach(async (p,i) => {\n              this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n              contractsNetworks[networkId].push(this.initContractWithoutSet(p.token, p.address, p.abi, networkId));\n            });\n          })\n        });\n      });\n    }\n\n    // console.log('initializeContracts',this.state.network,this.state.web3,contracts,this.props.availableStrategies);\n\n    const contractsToInitialize = this.functionsUtil.getGlobalConfig(['contracts',requiredNetworkId]);\n    if (contractsToInitialize){\n      Object.keys(contractsToInitialize).forEach( contractName => {\n        const contractInfo = contractsToInitialize[contractName];\n        if (contractInfo.address !== null && contractInfo.abi !== null){\n          const networkId = contractInfo.networkId ? parseInt(contractInfo.networkId) : requiredNetworkId;\n          // console.log('initializeContracts, init contract', requiredNetworkId, contractName, contractInfo.address);\n          contracts.push(this.initContractWithoutSet(contractName, contractInfo.address, contractInfo.abi, networkId));\n          contractsNetworks[requiredNetworkId].push(this.initContractWithoutSet(contractName, contractInfo.address, contractInfo.abi, networkId));\n        }\n      });\n    }\n\n    const govTokens = this.functionsUtil.getGlobalConfig(['govTokens']);\n    if (govTokens){\n      Object.keys(govTokens).forEach( token => {\n        const govTokenConfig = govTokens[token];\n        if (!govTokenConfig.enabled){\n          return;\n        }\n        availableNetworks.forEach( networkId => {\n          // Initialize govToken contracts\n          const contractAddress = govTokenConfig.addresses && govTokenConfig.addresses[networkId] ? govTokenConfig.addresses[networkId] : govTokenConfig.address;\n          this.functionsUtil.customLog('initializeContracts, init contract', token, contractAddress);\n          if (parseInt(networkId) === parseInt(requiredNetworkId)){\n            contracts.push(this.initContractWithoutSet(token, contractAddress, govTokenConfig.abi));\n          }\n          contractsNetworks[networkId].push(this.initContractWithoutSet(token, contractAddress, govTokenConfig.abi, networkId));\n        });\n      });\n    }\n\n    if (this.props.availableStrategies){\n      // Initialize Tokens Contracts\n      Object.keys(this.props.availableStrategies).forEach( strategy => {\n        const availableTokens = this.props.availableStrategies[strategy];\n        Object.keys(availableTokens).forEach( token => {\n          const tokenConfig = availableTokens[token];\n\n          this.functionsUtil.customLog('initializeContracts, init contract',token, tokenConfig.address);\n          contracts.push(this.initContractWithoutSet(token, tokenConfig.address, tokenConfig.abi));\n\n          // Initialize idleTokens contracts\n          this.functionsUtil.customLog('initializeContracts, init contract',tokenConfig.idle.token, tokenConfig.idle.address);\n          contracts.push(this.initContractWithoutSet(tokenConfig.idle.token, tokenConfig.idle.address, tokenConfig.idle.abi));\n\n          // Initialize protocols contracts\n          tokenConfig.protocols.forEach(async (p,i) => {\n            this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n            contracts.push(this.initContractWithoutSet(p.token, p.address, p.abi));\n          });\n\n          // Check migration contract\n          if (tokenConfig.migration){\n\n            if (tokenConfig.migration.oldContract){\n              const oldContract = tokenConfig.migration.oldContract;\n              this.functionsUtil.customLog('initializeContracts, init '+oldContract.name+' contract',oldContract);\n              contracts.push(this.initContractWithoutSet(oldContract.name, oldContract.address, oldContract.abi));\n            }\n\n            // Initialize protocols contracts\n            if (tokenConfig.migration.oldProtocols){\n              tokenConfig.migration.oldProtocols.forEach(async (p,i) => {\n                this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n                contracts.push(this.initContractWithoutSet(p.token, p.address, p.abi));\n              });\n            }\n\n            if (tokenConfig.migration.migrationContract){\n              const migrationContract = tokenConfig.migration.migrationContract;\n              this.functionsUtil.customLog('initializeContracts, init '+migrationContract.name+' contract',migrationContract);\n              contracts.push(this.initContractWithoutSet(migrationContract.name, migrationContract.address, migrationContract.abi));\n            }\n          }\n        })\n      });\n    }\n\n    const tranchesConfig = this.functionsUtil.getGlobalConfig(['strategies','tranches']);\n    if (this.props.availableTranches){\n      Object.keys(this.props.availableTranches).forEach( protocol => {\n        const tokens = this.props.availableTranches[protocol];\n        Object.keys(tokens).forEach( token => {\n          const tokenConfig = tokens[token];\n          if (!tranchesConfig.availableNetworks || tranchesConfig.availableNetworks.includes(requiredNetworkId)){\n            contracts.push(this.initContractWithoutSet(tokenConfig.name,tokenConfig.address,tokenConfig.abi));\n            contracts.push(this.initContractWithoutSet(tokenConfig.AA.name,tokenConfig.AA.address,tokenConfig.AA.abi));\n            contracts.push(this.initContractWithoutSet(tokenConfig.BB.name,tokenConfig.BB.address,tokenConfig.BB.abi));\n            contracts.push(this.initContractWithoutSet(tokenConfig.CDO.name,tokenConfig.CDO.address,tokenConfig.CDO.abi));\n            contracts.push(this.initContractWithoutSet(tokenConfig.AA.CDORewards.name,tokenConfig.AA.CDORewards.address,tokenConfig.AA.CDORewards.abi));\n            contracts.push(this.initContractWithoutSet(tokenConfig.BB.CDORewards.name,tokenConfig.BB.CDORewards.address,tokenConfig.BB.CDORewards.abi));\n          }\n\n          contractsNetworks[1].push(this.initContractWithoutSet(tokenConfig.name,tokenConfig.address,tokenConfig.abi,1));\n          contractsNetworks[1].push(this.initContractWithoutSet(tokenConfig.AA.name,tokenConfig.AA.address,tokenConfig.AA.abi,1));\n          contractsNetworks[1].push(this.initContractWithoutSet(tokenConfig.BB.name,tokenConfig.BB.address,tokenConfig.BB.abi,1));\n          contractsNetworks[1].push(this.initContractWithoutSet(tokenConfig.CDO.name,tokenConfig.CDO.address,tokenConfig.CDO.abi,1));\n          contractsNetworks[1].push(this.initContractWithoutSet(tokenConfig.AA.CDORewards.name,tokenConfig.AA.CDORewards.address,tokenConfig.AA.CDORewards.abi,1));\n          contractsNetworks[1].push(this.initContractWithoutSet(tokenConfig.BB.CDORewards.name,tokenConfig.BB.CDORewards.address,tokenConfig.BB.CDORewards.abi,1));\n        });\n      });\n    }\n\n    const newState = {\n      contractsNetworks,\n      contractsInitialized:true,\n      contracts:contracts.filter( c => !!c )\n    };\n\n    // console.log(this.functionsUtil.strToMoment().format('HH:mm:ss'),'initializeContracts - END',newState.contracts);\n\n    return this.setState(newState);\n  }\n\n  getContractByName = async (contractName) => {\n    let contract = this.state.contracts.find(c => c.name === contractName);\n\n    if (!contract && this.props.tokenConfig) {\n      const tokenConfig = this.props.tokenConfig;\n      contract = await this.initContract(contractName, tokenConfig.address, tokenConfig.abi);\n    }\n\n    return contract ? contract.contract : null;\n  }\n\n  getTokenDecimals = async () => {\n    let tokenDecimals = null;\n\n    if (!this.state.tokenDecimals){\n\n      tokenDecimals = await this.functionsUtil.getTokenDecimals(this.props.selectedToken);\n\n      this.setState({\n        tokenDecimals\n      });\n    } else {\n      tokenDecimals = await (new Promise( async (resolve, reject) => {\n        resolve(this.state.tokenDecimals);\n      }));\n    }\n\n    return tokenDecimals;\n  }\n\n  getTokenBalance = async (account) => {\n    const contract = await this.getContractByName(this.props.selectedToken);\n\n    if (!contract) {\n      this.functionsUtil.customLogError('Wrong contract name', this.props.selectedToken);\n      return null;\n    }\n\n    if (!contract.methods['balanceOf']){\n      this.customLogError('Wrong method name balanceOf');\n      return null;\n    }\n\n    return await contract.methods.balanceOf(account).call().catch(error => {\n      this.functionsUtil.customLog(`Failed to get ${this.props.selectedToken} balance`, error);\n    });\n  }\n\n  determineAccountLowBalance = () => {\n    // If provided a minimum from config then use it, else default to 1\n    const accountBalanceMinimum =\n      typeof this.props.config !== \"undefined\" &&\n      typeof this.props.config.accountBalanceMinimum !== \"undefined\"\n        ? this.props.config.accountBalanceMinimum\n        : 1;\n    // Determine if the account balance is low\n    const accountBalanceLow =\n      this.state.accountBalance < accountBalanceMinimum;\n\n    this.setState({\n      accountBalanceLow\n    });\n  }\n\n  connectAndValidateAccount = async (callbackAfterLogin) => {\n    // Check for account\n    if (!this.state.account) {\n      this.props.setCallbackAfterLogin(callbackAfterLogin);\n      // Show modal to connect account\n      this.openConnectionModal();\n    }\n  }\n\n  getRequiredNetwork = () => {\n     const networkId = typeof this.props.config !== \"undefined\" && typeof this.props.config.requiredNetwork !== \"undefined\" ? this.props.config.requiredNetwork : globalConfigs.network.requiredNetwork;\n     const networkName = networkId && globalConfigs.network.availableNetworks[networkId] ? globalConfigs.network.availableNetworks[networkId].name : 'unknown';\n     return {\n       id: networkId,\n       name: networkName\n     };\n   }\n\n   getCurrentNetwork = async (networkId=null) => {\n     const currentWeb3 = this.functionsUtil.getCurrentWeb3();\n\n     networkId = parseInt(networkId) || await currentWeb3.eth.net.getId();\n     const networkName = this.functionsUtil.getGlobalConfig(['network','availableNetworks',networkId,'name']) || await currentWeb3.eth.net.getNetworkType();\n\n     return {\n       id:networkId,\n       name:networkName\n     }\n   }\n\n  getNetworkId = async () => {\n    try {\n      return this.state.web3.eth.net.getId((error, networkId) => {\n        let current = { ...this.state.network.current };\n        current.id = networkId;\n        let network = Object.assign({},this.state.network);\n        network.current = current;\n        network.isCorrectNetwork = globalConfigs.network.enabledNetworks.includes(networkId);\n        this.setState({ network });\n      });\n    } catch (error) {\n      this.functionsUtil.customLog(\"Could not get network ID: \", error);\n    }\n  }\n\n  checkNetwork = async (networkId=null) => {\n    const network = {...this.state.network};\n\n    network.required = this.getRequiredNetwork();\n    network.current = await this.getCurrentNetwork(networkId);\n\n    const networkInitialized = !!network.current.id;\n    network.isCorrectNetwork = !networkInitialized || network.current.id === network.required.id;\n    network.isSupportedNetwork = !network.current.id || globalConfigs.network.enabledNetworks.includes(network.current.id);\n\n    const currentNetworkChanged = network.current.id && network.current.id !== this.state.network.current.id;\n    const requiredNetworkChanged = network.required.id && network.required.id !== this.state.network.required.id;\n\n    if (!this.state.network.current.id || currentNetworkChanged || requiredNetworkChanged || !this.state.networkInitialized){\n      this.setState({\n        network,\n        networkInitialized\n      });\n    }\n\n    return network;\n  }\n\n  contractMethodSendWrapper = async (contractName, contractMethod, params = [], value = null, callback = null, callback_receipt = null, gasLimit = null, txData = null) => {\n    // Is it on the correct network?\n    if (!this.state.network.isCorrectNetwork) {\n      // wrong network modal\n      this.state.modals.methods.openWrongNetworkModal();\n      return false;\n    }\n\n    // Is a wallet connected and verified?\n    if (!this.state.account) {\n      this.openConnectionModal();\n      if (typeof callback === 'function') {\n        callback(null,'account_not_connected');\n      }\n      return false;\n    }\n\n    // Are there a minimum amount of funds?\n    if (this.state.accountBalanceLow) {\n      this.openLowFundsModal();\n      if (typeof callback === 'function') {\n        callback(null,'account_balance_low');\n      }\n      return false;\n    }\n\n    // Is the contract loaded?\n\n    // Create new tx and add to collection\n    // Maybe this needs to get moved out of the wrapper?\n    let transaction = this.createTransaction(txData);\n    transaction.method = contractMethod;\n\n    this.addTransaction(transaction);\n\n    // Add meta data to transaction\n    transaction.type = \"contract\";\n    transaction.status = \"started\";\n    transaction.params = params;\n\n    // Show toast for starting transaction\n    this.updateTransaction(transaction);\n\n    const { account, contracts } = this.state;\n    let contract = contracts.find(c => c.name === contractName);\n    if (!contract) {\n      if (typeof callback === 'function') {\n        callback(null,'contract_not_found');\n      }\n      return this.functionsUtil.customLog(`No contract with name ${contractName}`);\n    }\n\n    contract = contract.contract;\n\n    // Does the method exists?\n    // if (typeof contract.methods[contractMethod] === 'undefined'){\n    //   return false;\n    // }\n\n    let manualConfirmationTimeoutId = null;\n\n    try {\n\n      if (!value){\n        value = this.functionsUtil.BNify(0);\n      }\n\n      this.functionsUtil.customLog('contractMethodSendWrapper',contractName,contract._address,account,contractMethod,params,(value ? { from: account, value } : { from: account }));\n\n      // estimate gas price\n      let gas = await contract.methods[contractMethod](...params)\n        .estimateGas(value ? { from: account, value } : { from: account })\n        .catch(e => console.error(e));\n\n      if (gas) {\n\n        gas = this.functionsUtil.BNify(gas);\n        gas = gas.plus(gas.times(this.functionsUtil.BNify('0.2'))); // Increase 20% of enstimation\n\n        // Check if gas is under the gasLimit param\n        if (gasLimit && gas.lt(this.functionsUtil.BNify(gasLimit))){\n          gas = this.functionsUtil.BNify(gasLimit);\n        }\n\n        // Convert gasLimit toBN with web3 utils\n        gas = this.state.web3.utils.toBN(gas.integerValue(BigNumber.ROUND_FLOOR));\n      }\n\n      const confirmationCallback = (confirmationNumber, receipt) => {\n\n        // this.functionsUtil.customLog('confirmationCallback', confirmationNumber, receipt);\n\n        if (manualConfirmationTimeoutId){\n          window.clearTimeout(manualConfirmationTimeoutId);\n        }\n\n        // this.functionsUtil.customLog('txOnConfirmation', receipt);\n        // Update confirmation count on each subsequent confirmation that's received\n        transaction.confirmationCount += 1;\n\n        const call_callback = !globalConfigs.network.isForked && typeof callback === 'function' && transaction.confirmationCount===1;\n\n        // How many confirmations should be received before informing the user\n        const confidenceThreshold = this.props.config.requiredConfirmations || 1;\n\n        if (transaction.confirmationCount === 1) {\n          // Initial confirmation receipt\n          transaction.status = \"confirmed\";\n        } else if (transaction.confirmationCount < confidenceThreshold) {\n          // Not enough confirmations to match threshold\n        }\n\n        if (transaction.confirmationCount === confidenceThreshold) {\n          // Confirmations match threshold\n          // Check the status from result since we are confident in the result\n          if (receipt.status) {\n            transaction.status = \"success\";\n          } else if (!receipt.status) {\n            transaction.status = \"error\";\n          }\n        } else if (transaction.confirmationCount > confidenceThreshold) {\n          // Confidence threshold met\n        }\n\n\n        if (call_callback){\n          // Update transaction with receipt details\n          if (receipt){\n            transaction.txReceipt = receipt;\n          }\n          transaction.recentEvent = \"confirmation\";\n          this.updateTransaction(transaction);\n          \n          callback(transaction);\n\n          this.functionsUtil.customLog('Confirmed', confirmationNumber, receipt, transaction);\n        }\n      };\n\n      const manualConfirmation = (transactionHash,timeout) => {\n        if (!transactionHash){\n          return false;\n        }\n        this.state.web3.eth.getTransactionReceipt(transactionHash,(err,txReceipt) => {\n          if (txReceipt && txReceipt.status){\n            this.functionsUtil.customLog('Tx manualConfirmation', txReceipt);\n            confirmationCallback(1,txReceipt);\n          } else {\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(transactionHash,timeout) , timeout);\n          }\n        });\n      };\n\n      const receiptCallback = receipt => {\n\n        // this.functionsUtil.customLog('txOnReceipt', receipt);\n\n        if (manualConfirmationTimeoutId){\n          window.clearTimeout(manualConfirmationTimeoutId);\n        }\n\n        // Received receipt, met total number of confirmations\n        if (receipt){\n          transaction.txReceipt = receipt;\n        }\n        transaction.recentEvent = \"receipt\";\n\n        // If the network is forked use the receipt for confirmation\n        if (globalConfigs.network.isForked){\n          transaction.status = \"success\";\n          if (typeof callback === 'function') {\n            callback(transaction);\n          }\n        } else {\n          this.updateTransaction(transaction);\n\n          // Transaction mined, wait for manual confirmation\n          if (receipt.status){\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(receipt.transactionHash,4000), 2000);\n          }\n        }\n      };\n\n      // const networkId = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n      // const common = { customChain:{ chainId: 1337, networkId: 1337 } };\n\n      return contract.methods[contractMethod](...params)\n        .send(value ? { from: account, value, gas/*, common*/ } : { from: account, gas/*, common*/ })\n        .on(\"transactionHash\", hash => {\n          this.functionsUtil.customLog('txOnTransactionHash', hash);\n\n          if (!hash){\n            this.functionsUtil.customLog('Skip transactionHash due to hash empty', hash);\n            return false;\n          }\n\n          transaction.transactionHash = hash;\n          transaction.status = \"pending\";\n          transaction.recentEvent = \"transactionHash\";\n          this.updateTransaction(transaction);\n\n          if (callback_receipt){\n            callback_receipt(transaction);\n          }\n\n          // Wait for manual confirmation only for mobile\n          if (this.props.isMobile){\n            if (manualConfirmationTimeoutId){\n              window.clearTimeout(manualConfirmationTimeoutId);\n            }\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(hash,60000), 20000);\n          }\n        })\n        .on(\"receipt\", receiptCallback)\n        .on(\"confirmation\", confirmationCallback)\n        .on(\"error\", error => {\n\n          console.log('Tx error',error);\n          \n          const isDeniedTx = error && error.message && typeof error.message.includes === 'function' ? error.message.includes('User denied transaction signature') : false;\n          \n          // Set error on transaction\n          transaction.status = \"error\";\n          transaction.recentEvent = \"error\";\n          this.updateTransaction(transaction);\n\n\n          // Show ToastProvider\n          if (!isDeniedTx){\n            window.toastProvider.addMessage(\"Something went wrong\", {\n              icon: 'Block',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"failure\",\n              colorTheme: 'light',\n              secondaryMessage: \"Please retry\",\n            });\n\n            const isError = error instanceof Error;\n\n            if (typeof error.message !== 'undefined'){\n              this.openTransactionErrorModal(null,error.message);\n            } else if (this.functionsUtil.checkUrlOrigin() && isError){\n              Sentry.captureException(error);\n            }\n          }\n\n          if (typeof callback === 'function') {\n            callback(transaction,error);\n          }\n        });\n    } catch (error) {\n\n      console.log('Tx catch error',error);\n\n      transaction.status = \"error\";\n      this.updateTransaction(transaction);\n\n      // TODO: should this be a custom error? What is the error here?\n      // TODO: determine how to handle error messages globally\n      window.toastProvider.addMessage(\"Something went really wrong, we are sorry\", {\n        icon: 'Block',\n        actionHref: \"\",\n        actionText: \"\",\n        variant: \"failure\",\n        colorTheme: 'light',\n        secondaryMessage: \"Try refreshing the page :(\",\n      });\n\n      const isDeniedTx = error && error.message ? error.message.includes('User denied transaction signature') : false;\n\n      const isError = error instanceof Error;\n      if ( this.functionsUtil.checkUrlOrigin() && isError && !isDeniedTx){\n        Sentry.captureException(error);\n      }\n\n      if (typeof callback === 'function') {\n        // this.functionsUtil.customLog('Tx Failed',error,transaction,typeof callback);\n        callback(transaction,error);\n      }\n\n      return false;\n    }\n  }\n\n  // Create tx\n  createTransaction = (txData=null) => {\n    let transaction = {\n      ...txData\n    };\n    transaction.txReceipt = {};\n    transaction.created = Date.now();\n    transaction.confirmationCount = 0;\n    transaction.status = \"initialized\";\n    transaction.lastUpdated = Date.now();\n    transaction.token = this.props.selectedToken;\n    transaction.strategy = this.props.selectedStrategy;\n    transaction.networkId = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    return transaction;\n  }\n\n  addTransaction = transaction => {\n    const transactions = { ...this.state.transactions };\n    transactions[`tx${transaction.created}`] = transaction;\n    this.setState({ transactions });\n  }\n\n  // Add/update transaction in state\n  updateTransaction = updatedTransaction => {\n    const transactions = { ...this.state.transactions };\n    const transaction = { ...updatedTransaction };\n    transaction.lastUpdated = Date.now();\n    transactions[`tx${updatedTransaction.created}`] = transaction;\n    this.setState({ transactions });\n\n    // Save transactions in localStorage only if pending or succeeded\n    // console.log('updateTransaction',transaction);\n    if (transaction.transactionHash){\n      // Clear cached data\n      this.functionsUtil.clearCachedData();\n\n      // Store transaction\n      this.functionsUtil.addStoredTransaction(`tx${transaction.created}`,transaction);\n    }\n\n    return transaction;\n  }\n\n  // CONNECTION MODAL METHODS\n  closeConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionModalIsOpen = false;\n    // this.functionsUtil.customLog(\"this.state\", this.state);\n    this.setState({ modals });\n  }\n\n  openConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionModalIsOpen = true;\n    this.setState({ modals: modals });\n  }\n\n  closeConnectionPendingModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    this.setState({ modals });\n  }\n\n  openConnectionPendingModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = true;\n    modals.data.transactionConnectionModalIsOpen = false;\n    modals.data.connectionModalIsOpen = false;\n\n    this.setState({ modals });\n  }\n\n  closeTransactionErrorModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.transactionError = false;\n    this.setState({ modals });\n  }\n\n  openTransactionErrorModal = (e,error) => {\n    if (typeof e !== \"undefined\" && e) {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.transactionError = error;\n\n    this.setState({ modals });\n  }\n\n  closeConnectionErrorModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n\n    if (!this.state.modals.data.connectionError){\n      return false;\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionError = false;\n    this.setState({ modals });\n  }\n\n  openConnectionErrorModal = (e,error) => {\n    if (typeof e !== \"undefined\" && e) {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n\n    // Handle generic error\n    if (error==='[object Object]'){\n      error = 'Unable to access to the wallet.'\n    }\n    \n    if (this.state.modals.data.connectionError !== error){\n      // console.log('openConnectionErrorModal',typeof error,typeof error === 'object' ? JSON.stringify(error) : error);\n      modals.data.connectionError = error;\n      this.setState({ modals });\n    }\n  }\n\n  closeUserRejectedConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedConnect = false;\n    this.setState({ modals });\n  }\n\n  openUserRejectedConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedConnect = true;\n    this.setState({ modals });\n  }\n\n  closeNoWeb3BrowserModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWeb3BrowserModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openNoWeb3BrowserModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWeb3BrowserModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeNoWalletModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openNoWalletModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeWrongNetworkModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.wrongNetworkModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openWrongNetworkModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.wrongNetworkModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeLowFundsModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.lowFundsModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openLowFundsModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.lowFundsModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  state = {\n    web3: null,\n    context:null,\n    account: null,\n    contracts: [],\n    biconomy: null,\n    simpleID: null,\n    web3Infura:null,\n    transactions: {},\n    web3Providers:{},\n    CrispClient: null,\n    currentWeb3: null,\n    permitClient:null,\n    tokenDecimals:null,\n    accountBalance: null,\n    contractsNetworks: {},\n    web3Subscription: null,\n    accountValidated: null,\n    gnosisSafeLoaded:false,\n    maticPlasmaClient:null,\n    accountBalanceDAI: null,\n    initWeb3: this.initWeb3,\n    accountBalanceLow: null,\n    networkInitialized:false,\n    accountInizialized:false,\n    erc20ForwarderClient:null,\n    subscribedTransactions:{},\n    contractsInitialized:false,\n    initAccount: this.initAccount,\n    accountValidationPending: null,\n    initSimpleID: this.initSimpleID,\n    initContract: this.initContract,\n    checkPreflight: this.checkPreflight,\n    validateAccount: this.validateAccount,\n    rejectValidation: this.rejectValidation,\n    getTokenDecimals: this.getTokenDecimals,\n    getAccountBalance: this.getAccountBalance,\n    initializeContracts: this.initializeContracts,\n    rejectAccountConnect: this.rejectAccountConnect,\n    contractMethodSendWrapper: this.contractMethodSendWrapper,\n    connectAndValidateAccount: this.connectAndValidateAccount,\n    enableUnderlyingWithdraw: this.props.enableUnderlyingWithdraw,\n    network: {\n      current: {},\n      required: {},\n      isCorrectNetwork: null,\n      checkNetwork: this.checkNetwork\n    },\n    modals: {\n      data: {\n        connectionError: null,\n        lowFundsModalIsOpen: null,\n        userRejectedConnect: null,\n        connectionModalIsOpen: null,\n        userRejectedValidation: null,\n        wrongNetworkModalIsOpen: null,\n        accountConnectionPending: null,\n        accountValidationPending: null,\n        transactionConnectionModalIsOpen: null,\n        noWalletModalIsOpen: this.noWalletModalIsOpen,\n        noWeb3BrowserModalIsOpen: this.noWeb3BrowserModalIsOpen,\n      },\n      methods: {\n        openLowFundsModal: this.openLowFundsModal,\n        openNoWalletModal: this.openNoWalletModal,\n        closeNoWalletModal: this.closeNoWalletModal,\n        closeLowFundsModal: this.closeLowFundsModal,\n        openConnectionModal: this.openConnectionModal,\n        closeConnectionModal: this.closeConnectionModal,\n        openWrongNetworkModal: this.openWrongNetworkModal,\n        closeWrongNetworkModal: this.closeWrongNetworkModal,\n        openNoWeb3BrowserModal: this.openNoWeb3BrowserModal,\n        closeNoWeb3BrowserModal: this.closeNoWeb3BrowserModal,\n        openConnectionErrorModal: this.openConnectionErrorModal,\n        closeConnectionErrorModal: this.closeConnectionErrorModal,\n        openTransactionErrorModal: this.openTransactionErrorModal,\n        closeTransactionErrorModal: this.closeTransactionErrorModal,\n        openConnectionPendingModal: this.openConnectionPendingModal,\n        closeConnectionPendingModal: this.closeConnectionPendingModal,\n        openUserRejectedValidationModal: this.openUserRejectedValidationModal,\n        openUserRejectedConnectionModal: this.openUserRejectedConnectionModal,\n        closeUserRejectedValidationModal: this.closeUserRejectedValidationModal,\n        closeUserRejectedConnectionModal: this.closeUserRejectedConnectionModal,\n      }\n    },\n    transaction: {\n      data: {\n        transactions: null\n      },\n      meta: {},\n      methods: {}\n    }\n  }\n\n  render() {\n    const connectionErrorModalOpened = typeof this.state.modals.data.connectionError === 'string' && this.state.modals.data.connectionError.length>0;\n    const transactionErrorModalOpened = typeof this.state.modals.data.transactionError === 'string' && this.state.modals.data.transactionError.length>0;\n    return (\n      <div>\n        <RimbleTransactionContext.Provider\n          {...this.props}\n          value={this.state}\n        />\n        <ConnectionModalUtil\n          {...this.props}\n          modals={this.state.modals}\n          network={this.state.network}\n          account={this.state.account}\n          isMobile={this.props.isMobile}\n          initAccount={this.state.initAccount}\n          setConnector={this.props.setConnector}\n          validateAccount={this.state.validateAccount}\n          accountValidated={this.state.accountValidated}\n          accountConnectionPending={this.state.accountConnectionPending}\n          accountValidationPending={this.state.accountValidationPending}\n        />\n        <TransactionErrorModal\n          modals={this.state.modals}\n          account={this.state.account}\n          context={this.props.context}\n          isOpen={transactionErrorModalOpened}\n        />\n        <ConnectionErrorModal\n          modals={this.state.modals}\n          account={this.state.account}\n          context={this.props.context}\n          isOpen={connectionErrorModalOpened}\n          setConnector={this.props.setConnector}\n        />\n        <NetworkUtil\n          web3={this.state.web3}\n          theme={this.props.theme}\n          network={this.state.network}\n          currentSection={this.props.currentSection}\n        />\n      </div>\n    );\n  }\n}\n\nexport default RimbleTransaction;\n","import React from \"react\";\nimport ExtLink from '../../ExtLink/ExtLink';\nimport FunctionsUtil from '../FunctionsUtil';\nimport { Box, Flex, Image, Text, Link, Icon } from \"rimble-ui\";\n// import NetworkIndicator from \"../../NetworkIndicator/NetworkIndicator\";\n\nimport {\n  Link as RouterLink\n} from \"react-router-dom\";\n\nclass Header extends React.Component {\n  state = {\n\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidMount() {\n\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n\n    this.loadUtils();\n\n    if (this.props.network && !this.props.network.isCorrectNetwork){\n      return false;\n    }\n  }\n\n  render() {\n\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n\n    return (\n      <Box\n        style={{\n          left: '0',\n          right: '0',\n          zIndex: 99,\n          position: 'absolute',\n        }}\n      >\n        <Flex\n          p={2}\n          alignItems={'center'}\n          justifyContent={'center'}\n          backgroundColor={'dark-blue'}\n          flexDirection={['column','row']}\n        >\n          <Text\n            color={'white'}\n            textAlign={'center'}\n          >\n            IDLE Governance Token is now live!\n          </Text>\n          <ExtLink\n            pr={2}\n            py={1}\n            mt={[1,0]}\n            ml={[0,2]}\n            pl={'12px'}\n            color={'white'}\n            style={{\n              display:'flex',\n              borderRadius:'8px',\n              flexDirection:'row',\n              alignItems:'flex-end'\n            }}\n            backgroundColor={'#0037ff'}\n            href={'https://idlefinance.medium.com/idle-governance-is-live-9b55e8f407d7'}\n          >\n            Read More\n            <Icon\n              ml={1}\n              size={'1.3em'}\n              color={'white'}\n              name={'KeyboardArrowRight'}\n            >\n            </Icon>\n          </ExtLink>\n        </Flex>\n        <Flex\n          pt={[3,4]}\n          mx={'auto'}\n          bg={\"transparent\"}\n          width={['98%','100%']}\n          maxWidth={['100%','100em']}\n          alignItems={['center','flex-start']}\n        >\n          <Flex\n            ml={[3, 5]}\n            width={[0.5, 3/12]}\n          >\n            <RouterLink\n              to=\"/\"\n            >\n              <Image\n                position={'relative'}\n                src={'images/logo.svg'}\n                height={['35px','48px']}\n              />\n            </RouterLink>\n          </Flex>\n          <Flex\n            width={[0.5,8/12]}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={\"flex-end\"}\n          >\n            {\n              !this.props.isMobile &&\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'row'}\n                >\n                  {\n                    governanceEnabled && \n                      <Link\n                        mr={4}\n                        fontSize={3}\n                        color={'white'}\n                        hoverColor={'white'}\n                        fontFamily={'sansSerif'}\n                        textAlign={['center','left']}\n                        onClick={ (e) => window.location.hash='#/governance' }\n                      >\n                        Governance\n                      </Link>\n                  }\n                  <Link\n                    mr={4}\n                    fontSize={3}\n                    color={'white'}\n                    hoverColor={'white'}\n                    fontFamily={'sansSerif'}\n                    textAlign={['center','left']}\n                    onClick={(e) => {this.functionsUtil.scrollTo(document.getElementById('contacts').offsetTop,300)}}\n                  >\n                    Contact Us\n                  </Link>\n                  <Link\n                    fontSize={3}\n                    color={'white'}\n                    hoverColor={'white'}\n                    fontFamily={'sansSerif'}\n                    textAlign={['center','left']}\n                    onClick={(e) => {this.functionsUtil.scrollTo(document.getElementById('faq').offsetTop,300)}}\n                  >\n                    FAQs\n                  </Link>\n                </Flex>\n            }\n            {\n              /*\n              <Flex\n                ml={4}\n              >\n                <NetworkIndicator\n                  {...this.props}\n                />\n              </Flex>\n              */\n            }\n          </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default Header;\n","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nexport default function ScrollToTop() {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return null;\n}","import Footer from '../Footer/Footer';\nimport React, { Component } from 'react';\nimport styles from './PageNotFound.module.scss';\nimport { Box, Flex, Heading, Button } from 'rimble-ui'\nimport Header_styles from '../utilities/components/Header.module.scss';\nimport {\n  Link as RouterLink,\n} from \"react-router-dom\";\n\nclass PageNotFound extends Component {\n  state = {};\n\n  render() {\n    return (\n      <Box>\n        <Box className={styles.headerContainer} px={[3,6]} pt={['2em', '3em']}>\n          <Box className={styles.headerBgFiller}></Box>\n          <Box position={'relative'} zIndex={10}>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"60em\"]} mx={'auto'} textAlign={'center'} pt={['8vh', '8vh']}>\n              <Heading.h1 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.3em'} fontSize={['2.5em',7]} textAlign={'center'} color={'white'}>\n                This page doesn't exist!\n              </Heading.h1>\n              <Heading.h3 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.6em'} fontWeight={2} fontSize={['1.5em',4]} textAlign={'center'} color={'white'}>\n                Sorry, the page you are looking for cannot be found.\n              </Heading.h3>\n              <RouterLink to=\"/\" style={{textDecoration:'none'}}>\n                <Button\n                  className={Header_styles.gradientButton}\n                  borderRadius={4}\n                  size={this.props.isMobile ? 'medium' : 'medium'}\n                  mainColor={'blue'}\n                  contrastColor={'white'}\n                  fontWeight={3}\n                  fontSize={[2,2]}\n                  mx={'auto'}\n                  px={[4,5]}\n                  mt={2}\n                >\n                  GO TO HOMEPAGE\n                </Button>\n              </RouterLink>\n            </Flex>\n          </Box>\n        </Box>\n        <Footer />\n      </Box>\n    );\n  }\n}\n\nexport default PageNotFound;\n","import React from \"react\";\nimport { Box, Flex, Text } from \"rimble-ui\";\n\nclass NetworkOverview extends React.Component {\n  getNetworkCircleColor = () => {\n    let circleColor = \"#333\";\n    if (this.props.network) {\n      switch (this.props.network.id) {\n        case 1:\n          circleColor = \"#56b3ae\";\n          break;\n        case 2:\n          circleColor = \"#000\";\n          break;\n        case 3:\n          circleColor = \"#ed5a8d\";\n          break;\n        case 4:\n          circleColor = \"#efc35c\";\n          break;\n        case 42:\n          circleColor = \"#6a5ff6\";\n          break;\n        default:\n          circleColor = \"#ccc\";\n      }\n    }\n\n    return circleColor;\n  };\n\n  render() {\n    const networkCircle = {\n      borderRadius: \"50%\",\n      backgroundColor: this.getNetworkCircleColor(),\n      height: \"1em\",\n      width: \"1em\"\n    };\n\n    return (\n      <Flex alignItems={\"center\"}>\n        <Box style={networkCircle} mr={2} />\n        <Text style={{ textTransform: \"capitalize\" }}>\n          {this.props.network.name}\n        </Text>\n      </Flex>\n    );\n  }\n}\n\nexport default NetworkOverview;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Icon,\n  Flex,\n  ToastMessage,\n  Box,\n  Button,\n  Link\n} from \"rimble-ui\";\nimport NetworkOverview from \"../utilities/components/NetworkOverview\";\n\nconst DebuggerButtons = props => (\n  <Box mt={4} borderTop={1} borderColor=\"#E8E8E8\" pt={3}>\n    <Heading.h4 textAlign={\"center\"}>Show Modal</Heading.h4>\n    <Button\n      onClick={props.modals.methods.openWrongNetworkModal}\n      size=\"small\"\n      mr={2}\n      mb={2}\n    >\n      Blocking Wrong Network\n    </Button>\n\n    <Button\n      onClick={props.modals.methods.openConnectionModal}\n      size=\"small\"\n      mr={2}\n      mb={2}\n    >\n      Connection\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openConnectionPendingModal}\n      mr={2}\n      mb={2}\n    >\n      Connection Pending\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openUserRejectedConnectionModal}\n      mr={2}\n      mb={2}\n    >\n      Connection Rejected\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={event => {\n        props.modals.methods.openLowFundsModal(event);\n      }}\n      mr={2}\n      mb={2}\n    >\n      Low Funds\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openNoWeb3BrowserModal}\n      mr={2}\n      mb={2}\n    >\n      Not Web3 Browser\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openNoWalletModal}\n      mr={2}\n      mb={2}\n    >\n      No Wallet\n    </Button>\n  </Box>\n);\n\nclass Web3Debugger extends React.Component {\n  render() {\n    return (\n      <Card width={\"600px\"} mx={\"auto\"} px={4}>\n        <Heading.h3 textAlign={\"center\"}>Get Connected</Heading.h3>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            <Icon name=\"Check\" color={\"green\"} mr={2} />\n            <Text>Modern & Web3 Capable Browser</Text>\n          </Flex>\n        </Box>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.web3 ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Browser-connected Wallet</Text>\n          </Flex>\n\n          {!this.props.web3 ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">You do not have a wallet.</Text>\n              </Flex>\n\n              <Link\n                href=\"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                <Button.Outline size=\"small\">\n                  Get MetaMask Extension\n                </Button.Outline>\n              </Link>\n            </Flex>\n          ) : null}\n        </Box>\n\n        {this.props.web3 ? (\n          <Flex\n            py={3}\n            my={3}\n            borderTop={1}\n            borderBottom={1}\n            borderColor={\"#E8E8E8\"}\n            textAlign={\"center\"}\n            justifyContent={\"space-around\"}\n            alignItems={\"center\"}\n          >\n            <Button\n              size=\"small\"\n              onClick={this.props.connectAndValidateAccount}\n              disabled={!this.props.web3}\n            >\n              Connect and verify\n            </Button>\n            <Text>- or -</Text>\n            <Button size=\"small\" disabled>\n              Initiate On-Chain Action\n            </Button>\n          </Flex>\n        ) : null}\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.network.isCorrectNetwork ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Correct Network</Text>\n          </Flex>\n\n          {this.props.web3 && !this.props.network.isCorrectNetwork ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Box>\n                  <Flex alignItems={\"center\"}>\n                    <Text\n                      mr={2}\n                      color=\"#999\"\n                      style={{ textTransform: \"capitalize\" }}\n                    >\n                      Current network:\n                    </Text>\n                    <NetworkOverview network={this.props.network.current} />\n                  </Flex>\n                  <Flex alignItems={\"center\"}>\n                    <Text\n                      mr={2}\n                      color=\"#999\"\n                      style={{ textTransform: \"capitalize\" }}\n                    >\n                      Required network:\n                    </Text>\n                    <NetworkOverview network={this.props.network.required} />\n                  </Flex>\n                </Box>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.checkNetwork}>\n                Check Network\n              </Button.Outline>\n            </Flex>\n          ) : null}\n          {this.props.web3 && this.props.isCorrectNetwork ? (\n            <Flex ml={4} alignItems={\"center\"}>\n              <NetworkOverview network={this.props.network.current} />\n            </Flex>\n          ) : null}\n        </Box>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.account && this.props.accountValidated ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Wallet connected and verified</Text>\n          </Flex>\n\n          {!this.props.account &&\n          this.props.web3 &&\n          !this.props.userRejectedConnect ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">Not connected to this dApp.</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.initAccount}>\n                Connect\n              </Button.Outline>\n            </Flex>\n          ) : null}\n          {this.props.account && this.props.web3 ? (\n            <Flex ml={4} alignItems={\"center\"}>\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n              <Box>\n                <Text color=\"#999\">Connected wallet {this.props.account}</Text>\n                <Text color={this.props.accountBalanceLow ? \"red\" : \"#999\"}>\n                  Account balance {this.props.accountBalance}\n                </Text>\n              </Box>\n            </Flex>\n          ) : null}\n\n          {this.props.userRejectedConnect ? (\n            <Flex ml={4} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Error\" mr={2} color=\"red\" />\n                <Text color=\"red\">User rejected Connect request</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.initAccount}>\n                Connect\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {(this.props.accountValidated === null ||\n            this.props.accountValidated === false) &&\n          this.props.web3 ? (\n            <Flex\n              ml={4}\n              my={1}\n              alignItems={\"center\"}\n              justifyContent={\"space-between\"}\n            >\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">Account not verified</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.validateAccount}>\n                Validate\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {this.props.accountValidated === false ? (\n            <Flex\n              ml={4}\n              my={1}\n              alignItems={\"center\"}\n              justifyContent={\"space-between\"}\n            >\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Error\" mr={2} color=\"red\" />\n                <Text color=\"red\">Account not verified</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.validateAccount}>\n                Validate\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {this.props.userRejectedValidation === false ? (\n            <Flex ml={4}>\n              <Icon name=\"Error\" mr={2} color=\"red\" />\n              <Text color=\"red\">Account not verified</Text>\n            </Flex>\n          ) : null}\n        </Box>\n\n        <DebuggerButtons {...this.props} />\n\n        <ToastMessage.Provider ref={node => (window.toastProvider = node)} />\n      </Card>\n    );\n  }\n}\n\nexport default Web3Debugger;\n","import ERC20 from '../contracts/ERC20.json';\nimport IdleCDO from '../contracts/IdleCDO.json';\nimport IdleStrategy from '../contracts/IdleStrategy.json';\nimport IdleCDOTrancheRewards from '../contracts/IdleCDOTrancheRewards.json';\nconst availableTranches = {\n  idle:{\n    DAI:{\n      token:'DAI',\n      decimals:18,\n      limit:500000,\n      protocol:'idle',\n      blockNumber:13054628,\n      address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n      CDO:{\n        abi:IdleCDO,\n        decimals:18,\n        name:'IdleCDO_idleDAIYield',\n        address:'0xd0DbcD556cA22d3f3c142e9a3220053FD7a247BC'\n      },\n      Strategy:{\n        abi:IdleStrategy,\n        name:'IdleStrategy_idleDAIYield'\n      },\n      AA:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'AA',\n        functions:{\n          stake:'stake',\n          unstake:'unstake',\n          deposit:'depositAA',\n          withdraw:'withdrawAA'\n        },\n        CDORewards:{\n          decimals:18,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_idleDAIYield_AA',\n          address:'0x9c3bC87693c65E740d8B2d5F0820E04A61D8375B',\n          stakingRewards:[\n            {\n              token:'IDLE',\n              enabled:true,\n              address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e'\n            }\n          ]\n        },\n        label:'idleDAI AA',\n        blockNumber:13054628,\n        name:'AA_idleDAIYield',\n        token:'AA_idleDAIYield',\n        address:'0xE9ada97bDB86d827ecbaACCa63eBcD8201D8b12E'\n      },\n      BB:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'BB',\n        functions:{\n          stake:'stake',\n          unstake:'unstake',\n          deposit:'depositBB',\n          withdraw:'withdrawBB'\n        },\n        CDORewards:{\n          decimals:18,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_idleDAIYield_BB',\n          address:'0x4473bc90118b18be890af42d793b5252c4dc382d',\n          stakingRewards:[\n            {\n              token:'IDLE',\n              enabled:false,\n              address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e'\n            }\n          ]\n        },\n        label:'idleDAI BB',\n        blockNumber:13054628,\n        name:'BB_idleDAIYield',\n        token:'BB_idleDAIYield',\n        address:'0x730348a54bA58F64295154F0662A08Cbde1225c2'\n      }\n    },\n    FEI:{\n      token:'FEI',\n      decimals:18,\n      limit:500000,\n      protocol:'idle',\n      blockNumber:13575397,\n      address:'0x956f47f50a910163d8bf957cf5846d573e7f87ca',\n      CDO:{\n        abi:IdleCDO,\n        decimals:18,\n        name:'IdleCDO_idleFEIYield',\n        address:'0x77648a2661687ef3b05214d824503f6717311596'\n      },\n      Strategy:{\n        abi:IdleStrategy,\n        name:'IdleStrategy_idleFEIYield'\n      },\n      AA:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'AA',\n        functions:{\n          stake:'stake',\n          unstake:'unstake',\n          deposit:'depositAA',\n          withdraw:'withdrawAA'\n        },\n        CDORewards:{\n          decimals:18,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_idleFEIYield_AA',\n          address:'0x8fcD21253AaA7E228531291cC6f644d13B3cF0Ba',\n          stakingRewards:[\n            {\n              token:'IDLE',\n              enabled:true,\n              address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e'\n            }\n          ]\n        },\n        label:'idleFEI AA',\n        blockNumber:13575397,\n        name:'AA_idleFEIYield',\n        token:'AA_idleFEIYield',\n        address:'0x9cE3a740Df498646939BcBb213A66BBFa1440af6'\n      },\n      BB:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'BB',\n        functions:{\n          stake:'stake',\n          unstake:'unstake',\n          deposit:'depositBB',\n          withdraw:'withdrawBB'\n        },\n        CDORewards:{\n          decimals:18,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_idleFEIYield_BB',\n          address:'0x0000000000000000000000000000000000000000',\n          stakingRewards:[\n            {\n              token:'IDLE',\n              enabled:false,\n              address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e'\n            }\n          ]\n        },\n        label:'idleFEI BB',\n        blockNumber:13575397,\n        name:'BB_idleFEIYield',\n        token:'BB_idleFEIYield',\n        address:'0x2490D810BF6429264397Ba721A488b0C439aA745'\n      }\n    }\n  }\n  /*\n  yearn:{\n  \tDAI:{\n  \t  junior:{\n  \t    address:'0x000000000000000000000000000000000000'\n  \t  },\n  \t  senior:{\n  \t    address:'0x000000000000000000000000000000000000'\n  \t  }\n  \t}\n  }\n  */\n};\nexport default availableTranches;","const TransactionToastMessages = {\n    initialized: {\n      message: \"{action} request initialized\",\n      secondaryMessage: \"Confirm with your wallet provider\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"default\",\n      icon: \"InfoOutline\"\n    },\n    started: {\n      message: \"{action} request submitted\",\n      secondaryMessage: \"Confirm with your wallet provider\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"default\",\n      icon: \"InfoOutline\"\n    },\n    pending: {\n      message: \"Processing {action} request...\",\n      secondaryMessage: \"This may take a few minutes\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"processing\",\n      icon: \"InfoOutline\"\n    },\n    confirmed: {\n      message: \"First block confirmed\",\n      secondaryMessage: \"Your {action} request is in progress\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"processing\",\n      icon: 'CheckCircle'\n    },\n    success: {\n      message: \"{action} request completed\",\n      variant: \"success\",\n      icon: 'CheckCircle'\n    },\n    error: {\n      message: \"{action} request failed\",\n      secondaryMessage: \"Could not complete transaction.\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"failure\",\n      icon: \"Block\"\n    }\n  };\n\n  export default TransactionToastMessages;\n","import React from \"react\";\nimport { ToastMessage } from \"rimble-ui\";\nimport TransactionToastMessages from \"./TransactionToastMessages\";\n\nclass TransactionToastUtil extends React.Component {\n  // Determines if collections are same size\n  collectionHasNewObject = (prevCollection, currentCollection) => {\n    return (\n      typeof prevCollection === \"undefined\" ||\n      Object.keys(prevCollection).length !==\n        Object.keys(currentCollection).length\n    );\n  };\n\n  // Returns object from currentCollection that doesn't exist in prevCollection\n  getNewObjectFromCollection = (prevCollection, currentCollection) => {\n    if (typeof prevCollection !== \"undefined\") {\n      const objectKey = Object.keys(currentCollection).filter(key => {\n        return !Object.keys(prevCollection).includes(key);\n      });\n      return currentCollection[objectKey];\n    } else {\n      return Object.keys(currentCollection).map(key => {\n        return currentCollection[key];\n      });\n    }\n  };\n\n  // Compare two collections of objects, return single object from current collection that differs from prev collection\n  getUpdatedObjectFromCollection = (prevCollection, currentCollection) => {\n    const updatedTransaction = Object.keys(prevCollection)\n      .map(key => {\n        if (\n          prevCollection[key].lastUpdated !== currentCollection[key].lastUpdated\n        ) {\n          return currentCollection[key];\n        } else {\n          return null;\n        }\n      })\n      .filter(object => object !== null);\n    return updatedTransaction[0];\n  };\n\n  // Returns an transaction from a collection based on a given identifier\n  getTransactionFromCollection = (identifier, collection) => {\n    const object = collection[`tx${identifier}`];\n    return object;\n  };\n\n  // Returns either a new object or finds an updated object in a collection against a previous collection\n  getUpdatedTransaction = (prevCollection, currentCollection) => {\n    let tx = null;\n    let currentTx = {};\n    let prevTx = {};\n\n    if (this.collectionHasNewObject(prevCollection, currentCollection)) {\n      tx = this.getNewObjectFromCollection(prevCollection, currentCollection);\n    } else {\n      currentTx = this.getUpdatedObjectFromCollection(\n        prevCollection,\n        currentCollection\n      );\n      if (currentTx) {\n        prevTx = this.getTransactionFromCollection(\n          currentTx.created,\n          prevCollection\n        );\n      } else {\n        return false;\n      }\n\n      if (currentTx.status !== prevTx.status) {\n        tx = currentTx;\n      }\n    }\n    return tx;\n  };\n\n  // Check for updates to the transactions collection\n  processTransactionUpdates = prevProps => {\n    let tx = null;\n    if (Object.keys(this.props.transactions).length) {\n      tx = this.getUpdatedTransaction(\n        prevProps.transactions,\n        this.props.transactions\n      );\n    }\n\n    if (tx) {\n      this.showTransactionToast(tx);\n    }\n  };\n\n  showTransactionToast = transaction => {\n    // console.log(\"showTransactionToast: \", { ...transaction });\n    // Get text info for toast\n    let toastMeta = this.getTransactionToastMeta(transaction);\n    toastMeta.colorTheme = this.props.themeMode;\n    toastMeta.closeElem = true;\n    // console.log('toastMeta',toastMeta);\n\n    // Show toast\n    window.toastProvider.addMessage(\".\", toastMeta);\n  };\n\n  getTransactionToastMeta = transaction => {\n    let transactionToastMeta = {};\n    let status = transaction.status;\n\n    switch (status) {\n      case \"initialized\":\n        transactionToastMeta = TransactionToastMessages.initialized;\n        break;\n      case \"started\":\n        transactionToastMeta = TransactionToastMessages.started;\n        break;\n      case \"pending\":\n        transactionToastMeta = TransactionToastMessages.pending;\n        break;\n      case \"confirmed\":\n        transactionToastMeta = TransactionToastMessages.confirmed;\n        break;\n      case \"success\":\n        transactionToastMeta = TransactionToastMessages.success;\n        break;\n      case \"error\":\n        transactionToastMeta = TransactionToastMessages.error;\n        break;\n      default:\n        // do nothing\n        break;\n    }\n\n    let transactionAction = '';\n    switch (transaction.method){\n      case 'redeemIdleToken':\n        transactionAction = 'Redeem';\n      break;\n      case 'redeemGovTokens':\n        transactionAction = 'Redeem (Gov Tokens)';\n      break;\n      case 'mintIdleToken':\n      case 'mintIdleTokensProxy':\n        transactionAction = 'Lending';\n      break;\n      case 'migrateFromToIdle':\n      case 'migrateFromCompoundToIdle':\n      case 'migrateFromFulcrumToIdle':\n      case 'migrateFromAaveToIdle':\n      case 'migrateFromIearnToIdle':\n      case 'bridgeIdleV1ToIdleV2':\n        transactionAction = 'Migration';\n      break;\n      case 'executeMetaTransaction':\n        transactionAction = 'Meta-Tx';\n      break;\n      case 'approve':\n        transactionAction = 'Approve';\n      break;\n      case 'rebalance':\n        transactionAction = 'Rebalance';\n      break;\n      default:\n        transactionAction = transaction.method.charAt(0).toUpperCase() + transaction.method.substr(1);\n      break;\n    }\n\n    transactionToastMeta = JSON.parse(JSON.stringify(transactionToastMeta));\n\n    let newMessage = transactionToastMeta.message.replace('{action}',transactionAction);\n    newMessage = newMessage.charAt(0).toUpperCase() + newMessage.slice(1);\n    transactionToastMeta.message = newMessage;\n    transactionToastMeta.closeElem = true;\n    transactionToastMeta.colorTheme = this.props.themeMode;\n\n    return transactionToastMeta;\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    this.processTransactionUpdates(prevProps);\n  }\n\n  render() {\n    return (\n      <div>\n        <ToastMessage.Provider ref={node => (window.toastProvider = node)} />\n      </div>\n    );\n  }\n}\n\nexport default TransactionToastUtil;\n","import Web3 from \"web3\";\nimport jQuery from \"jquery\";\nimport theme from \"../theme\";\nimport Tos from \"../Tos/Tos\";\nimport themeDark from \"../theme-dark\";\nimport connectors from \"./connectors\";\nimport Web3Provider from \"web3-react\";\nimport { Web3Consumer } from \"web3-react\";\nimport CookieConsent from \"react-cookie-consent\";\nimport RimbleWeb3 from \"../utilities/RimbleWeb3\";\nimport FlexLoader from \"../FlexLoader/FlexLoader\";\nimport React, { Component, Suspense } from \"react\";\nimport GeneralUtil from \"../utilities/GeneralUtil\";\nimport Header from \"../utilities/components/Header\";\nimport globalConfigs from \"../configs/globalConfigs\";\nimport ScrollToTop from \"../ScrollToTop/ScrollToTop\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\nimport PageNotFound from \"../PageNotFound/PageNotFound\";\nimport Web3Debugger from \"../Web3Debugger/Web3Debugger\";\nimport availableTokens from \"../configs/availableTokens\";\nimport availableTranches from \"../configs/availableTranches\";\nimport TransactionToastUtil from \"../utilities/TransactionToastUtil\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { ThemeProvider, Box, Text, Link, Image, Flex } from \"rimble-ui\";\n\n// Lazy Loading\nconst Landing = React.lazy(() => import(\"../Landing/Landing\"));\nconst Dashboard = React.lazy(() => import(\"../Dashboard/Dashboard\"));\nconst Governance = React.lazy(() => import(\"../Governance/Governance\"));\n\nclass App extends Component {\n  state = {\n    network: null,\n    cachedData: {},\n    buyToken: null,\n    currentEnv: null,\n    selectedTab: '1',\n    route: \"default\", // or 'onboarding'\n    themeMode: 'light',\n    connecting: false,\n    tokenConfig: null,\n    genericError: null,\n    customAddress: null,\n    connectorName: null,\n    selectedToken: null,\n    selectedTheme: theme,\n    currentSection: null,\n    walletProvider: null,\n    availableTokens: null,\n    buyModalOpened: false,\n    selectedStrategy: null,\n    toastMessageProps: null,\n    callbackAfterLogin: null,\n    width: window.innerWidth,\n    availableStrategies: null,\n    height: window.innerHeight,\n    config:globalConfigs.network,\n    unsubscribeFromHistory: null,\n    enableUnderlyingWithdraw: false,\n    availableStrategiesNetworks: null\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n    // window.functionsUtil = this.functionsUtil;\n  }\n\n  closeToastMessage = (e) => {\n    if (e) {\n      e.preventDefault();\n    }\n    this.setState({\n      toastMessageProps: null\n    });\n  }\n\n  showToastMessage = (props) => {\n    this.setState({\n      toastMessageProps: props\n    });\n  }\n\n  processCustomParam = (props, prevProps) => {\n    // const params = props ? props.match.params : null;\n    // const prevParams = prevProps ? prevProps.match.params : null;\n\n    // Reset params\n    /*\n    if ( prevParams && params && prevParams.customParam !== params.customParam && (!params || !params.customParam || params.customParam === undefined)){\n      this.setState({\n        customAddress:null,\n        enableUnderlyingWithdraw:false\n      });\n    } else if (params && typeof params.customParam === 'string') {\n      // Check if custom address\n      if (params.customParam.toLowerCase().match(/0x[\\w]{40}/) && this.state.customAddress !== params.customParam){\n        this.setCustomAddress(params.customParam);\n      } else if (params && params.customParam === 'withdraw' && !this.state.enableUnderlyingWithdraw){\n        this.setState({\n          customAddress:null,\n          enableUnderlyingWithdraw:true\n        });\n      }\n    }\n    */\n  }\n\n  clearCachedData = async (callback = null, clear_all = false) => {\n\n    if (!this.state.network){\n      return false;\n    }\n\n    const requiredNetworkId = this.state.network.required.id;\n\n    const cachedData = { ...this.state.cachedData };\n    Object.keys(cachedData[requiredNetworkId]).forEach(key => {\n      const data = cachedData[requiredNetworkId][key];\n      if (data.expirationDate !== null) {\n        delete cachedData[requiredNetworkId][key];\n      }\n    });\n\n    const storedCachedData = clear_all ? {} : this.functionsUtil.getStoredItem('cachedData');\n    if (storedCachedData && storedCachedData[requiredNetworkId]){\n      Object.keys(storedCachedData[requiredNetworkId]).forEach( key => {\n        const storedData = storedCachedData[requiredNetworkId][key];\n        if (storedData.expirationDate !== null){\n          delete storedCachedData[requiredNetworkId][key];\n        }\n      });\n    }\n\n    this.functionsUtil.setLocalStorage('cachedData', storedCachedData, true);\n\n    await this.setState({\n      cachedData\n    }, () => {\n      if (typeof callback === 'function') {\n        callback();\n      }\n    });\n\n    return true;\n  }\n\n  setCachedData = (key, data, TTL = null, useLocalStorage = false) => {\n\n    if (!this.state.network){\n      return false;\n    }\n\n    key = key.toLowerCase();\n    const currentTime = parseInt(Date.now() / 1000);\n    const requiredNetworkId = this.state.network.required.id;\n    const cachedKeyFound = this.state.cachedData[requiredNetworkId] ? this.state.cachedData[requiredNetworkId][key] : null;\n\n    const update_key = !cachedKeyFound || ((cachedKeyFound.expirationDate !== null && cachedKeyFound.expirationDate >= currentTime) || JSON.stringify(cachedKeyFound.data) !== JSON.stringify(data));\n\n    let output = false;\n\n    if (update_key) {\n      const expirationDate = TTL ? currentTime + (TTL) : null;\n\n      // Save cached data in local storage\n      if (useLocalStorage) {\n        let storedCachedData = this.functionsUtil.getStoredItem('cachedData');\n        if (!storedCachedData) {\n          storedCachedData = {};\n          storedCachedData[requiredNetworkId] = {};\n        }\n\n        // const storedData = typeof data === 'object' ? JSON.stringify(data) : data;\n\n        storedCachedData = {\n          ...storedCachedData,\n          [requiredNetworkId]:{\n            ...storedCachedData[requiredNetworkId],\n            [key]: {\n              data,\n              expirationDate\n            }\n          }\n        };\n        \n        this.functionsUtil.setLocalStorage('cachedData',storedCachedData,true);\n      }\n\n      // Set new cached data state\n      this.setState((prevState) => ({\n        cachedData: {\n          ...prevState.cachedData,\n          [requiredNetworkId]:{\n            ...prevState.cachedData[requiredNetworkId],\n            [key]: {\n              data,\n              expirationDate\n            }\n          }\n        }\n      }), () => {\n        window.cachedData = this.state.cachedData;\n      });\n\n      output = true;\n    }\n\n    return output;\n  }\n\n  setCallbackAfterLogin = (callbackAfterLogin) => {\n    this.setState({\n      callbackAfterLogin\n    });\n  }\n\n  setCustomAddress = (customAddress) => {\n    // Reset customAddress if not well formatted\n    if (customAddress && !customAddress.toLowerCase().match(/0x[\\w]{40}/)) {\n      customAddress = null;\n    }\n\n    if (customAddress !== this.state.customAddress) {\n      this.setState({\n        customAddress,\n        enableUnderlyingWithdraw: false\n      });\n    }\n  }\n\n  async selectTab(e, tabIndex) {\n    return this.setState(state => ({ ...state, selectedTab: tabIndex }));\n  }\n\n  async loadAvailableTokens() {\n    const newState = {};\n    const availableStrategies = {};\n    const availableStrategiesNetworks = {};\n    const requiredNetwork = this.state.network && this.state.network.isCorrectNetwork ? (this.state.network.current.id || this.state.network.required.id) : this.state.config.requiredNetwork;\n\n    // console.log('loadAvailableTokens_1',this.state.network,requiredNetwork,availableTokens);\n\n    // Load available strategies\n    Object.keys(availableTokens).filter( networkId => this.functionsUtil.getGlobalConfig(['network','enabledNetworks']).includes(parseInt(networkId)) ).forEach (networkId => {\n      availableStrategiesNetworks[networkId] = {};\n      Object.keys(availableTokens[networkId]).forEach((strategy) => {\n\n        availableStrategiesNetworks[networkId][strategy] = Object.keys(availableTokens[networkId][strategy]).reduce((enabledTokens, token) => {\n          const tokenConfig = availableTokens[networkId][strategy][token];\n          const envEnabled = !tokenConfig.enabledEnvs || !tokenConfig.enabledEnvs.length || tokenConfig.enabledEnvs.includes(this.state.currentEnv);\n          if (tokenConfig.enabled && envEnabled) {\n            enabledTokens[token] = tokenConfig;\n          }\n          return enabledTokens;\n        }, {});\n\n        if (parseInt(networkId) === parseInt(requiredNetwork)){\n          availableStrategies[strategy] = availableStrategiesNetworks[networkId][strategy];\n        }\n      });\n    });\n\n    newState.availableStrategies = availableStrategies;\n    newState.availableStrategiesNetworks = availableStrategiesNetworks;\n\n    // console.log('availableStrategiesNetworks',availableStrategiesNetworks);\n\n    // Load strategy\n    const selectedStrategy = this.state.selectedStrategy;\n    if (selectedStrategy && availableStrategies[selectedStrategy]) {\n      newState.availableTokens = availableStrategies[selectedStrategy];\n\n      // Load token\n      const selectedToken = this.state.selectedToken;\n      if (selectedToken && newState.availableTokens[selectedToken]) {\n        newState.tokenConfig = newState.availableTokens[selectedToken];\n      }\n    }\n\n    // console.log('loadAvailableTokens',newState);\n\n    await this.setState(newState);\n  }\n\n  async setStrategyToken(selectedStrategy, selectedToken) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    const newState = {\n      tokenConfig: !selectedToken ? null : this.state.tokenConfig,\n      availableTokens: !selectedToken ? null : this.state.availableTokens,\n      selectedToken: !selectedToken ? selectedToken : this.state.selectedToken,\n      selectedStrategy: !selectedStrategy ? selectedStrategy : this.state.selectedStrategy,\n    };\n\n    if (selectedStrategy && this.state.availableStrategies && selectedStrategy !== this.state.selectedStrategy && Object.keys(this.state.availableStrategies).includes(selectedStrategy.toLowerCase())) {\n      newState.selectedStrategy = selectedStrategy.toLowerCase();\n    }\n\n    if (selectedToken && selectedToken !== this.state.selectedToken) {\n      if (this.state.availableTokens && Object.keys(this.state.availableTokens).includes(selectedToken.toUpperCase())) {\n        newState.selectedToken = selectedToken.toUpperCase();\n        newState.tokenConfig = this.state.availableTokens[selectedToken];\n      } else if (this.state.availableStrategies && Object.keys(this.state.availableStrategies[selectedStrategy]).includes(selectedToken.toUpperCase())) {\n        newState.selectedToken = selectedToken.toUpperCase();\n        newState.tokenConfig = this.state.availableStrategies[selectedStrategy][newState.selectedToken];\n        newState.availableTokens = this.state.availableStrategies[selectedStrategy];\n      }\n    }\n\n    // console.log('setStrategyToken',selectedStrategy,selectedToken,newState);\n\n    await this.setState(newState, callback);\n  }\n\n  async setRequiredNetwork(requiredNetwork){\n    requiredNetwork = parseInt(requiredNetwork);\n    if (globalConfigs.network.enabledNetworks.includes(requiredNetwork)){\n      this.functionsUtil.setLocalStorage('requiredNetwork',requiredNetwork);\n      // console.log('setRequiredNetwork',requiredNetwork);\n      this.functionsUtil.addEthereumChain(requiredNetwork);\n      return await this.setState(prevState => ({\n        config:{\n          ...prevState.config,\n          requiredNetwork\n        }\n      }));\n    }\n  }\n\n  async setStrategy(selectedStrategy) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    if (selectedStrategy && selectedStrategy !== this.state.selectedStrategy && Object.keys(this.state.availableStrategies).includes(selectedStrategy.toLowerCase())) {\n      selectedStrategy = selectedStrategy.toLowerCase();\n      await this.setState({\n        selectedStrategy\n      }, callback);\n    } else if (!selectedStrategy) {\n      await this.setState({\n        selectedStrategy\n      }, callback);\n    }\n  }\n\n  async setToken(selectedToken) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    if (selectedToken && selectedToken !== this.state.selectedToken && Object.keys(this.state.availableTokens).includes(selectedToken.toUpperCase())) {\n      selectedToken = selectedToken.toUpperCase();\n      const newState = {\n        selectedToken\n      };\n      newState.tokenConfig = this.state.availableTokens[selectedToken];\n      await this.setState(newState, callback);\n    } else if (!selectedToken) {\n      await this.setState({\n        selectedToken,\n        tokenConfig: null\n      }, callback);\n    }\n  }\n\n  async componentWillMount() {\n\n    this.loadUtils();\n\n    window.BNify = this.functionsUtil.BNify;\n\n    // Suppress warnings and errors in production\n    const isProduction = window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n    if (isProduction) {\n      window.console.error = () => { };\n      window.console.warn = () => { };\n    }\n\n    window.jQuery = jQuery;\n\n    if (window.localStorage) {\n      this.functionsUtil.removeStoredItem('context');\n\n      // Clear all localStorage data except walletProvider and connectorName if version has changed\n      const version = this.functionsUtil.getStoredItem('version', false);\n      if (version !== globalConfigs.version) {\n        // Clear cached data\n        this.clearCachedData(() => {\n          // Reset Localstorage\n          this.functionsUtil.clearStoredData(['walletProvider', 'connectorName', 'themeMode', 'requiredNetwork']);\n          this.functionsUtil.setLocalStorage('version', globalConfigs.version);\n        }, true);\n      }\n\n      console.log(`Client Version: ${globalConfigs.version}`);\n    }\n\n    const themeMode = this.functionsUtil.getStoredItem('themeMode', false);\n    if (themeMode) {\n      this.setThemeMode(themeMode);\n    }\n\n    const requiredNetwork = this.functionsUtil.getStoredItem('requiredNetwork',false);\n    if (requiredNetwork){\n      this.setRequiredNetwork(requiredNetwork);\n    }\n\n    window.closeIframe = (w) => {\n      const iFrames = document.getElementsByTagName('iframe');\n      for (let i = 0; i < iFrames.length; i++) {\n        const iframe = iFrames[i];\n        if (iframe.contentWindow === w) {\n          window.jQuery(iframe).parents('.iframe-container')[0].remove();\n        }\n      }\n    }\n\n    window.addEventListener('resize', this.handleWindowSizeChange);\n\n    this.loadCurrentEnvironment();\n    this.loadCustomAddress();\n  }\n\n  async loadCurrentEnvironment() {\n    const currentEnv = this.functionsUtil.getCurrentEnvironment();\n    this.setState({\n      currentEnv\n    }, async () => {\n      // const envRequiredNetwork = this.functionsUtil.getGlobalConfig(['environments',this.state.currentEnv,'requiredNetwork']);\n      // const storedRequiredNetwork = this.functionsUtil.getStoredItem('requiredNetwork',null);\n      // if (!storedRequiredNetwork || parseInt(storedRequiredNetwork) !== parseInt(envRequiredNetwork)){\n      //   const requiredNetwork = storedRequiredNetwork || envRequiredNetwork;\n      //   console.log('setRequiredNetwork',requiredNetwork);\n      //   await this.setRequiredNetwork(requiredNetwork);\n      // }\n      this.loadAvailableTokens();\n    })\n  }\n\n  loadCustomAddress() {\n    if (!this.state.customAddress) {\n      const walletProvider = this.functionsUtil.getWalletProvider('Infura');\n      if (walletProvider === 'custom') {\n        const customAddress = this.functionsUtil.getCustomAddress();\n        if (customAddress && customAddress !== this.state.customAddress) {\n          this.setState({\n            customAddress\n          });\n        }\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const currentSectionChanged = prevState.currentSection !== this.state.currentSection;\n    if (currentSectionChanged) {\n      if (this.state.currentSection === 'landing') {\n        this.setThemeMode('light', false);\n      } else {\n        // Get stored Mode\n        const themeMode = this.functionsUtil.getStoredItem('themeMode', false) || this.functionsUtil.getGlobalConfig(['dashboard', 'theme', 'mode']);\n        this.setThemeMode(themeMode);\n      }\n    }\n\n    const tokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const strategyChanged = prevState.selectedStrategy !== this.state.selectedStrategy;\n    const networkChanged = JSON.stringify(prevState.network) !== JSON.stringify(this.state.network);\n\n    if (tokenChanged || strategyChanged || networkChanged) {\n      this.loadAvailableTokens();\n    }\n  }\n\n  componentDidMount() {\n\n    // Close iFrame\n    // if (window.self !== window.top && window.top.location.href.indexOf(globalConfigs.baseURL) !== -1 && typeof window.parent.closeIframe === 'function' ){\n    //   window.parent.closeIframe(window.self);\n    // }\n\n    window.showToastMessage = this.showToastMessage;\n    window.closeToastMessage = this.closeToastMessage;\n\n    if (localStorage) {\n      let connectorName = localStorage.getItem('connectorName') ? localStorage.getItem('connectorName') : 'Infura';\n      let walletProvider = localStorage.getItem('walletProvider') ? localStorage.getItem('walletProvider') : 'Infura';\n\n      // Check Ledger Live\n      const isLedgerLive = window.location.href.includes(\"ledger-live=1\");\n      if (isLedgerLive) {\n        connectorName = 'ledgerLive';\n        walletProvider = 'ledger';\n      }\n      // console.log('isLedgerLive',isLedgerLive,connectorName,walletProvider);\n\n      this.setConnector(connectorName, walletProvider);\n    }\n  }\n\n  handleWindowSizeChange = () => {\n    const newState = {\n      width: this.state.width,\n      height: this.state.height,\n    };\n\n    const widthChanged = window.innerWidth !== this.state.width;\n    const heightChanged = window.innerHeight !== this.state.height;\n\n    if (widthChanged || heightChanged) {\n      if (widthChanged) {\n        newState.width = window.innerWidth;\n      }\n      if (heightChanged) {\n        newState.height = window.innerHeight;\n      }\n      return this.setState(newState);\n    }\n\n    return null;\n  };\n\n  showRoute(route) {\n    return this.setState({ route });\n  }\n\n  closeBuyModal(e) {\n    if (e) {\n      e.preventDefault();\n    }\n    return this.setState({\n      buyToken: null,\n      buyModalOpened: false\n    });\n  }\n\n  openBuyModal(e, buyToken) {\n    e.preventDefault();\n\n    return this.setState({\n      buyToken,\n      buyModalOpened: true\n    });\n  }\n\n  async logout() {\n    // Reset Custom Address\n    this.setState({\n      customAddress: null\n    });\n    // Clear cached data\n    this.clearCachedData(() => {\n      // Reset Localstorage except some keys\n      this.functionsUtil.clearStoredData(['version', 'themeMode', 'lastLogin', 'cachedData','requiredNetwork']);\n    });\n  }\n\n  setNetwork(network) {\n    this.setState({\n      network,\n      availableStrategies:null\n    });\n  }\n\n  setConnector(connectorName, walletProvider) {\n\n    let connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n    if (!connectorInfo && walletProvider) {\n      connectorInfo = globalConfigs.connectors[walletProvider.toLowerCase()];\n    }\n\n    // console.log('setConnector - BEFORE',connectorInfo,connectorName,walletProvider);\n\n    if ((connectorInfo && !connectorInfo.enabled) || (connectorName !== 'Injected' && !Object.keys(globalConfigs.connectors).includes(connectorName.toLowerCase())) || (walletProvider && !Object.keys(globalConfigs.connectors).includes(walletProvider.toLowerCase()))) {\n      connectorName = 'Infura';\n      walletProvider = 'Infura';\n    } else if (connectorName === 'Injected') {\n      const hasMetamask = GeneralUtil.hasMetaMask();\n      const hasDapper = GeneralUtil.hasDapper()\n\n      // Check if injected connector is valid\n      switch (walletProvider) {\n        case 'Metamask':\n          if (!hasMetamask && hasDapper) {\n            walletProvider = 'Dapper';\n          }\n          break;\n        case 'Dapper':\n          if (!hasDapper && hasMetamask) {\n            walletProvider = 'Metamask';\n          }\n          break;\n        default:\n          break;\n      }\n    }\n\n    this.functionsUtil.setLocalStorage('connectorName', connectorName);\n    this.functionsUtil.setLocalStorage('walletProvider', walletProvider);\n\n    return this.setState({\n      connectorName,\n      walletProvider\n    }, () => {\n      this.loadCustomAddress();\n    });\n  }\n\n  setThemeMode(themeMode, store = true) {\n    let selectedTheme = null;\n\n    // Check Dark Mode Enabled\n    const darkModeEnabled = this.functionsUtil.getGlobalConfig(['dashboard', 'theme', 'darkModeEnabled']);\n    if (themeMode === 'dark' && !darkModeEnabled) {\n      themeMode = 'light';\n    }\n\n    switch (themeMode) {\n      default:\n      case 'light':\n        selectedTheme = theme;\n        break;\n      case 'dark':\n        selectedTheme = themeDark;\n        break;\n    }\n\n    if (store) {\n      this.functionsUtil.setLocalStorage('themeMode', themeMode);\n    }\n\n    this.setState({\n      themeMode,\n      selectedTheme\n    });\n  }\n\n  setCurrentSection(currentSection) {\n    this.setState({\n      currentSection\n    });\n  }\n\n  render() {\n    const isMobile = this.state.width <= 768;\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance', 'enabled']);\n\n    // console.log(this.state.selectedToken,this.state.tokenConfig);\n\n    const SuspenseLoader = (\n      <Flex\n        width={1}\n        minHeight={'100vh'}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        backgroundColor={'selectBg'}\n      >\n        <FlexLoader\n          textProps={{\n            textSize: 4,\n            fontWeight: 2\n          }}\n          loaderProps={{\n            mb: 3,\n            size: '80px',\n            color: 'primary'\n          }}\n          flexProps={{\n            my: 3,\n            flexDirection: 'column'\n          }}\n          text={''}\n        />\n      </Flex>\n    );\n\n    return (\n      <Router>\n        <ScrollToTop />\n        <ThemeProvider\n          theme={this.state.selectedTheme}\n        >\n          <Web3Provider\n            web3Api={Web3}\n            connectors={connectors}\n            libraryName={'web3.js'}\n          >\n            <Web3Consumer\n              recreateOnNetworkChange={false}\n              recreateOnAccountChange={false}\n            >\n              {context => {\n                //console.log('Web3Consumer render',context);\n                return (\n                  <RimbleWeb3\n                    context={context}\n                    isMobile={isMobile}\n                    connectors={connectors}\n                    config={this.state.config}\n                    theme={this.state.selectedTheme}\n                    cachedData={this.state.cachedData}\n                    tokenConfig={this.state.tokenConfig}\n                    availableTranches={availableTranches}\n                    setNetwork={this.setNetwork.bind(this)}\n                    customAddress={this.state.customAddress}\n                    selectedToken={this.state.selectedToken}\n                    connectorName={this.state.connectorName}\n                    currentSection={this.state.currentSection}\n                    walletProvider={this.state.walletProvider}\n                    setConnector={this.setConnector.bind(this)}\n                    availableTokens={this.state.availableTokens}\n                    setCachedData={this.setCachedData.bind(this)}\n                    clearCachedData={this.clearCachedData.bind(this)}\n                    callbackAfterLogin={this.state.callbackAfterLogin}\n                    availableStrategies={this.state.availableStrategies}\n                    setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                    enableUnderlyingWithdraw={this.state.enableUnderlyingWithdraw}\n                    availableStrategiesNetworks={this.state.availableStrategiesNetworks}\n                  >\n                    <RimbleWeb3.Consumer>\n                      {({\n                        web3,\n                        modals,\n                        network,\n                        account,\n                        initWeb3,\n                        simpleID,\n                        biconomy,\n                        contracts,\n                        web3Infura,\n                        web3Polygon,\n                        transaction,\n                        initAccount,\n                        initContract,\n                        checkNetwork,\n                        transactions,\n                        initSimpleID,\n                        permitClient,\n                        tokenDecimals,\n                        accountBalance,\n                        needsPreflight,\n                        validateAccount,\n                        rejectValidation,\n                        accountValidated,\n                        getTokenDecimals,\n                        getAccountBalance,\n                        contractsNetworks,\n                        accountBalanceLow,\n                        networkInitialized,\n                        accountInizialized,\n                        accountBalanceToken,\n                        userRejectedConnect,\n                        initializeContracts,\n                        erc20ForwarderClient,\n                        rejectAccountConnect,\n                        contractsInitialized,\n                        userRejectedValidation,\n                        accountValidationPending,\n                        connectAndValidateAccount,\n                        contractMethodSendWrapper,\n                        initContractCustomProvider\n                      }) => {\n                        return (\n                          <Box>\n                            <Switch>\n                              <Route\n                                path=\"/dashboard/:section?/:param1?/:param2?/:param3?\"\n                                render={\n                                  (props) => \n                                    <Suspense\n                                      fallback={SuspenseLoader}\n                                    >\n                                      <Dashboard\n                                        {...props}\n                                        web3={web3}\n                                        modals={modals}\n                                        network={network}\n                                        context={context}\n                                        account={account}\n                                        isDashboard={true}\n                                        initWeb3={initWeb3}\n                                        biconomy={biconomy}\n                                        isMobile={isMobile}\n                                        simpleID={simpleID}\n                                        contracts={contracts}\n                                        web3Infura={web3Infura}\n                                        web3Polygon={web3Polygon}\n                                        initAccount={initAccount}\n                                        permitClient={permitClient}\n                                        initSimpleID={initSimpleID}\n                                        initContract={initContract}\n                                        transactions={transactions}\n                                        buyToken={this.state.buyToken}\n                                        logout={this.logout.bind(this)}\n                                        accountBalance={accountBalance}\n                                        themeMode={this.state.themeMode}\n                                        theme={this.state.selectedTheme}\n                                        validateAccount={validateAccount}\n                                        currentEnv={this.state.currentEnv}\n                                        connecting={this.state.connecting}\n                                        cachedData={this.state.cachedData}\n                                        setToken={this.setToken.bind(this)}\n                                        accountValidated={accountValidated}\n                                        getTokenDecimals={getTokenDecimals}\n                                        rejectValidation={rejectValidation}\n                                        tokenConfig={this.state.tokenConfig}\n                                        contractsNetworks={contractsNetworks}\n                                        availableTranches={availableTranches}\n                                        getAccountBalance={getAccountBalance}\n                                        accountBalanceLow={accountBalanceLow}\n                                        accountInizialized={accountInizialized}\n                                        networkInitialized={networkInitialized}\n                                        selectedToken={this.state.selectedToken}\n                                        connectorName={this.state.connectorName}\n                                        setStrategy={this.setStrategy.bind(this)}\n                                        userRejectedConnect={userRejectedConnect}\n                                        accountBalanceToken={accountBalanceToken}\n                                        initializeContracts={initializeContracts}\n                                        walletProvider={this.state.walletProvider}\n                                        buyModalOpened={this.state.buyModalOpened}\n                                        erc20ForwarderClient={erc20ForwarderClient}\n                                        contractsInitialized={contractsInitialized}\n                                        openBuyModal={this.openBuyModal.bind(this)}\n                                        rejectAccountConnect={rejectAccountConnect}\n                                        handleMenuClick={this.selectTab.bind(this)}\n                                        setConnector={this.setConnector.bind(this)}\n                                        setThemeMode={this.setThemeMode.bind(this)}\n                                        availableTokens={this.state.availableTokens}\n                                        closeBuyModal={this.closeBuyModal.bind(this)}\n                                        setCachedData={this.setCachedData.bind(this)}\n                                        selectedStrategy={this.state.selectedStrategy}\n                                        userRejectedValidation={userRejectedValidation}\n                                        clearCachedData={this.clearCachedData.bind(this)}\n                                        setStrategyToken={this.setStrategyToken.bind(this)}\n                                        accountValidationPending={accountValidationPending}\n                                        availableStrategies={this.state.availableStrategies}\n                                        setCurrentSection={this.setCurrentSection.bind(this)}\n                                        connectAndValidateAccount={connectAndValidateAccount}\n                                        contractMethodSendWrapper={contractMethodSendWrapper}\n                                        setRequiredNetwork={this.setRequiredNetwork.bind(this)}\n                                        initContractCustomProvider={initContractCustomProvider}\n                                        setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                                        availableStrategiesNetworks={this.state.availableStrategiesNetworks}\n                                      />\n                                    </Suspense>\n\n                                }\n                              >\n                              </Route>\n                              {\n                                governanceEnabled && (\n                                  <Route\n                                    path=\"/governance/:section?/:item_id?\"\n                                    render={\n                                      (props) =>\n                                        <Suspense\n                                          fallback={SuspenseLoader}\n                                        >\n                                          <Governance\n                                            {...props}\n                                            web3={web3}\n                                            modals={modals}\n                                            network={network}\n                                            context={context}\n                                            account={account}\n                                            initWeb3={initWeb3}\n                                            biconomy={biconomy}\n                                            isMobile={isMobile}\n                                            simpleID={simpleID}\n                                            isGovernance={true}\n                                            contracts={contracts}\n                                            web3Infura={web3Infura}\n                                            web3Polygon={web3Polygon}\n                                            initAccount={initAccount}\n                                            initSimpleID={initSimpleID}\n                                            initContract={initContract}\n                                            checkNetwork={checkNetwork}\n                                            transactions={transactions}\n                                            buyToken={this.state.buyToken}\n                                            logout={this.logout.bind(this)}\n                                            accountBalance={accountBalance}\n                                            themeMode={this.state.themeMode}\n                                            theme={this.state.selectedTheme}\n                                            validateAccount={validateAccount}\n                                            currentEnv={this.state.currentEnv}\n                                            connecting={this.state.connecting}\n                                            cachedData={this.state.cachedData}\n                                            setToken={this.setToken.bind(this)}\n                                            accountValidated={accountValidated}\n                                            getTokenDecimals={getTokenDecimals}\n                                            rejectValidation={rejectValidation}\n                                            tokenConfig={this.state.tokenConfig}\n                                            contractsNetworks={contractsNetworks}\n                                            getAccountBalance={getAccountBalance}\n                                            accountBalanceLow={accountBalanceLow}\n                                            accountInizialized={accountInizialized}\n                                            networkInitialized={networkInitialized}\n                                            selectedToken={this.state.selectedToken}\n                                            connectorName={this.state.connectorName}\n                                            setStrategy={this.setStrategy.bind(this)}\n                                            userRejectedConnect={userRejectedConnect}\n                                            accountBalanceToken={accountBalanceToken}\n                                            initializeContracts={initializeContracts}\n                                            walletProvider={this.state.walletProvider}\n                                            buyModalOpened={this.state.buyModalOpened}\n                                            contractsInitialized={contractsInitialized}\n                                            openBuyModal={this.openBuyModal.bind(this)}\n                                            rejectAccountConnect={rejectAccountConnect}\n                                            handleMenuClick={this.selectTab.bind(this)}\n                                            setConnector={this.setConnector.bind(this)}\n                                            setThemeMode={this.setThemeMode.bind(this)}\n                                            availableTokens={this.state.availableTokens}\n                                            closeBuyModal={this.closeBuyModal.bind(this)}\n                                            setCachedData={this.setCachedData.bind(this)}\n                                            selectedStrategy={this.state.selectedStrategy}\n                                            userRejectedValidation={userRejectedValidation}\n                                            clearCachedData={this.clearCachedData.bind(this)}\n                                            setStrategyToken={this.setStrategyToken.bind(this)}\n                                            accountValidationPending={accountValidationPending}\n                                            availableStrategies={this.state.availableStrategies}\n                                            setCurrentSection={this.setCurrentSection.bind(this)}\n                                            connectAndValidateAccount={connectAndValidateAccount}\n                                            contractMethodSendWrapper={contractMethodSendWrapper}\n                                            setRequiredNetwork={this.setRequiredNetwork.bind(this)}\n                                            setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                                            availableStrategiesNetworks={this.state.availableStrategiesNetworks}\n                                          />\n                                        </Suspense>\n                                    }\n                                  >\n                                  </Route>\n                                )\n                              }\n                              <Route>\n                                <Header\n                                  modals={modals}\n                                  network={network}\n                                  context={context}\n                                  account={account}\n                                  initWeb3={initWeb3}\n                                  isMobile={isMobile}\n                                  contracts={contracts}\n                                  initAccount={initAccount}\n                                  initContract={initContract}\n                                  buyToken={this.state.buyToken}\n                                  accountBalance={accountBalance}\n                                  logout={this.logout.bind(this)}\n                                  validateAccount={validateAccount}\n                                  connecting={this.state.connecting}\n                                  accountValidated={accountValidated}\n                                  getTokenDecimals={getTokenDecimals}\n                                  rejectValidation={rejectValidation}\n                                  setToken={e => { this.setToken(e) }}\n                                  tokenConfig={this.state.tokenConfig}\n                                  contractsNetworks={contractsNetworks}\n                                  getAccountBalance={getAccountBalance}\n                                  accountBalanceLow={accountBalanceLow}\n                                  networkInitialized={networkInitialized}\n                                  selectedToken={this.state.selectedToken}\n                                  connectorName={this.state.connectorName}\n                                  userRejectedConnect={userRejectedConnect}\n                                  accountBalanceToken={accountBalanceToken}\n                                  walletProvider={this.state.walletProvider}\n                                  buyModalOpened={this.state.buyModalOpened}\n                                  contractsInitialized={contractsInitialized}\n                                  openBuyModal={this.openBuyModal.bind(this)}\n                                  rejectAccountConnect={rejectAccountConnect}\n                                  handleMenuClick={this.selectTab.bind(this)}\n                                  setConnector={this.setConnector.bind(this)}\n                                  availableTokens={this.state.availableTokens}\n                                  closeBuyModal={this.closeBuyModal.bind(this)}\n                                  userRejectedValidation={userRejectedValidation}\n                                  accountValidationPending={accountValidationPending}\n                                  connectAndValidateAccount={connectAndValidateAccount}\n                                  setRequiredNetwork={this.setRequiredNetwork.bind(this)}\n                                  availableStrategiesNetworks={this.state.availableStrategiesNetworks}\n                                />\n\n                                {\n                                  this.state.route === \"onboarding\" && (\n                                    <Web3Debugger\n                                      web3={web3}\n                                      account={account}\n                                      accountBalance={accountBalance}\n                                      accountBalanceToken={accountBalanceToken}\n                                      accountBalanceLow={accountBalanceLow}\n                                      initAccount={initAccount}\n                                      rejectAccountConnect={rejectAccountConnect}\n                                      userRejectedConnect={userRejectedConnect}\n                                      accountValidated={accountValidated}\n                                      accountValidationPending={accountValidationPending}\n                                      rejectValidation={rejectValidation}\n                                      userRejectedValidation={userRejectedValidation}\n                                      validateAccount={validateAccount}\n                                      connectAndValidateAccount={connectAndValidateAccount}\n                                      modals={modals}\n                                      network={network}\n                                      transaction={transaction}\n                                    />\n                                  )\n                                }\n\n                                {\n                                  this.state.route === \"default\" && (\n                                    <Switch>\n                                      <Route exact path=\"/\"\n                                        render={(props) =>\n                                          <Suspense\n                                            fallback={SuspenseLoader}\n                                          >\n                                            <Landing\n                                              {...props}\n                                              web3={web3}\n                                              network={network}\n                                              account={account}\n                                              isMobile={isMobile}\n                                              simpleID={simpleID}\n                                              contracts={contracts}\n                                              initContract={initContract}\n                                              innerWidth={this.state.width}\n                                              logout={this.logout.bind(this)}\n                                              innerHeight={this.state.height}\n                                              accountBalance={accountBalance}\n                                              themeMode={this.state.themeMode}\n                                              theme={this.state.selectedTheme}\n                                              setToken={e => {this.setToken(e)}}\n                                              cachedData={this.state.cachedData}\n                                              currentEnv={this.state.currentEnv}\n                                              connecting={this.state.connecting}\n                                              selectedTab={this.state.selectedTab}\n                                              tokenConfig={this.state.tokenConfig}\n                                              accountBalanceLow={accountBalanceLow}\n                                              getAccountBalance={getAccountBalance}\n                                              availableTranches={availableTranches}\n                                              contractsNetworks={contractsNetworks}\n                                              networkInitialized={networkInitialized}\n                                              customAddress={this.state.customAddress}\n                                              selectedToken={this.state.selectedToken}\n                                              accountBalanceToken={accountBalanceToken}\n                                              closeToastMessage={this.closeToastMessage}\n                                              contractsInitialized={contractsInitialized}\n                                              openBuyModal={this.openBuyModal.bind(this)}\n                                              setThemeMode={this.setThemeMode.bind(this)}\n                                              processCustomParam={this.processCustomParam}\n                                              availableTokens={this.state.availableTokens}\n                                              setCachedData={this.setCachedData.bind(this)}\n                                              updateSelectedTab={this.selectTab.bind(this)}\n                                              toastMessageProps={this.state.toastMessageProps}\n                                              clearCachedData={this.clearCachedData.bind(this)}\n                                              availableStrategies={this.state.availableStrategies}\n                                              setCurrentSection={this.setCurrentSection.bind(this)}\n                                              connectAndValidateAccount={connectAndValidateAccount}\n                                              setRequiredNetwork={this.setRequiredNetwork.bind(this)}\n                                              availableStrategiesNetworks={this.state.availableStrategiesNetworks}\n                                            />\n                                            <CookieConsent\n                                              expires={365}\n                                              buttonText={\"Ok\"}\n                                              location={\"bottom\"}\n                                              acceptOnScroll={true}\n                                              cookieName={\"cookieAccepted\"}\n                                              acceptOnScrollPercentage={5}\n                                              style={{ background: \"rgba(255,255,255,0.95)\", zIndex: '9999999' }}\n                                              buttonStyle={{ display: isMobile ? \"block\" : \"none\", backgroundColor: '#0036ff', color: 'white', marginTop: isMobile ? \"0px\" : \"15px\" }}\n                                            >\n                                              <Flex flexDirection={'row'} alignItems={['flex-start', 'center']} justifyContent={'flex-start'} maxHeight={['150px', 'initial']} style={isMobile ? { overflowY: 'scroll' } : null}>\n                                                <Image display={['none', 'block']} src={'images/cookie.svg'} width={'42px'} height={'42px'} />\n                                                <Text pl={[0, 3]} color={'dark-gray'} fontSize={1} textAlign={'justify'}>\n                                                  This website or its third-party tools process personal data (e.g. browsing data or IP addresses) and use cookies or other identifiers, which are necessary for its functioning and required to achieve the purposes illustrated in the cookie policy. To learn more, please refer to the <Link href={'https://www.iubenda.com/privacy-policy/61211749/cookie-policy'} target={'_blank'} rel=\"nofollow noopener noreferrer\" hoverColor={'blue'}>cookie policy</Link>.\n                                                  You accept the use of cookies or other identifiers by closing or dismissing this notice, by scrolling this page, by clicking a link or button or by continuing to browse otherwise.\n                                              </Text>\n                                              </Flex>\n                                            </CookieConsent>\n                                          </Suspense>\n                                        }\n                                      ></Route>\n                                      <Route exact path=\"/terms-of-service\">\n                                        <Tos />\n                                      </Route>\n                                      <Route>\n                                        <PageNotFound />\n                                      </Route>\n                                    </Switch>\n                                  )\n                                }\n                              </Route>\n                            </Switch>\n                            <TransactionToastUtil\n                              transactions={transactions}\n                              themeMode={this.state.themeMode}\n                            />\n                          </Box>\n                        )\n                      }}\n                    </RimbleWeb3.Consumer>\n                  </RimbleWeb3>\n                );\n              }}\n            </Web3Consumer>\n          </Web3Provider>\n        </ThemeProvider>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport * as Sentry from '@sentry/browser';\nimport App from './App/App';\nimport * as serviceWorker from './serviceWorker';\n\nif (window.location.hostname !== 'localhost') {\n  Sentry.init({\n    dsn: \"https://56f5c0bce273442390d7f25698fefe53@sentry.io/1547544\",\n    beforeSend(event, hint) {\n      let output = event;\n      const error = hint.originalException;\n      if (error && error.message){\n        if (error.message.match(/Failed to subscribe to new newBlockHeaders/i)){\n          output = false;\n        }\n      }\n      return output;\n    }\n  });\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__38P6I\",\"link\":\"Footer_link__13yZU\"};","import React from \"react\";\nimport styles from './ModalCard.module.scss';\nimport { Box, Flex, Card, Button, Heading, Image } from \"rimble-ui\";\n\nconst ModalCard = ({children, closeFunc, ...props}) => (\n  <Card\n    p={0}\n    border={0}\n    mx={'auto'}\n    my={'auto'}\n    height={'auto'}\n    borderRadius={2}\n    overflow={'auto'}\n    width={ props.width ? props.width : 'auto' }\n    minWidth={ props.minWidth ? props.minWidth : 'auto' }\n    maxWidth={ props.maxWidth ? props.maxWidth : '960px'}\n  >\n    <Box\n      top={'0'}\n      zIndex={1}\n      right={'0'}\n      position={\"absolute\"}\n    >\n      <Button.Text\n        icononly\n        icon={\"Close\"}\n        size={'2.5em'}\n        onClick={closeFunc}\n        mainColor={ props.mainColor ? props.mainColor :  'copyColor' }\n      />\n    </Box>\n    <Flex\n      height={'100%'}\n      flex={'1 1 auto'}\n      flexDirection={'column'}\n      className={[ props.bgLayer ? styles.bg : null]}\n      style={{\n        overflow: 'auto',\n        backgroundRepeat:'no-repeat',\n        backgroundPosition:'bottom right',\n        backgroundSize: !props.background ? '65%' : null,\n        backgroundImage:'url(/images/bg-bottom-right.png)',\n        background: props.background ? props.background : null,\n      }}\n      backgroundColor={'cardBg'}\n    >\n      {children}\n    </Flex>\n  </Card>\n);\n\nModalCard.Header = (props) => (\n  <Box\n    width={1}\n    mb={[2,3]}\n    pb={[2,2]}\n    pt={ props.pt ? props.pt : (props.icon ? 3 : [5,3]) }\n    borderBottom={ props.borderBottom ? props.borderBottom : '1px solid #eee' }\n  >\n    <Flex\n      px={[1,2]}\n      alignItems={'center'}\n      flexDirection={'column'}\n    >\n      { props.icon && <Image width={ props.iconHeight ? props.iconHeight : '50px' } src={props.icon} /> }\n      <Heading.h3\n        mb={0}\n        fontSize={[3,3]}\n        color={'copyColor'}\n        textAlign={'center'}\n        mt={props.icon ? 2 : 0}\n        fontFamily={'sansSerif'}\n        {...props.titleProps}\n      >\n        {props.title}\n      </Heading.h3>\n      {\n        props.subtitle &&\n        <Heading.h4\n          pt={[1,2]}\n          fontWeight={2}\n          fontSize={[2,2]}\n          lineHeight={1.5}\n          color={'dark-gray'}\n          textAlign={'center'}\n          {...props.subtitleProps}\n        >\n          {props.subtitle}\n        </Heading.h4>\n      }\n      {\n        props.subtitle2 &&\n        <Heading.h4 pt={0} fontSize={[2,2]} textAlign={'center'} fontWeight={2} lineHeight={1.5} color={'dark-gray'}>\n          {props.subtitle2}\n        </Heading.h4>\n      }\n    </Flex>\n  </Box>\n);\n\nModalCard.Body = ({children, ...props}) => (\n  <Box\n    width={1}\n    px={[3,5]}\n    {...props}\n  >\n    {children}\n  </Box>\n);\n/*\nModalCard.Body = ({children, ...props}) => (\n  <Flex flex={'1 1 auto'} style={{ overflow: 'auto' }} >\n    <Box width={1} px={[4,5]} py={[3,4]} m={'auto'}>\n      {children}\n    </Box>\n  </Flex>\n);\n*/\n\nModalCard.Footer = ({children, ...props}) => (\n  <Flex\n    flex={'1 0 auto'}\n    justifyContent={'center'}\n    borderTop={1}\n    borderColor={'light-gray'}\n    px={[0,3]}\n    py={3}\n  >\n    {children}\n  </Flex>\n);\n\n\nModalCard.BackButton = ({onClick, ...props}) => (\n  <Box\n    position={'absolute'}\n    top={'0'}\n    left={'0'}\n    m={3}\n    bg={'white'}\n  >\n    <Button.Outline\n      onClick={onClick}\n      icononly\n      icon={'ArrowBack'}\n      size={'2.5em'}\n    />\n  </Box>\n);\n\nexport default ModalCard;\n","import { Flex, Icon } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass VariationNumber extends Component {\n\n  render() {\n\n    const IconDirection = () => (\n      <Icon\n        color={ this.props.direction === 'up' ?  '#6dd400' : '#f7b500' }\n        name={ this.props.direction === 'up' ?  'ArrowDropUp' : 'ArrowDropDown' }\n        size={ this.props.iconSize ? this.props.iconSize : ( this.props.isMobile ? '1.4em' : '2em') }\n      />\n    );\n\n    return (\n      <Flex\n        alignItems={'center'}\n        flexDirection={'row'}\n        width={ this.props.width ? this.props.width : 1 }\n        justifyContent={this.props.justifyContent ? this.props.justifyContent : 'center'}\n      >\n        {\n          (!this.props.iconPos || this.props.iconPos==='left') &&\n            <IconDirection />\n        }\n        {this.props.children}\n        {\n          this.props.iconPos==='right' &&\n            <IconDirection />\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default VariationNumber;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchInput\":\"GenericSelector_searchInput__vl2hJ\",\"genericSelector\":\"GenericSelector_genericSelector__1Nqkd\",\"dark\":\"GenericSelector_dark__zCOnP\",\"searchInputHidden\":\"GenericSelector_searchInputHidden__2Zm1B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loading-dots\":\"LoadingSpinner_loading-dots__2-3YZ\",\"loading-dots--dot\":\"LoadingSpinner_loading-dots--dot__2Y25C\",\"dot-keyframes\":\"LoadingSpinner_dot-keyframes__3SU_M\"};","import { tint, shade, readableColor } from 'polished';\n\n// rimble base colors\nconst baseColors = {\n  black: '#000e1a',\n  white: '#FFF',\n  blue: '#0036ff',\n  darkBlue: '#0028be',\n  green: '#28C081',\n  yellow: '#FD9D28',\n  red: '#DC2C10',\n  blurple: '#4E3FCE',\n  consensysblue: '#3259D6',\n};\n\n// rimble palette\nconst colors = {\n  blurple: {\n    base: baseColors.blurple,\n    text: readableColor(baseColors.blurple),\n    light: [null, tint(0.2, baseColors.blurple)],\n    dark: [null, shade(0.2, baseColors.blurple)],\n  },\n  blue: {\n    base: baseColors.blue,\n    text: readableColor(baseColors.blue),\n    light: [null, tint(0.9, baseColors.blue)],\n    dark: [null, shade(0.4, baseColors.blue)],\n  },\n  green: {\n    base: baseColors.green,\n    text: baseColors.white,\n    light: [null, tint(0.9, baseColors.green)],\n    dark: [null, shade(0.4, baseColors.green)],\n  },\n  yellow: {\n    base: baseColors.yellow,\n    text: readableColor(baseColors.yellow),\n    light: [null, tint(0.9, baseColors.yellow)],\n    dark: [null, shade(0.4, baseColors.yellow)],\n  },\n  red: {\n    base: baseColors.red,\n    text: readableColor(baseColors.red),\n    light: [null, tint(0.9, baseColors.red)],\n    dark: [null, shade(0.4, baseColors.red)],\n  },\n};\n\nconst blurple = colors.blurple;\nconst blue = colors.blue;\nconst green = colors.green;\nconst yellow = colors.yellow;\nconst red = colors.red;\n\nexport { blurple };\nexport { blue };\nexport { green };\nexport { yellow };\nexport { red };\nexport default baseColors;\n","import React, { Component } from 'react';\nimport { Flex, Loader, Text } from \"rimble-ui\";\n\nclass FlexLoader extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        justifyContent={'center'}\n        {...this.props.flexProps}\n      >\n        <Loader {...this.props.loaderProps} />\n        {\n          this.props.text &&\n            <Text {...this.props.textProps}>{this.props.text}</Text>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default FlexLoader;\n","import {\n  Link as RouterLink,\n} from \"react-router-dom\";\nimport ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport styles from './Footer.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Heading, Image, Link } from 'rimble-ui';\n\nclass Footer extends Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  render() {\n    const currYear = new Date().getFullYear();\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n    const columnWidth = governanceEnabled ? 1/4 : 1/3;\n    return (\n      <Flex\n        pl={0}\n        id={\"footer\"}\n        alignItems={'center'}\n        flexDirection={'column'}\n        className={styles.footer}\n        backgroundColor={'white'}\n        justifyContent={'flex-start'}\n      >\n        <Flex\n          width={1}\n          px={[3,6]}\n          justifyContent={'center'}\n        >\n          <Flex\n            width={1}\n            height={['auto','100%']}\n            alignItems={'flex-start'}\n            maxWidth={['35em','70em']}\n            justifyContent={'flex-start'}\n            flexDirection={['column','row']}\n          >\n            <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Resources\n              </Heading.h3>\n              <Flex width={1} flexDirection={'column'}>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://developers.idle.finance'}\n                >\n                  <span role=\"img\" aria-label=\"documentation\">📚</span> Documentation\n                </ExtLink>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://idlelabs.notion.site/Idle-Brand-Assets-fd63e4161cb64c999531646c7549bc4b'}\n                >\n                  <span role=\"img\" aria-label=\"brand-assets\">🎨</span> Brand Assets\n                </ExtLink>\n                <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                  <RouterLink\n                    color={'blue'}\n                    to=\"/terms-of-service\"\n                    className={styles.link}\n                  >\n                    <Text\n                      fontWeight={3}\n                      color={'blue'}\n                      fontSize={[3,2]}\n                      hoverColor={'blue'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                    >\n                      <span role=\"img\" aria-label=\"terms-of-service\">📑</span> Terms of Service\n                    </Text>\n                  </RouterLink>\n                </Flex>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://www.iubenda.com/privacy-policy/61211749'}\n                >\n                  <span role=\"img\" aria-label=\"privacy-policy\">🕵️‍♂️</span> Privacy Policy\n                </ExtLink>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://www.iubenda.com/privacy-policy/61211749/cookie-policy'}\n                >\n                  <span role=\"img\" aria-label=\"cookie-policy\">🍪</span> Cookie Policy\n                </ExtLink>\n              </Flex>\n            </Flex>\n            {\n              governanceEnabled && \n                <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n                  <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                    Governance\n                  </Heading.h3>\n                  <Flex width={1} flexDirection={'column'}>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        to={\"/governance\"}\n                        className={styles.link}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-overview\">🏛</span> Overview\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        className={styles.link}\n                        to={\"/governance/proposals\"}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-proposals\">💡</span> Proposals\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        className={styles.link}\n                        to={\"/governance/leaderboard\"}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-leaderboard\">📋</span> Leaderboard\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <ExtLink href=\"https://gov.idle.finance/\">\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-forum\">🤝</span> Forum\n                        </Text>\n                      </ExtLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <ExtLink href=\"https://www.notion.so/idlelabs/ffe8115b7b53489ab0a7f84e656e4bb0?v=916250f54ff24daabad72cf095fd6d88\">\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-forum\">🌎</span> Team\n                        </Text>\n                      </ExtLink>\n                    </Flex>\n                  </Flex>\n                </Flex>\n            }\n            <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Start a Conversation\n              </Heading.h3>\n              <Link textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} color={'blue'} hoverColor={'blue'}>\n                <span role=\"img\" aria-label=\"email\">✉️</span> info@idle.finance\n              </Link>\n            </Flex>\n            <Flex width={[1,columnWidth]} flexDirection={'column'}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Explore\n              </Heading.h3>\n              <Flex flexDirection={'row'} justifyContent={['space-evenly','flex-start']}>\n                <ExtLink href=\"https://twitter.com/idlefinance\">\n                  <Image src=\"images/social/twitter.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://t.me/idlefinance\">\n                  <Image src=\"images/social/telegram.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://discord.gg/mpySAJp\">\n                  <Image src=\"images/social/discord.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://medium.com/@idlefinance\">\n                  <Image src=\"images/social/medium.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://github.com/Idle-Labs/\">\n                  <Image src=\"images/social/github.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://www.linkedin.com/company/idlefinance\">\n                  <Image src=\"images/social/linkedin.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://defipulse.com/defi-list\">\n                  <Image src=\"images/social/defi-pulse.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n              </Flex>\n            </Flex>\n          </Flex>\n        </Flex>\n        <Flex\n          width={1}\n          height={['auto','100%']}\n          flexDirection={'column'}\n          alignItems={['center','flex-end']}\n          justifyContent={['center','flex-end']}\n        >\n          <Flex\n            p={2}\n            width={1}\n            alignItems={'center'}\n            justifyContent={'center'}\n            backgroundColor={'dark-blue'}\n            flexDirection={['column','row']}\n          >\n            <Text\n              color={'white'}\n              textAlign={['center','flex-end']}\n            >\n              &copy; {currYear} - Idle Labs Inc.\n            </Text>\n            <RouterLink\n              color={'blue'}\n              to={'/terms-of-service'}\n              style={{textDecoration:'none'}}\n            >\n              <Text\n                pl={2}\n                color={'#0df'}\n                textAlign={['center','flex-end']}\n              >\n                Terms of Service\n              </Text>\n            </RouterLink>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default Footer;\n","import React, { Component } from 'react';\nimport styles from './TableCellHeader.module.scss';\nimport { Flex, Heading, Icon, Link, Tooltip } from \"rimble-ui\";\n\nclass TableCellHeader extends Component {\n  render() {\n\n    const ColTitle = (props) => (\n      <Heading.h4\n        fontWeight={[3,4]}\n        color={'cellTitle'}\n        style={{\n          width:'100%',\n          whiteSpace:'nowrap'\n        }}\n        fontSize={['10px',3]}\n        lineHeight={'initial'}\n        {...props}\n      >\n        {props.children}\n      </Heading.h4>\n    );\n\n    return (\n      <Flex\n        width={this.props.width}\n      >\n        {\n          (this.props.desc && this.props.desc.length>1) ? (\n            <Flex\n              alignItems={'center'}\n            >\n              <ColTitle\n                {...this.props}\n              />\n              <Link\n                style={{\n                  cursor:'pointer'\n                }}\n                onClick={ e => this.props.openTooltipModal(this.props.title,this.props.desc) }\n              >\n                <Tooltip\n                  placement={'top'}\n                  message={'Click to read the description'}\n                >\n                  <Icon\n                    ml={1}\n                    name={\"Info\"}\n                    color={'cellTitle'}\n                    className={styles.tooltip}\n                    size={ this.props.isMobile ? '1em' : '1.2em'}\n                  />\n                </Tooltip>\n              </Link>\n            </Flex>\n          ) : (\n            <ColTitle\n              {...this.props}\n            />\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TableCellHeader;\n","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass ChartCustomTooltip extends Component {\n\n  async componentWillMount(){\n\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    \n  }\n\n  render() {\n    return (\n      <DashboardCard\n        key={this.props.point.id}\n        cardProps={{\n          py:2,\n          px:3,\n          width:1,\n          left: this.props.point.data.itemPos && this.props.point.data.itemPos>50 ? '-110%' : '0'\n        }}\n      >\n        <Flex\n          width={1}\n          flexDirection={'column'}\n        >\n          {\n            this.props.point.data.xFormatted && \n              <Text\n                mb={2}\n                fontSize={1}\n                fontWeight={3}\n                color={'cellText'}\n                textAlign={'left'}\n              >\n                {this.props.point.data.xFormatted}\n              </Text>\n          }\n          {this.props.children}\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default ChartCustomTooltip;\n","import React, { Component } from 'react';\nimport {\n  Button,\n  Flex,\n  Box,\n  Text\n} from \"rimble-ui\";\nimport styles from './TwitterShareButton.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TwitterShareButton extends Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  share = () => {\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Share',\n      eventAction: 'twitter',\n      eventLabel: this.props.parent\n    });\n\n    const w = Math.min(window.innerWidth,600);\n    const h = 350;\n    const x = (window.innerWidth-w)/2;\n    const y = 150;\n    window.open(`https://twitter.com/intent/tweet?text=${this.props.tweet}`,\"_blank\",`toolbar=yes,scrollbars=no,resizable=no,top=${y},left=${x},width=${w},height=${h}`);\n  }\n\n  render() {\n    return (\n        <Button\n          borderRadius={1}\n          mainColor={'#2aa6f2'}\n          contrastColor={'white'}\n          onClick={ e => { this.share() } }\n        >\n          <Flex flexDirection={'row'} alignItems={'center'} justifyContent={'center'}>\n            <Box className={styles.twitterIcon} />\n            <Text color={'white'} fontWeight={3} ml={2}>{ this.props.text ? this.props.text : 'Tweet' }</Text>\n          </Flex>\n        </Button>\n    );\n  }\n}\n\nexport default TwitterShareButton;\n","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Link,\n  Flex\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport TwitterShareButton from '../../TwitterShareButton/TwitterShareButton.js';\nimport Confetti from 'react-confetti/dist/react-confetti';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\n\nclass ShareModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  closeModal = async (action) => {\n    const globalConfigs = this.functionsUtil.getGlobalConfigs();\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Share',\n        eventAction: action,\n        eventLabel: 'ShareModal'\n      });\n      this.props.closeModal();\n    } else {\n      this.props.closeModal();\n    }\n  }\n\n  render() {\n    const tweet = window.escape(this.props.tweet);\n    const customText = {__html: this.props.text};\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          {\n            this.props.confettiEnabled &&\n            <Confetti\n              style={{ position: 'fixed','zIndex':9999 }}\n              run={true}\n              recycle={true}\n              width={window.innerWidth}\n              height={window.innerHeight}\n            />\n          }\n          <ModalCard.Header title={this.props.title} icon={this.props.icon}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={3} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text color={'dark-gray'} textAlign={'center'} fontSize={3} mb={2} dangerouslySetInnerHTML={customText}></Text>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <TwitterShareButton tweet={tweet} text={'Share now'} parent={'ShareModal'} />\n              <Link mt={2} onClick={ e => this.closeModal('continue_without_sharing') } hoverColor={'blue'}>continue without sharing</Link>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ShareModal;","import React, { Component } from 'react';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Text, Icon, Image, Button, Link, Flex } from \"rimble-ui\";\n\nclass CustomField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    \n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText'\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    let CustomComponent = null;\n    let componentHasChildren = false;\n    const fieldType = fieldInfo.type;\n    const fieldPath = fieldInfo.path;\n    let customValue = fieldPath ? this.functionsUtil.getArrayPath(fieldPath,this.props.row) : null;\n\n    switch (fieldType){\n      case 'image':\n        CustomComponent = Image;\n        fieldProps.src = customValue;\n      break;\n      case 'number':\n        customValue = this.functionsUtil.BNify(customValue).toString();\n        CustomComponent = SmartNumber;\n        fieldProps.number = customValue;\n      break;\n      case 'link':\n        CustomComponent = Link;\n      break;\n      case 'icon':\n        CustomComponent = Icon;\n        fieldProps.name = customValue;\n      break;\n      case 'bgIcon':\n        CustomComponent = (props) => (\n          <Flex\n            p={'5px'}\n            borderRadius={'50%'}\n            alignItems={'center'}\n            justifyContent={'center'}\n            backgroundColor={props.bgColor}\n          >\n            <Icon\n              align={'center'}\n              name={customValue}\n              color={props.color}\n              size={this.props.isMobile ? '1em' : '1.4em'}\n            />\n          </Flex>\n        );\n        fieldProps.name = customValue;\n      break;\n      case 'button':\n        CustomComponent = Button;\n        componentHasChildren = true;\n        customValue = fieldInfo.label || fieldProps.label;\n        fieldProps.onClick=() => fieldProps.handleClick(this.props)\n      break;\n      default:\n        CustomComponent = Text;\n        componentHasChildren = true;\n      break;\n    }\n\n    if (!customValue){\n      return null;\n    }\n\n    // Add custom field extra props\n    if (fieldPath){\n      const customFieldName = Object.values(fieldPath).pop();\n      if (this.props.row[`${customFieldName}Props`]){\n        const customFieldProps = this.props.row[`${customFieldName}Props`];\n        // Replace props\n        if (customFieldProps && Object.keys(customFieldProps).length){\n          Object.keys(customFieldProps).forEach(p => {\n            fieldProps[p] = customFieldProps[p];\n          });\n        }\n      }\n    }\n\n    return CustomComponent ? (componentHasChildren ? (<CustomComponent {...fieldProps}>{customValue}</CustomComponent>) : (<CustomComponent {...fieldProps} />) ) : null;\n  }\n}\n\nexport default CustomField;","import { Heading } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass Title extends Component {\n  render() {\n    const props = {\n      fontWeight:4,\n      fontSize:[4,6],\n      color:'copyColor',\n      textAlign:'center',\n      lineHeight:'initial',\n    };\n\n    // Replace props\n    if (this.props && Object.keys(this.props).length){\n      Object.keys(this.props).forEach(p => {\n        props[p] = this.props[p];\n      });\n    }\n\n    const HeadingComponent = this.props.component ? this.props.component : Heading.h1;\n\n    return (\n      <HeadingComponent\n        {...props}\n      >\n        {this.props.children}\n      </HeadingComponent>\n    );\n  }\n}\n\nexport default Title;\n","import React, { Component } from \"react\";\nimport { Button, Image, Flex, Text, Icon, Box } from 'rimble-ui';\n\nclass ImageButton extends Component {\n\n  render() {\n\n    const isMobile = typeof this.props.isMobile !== 'undefined' ? this.props.isMobile : false;\n    const image = this.props.imageSrc ? (<Image width={'auto'} src={this.props.imageSrc} {...this.props.imageProps} />) : ( this.props.iconName ? (<Icon name={this.props.iconName} {...this.props.iconProps} />) : null );\n    const caption = (<Text textAlign={ isMobile ? 'left' : 'center'} fontSize={2} fontWeight={3} color={'dark-gray'}>{this.props.caption}</Text>);\n\n    return (\n        <Button\n          color={'white'}\n          borderRadius={3}\n          px={ isMobile ? [3,4] : 4 }\n          py={ isMobile ? 0 : [3,4] }\n          my={ isMobile ? 2 : [2,2] }\n          mx={ isMobile ? 0 : [0,2] }\n          onClick={ this.props.handleClick }\n          height={ isMobile ? '58px' : ['150px','170px']}\n          mainColor={this.props.isActive ? 'cardBgHover' : 'cardBg'}\n          contrastColor={this.props.isActive ? 'cardBgHover' : 'cardBg'}\n          width={this.props.width ? this.props.width : (isMobile ? '100%' : ['150px','170px'])}\n          style={this.props.buttonStyle ? this.props.buttonStyle : (isMobile ? {justifyContent:'flex-start'} : null)}\n          {...this.props.buttonProps}\n        >\n          <>\n            {\n              this.props.badge && (\n                <Box\n                  position={'absolute'}\n                  borderRadius={'16px'}\n                  backgroundColor={ this.props.badge.bgColor ? this.props.badge.bgColor : 'blue' }\n                  style={ isMobile ? {right:'-25px',top:'-17px'} : {right:'-25px',top:'-25px'} }\n                  px={['5px','7px']}\n                  py={['1px','3px']}\n                >\n                  <Text\n                    fontWeight={3}\n                    fontSize={'10px'}\n                    color={ this.props.badge.color ? this.props.badge.color : '#fff' }\n                  >\n                  {this.props.badge.text}\n                  </Text>\n                </Box>\n              )\n            }\n            <Flex flexDirection={ isMobile ? 'row' : 'column'} justifyContent={ isMobile ? 'flex-start' : 'center'} alignItems={'center'}>\n              <Flex width={ isMobile ? '45px' : 1 } mr={ isMobile ? 2 : 0 } justifyContent={ isMobile ? 'flex-start' : 'center' }>\n                { this.props.captionPos && this.props.captionPos === 'top' ? caption : image }\n              </Flex>\n              <Flex width={ isMobile ? 'auto' : 1 } flexDirection={'column'} justifyContent={ isMobile ? 'flex-start' : 'center' } >\n                { this.props.captionPos && this.props.captionPos === 'top' ? image : caption }\n                {\n                  this.props.subcaption && this.props.subcaption.split('\\n').map((v,i) => {\n                    // Smaller caption for second line\n                    if (i){\n                      v = (<small>{v}</small>);\n                    }\n                    return (\n                      <Text key={`subcaption_${i}`} lineHeight={'1.3'} textAlign={ isMobile ? 'left' : 'center'} color={'darkGray'} fontWeight={1} fontSize={1}>{v}</Text>\n                    );\n                  })\n                }\n              </Flex>\n            </Flex>\n          </>\n        </Button>\n    );\n  }\n}\nexport default ImageButton;\n","import { Button } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass RoundButton extends Component {\n  render() {\n    const buttonProps = Object.assign({\n      width:1,\n      fontWeight:3,\n      height:'45px',\n      fontSize:[2,3],\n      boxShadow:null,\n      borderRadius:4,\n      mainColor:'blue'\n    },this.props.buttonProps);\n\n    return (\n       <Button\n        {...buttonProps}\n        onClick={this.props.handleClick}\n       >\n        {this.props.children}\n       </Button>\n    );\n  }\n}\n\nexport default RoundButton;\n","import { Link } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass ExtLink extends Component {\n\n  render() {\n    return (\n      <Link\n        color={'link'}\n        target={'_blank'}\n        rel={'nofollow noopener noreferrer'}\n        {...this.props}\n      >\n        {this.props.children}\n      </Link>\n    );\n  }\n}\n\nexport default ExtLink;\n","// import { Line } from '@nivo/line';\nimport CountUp from 'react-countup';\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport CustomField from '../CustomField/CustomField';\n// import SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n// import GenericChart from '../GenericChart/GenericChart';\n// import CustomTooltip from '../CustomTooltip/CustomTooltip';\nimport { Image, Text, Loader, Button, Flex, Icon } from \"rimble-ui\";\n// import VariationNumber from '../VariationNumber/VariationNumber';\n// import AllocationChart from '../AllocationChart/AllocationChart';\n// import CustomTooltipRow from '../CustomTooltip/CustomTooltipRow';\n\nclass TrancheField extends Component {\n\n  state = {\n    ready:false\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n    // console.log('componentDidMount',this.props.protocol,this.props.token,this.props.tranche);\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const tokenChanged = prevProps.token !== this.props.token;\n    const accountChanged = prevProps.account !== this.props.account;\n    const trancheChanged = prevProps.tranche !== this.props.tranche;\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const protocolChanged = prevProps.protocol !== this.props.protocol;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    const contractsInitialized = !prevProps.contractsInitialized && this.props.contractsInitialized;\n    const requiredNetworkChanged = (!prevProps.network && this.props.network) || (prevProps.network && this.props.network && JSON.stringify(prevProps.network.required) !== JSON.stringify(this.props.network.required));\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (fieldChanged || tokenChanged || protocolChanged || trancheChanged || accountChanged || transactionsChanged || contractsInitialized || requiredNetworkChanged){\n      // console.log('componentDidUpdate-1',fieldChanged,tokenChanged,protocolChanged,trancheChanged,accountChanged,transactionsChanged,(contractsInitialized && !this.state.ready));\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.loadField();\n      });\n    } else if (mobileChanged || themeModeChanged){\n      // console.log('componentDidUpdate-2',mobileChanged,themeModeChanged);\n      const oldState = Object.assign({},this.state);\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  loadField = async(fieldName=null) => {\n\n    if (this.componentUnmounted || !this.props.protocol || !this.props.token || !this.props.tokenConfig || !this.props.contractsInitialized){\n      return false;\n    }\n\n    const setState = fieldName === null;\n    const fieldInfo = this.props.fieldInfo;\n    if (!fieldName){\n      fieldName = fieldInfo.name;\n    }\n\n    const fieldProps = fieldInfo.props;\n    const addGovTokens = typeof this.props.addGovTokens !== 'undefined' ? this.props.addGovTokens : true;\n    const formatValue = typeof this.props.formatValue !== 'undefined' ? this.props.formatValue : true;\n    const addTokenName = typeof this.props.addTokenName !== 'undefined' ? this.props.addTokenName : true;\n\n    let output = null;\n    if (this.props.token){\n      switch (fieldName){\n        default:\n          output = await this.functionsUtil.loadTrancheField(fieldName,fieldProps,this.props.protocol,this.props.token,this.props.tranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account,addGovTokens,formatValue,addTokenName);\n          if (output && setState){\n            this.setStateSafe({\n              ready:true,\n              [fieldName]:output\n            });\n          }\n        break;\n      }\n    }\n\n    return output;\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n    let output = null;\n\n    const showLoader = fieldInfo.showLoader === undefined || fieldInfo.showLoader;\n    const loader = showLoader ? (<Loader size=\"20px\" />) : null;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    // const tokenName = this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token,'label']) || this.functionsUtil.capitalize(this.props.token);\n\n    // const tokenConfig = this.props.tokenConfig;// || this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token]);\n    const maxPrecision = fieldProps && fieldProps.maxPrecision ? fieldProps.maxPrecision : 5;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    const minPrecision = fieldProps && fieldProps.minPrecision ? fieldProps.minPrecision : ( this.props.isMobile ? 3 : 4 );\n\n    // console.log('TrancheField',fieldInfo.name,fieldProps);\n    const flexProps = fieldProps.flexProps;\n    delete fieldProps.flexProps;\n\n    switch (fieldInfo.name){\n      case 'protocolIcon':\n        output = (\n          <Image src={`images/protocols/${this.props.protocol}.svg`} {...fieldProps} />\n        );\n      break;\n      case 'trancheTypeIcon':\n        const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',this.props.tranche]);\n        output = (\n          <Flex\n            p={'6px'}\n            borderRadius={'50%'}\n            alignItems={'center'}\n            justifyContent={'center'}\n            backgroundColor={`rgba(${trancheDetails.color.rgb.join(',')},0.2)`}\n            {...flexProps}\n          >\n            <Icon\n              {...fieldProps}\n              align={'center'}\n              name={trancheDetails.icon}\n              color={trancheDetails.color.hex}\n            />\n          </Flex>\n        );\n      break;\n      case 'tokenIcon':\n        output = (\n          <Image src={`images/tokens/${this.props.token}.svg`} {...fieldProps} />\n        );\n      break;\n      case 'button':\n        const buttonLabel = typeof fieldInfo.label === 'function' ? fieldInfo.label(this.props) : fieldInfo.label;\n        output = (\n          <Button {...fieldProps} onClick={() => fieldProps.handleClick(this.props) }>{buttonLabel}</Button>\n        );\n      break;\n      case 'custom':\n        output = (\n          <CustomField\n            row={this.props}\n            fieldInfo={fieldInfo}\n          />\n        );\n      break;\n      case 'feesCounter':\n        output = this.state.ready && this.state.feesCounter.feesStart && this.state.feesCounter.feesEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.feesCounter.feesEnd)}\n            start={parseFloat(this.state.feesCounter.feesStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounter':\n        output = this.state.ready && this.state.earningsCounter && this.state.earningsCounter.earningsStart && this.state.earningsCounter.earningsEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsCounter.earningsEnd)}\n            start={parseFloat(this.state.earningsCounter.earningsStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'govTokens':\n      case 'autoFarming':\n      case 'stakingRewards':\n        output = this.state[fieldInfo.name] && Object.keys(this.state[fieldInfo.name]).length>0 ? (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'flex-start'}\n            {...fieldInfo.parentProps}\n          >\n            {\n              Object.values(this.state[fieldInfo.name]).map( (govTokenConfig,govTokenIndex) => (\n                <AssetField\n                  token={govTokenConfig.token}\n                  tokenConfig={govTokenConfig}\n                  key={`asset_${govTokenIndex}`}\n                  fieldInfo={{\n                    name:'iconTooltip',\n                    tooltipProps:{\n                      message:`${govTokenConfig.token}`+(this.state.getGovTokensDistributionSpeed && this.state.getGovTokensDistributionSpeed[govTokenConfig.token] ? `: ${this.state.getGovTokensDistributionSpeed[govTokenConfig.token].toFixed(decimals)}/${govTokenConfig.distributionFrequency} (for the whole pool)` : '')\n                    },\n                    props:{\n                      borderRadius:'50%',\n                      position:'relative',\n                      height:['1.4em','2em'],\n                      ml:govTokenIndex ? '-10px' : 0,\n                      zIndex:Object.values(this.state[fieldInfo.name]).length-govTokenIndex,\n                      boxShadow:['1px 1px 1px 0px rgba(0,0,0,0.1)','1px 2px 3px 0px rgba(0,0,0,0.1)'],\n                    }\n                  }}\n                />\n              ))\n            }\n          </Flex>\n        ) : this.state[fieldInfo.name] ? (\n          <Text {...fieldProps}>-</Text>\n        ) : loader\n      break;\n      default:\n        let formattedValue = this.state[fieldInfo.name];\n        if (this.state[fieldInfo.name] && this.state[fieldInfo.name]._isBigNumber){\n          formattedValue = this.state[fieldInfo.name].toFixed(decimals);\n        }\n        output = this.state[fieldInfo.name] ? (\n          <Text {...fieldProps} dangerouslySetInnerHTML={{__html:formattedValue}}></Text>\n        ) : loader\n      break;\n    }\n    return output;\n  }\n}\n\nexport default TrancheField;\n","import { Line } from '@nivo/line';\nimport CountUp from 'react-countup';\nimport React, { Component } from 'react';\nimport { linearGradientDef } from '@nivo/core'\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport CustomTooltip from '../CustomTooltip/CustomTooltip';\nimport VariationNumber from '../VariationNumber/VariationNumber';\nimport AllocationChart from '../AllocationChart/AllocationChart';\nimport CustomTooltipRow from '../CustomTooltip/CustomTooltipRow';\nimport { Image, Text, Loader, Button, Tooltip, Icon, Flex, Link } from \"rimble-ui\";\n\nclass AssetField extends Component {\n\n  state = {\n    ready:false\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const tokenChanged = prevProps.token !== this.props.token;\n    const accountChanged = prevProps.account !== this.props.account;\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    const contractsInitialized = !prevProps.contractsInitialized && this.props.contractsInitialized;\n    const requiredNetworkChanged = (!prevProps.network && this.props.network) || (prevProps.network && this.props.network && JSON.stringify(prevProps.network.required) !== JSON.stringify(this.props.network.required));\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (fieldChanged || tokenChanged || accountChanged || transactionsChanged || contractsInitialized || requiredNetworkChanged){\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.loadField();\n      });\n    } else if (mobileChanged || themeModeChanged){\n      const oldState = Object.assign({},this.state);\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  loadField = async(fieldName=null) => {\n    // Exit if component unmounted\n    // console.log('loadField',this.props.fieldInfo.name,this.props.account,this.props.token,this.props.tokenConfig);\n\n    if (this.componentUnmounted || !this.props.token || !this.props.tokenConfig || !this.props.contractsInitialized){\n      return null;\n    }\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const setState = fieldName === null;\n    const fieldInfo = this.props.fieldInfo;\n    if (!fieldName){\n      fieldName = fieldInfo.name;\n    }\n\n    const fieldProps = fieldInfo.props;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    // const addCurveApy = typeof this.props.addCurveApy !== 'undefined' ? this.props.addCurveApy : false;\n    const addGovTokens = typeof this.props.addGovTokens !== 'undefined' ? this.props.addGovTokens : true;\n\n    let output = null;\n    if (this.props.token){\n      switch (fieldName){\n        case 'tokenBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              tokenBalance:output.toString()\n            });\n          }\n        break;\n        case 'govTokens':\n          const govTokens = this.functionsUtil.getTokenGovTokens(this.props.tokenConfig);\n          const getGovTokensDistributionSpeed = await this.functionsUtil.getGovTokensDistributionSpeed(this.props.tokenConfig);\n          this.setStateSafe({\n            govTokens,\n            getGovTokensDistributionSpeed\n          });\n        break;\n        case 'tokenPrice':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            let tokenPrice = '-';\n            if (typeof this.props.tokenConfig.showPrice === 'undefined' || this.props.tokenConfig.showPrice){\n              tokenPrice = output.toString();\n            }\n            this.setStateSafe({\n              tokenPrice\n            });\n          }\n        break;\n        case 'fee':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              fee:output.toString()\n            });\n          }\n        break;\n        case 'amountToMigrate':\n          const {\n            oldContractBalanceFormatted\n          } = await this.functionsUtil.checkMigration(this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (setState && oldContractBalanceFormatted){\n            this.setStateSafe({\n              amountToMigrate:oldContractBalanceFormatted.toString()\n            });\n            output = oldContractBalanceFormatted;\n          }\n        break;\n        case 'amountLent':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              amountLent:output.toString()\n            });\n          }\n        break;\n        case 'idleTokenBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              idleTokenBalance:output.toString()\n            });\n          }\n        break;\n        case 'redeemableBalanceCounterCurve':\n          const {\n            redeemableBalanceCurveEnd,\n            redeemableBalanceCurveStart\n          } = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (redeemableBalanceCurveStart && redeemableBalanceCurveEnd){\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                redeemableBalanceCurveEnd,\n                redeemableBalanceCurveStart\n              });\n            }\n\n            output = {\n              redeemableBalanceCurveEnd,\n              redeemableBalanceCurveStart\n            };\n          }\n        break;\n        case 'redeemableBalanceCounter':\n          const {\n            redeemableBalanceEnd,\n            redeemableBalanceStart\n          } = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (redeemableBalanceStart && redeemableBalanceEnd){\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                redeemableBalanceEnd,\n                redeemableBalanceStart\n              });\n            }\n\n            output = {\n              redeemableBalanceEnd,\n              redeemableBalanceStart\n            };\n          }\n        break;\n        case 'earnings':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earnings:output.toString()\n            });\n          }\n        break;\n        case 'feesCounter':\n          const [earningsCounter,feePercentage] = await Promise.all([\n            this.loadField('earningsCounter'),\n            this.functionsUtil.getTokenFees(this.props.tokenConfig)\n          ]);\n\n          if (earningsCounter && earningsCounter.earningsStart && earningsCounter.earningsEnd && feePercentage){\n\n            const feesStart = earningsCounter.earningsStart.times(feePercentage);\n            const feesEnd = earningsCounter.earningsEnd.times(feePercentage);\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                feesEnd,\n                feesStart\n              });\n            }\n\n            output = {\n              feesEnd,\n              feesStart\n            };\n          }\n        break;\n        case 'earningsCounterCurve':\n          const [curveApy,earningsCurveStart,amountLentCurve] = await Promise.all([\n            this.functionsUtil.getCurveAPY(),\n            this.functionsUtil.loadAssetField('earningsCurve',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('amountLentCurve',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens)\n          ]);\n\n          if (amountLentCurve && earningsCurveStart && curveApy){\n            const earningsCurveEnd = amountLentCurve.gt(0) ? amountLentCurve.times(curveApy.div(100)).plus(earningsCurveStart) : 0;\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                earningsCurveEnd,\n                earningsCurveStart\n              });\n            }\n\n            output = {\n              earningsCurveEnd,\n              earningsCurveStart\n            };\n          }\n        break;\n        case 'earningsCounter':\n          let [tokenAPY2,earningsStart,amountLent2] = await Promise.all([\n            this.functionsUtil.loadAssetField('apy',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('earnings',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('amountLent',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens)\n          ]);\n\n\n          if (amountLent2 && earningsStart && tokenAPY2){\n            const earningsEnd = amountLent2.gt(0) ? amountLent2.times(tokenAPY2.div(100)).plus(earningsStart) : 0;\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                earningsEnd,\n                earningsStart\n              });\n            }\n\n            output = {\n              earningsEnd,\n              earningsStart\n            };\n          }\n        break;\n        case 'redeemableBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              redeemableBalance:output.toString()\n            });\n          }\n        break;\n        case 'score':\n          const tokenScore = await this.functionsUtil.getTokenScore(this.props.tokenConfig,isRisk);\n          if (setState){\n            this.setStateSafe({\n              score:tokenScore ? tokenScore : false\n            });\n          }\n          output = tokenScore;\n        break;\n        case 'pool':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              poolSize:output.toString()\n            });\n          }\n        break;\n        case 'earningsPercCurve':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earningsPercCurveDirection:parseFloat(output)>0 ? 'up' : 'down',\n              earningsPercCurve:parseFloat(output).toFixed(decimals)\n            });\n          }\n        break;\n        case 'earningsPerc':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earningsPerc:parseFloat(output).toFixed(decimals),\n              earningsPercDirection:parseFloat(output)>0 ? 'up' : 'down'\n            });\n          }\n        break;\n        case 'apr':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            let tokenAPR = '-';\n            if (typeof this.props.tokenConfig.showAPR === 'undefined' || this.props.tokenConfig.showAPR){\n              tokenAPR = parseFloat(output).toFixed(decimals);\n            }\n            this.setStateSafe({\n              tokenAPR\n            });\n          }\n        break;\n        case 'oldApy':\n          if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.oldContract){\n            const oldTokenConfig = Object.assign({},this.props.tokenConfig);\n            oldTokenConfig.idle = Object.assign({},this.props.tokenConfig.migration.oldContract);\n            oldTokenConfig.protocols = Object.values(this.props.tokenConfig.protocols);\n\n            // Override token with name\n            oldTokenConfig.idle.token = oldTokenConfig.idle.name;\n\n            // Replace protocols with old protocols\n            if (oldTokenConfig.migration.oldProtocols){\n              oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n                const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n                if (foundProtocol){\n                  const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                  oldTokenConfig.protocols[protocolPos] = oldProtocol;\n                }\n              });\n            }\n\n            output = await this.functionsUtil.loadAssetField('apy',this.props.token,oldTokenConfig,this.props.account,false);\n\n          } else {\n            output = await this.loadField('apyNoGov');\n          }\n\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                oldAPY:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                oldAPY:false\n              });\n            }\n          }\n        break;\n        case 'apyNoGov':\n          output = await this.functionsUtil.loadAssetField('apy',this.props.token,this.props.tokenConfig,this.props.account,false);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                tokenAPYNoGov:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                tokenAPYNoGov:false\n              });\n            }\n          }\n        break;\n        case 'curveApy':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                curveApy:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                curveApy:false\n              });\n            }\n          }\n        break;\n        case 'curveAvgSlippage':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                curveAvgSlippage:(parseFloat(output)*100).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                curveAvgSlippage:false\n              });\n            }\n          }\n        break;\n\n        case 'apy':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // console.log(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens,output);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              const tokenAPY = parseFloat(output).toFixed(decimals);\n              const showTooltip = !this.props.isMobile && (fieldInfo.showTooltip !== undefined && fieldInfo.showTooltip);\n              const govTokensAprs = showTooltip ? await this.functionsUtil.getGovTokensAprs(this.props.token,this.props.tokenConfig) : null;\n              this.setStateSafe({\n                tokenAPY,\n                govTokensAprs\n              });\n            } else {\n              this.setStateSafe({\n                tokenAPY:false\n              });\n            }\n          }\n        break;\n        case 'allocationChart':\n          let allocationChartWidth = 0;\n          let allocationChartHeight = 0;\n\n          const resizeAllocationChart = () => {\n            const allocationChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (allocationChartRowElement){\n              const $allocationChartRowElement = window.jQuery(allocationChartRowElement);\n              allocationChartWidth = $allocationChartRowElement.innerWidth()-parseFloat($allocationChartRowElement.css('padding-right'))-parseFloat($allocationChartRowElement.css('padding-left'));\n              allocationChartHeight = $allocationChartRowElement.innerHeight();\n\n              // Make it a square\n              allocationChartWidth = parseInt(allocationChartWidth)>0 ? Math.min(allocationChartWidth,allocationChartHeight) : allocationChartHeight;\n              allocationChartHeight = allocationChartWidth;\n\n\n              if (allocationChartWidth !== this.state.allocationChartWidth){\n                if (setState){\n                  this.setStateSafe({\n                    allocationChartWidth,\n                    allocationChartHeight\n                  });\n                }\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAllocationChart();\n          window.removeEventListener('resize', resizeAllocationChart.bind(this));\n          window.addEventListener('resize', resizeAllocationChart.bind(this));\n\n          if (setState){\n            this.setStateSafe({\n              allocationChartWidth,\n              allocationChartHeight\n            });\n          }\n        break;\n        case 'aprChart':\n          // Set start timestamp for v3 tokens\n          const aprChartEndTimestamp = isRisk ? this.functionsUtil.getGlobalConfig(['stats','versions','v3','endTimestamp']) : null;\n          const aprChartStartTimestamp = isRisk ? aprChartEndTimestamp-(7*24*60*60) : Math.max(this.functionsUtil.getGlobalConfig(['stats','versions','v3','startTimestamp']),parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(new Date()).format('DD/MM/YYYY 00:00:00'),'DD/MM/YYYY HH:mm:ss').subtract(7,'days')._d.getTime()/1000));\n\n          // Check for cached data\n          let aprChartData = null;\n          const cachedDataKey = `aprChart_${this.props.tokenConfig.address}_${isRisk}`;\n          const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n\n          aprChartData = [{\n            id:this.props.token,\n            color: this.props.color ? this.props.color : 'hsl('+this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token,'color','hsl']).join(',')+')',\n            data: []\n          }];\n\n          if (cachedData !== null && cachedData[0] && cachedData[0].data && cachedData[0].data.length>0){\n            aprChartData = cachedData;\n          } else {\n\n            // FAKE CHART DATA\n            if (this.props.token === 'COMP'){\n              aprChartData[0].data = [];\n              const startTimestamp = new Date().getTime();\n              let y = 20;\n              for (var i=0; i<=16; i++) {\n                const mDate = this.functionsUtil.strToMoment(startTimestamp).add(i,'day');\n                const x = mDate.format(\"YYYY/MM/DD HH:mm\");\n                // Grow\n                if ((i>=5 && i<=10) || (i>=13)){\n                  y+=Math.random()*4+2; // Risk\n                  // y+=Math.random()*7+4; // Best\n                // Decrease\n                } else {\n                  y-=Math.random()*3+1; // Risk\n                  // y-=Math.random()*3+1; // Best\n                }\n                aprChartData[0].data.push({x,y});\n              }\n            } else {\n              const frequencySeconds = this.functionsUtil.getFrequencySeconds('hour',12);\n\n              // console.log('apiResultsAprChart',this.props.tokenConfig.token,this.props.tokenConfig.address,this.props.network.required);\n\n              const apiResultsAprChart = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,aprChartStartTimestamp,aprChartEndTimestamp,false,frequencySeconds);\n\n              let itemIndex = 0;\n              const totalItems = apiResultsAprChart.length;\n\n              apiResultsAprChart.forEach((d,i) => {\n                const x = this.functionsUtil.strToMoment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n                const y = parseFloat(this.functionsUtil.fixTokenDecimals(d.idleRate,18));\n                const itemPos = Math.floor(itemIndex++/totalItems*100);\n                aprChartData[0].data.push({ x, y, itemPos });\n              });\n            }\n\n            if (aprChartData[0].data.length>0){\n              this.functionsUtil.setCachedData(cachedDataKey,aprChartData);\n            }\n          }\n\n          // Add same value\n          if (aprChartData[0].data.length === 1){\n            const newPoint = Object.assign({},aprChartData[0].data[0]);\n            newPoint.x = this.functionsUtil.strToMoment(newPoint,\"YYYY/MM/DD HH:mm\").add(1,'hours').format(\"YYYY/MM/DD HH:mm\")\n            aprChartData[0].data.push(newPoint);\n          }\n\n          let aprChartWidth = 0;\n          let aprChartHeight = 0;\n\n          const resizeAprChart = () => {\n            const aprChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (aprChartRowElement){\n              const $aprChartRowElement = window.jQuery(aprChartRowElement);\n              aprChartWidth = $aprChartRowElement.innerWidth()-parseFloat($aprChartRowElement.css('padding-right'))-parseFloat($aprChartRowElement.css('padding-left'));\n              aprChartHeight = $aprChartRowElement.innerHeight();\n              if (aprChartWidth !== this.state.aprChartWidth || !this.state.aprChartHeight){\n                this.setStateSafe({\n                  aprChartWidth,\n                  aprChartHeight: this.state.aprChartHeight ? this.state.aprChartHeight : aprChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAprChart();\n          window.removeEventListener('resize', resizeAprChart.bind(this));\n          window.addEventListener('resize', resizeAprChart.bind(this));\n\n          // Set chart type\n          const aprChartType = Line;\n\n          const aprChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            axisLeft:null,\n            animate:false,\n            axisBottom:null,\n            enableArea:true,\n            areaOpacity:0.1,\n            curve:'monotoneX',\n            enableGridX:false,\n            enableGridY:false,\n            pointBorderWidth:2,\n            isInteractive:true,\n            colors:d => d.color,\n            defs:[\n              linearGradientDef('gradientArea', [\n                  { offset: 0, color: '#faf047' },\n                  { offset: 50, color: '#e4b400' },\n              ])\n            ],\n            enableSlices:this.props.isMobile ? false : 'x',\n            yFormat:value => parseFloat(value).toFixed(2)+'%',\n            fill:[\n              { match: { id: this.props.token } , id: 'gradientArea' },\n            ],\n            margin: { top: 10, right: 0, bottom: 0, left: 0 },\n            sliceTooltip:(slideData) => {\n              const { slice } = slideData;\n              const point = slice.points[0];\n              return (\n                <CustomTooltip\n                  point={point}\n                >\n                  {\n                  typeof slice.points === 'object' && slice.points.length &&\n                    slice.points.map(point => {\n                      const protocolName = point.serieId;\n                      const protocolEarning = point.data.yFormatted;\n                      // const protocolApy = point.data.apy;\n                      return (\n                        <CustomTooltipRow\n                          key={point.id}\n                          color={point.color}\n                          label={protocolName}\n                          value={protocolEarning}\n                        />\n                      );\n                    })\n                  }\n                </CustomTooltip>\n              );\n            }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                aprChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              aprChartType,\n              aprChartData,\n              aprChartProps,\n              aprChartWidth,\n              aprChartHeight\n            });\n          }\n          output = aprChartData;\n        break;\n        case 'performanceChart':\n          let firstTokenPrice = null;\n          let firstIdleBlock = null;\n          /*\n          let performanceChartWidth = 0;\n          let performanceChartHeight = 0;\n\n          const performanceChartRowElement = document.getElementById(this.props.rowId) ? document.getElementById(this.props.rowId) : document.getElementById(this.props.parentId);\n          if (performanceChartRowElement){\n            performanceChartWidth = parseFloat(performanceChartRowElement.offsetWidth)>0 ? performanceChartRowElement.offsetWidth* (this.props.colProps ? this.props.colProps.width : 1) : 0;\n            performanceChartHeight = parseFloat(performanceChartRowElement.offsetHeight);\n          }\n          */\n\n          let performanceChartWidth = 0;\n          let performanceChartHeight = 0;\n\n          const resizePerformanceChart = () => {\n            const PerformanceChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (PerformanceChartRowElement){\n              const $PerformanceChartRowElement = window.jQuery(PerformanceChartRowElement);\n              performanceChartWidth = $PerformanceChartRowElement.innerWidth()-parseFloat($PerformanceChartRowElement.css('padding-right'))-parseFloat($PerformanceChartRowElement.css('padding-left'));\n              performanceChartHeight = $PerformanceChartRowElement.innerHeight();\n              if (performanceChartWidth !== this.state.performanceChartWidth || !this.state.performanceChartHeight){\n                this.setStateSafe({\n                  performanceChartWidth,\n                  performanceChartHeight: this.state.performanceChartHeight ? this.state.performanceChartHeight : performanceChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizePerformanceChart();\n          window.removeEventListener('resize', resizePerformanceChart.bind(this));\n          window.addEventListener('resize', resizePerformanceChart.bind(this));\n\n          const apr_end_date = this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(new Date()).subtract(1,'day').format('YYYY-MM-DD 23:59'),'YYYY-MM-DD HH:mm');\n          const apr_start_date = apr_end_date.clone().subtract(1,'week');\n\n          // Set start timestamp for v3 tokens\n          const apr_start_timestamp =  Math.max(this.functionsUtil.getGlobalConfig(['stats','versions','v3','startTimestamp']),parseInt(apr_start_date._d.getTime()/1000));\n          // const apr_end_timestamp = parseInt(apr_end_date._d.getTime()/1000);\n\n          let apiResultsPerformanceChart = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,apr_start_timestamp,null,false,43200);\n\n          const idleTokenPerformance = apiResultsPerformanceChart.map((d,i) => {\n            let y = 0;\n            const x = this.functionsUtil.strToMoment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n            const tokenPrice = this.functionsUtil.fixTokenDecimals(d.idlePrice,this.props.tokenConfig.decimals);\n\n            if (!firstTokenPrice){\n              firstTokenPrice = tokenPrice;\n            } else {\n              y = parseFloat(tokenPrice.div(firstTokenPrice).minus(1).times(100));\n            }\n\n            if (firstIdleBlock === null){\n              firstIdleBlock = parseInt(d.blocknumber);\n            }\n\n            return { x, y };\n          });\n\n          const performanceChartData = [{\n            id:'Idle',\n            color: 'hsl('+this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token,'color','hsl']).join(',')+')',\n            data: idleTokenPerformance\n          }];\n\n          // Set chart type\n          const performanceChartType = Line;\n\n          const performanceChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            animate:false,\n            axisLeft:null,\n            axisBottom:null,\n            enableArea:true,\n            enableGridX:false,\n            enableGridY:false,\n            curve:'monotoneX',\n            enableSlices:false,\n            pointBorderWidth:1,\n            colors:d => d.color,\n            pointLabelYOffset:-12,\n            margin: { top: 0, right: 0, bottom: 0, left: 0 }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                performanceChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              performanceChartType,\n              performanceChartData,\n              performanceChartProps,\n              performanceChartWidth,\n              performanceChartHeight\n            });\n          }\n          output = performanceChartData;\n        break;\n        case 'custom':\n          const path = fieldInfo.path;\n          output = this.functionsUtil.getArrayPath(path,this.props.tokenConfig);\n          if (output){\n            this.setStateSafe({\n              [fieldName]:output\n            });\n          }\n        break;\n        default:\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              ready:true,\n              [fieldName]:output\n            });\n          }\n        break;\n      }\n    }\n\n    return output;\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n    let output = null;\n\n    const showLoader = fieldInfo.showLoader === undefined || fieldInfo.showLoader;\n    const loader = showLoader ? (<Loader size=\"20px\" />) : null;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    const tokenConfig = this.props.tokenConfig || this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token]);\n      \n    const maxPrecision = fieldProps && fieldProps.maxPrecision ? fieldProps.maxPrecision : 5;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    const minPrecision = fieldProps && fieldProps.minPrecision ? fieldProps.minPrecision : ( this.props.isMobile ? 3 : 4 );\n\n    switch (fieldInfo.name){\n      case 'iconTooltip':\n        const icon1 = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${this.props.token}.svg`;\n        output = (\n          <Tooltip\n            placement={'top'}\n            message={this.props.token}\n            {...fieldInfo.tooltipProps}\n          >\n            <Image src={icon1} {...fieldProps} />\n          </Tooltip>\n        );\n      break;\n      case 'icon':\n        const icon2 = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${this.props.token}.svg`;\n        output = (\n          <Image src={icon2} {...fieldProps} />\n        );\n      break;\n      case 'tokenName':\n        output = (\n          <Text {...fieldProps}>{this.props.token}</Text>\n        );\n      break;\n      case 'strategyIcon':\n        const strategyIcon = this.functionsUtil.getGlobalConfig(['strategies',this.props.tokenConfig.strategy,'icon']);\n        if (strategyIcon){\n          output = (\n            <Image src={strategyIcon} {...fieldProps} />\n          );\n        }\n      break;\n      case 'strategyName':\n        const strategyName = this.functionsUtil.getGlobalConfig(['strategies',this.props.tokenConfig.strategy,'title']);\n        output = (\n          <Text {...fieldProps}>{strategyName}</Text>\n        );\n      break;\n      case 'tokenBalance':\n        output = this.state.tokenBalance ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.tokenBalance} />\n        ) : loader\n      break;\n      case 'fee':\n        output = this.state.fee ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.fee} />\n        ) : loader\n      break;\n      case 'tokenPrice':\n        output = this.state.tokenPrice ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.tokenPrice} />\n        ) : loader\n      break;\n      case 'amountToMigrate':\n        output = this.state.amountToMigrate ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.amountToMigrate} />\n        ) : loader\n      break;\n      case 'idleTokenBalance':\n        output = this.state.idleTokenBalance ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.idleTokenBalance} />\n        ) : loader\n      break;\n      case 'redeemableBalanceCounterCurve':\n        output = this.state.ready && this.state.redeemableBalanceCurveStart && this.state.redeemableBalanceCurveEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.redeemableBalanceCurveEnd)}\n            start={parseFloat(this.state.redeemableBalanceCurveStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'redeemableBalanceCounter':\n        output = this.state.ready && this.state.redeemableBalanceStart && this.state.redeemableBalanceEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.redeemableBalanceEnd)}\n            start={parseFloat(this.state.redeemableBalanceStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'feesCounter':\n        output = this.state.ready && this.state.feesStart && this.state.feesEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.feesEnd)}\n            start={parseFloat(this.state.feesStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounterCurve':\n        output = this.state.ready && this.state.earningsCurveStart && this.state.earningsCurveEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsCurveEnd)}\n            start={parseFloat(this.state.earningsCurveStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounter':\n        output = this.state.ready && this.state.earningsStart && this.state.earningsEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsEnd)}\n            start={parseFloat(this.state.earningsStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'redeemableBalance':\n        output = this.state.redeemableBalance ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.redeemableBalance} />\n        ) : loader\n      break;\n      case 'govTokens':\n        output = this.state.govTokens && Object.keys(this.state.govTokens).length>0 ? (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'flex-start'}\n          >\n            {\n              Object.values(this.state.govTokens).map( (govTokenConfig,govTokenIndex) => (\n                <AssetField\n                  token={govTokenConfig.token}\n                  tokenConfig={govTokenConfig}\n                  key={`asset_${govTokenIndex}`}\n                  fieldInfo={{\n                    name:'iconTooltip',\n                    tooltipProps:{\n                      message:`${govTokenConfig.token}`+(this.state.getGovTokensDistributionSpeed && this.state.getGovTokensDistributionSpeed[govTokenConfig.token] ? `: ${this.state.getGovTokensDistributionSpeed[govTokenConfig.token].toFixed(decimals)}/${govTokenConfig.distributionFrequency} (for the whole pool)` : '')\n                    },\n                    props:{\n                      borderRadius:'50%',\n                      position:'relative',\n                      height:['1.1em','2em'],\n                      ml:govTokenIndex ? '-10px' : 0,\n                      zIndex:Object.values(this.state.govTokens).length-govTokenIndex,\n                      boxShadow:['1px 1px 1px 0px rgba(0,0,0,0.1)','1px 2px 3px 0px rgba(0,0,0,0.1)'],\n                    }\n                  }}\n                />\n              ))\n            }\n          </Flex>\n        ) : this.state.govTokens ? (\n          <Text {...fieldProps}>-</Text>\n        ) : loader\n      break;\n      case 'amountLentCurve':\n        output = this.state.amountLentCurve ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.amountLentCurve} />\n        ) : loader\n      break;\n      case 'amountLent':\n        output = this.state.amountLent ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.amountLent} />\n        ) : loader\n      break;\n      case 'pool':\n        output = this.state.poolSize ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.poolSize} />\n        ) : loader\n      break;\n      case 'score':\n        output = (this.props.tokenConfig && this.props.tokenConfig.defiScoreDisabled) ? (<Text {...fieldProps}>N/A</Text>) : (this.state.score !== undefined && this.state.score !== null && this.functionsUtil.BNify(this.state.score).gt(0)) ? (\n          <SmartNumber {...fieldProps} decimals={2} number={this.state.score} />\n        ) : (this.functionsUtil.BNify(this.state.score).lte(0) ? (<Text {...fieldProps}>-</Text>) : loader)\n      break;\n      case 'earningsPerc':\n        output = this.state.earningsPerc ?\n          (typeof fieldInfo.showDirection === 'undefined' || fieldInfo.showDirection) ? (\n            <VariationNumber\n              isMobile={this.props.isMobile}\n              direction={this.state.earningsPercDirection}\n            >\n              <Text {...fieldProps}>{this.state.earningsPerc}%</Text>\n            </VariationNumber>\n          ) : (\n            <Text {...fieldProps}>{this.state.earningsPerc}%</Text>\n          )\n        : loader\n      break;\n      case 'earningsPercCurve':\n        output = this.state.earningsPercCurve ?\n          (typeof fieldInfo.showDirection === 'undefined' || fieldInfo.showDirection) ? (\n            <VariationNumber\n              isMobile={this.props.isMobile}\n              direction={this.state.earningsPercCurveDirection}\n            >\n              <Text {...fieldProps}>{this.state.earningsPercCurve}%</Text>\n            </VariationNumber>\n          ) : (\n            <Text {...fieldProps}>{this.state.earningsPercCurve}%</Text>\n          )\n        : loader\n      break;\n      case 'earningsCurve':\n        output = this.state.earningsCurve ? (\n          <VariationNumber\n            direction={'up'}\n            isMobile={this.props.isMobile}\n          >\n            <SmartNumber\n              {...fieldProps}\n              decimals={decimals}\n              minPrecision={minPrecision}\n              number={this.state.earningsCurve}\n            />\n          </VariationNumber>\n        ) : loader\n      break;\n      case 'earnings':\n        output = this.state.earnings ? (\n          <VariationNumber\n            direction={'up'}\n            isMobile={this.props.isMobile}\n          >\n            <SmartNumber\n              {...fieldProps}\n              decimals={decimals}\n              minPrecision={minPrecision}\n              number={this.state.earnings}\n            />\n          </VariationNumber>\n        ) : loader\n      break;\n      case 'idleDistribution':\n        const governanceTokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n        const idleTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',governanceTokenName]);\n        output = this.state.idleDistribution ? (\n          <Text {...fieldProps}>+{this.state.idleDistribution.toFixed(decimals)} IDLE/{idleTokenConfig.distributionFrequency}</Text>\n        ) : loader\n      break;\n      case 'userDistributionSpeed':\n        output = this.state.userDistributionSpeed ? (\n          <Text {...fieldProps}>{this.state.userDistributionSpeed.toFixed(decimals)}/{this.props.tokenConfig.distributionFrequency}</Text>\n        ) : loader\n      break;\n      case 'distributionSpeed':\n        output = this.state.distributionSpeed ? (\n          <Text {...fieldProps}>{this.state.distributionSpeed.toFixed(decimals)}</Text>\n        ) : loader\n      break;\n      case 'apr':\n        output = this.state.tokenAPR ? (\n          <Text {...fieldProps}>{this.state.tokenAPR}{!isNaN(parseFloat(this.state.tokenAPR)) ? '%' : ''}</Text>\n        ) : loader\n      break;\n      case 'oldApy':\n        output = this.state.oldAPY !== undefined ? (\n          <Text {...fieldProps}>{this.state.oldAPY !== false ? this.state.oldAPY : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'apyNoGov':\n        output = this.state.tokenAPYNoGov !== undefined ? (\n          <Text {...fieldProps}>{this.state.tokenAPYNoGov !== false ? this.state.tokenAPYNoGov : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'curveApy':\n        output = this.state.curveApy !== undefined ? (\n          <Text {...fieldProps}>{this.state.curveApy !== false ? this.state.curveApy : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'curveAvgSlippage':\n        output = this.state.curveAvgSlippage !== undefined ? (\n          <Text {...fieldProps}>{this.state.curveAvgSlippage !== false ? this.state.curveAvgSlippage : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'apy':\n        output = this.state.tokenAPY !== undefined ? (\n          <Flex\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            <Text {...fieldProps}>{this.state.tokenAPY !== false ? this.state.tokenAPY : '-' }<small>%</small></Text>\n            {\n              this.state.govTokensAprs && Object.keys(this.state.govTokensAprs).length>0 && \n                <AssetField\n                  fieldInfo={{\n                    name:'tooltip',\n                    props:{\n                      iconProps:{\n                        ml:1\n                      },\n                      placement:'top',\n                      message:Object.keys(this.state.govTokensAprs).map( govToken => {\n                        const distributionFrequency = this.functionsUtil.getGlobalConfig(['govTokens',govToken,'distributionFrequency']);\n                        const tooltipMode = this.functionsUtil.getGlobalConfig(['govTokens',govToken,'aprTooltipMode']);\n                        let value = this.state.govTokensAprs[govToken].toFixed(decimals);\n                        switch (tooltipMode){\n                          default:\n                          case 'apr':\n                            value += '%';\n                          break;\n                          case 'distribution':\n                            value = `${value}/${distributionFrequency}`;\n                          break;\n                        }\n                        return `${govToken}: ${value}`\n                      }).join('; ')\n                    }\n                  }}\n                />\n            }\n          </Flex>\n        ) : loader\n      break;\n      case 'button':\n        const buttonLabel = typeof fieldInfo.label === 'function' ? fieldInfo.label(this.props) : fieldInfo.label;\n        output = (\n          <Button {...fieldProps} onClick={() => fieldProps.handleClick(this.props) }>{buttonLabel}</Button>\n        );\n      break;\n      case 'performanceChart':\n        output = this.state.performanceChartData ? (\n          <GenericChart\n            {...this.state.performanceChartProps}\n            type={this.state.performanceChartType}\n            data={this.state.performanceChartData}\n            width={this.state.performanceChartWidth}\n            height={this.state.performanceChartHeight}\n          />\n        ) : loader\n      break;\n      case 'allocationChart':\n        output = this.state.allocationChartWidth && this.state.allocationChartHeight ? (\n          <AllocationChart\n            {...this.props}\n            loaderProps={{\n              size:'20px'\n            }}\n            loaderText={''}\n            selectedToken={this.props.token}\n            width={this.state.allocationChartWidth}\n            height={this.state.allocationChartHeight}\n            inline={typeof this.props.inline !== 'undefined' ? this.props.inline : true}\n            showLoader={typeof this.props.showLoader !== 'undefined' ? this.props.showLoader : false}\n          />\n        ) : loader\n      break;\n      case 'tooltip':\n        output = (\n          <Tooltip\n            {...fieldProps}\n          >\n            <Icon\n              ml={2}\n              name={\"Info\"}\n              size={'1em'}\n              color={'cellTitle'}\n              {...fieldProps.iconProps}\n            />\n          </Tooltip>\n        );\n      break;\n      case 'aprChart':\n        output = this.state.aprChartData ? (\n          <GenericChart\n            {...this.state.aprChartProps}\n            type={this.state.aprChartType}\n            data={this.state.aprChartData}\n            width={this.state.aprChartWidth}\n            height={this.state.aprChartHeight}\n          />\n        ) : loader\n      break;\n      case 'custom':\n        let CustomComponent = null;\n        let customValue = this.state[fieldInfo.name];\n        switch (fieldInfo.type){\n          case 'number':\n            customValue = this.functionsUtil.BNify(customValue).toString();\n            CustomComponent = SmartNumber;\n            fieldProps.number = customValue;\n          break;\n          case 'link':\n            CustomComponent = Link;\n          break;\n          case 'icon':\n            CustomComponent = Icon;\n            fieldProps.name = customValue;\n          break;\n          default:\n            CustomComponent = Text;\n          break;\n        }\n\n        // Custom Field Props\n        const customFieldName = Object.values(fieldInfo.path).pop();\n        if (this.props.tokenConfig[`${customFieldName}Props`]){\n          const customFieldProps = this.props.tokenConfig[`${customFieldName}Props`];\n          // Replace props\n          if (customFieldProps && Object.keys(customFieldProps).length){\n            Object.keys(customFieldProps).forEach(p => {\n              fieldProps[p] = customFieldProps[p];\n            });\n          }\n        }\n\n        output = customValue ? (\n          <CustomComponent {...fieldProps}>{customValue}</CustomComponent>\n        ) : loader\n      break;\n      default:\n        let formattedValue = this.state[fieldInfo.name];\n        if (this.state[fieldInfo.name] && this.state[fieldInfo.name]._isBigNumber){\n          formattedValue = this.state[fieldInfo.name].toFixed(decimals);\n        }\n        output = this.state[fieldInfo.name] ? (\n          <Text {...fieldProps}>{formattedValue}</Text>\n        ) : loader\n      break;\n    }\n    return output;\n  }\n}\n\nexport default AssetField;\n"],"sourceRoot":""}