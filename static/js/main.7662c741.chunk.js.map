{"version":3,"sources":["FlexLoader/FlexLoader.js","ChartCustomTooltipRow/ChartCustomTooltipRow.js","PageNotFound/PageNotFound.module.scss","utilities/components/ShortHash.js","LoadingSpinner/LoadingSpinner.js","ButtonLoader/ButtonLoader.js","SmartNumber/SmartNumber.js","IconBox/IconBox.js","TransactionListFilters/TransactionListFilters.js","TransactionsList/TransactionsList.js","ImageButton/ImageButton.js","CustomTooltip/CustomTooltip.js","AllocationChart/AllocationChart.js","CustomTooltip/CustomTooltipRow.js","PortfolioEquity/PortfolioEquity.js","ChartCustomTooltip/ChartCustomTooltip.js","RoundButton/RoundButton.js","ExtLink/ExtLink.js","theme.js","TableCellHeader/TableCellHeader.module.scss","TransactionListFilters/TransactionListFilters.module.scss","utilities/components/ModalCard.module.scss","Web3ConnectionButtons/Web3ConnectionButtons.module.scss","utilities/components/Header.module.scss","TxProgressBar/TxProgressBar.js","AssetSelector/AssetSelector.js","GenericSelector/GenericSelector.js","Tos/Tos.module.scss","TransactionField/TransactionField.js","Title/Title.js","GenericChart/GenericChart.js","DashboardCard/DashboardCard.module.scss","FastBalanceSelector/FastBalanceSelector.js","SendTxWithBalance/SendTxWithBalance.js","Staking/Staking.js","TokenSwap/TokenSwap.js","NexusMutual/NexusMutual.js","TokenWrapper/TokenWrapper.js","CustomField/CustomField.js","CustomList/CustomList.js","PortfolioDonut/PortfolioDonut.js","TotalEarningsCounter/TotalEarningsCounter.js","EarningsEstimation/EarningsEstimation.js","DashboardIconButton/DashboardIconButton.js","TotalBalanceCounter/TotalBalanceCounter.js","StrategyPage/StrategyPage.js","BatchDeposit/BatchDeposit.js","CoverProtocol/CoverProtocol.js","TokenMigration/TokenMigration.js","BatchMigration/BatchMigration.js","configs/globalConfigs.js","utilities/IdleGovToken.js","utilities/FunctionsUtil.js","DashboardCard/DashboardCard.js","Tos/Tos.js","theme-dark.js","App/connectors/TorusConnector.js","App/connectors/AuthereumConnector.js","App/connectors/WalletLinkConnector.js","App/connectors/WalletConnectConnector.js","App/connectors.js","utilities/components/WrongNetworkBanner.js","utilities/NetworkUtil.js","utilities/components/NoWeb3BrowserModal.js","utilities/components/NoWalletModal.js","utilities/GeneralUtil.js","utilities/components/WrongNetworkModal.js","utilities/components/TransactionFeeModal.js","Web3ConnectionButtons/Web3ConnectionButtons.js","utilities/components/ConnectionModal.js","utilities/components/ConnectionPendingModal.js","utilities/components/UserRejectedConnectionModal.js","utilities/components/LowFundsModal.js","utilities/ConnectionModalsUtil.js","utilities/components/ConnectionErrorModal.js","utilities/components/TransactionErrorModal.js","utilities/RimbleWeb3.js","utilities/components/Header.js","ScrollToTop/ScrollToTop.js","PageNotFound/PageNotFound.js","utilities/components/NetworkOverview.js","Web3Debugger/Web3Debugger.js","abis/compound/cDAI.js","abis/tokens/ERC20.js","configs/availableTokens.js","utilities/TransactionToastMessages.js","utilities/TransactionToastUtil.js","App/App.js","serviceWorker.js","index.js","TableRow/TableRow.js","TableHeader/TableHeader.js","Migrate/Migrate.js","AssetsList/AssetsList.js","Footer/Footer.module.scss","colors.js","VariationNumber/VariationNumber.js","GenericSelector/GenericSelector.module.scss","LoadingSpinner/LoadingSpinner.module.scss","utilities/components/BuyModal.js","utilities/components/ModalCard.js","Footer/Footer.js","TableCellHeader/TableCellHeader.js","CardIconButton/CardIconButton.js","AssetField/AssetField.js"],"names":["FlexLoader","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","rimble_ui__WEBPACK_IMPORTED_MODULE_6__","Object","assign","width","alignItems","justifyContent","this","props","flexProps","loaderProps","text","textProps","Component","ChartCustomTooltipRow","prevProps","prevState","react__WEBPACK_IMPORTED_MODULE_7___default","rimble_ui__WEBPACK_IMPORTED_MODULE_8__","mb","flexDirection","pr","style","flexBasis","flex","color","mr","height","borderRadius","backgroundColor","fontSize","fontWeight","textAlign","textTransform","label","whiteSpace","dangerouslySetInnerHTML","__html","value","module","exports","headerContainer","headerBgFiller","bgContainer","list","textContainer","ShortHash","shortenHash","hash","shortHash","txStart","substr","txEnd","length","display","React","LoadingSpinner","react_default","index_es","className","styles","mx","ButtonLoader","onClick","handleClick","buttonProps","isLoading","src_LoadingSpinner_LoadingSpinner","buttonText","SmartNumber","functionsUtil","setProps","FunctionsUtil","loadUtils","_this2","formattedNumber","number","isNaN","type","formatMoney","precision","abbreviateNumber","decimals","maxPrecision","minPrecision","keys","forEach","p","showUnit","unitPos","react__WEBPACK_IMPORTED_MODULE_8___default","rimble_ui__WEBPACK_IMPORTED_MODULE_7__","unit","unitProps","IconBox","cardProps","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_7__","size","name","icon","iconProps","mt","children","TransactionListFilters","state","maxWidth","minWidth","maxHeight","isOpened","activeFilters","status","assets","actions","setFilter","filter","_this","setState","objectSpread","defineProperty","applyFilters","toggle","arguments","undefined","toggleOpened","resetFilter","resetFilters","top","zIndex","position","DashboardCard","py","px","transition","isInteractive","cursor","isMobile","overflow","borderTop","concat","theme","colors","divider","filters","map","filterCategory","filterValues","key","TableCellHeader","pb","toUpperCase","filterValue","filterLabel","isChecked","my","checked","radioBtn","onChange","e","Text","mainColor","ml","values","v","filterName","hoverColor","TransactionsList","page","prevTxs","txsPerPage","loading","totalTxs","totalPages","deposit","redeem","send","receive","migrate","swap","swapout","withdraw","completed","pending","failed","renderedTxs","processedTxs","lastBlockNumber","processTxs","availableActions","action","toLowerCase","txsIndexes","tx","parseFloat","token","includes","sort","b","timeStamp","Math","ceil","i","selectedToken","tokenConfig","availableTokens","min","date","Date","getTxAction","parsedValue","tokenAmount","amount","toFixed","momentDate","strToMoment","push","preventDefault","max","loadTxs","transactionsChanged","JSON","stringify","transactions","enabledTokens","count","account","firstBlockNumber","getGlobalConfig","enabledActions","getEtherscanTxs","etherscanTxs","hashKey","lastTx","pop","blockNumber","parseInt","_this3","_this4","hasActiveFilters","m","minHeight","id","pt","src_TransactionListFilters_TransactionListFilters","bind","TableHeader","cols","index","txHash","txHashKey","TableRow","rowProps","transaction","window","open","rowId","cardId","fieldComponent","TransactionField","prevPage","nextPage","h3","fontFamily","ImageButton","image","imageSrc","src","imageProps","iconName","caption","isActive","contrastColor","buttonStyle","Fragment","badge","bgColor","right","captionPos","subcaption","split","lineHeight","CustomTooltip","react__WEBPACK_IMPORTED_MODULE_6___default","point","left","data","itemPos","rimble_ui__WEBPACK_IMPORTED_MODULE_5__","xFormatted","AllocationChart","chartData","chartProps","selectedSlice","totalAllocation","protocolsAllocations","protocolsAllocationsPerc","componentUnmounted","loadData","setStateSafe","newState","callback","getTokenAllocation","padAngle","animate","borderWidth","cornerRadius","motionDamping","innerRadius","motionStiffness","d","onMouseEnter","onMouseLeave","tooltipFormat","sliceLabel","radialLabel","tooltip","container","inline","background","cardBg","labels","fonts","sansSerif","legends","slicesLabelsSkipAngle","radialLabelsSkipAngle","enableRadialLabels","radialLabelsTextXOffset","slicesLabelsTextColor","radialLabelsTextColor","radialLabelsLinkStrokeWidth","radialLabelsLinkDiagonalLength","radialLabelsLinkHorizontalLength","enableSlicesLabels","radialLabelsLinkColor","from","borderColor","modifiers","margin","bottom","protocols","protocolInfo","protocolName","protocolAddr","address","protocolAllocationPercParsed","times","globalConfigs","stats","hsl","join","capitalize","protocolIcon","rimble_ui__WEBPACK_IMPORTED_MODULE_9__","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_10__","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_13__","Pie","showLoader","CustomTooltipRow","PortfolioEquity","startDate","chartwidth","chartHeight","loadChartData","quickDateSelectionChanged","quickDateSelection","componentDidMount","mobileChanged","themeModeChanged","themeMode","tokensBalance","firstTxTimestamp","asyncForEach","_ref","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","mark","_callee3","filteredTxs","amountLent","wrap","_context3","prev","next","BNify","plus","minus","lt","balance","tokenPrice","idleTokens","stop","_x3","apply","currentDate","clone","subtract","days","prevBalances","prevTimestamp","minChartValue","maxChartValue","aggregatedBalance","aggregatedBalancesKeys","tokensBalancesPerDate","currTimestamp","getTime","tokensData","isRisk","selectedStrategy","_ref2","_callee4","_context4","getTokenApiData","sent","_x4","idleTokenBalance","foundBalances","tokensBalances","lastTokenData","lastTokenDataUnfiltered","filteredTokenData","timestamp","tokenDecimals","filteredBalances","lastFilteredTx","idlePrice","fixTokenDecimals","newBalance","lastTxBalance","gt","tokenUsdConversionRate","conversionRateField","chartToken","conversionRate","isSameOrAfter","isSameOrBefore","formattedDate","format","frequencySeconds","_loop","aggregatedBalances","x","y","balances","itemIndex","item","floor","yFormatDecimals","gridYStep","gridYValues","gridYValue","daysCount","daysFrequency","xScale","yScale","stacked","xFormat","yFormat","axisBottom","legend","tickSize","tickPadding","orient","legendOffset","legendPosition","tickValues","pointSize","useMesh","axisLeft","tickRotation","pointLabel","enableArea","enableSlices","enableGridY","curve","enableGridX","pointBorderWidth","pointLabelYOffset","areaBaselineValue","pointColor","areaOpacity","axis","ticks","fill","grid","line","stroke","lineChartStroke","strokeDasharray","sliceTooltip","slideData","slice","points","_ChartCustomTooltip_ChartCustomTooltip__WEBPACK_IMPORTED_MODULE_11__","_ChartCustomTooltipRow_ChartCustomTooltipRow__WEBPACK_IMPORTED_MODULE_12__","serieId","yFormatted","formattedBalance","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_10__","Line","parentId","parentIdHeight","ChartCustomTooltip","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_9__","RoundButton","boxShadow","ExtLink","target","rel","_colors__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","polished__WEBPACK_IMPORTED_MODULE_1__","__webpack_exports__","breakpoints","fontSizes","fontWeights","letterSpacings","lineHeights","solid","title","copy","serif","counter","space","radii","minWidths","maxWidths","heights","minHeights","maxHeights","borders","borderWidths","shadows","opacity","disabled","primary","blue","base","gradient-bg","primary-light","light","primary-dark","dark","bgBlue","dark-blue","skyBlue","lightBlue","copyColor","subColor","black","baseColors","near-black","dark-gray","mid-gray","gray","grey","silver","light-silver","moon-gray","light-gray","near-white","white","transparent","arrowActive","arrowInactive","selectBgFocused","selectBg","backButtonBg","wrongNetworkBannerBg","dashboardBg","statValue","boxBorder","cellTitle","cellText","menuBg","menuHover","flashColor","menuRightBorder","cardHoverShadow","cardBgHover","cardBorder","boost","curvein","default","curveout","curvedepositin","curvedepositout","actionBg","blacks","whites","zIndices","messageStyle","shade","tint","success","green","warning","yellow","danger","red","info","buttons","--main-color","--contrast-color","normal","buttonSizes","small","padding","medium","large","bg","button","gradientButton","empty","select","selectDark","input","TxProgressBar","error","ended","percentage","processing","txTimestamp","initialized","estimatedTime","remainingTime","_callee","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default","_context","initProgressBar","getTransaction","Promise","_ref3","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__","_callee2","resolve","reject","_context2","customLog","web3","eth","err","_x","_x2","abrupt","getBlockTime","blockTime","axios","get","getPredictionTable","_callee5","predictTable","_context5","getTxEstimatedTime","gasPrice","prediction","gasprice","pdValues","_estimateWait","gas","txMeanSecs","block_time","calculateRemainingTime","_callee6","secondsPassed","timePassed","_context6","div","toString","setTimeout","updateProgressBar","getTxInfo","_callee7","txProgressBarKey","txProgressBarData","_ref8","_ref9","_context7","localStorage","getItem","parse","all","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__","setLocalStorage","_callee8","_context8","clearTimeout","gasoffered","minedProb","expectedWait","sum1","sum2","prob","exp","minutes","seconds","react__WEBPACK_IMPORTED_MODULE_10___default","rimble_ui__WEBPACK_IMPORTED_MODULE_13__","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_11__","textColor","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","endMessage","waitText","span","renderRemainingTime","loadingMessage","sendingMessage","href","cancelTransaction","cancelTextColor","cancelTextHoverColor","AssetSelector","options","defaultValue","CustomOptionValue","CustomValueContainer","find","_AssetField_AssetField__WEBPACK_IMPORTED_MODULE_9__","fieldInfo","showCustomField","cachedData","setCachedData","showBalance","selectProps","indexOf","innerProps","loadComponents","selectedTokenChanged","_GenericSelector_GenericSelector__WEBPACK_IMPORTED_MODULE_11__","isSearchable","changeToken","GenericSelector","optionsChanged","defaultValueChanged","componentsChanged","ControlComponent","menuIsOpen","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_12__","CustomIndicatorSeparator","CustomMenu","CustomInputContainer","searchInput","searchInputHidden","CustomOption","selectedValue","o","genericSelector","isFocused","react_select__WEBPACK_IMPORTED_MODULE_7__","components","Menu","Option","Control","Input","SingleValue","IndicatorSeparator","loadField","hashChanged","accountChanged","output","fieldProps","textOverflow","rimble_ui__WEBPACK_IMPORTED_MODULE_11__","align","_utilities_components_ShortHash__WEBPACK_IMPORTED_MODULE_12__","border","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_9__","tokenSymbol","Title","HeadingComponent","component","Heading","h1","GenericChart","addEventListener","handleWindowSizeChange","removeEventListener","chartContainer","document","getElementById","chartWidth","offsetWidth","chartContainerH","ChartType","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_7__","loaderText","defaultOpacity","hidden","interactive","rainbow","FastBalanceSelector","onMouseDown","replaceArrayProps","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_10__","SendTxWithBalance","inputValue","txSucceeded","permitEnabled","showPermitBox","buttonDisabled","contractApproved","fastBalanceSelector","changeInputValue","call_callback","changeInputCallback","setInputValue","selectedPercentage","tokenBalance","getFastBalanceSelector","setFastBalanceSelector","checkButtonDisabled","lte","approve","callbackApprove","callbackReceiptApprove","regenerator_default","checkContractApproved","eventData","eventAction","eventCategory","eventLabel","getTransactionError","sendGoogleAnalyticsEvent","transactionHash","enableERC20","contractInfo","executeTx","_amount","callbackReceipt","contractName","params","signedParameters","_params","methodName","methodParams","normalizeTokenAmount","eventValue","signPermit","getPermitTransactionParams","getTransactionParams","contractMethodSendWrapper","approveCallback","actionChanged","tokenBalanceChanged","permitEnabledChanged","approveEnabledChanged","approveEnabled","contractChanged","tokenConfigChanged","initContract","abi","checkTokenApproved","infoBox","steps","step","stepIndex","link","description","required","togglePermitEnabled","balanceSelectorInfo","placeholder","approveDescription","Staking","globalStats","balanceProp","stakedBalance","accountingData","selectedAction","selectedOption","successMessage","tokenWrapperProps","distributionSpeed","transactionSucceeded","toggleShowTokenWrapper","showTokenWrapperEnabled","toolProps","contract","updateData","selectedActionChanged","contractApprovedChanged","rewardsPerDay","userDistributionSpeed","totalRewardsPerDay","totalRewards","totalStakingShares","rewardToken","normalizedInputValue","genericContractCall","unstakeRewards","toBN","expiry","r","s","stakedTokensLog","txReceipt","logs","log","topics","t","replace","stakedTokens","unstakedTokensLog","unstakedTokens","rewardTokenConfig","receivedRewardsLog","receivedRewards","getTokenBalance","startContract","wrapMethod","destContract","unwrapMethod","loadStats","reduce","_this5","enabled","totalLocked","totalUnlocked","unlockScheduleCount","collectedRewards","unlockSchedulesPromises","unlockSchedules","totalDeposits","lockedRewards","unlockedRewards","programEndTime","endTime","endAtSec","now","programDuration","utc","tokensPerSecond","_this6","initialLockedShares","durationSec","stakingShare","rewardMultiplier","distributionSpeedMultiplier","maxMultiplier","maxBonusDays","currentRewards","_this7","StatsCard","titleProps","titleParentProps","isStake","isUnstake","isStats","txAction","AssetField","selectToken","statInfo","setAction","src_SendTxWithBalance_SendTxWithBalance","flexWrap","TokenSwap","selectedFromToken","selectedDestToken","availableDestinationTokens","selectFromToken","baseToken","selectDestToken","getGlobalConfigs","paymentProvider","providerInfo","initProps","buttonId","initParams","getInitParams","render","remoteResources","url","j","scriptID","script","remoteResourceParams","precall","readyState","onreadystatechange","onload","async","parentElement","appendChild","head","stylesheetId","loadTokens","asyncToGenerator","getContractByName","fromTokenChanged","destTokenChanged","loadKyberWidget","NexusMutual","1","2","3","amountValue","periodValue","quoteResponse","changeAmount","changePeriod","makeRequest","textDecoration","activeColor","changeSelectedToken","getQuote","TokenWrapper","balanceDest","balanceStart","startContractChanged","destContractChanged","loadBalance","updateActionData","getETHBalance","mintLog","mintedAmount","withdrawLog","withdrawnAmount","fullWidth","CardIconButton","iconColor","iconBgColor","connectAndValidateAccount","CustomField","funcProps","CustomComponent","componentHasChildren","fieldType","fieldPath","path","customValue","getArrayPath","row","Image","Icon","Button","customFieldName","customFieldProps","CustomList","rows","rowIndex","PortfolioDonut","totalFunds","parentWidth","selectedTokenConfig","loadPortfolio","portfolio","idle","getIdleTokenPrice","convertTokenBalance","getGovTokensUserBalances","govTokensUserBalances","govToken","govTokenBalance","tokenPercentage","tokenColorHsl","round","radialLabelsLinkOffset","itemWidth","itemHeight","translateY","symbolSize","anchor","direction","itemTextColor","symbolShape","effects","on","strategyIcon","convertToken","TotalEarningsCounter","earningsEnd","earningsStart","loadTotalEarnings","contractsInitialized","availableStrategies","counterStyle","oldState","getAccountPortfolio","totalEarnings","totalAmountLent","avgAPY","build_default","delay","decimal","separator","useEasing","duration","end","start","formattingFn","n","countUpRef","ref","EarningsEstimation","tokensEarnings","estimationStepsPerc","estimationStepsOptions","estimationStepsDefaultOption","estimationSteps","0","Month","perc","2 months","3 months","optionName","25","8 months","Year","90","2 Years","5 Years","loadEarnings","aggregatedEarnings","earnings","earningsYear","amountDeposited","avgBuyPrice","idleTokenPrice","earningsPerc","tokenAPY","tokenAprs","earningsPercStep","possibleSteps","maxPossibleStep","getAmountDeposited","getAvgBuyPrice","slicedToArray","getTokenAprs","avgApr","avgApy","orderedTokensEarnings","estimationStep","option","setEstimationStepsPerc","tokenIndex","tokenEarnings","estimationStepPerc","finalEarnings","cursorPerc","tokenRGBColor","estimateIndex","estimationStepEarnings","estimationStepEarningsFormatted","borderRight","wordBreak","gte","pl","src_TotalEarningsCounter_TotalEarningsCounter","estimationLabel","DashboardIconButton","TotalBalanceCounter","counterEnd","counterStart","StrategyPage","tokensToMigrate","aggregatedValues","activeCoverages","depositedTokens","remainingTokens","batchedDeposits","portfolioLoaded","availableGovTokens","portfolioEquityStartDate","batchedDepositsAvailableTokens","portfolioEquityQuickSelection","getActiveCoverages","getBatchedDeposits","getTokensToMigrate","c","statusColors","statusIcon","statusColor","portfolioCoverage","totalBalance","statusIconProps","batchInfo","strategy","deposited","batchDeposits","redeemable","batchRedeems","avgScore","_ref4","_ref5","tokenScore","amountLentToken","tokenWeight","getTokenScore","getGovTokensUserTotalBalance","govTokensTotalBalance","govTokensUserBalance","govTokensTotalBalanceTooltip","viewOnly","connectorName","govTokens","apyLong","riskScore","yieldFarming","batchDepositConfig","coverProtocolConfig","placement","message","src_TotalBalanceCounter_TotalBalanceCounter","totalEarningsPerc","src_PortfolioDonut_PortfolioDonut","aligItems","setPortfolioEquityQuickSelection","getFrequencySeconds","AssetsList","fields","mobile","parentProps","goToSection","route","borderBottom","h4","desc","showTooltip","showDirection","toolName","toolIndex","toolConfig","src_DashboardIconButton_DashboardIconButton","src_CustomList_CustomList","fileClaimUrl","openWindow","src_EarningsEstimation_EarningsEstimation","textSize","BatchDeposit","canClaim","batchTotals","canDeposit","execute","claim","usePermit","lastExecution","hasDeposited","permitSigned","currBatchIndex","batchCompleted","claimSucceeded","componentLoaded","executeSucceeded","migrationEnabled","migrationSucceeded","batchDepositEnabled","migrationContractApproved","migrationEnabledCallback","migrationCallback","checkBatchs","loadStrategies","urlParams","param2","executeSucceededChanged","callbackExecute","callbackReceiptExecute","migrationContract","migrationContractInfo","getBatchedDepositExecutions","batchExecutions","functions","functionInfo","nonceMethod","permitContract","methods","batchIndex","batchTotal","batchRedeem","batchDeposit","batchDepositInfo","depositEnabled","availableStrategiesKeys","_ref6","strategyConfig","selectStrategy","obj","baseTokenConfig","strategyAvailableTokens","oldContract","migrateFunction","migration","setStrategyToken","batchId","callbackClaim","callbackReceiptClaim","_this8","canExecuteBatch","strategyDefaultValue","openTooltipModal","isDisabled","Migrate","showActions","getTokenPrice","isMigrationTool","showBalanceSelector","migrationIcon","migrationParams","toMigrate","callbackPermit","migrationText","minPoolSize","CoverProtocol","swapInfo","defaultCoverage","selectedCoverage","collateral","inputValueChanged","swapInfoChanged","swapFee","covTokens","tokenAmountOut","getSwapInfo","MAX_UINT256","pow","expirationTimestamp","integerValue","balancerTokenConfig","tokens","dashboardUrl","fixedAmount","mintedClaimLog","mintedNoClaimLog","mintedClaimAmount","mintedNoClaimAmount","claimTokenConfig","claimTokensLog","receivedClaimAmount","balancerPool","noClaimTokenConfig","noClaimTokensLog","receivedNoClaimAmount","apy","collateralAmount","balancerClaimConfig","balancerNoClaimConfig","claimTokenBalance","noClaimTokenBalance","balancerPoolClaimBalance","balancerPoolNoClaimBalance","hasMintedTokens","isClaim","apyPrice","currTime","coverages","expirationDate","selectCoverage","coverage","isMint","isBuyClaim","isBuyNoClaim","BuyModal","showInline","availableMethods","buyToken","TokenMigration","changeFromToken","convertTool","tokenInfo","destTokenConfig","BatchMigration","batchMigrationInfo","batchMigrationDepositEnabled","_ref7","env","process","appName","version","baseURL","forumURL","darkModeEnabled","betaURL","countries","USA","GBR","AUS","BRA","CHN","CAN","EUR","HKG","IND","MEX","RUS","ZAF","KOR","errorsEnabled","messagesEnabled","connectors","metamask","opera","dapper","coinbase","trustwallet","walletconnect","iconModal","walletlink","fortmatic","portis","authereum","torus","trezor","ledger","custom","newsletterSubscription","endpoint","messages","scoreShort","apyShort","cheapRedeem","curveBonusSlippage","directMint","performanceFee","govTokenApr","govTokenRedeemableBalance","riskScoreShort","batchDepositExecutionSchedule","curveInstructions","analytics","google","events","debugEnabled","addPostfixForTestnet","modals","first_deposit_referral","first_deposit_share","welcome","frequency","dashboard","baseRoute","mode","governance","test","startBlock","tokenName","availableContracts","IDLE","FeeTreasury","PriceOracle","GovernorAlpha","EcosystemFund","IdleController","contracts","delegates","n_coins","imageInactive","rates","poolContract","CurvePool","depositContract","CurveDeposit","gaugeContract","LiquidityGaugeV2","zapContract","CurveZap","idleDAIYield","coinIndex","idleUSDCYield","idleUSDTYield","permit","DAI","EIPVersion","USDC","SLP","showAUM","showAPR","protocol","showPrice","disabledTokens","aprTooltipMode","distributionFrequency","COMP","LockedIDLE","Timelock","VesterFactory","EarlyRewards","Comptroller","UniswapRouter","UniswapV2Router02","BalancerExchangeProxy","zeroExInstant","orderSource","assetData","affiliateInfo","feeRecipient","feePercentage","strategies","best","comingSoon","addGovTokens","titlePostfix","govTokensEnabled","chartColor","iconInactive","iconInactiveDark","descLong","descShort","risk","new","TTL","tvls","substack","scores","config","headers","REACT_APP_IDLE_KEY","Authorization","versions","v3","additionalProtocols","endTimestamp","startTimestamp","showPerformanceTooltip","strategiesParams","enabledStrategies","v4","rgb","hex","chart","labelTextColorModifiers","performanceTooltip","USD","USDT","TUSD","SUSD","WBTC","WETH","idleDAI+idleUSDC+idleUSDT","compound","compoundWithCOMP","rateField","fulcrum","dsr","dydx","iearn","aave","aavev2","skipRebalance","metaTransactionsEnabled","skipMint","minAmountForMint","erc20ForwarderEnabled","skipMintCheckboxEnabled","erc20ForwarderProxyContract","forwarder","erc20Forwarder","function","permitType","IdleDepositForwarder","proxyContract","IdleProxyMinter","minAmountForRebalance","minAmountForRebalanceMetaTx","redeemGovTokens","rebalance","IdleRebalancerV3","network","availableNetworks","4","42","1337","isForked","requiredNetwork","blocksPerYear","requiredConfirmations","accountBalanceMinimum","providers","infura","etherscan","endpoints","snapshot","whitelist","proposals","urls","biconomy","enableLogin","supportedNetworks","disabledWallets","limits","debug","apiKey","REACT_APP_BICONOMY_KEY","dappId","REACT_APP_BICONOMY_APPID","apiId","terminal","REACT_APP_TERMINAL_KEY","projectId","REACT_APP_TERMINAL_PROJECT_ID","source","web3Version","Web3Versions","one","simpleID","getNetwork","networkId","networkName","appOrigin","location","origin","appId","renderNotifications","notifications","tools","ethWrapper","subComponent","stake","LpStaking","SushiLiquidityPool","coverProtocol","CoverMint","Claim","CovToken","BalancerPool","NoClaim","claimEnabled","IdleBatchedMint","permitName","batchMigration","IdleTokenV3","IdleBatchConverter","idleSUSDYield","idleTUSDYield","idleWBTCYield","idleDAISafe","idleUSDCSafe","idleUSDTSafe","tokenMigration","IdleConverterPersonalSignV4","oldAddresses","idleDAIv2","IdleTokenV2","cDAI","iDAI","aDAI","yDAIv3","yDAIv2","idleUSDCv2","cUSDC","iUSDC","aUSDC","yUSDCv3","yUSDCv2","cUSDT","iUSDT","aUSDT","yUSDTv3","yUSDTv2","idleSUSDv2","aSUSD","ySUSDv3","idleTUSDv2","aTUSD","yTUSDv3","cWBTC","iWBTC","aWBTC","addFunds","directProps","showAllTokens","insurance","ETH","ens","tokenSwap","USDS","BUSD","EURS","2KEY","ABT","ABYSS","AMPL","ANT","BAM","BAND","BAT","BLZ","BNT","BQX","BTU","CDT","CVC","DAT","DGX","EKG","ELF","ENJ","EQUAD","FXC","GDC","GEN","GHT","GNO","IOST","KEY","KNC","LEND","LINK","LOOM","LRC","MANA","MCO","MET","MFG","MKR","MLN","MTL","MYB","NEXXO","NPXS","OGN","OMG","OST","PAX","PBTC","PLR","PNK","POLY","POWR","PT","QKC","QNT","RAE","REN","REP","REQ","RLC","RSR","RSV","SAN","SNT","SNX","SPIKE","SPN","TKN","TKX","TRYB","UBT","UPP","ZRX","payments","bank","defaultProvider","showDefaultOnly","card","wallet","wyre","supportedMethods","supportedCountries","supportedTokens","envParams","accountId","prod","getInfo","selectedMethod","buyParams","referrerAccountId","dest","destCurrency","redirectUrl","k","encodeURIComponent","iframeBox","innerHTML","body","wyreStyle","ramp","hostAppName","userAddress","hostApiKey","REACT_APP_RAMP_KEY","variant","hostLogoUrl","swapAsset","RampInstantSDK","event","t0","getAccountBalance","getTokenDecimals","payload","purchase","toastProvider","addMessage","secondaryMessage","colorTheme","actionHref","actionText","show","transak","https://global.transak.com/v1/widget.js","REACT_APP_TRANSAK_KEY_TEST","REACT_APP_TRANSAK_KEY_PROD","fee","selectedCountry","fiatCurrency","cryptoCurrencyCode","currencyCode","walletAddress","partnerCustomerId","disableWalletAddressForm","transakGlobal","transakStyle","moonpay","REACT_APP_MOONPAY_KEY_TEST","REACT_APP_MOONPAY_KEY_PROD","baseCurrencyCode","showWalletAddressForm","enabledPaymentMethods","navigator","userAgent","cookie","match","moonpayStyle","https://instant.0x.org/v3/instant.js","onSuccess","onClose","tokenParams","RimbleWeb3_context","chainId","provider","connector","ethereum","defaultSelectedAssetData","availableAssetDatas","shouldDisableAnalyticsTracking","defaultAssetBuyAmount","kyberSwap","web3Subscription","contractAddress","decodeLogsData","internalType","https://widget.kyber.network/v0.7.5/widget.css","https://widget.kyber.network/v0.7.5/widget.js","querySelectorAll","remove","scripts","lang","paramForwarding","pinnedTokens","defaultPair","commissionId","click","airSwap","https://cdn.airswap.io/airswap-instant-widget.js","onComplete","AirSwapInstant","totle","https://widget.totle.com/latest/dist.js","sourceAssetAddress","sourceAmountDecimal","destinationAssetAddress","destinationAmountDecimal","partnerContractAddress","TotleWidget","nodeId","totleWidgetContainer","run","IdleGovToken","classCallCheck","getBalance","claimRewards","getPriorVotes","priorVotes","_args3","refreshIdleSpeed","getUnclaimedTokens","getAPR","IDLETokenConfig","cachedDataKey","APR","idleDistribution","tokenAllocation","DAITokenConfig","tokenPool","idleDistributedPerYearUSD","_args6","getDistribution","getUniswapConversionRate","totalAllocationWithUnlent","getSpeed","idleTokenAddress","idleSpeeds","getCachedDataWithLocalStorage","setCachedDataWithLocalStorage","_x5","_ref10","distribution","_x6","getUserDistribution","_callee10","fixByFrequency","totalSpeed","_args10","_context10","_ref12","_callee9","_ref13","_ref14","idleSpeed","userPoolShare","tokenSpeed","_context9","getUserPoolShare","_x7","fixDistributionSpeed","getAvgApr","_callee12","_args12","_context12","_ref16","_callee11","_ref17","_ref18","idleApr","_context11","_x8","ethereumjsABI","require","idleGovToken","trimEth","utils","BN","toEth","wei","fromWei","toWei","htmlDecode","childNodes","nodeValue","BNify_obj","BigNumber","String","_len","Array","_key","moment","customLogError","_console","_len2","_key2","console","normalizeSimpleIDNotification","str","arr1","arr2","stripHtml","html","tmp","textContent","innerText","scrollTo","to","scrollY","change","currentTime","easeInOutQuad","animateScroll","val","getQueryStringParameterByName","results","RegExp","exec","decodeURIComponent","depositProxyContractInfo","migrationContractAddr","migrationContractOldAddrs","batchMigrationContractAddr","isMigrationTx","isSendTransferTx","isReceiveTransferTx","isDepositTx","isRedeemTx","isSwapTx","orderedTokensBalance","totalBalanceConverted","tokenBalanceConverted","getCurveAvgSlippage","processedHashes","curveTokensBalance","curveTxs","avgSlippage","totalDeposited","_args4","getCurveAvailableTokens","getCurveTxs","curveTokens","curveTokenPrice","price","received","slippage","getCurveAvgBuyPrice","_args5","prevAvgBuyPrice","idleTokensBalance","getFirstDepositTx","deposits","_args7","firstDepositTx","asyncTimeout","ms","getDepositTimestamp","firstDepositTxs","_args8","acc","_ref11","userAvgPrice","getAmountLent","amountLents","getEtherscanBaseTxs","endBlockNumber","firstIdleBlockNumber","etherscanInfo","etherscanBaseTxs","etherscanBaseEndpoint","etherscanApiUrl","lastCachedTx","lastCachedBlockNumber","etherscanEndpointLastBlock","latestTxs","latestBlockNumbers","txs","requestCount","requestStatus","cachedRequests","_args11","REACT_APP_ETHERSCAN_KEY","getCachedRequest","result","makeCachedRequest","filterEtherscanTxs","toConsumableArray","saveEtherscanTxs","filterCurveTxs","txsToStore","cachedRequest","saveCachedRequest","_callee13","allAvailableTokens","_args13","_context13","processStoredTxs","_ref19","_callee14","_args14","_context14","_ref20","_callee15","curveTransfersTxs","curveTransfersTxsToDelete","curveZapContract","curvePoolContract","curveSwapContract","curveDepositContract","_args15","_context15","tokenMigrationToolParams","curveTokenConfig","idleToken","internalTxs","isRightToken","iTx","isBatchMigrationTx","isDepositInternalTx","iTx2","isRedeemInternalTx","isConversionTx","isWithdrawTx","curveTx","isCurveTx","isCurveDepositTx","isCurveRedeemTx","isCurveDepositIn","isCurveDepositOut","isCurveZapIn","isCurveZapOut","isCurveTransferOut","isCurveTransferIn","isSwapOutTx","tokenDecimal","tokenValue","newValue","iTxs","withdrawnValue","processEtherscanTransactions","addStoredTransaction","txKey","tokenKey","storedTxs","getStoredTransactions","updateStoredTransactions","getStoredItem","_ref21","_callee20","txReceipts","baseTokensConfigs","baseTokensAddresses","curveAvailableTokens","_args20","_context20","baseTokenAddress","_ref22","_callee19","minedTxs","_context19","_ref23","_callee18","storedTx","tokensTransfered","_curveTokenPrice","_curveTokenPrice2","curveTxReceipt","filteredLogs","_curveTokenPrice3","_curveTxReceipt","idleTokenDecimals","_filteredLogs","_context18","getCurveTokenPrice","t1","_ref24","_callee16","_context16","getTransactionReceipt","_x11","_x12","baseTokensConfig","t2","_ref25","_callee17","_context17","_x13","_x14","_x9","_x10","_ref26","_callee26","txsToProcess","_args26","_context26","_ref27","_callee25","_context25","_ref28","_callee24","isStoredTx","allowedMethods","pendingStatus","txPending","isMetaTx","methodIsAllowed","realTx","txValue","redeemedValueFixed","executeMetaTransactionReceipt","executeMetaTransactionContractAddr","executeMetaTransactionInternalTransfers","IdleProxyMinterInfo","internalTransfer","metaTxValue","metaTxValueFixed","migrationTxReceipt","migrationTxInternalTransfers","migrationInternalTransfer","decodedLogs","migrationValue","migrationValueFixed","_context24","mintIdleToken","redeemIdleToken","migrateFromToIdle","mintIdleTokensProxy","migrateFromAaveToIdle","migrateFromIearnToIdle","executeMetaTransaction","migrateFromFulcrumToIdle","migrateFromCompoundToIdle","method","created","_ref29","_callee21","_context21","_x19","_x20","_ref30","_callee22","_context22","_x21","_x22","raw","_ref31","_callee23","_context23","_x23","_x24","decodeLog","_token","_x17","_x18","_x16","_x15","alias","getCustomAddress","setCustomAddress","customAddress","_ref32","_callee27","error_callback","_args27","_context27","catch","_x25","_ref33","_callee28","return_data","_args28","_context28","_x26","code","errorCode","array","prop","shift","configs","checkUrlOrigin","checkUrlBeta","_ref34","_callee30","googleEventsInfo","originOk","currentNetwork","_args30","_context30","ga","_ref35","_callee29","_context29","hitCallback","hitCallbackFail","_x28","_x29","_x27","createContract","_ref36","_callee31","_context31","Contract","_x30","_x31","_x32","getWalletProvider","simpleIDPassUserInfo","userInfo","email","initSimpleID","passUserInfo","getEtherscanTransactionUrl","tx_address","getEtherscanAddressUrl","decimalCount","thousands","abs","negativeSign","Number","getSnapshotProposals","_callee34","activeOnly","validProposals","_args34","_context34","getCachedData","addr","msg","_ref38","_callee33","checkedStrategies","_context33","metadata","_ref39","_callee32","_context32","symbol","_x34","_x33","_ref40","_callee35","forceStartTimestamp","order","limit","filteredCachedData","_filteredData","apiInfo","filteredData","_args35","_context35","_x35","_ref41","_callee36","_context36","_x36","aprs","allocations","aprWeighted","allocation","apr","quantity","hour","day","week","getProtocolInfoByAddress","ROUND_FLOOR","normalizeTokenDecimals","normalizedTokenDecimals","exchangeRate","checkContractPaused","_callee37","contractPaused","_args37","_context37","parse_json","return_default","clearStoredData","excludeKeys","clear","storedKeysToRemove","storedKey","removeStoredItem","removeItem","setItem","checkRebalance","_ref43","_callee39","lastAllocationsPromises","protocolIndex","newAllocations","diff","_context39","lastAllocationsPromise","_ref44","_callee38","lastAllocations","_context38","_x38","_x39","alloc","_x37","checkMigration","_ref45","_callee40","oldContractBalance","oldContractTokenDecimals","oldContractBalanceFormatted","oldContractName","_context40","getContractBalance","_x40","_x41","_ref46","_callee41","callback_receipt","_contract$methods","_context41","getGasPrice","once","confirmationNumber","receipt","_x42","_x43","_x44","_x45","_x46","getSignatureParameters_v4","signature","isHexStrict","Error","hexToNumber","constructMetaTransactionMessage","nonce","functionSignature","soliditySHA3","toBuffer","checkBiconomyLimits","_ref47","_callee42","biconomyInfo","res","_context42","x-api-key","_x47","sendTxWithPermit","_ref48","_callee43","_contract$methods2","messageToSign","_this$getSignaturePar","_context43","encodeABI","_address","personal","sign","_x48","_x49","_x50","_x51","_x52","_x53","buildBiconomyErc20ForwarderTx","_ref49","_callee44","tokenAddress","callData","gasLimit","_context44","erc20ForwarderClient","buildTx","txGas","_x54","_x55","_x56","_x57","_x58","sendBiconomyTxWithErc20Forwarder","_ref50","_callee45","req","metaInfo","txResponse","fetchReceiptIntervalId","_context45","permitAndSendTxEIP712","setInterval","clearInterval","updateTransaction","_x59","_x60","_x61","_x62","sendBiconomyTxWithPersonalSign","_ref51","_callee46","_this$getSignaturePar2","_context46","getNonce","call","_x63","_x64","_x65","_x66","signPermitEIP2612","_ref52","_callee47","erc20Name","owner","spender","deadline","domain","domainData","_context47","getChainId","verifyingContract","types","EIP712Domain","Permit","primaryType","currentProvider","jsonrpc","substring","_x67","_x68","_x69","_x70","_x71","_x72","_x73","_x74","_ref53","_callee48","baseContractName","holder","spenderContractName","addToNonce","baseContract","spenderContract","permitConfig","_args48","_context48","net","getId","allowed","response","_x75","_x76","_x77","_ref54","_callee49","permitParams","methodAbi","useNonce","_args49","_context49","_jsonInterface","f","inputs","unshift","_x78","_x79","_x80","_x81","_x82","_x83","_x84","sendSignedTx","_ref55","_callee50","MetaTransaction","dataToSign","_context50","_x85","_x86","_x87","_x88","_x89","_ref56","_callee51","contractAddr","walletAddr","_ref57","_ref58","allowance","_context51","getAllowance","_x90","_x91","_x92","_ref59","_callee52","_context52","_x93","_x94","_x95","txData","disableERC20","toTwosComplement","loadAssetField","_ref60","_callee53","field","addCurveApy","strategyInfo","govTokenAvailableTokens","newTokenConfig","_ref61","_ref62","curveAvgSlippage","curveAvgBuyPrice","curveTokenBalance","_ref63","_ref64","amountLentCurve1","redeemableBalanceCurve","_ref65","_ref66","curveApy","amountLentCurve","redeemableBalanceCurveStart","redeemableBalanceCurveEnd","earningPerYear","_ref67","_ref68","amountLent1","redeemableBalance1","depositTimestamp","_idleGovToken","govTokenConfig","blocksPerDay","blocksPerWeek","blocksPerMonth","_idleGovToken2","_idleGovToken3","tokenApys","curveAPY","_ref69","_ref70","tokenPriceFirstDeposit","_ref71","_ref72","daysFirstDeposit","depositTimestamps","_govTokenConfig","_ref73","_ref74","tokenAPY1","amountLent2","redeemableBalanceStart","redeemableBalanceEnd","_earningPerYear","_govTokenConfig2","_ref75","_ref76","idleTokenPrice1","idleTokenBalance2","govTokensBalance","_tokenBalance","redeemableBalance","_ref77","_ref78","amountLentCurve2","redeemableBalanceCurve1","_ref79","_ref80","redeemableBalance2","_args53","_context53","getCurveTokenBalance","getCurveAPY","getCurveRedeemableIdleTokens","getGovTokenPool","getTokenPool","getCompUserDistribution","getIdleGovToken","t3","getCompDistribution","t4","getCompAvgApr","t5","t6","t7","getUserTokenFees","t8","t9","getGovTokenUserBalance","_x96","_x97","_x98","_x99","getIdleTokenSupply","_ref81","_callee54","idleTokenSupply","_args54","_context54","_x100","getIdleTokenPriceWithFee","_ref82","_callee55","_ref83","_ref84","priceWFee","_args55","_context55","eq","_x101","_x102","_ref85","_callee56","tokenData","beforePrice","afterPrice","tokenPriceBefore","tokenPriceAfter","timeBefore","timeAfter","timeDiff","priceDiff","priceAcceleration","timeDiffFromBeforePrice","_args56","_context56","_x103","clearCachedData","useLocalStorage","_ref86","_callee57","_ref87","_ref88","idleTokensTotalSupply","userShare","_context57","_x104","_x105","_callee59","_args59","_context59","_ref90","_callee58","coverageTokens","protocolImage","_context58","_x106","_ref91","_callee60","etherscanEndpoint","_context60","_x107","_callee62","filter_by_status","_args62","_context62","_ref93","_callee61","_ref94","_ref95","_context61","_x108","_ref96","_callee63","fixDecimals","_args63","_context63","_x109","_ref97","_callee64","_ref98","_ref99","_args64","_context64","_x110","_x111","copyToClipboard","copyText","setSelectionRange","execCommand","loadScript","attr","isValidJSON","checkAddress","_ref100","_callee65","_args65","_context65","_x112","_x113","getProtocolBalance","_ref101","_callee66","_context66","_x114","_x115","getAprs","_ref102","_callee67","_context67","_x116","genericIdleCall","_ref103","_callee68","callParams","_args68","_context68","_x117","estimateGas","_ref104","_callee69","_contract$methods3","_args69","_context69","_x118","_x119","getTxDecodedLogs","_ref105","_callee71","logAddr","decodeLogs","internalTransfers","_context71","_ref106","_callee70","_context70","_x124","_x125","_x120","_x121","_x122","_x123","blocksToSeconds","blocks","blocksPerSeconds","getBlockNumber","_callee72","_context72","getContractPastEvents","_ref108","_callee73","_args73","_context73","getPastEvents","_x126","_x127","_ref109","_callee74","_contract$methods4","_args74","_context74","_x128","_x129","_ref110","_callee75","_args75","_context75","_x130","_x131","apr2apy","getUnlentBalance","_ref111","_callee76","unlentBalance","_context76","_x132","_ref112","_callee77","_args77","_context77","_x133","_ref113","_callee79","protocolsAprs","exchangeRates","protocolsBalances","govTokensBalances","_args79","_context79","totalAllocationConverted","totalAllocationWithUnlentConverted","_ref114","_callee78","_ref115","_ref116","protocolBalance","protocolAllocation","_context78","_x135","_x136","protocolAllocationPerc","getGovTokensBalances","total","getTokenConversionRate","_x134","getUniswapConversionRate_path","_ref117","_callee80","unires","_context80","_x137","_ref118","_callee81","tokenConfigFrom","tokenConfigDest","WETHAddr","_context81","_x138","_x139","getCurveDepositedTokens","_ref119","_callee82","idleTokensBalances","remainingCurveTokens","_args82","_context82","_x140","getCurveUnevenTokenAmounts","_ref120","_callee83","amounts","max_burn_amount","unevenAmounts","_context83","getCurveDepositContract","_x141","_x142","_callee84","curveRatesInfo","_context84","strategyTokens","getCurveAPYContract","_callee85","blocksForPrevTokenPrice","_ref123","_ref124","prevTokenPrice","blocksMultiplier","curveAPR","_context85","getCurveTokenSupply","_callee86","_context86","getCurvePoolContract","_callee87","_args87","_context87","_callee88","_args88","_context88","_ref128","_callee89","_ref129","_ref130","_context89","_x143","_callee90","depositContractInfo","_context90","getCurveZapContract","_callee91","zapContractInfo","_context91","_callee92","poolContractInfo","_context92","getCurveSwapContract","_callee93","_context93","getCurveIdleTokensAmounts","_callee95","max_slippage","curveTokenSupply","curveTokenShare","_args95","_context95","_ref136","_callee94","curveIdleTokens","_context94","_x144","getCurveTokensAmounts","_callee97","useCoinIndex","_args97","_context97","_ref138","_callee96","_ref139","_ref140","totalTokenSupply","_context96","_x145","getCurveAmounts","_ref141","_callee99","_args99","_context99","_ref142","_callee98","_context98","_x148","_x146","_x147","getCurveTokenAmount","_ref143","_callee100","_args100","_context100","_x149","getCurveSlippage","_ref144","_callee101","uneven_amounts","_ref145","_ref146","virtualPrice","Sv","_args101","_context101","_x150","_x151","getCompAPR","_ref147","_callee102","cTokenIdleSupply","compConversionRate","COMPTokenConfig","compAPR","compDistribution","compValue","_args102","_context102","_x152","_x153","getCompSpeed","_ref148","_callee103","cTokenAddress","compSpeed","_context103","_x154","_ref149","_callee104","annualize","cTokenInfo","compoundAllocationPerc","_ref150","_ref151","cTokenTotalSupply","compoundPoolShare","_args104","_context104","_x155","_callee106","_args106","_context106","_ref153","_callee105","_ref154","_ref155","_context105","_x156","_callee108","_args108","_context108","_ref157","_callee107","_ref158","_ref159","compApr","_context107","_x157","getTokensCsv","_callee111","csv","_context111","prototype","sum","pv","cv","avg","_ref161","_callee110","_context110","_ref162","_callee109","header","aprAvg","scoreAvg","lastRow","_context109","protocolsData","p1","foundProtocol","p2","rate","idleRate","score","idleScore","pInfo","pData","pRate","pScore","defiScore","additionalRate","avgRate","_x159","_x158","_callee113","_args113","_context113","_ref164","_callee112","compTokenBalance","_context112","_x160","getTokenGovTokens","speed","getGovTokensUserDistributionSpeed","_ref165","_callee115","govTokensUserDistribution","_args115","_context115","_ref166","_callee114","_context114","_x162","_x161","getGovTokensDistributionSpeed","_ref167","_callee117","govTokensDistribution","_args117","_context117","_ref168","_callee116","govSpeed","_context116","_x164","_x163","getGovTokensAprs","_ref169","_callee119","govTokensAprs","_args119","_context119","_ref170","_callee118","_ref171","_ref172","compoundInfo","_context118","_x167","_x165","_x166","_callee121","_args121","_context121","_ref174","_callee120","tokenConversionRate","fromTokenConfig","_context120","_x168","getGovTokenConfigByAddress","_callee122","checkShowBalance","govTokensEarnings","_args122","_context122","govTokenAmount","_callee125","govTokenConfigForced","_args125","_context125","_ref177","_callee124","idleTokenConfig","govTokensAmounts","_context124","_ref178","_callee123","govTokenIndex","govTokenAddress","_context123","_x170","_x171","_x169","getTokenFees","_callee126","_args126","_context126","_callee127","_ref181","_ref182","gain","fees","_args127","_context127","_ref183","_callee128","_args128","_context128","_x172","getTotalTVL","_callee129","tokensTVL","_context129","getTokensTVL","totalTVL","tokenTVL","_callee133","_context133","_ref186","_callee132","_context132","_ref187","_callee131","oldTokenTVL","idleTokenName","_ref188","_ref189","totalSupply","oldTokenConfig","_ref193","_ref194","oldTokenPrice","oldTotalSupply","_context131","_ref190","_callee130","_ref191","_ref192","govTokenConversionRate","govTokenBalanceConverted","_context130","_x175","oldProtocols","oldProtocol","protocolPos","_x174","_x173","getSubstackLatestFeed","_callee134","endpointInfo","idleSubstackFeed","latestFeed","_context134","items","getAggregatedStats","_callee135","totalAUM","_args135","_context135","getAggregatedStats_chain","_callee139","avgAPR","_args139","_context139","_ref198","_callee138","_context138","_ref199","_callee137","tokenAUM","oldTokenAllocation","oldTokenTotalAllocation","_context137","_ref200","_callee136","_ref201","_ref202","_context136","_x178","_x177","_x176","getTokenApy","_ref203","_callee140","_context140","_x179","_callee143","_args143","_context143","_ref205","_callee142","_context142","_ref206","_callee141","_ref207","_context141","_x181","_x180","getProtocolsTokensBalances","_callee145","tokenBalances","minTokenBalance","protocolsTokens","_args145","_context145","_ref209","_callee144","tokenContract","_context144","_x182","_ref210","_callee146","_args146","_context146","_x183","_x184","_x185","getAvgAPYStats","_ref211","_callee147","apiResults","_args147","_context147","_x186","_x187","_ref212","_callee148","_conversionRate","_args148","_context148","_x188","_x189","_ref213","_callee149","_ref214","_ref215","_context149","protocolScore","getTokenScoreApi","_x190","_x191","_ref216","_callee150","_context150","_x192","_x193","_ref217","_callee152","Aprs","addresses","protocolsApys","idleGovTokenShowAPR","idleAPR","_args152","_context152","_ref218","_callee151","addrIndex","protocolApr","protocolApy","_context151","_x195","_x196","_x194","isNegative","suffixNum","decimalPart","mod","toPrecision","difference","maxLen","highlightedDecimals","numLen","intPart","decPart","repeat","highlightedDec","highlightedIntPart","mouseOver","isVisible","isRainbow","active","onMouseOut","setMouseOver","onMouseOver","Tos","h2","listStyle","Footer","theme_dark","TorusConnector","kwargs","Torus","api","rest","objectWithoutProperties","possibleConstructorReturn","getPrototypeOf","buttonPosition","init","login","getUserInfo","getPublicAddress","verifier","verifierId","logout","updateNetworkId","Connector","AuthereumConnector","Authereum","getProvider","enable","getAccounts","accounts","disable","constructor","WalletLinkConnector","WalletLink","infuraUrl","appLogoUrl","walletLink","darkMode","makeWeb3Provider","close","WalletConnectConnector","WalletConnectProvider","infuraId","defaultNetwork","InjectedConnector","Connectors","NetworkOnlyConnector","TrezorConnector","LedgerConnector","FortmaticConnector","PortisConnector","manifestEmail","REACT_APP_TREZOR_MANIFEST_EMAIL","manifestAppUrl","REACT_APP_TREZOR_MANIFEST_URL","fortmaticApiKey","REACT_APP_FORTMATIC_KEY_MAINNET","portisDAppId","REACT_APP_PORTIS_DAPP_ID","portisNetwork","REACT_APP_PORTIS_NETWORK","supportedNetworkURLs","REACT_APP_INFURA_KEY","Injected","Infura","providerURL","Trezor","TrezorApi","Ledger","WalletConnect","bridge","Fortmatic","FortmaticApi","logoutOnDeactivation","Portis","PortisApi","dAppId","AuthereumApi","TorusApi","buildEnv","enableLogging","host","showTorusButton","WrongNetworkBanner","current","NetworkUtil","isCorrectNetwork","components_WrongNetworkBanner","NoWeb3BrowserModal","renderContent","RimbleUtil","isMobileDevice","bold","isOpen","ModalCard","closeFunc","closeModal","Body","NoWalletModal","icononly","Outline","GeneralUtil","hasMetaMask","isMetaMask","isTrustWallet","isTrust","isCoinbaseWallet","hasDapper","DapperEthereum","isDapper","isOpera","isAndroid","isIos","MSStream","WrongNetworkModal","RimbleUtils","TransactionFeeModal","Header","subtitle","subtitle2","Web3ConnectionButtons","context","useWeb3Context","setConnector","walletProvider","connectionCallback","unsetConnector","isMetamask","browserWalletDetected","allowedConnectors","registerPage","registerPageByDefault","basicConnectorsName","connectorInfo","walletIcon","ConnectionModal","validated","showTxFees","currentSection","showInstructions","askCustomAddress","closeRemainingTime","customAddressError","newToEthereumChoice","toggleShowTxFees","setStoredSection","componentDidUpdate","resetModal","closeCountdown","setWalletChoice","choice","setCurrentSection","connectCustomAddress","updateCustomAddress","renderModalContent","TOSacceptance","react_router_dom","newToEthereum","showConnectionButtons","pattern","assertThisInitialized","marginBottom","renderFooter","components_TransactionFeeModal","ConnectionPendingModal","UserRejectedConnectionModal","sendMessageAgain","initAccount","LowFundsModal","showSecondary","toggleQRVisible","alignContent","as","h5","ConnectionModalUtil","components_NoWeb3BrowserModal","closeNoWeb3BrowserModal","noWeb3BrowserModalIsOpen","components_NoWalletModal","closeNoWalletModal","noWalletModalIsOpen","components_WrongNetworkModal","closeWrongNetworkModal","wrongNetworkModalIsOpen","components_ConnectionModal","validateAccount","closeConnectionModal","connectionModalIsOpen","accountValidated","components_ConnectionPendingModal","closeConnectionPendingModal","accountConnectionPending","components_UserRejectedConnectionModal","closeUserRejectedConnectionModal","userRejectedConnect","components_LowFundsModal","closeLowFundsModal","lowFundsModalIsOpen","ConnectionErrorModal","setFirstValidConnector","closeConnectionErrorModal","isLedger","connectionError","TransactionErrorModal","closeTransactionErrorModal","isLedgerError","transactionError","isSlowTxError","INFURA_KEY","RimbleTransactionContext","createContext","web3Infura","permitClient","accountBalance","initWeb3","accountBalanceLow","accountBalanceToken","checkPreflight","checkNetwork","accountInizialized","rejectValidation","accountValidationPending","initializeContracts","rejectAccountConnect","enableUnderlyingWithdraw","userRejectedValidation","transactionConnectionModalIsOpen","openLowFundsModal","openWrongNetworkModal","openNoWeb3BrowserModal","openConnectionErrorModal","openTransactionErrorModal","openConnectionPendingModal","openUserRejectedConnectionModal","openUserRejectedValidationModal","closeUserRejectedValidationModal","meta","setConnectorName","biconomyLoginProcessing","RimbleTransaction","testTransaction","createTransaction","addTransaction","errorMessage","isWalletConnectClosedModalError","tokenChanged","availableStrategiesChanged","metamaskProvider","connectorNameChanged","web3Host","web3Provider","forceCallback","terminalInfo","TerminalHttpProviderParams","terminalSourceType","terminalHttpProvider","web3Callback","originalWeb3","biconomyWeb3Provider","detectEthereumProvider","autoRefreshOnNetworkChange","Web3","HttpProvider","library","SourceType","customHttpProvider","TerminalHttpProvider","web3Injected","callbackAfterLogin","setCallbackAfterLogin","isLogin","userContract","Biconomy","onEvent","READY","ERROR","useInfuraProvider","simpleIDInfo","simpleIDParams","SimpleID","wallets","shownNotifications","isError","$crisp","notificationId","content","Sentry","increaseAmount","_ref15","balanceOf","determineAccountLowBalance","openConnectionModal","getRequiredNetwork","getNetworkId","getNetworkName","getNetworkType","contractMethod","_this$state","manualConfirmationTimeoutId","confirmationCallback","manualConfirmation","receiptCallback","isDeniedTx","_args24","confirmationCount","confidenceThreshold","recentEvent","timeout","lastUpdated","updatedTransaction","openNoWalletModal","CrispClient","accountBalanceDAI","subscribedTransactions","connectionErrorModalOpened","transactionErrorModalOpened","Provider","ConnectionModalsUtil","components_TransactionErrorModal","components_ConnectionErrorModal","utilities_NetworkUtil","Consumer","governanceEnabled","offsetTop","ScrollToTop","pathname","useLocation","useEffect","PageNotFound","Header_styles","NetworkOverview","getNetworkCircleColor","circleColor","networkCircle","DebuggerButtons","Web3Debugger","components_NetworkOverview","Web3Debugger_DebuggerButtons","node","constant","outputs","payable","stateMutability","anonymous","indexed","ERC20","govTokensDisabled","defiPrime","IdleTokenV4","cToken","yToken","iToken","aToken","CHAI","skipMintForDeposit","TransactionToastMessages","started","confirmed","TransactionToastUtil","collectionHasNewObject","prevCollection","currentCollection","getNewObjectFromCollection","objectKey","getUpdatedObjectFromCollection","object","getTransactionFromCollection","identifier","collection","getUpdatedTransaction","currentTx","prevTx","processTransactionUpdates","showTransactionToast","toastMeta","getTransactionToastMeta","closeElem","transactionToastMeta","transactionAction","charAt","newMessage","Landing","lazy","then","Dashboard","Governance","App","selectedTab","connecting","genericError","selectedTheme","buyModalOpened","toastMessageProps","innerWidth","innerHeight","unsubscribeFromHistory","closeToastMessage","showToastMessage","processCustomParam","cachedKeyFound","storedCachedData","widthChanged","heightChanged","tabIndex","loadAvailableTokens","warn","jQuery","setThemeMode","closeIframe","w","iFrames","getElementsByTagName","iframe","contentWindow","parents","loadCustomAddress","strategyChanged","self","parent","hasMetamask","store","themeDark","SuspenseLoader","web3_react_dist_default","web3Api","libraryName","web3_react_dist","RimbleWeb3","needsPreflight","react_router","react","fallback","isDashboard","setToken","setStrategy","openBuyModal","handleMenuClick","selectTab","closeBuyModal","isGovernance","components_Header","src_Web3Debugger_Web3Debugger","exact","updateSelectedTab","expires","acceptOnScroll","cookieName","acceptOnScrollPercentage","marginTop","overflowY","src_Tos_Tos","src_PageNotFound_PageNotFound","utilities_TransactionToastUtil","Boolean","hostname","dsn","beforeSend","hint","originalException","ReactDOM","src_App_App","serviceWorker","ready","registration","unregister","FieldComponent","colInfo","colIndex","visible","fieldIndex","colProps","_TableCellHeader_TableCellHeader__WEBPACK_IMPORTED_MODULE_7__","oldTokenName","oldIdleTokens","skipMigration","biconomyLimitReached","toggleSkipMigration","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_5__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_4__","executeAction","idleTokenToRedeem","_clientProtocolAmountsRedeem","gasLimitRedeem","callbackRedeem","callbackReceiptRedeem","toggleMetaTransactionsEnabled","checkMigrationContractApproved","migrationContractName","tokenApproved","oldIdleTokensConverted","oldContractInfo","oldContractABI","biconomyLimits","disapproveMigration","approveMigration","migrationMethod","callbackMigrate","callbackReceiptMigrate","useMetaTx","_skipRebalance","_migrationContract$me","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","biconomyChanged","usePermitChanged","fastBalanceSelectorChanged","batchMigrationEnabled","SkipMigrationComponent","react__WEBPACK_IMPORTED_MODULE_11___default","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_16__","rimble_ui__WEBPACK_IMPORTED_MODULE_20__","biconomyEnabled","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_13__","migrateTextBefore","migrateText","_TransactionField_TransactionField__WEBPACK_IMPORTED_MODULE_18__","_TxProgressBar_TxProgressBar__WEBPACK_IMPORTED_MODULE_17__","_FastBalanceSelector_FastBalanceSelector__WEBPACK_IMPORTED_MODULE_19__","functionName","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_14__","migrationImage","migrationTextProps","approveText","_TableHeader_TableHeader__WEBPACK_IMPORTED_MODULE_11__","_TableRow_TableRow__WEBPACK_IMPORTED_MODULE_9__","footer","polished__WEBPACK_IMPORTED_MODULE_0__","darkBlue","blurple","consensysblue","readableColor","VariationNumber","IconDirection","iconSize","iconPos","loading-dots","loading-dots--dot","dot-keyframes","selectedProvider","availableProviders","renderPaymentMethod","currentState","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__","goBack","componentWillMount","getProviderInfo","newProviderInfo","getDefaultPaymentProvider","paymentMethod","getAvailablePaymentProviders","providerSupportMethod","providerSupportToken","defaultPaymentProvider","selectProvider","ethAvailable","tokenAvailable","selectMethod","loadRemoteResources","handleCountryChange","getAvailableCountries","availableCountries","countryCode","methodInfo","loadAvailableMethods","InnerComponent","_ImageButton_ImageButton__WEBPACK_IMPORTED_MODULE_12__","imagePropsExtended","react_select__WEBPACK_IMPORTED_MODULE_10__","noOptionsMessage","_ModalCard__WEBPACK_IMPORTED_MODULE_11__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1___default","rimble_ui__WEBPACK_IMPORTED_MODULE_3__","bgLayer","backgroundRepeat","backgroundPosition","backgroundSize","backgroundImage","iconHeight","subtitleProps","BackButton","currYear","getFullYear","columnWidth","react__WEBPACK_IMPORTED_MODULE_9___default","rimble_ui__WEBPACK_IMPORTED_MODULE_12__","_ExtLink_ExtLink__WEBPACK_IMPORTED_MODULE_8__","role","aria-label","react_router_dom__WEBPACK_IMPORTED_MODULE_7__","ColTitle","useIconOnly","fieldName","earningsCounter","feesStart","feesEnd","earningsCurveStart","earningsCurveEnd","tokenAPY2","tokenAPR","allocationChartWidth","allocationChartHeight","resizeAllocationChart","aprChartEndTimestamp","aprChartStartTimestamp","aprChartData","mDate","newPoint","aprChartWidth","aprChartHeight","resizeAprChart","aprChartType","aprChartProps","firstTokenPrice","firstIdleBlock","performanceChartWidth","performanceChartHeight","resizePerformanceChart","apr_end_date","apr_start_date","apr_start_timestamp","apiResultsPerformanceChart","idleTokenPerformance","performanceChartData","performanceChartType","performanceChartProps","_args","amountToMigrate","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","poolSize","earningsPercCurveDirection","earningsPercCurve","earningsPercDirection","oldAPY","tokenAPYNoGov","allocationChartRowElement","$allocationChartRowElement","css","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_9__","_d","add","random","aprChartRowElement","$aprChartRowElement","lineWidth","defs","linearGradientDef","offset","react__WEBPACK_IMPORTED_MODULE_12___default","_CustomTooltip_CustomTooltip__WEBPACK_IMPORTED_MODULE_17__","protocolEarning","_CustomTooltip_CustomTooltipRow__WEBPACK_IMPORTED_MODULE_20__","PerformanceChartRowElement","$PerformanceChartRowElement","blocknumber","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_1__","fieldChanged","contractInitialized","loader","rimble_ui__WEBPACK_IMPORTED_MODULE_21__","icon1","tooltipProps","icon2","strategyName","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_14__","react_countup__WEBPACK_IMPORTED_MODULE_11___default","_VariationNumber_VariationNumber__WEBPACK_IMPORTED_MODULE_18__","earningsCurve","governanceTokenName","tooltipMode","buttonLabel","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_16__","_AllocationChart_AllocationChart__WEBPACK_IMPORTED_MODULE_19__","formattedValue","_isBigNumber"],"mappings":"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","file":"static/js/main.7662c741.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Flex, Loader, Text } from \"rimble-ui\";\n\nclass FlexLoader extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        justifyContent={'center'}\n        {...this.props.flexProps}\n      >\n        <Loader {...this.props.loaderProps} />\n        {\n          this.props.text &&\n            <Text {...this.props.textProps}>{this.props.text}</Text>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default FlexLoader;\n","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\n\nclass ChartCustomTooltipRow extends Component {\n\n  async componentWillMount(){\n    \n  }\n\n  async componentDidUpdate(prevProps,prevState){\n\n  }\n\n  render() {\n    return (\n      <Flex\n        mb={2}\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n      >\n        <Flex\n          pr={2}\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-start'}\n        > \n          {\n            this.props.color && \n            <Box\n              mr={2}\n              width={'10px'}\n              height={'10px'}\n              borderRadius={'50%'}\n              backgroundColor={this.props.color}\n            >\n            </Box>\n          }\n          <Text\n            fontSize={1}\n            fontWeight={2}\n            textAlign={'left'}\n            color={'dark-gray'}\n            style={{\n              textTransform:'capitalize'\n            }}\n          >\n            {this.props.label}\n          </Text>\n        </Flex>\n        <Flex\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-end'}\n        >\n          <Text\n            fontSize={1}\n            fontWeight={3}\n            color={'cellText'}\n            textAlign={'right'}\n            style={{\n              whiteSpace:'nowrap'\n            }}\n            dangerouslySetInnerHTML={{\n              __html: this.props.value\n            }}\n          >\n          </Text>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default ChartCustomTooltipRow;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"PageNotFound_headerContainer__Ly5Tz\",\"headerBgFiller\":\"PageNotFound_headerBgFiller__1NzlO\",\"bgContainer\":\"PageNotFound_bgContainer__1Racj\",\"list\":\"PageNotFound_list__Cnz-b\",\"textContainer\":\"PageNotFound_textContainer__g_kTm\"};","import React from \"react\";\nimport { Text } from \"rimble-ui\";\n\nclass ShortHash extends React.Component {\n  shortenHash = hash => {\n    let shortHash = hash;\n    const txStart = shortHash.substr(0, 7);\n    const txEnd = shortHash.substr(shortHash.length - 4);\n    shortHash = txStart + \"...\" + txEnd;\n    return shortHash;\n  };\n  render() {\n    const shortHash = this.shortenHash(this.props.hash);\n\n    return <Text display={'inline'} {...this.props}>{shortHash}</Text>;\n  }\n}\n\nexport default ShortHash;\n","import React, { Component } from 'react';\nimport {\n  Flex, Box\n} from \"rimble-ui\";\nimport styles from './LoadingSpinner.module.scss';\n\nclass LoadingSpinner extends Component {\n  render() {\n    return (\n      <Flex\n        alignItems={'center'}\n        justifyContent={'center'}\n      >\n        <Box className={[styles[\"loading-dots\"]]}>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n        </Box>\n      </Flex>\n    );\n  }\n}\n\nexport default LoadingSpinner;\n","import React, { Component } from 'react';\nimport {\n  Flex,\n  Button\n} from \"rimble-ui\";\nimport LoadingSpinner from '../LoadingSpinner/LoadingSpinner.js';\n\nclass ButtonLoader extends Component {\n  render() {\n    return (\n       <Button\n        onClick={this.props.handleClick}\n         {...this.props.buttonProps}\n       >\n        <Flex flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n          <Flex width={1} display={ this.props.isLoading ? 'flex' : 'none' }>\n            <LoadingSpinner />\n          </Flex>\n          <Flex width={1} display={ this.props.isLoading ? 'none' : 'flex' }>\n            {this.props.buttonText}\n          </Flex>\n        </Flex>\n       </Button>\n    );\n  }\n}\n\nexport default ButtonLoader;\n","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass SmartNumber extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  render() {\n    let formattedNumber = '-';\n    const number = typeof this.props.number !== 'undefined' && !isNaN(this.props.number) && this.props.number !== false && this.props.number !== null ? this.props.number : null;\n\n    if (number){\n      switch (this.props.type){\n        case 'money':\n          formattedNumber = this.functionsUtil.formatMoney(number,this.props.precision);\n        break;\n        default:\n          formattedNumber = this.functionsUtil.abbreviateNumber(number,this.props.decimals,this.props.maxPrecision,this.props.minPrecision);\n        break;\n      }\n    } else {\n      formattedNumber = '-';\n    }\n\n    const flexProps = {\n      width:1,\n      alignItems:'center',\n      flexDirection:'row',\n      justifyContent:'center'\n    };\n\n    // Replace props\n    if (this.props.flexProps && Object.keys(this.props.flexProps).length){\n      Object.keys(this.props.flexProps).forEach(p => {\n        flexProps[p] = this.props.flexProps[p];\n      });\n    }\n\n    const showUnit = formattedNumber !== '-';\n    const unitPos = this.props.unitPos ? this.props.unitPos : 'right';\n\n    return (\n      <Flex\n        {...flexProps}\n      >\n        {\n          this.props.unit && unitPos === 'left' && showUnit &&\n            <Text {...this.props.unitProps}>{this.props.unit}</Text>\n        }\n        <Text {...this.props}>{formattedNumber}</Text>\n        {\n          this.props.unit && unitPos === 'right' && showUnit &&\n            <Text {...this.props.unitProps}>{this.props.unit}</Text>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default SmartNumber;\n","import React, { Component } from 'react';\nimport { Icon, Text, Flex } from \"rimble-ui\";\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass IconBox extends Component {\n\n  render() {\n    const cardProps = Object.assign({\n      p:3\n    },this.props.cardProps);\n    return (\n      <DashboardCard\n        cardProps={cardProps}\n      >\n        <Flex\n          alignItems={'center'}\n          flexDirection={'column'}\n        >\n          <Icon\n            size={'1.8em'}\n            color={'cellText'}\n            name={this.props.icon ? this.props.icon : 'InfoOutline'}\n            {...this.props.iconProps}\n          />\n          {\n            this.props.text && \n              <Text\n                mt={1}\n                fontSize={2}\n                color={'cellText'}\n                textAlign={'center'}\n                dangerouslySetInnerHTML={{\n                  __html:this.props.text\n                }}\n                {...this.props.textProps}\n              />\n          }\n          {\n            this.props.children\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default IconBox;\n","import theme from '../theme';\nimport React, { Component } from 'react';\nimport styles from './TransactionListFilters.module.scss';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TableCellHeader from '../TableCellHeader/TableCellHeader';\nimport { Flex, Text, Icon, Radio, Button, Link } from \"rimble-ui\";\n\nclass TransactionListFilters extends Component {\n\n  state = {\n    maxWidth:0.4,\n    minWidth:0.18,\n    maxHeight:425,\n    isOpened:false,\n    activeFilters:{\n      status:null,\n      assets:null,\n      actions:null\n    }\n  }\n\n  setFilter = (filter,value) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:value\n      }\n    }));\n  }\n\n  applyFilters = (toggle=true) => {\n    if (typeof this.props.applyFilters === 'function'){\n      this.props.applyFilters(this.state.activeFilters);\n    }\n    if (toggle){\n      this.toggleOpened();\n    }\n  }\n\n  resetFilter = (filter) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:null\n      }\n    }),() => {\n      this.applyFilters(false);\n    });\n  }\n\n  resetFilters = (toggle=true) => {\n    this.setState({\n      activeFilters:{\n        status:null,\n        assets:null,\n        actions:null\n      }\n    },() => {\n      if (typeof this.props.resetFilters === 'function'){\n        this.props.resetFilters();\n      }\n      if (toggle){\n        this.toggleOpened();\n      }\n    })\n  }\n\n  toggleOpened = () => {\n    this.setState((prevState) => ({\n      isOpened: !prevState.isOpened\n    }));\n  }\n\n  render() {\n    return (\n      <Flex\n        mb={3}\n        top={0}\n        width={1}\n        zIndex={1}\n        flexDirection={'column'}\n        alignItems={'flex-start'}\n        justifyContent={'center'}\n        position={['relative','absolute']}\n      >\n        <DashboardCard\n          cardProps={{\n            py:2,\n            px:3,\n            width:[1, this.state.isOpened ? this.state.maxWidth : this.state.minWidth ],\n            style:{\n              transition:'width 0.3s ease-in-out'\n            }\n          }}\n          isInteractive={ !this.state.isOpened }\n          handleClick={ !this.state.isOpened ? this.toggleOpened : null }\n        >\n          <Flex\n            width={1}\n            style={{\n              cursor:'pointer'\n            }}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'space-between'}\n            onClick={ this.state.isOpened ? this.toggleOpened : null }\n          >\n            <Text\n              fontSize={2}\n              fontWeight={500}\n              color={'copyColor'}\n            >\n              Filters\n            </Text>\n            <Icon\n              color={'copyColor'}\n              size={ this.props.isMobile ? '1.3em' : '1.5em'}\n              name={ this.state.isOpened ? 'Close' : 'Tune' }\n            />\n          </Flex>\n          <Flex\n            flexDirection={'column'}\n            style={{\n              overflow:'hidden',\n              transition:'max-height 0.3s ease-in-out',\n              maxHeight:this.state.isOpened ? this.state.maxHeight : 0\n            }}\n          >\n            <Flex\n              mt={2}\n              py={2}\n              width={1}\n              flexDirection={'row'}\n              borderTop={`1px solid ${theme.colors.divider}`}\n            >\n              {\n                Object.keys(this.props.filters).map((filterCategory) => {\n                  const filterValues = this.props.filters[filterCategory];\n                  return (\n                    <Flex\n                      flexDirection={'column'}\n                      key={`filter_${filterCategory}`}\n                      style={{\n                        flexBasis:'0',\n                        flex:'1 1 0px'\n                      }}\n                    >\n                      <TableCellHeader\n                        pb={2}\n                        fontWeight={3}\n                        fontSize={[0,2]}\n                        color={'cellText'}\n                      >\n                        {filterCategory.toUpperCase()}\n                      </TableCellHeader>\n                      {\n                        Object.keys(filterValues).map((filterValue) => {\n                          const filterLabel = filterValues[filterValue];\n                          const isChecked = this.state.activeFilters[filterCategory]===filterValue;\n                          return (\n                            <Radio\n                              my={2}\n                              fontSize={[0,2]}\n                              label={filterLabel}\n                              checked={isChecked}\n                              className={styles.radioBtn}\n                              key={`filter_${filterCategory}_${filterValue}`}\n                              onChange={ e => this.setFilter(filterCategory,filterValue) }\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                  );\n                })\n              }\n            </Flex>\n            <Flex\n              flexDirection={'row'}\n            >\n              <Button.Text\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.applyFilters}\n              >\n                Apply filters\n              </Button.Text>\n              <Button.Text\n                ml={3}\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.resetFilters}\n              >\n                Reset\n              </Button.Text>\n            </Flex>\n          </Flex>\n        </DashboardCard>\n        {\n          !this.state.isOpened && this.props.activeFilters && Object.values(this.props.activeFilters).filter( v => (v !== null) ).length>0 &&\n            <Flex\n              mt={3}\n              width={1}\n              flexDirection={['column','row']}\n              alignItems={['flex-start','flex-end']}\n              justifyContent={['flex-end','flex-start']}\n            >\n              {\n                Object.keys(this.props.activeFilters).map((filterName) => {\n                  const filterValue = this.props.activeFilters[filterName];\n                  if (filterValue !== null){\n                    const filterLabel = this.props.filters[filterName][filterValue];\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:[2,0],\n                          mr:[0,3],\n                          width:[1,this.state.minWidth]\n                        }}\n                        isInteractive={true}\n                        key={`filter_${filterName}`}\n                      >\n                        <Flex\n                          width={1}\n                          style={{\n                            cursor:'pointer'\n                          }}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'space-between'}\n                          onClick={e => this.resetFilter(filterName)}\n                        >\n                          <Text\n                            fontSize={2}\n                            fontWeight={500}\n                            color={'cellText'}\n                            style={{\n                              textTransform:'capitalize'\n                            }}\n                          >\n                            {filterLabel}\n                          </Text>\n                          <Icon\n                            name={'Close'}\n                            color={'cellText'}\n                            size={ this.props.isMobile ? '1.3em' : '1.5em'}\n                          />\n                        </Flex>\n                      </DashboardCard>\n                    );\n                  }\n                  return null;\n                })\n              }\n              <Link\n                mt={[2,0]}\n                fontSize={[3,2]}\n                fontWeight={[3]}\n                color={'dark-gray'}\n                hoverColor={'copyColor'}\n                textAlign={['center','left']}\n                onClick={ e => this.resetFilters(false) }\n              >\n                Clear all filters\n              </Link>\n            </Flex>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TransactionListFilters;","import React, { Component } from 'react';\n// import style from './TransactionsList.module.scss';\nimport TableRow from '../TableRow/TableRow';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Heading, Text, Link, Icon } from \"rimble-ui\";\nimport TransactionField from '../TransactionField/TransactionField';\nimport TransactionListFilters from '../TransactionListFilters/TransactionListFilters';\n\nclass TransactionsList extends Component {\n\n  state = {\n    page:1,\n    prevTxs:{},\n    txsPerPage:5,\n    loading:false,\n    totalTxs:null,\n    totalPages:null,\n    activeFilters:{\n      status:null,\n      assets:null,\n      actions:null,\n    },\n    filters:{\n      actions:{\n        deposit:'Deposit',\n        redeem:'Redeem',\n        send:'Send',\n        receive:'Receive',\n        migrate:'Migrate',\n        swap:'Swap-In',\n        swapout:'Swap-Out',\n        withdraw:'Withdraw',\n        // curvein:'CurveIn',\n        // curveout:'CurveOut',\n        // curvezapin:'CurveZapIn',\n        // curvezapout:'CurveZapOut',\n      },\n      status:{\n        completed:'Completed',\n        pending:'Pending',\n        failed:'Failed'\n      },\n      assets:{}\n    },\n    renderedTxs:null,\n    processedTxs:null,\n    lastBlockNumber:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  prevPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.max(1,this.state.page-1);\n    this.setState({\n      page\n    });\n  }\n\n  nextPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.min(this.state.totalPages,this.state.page+1);this.processTxs(page);\n    this.setState({\n      page\n    });\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadTxs();\n  }\n\n  applyFilters = activeFilters => {\n    this.setState({\n      activeFilters\n    },() => {\n      this.processTxs();\n    });\n  }\n\n  resetFilters = () => {\n    this.setState({\n      activeFilters:{\n        status:null,\n        assets:null,\n        actions:null,\n      }\n    },() => {\n      this.processTxs();\n    });\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n    const transactionsChanged = JSON.stringify(prevProps.transactions) !== JSON.stringify(this.props.transactions);\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n\n    if (tokenChanged || transactionsChanged){\n      this.setState({\n        page:1,\n        prevTxs:{}\n      },()=>{\n        this.loadTxs();\n      })\n      return false;\n    }\n    const pageChanged = prevState.page !== this.state.page;\n    if (pageChanged){\n      this.processTxs();\n    }\n  }\n\n  async loadTxs(count,endBlockNumber='latest'){\n    if (!this.props.account){\n      return false;\n    }\n\n    count = count ? count : 0;\n\n    this.setState({\n      loading:true\n    });\n\n    const firstBlockNumber = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n\n    // Take last block number, is null take first block number\n    let prevTxs = {...this.state.prevTxs};\n    let lastBlockNumber = Math.max(firstBlockNumber,this.state.lastBlockNumber);\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    const assets = {...this.state.filters.assets};\n\n    enabledTokens.forEach((token) => {\n      assets[token] = token;\n    });\n\n    let actions = {...this.state.filters.actions};\n    \n    const enabledActions = typeof this.props.enabledActions !== 'undefined' ? this.props.enabledActions : [];\n\n    if (enabledActions.length){\n      actions = {};\n      enabledActions.forEach( action => {\n        actions[action.toLowerCase()] = action;\n      });\n    }\n\n    const etherscanTxs = await this.functionsUtil.getEtherscanTxs(this.props.account,lastBlockNumber,'latest',enabledTokens);\n\n    // Merge new txs with previous ones\n    if (etherscanTxs && etherscanTxs.length){\n      etherscanTxs.forEach((tx) => {\n        if (tx.hashKey){\n          prevTxs[tx.hashKey] = tx;\n        } else {\n          prevTxs[`t${tx.timeStamp}`] = tx;\n        }\n      });\n    }\n\n    const lastTx = Object.values(prevTxs).pop();\n\n    // Update last block number\n    if (lastTx && lastTx.blockNumber && (!this.state.lastBlockNumber || lastTx.blockNumber>this.state.lastBlockNumber)){\n      lastBlockNumber = parseInt(lastTx.blockNumber)+1;\n    }\n\n    return this.setState( prevState => ({\n      prevTxs,\n      loading:false,\n      lastBlockNumber,\n      filters:{\n        ...prevState.filters,\n        assets,\n        actions\n      }\n    }), () => {\n      this.processTxs()\n    });\n  };\n\n  processTxs = (page=null) => {\n\n    page = page ? page : this.state.page;\n\n    const availableActions = Object.keys(this.state.filters.actions).map( action => (action.toLowerCase()) );\n\n    // Sort prevTxs by timeStamp\n    const txsIndexes = Object.values(this.state.prevTxs)\n                        .filter(tx => (!!parseFloat(tx.value))) // Filter txs with value\n                        .filter(tx => (\n                          (this.state.activeFilters.status === null || (tx.status && tx.status.toLowerCase() === this.state.activeFilters.status.toLowerCase())) && \n                          (this.state.activeFilters.assets === null || (tx.token && tx.token.toLowerCase() === this.state.activeFilters.assets.toLowerCase())) &&\n                          ( tx.action && availableActions.includes(tx.action.toLowerCase()) && (this.state.activeFilters.actions === null || (tx.action.toLowerCase() === this.state.activeFilters.actions.toLowerCase()) ))\n                        )) // Filter by activeFilters\n                        .sort((a,b) => (a.timeStamp > b.timeStamp) ? -1 : 1 );\n\n    // Calculate max number of pages\n    const totalTxs = txsIndexes.length;\n    const totalPages = Math.ceil(totalTxs/this.state.txsPerPage);\n\n    const processedTxs = [];\n\n    // console.log(this.state.prevTxs,txsIndexes);\n\n    txsIndexes.forEach((tx, i) => {\n      const selectedToken = tx.token;\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const decimals = Math.min(tokenConfig.decimals,8);\n      \n      const date = new Date(tx.timeStamp*1000);\n      const action = tx.action ? tx.action : this.functionsUtil.getTxAction(tx,tokenConfig);\n\n      const parsedValue = parseFloat(tx.tokenAmount);\n\n      const amount = parsedValue ? (this.props.isMobile ? parsedValue.toFixed(4) : parsedValue.toFixed(decimals)) : '-';\n      const momentDate = this.functionsUtil.strToMoment(date);\n\n      // Save new params\n      tx.status = tx.status ? tx.status : 'Completed';\n      tx.action = action;\n      tx.momentDate = momentDate;\n      tx.amount = amount;\n\n      if (i>=((page-1)*this.state.txsPerPage) && i<((page-1)*this.state.txsPerPage)+this.state.txsPerPage) {\n        processedTxs.push(tx);\n      }\n    });\n\n    // console.log('processedTxs',this.state.page,txsIndexes,processedTxs);\n\n    const loading = false;\n  \n    this.setState({\n      loading,\n      totalTxs,\n      totalPages,\n      processedTxs\n    });\n  }\n\n  render() {\n\n    const hasActiveFilters = Object.values(this.state.activeFilters).filter( v => (v !== null) ).length>0;\n\n    // console.log('processedTxs',this.state.processedTxs);\n    const processedTxs = this.state.processedTxs ? Object.values(this.state.processedTxs) : null;\n\n    return (\n      <Flex flexDirection={'column'} width={1} m={'0 auto'}>\n        {\n          this.state.loading ? (\n            <FlexLoader\n              flexProps={{\n                flexDirection:'row',\n                minHeight:this.props.height\n              }}\n              loaderProps={{\n                size:'30px'\n              }}\n              textProps={{\n                ml:2\n              }}\n              text={'Loading transactions...'}\n            />\n          ) : (\n            <Flex\n              width={1}\n              position={'relative'}\n              flexDirection={'column'}\n              id={'transactions-list-container'}\n              pt={[0, hasActiveFilters ? '116px' : 5]}\n            >\n              <TransactionListFilters\n                {...this.props}\n                filters={this.state.filters}\n                activeFilters={this.state.activeFilters}\n                resetFilters={this.resetFilters.bind(this)}\n                applyFilters={this.applyFilters.bind(this)}\n              />\n              {\n                processedTxs && processedTxs.length ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <TableHeader\n                      cols={this.props.cols}\n                      isMobile={this.props.isMobile}\n                    />\n                    <Flex\n                      id={'transactions-list'}\n                      flexDirection={'column'}\n                    >\n                      {\n                        processedTxs.map( (tx,index) => {\n                          const txHash = tx.hash;\n                          const txHashKey = tx.hashKey;\n                          const handleClick = (e) => {\n                            return (txHash ? window.open(`https://etherscan.io/tx/${txHash}`) : null);\n                          };\n\n                          return (\n                            <TableRow\n                              {...this.props}\n                              rowProps={{\n                                isInteractive:true\n                              }}\n                              hash={txHash}\n                              transaction={tx}\n                              key={`tx-${index}`}\n                              handleClick={handleClick}\n                              rowId={`tx-col-${txHashKey}`}\n                              cardId={`tx-card-${txHashKey}`}\n                              fieldComponent={TransactionField}\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                    <Flex\n                      height={'50px'}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'flex-end'}\n                      id={'transactions-list-pagination'}\n                    >\n                      <Flex mr={3}>\n                        <Link mr={1} onClick={ e => this.prevPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowLeft'}\n                            size={'2em'}\n                            color={ this.state.page>1 ? 'arrowActive' : 'arrowInactive' }\n                          />\n                        </Link>\n                        <Link onClick={ e => this.nextPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowRight'}\n                            size={'2em'}\n                            color={ this.state.page<this.state.totalPages ? 'arrowActive' : 'arrowInactive' }\n                          />\n                        </Link>\n                      </Flex>\n                      <Flex alignItems={'center'}>\n                        <Text \n                          fontSize={1}\n                          fontWeight={3}\n                          color={'cellText'}\n                        >\n                          Page {this.state.page} of {this.state.totalPages}\n                        </Text>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Heading.h3 textAlign={'center'} fontFamily={'sansSerif'} fontWeight={2} fontSize={[2]} color={'dark-gray'}>\n                    There are no transactions\n                  </Heading.h3>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TransactionsList;\n","import React, { Component } from \"react\";\nimport { Button, Image, Flex, Text, Icon, Box } from 'rimble-ui';\n\nclass ImageButton extends Component {\n\n  render() {\n\n    const isMobile = typeof this.props.isMobile !== 'undefined' ? this.props.isMobile : false;\n    const image = this.props.imageSrc ? (<Image width={'auto'} src={this.props.imageSrc} {...this.props.imageProps} />) : ( this.props.iconName ? (<Icon name={this.props.iconName} {...this.props.iconProps} />) : null );\n    const caption = (<Text textAlign={ isMobile ? 'left' : 'center'} fontSize={2} fontWeight={3} color={'dark-gray'}>{this.props.caption}</Text>);\n\n    return (\n        <Button\n          color={'white'}\n          borderRadius={3}\n          px={ isMobile ? [3,4] : 4 }\n          py={ isMobile ? 0 : [3,4] }\n          my={ isMobile ? 2 : [2,2] }\n          mx={ isMobile ? 0 : [0,2] }\n          onClick={ this.props.handleClick }\n          height={ isMobile ? '58px' : ['150px','170px']}\n          mainColor={this.props.isActive ? 'cardBgHover' : 'cardBg'}\n          contrastColor={this.props.isActive ? 'cardBgHover' : 'cardBg'}\n          width={this.props.width ? this.props.width : (isMobile ? '100%' : ['150px','170px'])}\n          style={this.props.buttonStyle ? this.props.buttonStyle : (isMobile ? {justifyContent:'flex-start'} : null)}\n          {...this.props.buttonProps}\n        >\n          <>\n            {\n              this.props.badge && (\n                <Box\n                  position={'absolute'}\n                  borderRadius={'16px'}\n                  backgroundColor={ this.props.badge.bgColor ? this.props.badge.bgColor : 'blue' }\n                  style={ isMobile ? {right:'-25px',top:'-17px'} : {right:'-25px',top:'-25px'} }\n                  px={['5px','7px']}\n                  py={['1px','3px']}\n                >\n                  <Text\n                    fontWeight={3}\n                    fontSize={'10px'}\n                    color={ this.props.badge.color ? this.props.badge.color : '#fff' }\n                  >\n                  {this.props.badge.text}\n                  </Text>\n                </Box>\n              )\n            }\n            <Flex flexDirection={ isMobile ? 'row' : 'column'} justifyContent={ isMobile ? 'flex-start' : 'center'} alignItems={'center'}>\n              <Flex width={ isMobile ? '45px' : 1 } mr={ isMobile ? 2 : 0 } justifyContent={ isMobile ? 'flex-start' : 'center' }>\n                { this.props.captionPos && this.props.captionPos === 'top' ? caption : image }\n              </Flex>\n              <Flex width={ isMobile ? 'auto' : 1 } flexDirection={'column'} justifyContent={ isMobile ? 'flex-start' : 'center' } >\n                { this.props.captionPos && this.props.captionPos === 'top' ? image : caption }\n                {\n                  this.props.subcaption && this.props.subcaption.split('\\n').map((v,i) => {\n                    // Smaller caption for second line\n                    if (i){\n                      v = (<small>{v}</small>);\n                    }\n                    return (\n                      <Text key={`subcaption_${i}`} lineHeight={'1.3'} textAlign={ isMobile ? 'left' : 'center'} color={'darkGray'} fontWeight={1} fontSize={1}>{v}</Text>\n                    );\n                  })\n                }\n              </Flex>\n            </Flex>\n          </>\n        </Button>\n    );\n  }\n}\nexport default ImageButton;\n","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass CustomTooltip extends Component {\n\n  render() {\n    return (\n      <DashboardCard\n        key={this.props.point.id}\n        cardProps={{\n          py:2,\n          px:3,\n          width:1,\n          left: this.props.point.data.itemPos>50 ? '-110%' : '0'\n        }}\n      >\n        <Flex\n          width={1}\n          flexDirection={'column'}\n        >\n          {\n            this.props.point.data.xFormatted && \n              <Text\n                mb={2}\n                fontSize={1}\n                fontWeight={3}\n                color={'cellText'}\n                textAlign={'left'}\n              >\n                {this.props.point.data.xFormatted}\n              </Text>\n          }\n          {this.props.children}\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default CustomTooltip;","import { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport globalConfigs from '../configs/globalConfigs';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass AllocationChart extends Component {\n  state = {\n    chartData:null,\n    chartProps:null,\n    selectedSlice:null,\n    totalAllocation:null,\n    protocolsAllocations:null,\n    protocolsAllocationsPerc:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    if (tokenChanged){\n      this.setStateSafe({\n        chartData:null,\n        chartProps:null,\n        selectedSlice:null,\n        totalAllocation:null,\n        protocolsAllocations:null,\n        protocolsAllocationsPerc:null\n      },() => {\n        this.loadData();\n      });\n    } else if (prevProps.isMobile !== this.props.isMobile){\n      this.loadData()\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async loadData(){\n    const {\n      totalAllocation,\n      protocolsAllocations,\n      protocolsAllocationsPerc\n    } = await this.functionsUtil.getTokenAllocation(this.props.tokenConfig);\n\n    // console.log('AllocationChart',this.props.token,totalAllocation,protocolsAllocations,protocolsAllocationsPerc);\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth: 0,\n      cornerRadius:0,\n      motionDamping:15,\n      innerRadius: 0.65,\n      motionStiffness:90,\n      colors:d => d.color,\n      onMouseEnter:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:data\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:null\n        });\n      },\n      tooltipFormat: v => v+'%',\n      sliceLabel: d => d.value+'%',\n      radialLabel: d => {\n        return null;\n      },\n      theme:{\n        tooltip: {\n          container: this.props.inline ? {\n            background: this.props.theme.colors.cardBg\n          } : {\n            display: 'none',\n          }\n        },\n        labels:{\n          text:{\n            fontWeight:600,\n            fontSize:this.props.isMobile ? 13 : 15,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      enableRadialLabels:false,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      enableSlicesLabels: !this.props.inline,\n      radialLabelsLinkColor:{ from: 'color' },\n      borderColor:{ from: 'color', modifiers: [ [ 'darker', 0.2 ] ] },\n      margin: this.props.inline ? {top:0,right:15,bottom:0,left:1} : (this.props.isMobile ? { top: 10, right: 15, bottom: 0, left: 15 } : { top: 10, right: 35, bottom: 0, left: 35 }),\n    };\n\n    const chartData = [];\n\n    this.props.tokenConfig.protocols.forEach((protocolInfo,i)=>{\n      const protocolName = protocolInfo.name;\n      const protocolAddr = protocolInfo.address.toLowerCase();\n      if (protocolsAllocationsPerc[protocolAddr]){\n        const protocolAllocationPercParsed = parseFloat(protocolsAllocationsPerc[protocolAddr].times(100).toFixed(2));\n        chartData.push({\n          id:protocolAddr,\n          name:protocolName,\n          value:protocolAllocationPercParsed,\n          color:'hsl('+globalConfigs.stats.protocols[protocolName].color.hsl.join(',')+')',\n          label: globalConfigs.stats.protocols[protocolName].label ? globalConfigs.stats.protocols[protocolName].label : this.functionsUtil.capitalize(protocolName)\n        });\n      }\n\n    });\n\n    this.setStateSafe({\n      chartData,\n      chartProps,\n      totalAllocation,\n      protocolsAllocations,\n      protocolsAllocationsPerc\n    });\n  }\n\n  render() {\n    \n    const selectedSlice = this.state.selectedSlice !== null && this.state.protocolsAllocations[this.state.selectedSlice.id] ? this.state.protocolsAllocations[this.state.selectedSlice.id] : false;\n    const protocolIcon = this.state.selectedSlice !== null ? (globalConfigs.stats.protocols[this.state.selectedSlice.name] && globalConfigs.stats.protocols[this.state.selectedSlice.name].icon ? globalConfigs.stats.protocols[this.state.selectedSlice.name].icon : `${this.state.selectedSlice.name}.svg`) : null;\n\n    return (\n      <Flex\n        width={1}\n        position={'relative'}\n      >\n        {\n          this.state.totalAllocation && !this.props.inline &&\n            <Flex\n              zIndex={0}\n              top={['23%','25%']}\n              left={['20%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              position={'absolute'}\n              width={['60%','46%']}\n              height={['53%','46%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                selectedSlice ? (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={`/images/protocols/${protocolIcon}`}\n                    />\n                    <SmartNumber\n                      fontSize={[3,4]}\n                      decimals={3}\n                      fontWeight={4}\n                      maxPrecision={5}\n                      number={selectedSlice}\n                    />\n                    <Text\n                      fontSize={[1,2]}\n                      fontWeight={3}\n                      color={'cellTitle'}\n                    >\n                      Funds in {this.state.selectedSlice.label}\n                    </Text>\n                  </Flex>\n                ) : (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={`/images/idle-mark.png`}\n                    />\n                    <SmartNumber\n                      unitProps={{\n                        ml:2,\n                        fontWeight:3,\n                        fontSize:[3,4]\n                      }}\n                      decimals={3}\n                      fontWeight={4}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      number={this.state.totalAllocation}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      Total funds\n                    </Text>\n                  </Flex>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          showLoader={true}\n          {...this.props}\n          {...this.state.chartProps}\n          data={this.state.chartData}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default AllocationChart;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\n\nclass CustomTooltipRow extends Component {\n\n  render() {\n    return (\n      <Flex\n        mb={2}\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n      >\n        <Flex\n          pr={2}\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-start'}\n        > \n          {\n            this.props.color && \n            <Box\n              mr={2}\n              width={'10px'}\n              height={'10px'}\n              borderRadius={'50%'}\n              backgroundColor={this.props.color}\n            >\n            </Box>\n          }\n          <Text\n            fontSize={1}\n            fontWeight={2}\n            textAlign={'left'}\n            color={'dark-gray'}\n            style={{\n              whiteSpace:'nowrap',\n              textTransform:'capitalize'\n            }}\n          >\n            {this.props.label}\n          </Text>\n        </Flex>\n        <Flex\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-end'}\n        >\n          <Text\n            fontSize={1}\n            fontWeight={3}\n            color={'cellText'}\n            textAlign={'right'}\n            style={{\n              whiteSpace:'nowrap'\n            }}\n            dangerouslySetInnerHTML={{\n              __html: this.props.value\n            }}\n          >\n          </Text>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default CustomTooltipRow;","import { Line } from '@nivo/line';\nimport React, { Component } from 'react';\n// import { linearGradientDef } from '@nivo/core'\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport ChartCustomTooltip from '../ChartCustomTooltip/ChartCustomTooltip';\nimport ChartCustomTooltipRow from '../ChartCustomTooltipRow/ChartCustomTooltipRow';\n\nclass PortfolioEquity extends Component {\n  state = {\n    startDate:null,\n    chartData:null,\n    chartProps:null,\n    chartwidth:null,\n    chartHeight:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadChartData();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const quickDateSelectionChanged = prevProps.quickDateSelection !== this.props.quickDateSelection;\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n    if (tokenChanged || quickDateSelectionChanged){\n      this.setState({\n        chartData:null\n      },() => {\n        this.componentDidMount();\n      });\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    if (mobileChanged || themeModeChanged){\n      this.loadChartData();\n    }\n  }\n\n  async loadChartData() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    const etherscanTxs = await this.functionsUtil.getEtherscanTxs(this.props.account,0,'latest',enabledTokens);\n\n    const chartData = [];\n    let tokensBalance = {};\n    let firstTxTimestamp = null;\n\n    await this.functionsUtil.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      tokensBalance[selectedToken] = [];\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        let amountLent = this.functionsUtil.BNify(0);\n\n        filteredTxs.forEach((tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending')){\n            return false;\n          }\n          \n          firstTxTimestamp = firstTxTimestamp ? Math.min(firstTxTimestamp,parseInt(tx.timeStamp)) : parseInt(tx.timeStamp);\n\n          const tokenAmount = this.functionsUtil.BNify(tx.tokenAmount);\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n            case 'CurveOut':\n              amountLent = amountLent.plus(tokenAmount);\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.functionsUtil.BNify(0);\n          }\n\n          const balance = amountLent;\n          const action = tx.action;\n          const timeStamp = parseInt(tx.timeStamp);\n          const tokenPrice = this.functionsUtil.BNify(tx.tokenPrice);\n          const idleTokens = this.functionsUtil.BNify(tx.idleTokens);\n\n          if (!tokenPrice.isNaN() && !tokenPrice.isNaN()){\n            tokensBalance[selectedToken].push({\n              action,\n              balance,\n              timeStamp,\n              tokenPrice,\n              idleTokens,\n              tokenAmount\n            });\n          }\n        });\n      }\n    });\n\n    // Calculate Start Date\n    let startDate = null;\n    const currentDate = this.functionsUtil.strToMoment(new Date());\n\n    switch (this.props.quickDateSelection){\n      case 'week':\n        startDate = currentDate.clone().subtract(1,'week');\n      break;\n      case 'month':\n        startDate = currentDate.clone().subtract(1,'month');\n      break;\n      case 'month3':\n        startDate = currentDate.clone().subtract(3,'month');\n      break;\n      case 'month6':\n        startDate = currentDate.clone().subtract(6,'month');\n      break;\n      default:\n        startDate = null;\n      break;\n    }\n\n    const days = {};\n    let prevBalances = {};\n    let prevTimestamp = null;\n    let minChartValue = null;\n    let maxChartValue = null;\n    let aggregatedBalance = null;\n    const aggregatedBalancesKeys = {};\n    const tokensBalancesPerDate = {};\n    const currTimestamp = parseInt(new Date().getTime()/1000)+86400;\n\n    const tokensData = {};\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      tokensData[token] = await this.functionsUtil.getTokenApiData(this.props.availableTokens[token].address,isRisk,firstTxTimestamp,null,false,3600);\n    });\n\n    // debugger;\n\n    const idleTokenBalance = {};\n\n    for (let timeStamp=firstTxTimestamp;timeStamp<=currTimestamp;timeStamp+=this.props.frequencySeconds){\n\n      const foundBalances = {};\n      const tokensBalances = {};\n      timeStamp = Math.min(currTimestamp,timeStamp);\n      aggregatedBalance = this.functionsUtil.BNify(0);\n\n      // await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      // eslint-disable-next-line\n      Object.keys(tokensBalance).forEach(token => {\n\n        let lastTokenData = null;\n        const lastTokenDataUnfiltered = Object.values(tokensData[token]).pop();\n        const filteredTokenData = tokensData[token].filter(tx => (tx.timestamp>=prevTimestamp && tx.timestamp<=timeStamp));\n        if (filteredTokenData && filteredTokenData.length){\n          lastTokenData = filteredTokenData.pop();\n        }\n\n        if (!idleTokenBalance[token]){\n          idleTokenBalance[token] = this.functionsUtil.BNify(0);\n        }\n\n        const tokenConfig = this.props.availableTokens[token];\n        const tokenDecimals = tokenConfig.decimals;\n        let filteredBalances = tokensBalance[token].filter(tx => (tx.timeStamp<=timeStamp && (!prevTimestamp || tx.timeStamp>prevTimestamp)));\n        \n        if (!filteredBalances.length){\n          if (prevBalances && prevBalances[token]){\n            filteredBalances = prevBalances[token];\n            const lastFilteredTx = Object.assign([],filteredBalances).pop();\n            const currentBalance = parseFloat(lastFilteredTx.balance);\n\n            // Take idleToken price from API and calculate new balance\n            if (currentBalance>0 && timeStamp>firstTxTimestamp && lastTokenData){\n              const idleTokens = idleTokenBalance[token];\n              const idlePrice = this.functionsUtil.fixTokenDecimals(lastTokenData.idlePrice,tokenDecimals);\n              let newBalance = idleTokens.times(idlePrice);\n\n              // Set new balance and tokenPrice\n              lastFilteredTx.balance = newBalance;\n              lastFilteredTx.tokenPrice = idlePrice;\n              filteredBalances = [lastFilteredTx];\n            }\n          } else {\n            filteredBalances = [{\n              balance:this.functionsUtil.BNify(0),\n              tokenPrice:this.functionsUtil.BNify(0)\n            }];\n          }\n        } else {\n          filteredBalances.forEach(tx => {\n            switch (tx.action){\n              case 'Swap':\n              case 'Deposit':\n              case 'Migrate':\n              case 'Receive':\n              case 'CurveOut':\n                idleTokenBalance[token] = idleTokenBalance[token].plus(tx.idleTokens);\n              break;\n              default:\n                idleTokenBalance[token] = idleTokenBalance[token].minus(tx.idleTokens);\n                if (idleTokenBalance[token].lt(0)){\n                  idleTokenBalance[token] = this.functionsUtil.BNify(0);\n                }\n              break;\n            }\n          });\n        }\n\n        const lastTx = Object.assign([],filteredBalances).pop();\n        // let lastTxBalance = this.functionsUtil.BNify(lastTx.balance);\n        let lastTxBalance = idleTokenBalance[token].times(lastTx.tokenPrice);\n\n        if (lastTxBalance.gt(0)){\n          // Convert token balance to USD\n          let tokenUsdConversionRate = null;\n          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'conversionRateField']);\n          if (!this.props.chartToken && conversionRateField){\n            const conversionRate = lastTokenData && lastTokenData[conversionRateField] ? lastTokenData[conversionRateField] : (lastTokenDataUnfiltered && lastTokenDataUnfiltered[conversionRateField] ? lastTokenDataUnfiltered[conversionRateField] : null);\n            if (conversionRate){\n              tokenUsdConversionRate = this.functionsUtil.fixTokenDecimals(conversionRate,18);\n              if (tokenUsdConversionRate.gt(0)){\n                lastTxBalance = lastTxBalance.times(tokenUsdConversionRate);\n              }\n            }\n          }\n          \n          tokensBalances[token] = lastTxBalance;\n\n          aggregatedBalance = aggregatedBalance.plus(lastTxBalance);\n        }\n\n        foundBalances[token] = filteredBalances;\n      });\n\n      let momentDate = this.functionsUtil.strToMoment(timeStamp*1000);\n\n      if (startDate === null || (momentDate.isSameOrAfter(startDate) && momentDate.isSameOrBefore(new Date(),'day'))){\n        \n        // if (momentDate.isAfter(new Date(),'day')){\n        //   momentDate = this.functionsUtil.strToMoment(new Date());\n        // }\n\n        // Force date to midnight\n        const formattedDate = momentDate.format('YYYY/MM/DD 00:00');\n\n        // Save days for axisBottom format\n        days[momentDate.format('YYYY/MM/DD')] = 1;\n\n        aggregatedBalance = parseFloat(parseFloat(aggregatedBalance.toFixed(6)));\n\n        tokensBalancesPerDate[formattedDate] = tokensBalances;\n        aggregatedBalancesKeys[formattedDate] = aggregatedBalance;\n\n        // console.log(formattedDate,tokensBalances);\n\n        minChartValue = minChartValue === null ? aggregatedBalance : Math.min(minChartValue,aggregatedBalance);\n        maxChartValue = maxChartValue === null ? aggregatedBalance : Math.max(maxChartValue,aggregatedBalance);\n      }\n\n      prevTimestamp = timeStamp;\n      prevBalances = foundBalances;\n    }\n\n    const aggregatedBalances = Object.keys(aggregatedBalancesKeys).map(date => ({\n      x:date,\n      y:aggregatedBalancesKeys[date],\n      balances:tokensBalancesPerDate[date]\n    }));\n\n    let itemIndex = 0;\n    aggregatedBalances.forEach( (item,index) => {\n      const itemPos = Math.floor(itemIndex/aggregatedBalances.length*100);\n      aggregatedBalances[index].itemPos = itemPos;\n      itemIndex++;\n    });\n\n    /*\n    aggregatedBalances.push({\n      x:momentDate.format('YYYY/MM/DD HH:mm'),\n      y:aggregatedBalance\n    });\n    */\n\n    // Add day before to start with zero balance\n    /*\n    const firstTxMomentDate = this.functionsUtil.strToMoment(firstTxTimestamp*1000);\n    if ((startDate === null || startDate.isSameOrBefore(firstTxMomentDate)) && aggregatedBalances.length){\n      const firstItem = aggregatedBalances[0];\n      const firstDate = this.functionsUtil.strToMoment(firstItem.x,'YYYY/MM/DD HH:mm');\n      firstDate.subtract(1,'day');\n      aggregatedBalances.unshift({\n        x:firstDate.format('YYYY/MM/DD HH:mm'),\n        y:0\n      });\n    }\n    */\n\n    const chartToken = this.props.chartToken ? this.props.chartToken.toUpperCase() : 'USD';\n\n    // Add token Data\n    chartData.push({\n      id:chartToken,\n      color: 'hsl('+ this.functionsUtil.getGlobalConfig(['stats','tokens',chartToken,'color','hsl']).join(',')+')',\n      data:aggregatedBalances\n    });\n\n    let yFormatDecimals = 2;\n    if (maxChartValue-minChartValue<1){\n      yFormatDecimals = 4;\n    }\n\n    if (maxChartValue === minChartValue){\n      minChartValue = Math.max(0,maxChartValue-1);\n    }\n\n    const maxGridLines = 5;\n    const gridYStep = (maxChartValue-minChartValue)/maxGridLines;\n    const gridYValues = [];\n    for (let i=0;i<=maxGridLines;i++){\n      const gridYValue = parseFloat(parseFloat(minChartValue+(i*gridYStep)).toFixed(6));\n      gridYValues.push(gridYValue);\n    }\n    \n    const axisBottomMaxValues = 10;\n    const daysCount = Object.values(days).length;    \n    const daysFrequency = Math.max(1,Math.ceil(daysCount/axisBottomMaxValues));\n\n    const chartProps = {\n      xScale:{\n        type: 'time',\n        format: '%Y/%m/%d %H:%M',\n      },\n      yScale:{\n        type: 'linear',\n        stacked: false,\n        min: minChartValue,\n        max: maxChartValue\n      },\n      xFormat:'time:%b %d %Y',\n      yFormat:value => this.functionsUtil.formatMoney(value,yFormatDecimals),\n      axisBottom: this.props.isMobile ? null : {\n        legend: '',\n        tickSize:0,\n        format: '%b %d',\n        tickPadding: 15,\n        orient: 'bottom',\n        legendOffset: 36,\n        legendPosition: 'middle',\n        tickValues:'every '+daysFrequency+' days'\n      },\n      gridYValues,\n      pointSize:0,\n      useMesh:true,\n      axisLeft: this.props.isMobile ? null : {\n        legend: '',\n        tickSize: 0,\n        orient: 'left',\n        tickPadding: 10,\n        tickRotation: 0,\n        legendOffset: -70,\n        tickValues:gridYValues,\n        legendPosition: 'middle',\n        format: v => this.functionsUtil.abbreviateNumber(v,2),\n      },\n      animate:true,\n      pointLabel:'y',\n      enableArea:true,\n      enableSlices:'x',\n      enableGridY:true,\n      curve:'monotoneX',\n      enableGridX:false,\n      pointBorderWidth:1,\n      colors:d => d.color,\n      pointLabelYOffset:-12,\n      areaBaselineValue:minChartValue,\n      pointColor:{ from: 'color', modifiers: []},\n      areaOpacity:this.props.themeMode === 'light' ? 0.1 : 0.5,\n      theme:{\n        axis: {\n          ticks: {\n            text: {\n              fontSize:12,\n              fontWeight:600,\n              fill:this.props.theme.colors.legend,\n              fontFamily:this.props.theme.fonts.sansSerif\n            }\n          }\n        },\n        grid: {\n          line: {\n            stroke: this.props.theme.colors.lineChartStroke, strokeDasharray: '8 4'\n          }\n        },\n      },\n      /*\n      defs:[\n        linearGradientDef('gradientA', [\n          { offset: 0, color: 'inherit' },\n          { offset: 100, color: 'inherit', opacity: 0 },\n        ]),\n      ],\n      fill:[{ match: '*', id: 'gradientA' }],\n      */\n      margin: this.props.isMobile ? { top: 20, right: 25, bottom: 25, left: 20 } : { top: 30, right: 50, bottom: 45, left: 60 },\n      sliceTooltip:(slideData) => {\n        const { slice } = slideData;\n        const point = slice.points[0];\n        return (\n          <ChartCustomTooltip\n            point={point}\n          >\n            <ChartCustomTooltipRow\n              color={point.color}\n              label={point.serieId}\n              value={`$ ${point.data.yFormatted}`}\n            />\n            {\n            (typeof point.data.balances === 'object' && Object.keys(point.data.balances).length>0) &&\n              Object.keys(point.data.balances).map(token => {\n                if (token === point.serieId){\n                  return null;\n                }\n                const color = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'color','hex']);\n                const balance = point.data.balances[token];\n                let formattedBalance = this.functionsUtil.formatMoney(balance,2);\n                if (parseFloat(balance)>=0.01){\n                  return (\n                    <ChartCustomTooltipRow\n                      label={token}\n                      color={color}\n                      key={`row_${token}`}\n                      value={`$ ${formattedBalance}`}\n                    />\n                  );\n                }\n                return null;\n              })\n            }\n          </ChartCustomTooltip>\n        );\n      }\n    };\n\n    this.setState({\n      chartData,\n      chartProps\n    });\n  }\n\n  render() {\n    return (\n      <GenericChart\n        type={Line}\n        showLoader={true}\n        {...this.state.chartProps}\n        data={this.state.chartData}\n        parentId={this.props.parentId}\n        height={this.props.chartHeight}\n        parentIdHeight={this.props.parentIdHeight}\n      />\n    );\n  }\n}\n\nexport default PortfolioEquity;","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass ChartCustomTooltip extends Component {\n\n  async componentWillMount(){\n\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    \n  }\n\n  render() {\n    return (\n      <DashboardCard\n        key={this.props.point.id}\n        cardProps={{\n          py:2,\n          px:3,\n          width:1,\n          left: this.props.point.data.itemPos && this.props.point.data.itemPos>50 ? '-110%' : '0'\n        }}\n      >\n        <Flex\n          width={1}\n          flexDirection={'column'}\n        >\n          {\n            this.props.point.data.xFormatted && \n              <Text\n                mb={2}\n                fontSize={1}\n                fontWeight={3}\n                color={'cellText'}\n                textAlign={'left'}\n              >\n                {this.props.point.data.xFormatted}\n              </Text>\n          }\n          {this.props.children}\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default ChartCustomTooltip;\n","import { Button } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass RoundButton extends Component {\n  render() {\n    const buttonProps = Object.assign({\n      width:1,\n      fontSize:3,\n      fontWeight:3,\n      height:'45px',\n      boxShadow:null,\n      borderRadius:4,\n      mainColor:'blue'\n    },this.props.buttonProps);\n\n    return (\n       <Button\n        {...buttonProps}\n        onClick={this.props.handleClick}\n       >\n        {this.props.children}\n       </Button>\n    );\n  }\n}\n\nexport default RoundButton;\n","import { Link } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass ExtLink extends Component {\n\n  render() {\n    return (\n      <Link\n        target={'_blank'}\n        rel={'nofollow noopener noreferrer'}\n        {...this.props}\n      >\n        {this.props.children}\n      </Link>\n    );\n  }\n}\n\nexport default ExtLink;\n","import baseColors, { blue, green, yellow, red } from \"./colors\";\nimport { tint, shade } from 'polished';\n\n// theme.js\nexport default {\n  breakpoints: ['52em', '64em'],\n  // breakpoints: ['40em', '52em', '64em', '80em'],\n  fontSizes: [12, 14, 16, 18, 21, 32, 38, 48, 54, 64, 72, 84],\n  fontWeights: [0, 300, 400, 600, 700, 800],\n  letterSpacings: [0, 1, 2, 4, 8],\n  lineHeights: {\n    solid: 1,\n    title: 1.25,\n    copy: 1.5,\n  },\n  fonts: {\n    serif: '\"georgia regular\", athelas, times, serif',\n    sansSerif: '\"Inter\", -apple-system, sans-serif',\n    counter: '\"Roboto Mono\", Arial, -apple-system, sans-serif'\n  },\n  space: [0, 4, 8, 16, 32, 64, 128, 256],\n  radii: ['0', '4px', '8px', '16px', '2rem'],\n  width: [0, 16, 32, 64, 128, 256],\n  minWidths: [0, 16, 32, 64, 128, 256],\n  maxWidths: [0, 16, 32, 64, 128, 256, 512, 768, 1024, 1536],\n  heights: [0, 16, 32, 64, 128, 256],\n  minHeights: [0, 16, 32, 64, 128, 256],\n  maxHeights: [0, 16, 32, 64, 128, 256],\n  borders: [0, '1px solid #eee','1px solid #b6c2ff'],\n  borderWidths: ['0', '1px', '2px', '4px'],\n  shadows: [\n    '0',\n    '0px 2px 4px rgba(0, 0, 0, 0.1)',\n    '0 7px 14px rgba(50,50,93,.1)',\n    '1px 1px 0px rgba(0,0,0,0.2)',\n    '0px 0px 16px 2px rgba(0,54,255,0.3)'\n  ],\n  opacity: {\n    disabled: 0.4,\n  },\n  colors: {\n    primary: blue.base,\n    'gradient-bg': 'linear-gradient(120deg, #f6d365 0%, #ea0d73 100%)',\n    'primary-light': blue.light[1],\n    'primary-dark': blue.dark[1],\n    bgBlue: '#0030e0',\n    blue: '#0036ff',\n    'dark-blue': '#00219a',\n    skyBlue: '#00abfe',\n    lightBlue: '#79f4e1',\n    copyColor: '#3F3D4B',\n    subColor: '#a7a7a7',\n    black: baseColors.black,\n    'near-black': '#111',\n    'dark-gray': '#4e4e4e',\n    'mid-gray': '#999',\n    gray: ' #e0e0e0',\n    grey: '#CCC',\n    silver: '#999',\n    'light-silver': '#aaa',\n    'moon-gray': '#ccc',\n    'light-gray': '#eee',\n    'near-white': '#f4f4f4',\n    white: '#fff',\n    transparent: 'transparent',\n    /*\n    NEW COLORS\n    */\n    arrowActive:'#4f4f4f',\n    arrowInactive:'#d8d8d8',\n    selectBgFocused:'#fbfbfb',\n    selectBg:'#ffffff',\n    backButtonBg:'#ffffff',\n    lineChartStroke:'#dbdbdb',\n    wrongNetworkBannerBg:'#ffffff',\n    dashboardBg: '#f9fafd',\n    statValue: '#959595',\n    boxBorder: '#eeeeee',\n    cellTitle: '#a3a4a5',\n    cellText: '#a6a6a6',\n    divider: '#d8d8d8',\n    counter: '#5d5d5d',\n    redeem: '#00a9fe',\n    deposit: '#0239ff',\n    migrate: '#00a9fe',\n    legend: '#c9c9c9',\n    menuBg:'#fff',\n    menuHover:'#f3f6ff',\n    cardBg:'#fff',\n    flashColor:'#3f4e9a',\n    menuRightBorder:'#eee',\n    cardHoverShadow:'0px 0px 0px 1px rgba(0, 54, 255, 0.3)',\n    cardBgHover:'#f7f8ff',\n    cardBorder:'#eee',\n    transactions:{\n      action:{\n        send:'#10a0dd',\n        swap:'#3d53c0',\n        boost:'#ffff00',\n        redeem:'#10a0dd',\n        swapout:'#10a0dd',\n        deposit:'#3d53c0',\n        curvein:'#10a0dd',\n        receive:'#3d53c0',\n        migrate:'#3d53c0',\n        default:'#4f4f4f',\n        curveout:'#3d53c0',\n        withdraw:'#10a0dd',\n        curvedepositin:'#10a0dd',\n        curvedepositout:'#3d53c0'\n      },\n      actionBg:{\n        send:'#ceeff6',\n        swap:'#ced6ff',\n        boost:'#ff7979',\n        redeem:'#ceeff6',\n        swapout:'#ceeff6',\n        deposit:'#ced6ff',\n        curvein:'#ceeff6',\n        default:'#dadada',\n        receive:'#ced6ff',\n        migrate:'#ced6ff',\n        withdraw:'#ceeff6',\n        curveout:'#ced6ff',\n        curvedepositin:'#ceeff6',\n        curvedepositout:'#ced6ff'\n      },\n      status:{\n        completed:'#00b84a',\n        pending:'#a5a5a5',\n        failed:'#fa0000'\n      }\n    },\n    blacks: [\n      'rgba(0,0,0,.0125)',\n      'rgba(0,0,0,.025)',\n      'rgba(0,0,0,.05)',\n      'rgba(0,0,0,.1)',\n      'rgba(0,0,0,.2)',\n      'rgba(0,0,0,.3)',\n      'rgba(0,0,0,.4)',\n      'rgba(0,0,0,.5)',\n      'rgba(0,0,0,.6)',\n      'rgba(0,0,0,.7)',\n      'rgba(0,0,0,.8)',\n      'rgba(0,0,0,.9)',\n    ],\n    whites: [\n      'rgba(255,255,255,.0125)',\n      'rgba(255,255,255,.025)',\n      'rgba(255,255,255,.05)',\n      'rgba(255,255,255,.1)',\n      'rgba(255,255,255,.2)',\n      'rgba(255,255,255,.3)',\n      'rgba(255,255,255,.4)',\n      'rgba(255,255,255,.5)',\n      'rgba(255,255,255,.6)',\n      'rgba(255,255,255,.7)',\n      'rgba(255,255,255,.8)',\n      'rgba(255,255,255,.9)',\n    ],\n  },\n  zIndices: [0, 9, 99, 999, 9999],\n  messageStyle: {\n    base: {\n      color: shade(0.4, '#AAA'),\n      backgroundColor: tint(0.9, '#AAA'),\n      borderColor: '#AAA',\n    },\n    success: {\n      color: shade(0.4, green.base),\n      backgroundColor: tint(0.9, green.base),\n      borderColor: green.base,\n    },\n    warning: {\n      color: shade(0.4, yellow.base),\n      backgroundColor: tint(0.9, yellow.base),\n      borderColor: yellow.base,\n    },\n    danger: {\n      color: shade(0.4, red.base),\n      backgroundColor: tint(0.9, red.base),\n      borderColor: red.base,\n    },\n    info: {\n      color: shade(0.4, blue.base),\n      backgroundColor: '#f3f6ff',\n      borderColor: '#b6c2ff',\n    },\n  },\n  buttons: {\n    primary: {\n      color: blue.text,\n      backgroundColor: blue.base,\n      // use css custom props\n      '--main-color': blue.base,\n      '--contrast-color': blue.text,\n    },\n    normal: {\n      color: baseColors.black,\n      '--contrast-color': baseColors.black,\n    },\n    success: {\n      '--main-color': green.base,\n      '--contrast-color': green.text,\n    },\n    danger: {\n      '--main-color': red.base,\n      '--contrast-color': red.text,\n    },\n  },\n  buttonSizes: {\n    small: {\n      fontSize: '0.75rem',\n      height: '2rem',\n      minWidth: '2rem',\n      padding: '0 1rem',\n    },\n    medium: {\n      fontSize: '1rem',\n      height: '3rem',\n      minWidth: '3rem',\n    },\n    large: {\n      fontSize: '1.5rem',\n      height: '4rem',\n      minWidth: '4rem',\n      borderRadius: '2rem'\n    },\n  },\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tooltip\":\"TableCellHeader_tooltip__3xM3k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"radioBtn\":\"TransactionListFilters_radioBtn__1vgHa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bg\":\"ModalCard_bg__3ocwQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Web3ConnectionButtons_button__1Wov0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gradientButton\":\"Header_gradientButton__2mrQl\",\"empty\":\"Header_empty__3fhiX\",\"select\":\"Header_select__27Xyx\",\"selectDark\":\"Header_selectDark__EHAAP\",\"input\":\"Header_input__3dr8P\"};","import axios from 'axios';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Progress, Icon, Link } from 'rimble-ui'\n\nclass TxProgressBar extends Component {\n  state = {\n    error:null,\n    ended:false,\n    percentage:0,\n    processing:true,\n    txTimestamp:null,\n    initialized:false,\n    estimatedTime:null,\n    remainingTime:null\n  };\n\n  componentUnmounted = false;\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n\n    this.componentUnmounted = true;\n\n    var id = window.setTimeout(function() {}, 0);\n\n    while (id--) {\n        window.clearTimeout(id); // will do nothing if no timeout with id is present\n    }\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps){\n    this.loadUtils();\n\n    if (!this.state.initialized && this.props.web3){\n      this.initProgressBar();\n    }\n  }\n\n  componentDidMount = async () => {\n    this.initProgressBar();\n  }\n\n  getTransaction = async () => {\n    const transaction = await (new Promise( async (resolve, reject) => {\n      this.functionsUtil.customLog('getTransaction',this.props.hash);\n      this.props.web3.eth.getTransaction(this.props.hash,(err,transaction) => {\n        resolve(transaction);\n      });\n    }));\n\n    const newState = {};\n    if (transaction){\n      newState.transaction = transaction;\n    } else {\n      newState.processing = false;\n      newState.error = 'Unable to find the transaction';\n    }\n\n    this.setState(newState);\n    return transaction;\n  }\n\n  /*\n  Taken from https://ethgasstation.info/calculatorTxV.php\n  */\n  _estimateWait (prediction, gasoffered) {\n    var minedProb;\n    var expectedWait;\n    var sum1, sum2;\n    var intercept = 4.2794;\n    var hpa = .0329;\n    var hgo = -3.2836;\n    var tx = -0.0004;\n    var intercept2 = 7.5375;\n    var hpa_coef = -0.0801;\n    var txatabove_coef= 0.0003;\n    var high_gas_coef = .3532;\n\n    if (gasoffered > 1000000) {    \n      sum1 = intercept + (prediction['hashpower_accepting'] * hpa) + hgo  + (prediction['tx_atabove'] * tx);\n      sum2 = intercept2 + (prediction['hashpower_accepting'] * hpa_coef) + (prediction['tx_atabove'] * txatabove_coef) + high_gas_coef;\n    } else {\n      sum1 = intercept + (prediction['hashpower_accepting'] * hpa) + (prediction['tx_atabove'] * tx);\n      sum2 = intercept2 + (prediction['tx_atabove'] * txatabove_coef) + (prediction['hashpower_accepting'] * hpa_coef);\n    }\n\n    var factor = Math.exp(- 1 * sum1);\n    const prob = 1 / (1 + factor);\n\n    if (prob > .95) {\n      minedProb = 'Very High';\n    } else if (prob > .9 && prob <= .95) {\n      minedProb = 'Medium'\n    } else {\n      minedProb = 'Low';\n    }\n\n    expectedWait = Math.exp(sum2);\n    if (expectedWait < 2) {\n      expectedWait = 2;\n    }\n\n    if (gasoffered > 2000000) {\n      expectedWait += 100;\n    }\n\n    return [expectedWait, prediction['hashpower_accepting'], prediction['tx_atabove'], minedProb];\n  }\n\n  getBlockTime = async () => {\n    const pt = await axios.get('https://ethgasstation.info/json/ethgasAPI.json');\n    if (pt){\n      const blockTime = pt.data;\n      this.setState({\n        blockTime\n      });\n      return blockTime;\n    }\n    return null;\n  }\n\n  getPredictionTable = async () => {\n    const pt = await axios.get('https://ethgasstation.info/json/predictTable.json');\n    if (pt){\n      const predictTable = pt.data;\n      this.setState({\n        predictTable\n      });\n      return predictTable;\n    }\n    return null;\n  }\n\n  getTxEstimatedTime = (gasPrice) => {\n    let prediction = null;\n    if (this.state.predictTable){\n      this.state.predictTable.forEach((p,i) => {\n        if (!prediction && parseFloat(p.gasprice)>=parseFloat(gasPrice)){\n          prediction = p;\n          return true;\n        }\n      });\n    }\n\n    if (this.state.blockTime && prediction){\n      const pdValues = this._estimateWait(prediction,this.state.transaction.gas);\n      const blocksWait = pdValues[0];\n      const blockInterval = this.state.blockTime.block_time;\n      let txMeanSecs = blocksWait * blockInterval;\n      txMeanSecs = parseInt(txMeanSecs.toFixed(0));\n      this.functionsUtil.customLog('getTxEstimatedTime',prediction,this.state.transaction.gas,pdValues,txMeanSecs);\n      return txMeanSecs; // Customized\n    }\n\n    return null;\n  }\n\n  calculateRemainingTime = async () => {\n    let remainingTime = 0;\n    let estimatedTime = 0;\n\n    if (!this.state.transaction || this.componentUnmounted){\n      return false;\n    }\n\n    if (!this.state.transaction.blockNumber){\n      const gasPrice = parseFloat(this.functionsUtil.BNify(this.state.transaction.gasPrice).div(1e9).toString());\n      remainingTime = this.getTxEstimatedTime(gasPrice);\n    }\n\n    estimatedTime = remainingTime ? remainingTime : 0;\n\n    if (this.state.txTimestamp){\n      const currTimestamp = new Date().getTime();\n      const secondsPassed = parseInt((currTimestamp-parseInt(this.state.txTimestamp))/1000);\n      \n      // Calculate new remaining time\n      remainingTime -= secondsPassed;\n      remainingTime = Math.max(remainingTime,0);\n\n      this.functionsUtil.customLog('Estimated time',estimatedTime,'secondsPassed',secondsPassed,'New remaining time',remainingTime);\n    }\n\n    const timePassed = estimatedTime-remainingTime;\n    const percentage = estimatedTime>0 ? parseFloat(timePassed/estimatedTime) : 1;\n\n    this.setState({\n      estimatedTime,\n      remainingTime,\n      percentage\n    });\n\n    setTimeout(()=>{this.updateProgressBar()},1000);\n  }\n\n  updateProgressBar = () => {\n\n    if (this.componentUnmounted){\n      return false;\n    }\n\n    let remainingTime = this.state.remainingTime;\n    if (remainingTime){\n      remainingTime--;\n      if (!remainingTime){\n        this.setState({\n          percentage:1,\n          ended:true\n        });\n      } else {\n        const timePassed = this.state.estimatedTime-remainingTime;\n        const percentage = parseFloat(timePassed/this.state.estimatedTime);\n        this.setState({\n          percentage,\n          remainingTime\n        });\n        setTimeout(()=>{this.updateProgressBar()},1000);\n      }\n    } else {\n      this.setState({\n        percentage:1,\n        ended:true\n      });\n    }\n  }\n\n  getTxInfo = async () => {\n\n    // Get tx timestamp\n    const txProgressBarKey = `txProgressBarData`;\n    const txHash = this.props.hash.toLowerCase();\n\n    let txProgressBarData = null;\n    let txTimestamp = null;\n    let newState = {};\n\n    if (localStorage){\n      txProgressBarData = localStorage.getItem(txProgressBarKey);\n      if (txProgressBarData){\n        txProgressBarData = JSON.parse(txProgressBarData);\n      }\n    }\n\n    if (!txProgressBarData || !txProgressBarData[txHash]){\n      txTimestamp = new Date().getTime();\n\n      const [predictTable,blockTime] = await Promise.all([\n        this.getPredictionTable(),\n        this.getBlockTime()\n      ]);\n\n      txProgressBarData = {};\n      txProgressBarData[txHash] = {\n        txTimestamp,\n        blockTime,\n        predictTable\n      };\n\n      // Save progress bar status in localStorage\n      this.functionsUtil.setLocalStorage(txProgressBarKey,JSON.stringify(txProgressBarData));\n\n      newState = txProgressBarData[txHash];\n\n      if (!predictTable || !blockTime){\n        newState.error = 'Processing transaction';\n      }\n    }\n\n    this.setState(newState);\n  }\n\n  initProgressBar = async () => {\n\n    if (!this.props.hash || !this.props.web3){\n      return false;\n    }\n\n    const newState = {\n      initialized:true\n    };\n    this.setState(newState);\n\n    const transaction = await this.getTransaction();\n\n    if (transaction){\n      await this.getTxInfo();\n      try{\n        this.calculateRemainingTime();\n      } catch (err) {\n        newState.error = 'Processing transaction';\n\n        // const errStringified = JSON.stringify(err);\n      }\n\n      this.setState(newState);\n    }\n  }\n\n  renderRemainingTime(){\n    // More than 60 seconds\n    if (this.state.remainingTime>60){\n      const minutes = Math.floor(this.state.remainingTime/60);\n      const seconds = this.state.remainingTime-(minutes*60);\n      return ('0'+minutes).substr(-2)+':'+('0'+seconds).substr(-2)+' min';\n    } else {\n      return this.state.remainingTime+'s';\n    }\n  }\n\n  render() {\n    return (\n      <Flex flexDirection={'column'} alignItems={'center'}>\n        {\n          this.state.remainingTime !== null ? (\n            this.state.ended ? (\n              <FlexLoader\n                textProps={{\n                  ml:2,\n                  color:this.props.textColor ? this.props.textColor : 'copyColor'\n                }}\n                loaderProps={{\n                  size:'25px',\n                  ...this.props.loaderProps\n                }}\n                flexProps={{\n                  textAlign:'center',\n                  alignItems:'center',\n                  justifyContent:'center',\n                }}\n                text={this.props.endMessage ? this.props.endMessage : 'Finalizing transaction...'}\n              />\n            ) : (\n              <Flex\n                mb={2}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Text mb={2} color={ this.props.textColor ? this.props.textColor : 'copyColor'}>{ this.props.waitText ? this.props.waitText : 'Remaining time:' } <Text.span color={ this.props.textColor ? this.props.textColor : 'copyColor'} fontWeight={3}>{ this.renderRemainingTime() }</Text.span></Text>\n                <Progress value={ this.state.percentage } />\n              </Flex>\n            )\n          ) : (\n            this.state.error !== null && !this.state.processing ? (\n              <Flex\n                alignItems={'center'}\n                flexDirection={'column'}\n              >\n                <Icon\n                  size={'2em'}\n                  name={'Warning'}\n                  color={'cellText'}\n                />\n                <Text\n                  mt={0}\n                  fontSize={2}\n                  textAlign={'center'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                >\n                  {this.state.error}\n                </Text>\n              </Flex>\n            ) : (\n              <FlexLoader\n                textProps={{\n                  ml:2,\n                  color:this.props.textColor ? this.props.textColor : 'copyColor'\n                }}\n                loaderProps={{\n                  size:'25px',\n                  ...this.props.loaderProps\n                }}\n                flexProps={{\n                  textAlign:'center',\n                  alignItems:'center',\n                  justifyContent:'center',\n                }}\n                text={ this.state.error ? this.state.error : (this.props.hash ? (this.props.loadingMessage ? this.props.loadingMessage : 'Calculating estimated time...') : (this.props.sendingMessage ? this.props.sendingMessage : 'Sending transaction...') ) }\n              />\n            )\n          )\n        }\n        {\n          this.props.hash ? (\n            <Link\n              mt={0}\n              target={'_blank'}\n              hoverColor={'dark-gray'}\n              rel={\"nofollow noopener noreferrer\"}\n              href={`https://etherscan.io/tx/${this.props.hash}`}\n              color={this.props.textColor ? this.props.textColor : 'cellText'}\n            >\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={'center'}\n              >\n                <Text\n                  fontSize={0}\n                  textAlign={'center'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                >\n                  View in Etherscan\n                </Text>\n                <Icon\n                  ml={1}\n                  size={'0.75em'}\n                  name={'OpenInNew'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                />\n              </Flex>\n            </Link>\n          ) : typeof this.props.cancelTransaction === 'function' ? (\n              <Link\n                mt={0}\n                href={`javascript:void(0)`}\n                onClick={ e => this.props.cancelTransaction() }\n                color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                hoverColor={this.props.cancelTextHoverColor ? this.props.cancelTextHoverColor : 'dark-gray'}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'row'}\n                  justifyContent={'center'}\n                >\n                  <Text\n                    fontSize={0}\n                    textAlign={'center'}\n                    color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                  >\n                    Cancel transaction\n                  </Text>\n                  <Icon\n                    ml={1}\n                    size={'0.85em'}\n                    name={'Cancel'}\n                    color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                  />\n                </Flex>\n              </Link>\n          ) : null\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TxProgressBar;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericSelector from '../GenericSelector/GenericSelector';\n\nclass AssetSelector extends Component {\n\n  state = {\n    options:null,\n    defaultValue:null,\n    CustomOptionValue:null,\n    CustomValueContainer:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  loadComponents(){\n    const options = Object.keys(this.props.availableTokens).map(token => {\n      const tokenConfig = this.props.availableTokens[token];\n      return {\n        value:token,\n        label:token,\n        tokenConfig\n      };\n    });\n\n    const defaultValue = this.props.selectedToken ? options.find(v => (v.value.toUpperCase() === this.props.selectedToken.toUpperCase())) : null;\n\n    const CustomOptionValue = props => {\n      const token = props.value;\n      const tokenConfig = props.data.tokenConfig;\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={token}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={token}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n          {\n            this.state.props.showCustomField ? (\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:this.state.props.showCustomField,\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n            ) : this.props.showBalance &&\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:'tokenBalance',\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n          }\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : defaultValue;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const token = selectProps.value;\n      const tokenConfig = selectProps.tokenConfig;\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={token}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={token}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n\n          {\n            this.props.showBalance &&\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:'tokenBalance',\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n          }\n        </Flex>\n      );\n    }\n\n    this.setState({\n      options,\n      defaultValue,\n      CustomOptionValue,\n      CustomValueContainer\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadComponents();\n\n    this.setState({\n      props:this.props\n    });\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const availableTokensChanged = JSON.stringify(Object.keys(prevProps.availableTokens)) !== JSON.stringify(Object.keys(this.props.availableTokens));\n    if (availableTokensChanged || selectedTokenChanged){\n      this.loadComponents();\n    }\n  }\n\n  render() {\n    if (!this.state.options || !this.state.defaultValue || !this.state.CustomOptionValue || !this.state.CustomValueContainer || !this.props.availableTokens || !Object.keys(this.props.availableTokens).length){\n      return null;\n    }\n\n    return (\n      <GenericSelector\n        {...this.props}\n        name={'assets'}\n        options={this.state.options}\n        innerProps={this.props.innerProps}\n        isSearchable={this.props.isSearchable}\n        defaultValue={this.state.defaultValue}\n        selectedToken={this.props.selectedToken}\n        CustomOptionValue={this.state.CustomOptionValue}\n        CustomValueContainer={this.state.CustomValueContainer}\n        onChange={ this.props.onChange ? this.props.onChange : this.props.changeToken}\n      />\n    );\n  }\n}\n\nexport default AssetSelector;\n","import Select from 'react-select';\nimport React, { Component } from 'react';\nimport { Flex, Text, Input } from \"rimble-ui\";\nimport styles from './GenericSelector.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass GenericSelector extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadComponents();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const optionsChanged = JSON.stringify(prevProps.options) !== JSON.stringify(this.props.options);\n    const defaultValueChanged = JSON.stringify(prevProps.defaultValue) !== JSON.stringify(this.props.defaultValue);\n    const componentsChanged = prevProps.CustomOptionValue !== this.props.CustomOptionValue || prevProps.CustomValueContainer !== this.props.CustomValueContainer;\n\n    if (optionsChanged || selectedTokenChanged || defaultValueChanged || componentsChanged){\n      this.loadComponents();\n    }\n  }\n\n  async loadComponents(){\n    \n    const ControlComponent = props => {\n      const cardProps = Object.assign(\n        props.innerProps,\n        {\n          p:2,\n          width:1,\n          style:{cursor:'pointer'}\n        },\n        (this.props.innerProps ? this.props.innerProps : {})\n      );\n\n      if (props.menuIsOpen){\n        cardProps.boxShadow = 4;\n      }\n      return (\n        <DashboardCard\n          isInteractive={true}\n          cardProps={cardProps}\n        >\n          <Flex\n            width={1}\n            flexDirection={'row'}\n          >\n            {props.children}\n          </Flex>\n        </DashboardCard>\n      );\n    };\n\n    const CustomIndicatorSeparator = props => null;\n\n    const CustomMenu = props => {\n      const cardProps = Object.assign(props.innerProps,{\n        mt:2,\n        zIndex:1,\n        boxShadow:null,\n        position:'absolute'\n      });\n      return (\n        <DashboardCard\n          cardProps={cardProps}\n        >\n          {props.children}\n        </DashboardCard>\n      );\n    }\n\n    const CustomValueContainer = this.props.CustomValueContainer ? this.props.CustomValueContainer : props => {\n      return (\n        <Flex\n          {...props.innerProps}\n        >\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            <Text\n              fontWeight={3}\n            >\n              {props.selectProps.value.label}\n            </Text>\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomOptionValue = this.props.CustomOptionValue ? this.props.CustomOptionValue : (props) => {\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n        >\n          <Text>\n            {props.label}\n          </Text>\n        </Flex>\n      );\n    };\n\n    const CustomInputContainer = this.props.CustomInputContainer ? this.props.CustomInputContainer : (props) => {\n\n      if (!props.selectProps.isSearchable){\n        return null;\n      }\n\n      return (\n        <Input\n          {...props}\n          fontSize={this.props.theme.fontSizes[2]}\n          color={this.props.theme.colors.copyColor}\n          fontWeight={this.props.theme.fontWeights[3]}\n          fontFamily={this.props.theme.fonts.sansSerif}\n          backgroundColor={this.props.theme.colors.cardBg}\n          className={[styles.searchInput,this.props.themeMode==='dark' ? styles.dark : null,!props.selectProps.menuIsOpen ? styles.searchInputHidden : null]}\n        />\n      );\n    };\n\n    const CustomOption = (props) => {\n\n      const options = props.selectProps.options;\n      let selectedValue = props.selectProps && props.selectProps.value && props.selectProps.value.value;\n\n      // Check if the selectedValue is included in options\n      if (selectedValue && options.map( o => o.value ).indexOf(selectedValue) === -1 && this.props.defaultValue){\n        selectedValue = this.props.defaultValue.value;\n      }\n\n      // Don't show selected value\n      if (selectedValue && selectedValue === props.value){\n        return null;\n      }\n\n      return (\n        <Flex\n          px={3}\n          py={2}\n          width={1}\n          {...props.innerProps}\n          alignItems={'center'}\n          flexDirection={'row'}\n          style={{cursor:'pointer'}}\n          justifyContent={'flex-start'}\n          className={styles.genericSelector}\n          backgroundColor={ props.isFocused ? 'selectBgFocused' : 'selectBg' }\n        >\n          <CustomOptionValue\n            {...props}\n          />\n        </Flex>\n      );\n    }\n\n    await this.setState({\n      CustomMenu,\n      CustomOption,\n      ControlComponent,\n      CustomValueContainer,\n      CustomInputContainer,\n      CustomIndicatorSeparator\n    });\n  }\n\n  render() {\n    const isSearchable = typeof this.props.isSearchable !== 'undefined' ? this.props.isSearchable : false;\n    return (\n      <Select\n        name={this.props.name}\n        isSearchable={isSearchable}\n        options={this.props.options}\n        defaultValue={this.props.defaultValue}\n        onChange={ v => this.props.onChange(v.value) }\n        components={{\n            Menu: this.state.CustomMenu,\n            Option: this.state.CustomOption,\n            Control: this.state.ControlComponent,\n            Input: this.state.CustomInputContainer,\n            SingleValue: this.state.CustomValueContainer,\n            IndicatorSeparator: this.state.CustomIndicatorSeparator\n        }}\n      />\n    );\n  }\n}\n\nexport default GenericSelector;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"Tos_headerContainer__23W_f\",\"headerBgFiller\":\"Tos_headerBgFiller__36Nfk\",\"bgContainer\":\"Tos_bgContainer__rX7uJ\",\"list\":\"Tos_list__3bMLG\",\"textContainer\":\"Tos_textContainer__3hUuq\"};","import theme from '../theme';\nimport React, { Component } from 'react';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Icon, Link, Image } from \"rimble-ui\";\nimport ShortHash from \"../utilities/components/ShortHash\";\n\nclass TransactionField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadField();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const hashChanged = prevProps.hash !== this.props.hash;\n    const accountChanged = prevProps.account !== this.props.account;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    if (fieldChanged || hashChanged || accountChanged){\n      this.loadField();\n    }\n  }\n\n  async loadField(){\n    const fieldInfo = this.props.fieldInfo;\n    if (this.props.hash && this.props.account){\n      switch (fieldInfo.name){\n        case 'icon':\n        break;\n        case 'hash':\n          \n        break;\n        case 'action':\n          \n        break;\n        case 'date':\n        break;\n        case 'status':\n        break;\n        case 'amount':\n        break;\n        case 'asset':\n        break;\n        default:\n        break;\n      }\n    }\n  }\n\n  render(){\n    let icon = null;\n    let color = null;\n    let output = null;\n    let bgColor = theme.colors.transactions.actionBg.default;\n    const fieldInfo = this.props.fieldInfo;\n    const transaction = this.props.transaction;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      style:{\n        maxWidth:'100%',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis'\n      },\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    switch (fieldInfo.name){\n      case 'icon':\n        if (transaction.action){\n          color = theme.colors.transactions.action[transaction.action.toLowerCase()] ? theme.colors.transactions.action[transaction.action.toLowerCase()] : color;\n          bgColor = theme.colors.transactions.actionBg[transaction.action.toLowerCase()] ? theme.colors.transactions.actionBg[transaction.action.toLowerCase()] : bgColor;\n        }\n        switch (transaction.action.toLowerCase()) {\n          case 'deposit':\n          case 'curveout':\n          case 'curvezapout':\n          case 'curvedepositout':\n            icon = \"ArrowDownward\";\n          break;\n          case 'boost':\n            icon = \"TrendingUp\";\n          break;\n          case 'redeem':\n          case 'curvein':\n          case 'curvezapin':\n          case 'curvedepositin':\n            icon = \"ArrowUpward\";\n          break;\n          case 'send':\n            icon = \"Send\";\n          break;\n          case 'receive':\n            icon = \"Redo\";\n          break;\n          case 'migrate':\n            // icon = \"Sync\";\n            icon = \"Repeat\";\n          break;\n          case 'swap':\n            icon = \"SwapHoriz\";\n          break;\n          case 'swapout':\n            icon = \"SwapHoriz\";\n          break;\n          case 'withdraw':\n            icon = \"ArrowUpward\";\n          break;\n          default:\n            icon = \"Refresh\";\n          break;\n        }\n        output = (\n          <Flex\n            p={'5px'}\n            borderRadius={'50%'}\n            {...fieldProps}\n            alignItems={'center'}\n            backgroundColor={bgColor}\n            justifyContent={'center'}\n          >\n            <Icon\n              name={icon}\n              color={color}\n              align={'center'}\n              size={this.props.isMobile ? '1em' : '1.4em'}\n            />\n          </Flex>\n        );\n      break;\n      case 'hash':\n        if (transaction.hash){\n          output = (\n            <Link\n              target={'_blank'}\n              rel={'nofollow noopener noreferrer'}\n              href={`https://etherscan.io/tx/${transaction.hash}`}\n            >\n              <ShortHash\n                fontSize={1}\n                color={'white'}\n                {...fieldProps}\n                hash={transaction.hash}\n              />\n            </Link>\n          );\n        }\n      break;\n      case 'action':\n        let action = transaction.action;\n        switch (transaction.action) {\n          case 'Swap':\n            action = \"Swap In\";\n          break;\n          case 'SwapOut':\n            action = \"Swap Out\";\n          break;\n          default:\n          break;\n        }\n        output = (\n          <Text {...fieldProps}>{action.toUpperCase()}</Text>\n        );\n      break;\n      case 'date':\n        const formattedDate = transaction.momentDate.format('DD MMM, YYYY');\n        output = (\n          <Text {...fieldProps}>{formattedDate}</Text>\n        );\n      break;\n      case 'statusIcon':\n        color = theme.colors.transactions.status[transaction.status.toLowerCase()];\n        switch (transaction.status) {\n          case 'Completed':\n            icon = \"Done\";\n          break;\n          case 'Pending':\n            icon = \"Timelapse\";\n          break;\n          case 'Failed':\n            icon = \"ErrorOutline\";\n          break;\n          default:\n          break;\n        }\n        output = (\n          <Flex\n            p={[0,'1px']}\n            borderRadius={'50%'}\n            {...fieldProps}\n            alignItems={'center'}\n            width={['24px','26px']}\n            height={['24px','26px']}\n            justifyContent={'center'}\n            border={ this.props.isMobile ? `1px solid ${color}` : `2px solid ${color}` }\n          >\n            <Icon\n              name={icon}\n              color={color}\n              align={'center'}\n              size={ this.props.isMobile ? '1em' : '1.2em'}\n            />\n          </Flex>\n        );\n      break;\n      case 'status':\n        output = (\n          <Text {...fieldProps}>{transaction.status}</Text>\n        );\n      break;\n      case 'amount':\n        output = (\n          <SmartNumber {...fieldProps} number={transaction.amount} />\n        );\n      break;\n      case 'tokenIcon':\n        output = (\n          <Image src={`images/tokens/${transaction.tokenSymbol.toUpperCase()}.svg`} {...fieldProps} />\n        );\n      break;\n      case 'tokenName':\n        output = (\n          <Text {...fieldProps}>{transaction.tokenSymbol}</Text>\n        );\n      break;\n      default:\n      break;\n    }\n    return output;\n  }\n}\n\nexport default TransactionField;\n","import { Heading } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass Title extends Component {\n  render() {\n    const props = {\n      fontWeight:4,\n      fontSize:[4,6],\n      color:'copyColor',\n      textAlign:'center',\n      lineHeight:'initial',\n    };\n\n    // Replace props\n    if (this.props && Object.keys(this.props).length){\n      Object.keys(this.props).forEach(p => {\n        props[p] = this.props[p];\n      });\n    }\n\n    const HeadingComponent = this.props.component ? this.props.component : Heading.h1;\n\n    return (\n      <HeadingComponent\n        {...props}\n      >\n        {this.props.children}\n      </HeadingComponent>\n    );\n  }\n}\n\nexport default Title;\n","/*\nTheming: https://github.com/plouc/nivo/issues/308\n*/\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\n\nclass GenericChart extends Component {\n  state = {\n    width:null,\n    height:null\n  };\n\n  componentUnmounted = false;\n\n  componentWillMount() {\n    window.addEventListener('resize', this.handleWindowSizeChange.bind(this));\n  }\n\n  componentWillUnmount() {\n    this.componentUnmounted = true;\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n\n  componentDidMount(){\n    this.handleWindowSizeChange();\n  }\n\n  componentDidUpdate(prevProps){\n    if (prevProps.isMobile !== this.props.isMobile){\n      this.handleWindowSizeChange();\n    }\n  }\n\n  handleWindowSizeChange(){\n    if (this.componentUnmounted){\n      return false;\n    }\n\n    const newState = {...this.state};\n\n    if (this.props.parentId){\n      const chartContainer = document.getElementById(this.props.parentId);\n      if (chartContainer){\n        const chartWidth = parseFloat(chartContainer.offsetWidth)>0 ? chartContainer.offsetWidth : 0;\n\n        if (chartWidth && chartWidth !== newState.width){\n          newState.width = chartWidth;\n        }\n      }\n    }\n\n    if (!newState.width && this.props.width && this.props.width !== newState.width) {\n      newState.width = this.props.width;\n    }\n\n    if (this.props.parentIdHeight){\n      const chartContainerH = document.getElementById(this.props.parentIdHeight);\n      if (chartContainerH){\n        const chartHeight = parseFloat(chartContainerH.offsetWidth)>0 ? chartContainerH.offsetWidth : 0;\n        if (chartHeight && chartHeight !== newState.height){\n          newState.height = chartHeight;\n        }\n      }\n    }\n\n    if (!newState.height && this.props.height && this.props.height !== newState.height) {\n      newState.height = this.props.height;\n    }\n\n    if (Object.keys(newState).length>0){\n      this.setState(newState);\n    }\n  };\n\n  render() {\n    const ChartType = this.props.type;\n\n    const height = this.state.height && !isNaN(this.state.height) ? parseInt(this.state.height) : 350;\n    const width = this.state.width && !isNaN(this.state.width) ? parseInt(this.state.width) : 0;\n\n    let chartProps = Object.assign({},this.props);\n    chartProps = {\n      ...chartProps,\n      height,\n      width\n    }\n\n    return chartProps.showLoader && (!chartProps.data || !width || !height) ? (\n      <FlexLoader\n        flexProps={{\n          flexDirection:'row',\n          minHeight:height\n        }}\n        loaderProps={ this.props.loaderProps ? this.props.loaderProps : {\n          size:'30px'\n        }}\n        textProps={{\n          ml:2\n        }}\n        text={ this.props.loaderText !== undefined ? this.props.loaderText : 'Loading graph data...'}\n      />\n    ) : this.props.data && (\n      <ChartType\n        {...chartProps}\n      />\n    )\n  }\n}\n\nexport default GenericChart;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"defaultOpacity\":\"DashboardCard_defaultOpacity__1B1rs\",\"hidden\":\"DashboardCard_hidden__8pO5t\",\"interactive\":\"DashboardCard_interactive__2adxr\",\"rainbow\":\"DashboardCard_rainbow__3HCI7\",\"disabled\":\"DashboardCard_disabled__uqHO2\"};","import { Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass FastBalanceSelector extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n\n    let cardProps = {\n      p:2,\n      width:0.23,\n      onMouseDown:this.props.onMouseDown\n    };\n\n    let textProps = {\n      fontSize:2,\n      fontWeight:3,\n      textAlign:'center',\n      color:this.props.isActive ? 'copyColor' : 'legend'\n    }\n\n    cardProps = this.functionsUtil.replaceArrayProps(cardProps,this.props.cardProps);\n    textProps = this.functionsUtil.replaceArrayProps(textProps,this.props.textProps);\n\n    return (\n      <DashboardCard\n        isInteractive={true}\n        cardProps={cardProps}\n        isActive={this.props.isActive}\n      >\n        <Text \n          {...textProps}\n        >\n          {this.props.percentage}%\n        </Text>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default FastBalanceSelector;","import React, { Component } from 'react';\nimport IconBox from '../IconBox/IconBox';\nimport ExtLink from '../ExtLink/ExtLink';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport { Flex, Box, Text, Icon, Link, Input, Checkbox } from \"rimble-ui\";\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\n\nclass SendTxWithBalance extends Component {\n\n  state = {\n    processing:{\n      txHash:null,\n      loading:false\n    },\n    inputValue:null,\n    txSucceeded:false,\n    permitEnabled:true,\n    showPermitBox:false,\n    buttonDisabled:true,\n    contractApproved:false,\n    fastBalanceSelector:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    await this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const actionChanged = prevProps.action !== this.props.action;\n    const accountChanged = prevProps.account !== this.props.account;\n    const tokenBalanceChanged = prevProps.tokenBalance !== this.props.tokenBalance;\n    const permitEnabledChanged = prevState.permitEnabled !== this.state.permitEnabled;\n    const approveEnabledChanged = prevProps.approveEnabled !== this.props.approveEnabled;\n    const contractChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    if (actionChanged || accountChanged || tokenBalanceChanged || contractChanged || tokenConfigChanged || approveEnabledChanged || permitEnabledChanged){\n      await this.loadData();\n    }\n\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    if (contractApprovedChanged){\n      if (typeof this.props.contractApproved === 'function'){\n        this.props.contractApproved(this.state.contractApproved);\n      }\n    }\n\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector !== prevState.fastBalanceSelector;\n    if (fastBalanceSelectorChanged || actionChanged){\n      this.setInputValue();\n    }\n\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue;\n    if (inputValueChanged){\n      this.checkButtonDisabled();\n    }\n  }\n\n  changeInputValue = (e,call_callback=true) => {\n    const fastBalanceSelector = null;\n    const inputValue = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n    if (this.state.inputValue !== inputValue){\n      this.setState((prevState) => ({\n        inputValue,\n        fastBalanceSelector\n      }),() => {\n        if (call_callback && typeof this.props.changeInputCallback === 'function'){\n          this.props.changeInputCallback(this.state.inputValue);\n        }\n      });\n    }\n  }\n\n  setInputValue = () => {\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n    const inputValue = this.props.tokenBalance && !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() ? this.functionsUtil.BNify(this.props.tokenBalance).times(selectedPercentage) : null;\n\n    this.changeInputValue({\n      target:{\n        value:inputValue.toString()\n      }\n    });\n  }\n\n  getFastBalanceSelector = () => {\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n    return this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n  }\n\n  showPermitBox(){\n    this.setState({\n      showPermitBox:true\n    });\n  }\n\n  togglePermitEnabled(permitEnabled){\n    this.setState({\n      permitEnabled\n    });\n  }\n\n  setFastBalanceSelector = (fastBalanceSelector) => {\n    this.setState({\n      fastBalanceSelector\n    });\n  }\n\n  checkButtonDisabled = (amount=null) => {\n    if (!amount){\n      amount = this.state.inputValue;\n    }\n    amount = this.functionsUtil.BNify(amount);\n    const buttonDisabled = amount.isNaN() || amount.lte(0) || amount.gt(this.props.tokenBalance);\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  approve = async () => {\n    // Check if the migration contract is approved\n    const contractApproved = await this.checkContractApproved();\n\n    if (!contractApproved){\n\n      const callbackApprove = (tx,error) => {\n        // Send Google Analytics event\n        const eventData = {\n          eventAction: 'approve',\n          eventCategory: 'CurveDeposit',\n          eventLabel: tx ? tx.status : null\n        };\n\n        const txSucceeded = tx && tx.status === 'success';\n\n        if (error){\n          eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n        }\n\n        // Send Google Analytics event\n        if (error || eventData.status !== 'error'){\n          this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n        }\n\n        this.setState((prevState) => ({\n          contractApproved: txSucceeded, // True\n          processing: {\n            ...prevState.processing,\n            txHash:null,\n            loading:false\n          }\n        }));\n\n        if (typeof this.props.callbackApprove === 'function' && txSucceeded){\n          this.props.callbackApprove(tx);\n        }\n      };\n\n      const callbackReceiptApprove = (tx) => {\n        const txHash = tx.transactionHash;\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            txHash\n          }\n        }));\n      };\n\n      // console.log(this.props.tokenConfig.token,this.props.contractInfo.address);\n\n      this.functionsUtil.enableERC20(this.props.tokenConfig.token,this.props.contractInfo.address,callbackApprove,callbackReceiptApprove);\n\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash:null,\n          loading:true\n        },\n        contractApproved:false\n      }));\n    } else {\n      this.setState({\n        contractApproved:true\n      });\n    }\n  }\n\n  executeTx = async () => {\n\n    const inputValue = this.state.inputValue ? this.functionsUtil.BNify(this.state.inputValue) : null;\n    if (!inputValue){\n      return false;\n    }\n\n    const _amount = this.functionsUtil.normalizeTokenAmount(inputValue,this.props.tokenConfig.decimals);\n\n    // console.log('executeTx',params);\n\n    const callback = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventLabel: tx.status,\n        eventCategory: `CurveDeposit`,\n        eventValue: inputValue.toFixed(),\n        eventAction: this.props.tokenConfig.token,\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState({\n        txSucceeded,\n        processing: {\n          txHash:null,\n          loading:false\n        }\n      });\n\n      if (txSucceeded){\n        // Reset input\n        this.changeInputValue({\n          target:{\n            value:0\n          }\n        },false);\n        this.setState({\n          showPermitBox:false\n        });\n        // Call upper component callback\n        if (typeof this.props.callback === 'function'){\n          this.props.callback(tx,_amount,params);\n        }\n      }\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    const contractName = this.props.contractInfo.name;\n\n    let params = null;\n\n    // Check contract approved without permit\n    const contractApproved = await this.checkContractApproved(false);\n\n    const permitEnabled = this.props.permitEnabled && this.state.permitEnabled && !contractApproved;\n    if (permitEnabled){\n      const signedParameters = await this.functionsUtil.signPermit(this.props.tokenConfig.token, this.props.account, contractName);\n      if (signedParameters){\n        params = this.props.getPermitTransactionParams(_amount,signedParameters);\n      }\n    } else {\n      params = this.props.getTransactionParams(_amount);\n    }\n\n    if (params){\n      let {\n        methodName,\n        methodParams\n      } = params;\n\n      const value = params.value || null;\n\n      this.props.contractMethodSendWrapper(contractName, methodName, methodParams, value, callback, callbackReceipt);\n\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          loading:true\n        }\n      }));\n    } else {\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          loading:false\n        }\n      }));\n    }\n  }\n\n  cancelTransaction = async () => {\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  async checkContractApproved(checkPermit=true){\n\n    if (checkPermit && this.props.permitEnabled && this.state.permitEnabled){\n      return true;\n    }\n\n    if (this.props.approveEnabled !== undefined && !this.props.approveEnabled){\n      return true;\n    }\n\n    const contractInfo = await this.props.initContract(this.props.contractInfo.name,this.props.contractInfo.address,this.props.contractInfo.abi);\n    if (contractInfo){\n      const contractApproved = await this.functionsUtil.checkTokenApproved(this.props.tokenConfig.token,this.props.contractInfo.address,this.props.account);\n      return contractApproved;\n    }\n    \n    return false;\n  }\n\n  async loadData(){\n    const inputValue = null;\n    const fastBalanceSelector = null;\n    const contractApproved = await this.checkContractApproved();\n    this.setState({\n      inputValue,\n      contractApproved,\n      fastBalanceSelector\n    });\n  }\n\n  approveCallback = () => {\n    this.loadData();\n  }\n\n  render() {\n\n    const action = this.props.action ? this.props.action : 'Deposit';\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'stretch'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          this.props.tokenConfig && !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() && this.functionsUtil.BNify(this.props.tokenBalance).gt(0) ? (\n            <Box\n              width={1}\n            >\n              {\n                this.props.infoBox && (\n                  <IconBox\n                    cardProps={{\n                      mb:3\n                    }}\n                    {...this.props.infoBox}\n                  />\n                )\n              }\n              {\n                this.props.steps && this.props.steps.length>0 && (\n                  <DashboardCard\n                    cardProps={{\n                      p:3,\n                      px:[2,4]\n                    }}\n                  >\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                    > \n                      {\n                        this.props.steps.map( (step,stepIndex) => (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            key={`step_${stepIndex}`}\n                          >\n                            <Icon\n                              size={'1.5em'}\n                              name={ step.completed ? 'CheckBox' : step.icon}\n                              color={ step.completed ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                            />\n                            {\n                              step.link ? (\n                                <ExtLink\n                                  ml={2}\n                                  fontSize={2}\n                                  color={'blue'}\n                                  fontWeight={1}\n                                  href={step.link}\n                                  textAlign={'left'}\n                                  hoverColor={'blue'}\n                                >\n                                  {step.description}\n                                </ExtLink>\n                              ) : (\n                                <Text\n                                  ml={2}\n                                  fontSize={2}\n                                  fontWeight={1}\n                                  color={'cellText'}\n                                  textAlign={'left'}\n                                >\n                                  {step.description}\n                                </Text>\n                              )\n                            }\n                          </Flex>\n                        ) )\n                      }\n                    </Flex>\n                  </DashboardCard>\n                )\n              }\n              {\n                !this.state.contractApproved ?\n                  this.state.processing.loading ? (\n                    <Flex\n                      mt={3}\n                      flexDirection={'column'}\n                    >\n                      <TxProgressBar\n                        web3={this.props.web3}\n                        waitText={`Approve estimated in`}\n                        hash={this.state.processing.txHash}\n                        endMessage={`Finalizing approve request...`}\n                        cancelTransaction={this.cancelTransaction.bind(this)}\n                      />\n                    </Flex>\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'2.3em'}\n                          name={'LockOpen'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          {this.props.approveDescription}\n                        </Text>\n                        <RoundButton\n                          buttonProps={{\n                            mt:3,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.approve.bind(this)}\n                        >\n                          Approve\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  )\n                : this.state.processing.loading ? (\n                  <Flex\n                    mt={3}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      web3={this.props.web3}\n                      hash={this.state.processing.txHash}\n                      endMessage={`Finalizing ${action} request...`}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                      waitText={`${this.functionsUtil.capitalize(action)} estimated in`}\n                    />\n                  </Flex>\n                ) : (\n                  <Box\n                    mt={2}\n                    width={1}\n                  >\n                    {\n                      this.state.showPermitBox && this.props.permitEnabled ? (\n                        <DashboardCard\n                          cardProps={{\n                            py:3,\n                            px:3,\n                            mt:3,\n                            display:'flex',\n                            alignItems:'center',\n                            flexDirection:'column',\n                            justifyContent:'center',\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Icon\n                              size={'1.8em'}\n                              color={'cellText'}\n                              name={'LightbulbOutline'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={1}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              Approve and Deposit in a single transaction is supported for this transaction, disable this feature and try again if you can't deposit.\n                            </Text>\n                          </Flex>\n                          <Checkbox\n                            mt={1}\n                            required={false}\n                            checked={this.state.permitEnabled}\n                            label={`Approve and Deposit in a single transaction`}\n                            onChange={ e => this.togglePermitEnabled(e.target.checked) }\n                          />\n                        </DashboardCard>\n                      ) : !this.state.showPermitBox && this.props.permitEnabled && (\n                        <Flex\n                          p={0}\n                          mt={3}\n                          width={1}\n                          borderRadius={2}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'center'}\n                        >\n                          <Link\n                            textAlign={'center'}\n                            hoverColor={'primary'}\n                            onClick={this.showPermitBox.bind(this)}\n                          >\n                            Having trouble with the Permit signature?\n                          </Link>\n                        </Flex>\n                      )\n                    }\n                    <Flex\n                      mt={2}\n                      mb={3}\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        mb={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={this.props.balanceSelectorInfo ? 'space-between' : 'flex-end'}\n                      >\n                        {\n                          this.props.balanceSelectorInfo && (\n                            <Flex\n                              width={1}\n                              maxWidth={'50%'}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                            >\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                textAlign={'left'}\n                                style={{\n                                  maxWidth:'100%',\n                                  overflow:'hidden',\n                                  whiteSpace:'nowrap',\n                                  textOverflow:'ellipsis'\n                                }}\n                                color={this.props.balanceSelectorInfo.color ? this.props.balanceSelectorInfo.color : 'copyColor'}\n                              >\n                                {this.props.balanceSelectorInfo.text}\n                              </Text>\n                            </Flex>\n                          )\n                        }\n                        {\n                          !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() && (\n                            <Flex\n                              width={1}\n                              maxWidth={'50%'}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'flex-end'}\n                            >\n                              <Link\n                                fontSize={1}\n                                fontWeight={3}\n                                color={'dark-gray'}\n                                textAlign={'right'}\n                                hoverColor={'copyColor'}\n                                onClick={ (e) => this.setFastBalanceSelector(100) }\n                                style={{\n                                  maxWidth:'100%',\n                                  overflow:'hidden',\n                                  whiteSpace:'nowrap',\n                                  textOverflow:'ellipsis'\n                                }}\n                              >\n                                Balance: {this.functionsUtil.BNify(this.props.tokenBalance).toFixed(this.props.isMobile ? 2 : 4)} {this.props.tokenConfig.token}\n                              </Link>\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                      <Input\n                        min={0}\n                        type={\"number\"}\n                        required={true}\n                        height={'3.4em'}\n                        borderRadius={2}\n                        fontWeight={500}\n                        borderColor={'cardBorder'}\n                        backgroundColor={'cardBg'}\n                        boxShadow={'none !important'}\n                        placeholder={`Insert amount`}\n                        onChange={this.changeInputValue.bind(this)}\n                        border={`1px solid ${this.props.theme.colors.divider}`}\n                        value={this.state.inputValue !== null ? this.functionsUtil.BNify(this.state.inputValue).toFixed() : ''}\n                      />\n                      <Flex\n                        mt={2}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        {\n                          [25,50,75,100].map( percentage => (\n                            <FastBalanceSelector\n                              percentage={percentage}\n                              key={`selector_${percentage}`}\n                              onMouseDown={()=>this.setFastBalanceSelector(percentage)}\n                              isActive={this.state.fastBalanceSelector === parseInt(percentage)}\n                            />\n                          ))\n                        }\n                      </Flex>\n                      <Flex\n                        mt={2}\n                        justifyContent={'center'}\n                      >\n                        <RoundButton\n                          buttonProps={{\n                            mt:2,\n                            width:[1,1/2],\n                            style:{\n                              textTransform:'capitalize'\n                            },\n                            disabled:this.state.buttonDisabled\n                          }}\n                          handleClick={this.executeTx.bind(this)}\n                        >\n                          {this.props.action}\n                        </RoundButton>\n                      </Flex>\n                    </Flex>\n                  </Box>\n                )\n              }\n            </Box>\n          ) : this.props.children\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default SendTxWithBalance;","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n// import TokenWrapper from '../TokenWrapper/TokenWrapper';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass Staking extends Component {\n\n  state = {\n    stats:[],\n    steps:null,\n    infoBox:null,\n    globalStats:[],\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    balanceProp:null,\n    tokenBalance:null,\n    contractInfo:null,\n    stakedBalance:null,\n    selectedToken:null,\n    accountingData:null,\n    selectedAction:null,\n    selectedOption:null,\n    successMessage:null,\n    permitEnabled:false,\n    availableTokens:null,\n    approveEnabled:false,\n    contractApproved:false,\n    tokenWrapperProps:null,\n    distributionSpeed:null,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    transactionSucceeded:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      const tokenConfig = this.props.toolProps.availableTokens[this.state.selectedToken];\n      const contractInfo = tokenConfig.contract;\n\n      // Init contracts\n      await Promise.all([\n        this.props.initContract(contractInfo.name,contractInfo.address,contractInfo.abi),\n        this.props.initContract(this.state.selectedToken,tokenConfig.address,tokenConfig.abi)\n      ]);\n\n      this.setState({\n        tokenConfig,\n        contractInfo\n      },() => {\n        this.updateData();\n      });\n    }\n\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    if (selectedActionChanged || contractApprovedChanged){\n      this.setState({\n        tokenWrapperProps:null,\n        showTokenWrapperEnabled:false\n      },() => {\n        this.updateData(selectedActionChanged);\n      });\n    }\n\n    const contractInfoChanged = JSON.stringify(prevState.contractInfo) !== JSON.stringify(this.state.contractInfo);\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async changeInputCallback(inputValue=null){\n\n    let infoBox = null;\n\n    if (inputValue && this.functionsUtil.BNify(inputValue).gt(0)){\n      switch (this.state.selectedAction){\n        case 'Stake':\n          let rewardsPerDay = this.functionsUtil.BNify(this.state.userDistributionSpeed).gt(0) ? this.state.userDistributionSpeed.times(86400) : this.functionsUtil.BNify(0);\n          const totalRewardsPerDay = this.functionsUtil.formatMoney(Math.min(parseFloat(this.state.totalRewards),parseFloat(rewardsPerDay.plus(this.state.distributionSpeed.times(inputValue).div(this.functionsUtil.fixTokenDecimals(this.state.totalStakingShares,this.state.contractInfo.decimals).plus(inputValue)).times(86400)))));\n          // console.log(parseFloat(rewardsPerDay),parseFloat(totalRewardsPerDay));\n          infoBox = {\n            icon:'FileDownload',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`By staking <strong>${inputValue} ${this.state.tokenConfig.token}</strong> you will get <strong>${totalRewardsPerDay} ${this.state.contractInfo.rewardToken} / day</strong><br /><small style=\"color:#ff9900\">(based on you current reward multiplier)</small>`\n          };\n        break;\n        case 'Withdraw':\n          const normalizedInputValue = this.functionsUtil.normalizeTokenAmount(inputValue,this.state.tokenConfig.decimals);\n          let unstakeRewards = await this.functionsUtil.genericContractCall(this.state.contractInfo.name,'unstakeQuery',[normalizedInputValue.toString()],{from:this.props.account});\n          unstakeRewards = this.functionsUtil.formatMoney(this.functionsUtil.fixTokenDecimals(unstakeRewards,this.state.tokenConfig.decimals));\n          infoBox = {\n            icon:'FileUpload',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`By unstaking <strong>${inputValue} ${this.state.tokenConfig.token}</strong> you will get <strong>${unstakeRewards} ${this.state.contractInfo.rewardToken}</strong>`\n          };\n        break;\n        default:\n        break;\n      }\n    }\n\n    this.setState({\n      infoBox\n    });\n    /*\n    let balanceSelectorInfo = null;\n    inputValue = inputValue || this.state.inputValue;\n\n    if (inputValue && this.functionsUtil.BNify(inputValue).gt(0)){\n      switch (this.state.selectedAction){\n        case 'Stake':\n        break;\n        case 'Withdraw':\n        break;\n        default:\n        break;\n      }\n    }\n\n    this.setState({\n      inputValue,\n      balanceSelectorInfo\n    });\n    */\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = [];\n    amount = this.functionsUtil.toBN(amount);\n    switch (this.state.selectedAction){\n      case 'Stake':\n        methodName = 'wrapAndStake';\n        methodParams = [amount];\n      break;\n      case 'Withdraw':\n        methodName = 'unstakeAndUnwrap';\n        methodParams = [amount];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  getPermitTransactionParams(amount,signedParameters){\n    let methodName = null;\n    let methodParams = [];\n    const { expiry, r, s, v } = signedParameters;\n    amount = this.functionsUtil.toBN(amount);\n    switch (this.state.selectedAction){\n      case 'Stake':\n        methodName = 'permitWrapAndStakeUnlimited';\n        methodParams = [amount, expiry, v, r, s];\n      break;\n      case 'Withdraw':\n        methodName = 'unstakeAndUnwrap';\n        methodParams = [amount];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    // console.log('transactionSucceeded',tx);\n    let infoBox = null;\n    switch (this.state.selectedAction){\n      case 'Stake':\n        const stakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const stakedTokens = stakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(stakedTokensLog.data,16),this.state.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully staked <strong>${stakedTokens.toFixed(4)} ${this.state.selectedToken}</strong>`\n        }\n      break;\n      case 'Withdraw':\n        const unstakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.address.toLowerCase() ) : null;\n        const unstakedTokens = unstakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(unstakedTokensLog.data,16),this.state.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.state.contractInfo.rewardToken]);\n        const receivedRewardsLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => (log.address.toLowerCase() === rewardTokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) )) ) : null;\n        const receivedRewards = receivedRewardsLog ? this.functionsUtil.fixTokenDecimals(parseInt(receivedRewardsLog.data,16),this.state.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully withdrawn <strong>${unstakedTokens.toFixed(4)} ${this.state.selectedToken}</strong> and received <strong>${receivedRewards.toFixed(4)} ${this.state.contractInfo.rewardToken}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    const transactionSucceeded = true;\n\n    this.setState({\n      infoBox,\n      transactionSucceeded\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async updateData(selectedActionChanged=false){\n    const newState = {};\n\n    newState.balanceProp = this.functionsUtil.BNify(0)\n    newState.tokenBalance = this.functionsUtil.BNify(await this.functionsUtil.getTokenBalance(this.state.selectedToken,this.props.account));\n    newState.stakedBalance = this.functionsUtil.BNify(await this.functionsUtil.genericContractCall(this.state.contractInfo.name,'totalStakedFor',[this.props.account]));\n\n    switch (this.state.selectedAction){\n      case 'Stake':\n        newState.permitEnabled = true;\n        newState.approveEnabled = true;\n        newState.balanceProp = newState.tokenBalance;\n        newState.approveDescription = 'Approve the Staking contract to stake your LP tokens';\n        newState.tokenWrapperProps = {\n          startContract:{\n            name:'ETH',\n            token:'ETH',\n            decimals:18,\n            wrapMethod:'deposit',\n          },\n          destContract:{\n            unwrapMethod:'withdraw',\n            ...this.state.tokenConfig\n          },\n        };\n      break;\n      case 'Withdraw':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = this.functionsUtil.fixTokenDecimals(newState.stakedBalance,this.state.tokenConfig.decimals);\n        newState.tokenWrapperProps = {\n          startContract:{\n            name:'ETH',\n            token:'ETH',\n            decimals:18,\n            wrapMethod:'deposit',\n          },\n          destContract:{\n            unwrapMethod:'withdraw',\n            ...this.state.tokenConfig\n          },\n        };\n      break;\n      default:\n      break;\n    }\n\n    if (newState.balanceProp.lte(0)){\n      newState.showTokenWrapperEnabled = true;\n    }\n\n    if (selectedActionChanged){\n      newState.infoBox = null;\n      newState.transactionSucceeded = false;\n    }\n\n    // console.log('updateData',this.state.selectedAction,newState);\n\n    this.setState(newState,() => {\n      this.loadStats();\n    });\n  }\n\n  async loadData(){\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens).reduce( (output,token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      if (tokenConfig.enabled){\n        output.push({\n          value:token,\n          ...tokenConfig\n        });\n      }\n      return output;\n    },[]);\n\n    const selectedAction = 'Stake';\n    const selectedOption = availableTokens[0];\n    const selectedToken = selectedOption.value;\n\n    this.setState({\n      selectedToken,\n      selectedOption,\n      selectedAction,\n      availableTokens\n    });\n  }\n\n  async loadStats(){\n    const stats = [];\n\n    const [\n      totalLocked,\n      totalUnlocked,\n      totalStakingShares,\n      unlockScheduleCount,\n      accountingData,\n      collectedRewards\n    ] = await Promise.all([\n      this.functionsUtil.genericContractCall(this.state.contractInfo.name,'totalLocked'),\n      this.functionsUtil.genericContractCall(this.state.contractInfo.name,'totalUnlocked'),\n      this.functionsUtil.genericContractCall(this.state.contractInfo.name,'totalStakingShares'),\n      this.functionsUtil.genericContractCall(this.state.contractInfo.name,'unlockScheduleCount'),\n      this.functionsUtil.genericContractCall(this.state.contractInfo.name,'updateAccounting',[],{from:this.props.account}),\n      this.state.stakedBalance.gt(0) ? this.functionsUtil.genericContractCall(this.state.contractInfo.name,'unstakeQuery',[this.state.stakedBalance.toString()],{from:this.props.account}) : this.functionsUtil.BNify(0)\n    ]);\n\n    const unlockSchedulesPromises = [];\n    for (let i = 0; i < unlockScheduleCount ; i++){\n      unlockSchedulesPromises.push(this.functionsUtil.genericContractCall(this.state.contractInfo.name,'unlockSchedules',[i]));\n    }\n\n    const unlockSchedules = await Promise.all(unlockSchedulesPromises);\n\n    const totalRewards = this.functionsUtil.fixTokenDecimals(this.functionsUtil.BNify(totalLocked).plus(this.functionsUtil.BNify(totalUnlocked)),this.state.tokenConfig.decimals);\n    stats.push({\n      title:'Total Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(totalRewards))+' '+this.state.contractInfo.rewardToken\n    });\n\n    const totalDeposits = this.functionsUtil.fixTokenDecimals(totalStakingShares,this.state.contractInfo.decimals);\n    stats.push({\n      title:'Total Deposits',\n      value:this.functionsUtil.formatMoney(parseFloat(totalDeposits))+' '+this.state.tokenConfig.token\n    });\n\n    const lockedRewards = this.functionsUtil.fixTokenDecimals(totalLocked,this.state.tokenConfig.decimals);\n    stats.push({\n      title:'Locked Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(lockedRewards))+' '+this.state.contractInfo.rewardToken\n    });\n\n    const unlockedRewards = this.functionsUtil.fixTokenDecimals(totalUnlocked,this.state.tokenConfig.decimals);\n    stats.push({\n      title:'Unlocked Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(unlockedRewards))+' '+this.state.contractInfo.rewardToken\n    });\n\n    const programEndTime = unlockSchedules.reduce( (endTime,s) => {\n      endTime = Math.max(s.endAtSec,endTime);\n      return endTime;\n    },parseInt(Date.now()/1000));\n\n    const programDuration = unlockSchedules.length>0 ? `${this.functionsUtil.strToMoment(programEndTime*1000).utc().format('DD MMM, YYYY @ HH:mm')} UTC` : 'None';\n    stats.push({\n      title:'Program duration',\n      value:programDuration\n    });\n\n    const distributionSpeed = unlockSchedules.reduce( (distributionSpeed,s) => {\n      const tokensPerSecond = this.functionsUtil.fixTokenDecimals(s.initialLockedShares,this.state.contractInfo.decimals).div(s.durationSec);\n      distributionSpeed = distributionSpeed.plus(tokensPerSecond);\n      return distributionSpeed;\n    },this.functionsUtil.BNify(0));\n\n    stats.push({\n      title:'Reward unlock rate',\n      value:this.functionsUtil.formatMoney(distributionSpeed.times(86400))+' '+this.state.contractInfo.rewardToken+' / day'\n    });\n\n    const globalStats = [];\n\n    const stakingShare = accountingData && accountingData[2] && this.functionsUtil.BNify(accountingData[3]).gt(0) ? this.functionsUtil.BNify(accountingData[2]).div(this.functionsUtil.BNify(accountingData[3])) : this.functionsUtil.BNify(0);\n\n    const rewardMultiplier = this.functionsUtil.BNify(1); //stakingShare.gt(0) && this.functionsUtil.BNify(totalUnlocked).gt(0) ? this.functionsUtil.BNify(Math.max(1,parseFloat(this.functionsUtil.BNify(collectedRewards).div(this.functionsUtil.BNify(totalUnlocked).times(stakingShare)).times(this.state.contractInfo.maxMultiplier)))) : this.functionsUtil.BNify(1);\n\n    const distributionSpeedMultiplier = this.functionsUtil.BNify(1).div(this.state.contractInfo.maxMultiplier).times(rewardMultiplier);\n    const userDistributionSpeed = distributionSpeed.times(stakingShare).times(distributionSpeedMultiplier);\n    const rewardsPerDay = userDistributionSpeed.times(86400);\n\n    // console.log(parseFloat(this.functionsUtil.BNify(collectedRewards)),parseFloat(this.functionsUtil.BNify(totalUnlocked).times(stakingShare)),parseFloat(stakingShare),this.state.contractInfo.maxMultiplier,parseFloat(rewardMultiplier));\n\n    globalStats.push({\n      title:'Distribution rate',\n      description:'Your daily rewards distribution based on your current multiplier',\n      value:this.functionsUtil.formatMoney(rewardsPerDay)+' '+this.state.contractInfo.rewardToken+' / day',\n    });\n\n    globalStats.push({\n      title:'Reward Multiplier',\n      value:`${rewardMultiplier}x`,\n      description:`Deposit liquidity tokens for ${this.state.contractInfo.maxBonusDays} days to achieve a ${this.state.contractInfo.maxMultiplier}x reward multiplier`\n    });\n\n    const currentRewards = this.functionsUtil.formatMoney(this.functionsUtil.fixTokenDecimals(collectedRewards,this.state.tokenConfig.decimals));\n    globalStats.push({\n      title:'Current Rewards',\n      value:currentRewards+' '+this.state.contractInfo.rewardToken,\n      description:'Your share of the total unlocked reward pool. Larger your deposit and for longer, higher your share'\n    });\n\n    // console.log('loadStats',stats,globalStats);\n\n    this.setState({\n      stats,\n      globalStats,\n      stakingShare,\n      totalRewards,\n      accountingData,\n      distributionSpeed,\n      totalStakingShares,\n      userDistributionSpeed\n    });\n  }\n\n  toggleShowTokenWrapper = showTokenWrapperEnabled => {\n    this.setState({\n      showTokenWrapperEnabled\n    });\n  }\n\n  selectToken(selectedOption){\n    const selectedToken = selectedOption.value;\n    this.setState({\n      selectedToken,\n      selectedOption\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  render() {\n\n    const StatsCard = props => {\n      const cardProps = {\n        p:3,\n        mb:2,\n        width:'49%',\n        ...props.cardProps\n      };\n      return (\n        <DashboardCard\n          title={props.title}\n          cardProps={cardProps}\n          titleProps={{\n            fontSize:1,\n            fontWeight:3,\n          }}\n          titleParentProps={{\n            mt:0,\n            ml:0\n          }}\n          description={props.description}\n        >\n          <Text\n            mt={1}\n            fontSize={[2,3]}\n            color={'statValue'}\n            {...props.textProps}\n          >\n            {props.value}\n          </Text>\n        </DashboardCard>\n      );\n    };\n\n    const isStake = this.state.selectedAction === 'Stake';\n    const isUnstake = this.state.selectedAction === 'Withdraw';\n    const isStats = this.state.selectedAction === 'Stats';\n    const txAction = this.state.selectedAction;\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.availableTokens ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading tokens...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.availableTokens.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active tokens.\n                  </Text>\n                ) : (\n                  <Flex\n                    width={[1,0.46]}\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Box\n                      width={1}\n                    >\n                      <Text\n                        mb={1}\n                      >\n                        Select Token:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        name={'tokens'}\n                        isSearchable={false}\n                        options={this.state.availableTokens}\n                        CustomOptionValue={CustomOptionValue}\n                        onChange={this.selectToken.bind(this)}\n                        defaultValue={this.state.selectedOption}\n                        CustomValueContainer={CustomValueContainer}\n                      />\n                    </Box>\n                    {\n                      this.state.globalStats.length>0 && (\n                        <Box\n                          mt={2}\n                          width={1}\n                        >\n                          <Text\n                            mb={1}\n                          >\n                            Your Stats:\n                          </Text>\n                          <Flex\n                            mt={1}\n                            width={1}\n                            flexDirection={['column','row']}\n                            justifyContent={'space-between'}\n                          >\n                            {\n                              this.state.globalStats.map( (statInfo,index) =>\n                                <StatsCard\n                                  key={`globalStats_${index}`}\n                                  cardProps={{\n                                    mb:[2,0],\n                                    width:[1,'32%']\n                                  }}\n                                  textProps={{\n                                    fontSize:[1,2]\n                                  }}\n                                  {...statInfo}\n                                />\n                              )\n                            }\n                          </Flex>\n                        </Box>\n                      )\n                    }\n                    {\n                      this.state.selectedToken && (\n                        <Box\n                          mt={2}\n                          width={1}\n                        >\n                          <Text mb={1}>\n                            Select Action:\n                          </Text>\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={['column','row']}\n                            justifyContent={'space-between'}\n                          >\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isStake ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Stake'}\n                              imageSrc={'images/mint.svg'}\n                              isMobile={this.props.isMobile}\n                              // subcaption={'stake LP Tokens'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isStake}\n                              handleClick={ e => this.setAction('Stake') }\n                            />\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isUnstake ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Withdraw'}\n                              imageSrc={'images/upload.svg'}\n                              isMobile={this.props.isMobile}\n                              // subcaption={'withdraw LP tokens'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isUnstake}\n                              handleClick={ e => this.setAction('Withdraw') }\n                            />\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isStats ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Stats'}\n                              imageSrc={'images/stats.svg'}\n                              // subcaption={'view some stats'}\n                              isMobile={this.props.isMobile}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isStats}\n                              handleClick={ e => this.setAction('Stats') }\n                            />\n                          </Flex>\n                          {\n                            /*\n                            this.state.tokenWrapperProps && (\n                              <Flex\n                                mt={1}\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                                mb={this.state.showTokenWrapperEnabled ? 0 : 3}\n                              >\n                                <DashboardCard\n                                  cardProps={{\n                                    py:3,\n                                    px:2,\n                                    pb:2,\n                                    display:'flex',\n                                    alignItems:'center',\n                                    flexDirection:'column',\n                                    justifyContent:'center',\n                                  }}\n                                >\n                                  <Flex\n                                    alignItems={'center'}\n                                    justifyContent={'row'}\n                                  >\n                                    <Checkbox\n                                      required={false}\n                                      checked={this.state.showTokenWrapperEnabled}\n                                      onChange={ e => this.toggleShowTokenWrapper(e.target.checked) }\n                                      label={ isStake ? `Convert your ${this.state.tokenWrapperProps.startContract.token} to ${this.state.tokenWrapperProps.destContract.token}` : `Convert your ${this.state.tokenWrapperProps.destContract.token} to ${this.state.tokenWrapperProps.startContract.token}`}\n                                    />\n                                  </Flex>\n                                </DashboardCard>\n                              </Flex>\n                            )\n                            */\n                          }\n                          {\n                            (isStake || isUnstake) ?\n                              /*\n                              this.state.showTokenWrapperEnabled && this.state.tokenWrapperProps ? (\n                                <TokenWrapper\n                                  {...this.props}\n                                  fullWidth={true}\n                                  action={ isStake ? 'wrap' : 'unwrap' }\n                                  toolProps={this.state.tokenWrapperProps}\n                                />\n                              ) :\n                              */\n                              (this.state.tokenConfig && this.state.balanceProp && this.state.contractInfo ? (\n                                <Box\n                                  mt={1}\n                                  mb={3}\n                                  width={1}\n                                >\n                                  <SendTxWithBalance\n                                    {...this.props}\n                                    action={txAction}\n                                    error={this.state.error}\n                                    steps={this.state.steps}\n                                    infoBox={this.state.infoBox}\n                                    tokenConfig={this.state.tokenConfig}\n                                    tokenBalance={this.state.balanceProp}\n                                    contractInfo={this.state.contractInfo}\n                                    permitEnabled={this.state.permitEnabled}\n                                    approveEnabled={this.state.approveEnabled}\n                                    callback={this.transactionSucceeded.bind(this)}\n                                    approveDescription={this.state.approveDescription}\n                                    contractApproved={this.contractApproved.bind(this)}\n                                    balanceSelectorInfo={this.state.balanceSelectorInfo}\n                                    changeInputCallback={this.changeInputCallback.bind(this)}\n                                    getTransactionParams={this.getTransactionParams.bind(this)}\n                                    getPermitTransactionParams={this.getPermitTransactionParams.bind(this)}\n                                  >\n                                    <DashboardCard\n                                      cardProps={{\n                                        p:3\n                                      }}\n                                    >\n                                      <Flex\n                                        alignItems={'center'}\n                                        flexDirection={'column'}\n                                      >\n                                        <Icon\n                                          name={'MoneyOff'}\n                                          color={'cellText'}\n                                          size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                        />\n                                        <Text\n                                          mt={1}\n                                          fontSize={2}\n                                          color={'cellText'}\n                                          textAlign={'center'}\n                                        >\n                                          {\n                                            isStake ? (\n                                              `You don't have any ${this.state.selectedToken} in your wallet.`\n                                            ) : isUnstake && (\n                                              `You don't have any staked ${this.state.selectedToken} to withdraw.`\n                                            )\n                                          }\n                                        </Text>\n                                      </Flex>\n                                    </DashboardCard>\n                                  </SendTxWithBalance>\n                                </Box>\n                              ) : (\n                                <Flex\n                                  mt={3}\n                                  mb={3}\n                                  width={1}\n                                >\n                                  <FlexLoader\n                                    flexProps={{\n                                      flexDirection:'row'\n                                    }}\n                                    loaderProps={{\n                                      size:'30px'\n                                    }}\n                                    textProps={{\n                                      ml:2\n                                    }}\n                                    text={'Loading balance...'}\n                                  />\n                                </Flex>\n                              )\n                            ) : isStats && (\n                              <Flex\n                                mt={1}\n                                mb={3}\n                                width={1}\n                                style={{\n                                  flexWrap:'wrap'\n                                }}\n                                justifyContent={'space-between'}\n                              >\n                                {\n                                  (!this.state.stats || !this.state.stats.length) ? (\n                                    <Flex\n                                      mt={3}\n                                      mb={3}\n                                      width={1}\n                                    >\n                                      <FlexLoader\n                                        flexProps={{\n                                          flexDirection:'row'\n                                        }}\n                                        loaderProps={{\n                                          size:'30px'\n                                        }}\n                                        textProps={{\n                                          ml:2\n                                        }}\n                                        text={'Loading stats...'}\n                                      />\n                                    </Flex>\n                                  ) : this.state.stats.map( (statInfo,index) =>\n                                    <StatsCard\n                                      key={`stats_${index}`}\n                                      cardProps={{\n                                        width:[1,'49%']\n                                      }}\n                                      {...statInfo}\n                                    />\n                                  )\n                                }\n                              </Flex>\n                            )\n                          }\n                        </Box>\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default Staking;","import React, { Component } from 'react';\nimport { Flex, Box, Text, Button } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\n\nclass TokenSwap extends Component {\n\n  state = {\n    tokenConfig:null,\n    selectedFromToken:null,\n    selectedDestToken:null,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async loadKyberWidget(){\n\n    if (!this.state.selectedFromToken || !this.state.selectedDestToken){\n      return false;\n    }\n\n    const provider = 'kyberSwap';\n    const providerInfo = this.functionsUtil.getGlobalConfig(['payments','providers',provider]);\n    if (providerInfo.enabled && providerInfo.remoteResources){\n\n      const globalConfigs = this.functionsUtil.getGlobalConfigs();\n      const remoteResources = providerInfo.remoteResources;\n\n      Object.keys(remoteResources).forEach((url,j) => {\n\n        const resourceType = url.split('.').pop().toLowerCase();\n\n        switch (resourceType){\n          case 'js':\n            const scriptID = `script_${provider}_${j}_${this.state.selectedFromToken}_${this.state.selectedDestToken}`;\n\n            if (!document.getElementById(scriptID)){\n              const script = document.createElement(\"script\");\n              const remoteResourceParams = remoteResources[url];\n              const callback = remoteResourceParams && remoteResourceParams.callback ? remoteResourceParams.callback : null;\n              const precall = remoteResourceParams && remoteResourceParams.precall ? remoteResourceParams.precall : null;\n\n              if (precall && typeof precall === 'function'){\n                const precallProps = {\n                  baseToken:this.state.selectedFromToken,\n                  selectedToken:this.state.selectedDestToken,\n                  buttonId:`kyber-swapper-${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n                };\n                precall(precallProps,globalConfigs,providerInfo);\n              }\n\n              if (callback && typeof callback === 'function'){\n                if (script.readyState) {  // only required for IE <9\n                  script.onreadystatechange = function() {\n                    if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n                      script.onreadystatechange = null;\n                      callback();\n                    }\n                  };\n                } else {  //Others\n                  script.onload = callback;\n                }\n              }\n\n              script.id = scriptID;\n              script.className = `script_${provider}`;\n              script.src = url;\n              script.async = true;\n\n              if (remoteResourceParams && remoteResourceParams.parentElement){\n                remoteResourceParams.parentElement.appendChild(script)\n              } else {\n                document.head.appendChild(script);\n              }\n            }\n          break;\n          case 'css':\n            const stylesheetId = `stylesheet_${provider}_${j}`;\n\n            if (!document.getElementById(stylesheetId)){\n              const style = document.createElement(\"link\");\n\n              style.id = stylesheetId;\n              style.rel = 'stylesheet';\n              style.href = url;\n\n              document.head.appendChild(style);\n            }\n          break;\n          default:\n          break;\n        }\n      });\n    }\n\n    this.setState({\n      providerInfo\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async loadTokens(){\n    const selectedFromToken = Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    this.selectFromToken(selectedFromToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const fromTokenChanged = prevState.selectedFromToken !== this.state.selectedFromToken;\n    const destTokenChanged = prevState.selectedDestToken !== this.state.selectedDestToken;\n    if ((fromTokenChanged ||  destTokenChanged) && this.state.selectedFromToken && this.state.selectedDestToken){\n      this.loadKyberWidget();\n    }\n  }\n\n  selectFromToken = async (selectedFromToken) => {\n    let selectedDestToken = null;\n    const availableDestinationTokens = {};\n    const supportedTokens = this.functionsUtil.getGlobalConfig(['payments','providers','kyberSwap','supportedTokens']);\n\n    supportedTokens.forEach( token => {\n      if (token !== selectedFromToken){\n        if (!selectedDestToken){\n          selectedDestToken = token;\n        }\n        availableDestinationTokens[token] = {\n          token\n        };\n      }\n    });\n\n    const baseToken = this.functionsUtil.getGlobalConfig(['baseToken']);\n    if (baseToken !== selectedFromToken){\n      availableDestinationTokens[baseToken] = {\n        token:baseToken\n      };\n    }\n\n    this.setState({\n      selectedFromToken,\n      availableDestinationTokens\n    },() => {\n      this.selectDestToken(selectedDestToken);\n    });\n  }\n\n  selectDestToken = async (selectedDestToken) => {\n    this.setState({\n      selectedDestToken\n    });\n  }\n\n  swap = () => {\n    const globalConfigs = this.functionsUtil.getGlobalConfigs();\n    const paymentProvider = this.state.providerInfo;\n    const initProps = {\n      baseToken:this.state.selectedFromToken,\n      selectedToken:this.state.selectedDestToken,\n      buttonId:`kyber-swapper-${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n    };\n    const initParams = paymentProvider && paymentProvider.getInitParams ? paymentProvider.getInitParams(initProps,globalConfigs) : null;\n\n    // Render the Payment Provider\n    if (typeof paymentProvider.render === 'function'){\n      paymentProvider.render(initParams,null,initProps);\n    }\n\n    // Send GA event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Tools',\n      eventAction: 'TokenSwap',\n      eventLabel: `${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedFromToken){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to swap:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              showBalance={false}\n              isSearchable={true}\n              onChange={this.selectFromToken}\n              selectedToken={this.state.selectedFromToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            this.state.availableDestinationTokens && this.state.selectedDestToken && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text mb={1}>\n                  Select destination asset:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  showBalance={false}\n                  isSearchable={true}\n                  onChange={this.selectDestToken}\n                  selectedToken={this.state.selectedDestToken}\n                  availableTokens={this.state.availableDestinationTokens}\n                />\n              </Box>\n          }\n          <Flex\n            mt={2}\n            width={1}\n            justifyContent={'center'}\n          >\n            <Button\n              my={2}\n              mx={[0, 2]}\n              size={'medium'}\n              borderRadius={4}\n              mainColor={'blue'}\n              onClick={ e => this.swap(e) }\n              disabled={ !this.state.selectedFromToken || !this.state.selectedDestToken }\n            >\n              SWAP TOKENS\n            </Button>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenSwap;\n","import React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ButtonLoader from '../ButtonLoader/ButtonLoader';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport { Flex, Box, Text, Input, Link, Progress } from \"rimble-ui\";\n\nclass NexusMutual extends Component {\n\n  state = {\n    step:1,\n    steps:{\n      1:'Get Quote',\n      2:'Enable NXS',\n      3:'Buy Cover'\n    },\n    loading:false,\n    amountValue:'',\n    periodValue:'',\n    quoteResponse:null,\n    selectedToken:'DAI'\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  async changeSelectedToken(selectedToken){\n    this.setState({\n      selectedToken\n    });\n  }\n\n  changeAmount = (e) => {\n    const amountValue = e.target.value.length && !isNaN(e.target.value) ? e.target.value : '';\n    this.setState({\n      amountValue\n    });\n  }\n\n  changePeriod = (e) => {\n\n    const periodValue = e.target.value.length && !isNaN(e.target.value) ? e.target.value : '';\n    this.setState({\n      periodValue\n    });\n  }\n\n  async getQuote() {\n\n    this.setState({\n      loading:true\n    });\n\n    let quoteResponse = await this.functionsUtil.makeRequest(`https://api.nexusmutual.io/getQuote/${this.state.amountValue}/${this.state.selectedToken}/${this.state.periodValue}/0x78751B12Da02728F467A44eAc40F5cbc16Bd7934/M1`);\n\n    const newState = {\n      loading:false\n    };\n\n    if (quoteResponse){\n      newState.quoteResponse = quoteResponse.data;\n    }\n\n    this.setState({\n      quoteResponse\n    });\n  }\n\n  render() {\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          mb={3}\n          width={[1,0.36]}\n          flexDirection={'column'}\n        >\n          <Flex\n            mb={1}\n            width={1}\n            flexDirection={'row'}\n            justifyContent={'space-between'}\n          >\n            {\n              Object.keys(this.state.steps).map( stepIndex => (\n                <Link\n                  style={{\n                    flexBasis:'0',\n                    flex:'1 1 0px',\n                    textDecoration:'none',\n                    cursor:this.state.step>=stepIndex ? 'pointer' : 'default'\n                  }}\n                  fontSize={2}\n                  textAlign={'center'}\n                  key={`step_${stepIndex}`}\n                  color={ this.state.step>=stepIndex ? 'blue' : 'cellText' }\n                  hoverColor={ this.state.step>=stepIndex ? 'blue' : 'cellText' }\n                  activeColor={ this.state.step>=stepIndex ? 'blue' : 'cellText' }\n                >\n                  {this.state.steps[stepIndex]}\n                </Link>\n              ) )\n            }\n          </Flex>\n          <Flex\n            width={1}\n            flexDirection={'column'}\n          >\n            <Progress\n              style={{\n                width:'100%',\n                height:'15px'\n              }}\n              value={(1/Object.keys(this.state.steps).length)*this.state.step}\n            />\n          </Flex>\n        </Flex>\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text\n              mb={1}>\n              Select asset:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              showBalance={false}\n              selectedToken={this.state.selectedToken}\n              onChange={this.changeSelectedToken.bind(this)}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              How much do you want to cover?\n            </Text>\n            <Input\n              min={0}\n              width={'100%'}\n              type={\"number\"}\n              required={true}\n              height={'3.4em'}\n              borderRadius={2}\n              fontWeight={500}\n              boxShadow={'none !important'}\n              value={this.state.amountValue}\n              onChange={this.changeAmount.bind(this)}\n              border={`1px solid ${this.props.theme.colors.divider}`}\n              placeholder={`Insert ${this.state.selectedToken.toUpperCase()} amount`}\n            />\n          </Box>\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              For how many days?\n            </Text>\n            <Input\n              min={0}\n              width={'100%'}\n              type={\"number\"}\n              required={true}\n              height={'3.4em'}\n              borderRadius={2}\n              fontWeight={500}\n              boxShadow={'none !important'}\n              value={this.state.periodValue}\n              placeholder={'Insert days of coverage'}\n              onChange={this.changePeriod.bind(this)}\n              border={`1px solid ${this.props.theme.colors.divider}`}\n            />\n          </Box>\n          <Flex\n            mt={2}\n            width={1}\n            justifyContent={'center'}\n          >\n            <ButtonLoader\n              buttonProps={{\n                my:2,\n                mx:[0, 2],\n                size:'medium',\n                borderRadius:4,\n                mainColor:'blue',\n                disabled:(!this.state.amountValue || !this.state.selectedToken || !this.state.periodValue)\n              }}\n              buttonText={'GET QUOTE'}\n              isLoading={this.state.loading}\n              handleClick={ e => this.getQuote(e) }\n            />\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default NexusMutual;","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Box, Flex, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass TokenWrapper extends Component {\n\n  state = {\n    action:null,\n    infoBox:null,\n    balanceDest:null,\n    tokenConfig:null,\n    balanceStart:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    approveEnabled:true,\n    approveDescription:null,\n    showTokenWrapperEnabled:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const actionChanged = (prevState.action !== this.state.action) || (this.props.action !== prevProps.action);\n    const startContractChanged = JSON.stringify(this.props.startContract) !== JSON.stringify(prevProps.startContract);\n    const destContractChanged = JSON.stringify(this.props.destContract) !== JSON.stringify(prevProps.destContract);\n    if (actionChanged || startContractChanged || destContractChanged){\n      this.loadData();\n    }\n  }\n\n  async loadData(){\n    const action = this.props.action || this.state.action || 'wrap';\n    this.setState({\n      action\n    },() => {\n      this.loadBalance();\n      this.updateActionData();\n    });\n  }\n\n  async getTokenBalance(contractInfo){\n\n    if (!contractInfo){\n      return false;\n    }\n\n    let tokenBalance = null;\n    switch (contractInfo.name){\n      case 'ETH':\n        tokenBalance = await this.functionsUtil.getETHBalance(this.props.account);\n      break;\n      default:\n        // Init Contract\n        await this.props.initContract(contractInfo.name,contractInfo.address,contractInfo.abi);\n        tokenBalance = await this.functionsUtil.getTokenBalance(contractInfo.name,this.props.account);\n      break;\n    }\n\n    tokenBalance = tokenBalance || this.functionsUtil.BNify(0);\n\n    return tokenBalance;\n  }\n\n  async loadBalance(){\n\n    if (!this.props.toolProps.startContract || !this.props.toolProps.destContract){\n      return false;\n    }\n\n    // Load Balances\n    const [\n      balanceDest,\n      balanceStart\n    ] = await Promise.all([\n      this.getTokenBalance(this.props.toolProps.destContract),\n      this.getTokenBalance(this.props.toolProps.startContract)\n    ]);\n\n    const tokenBalance = this.state.action === 'wrap' ? balanceStart : balanceDest;\n    // console.log('loadBalance',this.props.toolProps.startContract,parseFloat(balanceStart),this.props.toolProps.destContract,parseFloat(balanceDest));\n\n    this.setState({\n      balanceDest,\n      balanceStart,\n      tokenBalance\n    });\n  }\n\n  updateActionData(){\n    let infoBox = null;\n    let tokenConfig = null;\n    let tokenBalance = null;\n    let selectedToken = null;\n    let approveEnabled = true;\n    let approveDescription = null;\n\n    switch (this.state.action){\n      case 'wrap':\n        approveEnabled = true;\n        tokenBalance = this.state.balanceStart;\n        tokenConfig = this.props.toolProps.startContract;\n        selectedToken = this.props.toolProps.startContract.name;\n        approveDescription = `To Mint new ${this.props.toolProps.destContract.name} you need to approve the Smart-Contract first`;\n        infoBox = {\n          icon:'FileDownload',\n          // iconProps:{\n          //   color:this.props.theme.colors.transactions.action.deposit\n          // },\n          text:`Wrap your ${this.props.toolProps.startContract.name} and get ${this.props.toolProps.destContract.name}`\n        };\n      break;\n      case 'unwrap':\n        selectedToken = this.props.toolProps.destContract.name;\n        approveEnabled = false;\n        tokenBalance = this.state.balanceDest;\n        tokenConfig = this.props.toolProps.destContract;\n        approveDescription = `To withdraw your ${this.props.toolProps.startContract.name} you need to approve the Smart-Contract first`;\n        infoBox = {\n          icon:'FileUpload',\n          // iconProps:{\n          //   color:this.props.theme.colors.transactions.action.redeem\n          // },\n          text:`Unwrap your ${this.props.toolProps.destContract.name} and get back ${this.props.toolProps.startContract.name}`\n        };\n      break;\n      default:\n      break;\n    }\n\n    this.setState({\n      infoBox,\n      tokenConfig,\n      tokenBalance,\n      selectedToken,\n      approveEnabled,\n      approveDescription\n    },() => {\n      this.loadBalance();\n    });\n  }\n\n  setAction(action){\n    this.setState({\n      action\n    });\n  }\n\n  transactionSucceeded(tx,amount,params){\n    let infoBox = null;\n\n    switch (this.state.action){\n      case 'wrap':\n        const mintLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.destContract.address.toLowerCase() ) : null;\n        let mintedAmount = mintLog ? parseInt(mintLog.data,16) : amount;\n        mintedAmount = this.functionsUtil.fixTokenDecimals(mintedAmount,this.state.tokenConfig.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have received <strong>${mintedAmount.toFixed(4)} ${this.props.toolProps.destContract.name}</strong>`\n        }\n      break;\n      case 'unwrap':\n        const withdrawLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.destContract.address.toLowerCase() ) : null;\n        let withdrawnAmount = withdrawLog ? parseInt(withdrawLog.data,16) : amount;\n        withdrawnAmount = this.functionsUtil.fixTokenDecimals(withdrawnAmount,this.state.tokenConfig.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have received <strong>${withdrawnAmount.toFixed(4)} ${this.props.toolProps.startContract.name}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    // Update balances\n    this.loadBalance();\n\n    this.setState({\n      infoBox\n    });\n  }\n\n  getTransactionParams(amount){\n    const params = {};\n    switch (this.state.action){\n      case 'wrap':\n        params.value = amount;\n        params.methodParams = [];\n        params.methodName = this.props.toolProps.startContract.wrapMethod;\n      break;\n      case 'unwrap':\n        params.value = null;\n        params.methodParams = [amount];\n        params.methodName = this.props.toolProps.destContract.unwrapMethod;\n      break;\n      default:\n      break;\n    }\n    return params;\n  }\n\n  render() {\n\n    const fullWidth = !!this.props.fullWidth;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        mt={[2,fullWidth ? 2 : 3]}\n      >\n        <Flex\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n          width={[1,fullWidth ? 1 : 0.36]}\n        >\n          {\n            !this.props.account ? (\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mt:3\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                    name={'Input'}\n                    color={'cellText'}\n                  />\n                  <Text\n                    mt={[1,2]}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Please connect with your wallet interact with Idle.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:2,\n                      width:[1,1/2]\n                    }}\n                    handleClick={this.props.connectAndValidateAccount}\n                  >\n                    Connect\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            ) : (\n              <Box\n                width={1}\n              >\n                {\n                  !this.props.action && (\n                    <Flex\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        mb={2}\n                      >\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <CardIconButton\n                          {...this.props}\n                          cardProps={{\n                            px:3,\n                            py:3,\n                            width:0.48\n                          }}\n                          text={'Wrap'}\n                          iconColor={'deposit'}\n                          icon={'ArrowDownward'}\n                          iconBgColor={'#ced6ff'}\n                          isActive={ this.state.action === 'wrap' }\n                          handleClick={ e => this.setAction('wrap') }\n                        />\n                        <CardIconButton\n                          {...this.props}\n                          cardProps={{\n                            px:3,\n                            py:3,\n                            width:0.48\n                          }}\n                          text={'Unwrap'}\n                          iconColor={'redeem'}\n                          icon={'ArrowUpward'}\n                          iconBgColor={'#ceeff6'}\n                          isActive={ this.state.action === 'unwrap' }\n                          handleClick={ e => this.setAction('unwrap') }\n                        />\n                      </Flex>\n                    </Flex>\n\n                  )\n                }\n                <Box\n                  width={1}\n                  my={fullWidth ? 2 : 3}\n                >\n                  {\n                    this.state.tokenBalance!==null ? (\n                      <SendTxWithBalance\n                        {...this.props}\n                        approveEnabled={false}\n                        action={this.state.action}\n                        infoBox={this.state.infoBox}\n                        tokenConfig={this.state.tokenConfig}\n                        tokenBalance={this.state.tokenBalance}\n                        contractInfo={this.props.toolProps.destContract}\n                        callback={this.transactionSucceeded.bind(this)}\n                        approveDescription={this.state.approveDescription}\n                        // changeInputCallback={this.changeInputCallback.bind(this)}\n                        getTransactionParams={this.getTransactionParams.bind(this)}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedToken} to {this.state.action} in your wallet.\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </SendTxWithBalance>\n                    ) : (\n                      <Flex\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading Balance...'}\n                        />\n                      </Flex>\n                    )\n                  }\n                </Box>\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenWrapper;","import React, { Component } from 'react';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport { Text, Icon, Image, Button } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass CustomField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    \n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    let CustomComponent = null;\n    let componentHasChildren = false;\n    const fieldType = fieldInfo.type;\n    const fieldPath = fieldInfo.path;\n    let customValue = fieldPath ? this.functionsUtil.getArrayPath(fieldPath,this.props.row) : null;\n\n    switch (fieldType){\n      case 'image':\n        CustomComponent = Image;\n        fieldProps.src = customValue;\n      break;\n      case 'number':\n        customValue = this.functionsUtil.BNify(customValue).toString();\n        CustomComponent = SmartNumber;\n        fieldProps.number = customValue;\n      break;\n      case 'icon':\n        CustomComponent = Icon;\n        fieldProps.name = customValue;\n      break;\n      case 'button':\n        CustomComponent = Button;\n        componentHasChildren = true;\n        customValue = fieldInfo.label;\n        fieldProps.onClick=() => fieldProps.handleClick(this.props)\n      break;\n      default:\n        CustomComponent = Text;\n        componentHasChildren = true;\n      break;\n    }\n\n    if (!customValue){\n      return null;\n    }\n\n    // Add custom field extra props\n    if (fieldPath){\n      const customFieldName = Object.values(fieldPath).pop();\n      if (this.props.row[`${customFieldName}Props`]){\n        const customFieldProps = this.props.row[`${customFieldName}Props`];\n        // Replace props\n        if (customFieldProps && Object.keys(customFieldProps).length){\n          Object.keys(customFieldProps).forEach(p => {\n            fieldProps[p] = customFieldProps[p];\n          });\n        }\n      }\n    }\n\n    return CustomComponent ? (componentHasChildren ? (<CustomComponent {...fieldProps}>{customValue}</CustomComponent>) : (<CustomComponent {...fieldProps} />) ) : null;\n  }\n}\n\nexport default CustomField;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport CustomField from '../CustomField/CustomField';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass CustomList extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n\n    return (\n      <Flex id=\"custom-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"custom-list\" flexDirection={'column'}>\n          {\n            this.props.rows.map( (row,rowIndex) => {\n              return (\n                <TableRow\n                  row={row}\n                  {...this.props}\n                  key={`asset-${rowIndex}`}\n                  fieldComponent={CustomField}\n                  rowId={`asset-col-${rowIndex}`}\n                  cardId={`asset-card-${rowIndex}`}\n                />\n              );\n            })\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default CustomList;","import theme from '../theme';\nimport { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport AssetField from '../AssetField/AssetField';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass PortfolioDonut extends Component {\n  state = {\n    chartData:null,\n    totalFunds:null,\n    parentWidth:null,\n    selectedToken:null,\n    selectedTokenConfig:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentWillUnmount() {\n    \n  }\n\n  async componentDidMount(){\n    this.loadPortfolio();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  async loadPortfolio() {\n\n    const portfolio = {};\n    let totalFunds = this.functionsUtil.BNify(0);\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.availableTokens),async (token) => {\n      const tokenConfig = this.props.availableTokens[token];\n      const idleTokenBalance = await this.functionsUtil.getTokenBalance(tokenConfig.idle.token,this.props.account);\n\n      if (idleTokenBalance){\n        const tokenPrice = await this.functionsUtil.getIdleTokenPrice(tokenConfig);\n        const tokenBalance = await this.functionsUtil.convertTokenBalance(idleTokenBalance.times(tokenPrice),token,tokenConfig,isRisk);\n\n        if (tokenBalance.gt(0)){\n          portfolio[token] = tokenBalance;\n\n          // Increment total balance\n          totalFunds = totalFunds.plus(tokenBalance);\n        }\n      }\n    });\n\n    // Add Gov Tokens\n    const govTokensUserBalances = await this.functionsUtil.getGovTokensUserBalances(this.props.account,this.props.availableTokens,'DAI',null,true);\n    if (govTokensUserBalances){\n      Object.keys(govTokensUserBalances).forEach( govToken => {\n        const govTokenBalance = this.functionsUtil.BNify(govTokensUserBalances[govToken]);\n        portfolio[govToken] = govTokenBalance;\n        totalFunds = totalFunds.plus(govTokenBalance);\n      });\n    }\n\n    const chartData = [];\n\n    Object.keys(portfolio).forEach(token => {\n      const tokenBalance = portfolio[token];\n      if (tokenBalance.gt(0)){\n        const tokenPercentage = tokenBalance.div(totalFunds).times(100);\n        let tokenColorHsl = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'color','hsl']);\n        tokenColorHsl = tokenColorHsl ? tokenColorHsl.join(',') : '0,0%,0%';\n        chartData.push({\n          id:token,\n          label:token.substr(0,1).toUpperCase()+token.substr(1),\n          value:Math.round(tokenPercentage),\n          color:'hsl('+tokenColorHsl+')'\n        });\n      }\n    });\n\n    this.setState({\n      portfolio,\n      chartData,\n      totalFunds\n    });\n  }\n\n  render() {\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth:0,\n      cornerRadius:0,\n      innerRadius:0.65,\n      motionDamping:15,\n      motionStiffness:90,\n      colors:d => d.color,\n      tooltipFormat: v => v+'%',\n      sliceLabel: d => {\n        if (parseFloat(d.value)>=5){\n          return d.value+'%';\n        } else {\n          return null;\n        }\n      },\n      radialLabel: d => {\n        return null;//Object.keys(this.props.availableTokens).indexOf(d.label.toUpperCase());\n      },\n      theme:{\n        tooltip: {\n          container: {\n            display: 'none'\n          },\n        },\n        labels:{\n          text:{\n            fontSize:16,\n            fontWeight:500,\n            fontFamily: theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsTextColor:'#333',\n      radialLabelsSkipAngle:10,\n      radialLabelsTextXOffset:0,\n      radialLabelsLinkOffset:-parseInt(this.state.parentWidth*0.2),\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      radialLabelsLinkColor:{ from: 'color' },\n      margin: this.props.isMobile ? { top: 15, right: 25, bottom: 30, left: 25 } : { top: 30, right: 50, bottom: 60, left: 50 },\n      onMouseEnter:(data, e) => {\n        const selectedToken = data.id;\n        const selectedTokenConfig = selectedToken ? this.props.availableTokens[selectedToken] || this.functionsUtil.getGlobalConfig(['stats','tokens',selectedToken]) : null;\n        this.setState({\n          selectedToken,\n          selectedTokenConfig\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setState({\n          selectedToken:null,\n          selectedTokenConfig:null\n        });\n      },\n      legends:[\n        {\n          itemWidth: 60,\n          itemHeight: 18,\n          translateY: this.props.isMobile ? 25 : 50,\n          symbolSize: 10,\n          anchor: 'bottom',\n          direction: 'row',\n          itemTextColor: theme.colors.legend,\n          symbolShape: 'circle',\n          effects: [\n            {\n              on: 'hover',\n              style: {\n                itemTextColor: '#000'\n              }\n            }\n          ]\n        }\n      ]\n    };\n\n    const selectedToken = this.state.selectedToken !== null && this.state.portfolio[this.state.selectedToken] ? this.state.portfolio[this.state.selectedToken] : false;\n    const strategyIcon = this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'icon']);\n    const convertToken = this.state.selectedToken ? this.functionsUtil.getGlobalConfig(['stats','tokens',this.state.selectedToken,'conversionRateField']) : false;\n\n    return (\n      <Flex\n        width={1}\n      >\n        { \n          (this.state.totalFunds || selectedToken) && \n            <Flex\n              zIndex={0}\n              top={['32%','35%']}\n              left={['23%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              width={['55%','46%']}\n              position={'absolute'}\n              height={['40%','35%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                selectedToken ? (\n                  <>\n                    <AssetField\n                      fieldInfo={{\n                        name:'icon',\n                        props:{\n                          mb:1,\n                          height:'2.2em'\n                        }\n                      }}\n                      token={this.state.selectedToken}\n                      tokenConfig={this.state.selectedTokenConfig}\n                    />\n                    <SmartNumber\n                      unitProps={{\n                        ml:2,\n                        fontSize:4,\n                        fontWeight:3\n                      }}\n                      decimals={2}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      fontWeight={[3,4]}\n                      unit={ convertToken ? '$' : null}\n                      number={this.state.portfolio[this.state.selectedToken]}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      {this.state.selectedToken}\n                    </Text>\n                  </>\n                ) : (\n                  <>\n                    <Image\n                      mb={1}\n                      height={'2.2em'}\n                      src={strategyIcon}\n                    />\n                    <SmartNumber\n                      unit={'$'}\n                      unitProps={{\n                        ml:2,\n                        fontSize:4,\n                        fontWeight:3\n                      }}\n                      decimals={2}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      fontWeight={[3,4]}\n                      number={this.state.totalFunds}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      Total funds\n                    </Text>\n                  </>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          {...chartProps}\n          showLoader={true}\n          data={this.state.chartData}\n          parentId={this.props.parentId}\n          parentIdHeight={this.props.parentId}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default PortfolioDonut;\n","import CountUp from 'react-countup';\nimport { Flex, Loader } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TotalEarningsCounter extends Component {\n\n  state = {\n    earningsEnd:null,\n    earningsStart:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalEarnings();\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const styleChanged = JSON.stringify(prevProps.counterStyle) !== JSON.stringify(this.props.counterStyle);\n    if (styleChanged || themeModeChanged || mobileChanged){\n      const oldState = Object.assign({},this.state);\n      this.setState({\n        earningsEnd:null,\n        earningsStart:null\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  async loadTotalEarnings(){\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized){\n      return true;\n    }\n\n    const availableTokens = this.props.availableTokens || {};\n    const portfolio = this.props.portfolio || await this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account);\n\n    const earningsStart = portfolio.totalEarnings;\n    const earningsEnd = portfolio.totalAmountLent.times(portfolio.avgAPY.div(100));\n\n    this.setState({\n      earningsEnd,\n      earningsStart\n    });\n  }\n\n  render() {\n\n    const counterStyle = {\n      lineHeight:1,\n      color:this.props.theme.colors.copyColor,\n      fontFamily:this.props.theme.fonts.counter,\n      fontWeight: this.props.isMobile ? 600 : 700,\n      fontSize:this.props.isMobile ? '21px' : '1.7em',\n    };\n\n    // Replace props\n    if (this.props.counterStyle && Object.keys(this.props.counterStyle).length){\n      Object.keys(this.props.counterStyle).forEach(p => {\n        counterStyle[p] = this.props.counterStyle[p];\n      });\n    }\n\n    const unit = this.props.unit || '$ ';\n    const decimals = this.props.decimals || 8;\n\n    return this.state.earningsStart && this.state.earningsEnd ? (\n      <Flex\n      >\n        <CountUp\n          delay={0}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          decimals={decimals}\n          duration={31536000}\n          end={parseFloat(this.state.earningsEnd)}\n          start={parseFloat(this.state.earningsStart)}\n          formattingFn={ n => unit+this.functionsUtil.formatMoney(n,decimals) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              ref={countUpRef}\n              style={counterStyle}\n            />\n          )}\n        </CountUp>\n      </Flex>\n    ) : (\n      <Loader size={\"20px\"} />\n    );\n  }\n}\n\nexport default TotalEarningsCounter;\n","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport { Card, Flex, Image, Text } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\n\nclass EarningsEstimation extends Component {\n  state = {\n    tokensEarnings:null,\n    estimationStepsPerc:null,\n    estimationStepsOptions:null,\n    estimationStepsDefaultOption:null,\n    estimationSteps:{\n      0:{\n        'Month':{\n          perc:1/12,\n          width:1/3\n        },\n        '2 months':{\n          perc:1/6,\n          width:1/3\n        },\n        '3 months':{\n          perc:1/4,\n          width:1/3,\n          optionName:'3M'\n        }\n      },\n      25:{\n        '3 months':{\n          perc:3/12,\n          width:3/12\n        },\n        '8 months':{\n          perc:8/12,\n          width:5/12\n        },\n        'Year':{\n          perc:1,\n          width:4/12,\n          optionName:'1Y'\n        }\n      },\n      90:{\n        'Year':{\n          perc:1,\n          width:1/3,\n        },\n        '2 Years':{\n          perc:2,\n          width:1/3,\n        },\n        '5 Years':{\n          perc:5,\n          width:3/5,\n          optionName:'5Y'\n        }\n      }\n    }\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  setEstimationStepsPerc(estimationStepsPerc){\n    this.setState({\n      estimationStepsPerc\n    });\n  }\n\n  async loadEarnings(){\n    let tokensEarnings = {};\n    let estimationStepsPerc = 0;\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const aggregatedEarnings = {\n      earnings:this.functionsUtil.BNify(0),\n      amountLent:this.functionsUtil.BNify(0),\n      earningsYear:this.functionsUtil.BNify(0),\n    };\n\n    await this.functionsUtil.asyncForEach(this.props.enabledTokens,async (token) => {\n      const tokenConfig = this.props.availableTokens[token];\n      const amountDeposited = await this.functionsUtil.getAmountDeposited(tokenConfig,this.props.account);\n\n      const [amountLent,avgBuyPrice,idleTokenPrice] = await Promise.all([\n        this.functionsUtil.convertTokenBalance(amountDeposited,token,tokenConfig,isRisk),\n        this.functionsUtil.getAvgBuyPrice([token],this.props.account),\n        this.functionsUtil.getIdleTokenPrice(tokenConfig)\n      ]);\n\n      const earningsPerc = idleTokenPrice.div(avgBuyPrice[token]).minus(1);\n      const earnings = amountLent.times(earningsPerc);\n\n      let earningsYear = 0;\n      let tokenAPY = 0;\n      const tokenAprs = await this.functionsUtil.getTokenAprs(tokenConfig);\n      if (tokenAprs && tokenAprs.avgApr !== null){\n        tokenAPY = tokenAprs.avgApy;\n        earningsYear = amountLent.times(tokenAPY.div(100));\n      }\n\n      const earningsPercStep = Math.floor(earnings.div(earningsYear).times(100));\n      \n      const possibleSteps = Object.keys(this.state.estimationSteps).filter(perc => perc<earningsPercStep);\n      const maxPossibleStep = parseInt(possibleSteps.pop());\n      estimationStepsPerc = Math.max(estimationStepsPerc,maxPossibleStep);\n\n      // console.log(token,amountLent.toFixed(5),earnings.toFixed(5),earningsYear.toFixed(5),tokenConfig,tokenAprs,tokenAPR.toFixed(5),tokenAPY.toFixed(5),earningsPercStep,maxPossibleStep,estimationStepsPerc);\n\n      if (!this.functionsUtil.BNify(amountLent).isNaN() && !this.functionsUtil.BNify(idleTokenPrice).isNaN() && !this.functionsUtil.BNify(earnings).isNaN() && !this.functionsUtil.BNify(earningsYear).isNaN()){\n        tokensEarnings[token] = {\n          earnings,\n          amountLent,\n          earningsYear,\n          idleTokenPrice\n        };\n\n        // const earningsUSD = await this.functionsUtil.convertTokenBalance(earningsYearings,token,tokenConfig,isRisk);\n        // const amountLentUSD = await this.functionsUtil.convertTokenBalance(amountLent,token,tokenConfig,isRisk);\n        // const earningsYearUSD = await this.functionsUtil.convertTokenBalance(earningsYear,token,tokenConfig,isRisk);\n\n        aggregatedEarnings.earnings = aggregatedEarnings.earnings.plus(earnings);\n        aggregatedEarnings.amountLent = aggregatedEarnings.amountLent.plus(amountLent);\n        aggregatedEarnings.earningsYear = aggregatedEarnings.earningsYear.plus(earningsYear);\n      }\n    });\n\n    const orderedTokensEarnings = {};\n    this.props.enabledTokens.forEach( token => {\n      if (tokensEarnings[token]){\n        orderedTokensEarnings[token] = tokensEarnings[token];\n      }\n    });\n\n    tokensEarnings = orderedTokensEarnings;\n\n    // Add USD aggregated earnings\n    if (Object.keys(tokensEarnings).length>1){\n      tokensEarnings['USD'] = aggregatedEarnings;\n    }\n\n    let estimationStepsDefaultOption = null;\n    const estimationStepsOptions = Object.keys(this.state.estimationSteps).map( step => {\n      const estimationStep = Object.values(this.state.estimationSteps[step]).pop();\n      const label = estimationStep.optionName ? estimationStep.optionName : Object.keys(this.state.estimationSteps[step]).pop();\n      const value = parseInt(step);\n      const option = { value, label };\n\n      if (value === estimationStepsPerc){\n        estimationStepsDefaultOption = option;\n      }\n      return option;\n    });\n\n    // console.log(estimationStepsOptions,estimationStepsDefaultOption)\n\n    this.setState({\n      tokensEarnings,\n      estimationStepsPerc,\n      estimationStepsOptions,\n      estimationStepsDefaultOption,\n    });\n  }\n\n  render() {\n\n    if (!this.state.tokensEarnings){\n      return (\n        <FlexLoader\n          flexProps={{\n            flexDirection:'row',\n            minHeight:this.props.height\n          }}\n          loaderProps={{\n            size:'30px'\n          }}\n          textProps={{\n            ml:2\n          }}\n          text={'Loading estimations...'}\n        />\n      );\n    }\n\n    const estimationSteps = this.state.estimationSteps[this.state.estimationStepsPerc] ? this.state.estimationSteps[this.state.estimationStepsPerc] : this.state.estimationSteps[0];\n\n    return (\n      <Card\n        pr={0}\n        my={1}\n        width={1}\n        px={[3,4]}\n        py={[2,3]}\n        boxShadow={1}\n        borderRadius={2}\n        borderColor={'cardBorder'}\n        backgroundColor={'cardBg'}\n      >\n        <Flex\n          mt={2}\n          mb={3}\n          zIndex={9999}\n          justifyContent={'flex-end'}\n        >\n          <Flex\n            zIndex={9999}\n            width={[1,0.2]}\n            flexDirection={'column'}\n          >\n            <GenericSelector\n              innerProps={{\n                p:0,\n                px:1\n              }}\n              name={'estimation-step'}\n              options={this.state.estimationStepsOptions}\n              onChange={ v => this.setEstimationStepsPerc(v) }\n              defaultValue={this.state.estimationStepsDefaultOption}\n            />\n          </Flex>\n        </Flex>\n        {\n          Object.keys(this.state.tokensEarnings).map((token,tokenIndex) => {\n            const tokenConfig = this.props.availableTokens[token];\n            const tokenEarnings = this.state.tokensEarnings[token];\n            const estimationStepPerc = this.functionsUtil.BNify(Object.values(estimationSteps).pop().perc);\n            const finalEarnings = tokenEarnings.earningsYear.times(estimationStepPerc);\n            const cursorPerc = Math.min(1,parseFloat(tokenEarnings.earnings.div(finalEarnings)));\n            const tokenRGBColor = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'color','rgb']).join(',');\n            // console.log(tokenEarnings.earnings.toFixed(10),tokenEarnings.earningsYear.toFixed(10),finalEarnings.toFixed(10),cursorPerc.toFixed(10),estimationStepPerc.toFixed(10));\n            return (\n              <Flex\n                id={`asset-${token}`}\n                flexDirection={'row'}\n                key={`asset-${token}`}\n                borderTop={ token === 'USD' ? `1px solid ${this.props.theme.colors.divider}` : null }\n              >\n                <Flex\n                  width={[1,0.93]}\n                  position={'relative'}\n                >\n                  <Flex\n                    width={1}\n                    height={'100%'}\n                    position={'absolute'}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    <Flex\n                      width={[0.15,0.1]}\n                    >\n                    </Flex>\n                    <Flex\n                      width={[0.85,0.9]}\n                      height={'100%'}\n                      flexDirection={'row'}\n                    >\n                      {\n                        Object.keys(estimationSteps).map((label,estimateIndex) => {\n                          const estimationStep = estimationSteps[label];\n                          const estimationStepEarnings = tokenEarnings.earningsYear.times(this.functionsUtil.BNify(estimationStep.perc));\n                          let estimationStepEarningsFormatted = this.functionsUtil.formatMoney(estimationStepEarnings,this.props.isMobile ? 2 : estimationStepEarnings.lt(1) ? 3 : 2);\n                          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'conversionRateField']);\n                          if (conversionRateField){\n                            estimationStepEarningsFormatted = '$ '+estimationStepEarningsFormatted;\n                          }\n                          return (\n                            <Flex\n                              pr={2}\n                              justifyContent={'flex-end'}\n                              width={estimationStep.width}\n                              pt={ token === 'USD' ? 2 : null }\n                              key={`asset-estimate-${token}-${estimateIndex}`}\n                              borderRight={`1px solid ${this.props.theme.colors.divider}`}\n                            >\n                              {\n                                (token === 'USD' || (estimateIndex === Object.keys(estimationSteps).length-1)) && \n                                  <Text\n                                    fontWeight={3}\n                                    fontSize={[0,'1em']}\n                                    style={{\n                                      wordBreak:'break-all'\n                                    }}\n                                    color={tokenEarnings.earnings.gte(estimationStepEarnings) ? 'copyColor' : 'legend'}\n                                  >\n                                    {estimationStepEarningsFormatted}\n                                  </Text>\n                              }\n                            </Flex>\n                          );\n                        })\n                      }\n                    </Flex>\n                  </Flex>\n                  <Flex\n                    width={1}\n                    zIndex={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                    pt={ token === 'USD' ? ['2em','2.8em'] : '1.4em' }\n                    pb={ tokenIndex<Object.keys(this.state.tokensEarnings).length-1 ? '1em' : 0 }\n                  >\n                    <Flex\n                      width={[0.15,0.1]}\n                      justifyContent={['flex-start','flex-end']}\n                    >\n                      <Text\n                        pr={[0,2]}\n                        fontSize={[0,3]}\n                        fontWeight={[3,4]}\n                      >\n                        {token}\n                      </Text>\n                    </Flex>\n                    <Flex\n                      width={[0.85,0.9]}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      height={['20px','35px']}\n                      justifyContent={'flex-start'}\n                    >\n                      <Flex\n                        height={'100%'}\n                        width={cursorPerc}\n                        backgroundColor={'cardBg'}\n                      >\n                        <Flex\n                          height={'100%'}\n                          width={'100%'}\n                          borderRadius={['0 20px 20px 0','0 35px 35px 0']}\n                          style={{background:`linear-gradient(90deg, rgba(${tokenRGBColor},0) 0%, rgba(${tokenRGBColor},0.1) 30%, rgba(${tokenRGBColor},1) 100%)`}}\n                        ></Flex>\n                      </Flex>\n                      <Flex\n                        pl={2}\n                        width={'auto'}\n                        height={'100%'}\n                        alignItems={'center'}\n                        justifyContent={'flex-start'}\n                      >\n                        <Image src={`images/tokens/${token}.svg`} height={['1.4em','2.2em']} />\n                      </Flex>\n                      {\n                        <Flex\n                          pl={2}\n                          alignItems={'center'}\n                        >\n                          {\n                            token !== 'USD' ? (\n                              <AssetField\n                                {...this.props}\n                                token={token}\n                                tokenConfig={tokenConfig}\n                                fieldInfo={{\n                                  name:'earningsCounter',\n                                  props:{\n                                    decimals:this.props.isMobile ? 6 : 7,\n                                    maxPrecision:this.props.isMobile ? 9 : 10,\n                                    style:{\n                                      color:this.props.theme.colors.copyColor,\n                                      fontWeight:this.props.isMobile ? 500 : 700,\n                                      fontSize:this.props.isMobile ? '14px' : '22px',\n                                    }\n                                  }\n                                }}\n                              />\n                            ) : (\n                              <TotalEarningsCounter\n                                {...this.props}\n                                decimals={this.props.isMobile ? 6 : 7}\n                                maxPrecision={this.props.isMobile ? 9 : 10}\n                                counterStyle={{\n                                  color:this.props.theme.colors.copyColor,\n                                  fontWeight:this.props.isMobile ? 500 : 700,\n                                  fontFamily:this.props.theme.fonts.sansSerif,\n                                  fontSize:this.props.isMobile ? '14px' : '22px',\n                                }}\n                              />\n                            )\n                          }\n                        </Flex>\n                      }\n                    </Flex>\n                  </Flex>\n                </Flex>\n                {\n                  !this.props.isMobile && \n                    <Flex width={0.07} alignItems={'flex-start'} justifyContent={'flex-end'}>\n                    </Flex>\n                }\n              </Flex>\n            )\n          })\n        }\n        <Flex\n          flexDirection={'row'}\n        >\n          <Flex\n            width={[1,0.93]}\n            position={'relative'}\n          >\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'center'}\n            >\n              <Flex width={[0.15,0.1]}></Flex>\n              <Flex\n                width={[0.85,0.9]}\n                flexDirection={'row'}\n              >\n                {\n                  Object.keys(estimationSteps).map((estimationLabel,estimateIndex) => {\n                    const estimationStep = estimationSteps[estimationLabel];\n                    return (\n                      <Flex\n                        pt={2}\n                        pr={[1,2]}\n                        justifyContent={'flex-end'}\n                        width={estimationStep.width}\n                        key={`estimate-label-${estimateIndex}`}\n                        borderRight={`1px solid ${this.props.theme.colors.divider}`}\n                      >\n                        <Text\n                          fontWeight={3}\n                          fontSize={[0,2]}\n                          color={'legend'}\n                        >\n                          {estimationLabel}\n                        </Text>\n                      </Flex>\n                    );\n                  })\n                }\n              </Flex>\n            </Flex>\n          </Flex>\n          {\n            !this.props.isMobile && \n              <Flex width={0.07} alignItems={'flex-start'} justifyContent={'center'}>\n                <Text fontWeight={4} fontSize={3}></Text>\n              </Flex>\n          }\n        </Flex>\n      </Card>\n    );\n  }\n}\n\nexport default EarningsEstimation;\n","import React, { Component } from 'react';\nimport { Flex, Icon, Text, Image } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass DashboardIconButton extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          pr:2,\n          py:[2,3],\n          pl:[2,3],\n        }}\n        isActive={false}\n        isInteractive={true}\n        handleClick={this.props.handleClick}\n      >\n        <Flex\n          height={'100%'}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'center'}\n        > \n          <Flex\n            px={[1,0]}\n          >\n            {\n              this.props.icon ? (\n                <Icon\n                  name={this.props.icon}\n                  size={this.props.isMobile ? '1.8em' : '3em'}\n                  color={this.props.iconColor ? this.props.iconColor : 'redeem'}\n                />\n              ) : this.props.image && (\n                <Image\n                  src={this.props.image}\n                  width={this.props.isMobile ? '1.8em' : '2.7em'}\n                  height={this.props.isMobile ? '1.8em' : '2.7em'}\n                />\n              )\n            }\n          </Flex>\n          <Flex\n            ml={[2,3]}\n            flexDirection={'column'}\n            alignItems={'flex-start'}\n            justifyContent={'center'}\n          >\n            <Text\n              fontWeight={3}\n              fontSize={[1,3]}\n            >\n              {this.props.title}\n            </Text>\n            <Text\n              fontWeight={2}\n              fontSize={[0,2]}\n              color={'cellText'}\n            >\n              {this.props.text}\n            </Text>\n          </Flex>\n          <Icon\n            align={'center'}\n            color={'cellText'}\n            name={'KeyboardArrowRight'}\n            size={this.props.isMobile ? '1.8em' : '2.5em'}\n          />\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default DashboardIconButton;\n","import CountUp from 'react-countup';\nimport { Box, Loader } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TotalBalanceCounter extends Component {\n\n  state = {\n    counterEnd:null,\n    counterStart:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalEarnings();\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const styleChanged = JSON.stringify(prevProps.counterStyle) !== JSON.stringify(this.props.counterStyle);\n    if (styleChanged || themeModeChanged || mobileChanged){\n      const oldState = Object.assign({},this.state);\n      this.setState({\n        counterEnd:null,\n        counterStart:null\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  async loadTotalEarnings(){\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized){\n      return true;\n    }\n\n    const availableTokens = this.props.availableTokens || {};\n    const portfolio = this.props.portfolio || await this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account);\n\n    const counterStart = portfolio.totalAmountLent.plus(portfolio.totalEarnings);\n    const counterEnd = counterStart.plus(counterStart.times(portfolio.avgAPY.div(100)));\n\n    this.setState({\n      counterEnd,\n      counterStart\n    });\n  }\n\n  render() {\n\n    const counterStyle = {\n      lineHeight:1,\n      color:this.props.theme.colors.copyColor,\n      fontFamily:this.props.theme.fonts.counter,\n      fontWeight: this.props.isMobile ? 600 : 700,\n      fontSize:this.props.isMobile ? '21px' : '1.7em',\n    };\n\n    // Replace props\n    if (this.props.counterStyle && Object.keys(this.props.counterStyle).length){\n      Object.keys(this.props.counterStyle).forEach(p => {\n        counterStyle[p] = this.props.counterStyle[p];\n      });\n    }\n\n    const decimals = this.props.decimals || 8;\n\n    return this.state.counterStart && this.state.counterEnd ? (\n      <Box\n        width={1}\n      >\n        <CountUp\n          delay={0}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          decimals={decimals}\n          duration={31536000}\n          end={parseFloat(this.state.counterEnd)}\n          start={parseFloat(this.state.counterStart)}\n          formattingFn={ n => '$ '+this.functionsUtil.formatMoney(n,decimals) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              ref={countUpRef}\n              style={counterStyle}\n            />\n          )}\n        </CountUp>\n      </Box>\n    ) : (\n      <Loader size={\"20px\"} />\n    );\n  }\n}\n\nexport default TotalBalanceCounter;\n","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetsList from '../AssetsList/AssetsList';\nimport CustomList from '../CustomList/CustomList';\n// import RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport PortfolioDonut from '../PortfolioDonut/PortfolioDonut';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport PortfolioEquity from '../PortfolioEquity/PortfolioEquity';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport EarningsEstimation from '../EarningsEstimation/EarningsEstimation';\nimport { Flex, Box, Heading, Text, Tooltip, Icon, Loader } from \"rimble-ui\";\nimport DashboardIconButton from '../DashboardIconButton/DashboardIconButton';\nimport TotalBalanceCounter from '../TotalBalanceCounter/TotalBalanceCounter';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\n\n// const env = process.env;\n\nclass StrategyPage extends Component {\n\n  state = {\n    portfolio:null,\n    tokensToMigrate:{},\n    aggregatedValues:[],\n    activeCoverages:null,\n    depositedTokens:null,\n    remainingTokens:null,\n    batchedDeposits:null,\n    portfolioLoaded:false,\n    availableGovTokens:null,\n    portfolioEquityStartDate:null,\n    batchedDepositsAvailableTokens:null,\n    portfolioEquityQuickSelection:'week'\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    await this.loadPortfolio();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    if (accountChanged){\n      this.setState({\n        portfolioLoaded:false\n      },() => {\n        this.loadPortfolio();\n      });\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  setPortfolioEquityQuickSelection(portfolioEquityQuickSelection){\n    this.setStateSafe({\n      portfolioEquityQuickSelection\n    });\n  }\n\n  async loadPortfolio(){\n    const availableTokens = this.props.availableTokens || {};\n\n    if (this.state.portfolioLoaded){\n      return false;\n    }\n\n    // Load portfolio if account is set\n    if (this.props.account){\n      const newState = {};\n      const firstBlockNumber = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n\n      // Load data\n      const [\n        activeCoverages,\n        batchedDeposits,\n        tokensToMigrate,\n        portfolio\n      ] = await Promise.all([\n        // Load active coverages\n        this.functionsUtil.getActiveCoverages(this.props.account),\n        // Load claimable batches\n        this.functionsUtil.getBatchedDeposits(this.props.account),\n        // Load tokens to be migrated\n        this.functionsUtil.getTokensToMigrate(this.props.selectedStrategy),\n        // Load portfolio\n        this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account),\n        // Load and process Etherscan Txs\n        this.functionsUtil.getEtherscanTxs(this.props.account,firstBlockNumber,'latest',Object.keys(availableTokens))\n      ]);\n\n      newState.portfolio = portfolio;\n\n      newState.activeCoverages = activeCoverages && activeCoverages.length>0 ? activeCoverages.map( c => {\n        const statusColors = this.props.theme.colors.transactions.status;\n        const statusIcon = c.status === 'Expired' ? 'Error' : 'VerifiedUser';\n        const statusColor = c.status === 'Expired' ? statusColors.failed : statusColors.completed;\n        const portfolioCoverage = portfolio.totalBalance.gt(0) ? c.balance.div(portfolio.totalBalance).times(100).toFixed(2)+'%' : 'N/A';\n        const statusIconProps = {\n          color:statusColor\n        };\n        return Object.assign(c,{\n          statusIcon,\n          statusIconProps,\n          portfolioCoverage\n        });\n      }) : null;\n\n      newState.batchedDeposits = batchedDeposits && Object.keys(batchedDeposits).length>0 ? batchedDeposits : null;\n\n      if (newState.batchedDeposits){\n        newState.batchedDepositsAvailableTokens = Object.keys(newState.batchedDeposits).reduce( (batchedDepositsAvailableTokens,token) => {\n          const batchInfo = newState.batchedDeposits[token];\n          const tokenConfig = this.functionsUtil.getGlobalConfig(['tools','batchDeposit','props','availableTokens',token]);\n          if (tokenConfig.strategy === this.props.selectedStrategy){\n            switch (batchInfo.status){\n              case 'pending':\n                tokenConfig.statusIcon = 'Timelapse';\n                tokenConfig.statusIconProps = {\n                  color:this.props.theme.colors.transactions.status.pending\n                };\n              break;\n              case 'executed':\n                tokenConfig.statusIcon = 'Done';\n                tokenConfig.statusIconProps = {\n                  color:this.props.theme.colors.transactions.status.completed\n                };\n              break;\n              default:\n              break;\n            }\n            tokenConfig.token = token;\n            tokenConfig.status = batchInfo.status;\n            tokenConfig.deposited = batchInfo.batchDeposits;\n            tokenConfig.redeemable = batchInfo.batchRedeems;\n            batchedDepositsAvailableTokens[tokenConfig.baseToken] = tokenConfig;\n          }\n          return batchedDepositsAvailableTokens;\n        },{});\n      }\n\n\n      if (portfolio){\n        const depositedTokens = Object.keys(portfolio.tokensBalance).filter(token => ( this.functionsUtil.BNify(portfolio.tokensBalance[token].idleTokenBalance).gt(0) ));\n\n        newState.depositedTokens = depositedTokens;\n\n        const isRisk = this.props.selectedStrategy === 'risk';\n\n        let avgAPY = this.functionsUtil.BNify(0);\n        let avgScore = this.functionsUtil.BNify(0);\n        let totalAmountLent = this.functionsUtil.BNify(0);\n\n        await this.functionsUtil.asyncForEach(depositedTokens,async (token) => {\n          const tokenConfig = availableTokens[token];\n\n          const [\n            tokenAprs,\n            tokenScore,\n            amountLent,\n          ] = await Promise.all([\n            this.functionsUtil.getTokenAprs(tokenConfig),\n            this.functionsUtil.getTokenScore(tokenConfig,isRisk),\n            this.functionsUtil.getAmountDeposited(tokenConfig,this.props.account)\n          ]);\n\n          const amountLentToken = await this.functionsUtil.convertTokenBalance(amountLent,token,tokenConfig,isRisk);\n\n          const tokenAPY = this.functionsUtil.BNify(tokenAprs.avgApy);\n          const tokenWeight = portfolio.tokensBalance[token].tokenBalance.div(portfolio.totalBalance);\n\n          if (tokenAPY){\n            avgAPY = avgAPY.plus(tokenAPY.times(tokenWeight));\n          }\n\n          if (tokenScore){\n            avgScore = avgScore.plus(tokenScore.times(tokenWeight));\n          }\n\n          if (amountLentToken){\n            totalAmountLent = totalAmountLent.plus(amountLentToken);\n          }\n        });\n\n        // Add gov tokens to earnings\n        const govTokensTotalBalance = await this.functionsUtil.getGovTokensUserTotalBalance(this.props.account,availableTokens,'DAI');\n        const govTokensUserBalance = await this.functionsUtil.getGovTokensUserBalances(this.props.account,availableTokens,null);\n        const govTokensTotalBalanceTooltip = govTokensUserBalance ? Object.keys(govTokensUserBalance).map( govToken => {\n          const balance = govTokensUserBalance[govToken];\n          if (balance.gt(0)){\n            return `+${balance.toFixed(2)} ${govToken}`;\n          } else {\n            return null;\n          }\n        }).filter(v => (v !== null)) : null;\n\n        newState.avgAPY = avgAPY;\n        newState.avgScore = avgScore;\n        newState.govTokensTotalBalance = govTokensTotalBalance;\n        newState.govTokensTotalBalanceTooltip = govTokensTotalBalanceTooltip;\n      }\n\n      newState.tokensToMigrate = tokensToMigrate;\n      newState.portfolioLoaded = true;\n\n      const remainingTokens = Object.keys(availableTokens).filter(token => (!newState.depositedTokens.includes(token) && !Object.keys(newState.tokensToMigrate).includes(token)) );\n      newState.remainingTokens = remainingTokens;\n\n      // Portfolio loaded\n      this.setStateSafe(newState);\n    // Show available assets for not logged users\n    } else {\n      this.setStateSafe({\n        tokensToMigrate:{},\n        depositedTokens:[],\n        portfolioLoaded:true,\n        remainingTokens:Object.keys(availableTokens),\n      });\n    }\n  }\n\n  render(){\n    const viewOnly = this.props.connectorName === 'custom';\n    const govTokens = this.functionsUtil.getGlobalConfig(['govTokens']);\n    const apyLong = this.functionsUtil.getGlobalConfig(['messages','apyLong']);\n    const riskScore = this.functionsUtil.getGlobalConfig(['messages','riskScore']);\n    const yieldFarming = this.functionsUtil.getGlobalConfig(['messages','yieldFarming']);\n    const batchDepositConfig = this.functionsUtil.getGlobalConfig(['tools','batchDeposit']);\n    const coverProtocolConfig = this.functionsUtil.getGlobalConfig(['tools','coverProtocol']);\n\n    return (\n      <Box\n        width={1}\n      >\n        <Title\n          mb={3}\n        >\n          {this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'title'])} strategy\n        </Title>\n        {\n          !this.state.portfolioLoaded ? (\n            <FlexLoader\n              textProps={{\n                textSize:4,\n                fontWeight:2\n              }}\n              loaderProps={{\n                mb:3,\n                size:'40px'\n              }}\n              flexProps={{\n                minHeight:'50vh',\n                flexDirection:'column'\n              }}\n              text={'Loading portfolio...'}\n            />\n          ) : (\n            <Box\n              width={1}\n            >\n              {\n                this.props.account && this.state.depositedTokens.length>0 ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      mb={3}\n                      width={1}\n                      mt={[2,0]}\n                      alignItems={'center'}\n                      justifyContent={'center'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.avgAPY ? (\n                                <Text\n                                  lineHeight={1}\n                                  fontWeight={[3,4]}\n                                  color={'copyColor'}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: this.state.avgAPY.toFixed(2)+'<small>%</small>' }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Avg APY\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','apyLong'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio ? (\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <TotalBalanceCounter\n                                    decimals={5}\n                                    {...this.props}\n                                    portfolio={this.state.portfolio}\n                                  />\n                                  <Flex\n                                    width={1}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'center'}\n                                  >\n                                    <Flex\n                                      width={0.45}\n                                      alignItems={'center'}\n                                      justifyContent={'flex-end'}\n                                    >\n                                      <Text\n                                        fontSize={1}\n                                        fontWeight={3}\n                                        fontFamily={this.props.theme.fonts.counter}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >\n                                        +{this.state.portfolio.totalEarningsPerc.toFixed(2)}%\n                                      </Text>\n                                    </Flex>\n                                    <Text\n                                      mx={1}\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      fontFamily={this.props.theme.fonts.counter}\n                                      color={this.props.theme.colors.transactions.status.completed}\n                                    >|</Text>\n                                    <Flex\n                                      width={0.45}\n                                      alignItems={'center'}\n                                      justifyContent={'flex-start'}\n                                    >\n                                      <TotalEarningsCounter\n                                        {...this.props}\n                                        unit={'+$'}\n                                        decimals={4}\n                                        counterStyle={{\n                                          fontSize:14,\n                                          fontWeight:600,\n                                          color:this.props.theme.colors.transactions.status.completed\n                                        }}\n                                        portfolio={this.state.portfolio}\n                                      />\n                                    </Flex>\n                                  </Flex>\n                                </Flex>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Total Balance\n                              </Text>\n                              {\n                                this.state.govTokensTotalBalance && (\n                                  <Tooltip\n                                    placement={'bottom'}\n                                    message={'Total Balance does not include accrued governance tokens: '+(this.state.govTokensTotalBalance && this.state.govTokensTotalBalance.gt(0) ? ` (${this.state.govTokensTotalBalanceTooltip.join(' / ')})` : '')}\n                                  >\n                                    <Icon\n                                      ml={2}\n                                      name={\"Info\"}\n                                      size={'1em'}\n                                      color={'cellTitle'}\n                                    />\n                                  </Tooltip>\n                                )\n                              }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.avgScore ? (\n                                <Text\n                                  lineHeight={1}\n                                  fontWeight={[3,4]}\n                                  color={'copyColor'}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: this.state.avgScore.toFixed(2) }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Avg Risk Score\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','riskScoreShort'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      width={1}\n                      id={\"portfolio-charts\"}\n                      justifyContent={'space-between'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        mb={[3,0]}\n                        width={[1,0.328]}\n                        flexDirection={'column'}\n                        id={\"portfolio-composition\"}\n                      >\n                        <DashboardCard\n                          title={'Composition'}\n                          titleProps={ !this.props.isMobile ? {\n                            style:{\n                              minHeight:'39px'\n                            }\n                          } : null}\n                        >\n                          <PortfolioDonut\n                            {...this.props}\n                            parentId={'portfolio-composition'}\n                          />\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,0.666]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard>\n                          <Flex\n                            pt={[3,4]}\n                            px={[3,4]}\n                            aligItems={'center'}\n                            flexDirection={['column','row']}\n                          >\n                            <Flex\n                              width={[1,0.7]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-start'}\n                            >\n                              <Title\n                                fontWeight={4}\n                                fontSize={[2,3]}\n                                textAlign={'left'}\n                              >\n                                Performance\n                              </Title>\n                            </Flex>\n                            <Flex\n                              mt={[2,0]}\n                              width={[1,0.3]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-end'}\n                            >\n                              <GenericSelector\n                                innerProps={{\n                                  p:0,\n                                  px:1\n                                }}\n                                defaultValue={\n                                  {value:'week',label:'1W'}\n                                }\n                                name={'performance-time'}\n                                options={[\n                                  {value:'week',label:'1W'},\n                                  {value:'month',label:'1M'},\n                                  {value:'month3',label:'3M'},\n                                  {value:'month6',label:'6M'},\n                                  {value:'all',label:'MAX'},\n                                ]}\n                                onChange={ v => this.setPortfolioEquityQuickSelection(v) }\n                              />\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            ml={[0,3]}\n                            aligItems={'center'}\n                            justifyContent={'center'}\n                            id={\"portfolio-performance\"}\n                          >\n                            <PortfolioEquity\n                              {...this.props}\n                              enabledTokens={[]}\n                              parentId={'portfolio-performance'}\n                              parentIdHeight={'portfolio-composition'}\n                              quickDateSelection={this.state.portfolioEquityQuickSelection}\n                              frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n                            />\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Flex\n                    mb={3}\n                    mx={'auto'}\n                    width={[1,0.8]}\n                    aligItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      fontWeight={2}\n                      fontSize={[1,2]}\n                      textAlign={'center'}\n                    >\n                      {\n                        this.props.isMobile ?\n                          this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'descShort'])\n                        :\n                          this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'descLong'])\n                      }\n                    </Text>\n                  </Flex>\n                )\n              }\n              {\n                /*\n                !this.state.activeCoverages && coverProtocolConfig.enabled && this.state.portfolio && this.state.portfolio.totalBalance.gt(0) && (\n                  <Flex\n                    width={1}\n                    mt={[3,4]}\n                    alignItems={'center'}\n                    id={'no-active-cover'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        py:3,\n                        px:[3,4],\n                        width:[1,'auto'],\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Image\n                          mb={2}\n                          height={['1.8em','2.2em']}\n                          src={coverProtocolConfig.image}\n                        />\n                        <Text\n                          mb={1}\n                          fontSize={[2,4]}\n                          fontWeight={500}\n                          textAlign={'center'}\n                        >\n                          You don't have an active coverage\n                        </Text>\n                        <Text\n                          mb={2}\n                          color={'blue'}\n                          fontSize={[1,2]}\n                          fontWeight={500}\n                          hoverColor={'blue'}\n                          textAlign={'center'}\n                        >\n                          Cover Protocol provides coverage against Smart-Contract attacks\n                        </Text>\n                        <RoundButton\n                          buttonProps={{\n                            mt:1,\n                            width:'auto',\n                            minHeight:'40px',\n                            mainColor:'redeem',\n                            size:this.props.isMobile ? 'small' : 'medium'\n                          }}\n                          handleClick={ e => this.props.goToSection(`tools/${coverProtocolConfig.route}`) }\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <Text\n                              color={'white'}\n                              fontSize={[1,2]}\n                              fontWeight={500}\n                            >\n                              Get Covered\n                            </Text>\n                            <Icon\n                              ml={1}\n                              size={'1.3em'}\n                              name={'KeyboardArrowRight'}\n                            />\n                          </Flex>\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                )\n                */\n              }\n              {\n                this.state.batchedDeposits && (\n                  <Flex\n                    width={1}\n                    mb={[0,3]}\n                    id={'batched-deposits'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Batched Deposits</Title>\n                    <Flex\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <AssetsList\n                        enabledTokens={Object.keys(this.state.batchedDepositsAvailableTokens)}\n                        cols={[\n                          {\n                            title:'TOKEN',\n                            props:{\n                              width:[0.3,0.2]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'DEPOSITED',\n                            props:{\n                              width:[0.33, 0.21],\n                            },\n                            fields:[\n                              {\n                                name:'custom',\n                                type:'number',\n                                path:['deposited'],\n                                props:{\n                                  decimals: 4\n                                }\n                              },\n                              {\n                                name:'tokenName',\n                                props:{\n                                  ml:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'REDEEMABLE',\n                            props:{\n                              width:[0.44,0.23],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                name:'custom',\n                                type:'number',\n                                path:['redeemable'],\n                                props:{\n                                  decimals: 4\n                                }\n                              },\n                              {\n                                type:'text',\n                                name:'custom',\n                                path:['token'],\n                                props:{\n                                  ml:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'STATUS',\n                            props:{\n                              width:[0.26,0.19],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                type:'icon',\n                                mobile:false,\n                                name:'custom',\n                                path:['statusIcon'],\n                                props:{\n                                  mr:2,\n                                  size:this.props.isMobile ? '1.2em' : '1.8em'\n                                }\n                              },\n                              {\n                                name:'custom',\n                                path:['status'],\n                                props:{\n                                  style:{\n                                    textTransform:'capitalize'\n                                  }\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[0.35,0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label:'Claim',\n                                funcProps:{\n                                  disabled:(props) => (props.tokenConfig.status === 'pending')\n                                },\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'migrate',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.goToSection(`tools/${batchDepositConfig.route}/${props.tokenConfig.token}`)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                        availableTokens={this.state.batchedDepositsAvailableTokens}\n                      />\n                    </Flex>\n                  </Flex>\n                )\n              }\n              <Flex\n                width={1}\n                id={'available-assets'}\n                flexDirection={'column'}\n                mb={!this.state.depositedTokens.length ? 4 : 0}\n              >\n                {\n                  (this.state.depositedTokens.length>0 || Object.keys(this.state.tokensToMigrate).length>0 || this.state.remainingTokens.length>0 ) &&\n                    <Title my={[3,4]}>Available assets</Title>\n                }\n                <Flex width={1} flexDirection={'column'}>\n                  {\n                    Object.keys(this.state.tokensToMigrate).length>0 &&\n                    <Flex\n                      width={1}\n                      mb={[3,4]}\n                      id={\"migrate-assets\"}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Assets to migrate\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={Object.keys(this.state.tokensToMigrate)}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.15]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            mobile:this.props.account !== null,\n                            props:{\n                              width:[0.21, 0.12],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.29,0.15],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                }\n                              },\n                            ]\n                          },\n                          {\n                            title:'SCORE',\n                            desc:riskScore,\n                            props:{\n                              width:[0.21,0.12],\n                            },\n                            fields:[\n                              {\n                                name:'score'\n                              }\n                            ]\n                          },\n                          {\n                            title:'BALANCE',\n                            mobile:false,\n                            props:{\n                              width:[0.16,0.14],\n                            },\n                            parentProps:{\n                              width:1,\n                              pr:[2,4]\n                            },\n                            fields:[\n                              {\n                                name:'amountToMigrate',\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.15],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens'\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[ this.props.account === null ? 0.29 : 0 ,0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label: 'Migrate',\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'migrate',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                  {\n                  this.state.depositedTokens.length>0 &&\n                    <Flex\n                      mb={ this.state.remainingTokens.length>0 ? [3,4] : 0 }\n                      width={1}\n                      id={\"deposited-assets\"}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Deposited assets\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={this.state.depositedTokens}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.13]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            mobile:false,\n                            props:{\n                              width:[0.12,0.09],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.30,0.14],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                }\n                              },\n                            ]\n                          },\n                          {\n                            title:'SCORE',\n                            desc:riskScore,\n                            props:{\n                              width:[0.21,0.10],\n                            },\n                            parentProps:{\n                              alignItems:['center','flex-start'],\n                            },\n                            fields:[\n                              {\n                                name:'score',\n                              }\n                            ]\n                          },\n                          {\n                            title:'DEPOSITED',\n                            props:{\n                              width:[0.22,0.13],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                name:'amountLent'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.11],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'EARNINGS',\n                            props:{\n                              width:[0.15,0.13],\n                              textAlign:'center'\n                            },\n                            parentProps:{\n                              alignItems:'center',\n                              flexDirection:'column',\n                            },\n                            fields:[\n                              {\n                                name:'earnings',\n                                props:{\n                                  decimals:3\n                                }\n                              },\n                              {\n                                name:'earningsPerc',\n                                showLoader:false,\n                                showDirection:false,\n                                props:{\n                                  fontSize:0,\n                                  decimals:3\n                                }\n                              }\n                            ]\n                          },\n                          /*\n                          {\n                            title:'EARNINGS %',\n                            props:{\n                              width:[0.27,0.14],\n                            },\n                            fields:[\n                              {\n                                name:'earningsPerc'\n                              }\n                            ]\n                          },\n                          */\n                          {\n                            title:'',\n                            mobile:false,\n                            props:{\n                              width:0.17,\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label:'Manage',\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'redeem',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                  {\n                    this.state.remainingTokens.length>0 &&\n                    <Flex id=\"remaining-assets\" width={1} flexDirection={'column'}>\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Available assets\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={this.state.remainingTokens}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.13]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            mobile:this.props.account !== null,\n                            props:{\n                              width:[0.21, 0.10],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.31,this.state.depositedTokens.length>0 ? 0.14 : 0.14],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                }\n                              },\n                            ]\n                          },\n                          {\n                            title:'SCORE',\n                            desc:riskScore,\n                            props:{\n                              width:[0.22,0.10],\n                            },\n                            fields:[\n                              {\n                                name:'score'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.11],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APR LAST WEEK',\n                            mobile:false,\n                            props:{\n                              width:0.25,\n                            },\n                            parentProps:{\n                              width:1,\n                              pr:[2,4]\n                            },\n                            fields:[\n                              {\n                                name:'aprChart',\n                                style:{\n                                  overflow:'visible',\n                                },\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[ this.props.account === null ? 0.26 : 0 , 0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label: (props) => {\n                                  return Object.keys(this.state.tokensToMigrate).includes(props.token) ? 'Migrate' : 'Deposit';\n                                },\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                },\n                                funcProps:{\n                                  mainColor: (props) => {\n                                    return Object.keys(this.state.tokensToMigrate).includes(props.token) ? 'migrate' : 'deposit'\n                                  }\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                </Flex>\n              </Flex>\n              {\n                !viewOnly && this.props.account && coverProtocolConfig.enabled && (\n                  <Flex\n                    mt={3}\n                    width={1}\n                    id={\"tools\"}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      pb={2}\n                      width={1}\n                      mb={[2,3]}\n                      borderColor={'divider'}\n                      borderBottom={'1px solid transparent'}\n                    >\n                      <Heading.h4\n                        fontSize={[2,4]}\n                        fontWeight={[3,4]}\n                      >\n                        Tools\n                      </Heading.h4>\n                    </Flex>\n                    <Flex\n                      flexDirection={['column','row']}\n                    >\n                      {\n                        ['addFunds','coverProtocol','tokenSwap'].map( (toolName,toolIndex) => {\n                          const toolConfig = this.functionsUtil.getGlobalConfig(['tools',toolName]);\n                          return (\n                            <Flex\n                              width={[1,1/3]}\n                              key={`tool_${toolIndex}`}\n                              mb={toolIndex<2 ? [2,0] : 0}\n                              pr={toolIndex<2 ? [0,3] : 0}\n                            >\n                              <DashboardIconButton\n                                {...this.props}  \n                                icon={toolConfig.icon}\n                                text={toolConfig.desc}\n                                image={toolConfig.image}\n                                title={toolConfig.label}\n                                handleClick={ e => this.props.goToSection(`tools/${toolConfig.route}`) }\n                              />\n                            </Flex>\n                          );\n                        })\n                      }\n                    </Flex>\n                  </Flex>\n                )\n              }\n              {\n                this.state.depositedTokens.length>0 &&\n                  <Flex\n                    width={1}\n                    id={\"yield-farming\"}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Yield Farming</Title>\n                    <AssetsList\n                      enabledTokens={Object.keys(govTokens)}\n                      cols={[\n                        {\n                          title:'TOKEN',\n                          props:{\n                            width:[0.3,0.15]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:2,\n                                height:['1.4em','2.3em']\n                              }\n                            },\n                            {\n                              name:'tokenName'\n                            }\n                          ]\n                        },\n                        {\n                          mobile:false,\n                          title:'BALANCE',\n                          props:{\n                            width:[0.33, 0.25],\n                          },\n                          fields:[\n                            {\n                              name:'tokenBalance',\n                              props:{\n                                decimals: this.props.isMobile ? 6 : 8\n                              }\n                            }\n                          ]\n                        },\n                        {\n                          title:'REDEEMABLE',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','govTokenRedeemableBalance']),\n                          props:{\n                            width:[0.35,0.30],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'redeemableBalance',\n                              props:{\n                                decimals: this.props.isMobile ? 6 : 8\n                              }\n                            },\n                          ]\n                        },\n                        {\n                          title:'DISTRIBUTION',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','userDistributionSpeed']),\n                          props:{\n                            width:[0.35,0.30],\n                          },\n                          fields:[\n                            {\n                              name:'userDistributionSpeed',\n                              props:{\n                                decimals:6\n                              }\n                            }\n                          ]\n                        },\n                        /*\n                        {\n                          mobile:false,\n                          title:'APR',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','govTokenApr']),\n                          props:{\n                            width:[0.2,0.15],\n                          },\n                          fields:[\n                            {\n                              name:'apr',\n                            }\n                          ]\n                        },\n                        {\n                          title:'TOKEN PRICE',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','tokenPrice']),\n                          mobile:false,\n                          props:{\n                            width: 0.17,\n                          },\n                          parentProps:{\n                            width:1,\n                            pr:[2,4]\n                          },\n                          fields:[\n                            {\n                              name:'tokenPrice',\n                              props:{\n                                unit:'$',\n                                unitPos:'left',\n                                unitProps:{\n                                  mr:1,\n                                  fontWeight:3,\n                                  fontSize:[0,2],\n                                  color:'cellText'\n                                }\n                              }\n                            }\n                          ]\n                        },\n                        */\n                      ]}\n                      {...this.props}\n                      availableTokens={govTokens}\n                    />\n                  </Flex>\n              }\n              {\n                this.state.activeCoverages && (\n                  <Flex\n                    width={1}\n                    mb={[0,3]}\n                    id={'active-coverages'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Coverages</Title>\n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <CustomList\n                        rows={this.state.activeCoverages}\n                        handleClick={ this.props.isMobile ? (props) => props.row.status!=='Expired' && props.row.fileClaimUrl && this.functionsUtil.openWindow(props.row.fileClaimUrl) : null }\n                        cols={[\n                          {\n                            title:'PROTOCOL',\n                            props:{\n                              width:[0.42,0.17]\n                            },\n                            fields:[\n                              {\n                                type:'image',\n                                path:['protocolImage'],\n                                props:{\n                                  mr:[1,2],\n                                  size:this.props.isMobile ? '1.2em' : '1.8em'\n                                }\n                              },\n                              {\n                                type:'text',\n                                path:['protocolName'],\n                              }\n                            ]\n                          },\n                          {\n                            title:'BALANCE',\n                            props:{\n                              width:[0.34, 0.15],\n                            },\n                            fields:[\n                              {\n                                type:'number',\n                                path:['balance'],\n                                props:{\n                                  decimals: 4,\n                                }\n                              },\n                              {\n                                type:'text',\n                                path:['token'],\n                                props:{\n                                  ml:[1,2],\n                                  style:{\n                                    textTransform:'uppercase'\n                                  }\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'EXPIRATION DATE',\n                            props:{\n                              width:0.23,\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                type:'text',\n                                path:['expirationDate'],\n                                props:{\n                                  \n                                }\n                              },\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'COVERAGE',\n                            props:{\n                              width:0.15,\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                type:'text',\n                                path:['portfolioCoverage'],\n                                props:{\n                                  \n                                }\n                              },\n                            ]\n                          },\n                          {\n                            title:'STATUS',\n                            props:{\n                              width:[0.24,0.15],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                type:'icon',\n                                name:'custom',\n                                path:['statusIcon'],\n                                props:{\n                                  mr:[1,2],\n                                  size:this.props.isMobile ? '1.2em' : '1.8em'\n                                }\n                              },\n                              {\n                                name:'custom',\n                                path:['status'],\n                                props:{\n                                  style:{\n                                    textTransform:'capitalize'\n                                  }\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            mobile:false,\n                            props:{\n                              width:0.17,\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                type:'button',\n                                name:'custom',\n                                label:'File Claim',\n                                funcProps:{\n                                  disabled:(props) => (props.row.status==='Expired')\n                                },\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'redeem',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => props.row.status!=='Expired' && props.row.fileClaimUrl && this.functionsUtil.openWindow(props.row.fileClaimUrl)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  </Flex>\n                )\n              }\n              {\n                this.state.depositedTokens.length>0 &&\n                  <Flex\n                    width={1}\n                    id=\"earnings-estimation\"\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Estimated earnings</Title>\n                    <EarningsEstimation\n                      {...this.props}\n                      enabledTokens={this.state.depositedTokens}\n                    />\n                  </Flex>\n              }\n              {\n                this.props.account && this.state.depositedTokens.length>0 && \n                  <Flex\n                    mb={[3,4]}\n                    width={1}\n                    id={'transactions'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Transactions</Title>\n                    <TransactionsList\n                      {...this.props}\n                      enabledTokens={[]}\n                      cols={[\n                        {\n                          title: this.props.isMobile ? '' : 'HASH',\n                          props:{\n                            width:[0.15,0.24]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              name:'hash',\n                              mobile:false\n                            }\n                          ]\n                        },\n                        {\n                          title:'ACTION',\n                          mobile:false,\n                          props:{\n                            width:0.15,\n                          },\n                          fields:[\n                            {\n                              name:'action'\n                            }\n                          ]\n                        },\n                        {\n                          title:'DATE',\n                          props:{\n                            width:[0.32,0.23],\n                          },\n                          fields:[\n                            {\n                              name:'date'\n                            }\n                          ]\n                        },\n                        {\n                          title:'STATUS',\n                          props:{\n                            width:[0.18,0.22],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'statusIcon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'status'\n                            }\n                          ]\n                        },\n                        {\n                          title:'AMOUNT',\n                          props:{\n                            width:0.19,\n                          },\n                          fields:[\n                            {\n                              name:'amount'\n                            },\n                          ]\n                        },\n                        {\n                          title:'ASSET',\n                          props:{\n                            width:[0.15,0.20],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'tokenIcon',\n                              props:{\n                                mr:[0,2],\n                                height:['1.4em','1.6em']\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'tokenName'\n                            },\n                          ]\n                        },\n                      ]}\n                    />\n                  </Flex>\n              }\n            </Box>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default StrategyPage;","/*\n// batchDeposits[user][batchId] = amount\nmapping (address => mapping (uint256 => uint256)) public batchDeposits;\nmapping (uint256 => uint256) batchTotals; // in idleToken\nmapping (uint256 => uint256) batchRedeemedTotals; // in newIdleToken\n\nuint256 public currBatch;\naddress public idleToken;\naddress public newIdleToken;\naddress public underlying;\n\nfunction deposit() external\nfunction withdraw(uint256 batchId) external\n*/\n\nimport Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TransactionField from '../TransactionField/TransactionField';\nimport { Flex, Box, Text, Icon, Link, Checkbox, Tooltip } from \"rimble-ui\";\n\nclass BatchDeposit extends Component {\n\n  state = {\n    canClaim:false,\n    batchTotals:{},\n    canDeposit:true,\n    action:'deposit',\n    batchDeposits:{},\n    tokenConfig:null,\n    processing:{\n      execute:{\n        txHash:null,\n        loading:false\n      },\n      claim:{\n        txHash:null,\n        loading:false\n      },\n    },\n    usePermit:false,\n    batchRedeems:{},\n    lastExecution:null,\n    permitEnabled:true,\n    hasDeposited:false,\n    permitSigned:false,\n    selectedToken:null,\n    showPermitBox:false,\n    currBatchIndex:null,\n    batchCompleted:false,\n    claimSucceeded:false,\n    availableTokens:null,\n    selectedStrategy:null,\n    componentLoaded:false,\n    executeSucceeded:false,\n    migrationEnabled:false,\n    migrationSucceeded:false,\n    selectedTokenConfig:null,\n    availableStrategies:null,\n    batchDepositEnabled:false,\n    migrationContractApproved:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadStrategies();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      this.setState({\n        componentLoaded:false\n      },async () => {\n        await this.loadTokens();\n      });\n    }\n\n    const selectedStrategyChanged = prevState.selectedStrategy !== this.state.selectedStrategy;\n    if (selectedStrategyChanged){\n      const selectedToken = Object.keys(this.state.availableTokens)[0];\n      this.selectToken(selectedToken);\n    }\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const executeSucceededChanged = prevState.executeSucceeded !== this.state.executeSucceeded;\n    const contractApprovedChanged = prevState.migrationContractApproved !== this.state.migrationContractApproved;\n    if (selectedTokenChanged || contractApprovedChanged || executeSucceededChanged){\n      this.checkBatchs();\n    }\n\n  }\n\n  async execute () {\n\n    const loading = true;\n\n    const callbackExecute = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'Execute',\n        eventCategory: 'BatchDeposit',\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        executeSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          execute:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptExecute = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          execute:{\n            ...prevState.processing.execute,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'executeBatch', [true], null, callbackExecute, callbackReceiptExecute);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        execute:{\n          ...prevState.processing.execute,\n          loading\n        }\n      }\n    }));\n  }\n\n  async checkBatchs(migrationSucceeded=false){\n\n    const migrationContractInfo = this.state.selectedTokenConfig.migrationContract;\n\n    await Promise.all([\n      this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi),\n      this.props.initContract(this.state.tokenConfig.name,this.state.tokenConfig.address,this.state.tokenConfig.abi)\n    ]);\n\n    let [\n      batchExecutions,\n      currBatchIndex,\n      migrationContractApproved\n    ] = await Promise.all([\n      this.functionsUtil.getBatchedDepositExecutions(migrationContractInfo.address),\n      this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'currBatch'),\n      this.functionsUtil.checkTokenApproved(this.state.tokenConfig.name,migrationContractInfo.address,this.props.account)\n    ]);\n\n    // If use Permit don't ask for Approve\n    let usePermit = false;\n    if (!migrationContractApproved && migrationContractInfo.functions && migrationContractInfo.functions.length === 1){\n      const functionInfo = migrationContractInfo.functions[0];\n      usePermit = typeof functionInfo.usePermit !== 'undefined' ? functionInfo.usePermit : false;\n      const nonceMethod = this.functionsUtil.getGlobalConfig(['permit',this.state.tokenConfig.name,'nonceMethod']);\n      const permitContract = this.functionsUtil.getContractByName(this.state.tokenConfig.name);\n      usePermit = usePermit && permitContract && (!nonceMethod || permitContract.methods[nonceMethod] !== undefined);\n    }\n\n    const newState = {};\n    const batchTotals = {};\n    const batchRedeems = {};\n    const batchDeposits = {};\n    let batchCompleted = false;\n\n    currBatchIndex = currBatchIndex || 0;\n    for (let batchIndex = 0; batchIndex <= parseInt(currBatchIndex) ; batchIndex++){\n      let [\n        batchTotal,\n        batchRedeem,\n        batchDeposit\n      ] = await Promise.all([\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchTotals',[batchIndex]),\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchRedeemedTotals',[batchIndex]),\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n      ]);\n      if (batchTotal && batchTotal !== null){\n        batchTotals[batchIndex] = this.functionsUtil.fixTokenDecimals(batchTotal,this.state.tokenConfig.decimals);\n      }\n      if (batchDeposit !== null){\n        batchRedeem = this.functionsUtil.fixTokenDecimals(batchRedeem,18);\n        batchDeposit = this.functionsUtil.fixTokenDecimals(batchDeposit,this.state.tokenConfig.decimals);\n        if (batchDeposit.gt(0)){\n          batchDeposits[batchIndex] = batchDeposit;\n          // Calculate redeemable idleTokens\n          batchRedeems[batchIndex] = batchDeposit.times(batchRedeem).div(batchTotals[batchIndex]);\n          if (batchRedeems[batchIndex].gt(batchRedeem)){\n            batchRedeems[batchIndex] = batchRedeem;\n          }\n          // Check claimable\n          if (batchIndex < currBatchIndex){\n            batchCompleted = true;\n          }\n        }\n      }\n    }\n\n    newState.batchDeposits = batchDeposits;\n\n    const hasDeposited = (batchDeposits && Object.keys(batchDeposits).length>0);\n\n    const lastExecution = batchExecutions && batchExecutions.length ? batchExecutions[0] : null;\n    const batchDepositInfo = this.functionsUtil.getGlobalConfig(['tools','batchDeposit']);\n    const batchDepositEnabled = batchDepositInfo.depositEnabled;\n\n    newState.usePermit = usePermit;\n    newState.showPermitBox = false;\n    newState.claimSucceeded = false;\n    newState.componentLoaded = true;\n    newState.executeSucceeded = false;\n    newState.batchTotals = batchTotals;\n    newState.hasDeposited = hasDeposited;\n    newState.batchRedeems = batchRedeems;\n    newState.lastExecution = lastExecution;\n    newState.currBatchIndex = currBatchIndex;\n    newState.batchCompleted = batchCompleted;\n    newState.migrationSucceeded = migrationSucceeded;\n    newState.batchDepositEnabled = batchDepositEnabled;\n    newState.canClaim = batchCompleted || hasDeposited;\n    // Prevent user to deposit if the batch has been completed\n    newState.canDeposit = batchDepositEnabled && !batchCompleted;\n    newState.migrationContractApproved = migrationContractApproved;\n    newState.action = hasDeposited || newState.canClaim ? 'redeem' : 'deposit';\n\n    this.setState(newState);\n  }\n\n  async loadStrategies(){\n\n    // Init tokens contracts\n    const availableStrategiesKeys = {};\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n      availableStrategiesKeys[tokenConfig.strategy] = true;\n    });\n\n    const availableStrategies = Object.keys(availableStrategiesKeys).map( strategy => {\n      const strategyConfig = this.functionsUtil.getGlobalConfig(['strategies',strategy]);\n      return {\n        value:strategy,\n        icon:strategyConfig.icon,\n        label:strategyConfig.title\n      };\n    });\n\n    // console.log('availableStrategies',availableStrategies);\n\n    if (availableStrategies && availableStrategies.length>0){\n      let selectedStrategy = availableStrategies[0].value;\n      let selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : null;\n      if (selectedToken){\n        const selectedTokenConfig = this.props.toolProps.availableTokens[selectedToken];\n        selectedToken = selectedTokenConfig.baseToken;\n        selectedStrategy = selectedTokenConfig.strategy;\n      }\n\n      this.setState({\n        availableStrategies\n      },() => {\n        this.selectStrategy(selectedStrategy,selectedToken);\n      });\n    }\n  }\n\n  /*\n  async loadTokens(){\n    const selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : null;\n    if (selectedToken){\n      this.selectToken(selectedToken);\n    }\n  }\n  */\n\n  async selectStrategy (selectedStrategy,selectedToken=null) {\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens)\n      .filter(key => this.props.toolProps.availableTokens[key].strategy === selectedStrategy )\n      .reduce((obj, key) => {\n        const tokenConfig = this.props.toolProps.availableTokens[key];\n        const baseTokenConfig = this.props.availableStrategies[selectedStrategy][tokenConfig.baseToken];\n\n        tokenConfig.abi = baseTokenConfig.abi;\n        tokenConfig.token = baseTokenConfig.token;\n        tokenConfig.address = baseTokenConfig.address;\n        tokenConfig.decimals = baseTokenConfig.decimals;\n        obj[tokenConfig.baseToken] = tokenConfig;\n        return obj;\n      }, {});\n\n    this.setState({\n      availableTokens,\n      selectedStrategy\n    },() => {\n      if (selectedToken){\n        this.selectToken(selectedToken);\n      }\n    });\n  }\n\n  async selectToken (selectedToken) {\n    const selectedTokenConfig = this.state.availableTokens[selectedToken];\n    const strategyAvailableTokens = this.props.availableStrategies[selectedTokenConfig.strategy];\n\n    const baseTokenConfig = strategyAvailableTokens[selectedTokenConfig.token];\n\n    const tokenConfig = {\n      name:baseTokenConfig.token,\n      token:baseTokenConfig.token,\n      address:baseTokenConfig.address,\n      decimals:baseTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = baseTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:baseTokenConfig.abi,\n      name:baseTokenConfig.token,\n      token:baseTokenConfig.token,\n      address:baseTokenConfig.address\n    };\n    \n    const migrationContract = selectedTokenConfig.migrationContract;\n\n    // Add migration function\n    if (baseTokenConfig.migrateFunction){\n      migrationContract.functions[0].name = baseTokenConfig.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(selectedTokenConfig.strategy,baseTokenConfig.token);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedTokenConfig\n    },() => {\n      // Select strategy and available tokens\n      if (selectedTokenConfig.strategy !== this.state.selectedStrategy){\n        const selectedStrategy = selectedTokenConfig.strategy;\n        this.selectStrategy(selectedStrategy);\n      }\n    });\n  }\n\n  async claim () {\n    if (!this.state.batchCompleted){\n      return null;\n    }\n\n    const loading = true;\n    const claimableValue = 0;\n    const batchId = Object.keys(this.state.batchDeposits)[0];\n\n    const callbackClaim = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'Claim',\n        eventCategory: `BatchDeposit`,\n        eventValue: parseInt(claimableValue),\n        eventLabel: this.props.selectedToken,\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        claimSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          claim:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptClaim = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          claim:{\n            ...prevState.processing.claim,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'withdraw', [batchId], null, callbackClaim, callbackReceiptClaim);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        claim:{\n          ...prevState.processing.claim,\n          loading\n        }\n      }\n    }));\n  }\n\n  async callbackPermit(){\n    this.setState({\n      permitSigned:true\n    });\n  }\n\n  showPermitBox(){\n    this.setState({\n      showPermitBox:true\n    });\n  }\n\n  async callbackApprove(migrationContractApproved){\n    // console.log('callbackApprove',this.state.migrationContractApproved,migrationContractApproved);\n    if (migrationContractApproved !== this.state.migrationContractApproved){\n      this.setState({\n        migrationContractApproved\n      });\n    }\n  }\n\n  setAction = (action) => {\n    if (action !== null && ['deposit','redeem'].includes(action.toLowerCase())){\n      const migrationSucceeded = false;\n      this.setState({\n        action,\n        migrationSucceeded\n      });\n    }\n  }\n\n  togglePermitEnabled(permitEnabled){\n    this.setState({\n      permitEnabled\n    });\n  }\n\n  migrationEnabledCallback = (migrationEnabled) => {\n    this.setState({\n      migrationEnabled\n    });\n  }\n\n  migrationCallback = (tx) => {\n    this.checkBatchs(true);\n  }\n\n  render() {\n\n    if (!this.state.selectedStrategy){\n      return null;\n    }\n\n    const usePermit = this.state.permitEnabled && this.state.usePermit;\n    // const batchId = this.state.batchDeposits && Object.keys(this.state.batchDeposits).length>0 ? Object.keys(this.state.batchDeposits)[0] : null;\n    const batchRedeem = this.state.batchRedeems && Object.values(this.state.batchRedeems).length>0 ? Object.values(this.state.batchRedeems)[0] : null;\n    const batchDeposit = this.state.batchDeposits && Object.values(this.state.batchDeposits).length>0 ? Object.values(this.state.batchDeposits)[0] : null;\n    const contractApproved = (usePermit && this.state.permitSigned) || (!usePermit && this.state.migrationContractApproved);\n    const canExecuteBatch = this.state.batchTotals && this.state.batchTotals[this.state.currBatchIndex] && this.state.batchTotals[this.state.currBatchIndex].gt(0);\n    const strategyDefaultValue = this.state.selectedStrategy ? this.state.availableStrategies.find( s => s.value === this.state.selectedStrategy ) : this.state.availableStrategies[0];\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Choose the strategy:\n            </Text>\n            <GenericSelector\n              {...this.props}\n              name={'strategy'}\n              isSearchable={false}\n              defaultValue={strategyDefaultValue}\n              CustomOptionValue={CustomOptionValue}\n              options={this.state.availableStrategies}\n              onChange={this.selectStrategy.bind(this)}\n              CustomValueContainer={CustomValueContainer}\n            />\n          </Box>\n          {\n            this.state.availableTokens && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Select asset to deposit:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  id={'token-from'}\n                  showBalance={true}\n                  isSearchable={false}\n                  onChange={this.selectToken.bind(this)}\n                  selectedToken={this.state.selectedToken}\n                  availableTokens={this.state.availableTokens}\n                />\n              </Box>\n          }\n          {\n            !this.state.componentLoaded && (\n              <Flex\n                mt={4}\n                flexDirection={'column'}\n              >\n                <FlexLoader\n                  flexProps={{\n                    flexDirection:'row'\n                  }}\n                  loaderProps={{\n                    size:'30px'\n                  }}\n                  textProps={{\n                    ml:2\n                  }}\n                  text={'Loading asset info...'}\n                />\n              </Flex>\n            )\n          }\n          {\n            !this.props.account ? (\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mt:3\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                    name={'Input'}\n                    color={'cellText'}\n                  />\n                  <Text\n                    mt={[1,2]}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Please connect with your wallet interact with Idle.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:2,\n                      width:[1,1/2]\n                    }}\n                    handleClick={this.props.connectAndValidateAccount}\n                  >\n                    Connect\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            ) : this.state.componentLoaded &&  this.state.selectedTokenConfig && (this.state.canDeposit || this.state.canClaim) && (\n              <Box\n                width={1}\n              >\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                    px:4,\n                    mt:3,\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  > \n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ contractApproved ? 'CheckBox' : 'LooksOne'}\n                        color={ contractApproved ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        {\n                          usePermit ? 'Sign Approve message' : 'Approve the batch deposit contract'\n                        }\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ (this.state.hasDeposited || this.state.batchCompleted) ? 'CheckBox' : 'LooksTwo'}\n                        color={ (this.state.hasDeposited || this.state.batchCompleted) ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        Deposit your {this.state.selectedToken}\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ this.state.batchCompleted ? 'CheckBox' : 'Looks3'}\n                        color={ this.state.batchCompleted ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        Wait for batch execution\n                        <Link\n                          ml={1}\n                          fontWeight={2}\n                          color={'primary'}\n                          display={'inline'}\n                          hoverColor={'primary'}\n                          onClick={ e => this.props.openTooltipModal('Batch Execution Schedule',this.functionsUtil.getGlobalConfig(['messages','batchDepositExecutionSchedule'])) }\n                        >\n                          (Read More)\n                        </Link>\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ this.state.claimSucceeded ? 'CheckBox' : 'Looks4'}\n                        color={ this.state.claimSucceeded ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'flex-start'}\n                      >\n                        <Text\n                          ml={1}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'left'}\n                        >\n                          Claim your {this.state.tokenConfig.idle.token}\n                        </Text>\n                        <Tooltip\n                          placement={'top'}\n                          message={`You will start earning gov tokens after the batch is executed and you claim your ${this.state.tokenConfig.idle.token}`}\n                        >\n                          <Icon\n                            ml={1}\n                            size={'1.2em'}\n                            name={'Warning'}\n                            color={'#ffe000'}\n                            style={{\n                              cursor:'pointer'\n                            }}\n                          />\n                        </Tooltip>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                </DashboardCard>\n              </Box>\n            )\n          }\n          {\n            this.state.componentLoaded && this.props.account && this.state.availableTokens && this.state.selectedToken && (\n              <Box width={1}>\n                {\n                  (contractApproved || this.state.canClaim) && \n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text mb={2}>\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canDeposit ? this.setAction('deposit') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canDeposit }\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canClaim ? this.setAction('redeem') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canClaim }\n                          isActive={ this.state.action === 'redeem' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Claim\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                }\n                {\n                  this.state.showPermitBox && this.state.action === 'deposit' && this.state.usePermit && this.state.migrationEnabled && !this.state.migrationSucceeded ? (\n                    <DashboardCard\n                      cardProps={{\n                        py:3,\n                        px:2,\n                        mt:3,\n                        display:'flex',\n                        alignItems:'center',\n                        flexDirection:'column',\n                        justifyContent:'center',\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          color={'cellText'}\n                          name={'LightbulbOutline'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={1}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          {this.state.selectedToken} supports Approve and Deposit in a single transaction, disable this feature and try again if you can't deposit in the batch.\n                        </Text>\n                      </Flex>\n                      <Checkbox\n                        mt={1}\n                        required={false}\n                        checked={this.state.permitEnabled}\n                        label={`Approve and Deposit in a single transaction`}\n                        onChange={ e => this.togglePermitEnabled(e.target.checked) }\n                      />\n                    </DashboardCard>\n                  ) : !this.state.showPermitBox && this.state.action === 'deposit' && this.state.usePermit && this.state.migrationEnabled && !this.state.migrationSucceeded && (\n                    <Flex\n                      p={0}\n                      mt={3}\n                      width={1}\n                      borderRadius={2}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'center'}\n                    >\n                      <Link\n                        textAlign={'center'}\n                        hoverColor={'primary'}\n                        onClick={this.showPermitBox.bind(this)}\n                      >\n                        Having trouble with the Batch Deposit?\n                      </Link>\n                    </Flex>\n                  )\n                }\n                {\n                  this.state.action === 'deposit' ? \n                    this.state.batchDepositEnabled ? (\n                      <Migrate\n                        {...this.props}\n                        showActions={false}\n                        usePermit={usePermit}\n                        getTokenPrice={false}\n                        isMigrationTool={true}\n                        showBalanceSelector={true}\n                        migrationIcon={'FileDownload'}\n                        waitText={'Deposit estimated in'}\n                        tokenConfig={this.state.tokenConfig}\n                        selectedToken={this.state.selectedToken}\n                        migrationParams={toMigrate => [toMigrate]}\n                        selectedStrategy={this.props.selectedStrategy}\n                        callbackPermit={this.callbackPermit.bind(this)}\n                        callbackApprove={this.callbackApprove.bind(this)}\n                        migrationCallback={this.migrationCallback.bind(this)}\n                        migrationEnabledCallback={this.migrationEnabledCallback.bind(this)}\n                        migrationText={`Deposit your ${this.state.selectedToken} and wait until it is converted to the new ${this.state.tokenConfig.idle.token}.`}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:3\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedToken} in your wallet.\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Migrate>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          my:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Text\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            Batch Deposit is disabled for this asset.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      {\n                        this.state.processing.claim.loading ? (\n                          <Flex\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar web3={this.props.web3} waitText={`Claim estimated in`} endMessage={`Finalizing approve request...`} hash={this.state.processing.claim.txHash} />\n                          </Flex>\n                        ) : this.state.claimSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'DoneAll'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You have successfully withdrawn your {this.state.tokenConfig.idle.token}!\n                            </Text>\n                            <Link\n                              mt={2}\n                              textAlign={'center'}\n                              hoverColor={'primary'}\n                              onClick={ e => this.props.goToSection(this.state.selectedTokenConfig.strategy+'/'+this.state.selectedTokenConfig.baseToken) }\n                            >\n                              Go to the Dashboard\n                            </Link>\n                          </Flex>\n                        ) : this.state.batchCompleted ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              color={'cellText'}\n                              name={'FileUpload'}\n                            />\n                            <Text\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The Batch has been executed!<br />You can now claim your {batchRedeem.toFixed(4)} {this.state.tokenConfig.idle.token}\n                            </Text>\n                            <Text\n                              fontSize={1}\n                              color={'#ff9900'}\n                              textAlign={'center'}\n                            >\n                              (You need to claim your {this.state.tokenConfig.idle.token} to start earning Gov Tokens)\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                              <RoundButton\n                                buttonProps={{\n                                  mt:2,\n                                  width:[1,0.5],\n                                  mainColor:this.props.theme.colors.redeem\n                                }}\n                                handleClick={ e => this.claim() }\n                              >\n                                Claim\n                              </RoundButton>\n                            </Flex>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'1.8em'}\n                              color={'cellText'}\n                              name={'HourglassEmpty'}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              <Text.span\n                                color={'cellText'}\n                              >\n                                You have successfully deposited <strong>{batchDeposit.toFixed(4)} {this.state.selectedToken}</strong>, please wait until the batch is executed to claim your {this.state.tokenConfig.idle.token}.\n                              </Text.span>\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n                {\n                  this.state.batchTotals[this.state.currBatchIndex] && \n                    <DashboardCard\n                      cardProps={{\n                        p:2,\n                        my:3\n                      }}\n                    >\n                      {\n                        this.state.processing.execute.loading ? (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <TxProgressBar web3={this.props.web3} waitText={`Batch execution estimated in`} endMessage={`Finalizing batch execution request...`} hash={this.state.processing.execute.txHash} />\n                          </Flex>\n                        ) : this.state.executeSucceeded ? (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Icon\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The Batch has been executed!\n                            </Text>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Text\n                              fontWeight={500}\n                              color={'copyColor'}\n                              textAlign={'center'}\n                            >\n                              Batch Pool: {this.state.batchTotals[this.state.currBatchIndex].toFixed(4)} {this.state.selectedToken}\n                            </Text>\n                            {\n                              canExecuteBatch && \n                                <Link\n                                  textAlign={'center'}\n                                  hoverColor={'primary'}\n                                  onClick={this.execute.bind(this)}\n                                >\n                                  Execute Batch\n                                </Link>\n                            }\n                            {\n                              this.state.batchTotals[this.state.currBatchIndex].lt(this.state.selectedTokenConfig.minPoolSize) && (\n                                <Text\n                                  mb={1}\n                                  fontSize={1}\n                                  color={'#ff9900'}\n                                  textAlign={'center'}\n                                >\n                                  (The pool size has to reach at least {this.functionsUtil.formatMoney(this.state.selectedTokenConfig.minPoolSize,0)} {this.state.selectedToken} to be executed)\n                                </Text>\n                              )\n                            }\n                            {\n                              this.state.lastExecution && (\n                                <Text\n                                  fontSize={0}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  Last Batch Execution: {this.functionsUtil.strToMoment(this.state.lastExecution.timeStamp*1000).utc().format('YYYY-MM-DD HH:mm UTC')}\n                                </Text>\n                              )\n                            }\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                }\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default BatchDeposit;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass CoverProtocol extends Component {\n\n  state = {\n    steps:null,\n    infoBox:null,\n    swapInfo:null,\n    portfolio:null,\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    selectedAction:null,\n    successMessage:null,\n    activeCoverages:null,\n    defaultCoverage:null,\n    selectedCoverage:null,\n    contractApproved:false,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    transactionSucceeded:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n    // window.transactionSucceeded = this.transactionSucceeded.bind(this);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedCoverageChanged = prevState.selectedCoverage !== this.state.selectedCoverage;\n    if (selectedCoverageChanged){\n      const selectedToken = this.state.selectedCoverage.collateral;\n      const tokenConfig = Object.values(this.props.availableStrategies)[0][selectedToken];\n      const tokenBalance = await this.functionsUtil.getTokenBalance(selectedToken,this.props.account);\n      const selectedAction = !this.state.selectedAction ? (this.props.urlParams.param2 || 'Claim') : this.state.selectedAction;\n      this.setState({\n        tokenConfig,\n        tokenBalance,\n        selectedToken,\n        selectedAction\n      });\n    }\n\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue && this.state.inputValue.gt(0);\n    const swapInfoChanged = JSON.stringify(prevState.swapInfo) !== JSON.stringify(this.state.swapInfo) && this.state.inputValue && this.state.inputValue.gt(0);\n    if (selectedActionChanged || inputValueChanged || swapInfoChanged || contractApprovedChanged){\n      this.updateData();\n    }\n\n    const contractInfoChanged = JSON.stringify(prevState.contractInfo) !== JSON.stringify(this.state.contractInfo);\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async getSwapInfo(amount){\n    amount = this.functionsUtil.BNify(amount);\n    if (!amount.isNaN() && amount.gt(0)){\n      // console.log('getSwapInfo',this.state.contractInfo.name,this.state.tokenConfig.address,balancerTokenConfig.address,swapFee,covTokens,tokenPrice);\n\n      if (this.state.tokenPrice && this.state.swapFee && this.state.covTokens){\n\n        const swapFee = this.state.swapFee;\n        const tokenPrice = this.state.tokenPrice;\n        let tokenAmountOut = amount.div(tokenPrice);\n        tokenAmountOut = tokenAmountOut.minus(tokenAmountOut.times(swapFee));\n\n        return {\n          amount,\n          tokenAmountOut\n        };\n      }\n    }\n\n    return null;\n  }\n\n  async changeInputCallback(inputValue=null){\n    let swapInfo = null;\n    let balanceSelectorInfo = null;\n    inputValue = inputValue || this.state.inputValue;\n\n    if (inputValue && this.functionsUtil.BNify(inputValue).gt(0)){\n      switch (this.state.selectedAction){\n        case 'Mint':\n          balanceSelectorInfo = {\n            color:this.props.theme.colors.transactions.status.completed,\n            text:`You will Mint: ${inputValue.toFixed(4)} CLAIM and NOCLAIM`\n          };\n        break;\n        case 'Claim':\n        case 'NoClaim':\n          const amount = this.functionsUtil.normalizeTokenAmount(inputValue,this.state.tokenConfig.decimals);\n          swapInfo = await this.getSwapInfo(amount);\n          if (swapInfo){\n            if (swapInfo.tokenAmountOut.lte(this.state.covTokens)){\n              balanceSelectorInfo = {\n                color:this.props.theme.colors.transactions.status.completed,\n                text:`You will Buy: ~${this.functionsUtil.fixTokenDecimals(swapInfo.tokenAmountOut,18).toFixed(4)} ${this.state.selectedAction}`\n              };\n            } else {\n              balanceSelectorInfo = {\n                text:`Not enough liquidity`,\n                color:this.props.theme.colors.transactions.status.failed,\n              };\n            }\n          }\n        break;\n        default:\n        break;\n      }\n    }\n\n    this.setState({\n      swapInfo,\n      inputValue,\n      balanceSelectorInfo\n    });\n  }\n\n  async getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = null;\n    amount = this.functionsUtil.BNify(amount);\n    const MAX_UINT256 = this.functionsUtil.BNify(2).pow(256).minus(1).toFixed(0);\n    switch (this.state.selectedAction){\n      case 'Mint':\n        methodName = 'addCover';\n        methodParams = [this.state.tokenConfig.address,parseInt(this.state.selectedCoverage.expirationTimestamp),this.functionsUtil.integerValue(amount)];\n      break;\n      case 'Claim':\n      case 'NoClaim':\n        methodName = 'swapExactAmountOut';\n        const balancerTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const swapInfo = await this.getSwapInfo(amount);\n        if (swapInfo){\n          if (swapInfo.tokenAmountOut.lte(this.state.covTokens)){\n            methodParams = [this.state.tokenConfig.address,this.functionsUtil.integerValue(amount),balancerTokenConfig.address, this.functionsUtil.integerValue(swapInfo.tokenAmountOut), MAX_UINT256];\n          } else {\n            return null;\n          }\n        }\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    let infoBox = null;\n    const dashboardUrl = `#${this.functionsUtil.getGlobalConfig(['dashboard','baseRoute'])}/best`;\n    const fixedAmount = this.functionsUtil.fixTokenDecimals(amount,this.state.tokenConfig.decimals);\n    switch (this.state.selectedAction){\n      case 'Mint':\n        const mintedClaimLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.selectedCoverage.tokens['Claim'].address ) : null;\n        const mintedNoClaimLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.selectedCoverage.tokens['NoClaim'].address ) : null;\n        const mintedClaimAmount = mintedClaimLog ? this.functionsUtil.fixTokenDecimals(parseInt(mintedClaimLog.data,16),this.state.contractInfo.decimals) : fixedAmount;\n        const mintedNoClaimAmount = mintedNoClaimLog ? this.functionsUtil.fixTokenDecimals(parseInt(mintedNoClaimLog.data,16),this.state.contractInfo.decimals) : fixedAmount;\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully minted <strong>${mintedClaimAmount.toFixed(4)} CLAIM</strong> and <strong>${mintedNoClaimAmount.toFixed(4)} NOCLAIM</strong> tokens<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      case 'Claim':\n        const claimTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const claimTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === claimTokenConfig.address ) : null;\n        const receivedClaimAmount = claimTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(claimTokensLog.data,16),claimTokenConfig.balancerPool.decimals) : this.functionsUtil.fixTokenDecimals(params[3],claimTokenConfig.balancerPool.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully bought <strong>${receivedClaimAmount.toFixed(4)} ${this.state.selectedAction}</strong> tokens, you are now covered in the event that there is a successful attack on the protocol<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      case 'NoClaim':\n        debugger;\n        const noClaimTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const noClaimTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === noClaimTokenConfig.address ) : null;\n        const receivedNoClaimAmount = noClaimTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(noClaimTokensLog.data,16),noClaimTokenConfig.balancerPool.decimals) : this.functionsUtil.fixTokenDecimals(params[3],noClaimTokenConfig.balancerPool.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully bought <strong>${receivedNoClaimAmount.toFixed(4)} ${this.state.selectedAction}</strong> tokens, you will be rewarded if there is no successful attack on the protocol by the expiry date<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    // Set second step completed\n    let steps = this.state.steps;\n    steps[1].completed = true;\n\n    const transactionSucceeded = true;\n    const tokenBalance = await this.functionsUtil.getTokenBalance(this.state.selectedToken,this.props.account);\n\n    // console.log('transactionSucceeded',infoBox);\n\n    this.setState({\n      steps,\n      infoBox,\n      tokenBalance,\n      transactionSucceeded\n    });\n  }\n\n  async updateData(){\n    let apy = null;\n    const steps = [];\n    let infoBox = null;\n    let swapFee = null;\n    let covTokens = null;\n    let tokenPrice = null;\n    let tokenAmount = null;\n    let contractInfo = null;\n    let collateralAmount = null;\n    let approveDescription = null;\n\n    const claimTokenConfig = this.state.selectedCoverage.tokens['Claim'];\n    const noClaimTokenConfig = this.state.selectedCoverage.tokens['NoClaim'];\n    const balancerClaimConfig = claimTokenConfig.balancerPool;\n    const balancerNoClaimConfig = noClaimTokenConfig.balancerPool;\n\n    await Promise.all([\n      this.props.initContract(claimTokenConfig.name,claimTokenConfig.address,claimTokenConfig.abi),\n      this.props.initContract(noClaimTokenConfig.name,noClaimTokenConfig.address,noClaimTokenConfig.abi),\n      this.props.initContract(balancerClaimConfig.name,balancerClaimConfig.address,balancerClaimConfig.abi),\n      this.props.initContract(balancerNoClaimConfig.name,balancerNoClaimConfig.address,balancerNoClaimConfig.abi)\n    ]);\n\n    const [\n      claimTokenBalance,\n      noClaimTokenBalance,\n      balancerPoolClaimBalance,\n      balancerPoolNoClaimBalance\n    ] = await Promise.all([\n      // Get Claim token balance\n      this.functionsUtil.getTokenBalance(claimTokenConfig.name,this.props.account),\n      // Get NOCLAIM token balance\n      this.functionsUtil.getTokenBalance(noClaimTokenConfig.name,this.props.account),\n      // Get Balancer Claim token Pool balance\n      this.functionsUtil.getTokenBalance(balancerClaimConfig.name,this.props.account),\n      // Get Balancer NOCLAIM token Pool balance\n      this.functionsUtil.getTokenBalance(balancerNoClaimConfig.name,this.props.account)\n    ]);\n\n    // Check if user has both Claim and NOCLAIM tokens\n    const hasMintedTokens = claimTokenBalance && noClaimTokenBalance && claimTokenBalance.gt(0) && noClaimTokenBalance.gt(0);\n\n    // Set Contract Info\n    switch (this.state.selectedAction){\n      case 'Mint':\n        contractInfo = this.props.toolProps.contract;\n      break;\n      case 'NoClaim':\n        contractInfo = noClaimTokenConfig.balancerPool;\n      break;\n      case 'Claim':\n        contractInfo = claimTokenConfig.balancerPool;\n      break;\n      default:\n      break;\n    }\n\n    const balancerTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n\n    if (contractInfo){\n      if (balancerTokenConfig){\n        [\n          swapFee,\n          covTokens,\n          tokenPrice\n        ] = await Promise.all([\n          this.functionsUtil.genericContractCall(contractInfo.name,'getSwapFee'),\n          this.functionsUtil.genericContractCall(contractInfo.name,'getBalance',[balancerTokenConfig.address]),\n          this.functionsUtil.genericContractCall(contractInfo.name,'getSpotPrice',[this.state.tokenConfig.address,balancerTokenConfig.address])\n        ]);\n\n        // Calculate yearly returns\n        if (tokenPrice){\n          const isClaim = this.state.selectedAction === 'Claim';\n          const expirationTimestamp = this.state.selectedCoverage.expirationTimestamp;\n          const days =  (expirationTimestamp*1000 - Date.now())/(60 * 60 * 24 * 1000);\n          tokenPrice = this.functionsUtil.fixTokenDecimals(tokenPrice,this.state.tokenConfig.decimals);\n          const apyPrice = isClaim ? tokenPrice : this.functionsUtil.BNify(1).minus(tokenPrice).div(tokenPrice);\n          apy = this.functionsUtil.BNify(100).times(apyPrice).times(365).div(days);\n        }\n\n        // Fix swap Fees\n        if (swapFee){\n          swapFee = this.functionsUtil.fixTokenDecimals(swapFee,18);\n        }\n      }\n\n      switch (this.state.selectedAction){\n        case 'Mint':\n          approveDescription = `Approve the Cover Protocol contract`;\n          infoBox = {\n            icon:'MonetizationOn',\n            text:`Stake ${this.state.selectedToken} to mint both CLAIM and NOCLAIM tokens in a 1:1 ratio then add them to the respective Balancer Pool to earn trading fees.<br /><small>Prior to expiry or an accepted claim, users can redeem back their collateral with both their CLAIM and NOCLAIM tokens. <a href=\"https://docs.coverprotocol.com/user-guide/redemption\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a></small>`\n          };\n          // Add Approve Step\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:hasMintedTokens,\n            description:`Mint CLAIM and NOCLAIM tokens`\n          });\n          // Add Liquidity to Balancer Step\n          steps.push({\n            icon:'Looks3',\n            description:`Add your CLAIM tokens to the Balancer Pool`,\n            completed:balancerPoolClaimBalance && balancerPoolClaimBalance.gt(0),\n            link:`https://pools.balancer.exchange/#/pool/${this.state.selectedCoverage.tokens['Claim'].balancerPool.address}/`,\n          });\n          // Add Liquidity to Balancer Step\n          steps.push({\n            icon:'Looks4',\n            description:`Add your NOCLAIM tokens to the Balancer Pool`,\n            completed:balancerPoolNoClaimBalance && balancerPoolNoClaimBalance.gt(0),\n            link:`https://pools.balancer.exchange/#/pool/${this.state.selectedCoverage.tokens['NoClaim'].balancerPool.address}/`,\n          });\n        break;\n        case 'NoClaim':\n          if (this.state.swapInfo){\n            collateralAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.amount,this.state.tokenConfig.decimals);\n            tokenAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.tokenAmountOut,contractInfo.decimals);\n            infoBox = {\n              icon:'VerifiedUser',\n              text:`By providing <strong>${collateralAmount.toFixed(4)} ${this.state.selectedToken}</strong> your NOCLAIM tokens will pay out <strong>~${tokenAmount.toFixed(4)} ${this.state.selectedToken}</strong> if there is no successful attack on the protocol by the expiry date.`\n            };\n          } else {\n            infoBox = {\n              icon:'VerifiedUser',\n              text:`NOCLAIM tokens will pay out 1 ${this.state.selectedToken} for each token you hold if there is no successful attack on the protocol by the expiry date.`\n            };\n          }\n\n          // Add Yearly cost and read more\n          infoBox.text+=`${apy ? `<br /><span style=\"color:${this.props.theme.colors.primary}\">The yearly return of buying and holding NOCLAIM until expiration is <strong>${apy.toFixed(2)}%</strong>` : null}</span><br /><small><a href=\"https://docs.coverprotocol.com/product/claims-guidelines\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a> to understand how claims are assessed and paid out by Cover Protocol.</small>`;\n\n          // Add Approve Step\n          approveDescription = `Approve the NOCLAIM Balancer Pool contract`;\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:noClaimTokenBalance && noClaimTokenBalance.gt(0),\n            description:`Buy NOCLAIM tokens with your ${this.state.selectedToken}`\n          });\n        break;\n        case 'Claim':\n          if (this.state.swapInfo){\n            collateralAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.amount,this.state.tokenConfig.decimals);\n            tokenAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.tokenAmountOut,contractInfo.decimals);\n            const portfolioCoveredPerc = 32;//this.state.portfolio && this.state.portfolio.totalBalance.gt(0) ? tokenAmount.div(this.state.portfolio.totalBalance).times(100) : null;\n            infoBox = {\n              icon:'BeachAccess',\n              text:`By providing <strong>${collateralAmount.toFixed(4)} ${this.state.selectedToken}</strong> your CLAIM tokens will pay out <strong>~${tokenAmount.toFixed(4)} ${this.state.selectedToken}</strong>${ portfolioCoveredPerc ? ` <strong>(${portfolioCoveredPerc}% of your portfolio)</strong>` : '' } in the event that there is a successful attack on the protocol before the expiry date.`\n            };\n          } else {\n            infoBox = {\n              icon:'BeachAccess',\n              text:`CLAIM tokens will pay out 1 ${this.state.selectedToken} for each token you hold in the event that there is a successful attack on the protocol before the expiry date.`\n            };\n          }\n\n          infoBox.text+=`${apy ? `<br /><span style=\"color:${this.props.theme.colors.primary}\">The yearly cost of buying and holding CLAIM until expiration is <strong>${apy.toFixed(2)}%` : null}</strong></span><br /><small><a href=\"https://docs.coverprotocol.com/product/claims-guidelines\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a> to understand how claims are assessed and paid out by Cover Protocol.</small>`;\n\n          // Add Approve Step\n          approveDescription = `Approve the CLAIM Balancer Pool contract`;\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:claimTokenBalance && claimTokenBalance.gt(0),\n            description:`Buy CLAIM tokens with your ${this.state.selectedToken}`\n          });\n        break;\n        default:\n        break;\n      }\n\n      const transactionSucceeded = false;\n      this.setState({\n        apy,\n        steps,\n        infoBox,\n        swapFee,\n        covTokens,\n        tokenPrice,\n        contractInfo,\n        approveDescription,\n        transactionSucceeded\n      });\n    }\n  }\n\n  async loadData(){\n    const currTime = parseInt(Date.now()/1000);\n    const activeCoverages = this.props.toolProps.coverages.reduce( (output,c,index) => {\n      if (c.expirationTimestamp>currTime){\n        const expirationDate = this.functionsUtil.strToMoment(c.expirationTimestamp*1000).utc().format('YYYY-MM-DD HH:mm:ss')+' UTC';\n        const icon = `images/tokens/${c.collateral}.svg`;\n        const label = `Collateral: ${c.collateral} - Expiration: ${expirationDate}`;\n        output.push({\n          icon,\n          label,\n          data:c,\n          value:expirationDate,\n        });\n      }\n      return output;\n    },[]);\n\n    const portfolio = await this.functionsUtil.getAccountPortfolio();\n    const defaultCoverage = activeCoverages.length ? activeCoverages[0] : null;\n\n    this.setState({\n      portfolio,\n      defaultCoverage,\n      activeCoverages\n    },() => {\n      if (defaultCoverage){\n        this.selectCoverage(defaultCoverage);\n      }\n    });\n  }\n\n  async selectCoverage(coverage){\n    const selectedCoverage = coverage.data;\n    this.setState({\n      selectedCoverage\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  render() {\n\n    const isMint = this.state.selectedAction === 'Mint';\n    const isBuyClaim = this.state.selectedAction === 'Claim';\n    const isBuyNoClaim = this.state.selectedAction === 'NoClaim';\n    const txAction = isMint ? this.state.selectedAction : `Buy ${this.state.selectedAction}`;\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.activeCoverages ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading active coverages...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.activeCoverages.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active coverages.\n                  </Text>\n                ) : (\n                  <Flex\n                    width={[1,0.46]}\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Box\n                      width={1}\n                    >\n                      <Text mb={1}>\n                        Select Coverage:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        name={'strategy'}\n                        isSearchable={false}\n                        options={this.state.activeCoverages}\n                        CustomOptionValue={CustomOptionValue}\n                        defaultValue={this.state.defaultCoverage}\n                        onChange={this.selectCoverage.bind(this)}\n                        CustomValueContainer={CustomValueContainer}\n                      />\n                    </Box>\n                    {\n                      this.state.selectedCoverage && (\n                        <Box\n                          mt={3}\n                          width={1}\n                        >\n                          <Text mb={1}>\n                            Select Action:\n                          </Text>\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={['column','row']}\n                            justifyContent={'space-between'}\n                          >\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isMint ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Add Liquidity'}\n                              imageSrc={'images/mint.svg'}\n                              isMobile={this.props.isMobile}\n                              subcaption={'mint CLAIM and NOCLAIM\\nand stake in Balancer Pool'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isMint}\n                              handleClick={ e => this.setAction('Mint') }\n                            />\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isBuyClaim ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Buy CLAIM'}\n                              imageSrc={'images/claim.svg'}\n                              isMobile={this.props.isMobile}\n                              subcaption={'protect in case of attacks\\nagainst the Idle protocol'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isBuyClaim}\n                              handleClick={ e => this.setAction('Claim') }\n                            />\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isBuyNoClaim ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Buy NOCLAIM'}\n                              isMobile={this.props.isMobile}\n                              imageSrc={'images/noclaim.svg'}\n                              subcaption={'get rewarded if no attack\\noccurs on the Idle protocol'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isBuyNoClaim}\n                              handleClick={ e => this.setAction('NoClaim') }\n                            />\n                          </Flex>\n                          {\n                            this.state.tokenConfig && this.state.tokenBalance && this.state.contractInfo &&\n                              <Box\n                                mt={2}\n                                mb={3}\n                                width={1}\n                              >\n                                <SendTxWithBalance\n                                  {...this.props}\n                                  action={txAction}\n                                  error={this.state.error}\n                                  steps={this.state.steps}\n                                  infoBox={this.state.infoBox}\n                                  tokenConfig={this.state.tokenConfig}\n                                  tokenBalance={this.state.tokenBalance}\n                                  contractInfo={this.state.contractInfo}\n                                  callback={this.transactionSucceeded.bind(this)}\n                                  contractApproved={this.contractApproved.bind(this)}\n                                  approveDescription={this.state.approveDescription}\n                                  balanceSelectorInfo={this.state.balanceSelectorInfo}\n                                  changeInputCallback={this.changeInputCallback.bind(this)}\n                                  getTransactionParams={this.getTransactionParams.bind(this)}\n                                >\n                                  <BuyModal\n                                    {...this.props}\n                                    showInline={true}\n                                    availableMethods={[]}\n                                    buyToken={this.state.selectedToken}\n                                  />\n                                </SendTxWithBalance>\n                              </Box>\n                          }\n                        </Box>\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default CoverProtocol;\n","import Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass TokenMigration extends Component {\n\n  state = {\n    tokenConfig:null,\n    selectedFromToken:null,\n    selectedDestToken:null,\n    migrationSucceeded:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async loadTokens(){\n    const selectedFromToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    if (selectedFromToken && selectedFromToken !== this.props.urlParams.param2){\n      this.changeFromToken(selectedFromToken);\n    }\n\n    this.selectFromToken(selectedFromToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      await this.loadTokens();\n    }\n  }\n\n  changeFromToken = (selectedToken) => {\n    const convertTool = this.functionsUtil.getGlobalConfig(['tools','tokenMigration']);\n    this.props.goToSection(`tools/${convertTool.route}/${selectedToken}`);\n  }\n\n  selectFromToken = async (selectedFromToken) => {\n    const tokenInfo = this.props.toolProps.availableTokens[selectedFromToken];\n\n    let selectedDestToken = null;\n    const availableDestinationTokens = {};\n\n    const availableStrategies = typeof this.props.toolProps.availableStrategies !== 'undefined' ? this.props.toolProps.availableStrategies : Object.keys(this.props.availableStrategies);\n\n    availableStrategies.forEach( strategy => {\n      const strategyAvailableTokens =  this.props.availableStrategies[strategy];\n      const baseTokenConfig = strategyAvailableTokens[tokenInfo.baseToken];\n      if (!baseTokenConfig){\n        return false;\n      }\n\n      // Remove icon\n      delete baseTokenConfig.icon;\n\n      if (!selectedDestToken){\n        selectedDestToken = baseTokenConfig.idle.token;\n      }\n      baseTokenConfig.strategy = strategy;\n      baseTokenConfig.baseToken = tokenInfo.baseToken;\n      availableDestinationTokens[baseTokenConfig.idle.token] = baseTokenConfig;\n    });\n\n    this.setState({\n      tokenConfig:null,\n      selectedFromToken,\n      availableDestinationTokens\n    },() => {\n      this.selectDestToken(selectedDestToken);\n    });\n  }\n\n  selectDestToken = async (selectedDestToken) => {\n\n    const destTokenConfig = this.state.availableDestinationTokens[selectedDestToken];\n    const tokenInfo = this.props.toolProps.availableTokens[this.state.selectedFromToken];\n\n    const tokenConfig = {\n      token:destTokenConfig.baseToken,\n      address:destTokenConfig.address,\n      decimals:destTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = destTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:tokenInfo.abi,\n      name:tokenInfo.token,\n      token:tokenInfo.token,\n      address:tokenInfo.address\n    };\n    \n    const migrationContract = this.props.toolProps.migrationContract;\n\n    // Add migration function\n    if (tokenInfo.migrateFunction){\n      migrationContract.functions[0].name = tokenInfo.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(destTokenConfig.strategy,tokenInfo.baseToken);\n\n    this.setState({\n      tokenConfig,\n      selectedDestToken\n    });\n  }\n\n  migrationCallback = () => {\n    this.setState({\n      migrationSucceeded:true\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedFromToken){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to migrate:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              id={'token-from'}\n              showBalance={true}\n              isSearchable={true}\n              onChange={this.changeFromToken}\n              selectedToken={this.state.selectedFromToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            this.state.availableDestinationTokens && this.state.selectedDestToken && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text mb={1}>\n                  Select destination asset:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  id={'token-dest'}\n                  showBalance={false}\n                  onChange={this.selectDestToken}\n                  selectedToken={this.state.selectedDestToken}\n                  availableTokens={this.state.availableDestinationTokens}\n                />\n              </Box>\n          }\n          {\n            this.state.selectedFromToken && this.state.selectedDestToken ? (\n              <Migrate\n                {...this.props}\n                showActions={false}\n                getTokenPrice={false}\n                isMigrationTool={true}\n                tokenConfig={this.state.tokenConfig}\n                migrationCallback={this.migrationCallback}\n                selectedToken={this.state.selectedFromToken}\n                selectedStrategy={this.props.selectedStrategy}\n              >\n                {\n                  !this.props.account ? (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'2.3em'}\n                          name={'Input'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={2}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Please connect with your wallet interact with Idle.\n                        </Text>\n                        <RoundButton\n                          buttonProps={{\n                            mt:2,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.props.connectAndValidateAccount}\n                        >\n                          Connect\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      {\n                        this.state.migrationSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              Your {this.state.selectedFromToken} have been successfully migrated!\n                            </Text>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedFromToken} in your wallet.\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n              </Migrate>\n            ) : null\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenMigration;\n","/*\n// batchDeposits[user][batchId] = amount\nmapping (address => mapping (uint256 => uint256)) public batchDeposits;\nmapping (uint256 => uint256) batchTotals; // in idleToken\nmapping (uint256 => uint256) batchRedeemedTotals; // in newIdleToken\n\nuint256 public currBatch;\naddress public idleToken;\naddress public newIdleToken;\naddress public underlying;\n\nfunction deposit() external\nfunction withdraw(uint256 batchId) external\n*/\n\nimport Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Box, Text, Icon, Link } from \"rimble-ui\";\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport TransactionField from '../TransactionField/TransactionField';\n\nclass BatchMigration extends Component {\n\n  state = {\n    canClaim:false,\n    batchTotals:{},\n    canDeposit:true,\n    action:'deposit',\n    batchDeposits:{},\n    tokenConfig:null,\n    processing:{\n      claim:{\n        txHash:null,\n        loading:false\n      },\n    },\n    hasDeposited:false,\n    selectedToken:null,\n    batchCompleted:false,\n    claimSucceeded:false,\n    migrationSucceeded:false,\n    selectedTokenConfig:null,\n    migrationContractApproved:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async checkBatchs(){\n\n    const migrationContractInfo = this.state.selectedTokenConfig.migrationContract;\n\n    await Promise.all([\n      this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi),\n      this.props.initContract(this.state.selectedTokenConfig.name,this.state.selectedTokenConfig.address,this.state.selectedTokenConfig.abi)\n    ]);\n\n    const [currBatchIndex,migrationContractApproved] = await Promise.all([\n      this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'currBatch'),\n      this.functionsUtil.checkTokenApproved(this.state.selectedTokenConfig.name,migrationContractInfo.address,this.props.account)\n    ]);\n\n    const newState = {};\n    const batchDeposits = {};\n    const batchTotals = {};\n    let batchCompleted = false;\n\n    if (currBatchIndex !== null){\n      for (let batchIndex = 0; batchIndex <= currBatchIndex ; batchIndex++){\n        let [batchTotal,batchDeposit] = await Promise.all([\n          this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchTotals',[batchIndex]),\n          this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n        ]);\n        if (batchTotal && batchTotal !== null){\n          batchTotals[batchIndex] = this.functionsUtil.fixTokenDecimals(batchTotal,this.state.selectedTokenConfig.decimals);\n        }\n        if (batchDeposit !== null){\n          batchDeposit = this.functionsUtil.fixTokenDecimals(batchDeposit,this.state.selectedTokenConfig.decimals);\n          if (batchDeposit.gt(0)){\n\n            batchDeposits[batchIndex] = batchDeposit;\n            // Check claimable\n            if (batchIndex < currBatchIndex){\n              batchCompleted = true;\n            }\n          }\n        }\n      }\n\n      newState.batchDeposits = batchDeposits;\n    }\n\n    const hasDeposited = (batchDeposits && Object.keys(batchDeposits).length>0);\n\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    newState.claimSucceeded = false;\n    newState.batchTotals = batchTotals;\n    newState.batchCompleted = batchCompleted;\n    newState.hasDeposited = hasDeposited;\n    newState.canDeposit = !hasDeposited && batchMigrationDepositEnabled;\n    newState.canClaim = batchCompleted || hasDeposited;\n    newState.action = hasDeposited ? 'redeem' : 'deposit';\n    newState.migrationContractApproved = migrationContractApproved;\n\n    this.setState(newState);\n  }\n\n  async loadTokens(){\n    const selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    this.selectFromToken(selectedToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      await this.loadTokens();\n    }\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      this.checkBatchs();\n    }\n  }\n\n  selectFromToken = async (selectedToken) => {\n\n    const selectedTokenConfig = this.props.toolProps.availableTokens[selectedToken];\n    const strategyAvailableTokens =  this.props.availableStrategies[selectedTokenConfig.strategy];\n\n    const baseTokenConfig = strategyAvailableTokens[selectedTokenConfig.baseToken];\n\n    const tokenConfig = {\n      token:selectedTokenConfig.baseToken,\n      address:selectedTokenConfig.address,\n      decimals:selectedTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = baseTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:selectedTokenConfig.abi,\n      name:selectedTokenConfig.name,\n      token:selectedTokenConfig.token,\n      address:selectedTokenConfig.address\n    };\n    \n    const migrationContract = selectedTokenConfig.migrationContract;\n\n    // Add migration function\n    if (baseTokenConfig.migrateFunction){\n      migrationContract.functions[0].name = baseTokenConfig.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(selectedTokenConfig.strategy,baseTokenConfig.baseToken);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedTokenConfig\n    });\n  }\n\n  claim = async () => {\n    if (!this.state.batchCompleted){\n      return null;\n    }\n\n    const loading = true;\n    const claimableValue = 0;\n    const batchId = Object.keys(this.state.batchDeposits)[0];\n\n    const callbackClaim = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: `BatchMigration`,\n        eventAction: 'Claim',\n        eventLabel: this.props.selectedToken,\n        eventValue: parseInt(claimableValue)\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        claimSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          claim:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptClaim = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          claim:{\n            ...prevState.processing.claim,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'withdraw', [batchId], null, callbackClaim, callbackReceiptClaim);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        claim:{\n          ...prevState.processing.claim,\n          loading\n        }\n      }\n    }));\n  }\n\n  setAction = (action) => {\n    if (action !== null && ['deposit','redeem'].includes(action.toLowerCase())){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  migrationCallback = () => {\n    this.checkBatchs();\n    this.setState({\n      migrationSucceeded:true\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedToken){\n      return null;\n    }\n\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    const batchId = this.state.batchDeposits && Object.keys(this.state.batchDeposits).length>0 ? Object.keys(this.state.batchDeposits)[0] : null;\n    const batchDeposit = this.state.batchDeposits && Object.values(this.state.batchDeposits).length>0 ? Object.values(this.state.batchDeposits)[0] : null;\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to migrate:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              id={'token-from'}\n              showBalance={true}\n              isSearchable={false}\n              onChange={this.selectFromToken}\n              selectedToken={this.state.selectedToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            (this.state.canDeposit || this.state.canClaim) && \n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  px:4,\n                  mt:3,\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                > \n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.migrationContractApproved ? 'CheckBox' : 'LooksOne'}\n                      color={ this.state.migrationContractApproved ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Approve the batch migration contract\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.hasDeposited ? 'CheckBox' : 'LooksTwo'}\n                      color={ this.state.hasDeposited ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Deposit your {this.state.selectedTokenConfig.token}\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.batchCompleted ? 'CheckBox' : 'Looks3'}\n                      color={ this.state.batchCompleted ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Wait for the batch to be migrated\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.claimSucceeded ? 'CheckBox' : 'Looks4'}\n                      color={ this.state.claimSucceeded ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Claim your {this.state.selectedToken}V4\n                    </Text>\n                  </Flex>\n                </Flex>\n              </DashboardCard>\n          }\n          {\n            this.state.selectedToken ? (\n              <Box width={1}>\n                {\n                  this.state.migrationContractApproved && (this.state.canDeposit || this.state.canClaim) && \n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text mb={2}>\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canDeposit ? this.setAction('deposit') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canDeposit }\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canClaim ? this.setAction('redeem') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canClaim }\n                          isActive={ this.state.action === 'redeem' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Claim\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                }\n                {\n                  this.state.action === 'deposit' ? \n                    batchMigrationDepositEnabled ? (\n                      <Migrate\n                        {...this.props}\n                        showActions={false}\n                        migrationParams={[]}\n                        getTokenPrice={false}\n                        isMigrationTool={true}\n                        migrationIcon={'FileDownload'}\n                        waitText={'Deposit estimated in'}\n                        tokenConfig={this.state.tokenConfig}\n                        selectedToken={this.state.selectedToken}\n                        callbackApprove={this.checkBatchs.bind(this)}\n                        selectedStrategy={this.props.selectedStrategy}\n                        migrationCallback={this.migrationCallback.bind(this)}\n                        migrationText={`Deposit your ${this.state.selectedTokenConfig.token} and wait until it is converted to the new ${this.state.tokenConfig.idle.token}.`}\n                      >\n                        {\n                          !this.props.account ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mt:3\n                              }}\n                            >\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  size={'2.3em'}\n                                  name={'Input'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mt={2}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  Please connect with your wallet interact with Idle.\n                                </Text>\n                                <RoundButton\n                                  buttonProps={{\n                                    mt:2,\n                                    width:[1,1/2]\n                                  }}\n                                  handleClick={this.props.connectAndValidateAccount}\n                                >\n                                  Connect\n                                </RoundButton>\n                              </Flex>\n                            </DashboardCard>\n                          ) : (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                my:3\n                              }}\n                            >\n                              {\n                                batchId ? (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      color={'cellText'}\n                                      name={'HourglassEmpty'}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      {\n                                        this.state.batchCompleted ? (\n                                          <Text.span\n                                            color={'cellText'}\n                                          >The batch has been migrated, click on the \"Claim\" button to withdraw your tokens.</Text.span>\n                                        ) : (\n                                          <Text.span\n                                            color={'cellText'}\n                                          >\n                                            You have successfully deposited {batchDeposit.toFixed(4)} {this.state.selectedTokenConfig.token}, please wait until the batch is migrated to claim your tokens.\n                                            {\n                                              typeof this.state.batchTotals[batchId] !== 'undefined' && \n                                              <Text.span\n                                                color={'cellText'}\n                                              >\n                                                <br />Batch pool: {this.state.batchTotals[batchId].toFixed(4)} {this.state.selectedTokenConfig.token}\n                                              </Text.span>\n                                            }\n                                          </Text.span>\n                                        )\n                                      }\n                                    </Text>\n                                  </Flex>\n                                ) : this.state.migrationSucceeded ? (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      name={'DoneAll'}\n                                      color={this.props.theme.colors.transactions.status.completed}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      You have successfully deposited your {this.state.selectedTokenConfig.token} into the batch!\n                                    </Text>\n                                  </Flex>\n                                ) : (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      name={'MoneyOff'}\n                                      color={'cellText'}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      You don't have any {this.state.selectedTokenConfig.token} in your wallet.\n                                    </Text>\n                                  </Flex>\n                                )\n                              }\n                            </DashboardCard>\n                          )\n                        }\n                      </Migrate>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          my:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Text\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            Batch migration is disabled for this asset.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        my:3\n                      }}\n                    >\n                      {\n                        this.state.processing.claim.loading ? (\n                          <Flex\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar web3={this.props.web3} waitText={`Claim estimated in`} endMessage={`Finalizing approve request...`} hash={this.state.processing.claim.txHash} />\n                          </Flex>\n                        ) : this.state.claimSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You have successfully withdrawn your {this.state.selectedToken} V4!\n                            </Text>\n                            <Link\n                              mt={2}\n                              textAlign={'center'}\n                              hoverColor={'primary'}\n                              onClick={ e => this.props.goToSection(this.state.selectedTokenConfig.strategy+'/'+this.state.selectedTokenConfig.baseToken) }\n                            >\n                              Go to the Dashboard\n                            </Link>\n                          </Flex>\n                        ) : this.state.batchCompleted ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              color={'cellText'}\n                              name={'FileUpload'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The batch has been migrated!<br />You can now claim your {this.state.tokenConfig.idle.token} V4.\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                              <RoundButton\n                                buttonProps={{\n                                  mt:3,\n                                  width:[1,0.5],\n                                  mainColor:this.props.theme.colors.redeem\n                                }}\n                                handleClick={ e => this.claim() }\n                              >\n                                Claim\n                              </RoundButton>\n                            </Flex>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              color={'cellText'}\n                              name={'HourglassEmpty'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              <Text.span\n                                color={'cellText'}\n                              >\n                                You have successfully deposited {batchDeposit.toFixed(4)} {this.state.selectedTokenConfig.token}, please wait until the batch is migrated to claim your V4 tokens.\n                                {\n                                  typeof this.state.batchTotals[batchId] !== 'undefined' && \n                                  <Text.span\n                                    color={'cellText'}\n                                  >\n                                    <br />Batch pool: {this.state.batchTotals[batchId].toFixed(4)} {this.state.selectedTokenConfig.token}\n                                  </Text.span>\n                                }\n                              </Text.span>\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n              </Box>\n            ) : null\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default BatchMigration;","import Staking from '../Staking/Staking';\nimport IDLE from '../contracts/IDLE.json';\nimport WETH from '../abis/tokens/WETH.json';\nimport COMP from '../abis/compound/COMP.json';\nimport TokenSwap from '../TokenSwap/TokenSwap';\nimport yDAIv3 from '../abis/iearn/yDAIv3.json';\nimport yUSDCv3 from '../abis/iearn/yUSDCv3.json';\nimport yUSDTv3 from '../abis/iearn/yUSDTv3.json';\nimport ySUSDv3 from '../abis/iearn/ySUSDv3.json';\nimport yTUSDv3 from '../abis/iearn/yTUSDv3.json';\nimport Timelock from '../contracts/Timelock.json';\nimport CurveZap from '../abis/curve/CurveZap.json';\nimport CovToken from '../abis/cover/CovToken.json';\nimport LpStaking from '../contracts/LpStaking.json';\n// import CurveSwap from '../abis/curve/CurveSwap.json';\nimport CurvePool from '../abis/curve/CurvePool.json';\nimport NexusMutual from '../NexusMutual/NexusMutual';\nimport CoverMint from '../abis/cover/CoverMint.json';\nimport LockedIDLE from '../contracts/LockedIDLE.json';\nimport { Web3Versions } from '@terminal-packages/sdk';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TokenWrapper from '../TokenWrapper/TokenWrapper';\nimport PriceOracle from '../contracts/PriceOracle.json';\nimport FeeTreasury from '../contracts/FeeTreasury.json';\nimport IdleTokenV2 from '../contracts/IdleTokenV2.json';\nimport StrategyPage from '../StrategyPage/StrategyPage';\nimport BuyModal from '../utilities/components/BuyModal';\nimport IdleTokenV3 from '../contracts/IdleTokenV3.json';\nimport BatchDeposit from '../BatchDeposit/BatchDeposit';\nimport EarlyRewards from '../contracts/EarlyRewards.json';\nimport CoverProtocol from '../CoverProtocol/CoverProtocol';\nimport CurveDeposit from '../abis/curve/CurveDeposit.json';\nimport VesterFactory from '../contracts/VesterFactory.json';\nimport GovernorAlpha from '../contracts/GovernorAlpha.json';\nimport EcosystemFund from '../contracts/EcosystemFund.json';\nimport Comptroller from '../abis/compound/Comptroller.json';\nimport erc20Forwarder from '../contracts/erc20Forwarder.json';\nimport BalancerPool from '../abis/balancer/BalancerPool.json';\nimport IdleController from '../contracts/IdleController.json';\nimport TokenMigration from '../TokenMigration/TokenMigration';\nimport BatchMigration from '../BatchMigration/BatchMigration';\nimport IdleBatchedMint from '../contracts/IdleBatchedMint.json';\nimport { RampInstantSDK } from '@ramp-network/ramp-instant-sdk';\nimport IdleProxyMinter from '../contracts/IdleProxyMinter.json';\nimport IdleRebalancerV3 from '../contracts/IdleRebalancerV3.json';\nimport LiquidityGaugeV2 from '../abis/curve/LiquidityGaugeV2.json';\nimport IdleBatchConverter from '../contracts/IdleBatchConverter.json';\nimport UniswapV2Router02 from '../abis/uniswap/UniswapV2Router02.json';\nimport IdleDepositForwarder from '../contracts/IdleDepositForwarder.json';\nimport SushiLiquidityPool from '../abis/sushiswap/SushiLiquidityPool.json';\nimport BalancerExchangeProxy from '../abis/balancer/BalancerExchangeProxy.json';\nimport IdleConverterPersonalSignV4 from '../contracts/IdleConverterPersonalSignV4.json';\n\nconst env = process.env;\n\nconst globalConfigs = {\n  appName: 'Idle',\n  version: 'v5.6',\n  baseToken: 'ETH',\n  baseURL: 'https://idle.finance',\n  forumURL:'https://gov.idle.finance',\n  theme:{\n    darkModeEnabled:true\n  },\n  betaURL: 'https://beta.idle.finance',\n  countries:{\n    'USA':'United States of America',\n    'GBR':'United Kingdom',\n    'AUS':'Australia',\n    'BRA':'Brazil',\n    'CHN':'China',\n    'CAN':'Canada',\n    'EUR':'Europe',\n    'HKG':'Hong Kong',\n    'IND':'India',\n    'MEX':'Mexico',\n    'RUS':'Russia',\n    'ZAF':'South Africa',\n    'KOR':'South Korea'\n  },\n  logs:{ // Enable logs levels\n    errorsEnabled:false,\n    messagesEnabled:false,\n  },\n  connectors:{ // Connectors props\n    metamask:{\n      enabled:true,\n      subcaption:'Browser extension'\n    },\n    opera:{\n      enabled:true,\n      subcaption:'Opera injected wallet'\n    },\n    dapper:{\n      enabled:true,\n      icon:'dapper.png',\n      subcaption:'Browser extension',\n    },\n    coinbase:{\n      enabled:true,\n      icon:'coinbase.png',\n      subcaption:'Connect with Coinbase wallet'\n    },\n    trustwallet:{\n      enabled:true,\n      subcaption:'Connect with Trust Wallet'\n    },\n    walletconnect:{\n      enabled:true,\n      iconModal:'walletconnect.png',\n      subcaption:'Connect with QR code'\n    },\n    walletlink:{\n      enabled:true,\n      icon:'coinbase.png',\n      name:'Coinbase Wallet',\n      subcaption:'Connect with QR code'\n    },\n    fortmatic:{\n      enabled:true,\n      subcaption:'Login with phone-number'\n    },\n    portis:{\n      enabled:true,\n      subcaption:'Login with e-mail'\n    },\n    authereum:{\n      enabled:true,\n      subcaption:'Cross-device wallet'\n    },\n    torus:{\n      enabled:true,\n      icon:'torus.png',\n      subcaption:'One-Click login for Web 3.0'\n    },\n    trezor:{\n      enabled:true,\n      subcaption:'Hardware wallet'\n    },\n    ledger:{\n      enabled:true,\n      subcaption:'Hardware wallet'\n    },\n    custom:{\n      enabled:true,\n      icon:'tokens/ETH.svg',\n      subcaption:'Custom address'\n    }\n  },\n  newsletterSubscription:{\n    endpoint:'https://dev.lapisgroup.it/idle/newsletter.php'\n  },\n  messages:{\n    scoreShort:'Protocol Risk Score',\n    apyShort:'Annual Percentage Yield',\n    tokenPrice:'The token price is calculated using Uniswap spot prices.',\n    cheapRedeem:'Amount of unlent funds available for low gas fees redeem',\n    curveBonusSlippage:'Slippage or bonus depending on if the coin is low or high in the Curve Pool',\n    distributionSpeed:'The distribution indicates the amount of tokens distributed for the entire pool.',\n    directMint:'Pay an additional gas fee to rebalance the pool and help all users gain an additional APR',\n    performanceFee:'This fee is charged on positive returns generated by Idle including accrued gov tokens except IDLE',\n    govTokenApr:'Governance Token APR is calculated using the spot price from Uniswap and the current distribution speed for the specific pool.',\n    userDistributionSpeed:'The distribution indicates the amount of tokens distributed for your account based on your current pool share.',\n    govTokenRedeemableBalance:'The redeemable balance is re-calculated on every interaction with the smart-contract so, the shown balance may be lower than the real one.',\n    riskScoreShort:'It\\'s a single, consistently, comparable value for measuring protocol risk, based on factors including smart contract risk, collateralization and liquidity.',\n    batchDepositExecutionSchedule:'Batches are executed twice a week, usually on Sunday and Wednesday, and only when the pool size reaches at least 20,000$. The time of each execution will vary depending on the gas price of the Ethereum network.',\n    apyLong:'APY is based on (I) the current yield advertised by the underlying protocol, (II) the current distribution rate of governance tokens provided by underlying lending protocols (III) the current estimated price of governance tokens from Uniswap spot prices. (IV) IDLE token distribution is referred to the entire pool.',\n    yieldFarming:'Strategies in Idle now will be able to support and distribute a vast range of yield opportunities across multiple protocols. Users will be able to receive their equivalent share of governance token that the protocol is receiving while allocating liquidity to yield farming opportunities. <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://idlefinance.medium.com/idle-yield-farming-upgrade-18e4bc483c8f\">Read more here</a>.',\n    riskScore:`It's a single, consistently, comparable value for measuring protocol risk, based on factors including smart contract risk, collateralization and liquidity.<br /><br />The model outputs a 0-10 score, where <strong>0 is the most risky and 10 is the most safe.</strong> Visit <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://defiscore.io/overview\">https://defiscore.io/overview</a> for further information.`,\n    curveInstructions:`<strong>Depositing into the pool:</strong><br />By depositing your funds into the Curve Pool you may incur in slippage or bonus depending on if the coin is low or high in the pool.<br /><br /><strong>Withdrawing share from the pool:</strong><br />When you redeem your tokens previously deposited in the Curve Pool you get back an uneven amounts of tokens, that can give slippage or bonus depending on if the coin is low or high in the pool.`\n  },\n  analytics:{\n    google:{\n      events:{\n        enabled:true, // Enable Google Analytics events\n        debugEnabled:false, // Enable sending for test environments\n        addPostfixForTestnet:true // Append testnet to eventCategory\n      }\n    }\n  },\n  modals:{ // Enable modals\n    first_deposit_referral:false, // Referral share modal\n    first_deposit_share:true, // First deposit share modal\n    migrate:{\n      enabled:true\n    },\n    welcome:{ // Welcome modal\n      enabled:true,\n      frequency:604800 // One week\n    }\n  },\n  dashboard:{\n    baseRoute:'/dashboard',\n    theme:{\n      mode:'light',\n      darkModeEnabled:true\n    },\n  },\n  governance:{\n    test:false,\n    enabled:true,\n    startBlock:11333729,\n    baseRoute:'/governance',\n    props:{\n      tokenName:'IDLE',\n      availableContracts:{\n        IDLE,\n        FeeTreasury,\n        PriceOracle,\n        GovernorAlpha,\n        EcosystemFund,\n        IdleController\n      }\n    },\n    contracts:{\n      delegates:'IDLE',\n      governance:'GovernorAlpha',\n    }\n  },\n  curve:{\n    enabled:false,\n    params:{\n      n_coins:3,\n      label:'Curve',\n      route:'/dashboard/curve',\n      image:'images/protocols/curve.svg',\n      imageInactive:'images/protocols/curve-off.svg',\n    },\n    rates:{\n      path:['apy','day','idle'],\n      endpoint:'https://www.curve.fi/raw-stats/apys.json'\n    },\n    poolContract:{\n      decimals:18,\n      abi:CurvePool,\n      name:'idleDAI+idleUSDC+idleUSDT',\n      token:'idleDAI+idleUSDC+idleUSDT',\n      address:'0x09f4b84a87fc81fc84220fd7287b613b8a9d4c05'\n    },\n    depositContract:{\n      abi:CurveDeposit,\n      name:'idleCurveDeposit',\n      address:'0x83f252f036761a1e3d10daca8e16d7b21e3744d7'\n    },\n    gaugeContract:{\n      abi:LiquidityGaugeV2,\n      name:'LiquidityGaugeV2',\n      address:'0xd69ac8d9D25e99446171B5D0B3E4234dAd294890'\n    },\n    zapContract:{\n      abi:CurveZap,\n      name:'idleCurveZap',\n      address:'0x456974df1042ba7a46fd49512a8778ac3b840a21'\n    },\n    migrationContract:{\n      abi:CurveDeposit,\n      name:'idleCurveDeposit',\n      address:'0x83f252f036761a1e3d10daca8e16d7b21e3744d7',\n      functions:[\n        {\n          label:'Deposit',\n          name:'add_liquidity'\n        },\n      ]\n    },\n    availableTokens:{\n      idleDAIYield:{\n        decimals:18,\n        enabled:true,\n        baseToken:'DAI',\n        token:'idleDAIYield',\n        address:'0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        migrationParams:{\n          n_coins:3,\n          coinIndex:0\n        },\n      },\n      idleUSDCYield:{\n        decimals:18,\n        enabled:true,\n        baseToken:'USDC',\n        token:'idleUSDCYield',\n        address:'0x5274891bEC421B39D23760c04A6755eCB444797C',\n        migrationParams:{\n          n_coins:3,\n          coinIndex:1\n        },\n      },\n      idleUSDTYield:{\n        decimals:18,\n        enabled:true,\n        baseToken:'USDT',\n        token:'idleUSDTYield',\n        address:'0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        migrationParams:{\n          n_coins:3,\n          coinIndex:2\n        },\n      },\n    }\n  },\n  permit:{\n    DAI:{\n      version:1,\n      EIPVersion:null,\n      nonceMethod:'nonces',\n      name:'Dai Stablecoin',\n      type:[\n        { name: \"holder\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"expiry\", type: \"uint256\" },\n        { name: \"allowed\", type: \"bool\" },\n      ]\n    },\n    USDC:{\n      version:2,\n      name:'USD Coin',\n      EIPVersion:2612,\n      nonceMethod:'nonces',\n      type:[\n        { name: \"owner\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"value\", type: \"uint256\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"deadline\", type: \"uint256\" },\n      ]\n    },\n    SLP:{\n      version:1,\n      EIPVersion:2612,\n      nonceMethod:'nonces',\n      name:'SushiSwap LP Token',\n      type:[\n        { name: \"owner\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"value\", type: \"uint256\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"deadline\", type: \"uint256\" },\n      ]\n    }\n  },\n  govTokens:{\n    IDLE:{\n      abi:IDLE,\n      decimals:18,\n      token:'IDLE',\n      enabled:true,\n      showAUM:false, // Include IDLE balance in AUM\n      showAPR:false, // Include IDLE Apr\n      protocol:'idle',\n      showPrice:false, // Show price in Yield Farming section\n      disabledTokens:[], // Disable IDLE distribution for idleToken\n      showBalance:false, // Include IDLE balance in Portfolio Donut\n      aprTooltipMode:false,\n      distributionFrequency:'day', // Multiply distribution per block\n      color:'hsl(162, 100%, 41%)',\n      icon:'images/tokens/IDLE.png',\n      address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e' // MAIN\n      // address:'0xAB6Bdb5CCF38ECDa7A92d04E86f7c53Eb72833dF', // KOVAN\n      // address:'0xa85233C63b9Ee964Add6F2cffe00Fd84eb32338f' // Fork\n    },\n    COMP:{\n      abi:COMP,\n      decimals:18,\n      token:'COMP',\n      enabled:true,\n      showAUM:true, // Include IDLE balance in AUM\n      showAPR:true, // Include COMP Apr\n      showPrice:true,\n      showBalance:true, // Include COMP balance in Portfolio Donut\n      disabledTokens:[],\n      protocol:'compound',\n      aprTooltipMode:false,\n      distributionFrequency:'day',\n      color:'hsl(162, 100%, 41%)',\n      address:'0xc00e94cb662c3520282e6f5717214004a7f26888', // MAIN\n      // address:'0x61460874a7196d6a22d1ee4922473664b3e95270' // KOVAN\n    }\n  },\n  contracts:{\n    LockedIDLE:{\n      abi:LockedIDLE,\n      address:'0xF241a0151841AE2E6ea750D50C5794b5EDC31D99'\n    },\n    FeeTreasury:{\n      abi:FeeTreasury,\n      address:'0x69a62c24f16d4914a48919613e8ee330641bcb94' // MAIN\n    },\n    PriceOracle:{\n      abi:PriceOracle,\n      address:'0x972A64d108e250dF98dbeac8170678501f5EF181' // MAIN\n      // address:'0xCab5760688db837Bb453FE1DFBC5eDeE6fa8F0FF' // KOVAN\n    },\n    Timelock:{\n      abi:Timelock,\n      address:'0xD6dABBc2b275114a2366555d6C481EF08FDC2556' // MAIN\n      // address:'0xfD88D7E737a06Aa9c62B950C1cB5eE63DA379AFd' // KOVAN\n    },\n    EcosystemFund:{\n      abi:EcosystemFund,\n      address:'0xb0aA1f98523Ec15932dd5fAAC5d86e57115571C7' // MAIN\n      // address:'0x125d3D6A8e546BD13802c309429CBB4db5737d57' // KOVAN\n    },\n    VesterFactory:{\n      abi:VesterFactory,\n      address:'0xbF875f2C6e4Cc1688dfe4ECf79583193B6089972' // MAIN\n      // address:'0x9b52f91578c8AfA8e2DF07d4D7726bB6b73Ec1FE' // KOVAN\n    },\n    IdleController:{\n      abi:IdleController,\n      address:'0x275DA8e61ea8E02d51EDd8d0DC5c0E62b4CDB0BE' // MAIN\n      // address:'0x8Ad5F0644b17208c81bA5BDBe689c9bcc7143d87' // KOVAN\n    },\n    EarlyRewards:{\n        abi:EarlyRewards,\n        address:'0xa1F71ED24ABA6c8Da8ca8C046bBc9804625d88Fc' // MAIN\n        // address:'0x07A94A60B54c6b2Da19e23D6E9123180Bf92ED40' // KOVAN\n    },\n    GovernorAlpha:{\n      abi:GovernorAlpha,\n      address:'0x2256b25CFC8E35c3135664FD03E77595042fe31B' // MAIN\n      // address:'0x782cB1dbd0bD4df95c2497819be3984EeA5c2c25' // KOVAN\n    },\n    Comptroller:{\n      abi:Comptroller,\n      address:'0x3d9819210a31b4961b30ef54be2aed79b9c9cd3b', // Main\n      // address:'0x5eae89dc1c671724a672ff0630122ee834098657' // Kovan\n    },\n    UniswapRouter:{\n      abi:UniswapV2Router02,\n      address:'0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D'\n    },\n    BalancerExchangeProxy:{\n      abi:BalancerExchangeProxy,\n      address:'0x3E66B66Fd1d0b02fDa6C811Da9E0547970DB2f21'\n    }\n  },\n  tokens:{\n    DAI:{\n      zeroExInstant:{\n        orderSource: 'https://api.0x.org/sra/',\n        assetData:'0xf47261b00000000000000000000000006b175474e89094c44da98b954eedeac495271d0f',\n        affiliateInfo: {\n            feeRecipient: '0x4215606a720477178AdFCd5A59775C63138711e8',\n            feePercentage: 0.0025\n        },\n      },\n    },\n    USDC:{\n      zeroExInstant:{\n        orderSource: 'https://api.0x.org/sra/',\n        assetData:'0xf47261b0000000000000000000000000a0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        affiliateInfo: {\n            feeRecipient: '0x4215606a720477178AdFCd5A59775C63138711e8',\n            feePercentage: 0.0025\n        },\n      },\n    },\n  },\n  strategies:{\n    best:{\n      token:'DAI',\n      color:'#f32121',\n      comingSoon:false,\n      addGovTokens:true,\n      titlePostfix:null,\n      title:'Best-Yield',\n      iconName:'Whatshot',\n      govTokensEnabled:true,\n      component: StrategyPage,\n      chartColor:'hsl(40,95%,59%)',\n      icon:'images/strategies/best-on.svg',\n      iconInactive:'images/strategies/best-off.svg',\n      iconInactiveDark:'images/strategies/best-white.svg',\n      desc:'Maximize your returns across DeFi protocols',\n      descLong:'The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols. Idle’s monitoring system automatically triggers a rebalance if it spots a better-performing allocation: this includes taking account of the total liquidity within the pool, incorporating underlying protocol rate functions and levels of supply and demand. As a user, you will end up with an higher return without constantly checking rates and burning gas on every transfer. Unlock your funds from a single protocol performance with this strategy.',\n      descShort:'The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols.'\n    },\n    risk:{\n      token:'DAI',\n      color:'#2196F3',\n      comingSoon:false,\n      titlePostfix:null,\n      addGovTokens:true,\n      iconName:'Security',\n      title:'Risk-Adjusted',\n      govTokensEnabled:true,\n      component: StrategyPage,\n      chartColor:'hsl(211,67%,47%)',\n      icon:'images/strategies/risk-on.svg',\n      iconInactive:'images/strategies/risk-off.svg',\n      iconInactiveDark:'images/strategies/risk-white.svg',\n      desc:'Optimize your risk exposure across DeFi protocols',\n      descLong:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level. The risk-management algorithm takes account of the total assets within a pool, incorporates underlying protocol rate functions and levels of supply and demand, skimming protocols with a bad score/rate mix, and finally determining an allocation that achieves the highest risk-return score possible after the rebalance happens.',\n      descShort:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level.'\n    },\n    new:{\n      token:'DAI',\n      color:'#2196F3',\n      comingSoon:true,\n      addGovTokens:true,\n      iconName:'Adjust',\n      title:'Coming Soon',\n      chartColor:'hsl(211,67%,47%)',\n      icon:'images/strategies/solr-on.svg',\n      desc:'More strategies are coming soon!',\n      iconInactive:'images/strategies/solr-off.svg',\n      descLong:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level. The risk-management algorithm takes account of the total assets within a pool, incorporates underlying protocol rate functions and levels of supply and demand, skimming protocols with a bad score/rate mix, and finally determining an allocation that achieves the highest risk-return score possible after the rebalance happens.',\n      descShort:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level.'\n    }\n  },\n  stats:{\n    enabled:true, // Enable endpoint\n    rates:{\n      TTL:300, // 5 minutes\n      endpoint:'https://api.idle.finance/rates/'\n    },\n    tvls:{\n      TTL:120,\n      endpoint:'https://api.idle.finance/tvls/'\n    },\n    substack:{\n      TTL:1800,\n      endpoint:'https://api.idle.finance/substack/'\n    },\n    scores:{\n      TTL:300, // 5 minutes\n      endpoint:'https://api.idle.finance/scores/'\n    },\n    config:{\n      headers: env.REACT_APP_IDLE_KEY ? { Authorization: `Bearer ${env.REACT_APP_IDLE_KEY}` } : {}\n    },\n    versions:{\n      /*\n      v2:{\n        label:'Idle V2',\n        startTimestamp:null,\n        additionalProtocols:[],\n        endTimestamp:1589752999,\n        enabledStrategies:['best'],\n        showPerformanceTooltip:false,\n        enabledTokens:['DAI','USDC'],\n      },\n      */\n      v3:{\n        label:'Idle V3',\n        additionalProtocols:[],\n        endTimestamp:1597237542,\n        startTimestamp:1589801874,\n        showPerformanceTooltip:false,\n        strategiesParams:{\n          risk:{\n            endTimestamp:1597233922,\n          }\n        },\n        enabledStrategies:['best','risk'],\n        enabledTokens:['DAI','USDC','USDT','TUSD','SUSD','WBTC'],\n      },\n      v4:{\n        label:'Idle V4',\n        endTimestamp:null,\n        startTimestamp:1597442400, // 1598220000\n        enabledStrategies:['best','risk'],\n        showPerformanceTooltip:true,\n        strategiesParams:{\n          risk:{\n            startTimestamp:1599183170,\n          }\n        },\n        enabledTokens:['DAI','USDC','USDT','TUSD','SUSD','WBTC','WETH'],\n        additionalProtocols:[\n          {\n            decimals:16,\n            protocol:'compound',\n            name:'compoundWithCOMP',\n          }\n        ]\n      }\n    },\n    tokens:{\n      DAI:{\n        decimals:18,\n        enabled:true,\n        color:{\n          rgb:[250,184,51],\n          hex:'#F7B24A',\n          hsl:['40', '95%', '59%']\n        },\n        chart:{\n          labelTextColorModifiers:['darker', 2]\n        },\n        startTimestamp:'2020-02-11',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      USD:{\n        enabled:true,\n        color:{\n          hex:'#85bb65',\n          rgb:[133, 187, 101],\n          hsl:['98', '39%', '56%']\n        },\n        chart:{\n          labelTextColorModifiers:['brighter', 2]\n        },\n        address:null,\n        startTimestamp:'2020-02-04',\n      },\n      USDC:{\n        decimals:6,\n        enabled:true,\n        color:{\n          hex:'#2875C8',\n          rgb:[40,117,200],\n          hsl:['211', '67%', '47%']\n        },\n        chart:{\n          labelTextColorModifiers:['brighter', 2]\n        },\n        startTimestamp:'2020-02-04',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      USDT:{\n        decimals:6,\n        enabled:true,\n        color:{\n          hex:'#22a079',\n          rgb:[34, 160, 121],\n          hsl:['161', '65%', '38%']\n        },\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        startTimestamp:'2020-02-04',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      TUSD:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'0340a1',\n          rgb:[3, 64, 161],\n          hsl:['217', '96%', '32%']\n        },\n        chart:{\n          labelTextColorModifiers:['brighter', 5]\n        },\n        startTimestamp:'2020-06-22',\n        address:'0x0000000000085d4780b73119b644ae5ecd22b376',\n      },\n      SUSD:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#1e1a31',\n          rgb:[30, 26, 49],\n          hsl:['250', '31%', '15%']\n        },\n        chart:{\n          labelTextColorModifiers:['brighter', 5]\n        },\n        startTimestamp:'2020-06-22',\n        address:'0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n      },\n      WBTC:{\n        decimals:8,\n        enabled:true,\n        color:{\n          hex:'#eb9444',\n          rgb:[235, 148, 68],\n          hsl:['29', '81%', '59%']\n        },\n        startTimestamp:'2020-06-15',\n        conversionRateField:'wbtcDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4],\n        },\n        address:'0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      WETH:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#ee1f79',\n          rgb:[238, 31, 121],\n          hsl:['334', '86%', '53%']\n        },\n        startTimestamp:'2021-02-16',\n        conversionRateField:'wethDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4],\n        },\n        address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      COMP:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#00d395',\n          rgb:[0, 211, 149],\n          hsl:['162', '100%', '41%']\n        },\n        startTimestamp:'2020-06-15',\n        conversionRateField:'compDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        address:'0xc00e94cb662c3520282e6f5717214004a7f26888',\n      },\n      IDLE:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#0d55bb',\n          rgb:[13, 85, 187],\n          hsl:['215', '87%', '39%']\n        },\n        startTimestamp:'2020-11-10',\n        icon:'images/tokens/IDLE.png',\n        conversionRateField:'idleDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        address:'0xc00e94cb662c3520282e6f5717214004a7f26888',\n      },\n      'idleDAI+idleUSDC+idleUSDT':{\n        decimals:18,\n        enabled:false,\n        name:'Curve.fi',\n        color:{\n          hex:'#ff0000',\n          rgb:[255, 0, 0],\n          hsl:['0', '100%', '50%']\n        },\n        startTimestamp:'2020-06-15',\n      },\n    },\n    protocols:{\n      compound:{\n        legend:true,\n        enabled:true,\n        label:'Compound',\n        color:{\n          rgb:[0, 209, 146],\n          hsl:['162', '100%', '41%']\n        }\n      },\n      compoundWithCOMP:{\n        enabled:true,\n        rateField:['rate','compoundAdditionalAPR'],\n        label:'Compound + COMP',\n        color:{\n          rgb:[0, 153, 107],\n          hsl:['162', '100%', '30%']\n        }\n      },\n      fulcrum:{\n        legend:false,\n        enabled:false,\n        label:'Fulcrum',\n        color:{\n          rgb:[2, 138, 192],\n          hsl:['197', '98%', '38%']\n        }\n      },\n      dsr:{\n        label:'DSR',\n        enabled:false,\n        icon:'CHAI.png',\n        color:{\n          rgb:[222, 52, 67],\n          hsl:['355', '72%', '54%']\n        }\n      },\n      dydx:{\n        legend:true,\n        label:'DyDx',\n        enabled:true,\n        color:{\n          rgb:[87, 87, 90],\n          hsl:['240', '2%', '35%']\n        }\n      },\n      iearn:{\n        label:'Yearn',\n        enabled:true,\n      },\n      aave:{\n        label:'Aave V1',\n        legend:true,\n        enabled:true,\n        color:{\n          rgb:[230, 131, 206],\n          hsl:['315', '66%', '71%']\n        }\n      },\n      aavev2:{\n        legend:true,\n        enabled:true,\n        icon:'aave.svg',\n        label:'Aave V2',\n        color:{\n          rgb:[151, 79, 141],\n          hsl:['308', '31%', '45%']\n        }\n      },\n      curve:{\n        label:'',\n        enabled:true,\n        color:{\n          rgb:[0, 55, 255],\n          hsl:['227', '100%', '50%']\n        }\n      },\n      idle:{\n        label:'Idle',\n        enabled:true,\n        color:{\n          rgb:[0, 55, 255],\n          hsl:['227', '100%', '50%']\n        }\n      }\n    }\n  },\n  contract:{\n    methods:{\n      redeem:{\n        skipRebalance:true,\n        metaTransactionsEnabled:false\n      },\n      deposit:{\n        skipMint:true,\n        minAmountForMint:100000,\n        erc20ForwarderEnabled:true,\n        skipMintCheckboxEnabled:true,\n        metaTransactionsEnabled:false,\n        // Proxy contract for Meta Tx or ERC20 Forwarder\n        erc20ForwarderProxyContract:{\n          forwarder:{\n            enabled:true,\n            abi:erc20Forwarder,\n            name:'erc20Forwarder',\n            function:'emitMessage',\n            address:'0x84a0856b038eaAd1cC7E297cF34A7e72685A8693', // Main\n            // address:'0xCB3F801C91DEcaaE9b08b1eDb915F9677D8fdB4A' // Kovan\n          },\n          tokens:{\n            DAI:{\n              enabled:true,\n              permitType:'DAI_Permit',\n              abi:IdleDepositForwarder,\n              function:'permitAndDeposit', // foo\n              name:'IdleDepositForwarderDAI',\n              address:'0xDe3c769cCD1878372864375e9f89956806B86daA', // Main\n              // address:'0x1E32F1E96B9735E5D31a23e12fe8e6D9845a9072', // Kovan\n            },\n            USDC:{\n              enabled:true,\n              permitType:'USDC_Permit',\n              abi:IdleDepositForwarder,\n              name:'IdleDepositForwarderUSDC',\n              function:'permitEIP2612AndDeposit',\n              address:'0x43bD6a78b37b50E3f52CAcec53F1202dbDe6a761', // Main\n              // address:'0x8f9048CFAa27b1A1b77c32a0b87D2DcF5D016cb5', // Kovan\n            },\n          }\n        },\n        proxyContract:{\n          enabled:false,\n          abi:IdleProxyMinter,\n          name:'IdleProxyMinter',\n          function:'mintIdleTokensProxy',\n          address:'0x7C4414aA6B0c6CB1Bc7e5BFb7433138426AC637a',\n        }\n      },\n      migrate:{\n        skipRebalance:true,\n        minAmountForRebalance:10000,\n        minAmountForRebalanceMetaTx:10000\n      },\n      redeemGovTokens:{\n        enabled:true\n      },\n      rebalance:{\n        enabled:true,\n        abi:IdleRebalancerV3\n      }\n    }\n  },\n  network:{ // Network configurations\n    availableNetworks:{\n      1:'Mainnet',\n      3:'Ropsten',\n      4:'Rinkeby',\n      42:'Kovan',\n      1337:'Hardhat'\n    },\n    isForked:false, // If TRUE the tx confirmation callback is fired on the receipt\n    requiredNetwork:1, // { 1: Mainnet, 3: Ropsten, 42: Kovan }\n    blocksPerYear:2371428,\n    firstBlockNumber:8119247,\n    requiredConfirmations: 1,\n    accountBalanceMinimum: 0, // in ETH for gas fees\n    providers:{\n      infura:{\n        42: 'https://kovan.infura.io/v3/',\n        1: 'https://mainnet.infura.io/v3/',\n        1337: 'https://mainnet.infura.io/v3/'\n      },\n      etherscan:{\n        enabled:true, // False for empty txs list (try new wallet)\n        endpoints:{\n          1: 'https://api.etherscan.io/api',\n          1337: 'https://api.etherscan.io/api',\n          42: 'https://api-kovan.etherscan.io/api'\n        }\n      },\n      snapshot:{\n        whitelist:[\n          '0x9993ADB62085AcB05Fc493f7A1D10C11227A78fa',\n          '0xf12ce5807e3d3128B876aa1Cec0632D63547E22E'\n        ],\n        endpoints:{\n          proposals:'https://hub.snapshot.page/api/idlefinance.eth/proposals'\n        },\n        urls:{\n          proposals:'https://signal.idle.finance/#/idlefinance.eth/proposal/'\n        }\n      },\n      biconomy:{\n        enabled:false,\n        enableLogin:false,\n        supportedNetworks:[1,42],\n        disabledWallets:['authereum'],\n        endpoints:{\n          limits:'https://api.biconomy.io/api/v1/dapp/checkLimits'\n        },\n        params:{\n          debug: false,\n          apiKey: env.REACT_APP_BICONOMY_KEY, // Mainnet\n          dappId: env.REACT_APP_BICONOMY_APPID,\n          apiId: '36572ec9-ae5c-4c4a-9530-f3ae7c7ac829',\n          // apiKey: env.REACT_APP_BICONOMY_KEY_KOVAN, // Kovan\n        }\n      },\n      terminal:{\n        enabled:false,\n        supportedNetworks:[1,42],\n        params:{\n          apiKey: env.REACT_APP_TERMINAL_KEY,\n          projectId: env.REACT_APP_TERMINAL_PROJECT_ID,\n          source: null,\n          web3Version: Web3Versions.one\n        }\n      },\n      simpleID:{\n        enabled:false,\n        supportedNetworks:[1],\n        getNetwork:(networkId,availableNetworks) => {\n          let networkName = null;\n          switch (networkId){\n            case 1:\n              networkName = 'mainnet';\n            break;\n            default:\n              networkName = availableNetworks[networkId] ? availableNetworks[networkId].toLowerCase() : 'mainnet';\n            break;\n          }\n          return networkName;\n        },\n        params:{\n          appOrigin: window.location.origin,\n          appName: \"Idle\",\n          appId: \"eb4d1754-a76e-4c58-8422-54b5ca2395e7\",\n          renderNotifications: false,\n          network: 'mainnet'\n        }\n      }\n    }\n  },\n  notifications:[\n    {\n      enabled:false,\n      end:1612282726374,\n      start:1611677841027,\n      date:'Jan 26, 2021 16:18 UTC',\n      title:'Cover Protocol Available',\n      hash:'/dashboard/tools/cover-protocol',\n      image:'/images/protocols/cover-logo.svg',\n      text:'Protect your portfolio with Cover Protocol',\n    }\n  ],\n  tools:{\n    ethWrapper:{\n      enabled:true,\n      label:'ETH Wrapper',\n      route:'eth-wrapper',\n      subComponent:TokenWrapper,\n      image:'images/tokens/WETH.svg',\n      desc:'Wrap your ETH and get WETH. Unwrap your WETH and get back ETH.',\n      props:{\n        startContract:{\n          name:'ETH',\n          token:'ETH',\n          decimals:18,\n          wrapMethod:'deposit',\n        },\n        destContract:{\n          abi:WETH,\n          name:'WETH',\n          decimals:18,\n          token:'WETH',\n          unwrapMethod:'withdraw',\n          address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2'\n        },\n      }\n    },\n    stake:{\n      enabled:true,\n      icon:'Layers',\n      label:'LP Staking',\n      route:'lp-staking',\n      subComponent:Staking,\n      desc:'Stake your Sushi Swap LP tokens and earn $IDLE rewards',\n      props:{\n        availableTokens:{\n          SLP:{\n            contract:{\n              decimals:24,\n              abi:LpStaking,\n              name:'LpStaking',\n              maxMultiplier:3,\n              maxBonusDays:120,\n              rewardToken:'IDLE',\n              address:'0xcc0b9f7ed0e6bc7c2e69dbd247e8420f29aeb48d' // Mainnet\n              // address:'0x95274E30C33083F3E3fEA9454347b9BD59e85225' // Fork\n            },\n            name:'SLP',\n            token:'SLP',\n            decimals:18,\n            enabled:true,\n            abi:SushiLiquidityPool,\n            label:'SushiSwap IDLE/ETH LP Token',\n            icon:'images/protocols/sushiswap.png',\n            address:'0xa7f11e026a0af768d285360a855f2bded3047530' // Mainnet\n          }\n        }\n      }\n    },\n    coverProtocol:{\n      enabled:false,\n      label:'Cover Protocol',\n      route:'cover-protocol',\n      subComponent:CoverProtocol,\n      image:'images/protocols/cover-logo.svg',\n      desc:'Get your Idle Portfolio covered against Smart Contract risk',\n      fileClaimUrl:'https://app.coverprotocol.com/app/claims/new?protocol=IDLE',\n      props:{\n        contract:{\n          decimals:18,\n          abi:CoverMint,\n          name:'CoverMint',\n          address:'0x46f2f34742c1d9b9b220aabf0ff26bf59ec9f8a0'\n        },\n        coverages:[\n          {\n            collateral:'DAI',\n            expirationTimestamp:1614470400,\n            tokens:{\n              Claim:{\n                abi:CovToken,\n                name:'COVER_IDLE_2021_02_28_DAI_0_CLAIM',\n                address:'0xa7dac6774e5e40f56a0bf06af6cf9b1f3d037bcc',\n                balancerPool:{\n                  decimals:18,\n                  abi:BalancerPool,\n                  name:'BAL_COVER_IDLE_2021_02_28_DAI_0_CLAIM',\n                  address:'0xeb2b9959c7943eb3c0bdb69ede25247bab4d1c6c',\n                }\n              },\n              NoClaim:{\n                abi:CovToken,\n                name:'COVER_IDLE_2021_02_28_DAI_0_NOCLAIM',\n                address:'0x53df0bfa014b7522299c129c5a7b318f02adb469',\n                balancerPool:{\n                  decimals:18,\n                  abi:BalancerPool,\n                  name:'BAL_COVER_IDLE_2021_02_28_DAI_0_NOCLAIM',\n                  address:'0xce0e9e7a1163badb7ee79cfe96b5148e178cab73',\n                }\n              }\n            }\n          },\n        ],\n      }\n    },\n    batchDeposit:{\n      enabled:true,\n      icon:'Storage',\n      claimEnabled:true,\n      depositEnabled:true,\n      route:'batch-deposit',\n      label:'Batch Deposit',\n      subComponent:BatchDeposit,\n      desc:'Deposit your tokens in the batch and wait until its execution to claim your Idle Tokens V4',\n      props:{\n        availableTokens:{\n          idleDAIYield:{\n            decimals:18,\n            strategy:'best',\n            baseToken:'DAI',\n            minPoolSize:20000,\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintDAI',\n              address:'0x633fb4d38B24dC890b11Db2AE2B248D13F996A79', // Main\n              // address:'0x1B7bA0361A15CCF62521cF7d2Cbb2Ba90b1521a7', // Kovan\n              functions:[\n                {\n                  name:'deposit',\n                  usePermit:true,\n                  label:'Deposit',\n                  permitName:'permitAndDeposit'\n                },\n              ]\n            },\n          },\n          idleUSDCYield:{\n            decimals:6,\n            strategy:'best',\n            baseToken:'USDC',\n            minPoolSize:20000,\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintUSDC',\n              address:'0x562C4fd96F0652F5Fcfa96b0a33088B5a6eAeE9B', // Main\n              // address:'0x3F35eB839f91b614195a47A593dB46b14cd7EaF8', // Kovan\n              functions:[\n                {\n                  name:'deposit',\n                  label:'Deposit',\n                  usePermit:true,\n                  permitName:'permitEIP2612AndDepositUnlimited'\n                },\n              ]\n            },\n          },\n          /*\n          idleUSDTYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'USDT',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintUSDT',\n              address:'0xee5c50c7c49dec47dde2f9b0233b9e14a8f00cf2',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleSUSDYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'SUSD',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintSUSD',\n              address:'0xE2eE519399a49f1A2004a25DA61e82867A69b9b1',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleTUSDYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'TUSD',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintTUSD',\n              address:'0x174a273f0ea28e55b6dd13259aa43d262b863a86',\n              functions:[\n                {\n                  usePermit:true,\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleWBTCYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'WBTC',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintWBTC',\n              address:'0xbfDC7d97559173B52EF2A2f1bC9BeCf97B0D401D',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleDAISafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'DAI',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintDAISafe',\n              address:'0x08db226d63cE724A6091Ba82D28dFc76ceCa23d8',\n              functions:[\n                {\n                  name:'deposit',\n                  label:'Deposit',\n                  usePermit:true,\n                },\n              ]\n            },\n          },\n          idleUSDCSafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'USDC',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintUSDCSafe',\n              address:'0xA6C89A31D59f9C68D9Cba28d690C5E52058fb472',\n              functions:[\n                {\n                  name:'deposit',\n                  label:'Deposit',\n                  usePermit:true,\n                },\n              ]\n            },\n          },\n          idleUSDTSafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'USDT',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintUSDTSafe',\n              address:'0xd47B96Fb33b79a4Dd81a2bfa676eBB669166f619',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          }\n          */\n        }\n      }\n    },\n    batchMigration:{\n      enabled:true,\n      claimEnabled:true,\n      depositEnabled:false,\n      icon:'FileDownload',\n      route:'batch-migration',\n      label:'Batch Migration',\n      subComponent:BatchMigration,\n      desc:'Deposit your Idle Tokens V3 into a batch and wait until its conversion to the Idle Token V4',\n      props:{\n        availableTokens:{\n          idleDAIYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'DAI',\n            name:'idleDAIYieldV3',\n            token:'idleDAIYieldV3',\n            address:'0x78751b12da02728f467a44eac40f5cbc16bd7934',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterDAI',\n              address:'0xe0BfD08dA4DAf8f8BA11d1c3802009E75f963497',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleUSDCYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'USDC',\n            name:'idleUSDCYieldV3',\n            token:'idleUSDCYieldV3',\n            address:'0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterUSDC',\n              address:'0x86c8b56d124c2a8e7ea8a9e6a7f8ed99dde5cca8',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleUSDTYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'USDT',\n            name:'idleUSDTYieldV3',\n            token:'idleUSDTYieldV3',\n            address:'0x63D27B3DA94A9E871222CB0A32232674B02D2f2D',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterUSDT',\n              address:'0xee5c50c7c49dec47dde2f9b0233b9e14a8f00cf2',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleSUSDYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'SUSD',\n            name:'idleSUSDYieldV3',\n            token:'idleSUSDYieldV3',\n            address:'0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterSUSD',\n              address:'0xE2eE519399a49f1A2004a25DA61e82867A69b9b1',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleTUSDYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'TUSD',\n            name:'idleTUSDYieldV3',\n            token:'idleTUSDYieldV3',\n            address:'0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterTUSD',\n              address:'0x174a273f0ea28e55b6dd13259aa43d262b863a86',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleWBTCYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'WBTC',\n            name:'idleWBTCYieldV3',\n            token:'idleWBTCYieldV3',\n            address:'0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterWBTC',\n              address:'0xbfDC7d97559173B52EF2A2f1bC9BeCf97B0D401D',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleDAISafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'DAI',\n            name:'idleDAISafeV3',\n            token:'idleDAISafeV3',\n            address:'0x1846bdfDB6A0f5c473dEc610144513bd071999fB',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterDAISafe',\n              address:'0x08db226d63cE724A6091Ba82D28dFc76ceCa23d8',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleUSDCSafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'USDC',\n            name:'idleUSDCSafeV3',\n            token:'idleUSDCSafeV3',\n            address:'0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterUSDCSafe',\n              address:'0xA6C89A31D59f9C68D9Cba28d690C5E52058fb472',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleUSDTSafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'USDT',\n            name:'idleUSDTSafeV3',\n            token:'idleUSDTSafeV3',\n            address:'0x42740698959761baf1b06baa51efbd88cb1d862b',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterUSDTSafe',\n              address:'0xd47B96Fb33b79a4Dd81a2bfa676eBB669166f619',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          }\n        }\n      }\n    },\n    tokenMigration:{\n      enabled:true,\n      icon:'SwapHoriz',\n      route:'convert',\n      label:'Token Migration',\n      desc:'Easily convert your Compound, Fulcrum, Aave and iEarn tokens into Idle',\n      subComponent:TokenMigration,\n      props:{\n        migrationContract:{\n          name:'IdleConverterV4',\n          abi:IdleConverterPersonalSignV4,\n          address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n          oldAddresses:[],\n          functions:[\n            {\n              label:'Migrate',\n              name:'migrateFromToIdle'\n            },\n          ]\n        },\n        availableStrategies:['best','risk'],\n        availableTokens:{\n          idleDAIv2:{\n            decimals:18,\n            enabled:true,\n            protocol:'idle',\n            baseToken:'DAI',\n            abi:IdleTokenV2,\n            token:'idleDAIOld',\n            icon:'images/tokens/idleDAI.svg',\n            migrateFunction:'migrateFromToIdle',\n            address:'0x10eC0D497824e342bCB0EDcE00959142aAa766dD',\n          },\n          cDAI:{\n            decimals:8,\n            enabled:true,\n            token:\"cDAI\",\n            baseToken:'DAI',\n            protocol:\"compound\",\n            migrateFunction:'migrateFromCompoundToIdle',\n            address:\"0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643\",\n          },\n          iDAI:{\n            decimals:18,\n            enabled:false,\n            token:\"iDAI\",\n            baseToken:'DAI',\n            protocol:\"fulcrum\",\n            migrateFunction:'migrateFromFulcrumToIdle',\n            address:\"0x493c57c4763932315a328269e1adad09653b9081\",\n          },\n          aDAI:{\n            decimals:18,\n            enabled:true,\n            token:\"aDAI\",\n            protocol:\"aave\",\n            baseToken:'DAI',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d\",\n          },\n          yDAIv3:{\n            decimals:18,\n            enabled:true,\n            token:\"yDAIv3\",\n            abi:yDAIv3.abi,\n            baseToken:'DAI',\n            protocol:\"iearn\",\n            icon:'images/tokens/yDAI.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0xC2cB1040220768554cf699b0d863A3cd4324ce32\",\n          },\n          yDAIv2:{\n            decimals:18,\n            enabled:true,\n            token:\"yDAIv2\",\n            baseToken:'DAI',\n            abi:yDAIv3.abi,\n            protocol:\"iearn\",\n            icon:'images/tokens/yDAI.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0x16de59092dAE5CcF4A1E6439D611fd0653f0Bd01\",\n          },\n          idleUSDCv2:{\n            decimals:18,\n            enabled:true,\n            protocol:'idle',\n            abi:IdleTokenV2,\n            baseToken:'USDC',\n            token:'idleUSDCOld',\n            icon:'images/tokens/idleUSDC.svg',\n            migrateFunction:'migrateFromToIdle',\n            address:'0xeB66ACc3d011056B00ea521F8203580C2E5d3991',\n          },\n          cUSDC:{\n            decimals:8,\n            enabled:true,\n            token:\"cUSDC\",\n            baseToken:'USDC',\n            protocol:\"compound\",\n            migrateFunction:'migrateFromCompoundToIdle',\n            address:\"0x39aa39c021dfbae8fac545936693ac917d5e7563\",\n          },\n          iUSDC:{\n            decimals:6,\n            enabled:false,\n            token:\"iUSDC\",\n            baseToken:'USDC',\n            protocol:\"fulcrum\",\n            migrateFunction:'migrateFromFulcrumToIdle',\n            address:\"0xf013406a0b1d544238083df0b93ad0d2cbe0f65f\",\n          },\n          aUSDC:{\n            decimals:6,\n            enabled:true,\n            token:\"aUSDC\",\n            protocol:\"aave\",\n            baseToken:'USDC',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0x9bA00D6856a4eDF4665BcA2C2309936572473B7E\",\n          },\n          yUSDCv3:{\n            decimals:6,\n            enabled:true,\n            token:\"yUSDCv3\",\n            protocol:\"iearn\",\n            abi:yUSDCv3.abi,\n            baseToken:'USDC',\n            icon:'images/tokens/yUSDC.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0x26EA744E5B887E5205727f55dFBE8685e3b21951\",\n          },\n          yUSDCv2:{\n            decimals:6,\n            enabled:true,\n            token:\"yUSDCv2\",\n            protocol:\"iearn\",\n            abi:yUSDCv3.abi,\n            baseToken:'USDC',\n            icon:'images/tokens/yUSDC.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0xd6aD7a6750A7593E092a9B218d66C0A814a3436e\",\n          },\n          cUSDT:{\n            decimals:8,\n            enabled:true,\n            token:\"cUSDT\",\n            baseToken:'USDT',\n            protocol:\"compound\",\n            migrateFunction:'migrateFromCompoundToIdle',\n            address:\"0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9\",\n          },\n          iUSDT:{\n            decimals:6,\n            enabled:false,\n            token:\"iUSDT\",\n            baseToken:'USDT',\n            protocol:\"fulcrum\",\n            migrateFunction:'migrateFromFulcrumToIdle',\n            address:\"0x8326645f3aa6de6420102fdb7da9e3a91855045b\",\n          },\n          aUSDT:{\n            decimals:6,\n            enabled:true,\n            token:\"aUSDT\",\n            protocol:\"aave\",\n            baseToken:'USDT',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0x71fc860F7D3A592A4a98740e39dB31d25db65ae8\",\n          },\n          yUSDTv3:{\n            decimals:6,\n            enabled:true,\n            token:\"yUSDTv3\",\n            abi:yUSDTv3.abi,\n            protocol:\"iearn\",\n            baseToken:'USDT',\n            icon:'images/tokens/yUSDT.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0xE6354ed5bC4b393a5Aad09f21c46E101e692d447\",\n          },\n          yUSDTv2:{\n            decimals:6,\n            enabled:true,\n            token:\"yUSDTv2\",\n            abi:yUSDTv3.abi,\n            protocol:\"iearn\",\n            baseToken:'USDT',\n            icon:'images/tokens/yUSDT.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0x83f798e925BcD4017Eb265844FDDAbb448f1707D\",\n          },\n          idleSUSDv2:{\n            decimals:18,\n            enabled:true,\n            abi:IdleTokenV2,\n            protocol:'idle',\n            baseToken:'SUSD',\n            token:'idleSUSDYieldOld',\n            availableStrategies:['best'],\n            migrateFunction:'migrateFromToIdle',\n            icon:'images/tokens/idleSUSDYield.svg',\n            address:'0xb39ca0261a1b2986a6a9Fe38d344B56374963dE5',\n          },\n          aSUSD:{\n            decimals:6,\n            enabled:true,\n            token:\"aSUSD\",\n            protocol:\"aave\",\n            baseToken:'SUSD',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0x625aE63000f46200499120B906716420bd059240\",\n          },\n          ySUSDv3:{\n            decimals:18,\n            enabled:true,\n            token:\"ySUSDv3\",\n            abi:ySUSDv3,\n            baseToken:'SUSD',\n            protocol:\"iearn\",\n            availableStrategies:['best'],\n            icon:'images/tokens/ySUSDv3.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0xf61718057901f84c4eec4339ef8f0d86d2b45600\",\n          },\n          idleTUSDv2:{\n            decimals:18,\n            enabled:true,\n            abi:IdleTokenV2,\n            protocol:'idle',\n            baseToken:'TUSD',\n            token:'idleTUSDYieldOld',\n            availableStrategies:['best'],\n            migrateFunction:'migrateFromToIdle',\n            icon:'images/tokens/idleTUSDYield.svg',\n            address:'0x7DB7A4a50b26602E56536189Aa94678C80F8E5b6',\n          },\n          aTUSD:{\n            decimals:6,\n            enabled:true,\n            token:\"aTUSD\",\n            protocol:\"aave\",\n            baseToken:'TUSD',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0x4DA9b813057D04BAef4e5800E36083717b4a0341\",\n          },\n          yTUSDv3:{\n            decimals:18,\n            enabled:true,\n            abi:yTUSDv3,\n            token:\"yTUSDv3\",\n            baseToken:'TUSD',\n            protocol:\"iearn\",\n            icon:'images/tokens/yTUSDv3.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0x73a052500105205d34daf004eab301916da8190f\",\n          },\n          cWBTC:{\n            decimals:8,\n            enabled:true,\n            token:\"cWBTC\",\n            baseToken:'WBTC',\n            protocol:\"compound\",\n            migrateFunction:'migrateFromCompoundToIdle',\n            address:\"0xc11b1268c1a384e55c48c2391d8d480264a3a7f4\",\n          },\n          iWBTC:{\n            decimals:8,\n            enabled:false,\n            token:\"iWBTC\",\n            baseToken:'WBTC',\n            protocol:\"fulcrum\",\n            migrateFunction:'migrateFromFulcrumToIdle',\n            address:\"0xba9262578efef8b3aff7f60cd629d6cc8859c8b5\",\n          },\n          aWBTC:{\n            decimals:8,\n            enabled:true,\n            token:\"aWBTC\",\n            protocol:\"aave\",\n            baseToken:'WBTC',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0xfc4b8ed459e00e5400be803a9bb3954234fd50e3\",\n          },\n        }\n      }\n    },\n    addFunds:{\n      enabled:true,\n      icon:'AddCircleOutline',\n      route:'add-funds',\n      label:'Add Funds',\n      desc:'Buy tokens with your Bank account, Credit card or Ethereum Wallet',\n      subComponent:BuyModal,\n      directProps:{\n        showInline:true,\n        showAllTokens:true\n      }\n    },\n    insurance:{\n      enabled:false,\n      icon:'Security',\n      route:'nexus-mutual',\n      label:'Nexus Mutual',\n      desc:'Buy tokens with Bank account or Credit card',\n      subComponent:NexusMutual,\n      props:{\n        availableTokens:{\n          \"ETH\":{\"token\":\"ETH\"},\n          \"DAI\":{\"token\":\"DAI\"},\n        }\n      },\n      directProps:{\n        ens:'idlefinancev3.nexusmutual.eth',\n        address:'0x78751B12Da02728F467A44eAc40F5cbc16Bd7934'\n      }\n    },\n    tokenSwap:{\n      enabled:true,\n      icon:'Sync',\n      route:'token-swap',\n      label:'Token Swap',\n      desc:'Easily swap your tokens using Kyber Swap widget',\n      subComponent:TokenSwap,\n      props:{\n        availableTokens:{\n          \"ETH\":{\"token\":\"ETH\"},\n          \"DAI\":{\"token\":\"DAI\"},\n          \"SUSD\":{\"token\":\"SUSD\"},\n          \"TUSD\":{\"token\":\"TUSD\"},\n          \"USDC\":{\"token\":\"USDC\"},\n          \"USDS\":{\"token\":\"USDS\"},\n          \"USDT\":{\"token\":\"USDT\"},\n          \"WBTC\":{\"token\":\"WBTC\"},\n          \"WETH\":{\"token\":\"WETH\"},\n          \"BUSD\":{\"token\":\"BUSD\"},\n          \"EURS\":{\"token\":\"EURS\"},\n          \"2KEY\":{\"token\":\"2KEY\"},\n          \"ABT\":{\"token\":\"ABT\"},\n          \"ABYSS\":{\"token\":\"ABYSS\"},\n          \"AMPL\":{\"token\":\"AMPL\"},\n          \"ANT\":{\"token\":\"ANT\"},\n          \"BAM\":{\"token\":\"BAM\"},\n          \"BAND\":{\"token\":\"BAND\"},\n          \"BAT\":{\"token\":\"BAT\"},\n          \"BLZ\":{\"token\":\"BLZ\"},\n          \"BNT\":{\"token\":\"BNT\"},\n          \"BQX\":{\"token\":\"BQX\"},\n          \"BTU\":{\"token\":\"BTU\"},\n          \"CDT\":{\"token\":\"CDT\"},\n          \"CVC\":{\"token\":\"CVC\"},\n          \"DAT\":{\"token\":\"DAT\"},\n          \"DGX\":{\"token\":\"DGX\"},\n          \"EKG\":{\"token\":\"EKG\"},\n          \"ELF\":{\"token\":\"ELF\"},\n          \"ENJ\":{\"token\":\"ENJ\"},\n          \"EQUAD\":{\"token\":\"EQUAD\"},\n          \"FXC\":{\"token\":\"FXC\"},\n          \"GDC\":{\"token\":\"GDC\"},\n          \"GEN\":{\"token\":\"GEN\"},\n          \"GHT\":{\"token\":\"GHT\"},\n          \"GNO\":{\"token\":\"GNO\"},\n          \"IOST\":{\"token\":\"IOST\"},\n          \"KEY\":{\"token\":\"KEY\"},\n          \"KNC\":{\"token\":\"KNC\"},\n          \"LEND\":{\"token\":\"LEND\"},\n          \"LINK\":{\"token\":\"LINK\"},\n          \"LOOM\":{\"token\":\"LOOM\"},\n          \"LRC\":{\"token\":\"LRC\"},\n          \"MANA\":{\"token\":\"MANA\"},\n          \"MCO\":{\"token\":\"MCO\"},\n          \"MET\":{\"token\":\"MET\"},\n          \"MFG\":{\"token\":\"MFG\"},\n          \"MKR\":{\"token\":\"MKR\"},\n          \"MLN\":{\"token\":\"MLN\"},\n          \"MTL\":{\"token\":\"MTL\"},\n          \"MYB\":{\"token\":\"MYB\"},\n          \"NEXXO\":{\"token\":\"NEXXO\"},\n          \"NPXS\":{\"token\":\"NPXS\"},\n          \"OGN\":{\"token\":\"OGN\"},\n          \"OMG\":{\"token\":\"OMG\"},\n          \"OST\":{\"token\":\"OST\"},\n          \"PAX\":{\"token\":\"PAX\"},\n          \"PBTC\":{\"token\":\"PBTC\"},\n          \"PLR\":{\"token\":\"PLR\"},\n          \"PNK\":{\"token\":\"PNK\"},\n          \"POLY\":{\"token\":\"POLY\"},\n          \"POWR\":{\"token\":\"POWR\"},\n          \"PT\":{\"token\":\"PT\"},\n          \"QKC\":{\"token\":\"QKC\"},\n          \"QNT\":{\"token\":\"QNT\"},\n          \"RAE\":{\"token\":\"RAE\"},\n          \"REN\":{\"token\":\"REN\"},\n          \"REP\":{\"token\":\"REP\"},\n          \"REQ\":{\"token\":\"REQ\"},\n          \"RLC\":{\"token\":\"RLC\"},\n          \"RSR\":{\"token\":\"RSR\"},\n          \"RSV\":{\"token\":\"RSV\"},\n          \"SAN\":{\"token\":\"SAN\"},\n          \"SNT\":{\"token\":\"SNT\"},\n          \"SNX\":{\"token\":\"SNX\"},\n          \"SPIKE\":{\"token\":\"SPIKE\"},\n          \"SPN\":{\"token\":\"SPN\"},\n          \"TKN\":{\"token\":\"TKN\"},\n          \"TKX\":{\"token\":\"TKX\"},\n          \"TRYB\":{\"token\":\"TRYB\"},\n          \"UBT\":{\"token\":\"UBT\"},\n          \"UPP\":{\"token\":\"UPP\"},\n          \"ZRX\":{\"token\":\"ZRX\"}\n        }\n      },\n      directProps:{\n      }\n    }\n  },\n  payments: { // Payment methods & providers\n    methods:{\n      bank:{\n        defaultProvider:null,\n        showDefaultOnly:false,\n        props:{\n          imageSrc:'images/bank.png',\n          caption:'Bank Account'\n        }\n      },\n      card:{\n        defaultProvider:null,\n        showDefaultOnly:false,\n        props:{\n          imageSrc:'images/debit-card.png',\n          caption:'Credit Card'\n        }\n      },\n      wallet:{\n        defaultProvider:'zeroExInstant',\n        showDefaultOnly:false,\n        props:{\n          imageSrc:'images/ethereum-wallet.svg',\n          caption:'Ethereum Wallet',\n          imageProps:{\n            padding:['0','5px']\n          }\n        }\n      },\n    },\n    providers: {\n      wyre: {\n        enabled: true,\n        imageSrc: 'images/payments/wyre.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 0.75% fee ~',\n        supportedMethods:['card'],\n        supportedCountries:['USA','GBR','AUS','BRA','CHN','MEX','EUR'],\n        supportedTokens:['USDC','DAI','ETH'],\n        remoteResources:{},\n        env:'prod',\n        envParams:{\n          test:{\n            accountId:'AC_Q2Y4AARC3TP'\n          },\n          prod:{\n            accountId:'AC_PQQBX33XVEQ'\n          }\n        },\n        getInfo: (props) => {\n          const info = {};\n          if (props.selectedMethod && props.selectedMethod){\n            switch (props.selectedMethod){\n              case 'bank':\n                info.subcaption = `~ 0.75% fee ~\\nKYC REQUIRED`;\n              break;\n              case 'card':\n                info.subcaption = `~ 3.2% fee ~\\n$250.00/day`;\n              break;\n              default:\n              break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props,globalConfigs,buyParams) => {\n          const env = globalConfigs.payments.providers.wyre.env;\n          const envParams = globalConfigs.payments.providers.wyre.envParams[env];\n          const referrerAccountId = envParams.accountId;\n          const url = 'https://pay.sendwyre.com/purchase';\n\n          const params = {\n            dest: `ethereum:${props.account}`,\n            destCurrency: buyParams.selectedToken ? buyParams.selectedToken : ( props.tokenConfig.wyre && props.tokenConfig.wyre.destCurrency ? props.tokenConfig.wyre.destCurrency : props.selectedToken ),\n            referrerAccountId,\n            redirectUrl:globalConfigs.baseURL\n            // failureRedirectUrl:globalConfigs.baseURL\n          };\n\n          return `${url}?`+Object.keys(params)\n              .map(k => encodeURIComponent(k) + '=' + encodeURIComponent(params[k]))\n              .join('&');\n        },\n        render: (initParams,amount,props,globalConfigs) => {\n          const wyreWidget = document.getElementById('wyre-widget');\n          if (!wyreWidget){\n            const iframeBox = document.createElement(\"div\");\n            iframeBox.innerHTML = `\n              <div id=\"wyre-widget\" class=\"wyre-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                <div id=\"wyre-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\"></div>\n                <a class=\"wyre-close-button\" href=\"javascript:void(0);\" onclick=\"document.getElementById('wyre-widget').remove();\" style=\"position:absolute;width:30px;height:30px;top:10px;right:10px;font-size:22px;line-height:30px;text-align:center;color:#fff;font-weight:bold;z-index:10;text-decoration:none\">✕</a>\n                <div id=\"wyre-widget-container\" style=\"position:relative;z-index:2;width:400px;height:650px\">\n                  <iframe\n                    style=\"position:relative;z-index:2;\"\n                    frameborder=\"0\"\n                    height=\"100%\"\n                    src=\"${initParams}\"\n                    width=\"100%\"\n                  >\n                    <p>Your browser does not support iframes.</p>\n                  </iframe>\n                  <div id=\"wyre-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                    <div style=\"display:flex;flex-direction:row;align-items:center\">\n                      <img src=\"${globalConfigs.payments.providers.wyre.imageSrc}\" style=\"height:50px;\" />\n                      <h3 style=\"font-weight:600;font-style:italic;color:#000;padding-left:10px\">is loading...</h3>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            `;\n            document.body.appendChild(iframeBox);\n\n            // Add wyre Widget style (mobile)\n            if (!document.getElementById('wyreWidget_style')){\n              const wyreStyle = document.createElement('style');\n              wyreStyle.id = 'wyreWidget_style';\n              wyreStyle.innerHTML = `\n              @media (max-width: 40em){\n                #wyre-widget {\n                  align-items: flex-start !important;\n                }\n                #wyre-widget-overlay{\n                  background:#fff !important;\n                }\n                #wyre-widget-container{\n                  width:100vw;\n                  min-height: calc( 100vh - 60px ) !important;\n                }\n              }`;\n              document.body.appendChild(wyreStyle);\n            }\n          }\n        },\n      },\n      ramp: {\n        enabled:true,\n        imageSrc: 'images/payments/ramp.png',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption:`~ 2.5% fee ~\\nEUR / GBP`,\n        supportedMethods:['bank','card'],\n        badge: {\n          text:'NO ID REQUIRED',\n          color:'#fff',\n          bgColor:'#0cade4'\n        },\n        supportedTokens:['ETH','DAI','USDC'],\n        supportedCountries:['USA','GBR','AUS','BRA','CAN','EUR','HKG','IND','MEX','RUS','ZAF','KOR'],\n        getInfo: (props) => {\n          const info = {};\n            switch (props.selectedMethod){\n              case 'bank':\n                info.supportedCountries = ['GBR','EUR'];\n                info.subcaption = `~ 1.49-1.99% fee ~`;\n              break;\n              case 'card':\n                info.supportedCountries = ['USA','GBR','AUS','BRA','CAN','EUR','HKG','IND','MEX','RUS','ZAF','KOR'];\n                info.subcaption = `~ 2.90% fee ~`;\n              break;\n              default:\n              break;\n            }\n          return info;\n        },\n        getInitParams: (props,globalConfigs,buyParams) => {\n        \treturn {\n\t          hostAppName: 'Idle',\n            userAddress: props.account,\n            hostApiKey: env.REACT_APP_RAMP_KEY,\n            variant: props.isMobile ? 'mobile' : 'desktop',\n            hostLogoUrl: `${globalConfigs.baseURL}/images/idle-round.png`,\n            swapAsset: buyParams.selectedToken ? buyParams.selectedToken : ( props.tokenConfig.ramp && props.tokenConfig.ramp.swapAsset ? props.tokenConfig.ramp.swapAsset : props.selectedToken )\n        \t};\n        },\n        render: (initParams,amount,props,globalConfigs) => {\n          new RampInstantSDK(initParams)\n            .on('*', async (event) => {\n              const functionsUtil = new FunctionsUtil(props);\n              let tokenDecimals = null;\n              let tokenAmount = null;\n\n              switch (event.type){\n                case 'PURCHASE_SUCCESSFUL':\n                  // Update balance\n                  props.getAccountBalance();\n\n                  tokenDecimals = await props.getTokenDecimals();\n\n                  tokenAmount = event.payload.purchase.tokenAmount;\n                  tokenAmount = functionsUtil.BNify(tokenAmount.toString()).div(functionsUtil.BNify(Math.pow(10,parseInt(tokenDecimals)).toString())).toString();\n\n                  // Toast message\n                  window.toastProvider.addMessage(`Payment completed`, {\n                    secondaryMessage: `${tokenAmount} ${props.selectedToken} are now in your wallet`,\n                    colorTheme: 'light',\n                    actionHref: \"\",\n                    actionText: \"\",\n                    variant: \"success\",\n                  });\n\n                break;\n                default:\n                break;\n              }\n            })\n            .show();\n        }\n      },\n      transak: {\n        enabled:true,\n        imageSrc: 'images/payments/transak.png',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption:`~ 1.5% fee ~\\nALL CURRENCIES`,\n        supportedMethods:['bank','card'],\n        supportedCountries:['USA','GBR','AUS','BRA','CHN','MEX','EUR','IND'],\n        supportedTokens:['ETH','DAI','USDC','USDT','TUSD','SUSD','WBTC'],\n        remoteResources:{'https://global.transak.com/v1/widget.js':{}},\n        env:'prod',\n        badge:{\n          text:'INSTANT',\n          bgColor:'#0069ee'\n        },\n        envParams:{\n          test:{\n            apiKey:env.REACT_APP_TRANSAK_KEY_TEST,\n            url:'https://global.transak.com'\n          },\n          prod:{\n            apiKey:env.REACT_APP_TRANSAK_KEY_PROD,\n            url:'https://global.transak.com'\n          }\n        },\n        getInfo: (props) => {\n          const info = {};\n\n          const selectedMethod = props.selectedMethod && props.selectedMethod;\n          let fee = selectedMethod === 'bank' ? '1.5%' : '4.5%';\n\n          if (props.selectedCountry && props.selectedCountry.value){\n            switch (props.selectedCountry.value.toUpperCase()){\n              case 'GBR':\n                info.badge = {\n                  text:'INSTANT',\n                  bgColor:'#0069ee'\n                };\n                info.subcaption = `~ ${fee} fee ~\\nGBP ONLY`;\n              break;\n              case 'IND':\n                fee = '1.0%';\n                info.badge = {\n                  text:'INSTANT',\n                  bgColor:'#0069ee'\n                };\n                info.subcaption = `~ ${fee} fee ~\\nINR ONLY`;\n              break;\n              case 'EUR':\n                if (selectedMethod === 'bank'){\n                  info.badge = {\n                    text:'SEPA',\n                    color:'#f7cb05 ',\n                    bgColor:'#10288a'\n                  };\n                } else {\n                  info.badge = {\n                    text:'INSTANT',\n                    bgColor:'#0069ee'\n                  };\n                }\n                info.subcaption = `~ ${fee} fee ~\\nEUR ONLY`;\n              break;\n              default:\n              break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props,globalConfigs,buyParams) => {\n          const env = globalConfigs.payments.providers.transak.env;\n          const envParams = globalConfigs.payments.providers.transak.envParams[env];\n\n          let fiatCurrency = null;\n\n          if (buyParams.selectedCountry && buyParams.selectedCountry.value){\n            switch (buyParams.selectedCountry.value.toUpperCase()){\n              case 'IND':\n                fiatCurrency = 'INR';\n              break;\n              case 'GBR':\n                fiatCurrency = 'GBP';\n              break;\n              case 'EUR':\n                fiatCurrency = 'EUR';\n              break;\n              case 'USA':\n                fiatCurrency = 'USD';\n              break;\n              default:\n                fiatCurrency = 'GBP';\n              break;\n            }\n          }\n\n          let cryptoCurrencyCode = buyParams.selectedToken ? buyParams.selectedToken.toLowerCase() : ( props.tokenConfig.transak && props.tokenConfig.transak.currencyCode ? props.tokenConfig.transak.currencyCode : props.selectedToken);\n          cryptoCurrencyCode = cryptoCurrencyCode.toUpperCase();\n\n          const apiKey = envParams.apiKey;\n          const walletAddress = props.account;\n          const partnerCustomerId = props.account;\n          const disableWalletAddressForm = false;\n\n          return {\n            apiKey,\n            cryptoCurrencyCode,\n            walletAddress,\n            fiatCurrency,\n            partnerCustomerId,\n            disableWalletAddressForm,\n            width:'100%',\n            height:'100%'\n            // email,\n          };\n        },\n        render: (initParams,amount,props,globalConfigs) => {\n          if (window.transakGlobal){\n\n            const transakWidget = document.getElementById('transak-widget');\n            if (!transakWidget){\n              const iframeBox = document.createElement(\"div\");\n              iframeBox.innerHTML = `\n                <div id=\"transak-widget\" class=\"transak-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                  <div id=\"transak-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\" onclick=\"document.getElementById('transak-widget').remove();\"></div>\n                  <a class=\"transak-close-button\" href=\"javascript:void(0);\" onclick=\"document.getElementById('transak-widget').remove();\" style=\"position:absolute;width:30px;height:30px;top:10px;right:10px;font-size:22px;line-height:30px;text-align:center;color:#fff;font-weight:bold;z-index:10;text-decoration:none\">✕</a>\n                  <div class=\"transak-widget-container\" style=\"position:relative;z-index:2;width:500px;height:550px\">\n                    <div id=\"transak-widget-container\" style=\"position:relative;z-index:2;width:500px;height:550px\"></div>\n                    <div id=\"transak-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                      <div style=\"display:flex;flex-direction:row;align-items:center\">\n                        <img src=\"${globalConfigs.payments.providers.transak.imageSrc}\" style=\"height:50px;\" />\n                        <h3 style=\"font-weight:600;font-style:italic;color:#0040ca\">is loading...</h3>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              `;\n              document.body.appendChild(iframeBox);\n\n              // Add transak Widget style (mobile)\n              if (!document.getElementById('transakWidget_style')){\n                const transakStyle = document.createElement('style');\n                transakStyle.id = 'transakWidget_style';\n                transakStyle.innerHTML = `\n                @media (max-width: 40em){\n                  #transak-widget {\n                    align-items: flex-start !important;\n                  }\n                  #transak-widget-overlay{\n                    background:#fff !important;\n                  }\n                  #transak-widget-container{\n                    width:100vw;\n                    min-height: calc( 100vh - 60px ) !important;\n                  }\n                }`;\n                document.body.appendChild(transakStyle);\n              }\n            }\n\n            window.transakGlobal.render(initParams, 'transak-widget-container');\n          }\n        }\n      },\n      moonpay: {\n        enabled:true,\n        imageSrc: 'images/payments/moonpay.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 4.5% fee ~',\n        supportedMethods:['card','bank'],\n        supportedCountries:['GBR','EUR','AUS','BRA','CHN','MEX','CAN','HKG','RUS','ZAF','KOR'],\n        supportedTokens:['USDC','DAI','ETH'],\n        env:'prod',\n        envParams:{\n          test:{\n            url:'https://buy-staging.moonpay.io',\n            apiKey:env.REACT_APP_MOONPAY_KEY_TEST\n          },\n          prod:{\n            url:'https://buy.moonpay.io',\n            apiKey:env.REACT_APP_MOONPAY_KEY_PROD\n          }\n        },\n        getInfo: (props) => {\n          const info = {};\n          if (props.selectedMethod && props.selectedMethod){\n            switch (props.selectedMethod){\n              case 'bank':\n                if (props.selectedCountry && props.selectedCountry.value){\n                  switch (props.selectedCountry.value.toUpperCase()){\n                    case 'EUR':\n                      info.badge = {\n                        text:'SEPA',\n                        color:'#f7cb05 ',\n                        bgColor:'#10288a'\n                      }\n                      info.subcaption = `~ 1.5% fee ~\\nEUR ONLY`;\n                    break;\n                    case 'GBR':\n                      info.badge = {\n                        text:'GBP',\n                      }\n                      info.subcaption = `~ 1.5% fee ~\\nGBP ONLY`;\n                    break;\n                    default:\n                      info.badge = null;\n                      info.subcaption = `~ 1.5% fee ~\\nEUR/GBP ONLY`;\n                    break;\n                  }\n                }\n              break;\n              case 'card':\n                info.badge = null;\n                info.subcaption = `~ 5% fee ~`;\n              break;\n              default:\n              break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props,globalConfigs,buyParams) => {\n          const env = globalConfigs.payments.providers.moonpay.env;\n          const envParams = globalConfigs.payments.providers.moonpay.envParams[env];\n          const apiKey = envParams.apiKey;\n          const params = {\n            apiKey,\n            currencyCode: buyParams.selectedToken ? buyParams.selectedToken.toLowerCase() : ( props.tokenConfig.moonpay && props.tokenConfig.moonpay.currencyCode ? props.tokenConfig.moonpay.currencyCode : props.selectedToken.toLowerCase()),\n            walletAddress:props.account,\n            baseCurrencyCode:'USD',\n            showWalletAddressForm: true\n          };\n\n          const methods = {\n            'bank':{\n              'GBR':'gbp_bank_transfer',\n              'EUR':'sepa_bank_transfer'\n            },\n            'card':'credit_debit_card'\n          };\n\n          const selectedCountry = buyParams.selectedCountry && buyParams.selectedCountry.value ? buyParams.selectedCountry.value.toUpperCase() : null;\n\n          // Set payment method\n          if (buyParams.selectedMethod){\n            switch (buyParams.selectedMethod){\n              case 'bank':\n                params.enabledPaymentMethods = methods[buyParams.selectedMethod]['EUR'];\n                switch (selectedCountry){\n                  case 'GBR':\n                  case 'EUR':\n                    params.enabledPaymentMethods = methods[buyParams.selectedMethod][selectedCountry];\n                  break;\n                  default:\n                    params.enabledPaymentMethods = Object.values(methods[buyParams.selectedMethod]).join(',');\n                  break;\n                }\n              break;\n              case 'card':\n              default:\n                params.enabledPaymentMethods = methods[buyParams.selectedMethod];\n              break;\n            }\n          }\n\n          // Set baseCurrencyCode\n          switch (selectedCountry){\n            case 'GBR':\n              params.baseCurrencyCode = 'GBP';\n            break;\n            case 'EUR':\n              params.baseCurrencyCode = 'EUR';\n            break;\n            default:\n              params.baseCurrencyCode = 'USD';\n            break;\n          }\n\n          let url = envParams.url;\n\n          // Safari Fix\n          var isSafari = navigator.userAgent.indexOf(\"Safari\") > -1;\n          if (isSafari) {\n            if (!document.cookie.match(/^(.*;)?\\s*moonpay-fixed\\s*=\\s*[^;]+(.*)?$/)) {\n              document.cookie = \"moonpay-fixed=fixed; expires=Tue, 19 Jan 2038 03:14:07 UTC; path=/\";\n              url += \"/safari_fix\";\n            }\n          }\n\n          return `${url}?`+Object.keys(params)\n              .map(k => encodeURIComponent(k) + '=' + encodeURIComponent(params[k]))\n              .join('&');\n        },\n        render: (initParams,amount,props,globalConfigs) => {\n          const moonpayWidget = document.getElementById('moonpay-widget');\n          if (!moonpayWidget){\n            const iframeBox = document.createElement(\"div\");\n            iframeBox.innerHTML = `\n              <div id=\"moonpay-widget\" class=\"moonpay-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                <div id=\"moonpay-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\"></div>\n                  <div id=\"moonpay-widget-container\" style=\"position:relative;z-index:2;width:500px;height:490px\">\n                    <iframe\n                      style=\"position:relative;z-index:2;\"\n                      frameborder=\"0\"\n                      height=\"100%\"\n                      src=\"${initParams}\"\n                      width=\"100%\"\n                    >\n                      <p>Your browser does not support iframes.</p>\n                    </iframe>\n                    <div id=\"moonpay-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                      <div style=\"display:flex;flex-direction:row;align-items:end\">\n                        <img src=\"${globalConfigs.payments.providers.moonpay.imageSrc}\" style=\"height:50px;\" />\n                        <h3 style=\"padding-left:5px;font-weight:600;font-style:italic;\">is loading...</h3>\n                      </div>\n                    </div>\n                    <div id=\"moonpay-widget-footer\" style=\"position:relative;display:flex;justify-content:center;align-items:center;padding:8px 16px;width:100%;background:#fff;top:-20px;z-index:3\">\n                      <button style=\"background:#000;color:#fff;text-align:center;border-radius:5px;width:100%;height:51px;line-height:51px;font-weight:500;border:0;cursor:pointer\" onclick=\"document.getElementById('moonpay-widget').remove();\">Close</button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            `;\n            document.body.appendChild(iframeBox);\n\n            // Add Moonpay Widget style (mobile)\n            if (!document.getElementById('moonpayWidget_style')){\n              const moonpayStyle = document.createElement('style');\n              moonpayStyle.id = 'moonpayWidget_style';\n              moonpayStyle.innerHTML = `\n              @media (max-width: 40em){\n                #moonpay-widget {\n                  align-items: flex-start !important;\n                }\n                #moonpay-widget-overlay{\n                  background:#fff !important;\n                }\n                #moonpay-widget-container{\n                  width:100vw;\n                  min-height: calc( 100vh - 60px ) !important;\n                }\n              }`;\n              document.body.appendChild(moonpayStyle);\n            }\n          }\n        }\n      },\n      zeroExInstant: {\n        enabled: true,\n        imageSrc: 'images/payments/zeroexinstant.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 0.25% fee ~',\n        supportedMethods:['wallet'],\n        supportedTokens:['USDC','DAI'],\n        remoteResources:{'https://instant.0x.org/v3/instant.js':{}},\n        getInitParams: (props,globalConfigs,buyParams,onSuccess,onClose) => {\n\n          const tokenParams = globalConfigs.tokens[buyParams.selectedToken];\n          const connectorName = window.RimbleWeb3_context ? window.RimbleWeb3_context.connectorName : null;\n\n          if (!tokenParams.zeroExInstant){\n            return null;\n          }\n\n          return {\n            networkId: globalConfigs.network.requiredNetwork,\n            chainId: globalConfigs.network.requiredNetwork,\n            provider: connectorName && connectorName!=='Injected' && window.RimbleWeb3_context.connector[connectorName.toLowerCase()] ? window.RimbleWeb3_context.connector[window.RimbleWeb3_context.connectorName.toLowerCase()].provider : window.ethereum,\n            orderSource: tokenParams.zeroExInstant.orderSource,\n            affiliateInfo: tokenParams.zeroExInstant.affiliateInfo,\n            defaultSelectedAssetData: tokenParams.zeroExInstant.assetData,\n            availableAssetDatas: [tokenParams.zeroExInstant.assetData],\n            shouldDisableAnalyticsTracking: true,\n            onSuccess: onSuccess ? onSuccess : () => {},\n            onClose: onClose ? onClose : () => {}\n          };\n        },\n        render: (initParams,amount) => {\n          if (window.zeroExInstant && initParams){\n            if (amount){\n              initParams.defaultAssetBuyAmount = parseFloat(amount);\n            }\n            window.zeroExInstant.render(initParams, 'body');\n          }\n        }\n      },\n      kyberSwap: {\n        enabled: true,\n        imageSrc: 'images/payments/kyber.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Swap with',\n        captionPos: 'top',\n        subcaption: '~ 0.25% fee ~',\n        supportedMethods:['wallet'],\n        supportedTokens:['WETH','USDC','DAI','USDT','TUSD','SUSD','WBTC'],\n        web3Subscription:{ // Data for web3 subscription\n          enabled: true,\n          contractAddress: '0x818e6fecd516ecc3849daf6845e3ec868087b755',\n          decodeLogsData: [\n            {\n              \"internalType\": \"address\",\n              \"name\": \"_startAddress\",\n              \"type\": \"address\"\n            },\n            {\n              \"internalType\": \"address\",\n              \"name\": \"_tokenAddress\",\n              \"type\": \"address\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"_startAmount\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"_tokenAmount\",\n              \"type\": \"uint256\"\n            },\n          ],\n        },\n        remoteResources:{\n          'https://widget.kyber.network/v0.7.5/widget.css':{},\n          'https://widget.kyber.network/v0.7.5/widget.js':{\n            parentElement:document.body,\n            precall: (props,globalConfigs,providerInfo) => {\n\n              // Remove previous elements\n              const buttons = document.querySelectorAll('.kyber-widget-button');\n              for (let i=0;i<buttons.length;i++){\n                buttons[i].remove();\n              }\n\n              // const kyberWidgetScript = document.getElementById('kyber-widget-script');\n              // if (kyberWidgetScript){\n              //   kyberWidgetScript.remove();\n              // }\n\n              const scripts = document.querySelectorAll('.script_kyberSwap');\n              for (let i=0;i<scripts.length;i++){\n                scripts[i].remove();\n              }\n\n              const buttonId = props.buttonId ? props.buttonId : `kyber-swapper-${props.selectedToken}`;\n              if (!document.getElementById(buttonId)){\n                const a = document.createElement('a');\n                a.id = buttonId;\n                a.href = providerInfo.getInitParams(props,globalConfigs);\n                a.target = '_blank';\n                a.rel = 'nofollow noopener noreferrer';\n                a.className = 'kyber-widget-button theme-ocean theme-supported';\n                a.title = 'Swap with Kyber';\n                a.style = 'display:none;';\n                document.body.appendChild(a);\n              }\n            }\n          }\n        },\n        getInitParams: (props,globalConfigs,buyParams=null) => {\n          const baseToken = props.baseToken ? props.baseToken : 'ETH';\n          const params = {\n            lang:'en',\n            type:'swap',\n            mode:'iframe',\n            theme:'theme-ocean',\n            paramForwarding:true,\n            // callback:globalConfigs.baseURL,\n            pinnedTokens:`${baseToken}_${props.selectedToken}`,\n            title:`Swap ${baseToken} for ${props.selectedToken}`,\n            defaultPair:`${baseToken}_${props.selectedToken}`,\n            commissionId:'0x4215606a720477178AdFCd5A59775C63138711e8',\n            network: globalConfigs.network.requiredNetwork === 1 ? 'mainnet' : 'test',\n          };\n\n          const url  = 'https://widget.kyber.network/v0.7.5/';\n\n          return `${url}?`+Object.keys(params)\n              .map(k => encodeURIComponent(k) + '=' + encodeURIComponent(params[k]))\n              .join('&');\n        },\n        render: (initParams,amount,props) => {\n          const buttonId = props.buttonId ? props.buttonId :`kyber-swapper-${props.selectedToken}`;\n          const a = document.getElementById(buttonId);\n          if (a){\n            a.click();\n\n            // Observe for pending transaction\n            /*\n            if (window.MutationObserver){\n              setTimeout(() => {\n\n                const observer = new window.MutationObserver(function(mutations) {\n                  mutations.forEach((m,i) => {\n                    if (m.addedNodes.length && m.target.className === 'kyber_widget-broadcast'){\n                      \n                      // Show persistent toast message\n                      window.showToastMessage({\n                        variant:'processing',\n                        message:'Pending deposit',\n                        secondaryMessage:'kyberSwap is processing your request'\n                      });\n\n                      observer.disconnect();\n                    } else if (m.target.id === 'kyber-widget' && m.removedNodes.length && m.removedNodes[0].firstChild.className.includes('kyber_widget-widget-container')) {\n                      observer.disconnect();\n                    }\n                  });\n                });\n                const target = document.querySelector('#kyber-widget');\n                observer.observe(target, { childList: true, subtree: true });\n              },1000);\n            }\n            */\n          }\n        }\n      },\n      airSwap: {\n        enabled: false,\n        imageSrc: 'images/payments/airswap.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 0% fee ~',\n        supportedMethods:['wallet'],\n        supportedTokens:['USDC','DAI'],\n        env:'production',\n        remoteResources:{'https://cdn.airswap.io/airswap-instant-widget.js':{}},\n        getInitParams: (props,globalConfigs,buyParams,onComplete,onClose) => {\n          return {\n            env: 'production',\n            mode: 'buy',\n            token: props.tokenConfig.address,\n            baseToken: 'ETH',\n            onComplete: onComplete ? onComplete : () => {},\n            onClose: onClose ? onClose : () => {}\n          };\n        },\n        render: (initParams,amount,props) => {\n          if (window.AirSwapInstant){\n            if (amount){\n              initParams.amount = amount.toString();\n            }\n            window.AirSwapInstant.render(initParams,'body');\n          }\n        }\n      },\n      totle: {\n        enabled: false,\n        imageSrc: 'images/payments/totle.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 0% fee ~',\n        supportedMethods:['wallet'],\n        supportedTokens:['USDC','DAI'],\n        env:'production',\n        remoteResources:{'https://widget.totle.com/latest/dist.js':{}},\n        getInitParams: (props,globalConfigs,buyParams,onComplete,onClose) => {\n          return {\n            sourceAssetAddress: null,\n            sourceAmountDecimal: null,\n            destinationAssetAddress: null,\n            destinationAmountDecimal: null,\n            apiKey: null,\n            partnerContractAddress: null,\n          };\n        },\n        render: (initParams,amount,props) => {\n          if (window.TotleWidget){\n            const nodeId = 'totle-widget';\n            if (!document.getElementById(nodeId)){\n              const totleWidgetContainer = document.createElement(\"div\");\n              totleWidgetContainer.id = nodeId;\n              document.body.appendChild(totleWidgetContainer);\n            }\n\n            window.TotleWidget.default.run(initParams,document.getElementById(nodeId));\n          }\n        }\n      }\n    }\n  }\n};\n\nexport default globalConfigs;","import FunctionsUtil from './FunctionsUtil';\n\nclass IdleGovToken{\n  // Attributes\n  props = {};\n  tokenName = null;\n  tokenConfig = null;\n  functionsUtil = null;\n\n  // Constructor\n  constructor(props){\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    this.tokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n    this.tokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.tokenName]);\n  }\n\n  getBalance = async () => {\n    let balance = await this.functionsUtil.getTokenBalance(this.tokenName,this.props.account);\n    if (!balance || this.functionsUtil.BNify(balance).isNaN()){\n      balance = this.functionsUtil.BNify(0);\n    }\n    return balance;\n  }\n\n  claimRewards = async (callback,callbackReceipt) => {\n    return this.functionsUtil.contractMethodSendWrapper('EarlyRewards', 'claim', [], callback, callbackReceipt);\n  }\n\n  getPriorVotes = async (account=null) => {\n    account = account ? account : this.props.account;\n    let priorVotes = await this.functionsUtil.genericContractCall(this.tokenName,'getPriorVotes',[account]);\n    if (priorVotes){\n      return this.functionsUtil.BNify(priorVotes);\n    }\n    return null;\n  }\n\n  refreshIdleSpeed = async () => {\n    return this.functionsUtil.genericContractCall('IdleController','refreshIdleSpeeds');\n  }\n\n  getUnclaimedTokens = async () => {\n    /*\n    let rewards =  await this.functionsUtil.genericContractCall('EarlyRewards','rewards',[this.props.account]);\n    if (rewards){\n      return this.functionsUtil.fixTokenDecimals(rewards,this.tokenConfig.decimals);\n    }\n    */\n    return this.functionsUtil.BNify(0);\n  }\n\n  getAPR = async (token,tokenConfig,conversionRate=null) => {\n    const IDLETokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.tokenName]);\n    if (!IDLETokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getIdleAPR_${tokenConfig.idle.token}_${conversionRate}`;\n    /*\n    const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n    */\n\n    let APR = this.functionsUtil.BNify(0);\n\n    const [\n      idleDistribution,\n      tokenAllocation\n    ] = await Promise.all([\n      this.getDistribution(tokenConfig),\n      this.functionsUtil.getTokenAllocation(tokenConfig,false,false)\n    ]);\n\n    if (idleDistribution && tokenAllocation){\n\n      const DAITokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens','DAI']);\n        \n      // Get IDLE oconversion rate\n      if (!conversionRate){\n        try {\n          conversionRate = await this.functionsUtil.getUniswapConversionRate(DAITokenConfig,IDLETokenConfig);\n        } catch (error) {\n\n        }\n        if (!conversionRate || conversionRate.isNaN()){\n          conversionRate = this.functionsUtil.BNify(0);\n        }\n      }\n\n      if (!conversionRate || this.functionsUtil.BNify(conversionRate).lte(0)){\n        return this.functionsUtil.BNify(0);\n      }\n\n      const tokenPool = await this.functionsUtil.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent,token,tokenConfig);\n\n      const idleDistributedPerYearUSD = this.functionsUtil.BNify(conversionRate).times(idleDistribution);\n      APR = idleDistributedPerYearUSD.div(tokenPool).times(100);\n\n      // console.log(tokenConfig.idle.token,idleDistributedPerYearUSD.toFixed(5),conversionRate.toFixed(5),tokenPool.toFixed(5),APR.toFixed(5));\n\n      return this.functionsUtil.setCachedData(cachedDataKey,APR);\n    }\n\n    return APR;\n  }\n\n  // Get IDLE distribution speed\n  getSpeed = async (idleTokenAddress) => {\n\n    const cachedDataKey = `getIdleSpeed_${idleTokenAddress}`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return this.functionsUtil.BNify(cachedData);\n    }\n\n    let idleSpeeds = await this.functionsUtil.genericContractCall('IdleController','idleSpeeds',[idleTokenAddress]);\n    if (idleSpeeds && !this.functionsUtil.BNify(idleSpeeds).isNaN()){\n      idleSpeeds = this.functionsUtil.BNify(idleSpeeds);\n      return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,idleSpeeds);\n    }\n    return null;\n  }\n\n  getDistribution = async (tokenConfig) => {\n\n    const cachedDataKey = `getIdleDistribution_${tokenConfig.idle.token}`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return this.functionsUtil.BNify(cachedData);\n    }\n\n    // Get IDLE distribution speed and Total Supply\n    const idleSpeeds = await this.getSpeed(tokenConfig.idle.address);\n\n    if (idleSpeeds){\n\n      // Get IDLE distribution for Idle in a Year\n      const blocksPerYear = this.functionsUtil.getGlobalConfig(['network','blocksPerYear']);\n\n      // Take 50% of distrubution for lenders side\n      const distribution = this.functionsUtil.BNify(idleSpeeds).times(this.functionsUtil.BNify(blocksPerYear)).div(1e18);\n\n      if (!this.functionsUtil.BNify(distribution).isNaN()){\n        return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,distribution);\n      }\n    }\n\n    return null;\n  }\n\n  getUserDistribution = async (account=null,availableTokens=null,fixByFrequency=false) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens){\n      return false;\n    }\n\n    let totalSpeed = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n\n      if (this.tokenConfig && this.tokenConfig.disabledTokens.includes(tokenConfig.idle.token)){\n        return;\n      }\n\n      const [\n        idleSpeed,\n        userPoolShare\n      ] = await Promise.all([\n        this.getSpeed(tokenConfig.idle.address),\n        this.functionsUtil.getUserPoolShare(account,tokenConfig)\n      ]);\n\n      if (idleSpeed && userPoolShare){\n        const tokenSpeed = idleSpeed.times(userPoolShare);\n        totalSpeed = totalSpeed.plus(tokenSpeed);\n      }\n    });\n\n    if (fixByFrequency){\n      totalSpeed = this.functionsUtil.fixTokenDecimals(totalSpeed,this.tokenConfig.decimals);\n      totalSpeed = this.functionsUtil.fixDistributionSpeed(totalSpeed,this.tokenConfig.distributionFrequency)\n    }\n\n    return totalSpeed;\n  }\n\n  getAvgApr = async (availableTokens=null) => {\n    if (!availableTokens){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n    let output = this.functionsUtil.BNify(0);\n    let totalAllocation = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [idleApr,tokenAllocation] = await Promise.all([\n        this.getAPR(token,tokenConfig),\n        this.functionsUtil.getTokenAllocation(tokenConfig,false,false)\n      ]);\n      \n      if (idleApr && tokenAllocation){\n        output = output.plus(idleApr.times(tokenAllocation.totalAllocation));\n        totalAllocation = totalAllocation.plus(tokenAllocation.totalAllocation);\n      }\n    });\n\n    output = output.div(totalAllocation);\n\n    return output;\n  }\n\n}\n\nexport default IdleGovToken;","import React from \"react\";\nimport axios from 'axios';\nimport moment from 'moment';\nimport { Text } from \"rimble-ui\";\nimport BigNumber from 'bignumber.js';\nimport IdleGovToken from './IdleGovToken';\nimport { toBuffer } from \"ethereumjs-util\";\nimport globalConfigs from '../configs/globalConfigs';\n\nconst ethereumjsABI = require('ethereumjs-abi');\nconst env = process.env;\n\nclass FunctionsUtil {\n\n  // Attributes\n  props = {};\n  idleGovToken = null;\n\n  // Constructor\n  constructor(props){\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n  }\n  trimEth = eth => {\n    return this.BNify(eth).toFixed(6);\n  }\n  toBN = n => new this.props.web3.utils.BN(n)\n  toEth = wei => {\n    if (!this.props.web3){\n      return null;\n    }\n    return this.props.web3.utils.fromWei(\n      (wei || 0).toString(),\n      \"ether\"\n    );\n  }\n  toWei = eth => {\n    if (!this.props.web3){\n      return null;\n    }\n    return this.props.web3.utils.toWei(\n      (eth || 0).toString(),\n      \"ether\"\n    );\n  }\n  htmlDecode = input => {\n    var e = document.createElement('textarea');\n    e.innerHTML = input;\n    return e.childNodes.length === 0 ? '' : e.childNodes[0].nodeValue;\n  }\n  BNify_obj = s => new BigNumber(s)\n  BNify = s => new BigNumber( typeof s === 'object' ? s : String(s) )\n  customLog = (...props) => { if (globalConfigs.logs.messagesEnabled) this.customLog(moment().format('HH:mm:ss'),...props); }\n  customLogError = (...props) => { if (globalConfigs.logs.errorsEnabled) console.error(moment().format('HH:mm:ss'),...props); }\n  getContractByName = (contractName) => {\n    const contract = this.props.contracts.find(c => c.name === contractName);\n    if (!contract) {\n      return false;\n    }\n    return contract.contract;\n  }\n  normalizeSimpleIDNotification = (n) => {\n    return n.replace(/<\\/p><p>/g,\"\\n\")\n            .replace(/<p>/g,\"\")\n            .replace(/<br>/g,\"\")\n            .replace(/&nbsp;/g,\" \")\n            .replace(/<\\/p>/g,\"\");\n  }\n  capitalize = (str) => {\n    return str.substr(0,1).toUpperCase()+str.substr(1);\n  }\n  strToMoment = (date,format=null) => {\n    return moment(date,format);\n  }\n  replaceArrayProps = (arr1,arr2) => {\n    if (arr2 && Object.keys(arr2).length){\n      Object.keys(arr2).forEach(p => {\n        arr1[p] = arr2[p];\n      });\n    }\n\n    return arr1;\n  }\n  stripHtml = (html) => {\n     var tmp = document.createElement(\"DIV\");\n     tmp.innerHTML = html;\n     return tmp.textContent || tmp.innerText || \"\";\n  }\n  // VanillaJS function for smooth scroll\n  scrollTo = (to, duration) => {\n    const start = window.scrollY;\n    const change = to - start;\n    const increment = 20;\n    let currentTime = 0;\n\n    Math.easeInOutQuad = function (t, b, c, d) {\n      t /= d/2;\n      if (t < 1) return c/2*t*t + b;\n      t--;\n      return -c/2 * (t*(t-2) - 1) + b;\n    };\n\n    const animateScroll = () => {\n        currentTime += increment;\n        var val = Math.easeInOutQuad(currentTime, start, change, duration);\n        window.scrollTo(0,val);\n        if(currentTime < duration) {\n          window.setTimeout(animateScroll, increment);\n        }\n    };\n\n    animateScroll();\n  }\n  getQueryStringParameterByName = (name, url = window.location.href) => {\n    // eslint-disable-next-line\n    name = name.replace(/[\\[\\]]/g, '\\\\$&');\n    var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)'),\n        results = regex.exec(url);\n    if (!results) return null;\n    if (!results[2]) return '';\n    return decodeURIComponent(results[2].replace(/\\+/g, ' '));\n  }\n  getTxAction = (tx,tokenConfig) => {\n\n    const idleTokenAddress = tokenConfig.idle.address;\n    const depositProxyContractInfo = this.getGlobalConfig(['contract','methods','deposit','proxyContract']);\n    const migrationContractAddr = tokenConfig.migration && tokenConfig.migration.migrationContract ? tokenConfig.migration.migrationContract.address : null;\n    const migrationContractOldAddrs = tokenConfig.migration && tokenConfig.migration.migrationContract && tokenConfig.migration.migrationContract.oldAddresses ? tokenConfig.migration.migrationContract.oldAddresses : [];\n    const batchMigration = this.getGlobalConfig(['tools','batchMigration','props','availableTokens',tokenConfig.idle.token]);\n    const batchMigrationContractAddr = batchMigration && batchMigration.migrationContract ? batchMigration.migrationContract.address : null;\n\n    const isBatchMigrationTx = batchMigrationContractAddr && tx.from.toLowerCase() === batchMigrationContractAddr.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase();    \n    const isMigrationTx = isBatchMigrationTx || (migrationContractAddr && (tx.from.toLowerCase() === migrationContractAddr.toLowerCase() || migrationContractOldAddrs.map((v) => { return v.toLowerCase(); }).indexOf(tx.from.toLowerCase()) !== -1 ) && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase());\n    const isSendTransferTx = !isMigrationTx && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n    const isReceiveTransferTx = !isMigrationTx && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n    const isDepositTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && (tx.to.toLowerCase() === idleTokenAddress.toLowerCase() || (depositProxyContractInfo && tx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase()));\n    const isRedeemTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && tx.to.toLowerCase() === this.props.account.toLowerCase();\n    const isSwapTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && !isDepositTx && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n\n    let action = null;\n\n    if (isDepositTx){\n      action = 'Deposit';\n    } else if (isRedeemTx){\n      action = 'Redeem';\n    } else if (isMigrationTx){\n      action = 'Migrate';\n    } else if (isSendTransferTx){\n      action = 'Send';\n    } else if (isReceiveTransferTx){\n      action = 'Receive';\n    } else if (isSwapTx){\n      action = 'Swap';\n    } else if (isSwapTx){\n      action = 'SwapOut';\n    }\n\n    return action;\n  }\n  getAccountPortfolio = async (availableTokens=null,account=null) => {\n    const portfolio = {\n      tokensBalance:{},\n      avgAPY:this.BNify(0),\n      totalBalance:this.BNify(0),\n      totalEarnings:this.BNify(0),\n      totalAmountLent:this.BNify(0),\n      totalEarningsPerc:this.BNify(0),\n      totalBalanceConverted:this.BNify(0)\n    };\n\n    availableTokens = availableTokens ? availableTokens : this.props.availableTokens;\n    account = account ? account : this.props.account;\n\n    if (!account || !availableTokens){\n      return portfolio;\n    }\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const idleTokenBalance = await this.getTokenBalance(tokenConfig.idle.token,account);\n\n      if (idleTokenBalance){\n        const tokenPrice = await this.getIdleTokenPrice(tokenConfig);\n        const tokenBalance = idleTokenBalance.times(tokenPrice);\n        const tokenBalanceConverted = await this.convertTokenBalance(tokenBalance,token,tokenConfig,isRisk);\n\n        if (!tokenPrice.isNaN() && !tokenBalance.isNaN()){\n          portfolio.tokensBalance[token] = {\n            tokenPrice,\n            tokenBalance,\n            idleTokenBalance,\n            tokenBalanceConverted\n          };\n\n          // Increment total balance\n          portfolio.totalBalance = portfolio.totalBalance.plus(tokenBalance);\n          portfolio.totalBalanceConverted = portfolio.totalBalanceConverted.plus(tokenBalanceConverted);\n        }\n      }\n    });\n\n    const orderedTokensBalance = {};\n    Object.keys(availableTokens).forEach( token => {\n      if (portfolio.tokensBalance[token]){\n        orderedTokensBalance[token] = portfolio.tokensBalance[token];\n      }\n    });\n\n    portfolio.tokensBalance = orderedTokensBalance;\n\n    const depositedTokens = Object.keys(portfolio.tokensBalance).filter(token => ( this.BNify(portfolio.tokensBalance[token].idleTokenBalance).gt(0) ));\n\n    let avgAPY = this.BNify(0);\n    let totalEarnings = this.BNify(0);\n    let totalAmountLent = this.BNify(0);\n    let totalEarningsPerc = this.BNify(0);\n    // const amountLents = await this.getAmountLent(depositedTokens,this.props.account);\n\n    await this.asyncForEach(depositedTokens,async (token) => {\n      const tokenConfig = availableTokens[token];\n      const amountDeposited = await this.getAmountDeposited(tokenConfig,account);\n\n      // console.log(token,'amountDeposited',amountDeposited.toString(),'amountLent',amountLents[token].toString());\n\n      const tokenBalanceConverted = portfolio.tokensBalance[token].tokenBalanceConverted;\n      const [\n        tokenAprs\n        // tokenEarnings\n      ] = await Promise.all([\n        this.getTokenAprs(tokenConfig)\n        // this.loadAssetField('earnings',token,tokenConfig,this.props.account,false),\n      ]);\n\n      const tokenAPY = this.BNify(tokenAprs.avgApy);\n      const tokenWeight = tokenBalanceConverted.div(portfolio.totalBalanceConverted);\n      const amountLentToken = await this.convertTokenBalance(amountDeposited,token,tokenConfig,isRisk);\n      const tokenEarnings = tokenBalanceConverted.minus(amountLentToken);\n\n      if (tokenEarnings){\n        totalEarnings = totalEarnings.plus(tokenEarnings);\n      }\n\n      if (tokenAPY){\n        avgAPY = avgAPY.plus(tokenAPY.times(tokenWeight));\n      }\n\n      if (amountLentToken){\n        totalAmountLent = totalAmountLent.plus(amountLentToken);\n      }\n\n      // console.log(token,amountLentToken.toFixed(),tokenEarnings.toFixed(),tokenBalanceConverted.toFixed());\n    });\n\n    if (totalAmountLent.gt(0)){\n      totalEarningsPerc = totalEarnings.div(totalAmountLent).times(100);\n    }\n\n    portfolio.avgAPY = avgAPY;\n    portfolio.totalEarnings = totalEarnings;\n    portfolio.totalAmountLent = totalAmountLent;\n    portfolio.totalEarningsPerc = totalEarningsPerc;\n\n    // debugger;\n\n    return portfolio;\n  }\n  getCurveAvgSlippage = async (enabledTokens=[],account=null,fixDecimals=true) => {\n    account = account ? account : this.props.account;\n\n    if (!account){\n      return [];\n    }\n\n    const availableTokens = this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    let processedTxs = {};\n    const processedHashes = {};\n    let curveTokensBalance = this.BNify(0);\n    const curveTxs = await this.getCurveTxs(account,0,'latest',enabledTokens);\n\n    if (curveTxs && curveTxs.length){\n\n      curveTxs.forEach((tx,index) => {\n\n        // Skip transactions with no hash\n        if (!tx.hash || !tx.curveTokens || !tx.curveTokenPrice){\n          return false;\n        }\n\n        const tokenAmount = this.BNify(tx.tokenAmount);\n        let curveTokens = this.BNify(tx.curveTokens);\n        const curveTokenPrice = this.BNify(tx.curveTokenPrice);\n\n        switch (tx.action){\n          case 'CurveIn':\n          case 'CurveZapIn':\n          case 'CurveDepositIn':\n          case 'CurveTransferIn':\n            if (tx.action === 'CurveTransferIn'){\n              if (index>0 && curveTokensBalance.gt(0)){\n                return;\n              }\n            }\n\n            if (!processedTxs[tx.hash]){\n              processedTxs[tx.hash] = {\n                price:null,\n                received:null,\n                slippage:null,\n                deposited:this.BNify(0),\n              };\n            }\n\n            processedTxs[tx.hash].deposited = processedTxs[tx.hash].deposited.plus(tokenAmount);\n            if (processedTxs[tx.hash].received === null){\n              processedTxs[tx.hash].price = curveTokenPrice;\n              processedTxs[tx.hash].received = curveTokens.times(curveTokenPrice);\n            }\n\n            // this.customLog('getCurveAvgSlippage',tx.action,tx.hash,tx.blockNumber,curveTokens.toFixed(6),curveTokenPrice.toFixed(6),processedTxs[tx.hash].deposited.toFixed(6),processedTxs[tx.hash].received.toFixed(6));\n          break;\n          case 'CurveOut':\n          case 'CurveZapOut':\n          case 'CurveDepositOut':\n            curveTokens = curveTokens.times(this.BNify(-1));\n          break;\n          default:\n          break;\n        }\n\n        // Update curveTokens balance\n        if (!processedHashes[tx.hash]){\n          curveTokensBalance = curveTokensBalance.plus(curveTokens);\n          if (curveTokensBalance.lte(0)){\n            curveTokensBalance = this.BNify(0);\n\n            // Reset processed transactions\n            // processedTxs = {};\n          }\n          processedHashes[tx.hash] = true;\n        }\n      });\n    }\n\n    // this.customLog('processedTxs',processedTxs);\n\n    let avgSlippage = this.BNify(0);\n    let totalDeposited = this.BNify(0);\n    Object.values(processedTxs).forEach( tx => {\n      const slippage = tx.received.div(tx.deposited).minus(1);\n      avgSlippage = avgSlippage.plus(slippage.times(tx.deposited));\n      totalDeposited = totalDeposited.plus(tx.deposited);\n    });\n\n    avgSlippage = avgSlippage.div(totalDeposited).times(-1);\n\n    // debugger;\n    // this.customLog('avgSlippage',avgSlippage.toString());\n\n    return avgSlippage;\n  }\n  getCurveAvgBuyPrice = async (enabledTokens=[],account=null) => {\n    account = account ? account : this.props.account;\n\n    if (!account){\n      return [];\n    }\n\n    const availableTokens = this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    const processedTxs = {};\n    let avgBuyPrice = this.BNify(0);\n    let curveTokensBalance = this.BNify(0);\n    const curveTxs = await this.getCurveTxs(account,0,'latest',enabledTokens);\n\n    // this.customLog('curveTxs',curveTxs);\n\n    if (curveTxs && curveTxs.length){\n\n      curveTxs.forEach((tx,index) => {\n\n        if (!processedTxs[tx.hash]){\n          processedTxs[tx.hash] = [];\n        }\n\n        if (processedTxs[tx.hash].includes(tx.action)){\n          return;\n        }\n\n        // Skip transactions with no hash\n        if (!tx.hash || !tx.curveTokens || !tx.curveTokenPrice){\n          return false;\n        }\n\n        const prevAvgBuyPrice = avgBuyPrice;\n        let curveTokens = this.BNify(tx.curveTokens);\n        const curveTokenPrice = this.BNify(tx.curveTokenPrice);\n\n        // Deposited\n        switch (tx.action){\n          case 'CurveIn':\n          case 'CurveZapIn':\n          case 'CurveDepositIn':\n          case 'CurveTransferIn':\n            if (tx.action === 'CurveTransferIn'){\n              if (index>0 && curveTokensBalance.gt(0)){\n                return;\n              }\n            }\n            avgBuyPrice = curveTokens.times(curveTokenPrice).plus(prevAvgBuyPrice.times(curveTokensBalance)).div(curveTokensBalance.plus(curveTokens));\n          break;\n          case 'CurveOut':\n          case 'CurveZapOut':\n          case 'CurveDepositOut':\n          // case 'CurveTransferOut':\n            curveTokens = curveTokens.times(this.BNify(-1));\n          break;\n          default:\n          break;\n        }\n        \n        // Update curveTokens balance\n        curveTokensBalance = curveTokensBalance.plus(curveTokens);\n        if (curveTokensBalance.lte(0)){\n          avgBuyPrice = this.BNify(0);\n          curveTokensBalance = this.BNify(0);\n        }\n\n        processedTxs[tx.hash].push(tx.action);\n\n        // this.customLog('getCurveAvgBuyPrice',tx.action,tx.hash,tx.blockNumber,curveTokens.toString(),curveTokenPrice.toString(),curveTokensBalance.toString(),avgBuyPrice.toString());\n      });\n    }\n\n    // this.customLog('avgCurveBuyPrice',avgBuyPrice.toString());\n\n    return avgBuyPrice;\n  }\n  getAvgBuyPrice = async (enabledTokens=[],account) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens){\n      return [];\n    }\n\n    const output = {};\n    const etherscanTxs = await this.getEtherscanTxs(account,0,'latest',enabledTokens);\n\n    enabledTokens.forEach( selectedToken => {\n\n      output[selectedToken] = [];\n      let avgBuyPrice = this.BNify(0);\n\n      let idleTokensBalance= this.BNify(0);\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n\n      if (filteredTxs && filteredTxs.length){\n\n        filteredTxs.forEach((tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.idleTokens || !tx.tokenPrice){\n            return false;\n          }\n\n          const prevAvgBuyPrice = avgBuyPrice;\n          let idleTokens = this.BNify(tx.idleTokens);\n          const tokenPrice = this.BNify(tx.tokenPrice);\n\n          // Deposited\n          switch (tx.action){\n            case 'Deposit':\n            case 'Receive':\n            case 'Swap':\n            case 'Migrate':\n            case 'CurveOut':\n              avgBuyPrice = idleTokens.times(tokenPrice).plus(prevAvgBuyPrice.times(idleTokensBalance)).div(idleTokensBalance.plus(idleTokens));\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              idleTokens = idleTokens.times(this.BNify(-1));\n            break;\n            default:\n            break;\n          }\n\n          // Update idleTokens balance\n          idleTokensBalance = idleTokensBalance.plus(idleTokens);\n          if (idleTokensBalance.lte(0)){\n            avgBuyPrice = this.BNify(0);\n            idleTokensBalance = this.BNify(0);\n          }\n\n        });\n      }\n\n      // Add token Data\n      output[selectedToken] = avgBuyPrice;\n    });\n\n    return output;\n  }\n  getFirstDepositTx = async (enabledTokens=[],account) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens){\n      return [];\n    }\n\n    const etherscanTxs = await this.getEtherscanTxs(account,0,'latest',enabledTokens);\n\n    const deposits = {};\n\n    enabledTokens.forEach((selectedToken) => {\n      let amountLent = this.BNify(0);\n      let firstDepositTx = null;\n      deposits[selectedToken] = firstDepositTx;\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        filteredTxs.forEach((tx,index) => {\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.tokenAmount){\n            return false;\n          }\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n              amountLent = amountLent.plus(tx.tokenAmount);\n              if (!firstDepositTx){\n                firstDepositTx = tx;\n              }\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tx.tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.BNify(0);\n            firstDepositTx = null;\n          }\n        });\n      }\n\n      // Add token Data\n      deposits[selectedToken] = firstDepositTx;\n    });\n\n    return deposits;\n  }\n  asyncTimeout = (ms) => {\n    return new Promise(resolve => setTimeout(resolve, ms));\n  }\n  getDepositTimestamp = async (enabledTokens=[],account) => {\n    const firstDepositTxs = await this.getFirstDepositTx(enabledTokens,account);\n    if (firstDepositTxs){\n      return Object.keys(firstDepositTxs).reduce( (acc,token) => {\n        if (firstDepositTxs[token]){\n          acc[token] = firstDepositTxs[token].timeStamp;\n        }\n        return acc;\n      },{});\n    }\n\n    return null;\n  }\n  getAmountDeposited = async (tokenConfig,account) => {\n    let [tokenBalance,userAvgPrice] = await Promise.all([\n      this.getTokenBalance(tokenConfig.idle.token,account),\n      this.genericContractCall(tokenConfig.idle.token, 'userAvgPrices', [account])\n    ]);\n\n    if (tokenBalance && userAvgPrice){\n      userAvgPrice = this.fixTokenDecimals(userAvgPrice,tokenConfig.decimals);\n      const amountDeposited = tokenBalance.times(userAvgPrice);\n      return amountDeposited;\n    }\n\n    return null;\n  }\n  getAmountLent = async (enabledTokens=[],account) => {\n\n    account = account || this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens){\n      return [];\n    }\n\n    const etherscanTxs = await this.getEtherscanTxs(account,0,'latest',enabledTokens,false);\n\n    const amountLents = {};\n\n    enabledTokens.forEach((selectedToken) => {\n      let amountLent = this.BNify(0);\n      amountLents[selectedToken] = amountLent;\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        filteredTxs.forEach((tx,index) => {\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.tokenAmount){\n            return false;\n          }\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n            case 'CurveOut':\n              amountLent = amountLent.plus(tx.tokenAmount);\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tx.tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.BNify(0);\n          }\n        });\n      }\n\n      // Add token Data\n      amountLents[selectedToken] = amountLent;\n    });\n\n    // debugger;\n\n    return amountLents;\n  }\n  getEtherscanBaseTxs = async (account=false,firstBlockNumber=0,endBlockNumber='latest',enabledTokens=[],debug=false) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length){\n      return [];\n    }\n\n    account = account.toLowerCase();\n\n    const selectedStrategy = this.props.selectedStrategy;\n\n    // Check if firstBlockNumber is less that firstIdleBlockNumber\n    const firstIdleBlockNumber = this.getGlobalConfig(['network','firstBlockNumber']);\n    firstBlockNumber = Math.max(firstIdleBlockNumber,firstBlockNumber);\n\n    const requiredNetwork = this.getGlobalConfig(['network','requiredNetwork']);\n    const etherscanInfo = this.getGlobalConfig(['network','providers','etherscan']);\n\n    let results = [];\n    let etherscanBaseTxs = null;\n    let etherscanBaseEndpoint = null;\n\n    // Check if etherscan is enabled for the required network\n    if (etherscanInfo.enabled && etherscanInfo.endpoints[requiredNetwork]){\n      const etherscanApiUrl = etherscanInfo.endpoints[requiredNetwork];\n\n      // Get base endpoint cached transactions\n      etherscanBaseEndpoint = `${etherscanApiUrl}?strategy=${selectedStrategy}&apikey=${env.REACT_APP_ETHERSCAN_KEY}&module=account&action=tokentx&address=${account}&startblock=${firstIdleBlockNumber}&endblock=${endBlockNumber}&sort=asc`;\n      etherscanBaseTxs = this.getCachedRequest(etherscanBaseEndpoint);\n\n      if (debug){\n        console.log('DEBUG - CACHED - etherscanBaseTxs',etherscanBaseTxs);\n      }\n\n      // Check if the latest blockNumber is actually the latest one\n      if (etherscanBaseTxs && etherscanBaseTxs.data.result && Object.values(etherscanBaseTxs.data.result).length){\n\n        const lastCachedTx = Object.values(etherscanBaseTxs.data.result).pop();\n        const lastCachedBlockNumber = lastCachedTx && lastCachedTx.blockNumber ? parseInt(lastCachedTx.blockNumber)+1 : firstBlockNumber;\n\n        const etherscanEndpointLastBlock = `${etherscanApiUrl}?strategy=${selectedStrategy}&apikey=${env.REACT_APP_ETHERSCAN_KEY}&module=account&action=tokentx&address=${account}&startblock=${lastCachedBlockNumber}&endblock=${endBlockNumber}&sort=asc`;\n        let latestTxs = await this.makeCachedRequest(etherscanEndpointLastBlock,15);\n\n        if (latestTxs && latestTxs.data.result && latestTxs.data.result.length){\n          \n          latestTxs = await this.filterEtherscanTxs(latestTxs.data.result,enabledTokens,true,false);\n\n          if (latestTxs && Object.values(latestTxs).length){\n\n            const latestBlockNumbers = Object.values(latestTxs).map( lastTx => (parseInt(lastTx.blockNumber)) );\n            const lastRealBlockNumber = Math.max(...latestBlockNumbers);\n\n            // If real tx blockNumber differs from last blockNumber\n            if (lastRealBlockNumber>=lastCachedBlockNumber){\n              // Merge latest Txs with etherscanBaseTxs\n              Object.values(latestTxs).forEach((tx) => {\n                const txFound = Object.keys(etherscanBaseTxs.data.result).includes(tx.hashKey);\n                if (!txFound){\n                  etherscanBaseTxs.data.result[tx.hashKey] = tx;\n                }\n              });\n\n              // Save etherscan txs\n              this.saveEtherscanTxs(etherscanBaseEndpoint,etherscanBaseTxs.data.result);\n            }\n          }\n        }\n      } else {\n        etherscanBaseTxs = null;\n      }\n\n      let txs = etherscanBaseTxs;\n\n      if (debug){\n        console.log('DEBUG - txs',txs);\n      }\n\n      if (!txs){\n        // Make request\n        txs = await this.makeRequest(etherscanBaseEndpoint);\n\n        // console.log('makeRequest 1',account,etherscanBaseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n\n        if (!txs || !txs.data || parseInt(txs.data.status)===0){\n          let requestCount = 0;\n          let requestStatus = false;\n          do {\n            await this.asyncTimeout(500);\n            txs = await this.makeRequest(etherscanBaseEndpoint);\n            requestCount++;\n            requestStatus = txs && txs.data ? parseInt(txs.data.status) : false;\n            // console.log('makeRequest '+(requestCount+1),account,etherscanBaseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n          } while (requestCount<5 && !requestStatus);\n        }\n\n        // Cache request\n        if (txs && txs.data && parseInt(txs.data.status)>0){\n          const timestamp = parseInt(Date.now()/1000);\n          const cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n          cachedRequests[etherscanBaseEndpoint] = {\n            data:txs,\n            timestamp\n          };\n          this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n        }\n      }\n\n      if (txs && txs.data && txs.data.result){\n        results = txs.data.result;\n      } else {\n        return [];\n      }\n    }\n\n    return {\n      results,\n      etherscanBaseTxs,\n      etherscanBaseEndpoint\n    };\n  }\n  getCurveTxs = async (account=false,firstBlockNumber=0,endBlockNumber='latest',enabledTokens=[]) => {\n    const results = await this.getEtherscanTxs(account,firstBlockNumber,endBlockNumber,enabledTokens);\n    // results = results ? Object.values(results) : [];\n    return this.filterCurveTxs(results,enabledTokens);\n  }\n  saveEtherscanTxs = (endpoint,txs) => {\n    const txsToStore = {};\n    Object.keys(txs).forEach(txHash => {\n      const tx = txs[txHash];\n      if (tx.blockNumber && (!tx.status || tx.status.toLowerCase() !== 'pending')){\n        txsToStore[txHash] = tx;\n      }\n    });\n\n    // Save new cached data\n    const cachedRequest = {\n      data:{\n        result:txsToStore\n      }\n    };\n    this.saveCachedRequest(endpoint,false,cachedRequest);\n  }\n  getEtherscanTxs = async (account=false,firstBlockNumber=0,endBlockNumber='latest',enabledTokens=[],debug=false) => {\n    const {\n      results,\n      etherscanBaseTxs,\n      etherscanBaseEndpoint\n    } = await this.getEtherscanBaseTxs(account,firstBlockNumber,endBlockNumber,enabledTokens,debug);\n\n    // Initialize prevTxs\n    let etherscanTxs = {};\n    if (etherscanBaseTxs){\n      // Filter txs for token\n      etherscanTxs = await this.processStoredTxs(results,enabledTokens);\n    } else {\n      const allAvailableTokens = Object.keys(this.props.availableTokens);\n      // Save base endpoint with all available tokens\n      etherscanTxs = await this.filterEtherscanTxs(results,allAvailableTokens);\n\n      // Store filtered txs\n      if (etherscanTxs && Object.keys(etherscanTxs).length){\n        this.saveEtherscanTxs(etherscanBaseEndpoint,etherscanTxs);\n      }\n    }\n\n    if (debug){\n      console.log('DEBUG - getEtherscanTxs -',etherscanTxs);\n    }\n\n    return Object\n            .values(etherscanTxs)\n            .filter(tx => (tx.token && enabledTokens.includes(tx.token.toUpperCase())))\n            .sort((a,b) => (a.timeStamp < b.timeStamp ? -1 : 1));\n  }\n  filterCurveTxs = async (results,enabledTokens=[]) => {\n\n    if (!results || !results.length || typeof results.forEach !== 'function'){\n      return [];\n    }\n\n    const availableTokens = this.props.availableTokens ? this.props.availableTokens : this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    const curveTxs = results.filter( tx => (enabledTokens.includes(tx.token) && ['CurveIn','CurveOut','CurveZapIn','CurveZapOut','CurveTransferIn','CurveTransferOut','CurveDepositIn','CurveDepositOut'].includes(tx.action)) );\n\n    if (curveTxs.length){\n      curveTxs.sort((a,b) => (a.timeStamp < b.timeStamp ? -1 : 1));\n    }\n\n    return curveTxs;\n  }\n  filterEtherscanTxs = async (results,enabledTokens=[],processTxs=true,processStoredTxs=true) => {\n    if (!this.props.account || !results || !results.length || typeof results.forEach !== 'function'){\n      return [];\n    }\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let etherscanTxs = {};\n    let curveTransfersTxs = [];\n    let curveTransfersTxsToDelete = [];\n\n    // const idleTokensAddresses = Object.values(this.props.availableTokens).map( tokenConfig => (tokenConfig.idle.address) );\n    const curveZapContract = this.getGlobalConfig(['curve','zapContract']);\n    const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n    const curveSwapContract = this.getGlobalConfig(['curve','migrationContract']);\n    const curveDepositContract = this.getGlobalConfig(['curve','depositContract']);\n\n    // this.customLog('filterEtherscanTxs',enabledTokens,results);\n\n    enabledTokens.forEach(token => {\n      const tokenConfig = this.props.availableTokens[token];\n      const depositProxyContractInfo = this.getGlobalConfig(['contract','methods','deposit','proxyContract']);\n      const migrationContractAddr = tokenConfig.migration && tokenConfig.migration.migrationContract ? tokenConfig.migration.migrationContract.address : null;\n      const migrationContractOldAddrs = tokenConfig.migration && tokenConfig.migration.migrationContract && tokenConfig.migration.migrationContract.oldAddresses ? tokenConfig.migration.migrationContract.oldAddresses : [];\n      const tokenMigrationToolParams = this.getGlobalConfig(['tools','tokenMigration','props','migrationContract']);\n\n      const batchMigration = this.getGlobalConfig(['tools','batchMigration','props','availableTokens',tokenConfig.idle.token]);\n      const batchMigrationContractAddr = batchMigration && batchMigration.migrationContract ? batchMigration.migrationContract.address : null;\n\n      // const curveEnabled = this.getGlobalConfig(['curve','enabled']);\n      const curveTokenConfig = this.getGlobalConfig(['curve','availableTokens',tokenConfig.idle.token]);\n\n      results.forEach( tx => {\n        let tokenDecimals = tokenConfig.decimals;\n        const idleToken = tokenConfig.idle.token;\n        const internalTxs = results.filter(r => r.hash === tx.hash);\n        const isRightToken = internalTxs.length>1 && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase()).length>0;\n        const isSendTransferTx = internalTxs.length === 1 && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isReceiveTransferTx = internalTxs.length === 1 && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isBatchMigrationTx = batchMigrationContractAddr && tx.from.toLowerCase() === batchMigrationContractAddr.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase();\n\n        const isDepositInternalTx = isRightToken && internalTxs.find( iTx => iTx.from.toLowerCase() === this.props.account.toLowerCase() && (iTx.to.toLowerCase() === tokenConfig.idle.address.toLowerCase() || (depositProxyContractInfo && iTx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase() && internalTxs.filter(iTx2 => iTx2.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length>0 )) );\n        const isRedeemInternalTx = isRightToken && internalTxs.find( iTx => iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && internalTxs.filter(iTx2 => iTx2.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length && iTx.to.toLowerCase() === this.props.account.toLowerCase() );\n\n        const isMigrationTx = isBatchMigrationTx || (migrationContractAddr && (tx.from.toLowerCase() === migrationContractAddr.toLowerCase() || migrationContractOldAddrs.map((v) => { return v.toLowerCase(); }).includes(tx.from.toLowerCase()) ) && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase());\n        const isConversionTx = tokenMigrationToolParams && (tx.from.toLowerCase() === tokenMigrationToolParams.address.toLowerCase() || tokenMigrationToolParams.oldAddresses.map((v) => { return v.toLowerCase(); }).includes(tx.from.toLowerCase())) && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isDepositTx = isRightToken && !isMigrationTx && tx.from.toLowerCase() === this.props.account.toLowerCase() && (tx.to.toLowerCase() === tokenConfig.idle.address.toLowerCase() || (depositProxyContractInfo && tx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase() && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length>0 ));\n        const isRedeemTx = isRightToken && !isMigrationTx && !isDepositInternalTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length && tx.to.toLowerCase() === this.props.account.toLowerCase();\n        const isWithdrawTx = internalTxs.length>1 && internalTxs.filter(iTx => tokenConfig.protocols.map(p => p.address.toLowerCase()).includes(iTx.contractAddress.toLowerCase()) ).length>0 && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n\n        // const curveDepositTx = internalTxs.find( iTx => (iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && iTx.from.toLowerCase() === this.props.account.toLowerCase()) );\n        const idleTokenAddress = curveTokenConfig && curveTokenConfig.address ? curveTokenConfig.address : tokenConfig.idle.address;\n\n        // Check Curve\n        const curveTx = internalTxs.find( tx => (tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && (tx.to.toLowerCase() === this.props.account.toLowerCase() || tx.from.toLowerCase() === this.props.account.toLowerCase()) ) );\n        const isCurveTx = curveTx !== undefined;\n\n        const isCurveDepositTx = isCurveTx && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase() && tx.to.toLowerCase() === curveSwapContract.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveRedeemTx = isCurveTx && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveSwapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveDepositIn = isCurveTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.to.toLowerCase() === curveDepositContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveDepositOut = isCurveTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveDepositContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveZapIn = isCurveTx && tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveZapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveZapOut = isCurveTx && tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.to.toLowerCase() === curveZapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveTransferOut = tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && !isCurveZapOut && !isCurveRedeemTx && /*internalTxs[internalTxs.length-1] === tx &&*/ tx.from.toLowerCase() === this.props.account.toLowerCase();\n        const isCurveTransferIn = tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && !isCurveZapIn && !isCurveDepositTx && /*internalTxs[internalTxs.length-1] === tx &&*/ tx.to.toLowerCase() === this.props.account.toLowerCase();\n\n        const isSwapOutTx = !isCurveTx && !isSendTransferTx && !isWithdrawTx && !isRedeemInternalTx && !etherscanTxs[tx.hash] && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isSwapTx = !isCurveTx && !isReceiveTransferTx && !isConversionTx && !isDepositInternalTx && !etherscanTxs[tx.hash] && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n\n        // if (tx.hash.toLowerCase() === '0x599a2e7b0094b0a943ffb1d520cb47598dcf3764145c33824e3b032d91ccc489'.toLowerCase()){\n        //   debugger;\n        // }\n\n        if (isSendTransferTx || isReceiveTransferTx || isMigrationTx || isDepositTx || isRedeemTx || isSwapTx || isSwapOutTx || isWithdrawTx || isConversionTx || isCurveDepositTx || isCurveRedeemTx || isCurveZapIn || isCurveZapOut || isCurveTransferOut || isCurveTransferIn || isCurveDepositIn || isCurveDepositOut){\n\n          let action = null;\n          let hashKey = tx.hash;\n\n          if (isDepositTx){\n            action = 'Deposit';\n          } else if (isRedeemTx){\n            action = 'Redeem';\n          } else if (isMigrationTx || isConversionTx){\n            action = 'Migrate';\n          } else if (isSendTransferTx){\n            action = 'Send';\n          } else if (isReceiveTransferTx){\n            action = 'Receive';\n          } else if (isSwapTx){\n            action = 'Swap';\n          } else if (isSwapOutTx){\n            action = 'SwapOut';\n          } else if (isWithdrawTx){\n            action = 'Withdraw';\n          } else if (isCurveDepositTx){\n            action = 'CurveIn';\n          } else if (isCurveRedeemTx){\n            action = 'CurveOut';\n          } else if (isCurveZapIn){\n            action = 'CurveZapIn';\n          } else if (isCurveZapOut){\n            action = 'CurveZapOut';\n          } else if (isCurveDepositIn){\n            action = 'CurveDepositIn';\n          } else if (isCurveDepositOut){\n            action = 'CurveDepositOut';\n          } else if (isCurveTransferIn){\n            action = 'CurveTransferIn';\n          } else if (isCurveTransferOut){\n            action = 'CurveTransferOut';\n          }\n\n          let curveTokens = null;\n          if (isCurveTx){\n            hashKey += '_'+tx.tokenSymbol;\n            curveTokens = this.fixTokenDecimals(curveTx.value,curvePoolContract.decimals);\n\n            // Add action for curve tokens transfers\n            if ((isCurveTransferIn || isCurveTransferOut)){\n              hashKey+='_'+action;\n            }\n          }\n\n          // this.customLog('SAVE!',action);\n\n          if (tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()){\n            tokenDecimals = 18;\n          } else if (isCurveTx){\n            tokenDecimals = parseInt(tx.tokenDecimal);\n          }\n\n          // Sum the value if already processed\n          if (etherscanTxs[hashKey]){\n            // Prevent second internal tx to sum SwapOut original value\n            switch (etherscanTxs[hashKey].action){\n              case 'SwapOut':\n                if (etherscanTxs[hashKey].action !== action && isRedeemTx){\n                  etherscanTxs[hashKey].tokenValue = this.fixTokenDecimals(tx.value,tokenDecimals);\n                }\n              break;\n              default:\n                if (!curveTx){\n                  const newValue = etherscanTxs[hashKey].value.plus(this.fixTokenDecimals(tx.value,tokenDecimals));\n                  etherscanTxs[hashKey].value = newValue;\n                }\n              break;\n            }\n          } else {\n            // Insert tx in curve transfers buffer\n            if (isCurveTransferIn || isCurveTransferOut){\n              if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())){\n                curveTokens = this.fixTokenDecimals(tx.value,curvePoolContract.decimals);\n                curveTransfersTxs.push({...tx, hashKey, token, idleToken, curveTokens, action, value: this.fixTokenDecimals(tx.value,tokenDecimals)});\n              }\n            } else {\n              etherscanTxs[hashKey] = ({...tx, hashKey, token, idleToken, curveTokens, action, value: this.fixTokenDecimals(tx.value,tokenDecimals)});\n\n              // Delete curveTransfers\n              if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())){\n                curveTransfersTxsToDelete.push(tx.hash.toLowerCase());\n              }\n\n              // Take right tokenSymbol\n              switch (action){\n                case 'Withdraw':\n                  const iTxs = internalTxs.filter(iTx => (iTx !== tx));\n                  if (iTxs.length>0){\n                    const iTx = iTxs[0];\n                    etherscanTxs[hashKey].withdrawnValue = this.fixTokenDecimals(iTx.value,iTx.tokenDecimal);\n                    etherscanTxs[hashKey].tokenSymbol = iTx.tokenSymbol;\n                  }\n                break;\n                case 'CurveIn':\n                case 'CurveOut':\n                case 'CurveZapIn':\n                case 'CurveZapOut':\n                case 'CurveDepositIn':\n                case 'CurveDepositOut':\n                  etherscanTxs[hashKey].tokenSymbol = token;\n                break;\n                default:\n                break;\n              }\n            }   \n          }\n        }\n      });\n    });\n    \n    curveTransfersTxs.forEach( tx => {\n      if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())){\n        etherscanTxs[tx.hashKey] = tx;\n      }\n    });\n  \n    if (processTxs){\n      etherscanTxs = await this.processEtherscanTransactions(etherscanTxs,enabledTokens,processStoredTxs);\n    }\n\n    // console.log('etherscanTxs',etherscanTxs);\n\n    return etherscanTxs;\n  }\n  addStoredTransaction = (txKey,transaction) => {\n\n    const account = this.props && this.props.account ? this.props.account : null;\n    const selectedToken = this.props && this.props.selectedToken ? this.props.selectedToken : null;\n\n    if (!account || !selectedToken || !this.props.availableTokens || !this.props.availableTokens[selectedToken]){\n      return false;\n    }\n\n    const tokenConfig = this.props.availableTokens[selectedToken];\n    const tokenKey = tokenConfig.idle.token;\n\n    let storedTxs = this.getStoredTransactions();\n    if (!storedTxs[account]){\n      storedTxs[account] = {};\n    }\n\n    if (!storedTxs[account][tokenKey]){\n      storedTxs[account][tokenKey] = {};\n    }\n\n    storedTxs[account][tokenKey][txKey] = transaction;\n    this.updateStoredTransactions(storedTxs);\n  }\n  updateStoredTransactions = transactions => {\n    this.setLocalStorage('transactions',JSON.stringify(transactions));\n  }\n  /*\n  Merge storedTxs with this.props.transactions\n  */\n  getStoredTransactions = (account=null,tokenKey=null,selectedToken=null) => {\n    const storedTxs = this.getStoredItem('transactions',true,{});\n    const transactions = this.props.transactions ? { ...this.props.transactions } : {};\n    let output = storedTxs;\n\n    if (account){\n      if (storedTxs[account]){\n        output = storedTxs[account];\n        if (tokenKey){\n          output = output[tokenKey] ? output[tokenKey] : {};\n\n          if (selectedToken){\n            Object.keys(transactions).forEach(txKey => {\n              const tx = transactions[txKey];\n              if (!output[txKey] && tx.token && tx.token.toUpperCase() === selectedToken.toUpperCase()){\n                output[txKey] = transactions[txKey];\n              }\n            });\n          }\n        }\n      } else {\n        output = {};\n      }\n    }\n\n    return output;\n  }\n  processEtherscanTransactions = async (etherscanTxs,enabledTokens=[],processStoredTxs=true) => {\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let txReceipts = {};\n    let storedTxs = this.getStoredTransactions();\n\n    // Init storedTxs for pair account-token if empty\n    if (typeof storedTxs[this.props.account] !== 'object'){\n      storedTxs[this.props.account] = {};\n    }\n\n    // Take base tokens addresses and configs\n    const baseTokensConfigs = {};\n    const baseTokensAddresses = [];\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n    Object.keys(curveAvailableTokens).forEach( token => {\n      const curveTokenConfig = curveAvailableTokens[token];\n      const baseTokenConfig = this.getGlobalConfig(['stats','tokens',curveTokenConfig.baseToken]);\n      const baseTokenAddress = baseTokenConfig.address.toLowerCase();\n      baseTokensConfigs[baseTokenAddress] = baseTokenConfig;\n      baseTokensConfigs[baseTokenAddress].token = curveTokenConfig.baseToken;\n      baseTokensAddresses.push(baseTokenAddress);\n    });\n\n    const curveZapContract = this.getGlobalConfig(['curve','zapContract']);\n    // const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n    // const curveSwapContract = this.getGlobalConfig(['curve','migrationContract']);\n    // const curveDepositContract = this.getGlobalConfig(['curve','depositContract']);\n\n    await this.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const tokenKey = tokenConfig.idle.token;\n      const idleToken = tokenConfig.idle.token;\n\n      // Init storedTxs for pair account-token if empty\n      if (typeof storedTxs[this.props.account][tokenKey] !== 'object'){\n        storedTxs[this.props.account][tokenKey] = {};\n      }\n\n      const minedTxs = {...storedTxs[this.props.account][tokenKey]};\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        await this.asyncForEach(filteredTxs,async (tx,index) => {\n          const txKey = `tx${tx.timeStamp}000`;\n          const storedTx = storedTxs[this.props.account][tokenKey][txKey] ? storedTxs[this.props.account][tokenKey][txKey] : tx;\n\n          let tokenPrice = null;\n          \n          if (storedTx.tokenPrice && !this.BNify(storedTx.tokenPrice).isNaN()){\n            tokenPrice = this.BNify(storedTx.tokenPrice);\n          } else {\n            tokenPrice = await this.getIdleTokenPrice(tokenConfig,tx.blockNumber,tx.timeStamp);\n            storedTx.tokenPrice = tokenPrice;\n          }\n\n          let idleTokens = this.BNify(tx.value);\n          let tokensTransfered = tokenPrice.times(idleTokens);\n\n          // Add transactionHash to storedTx\n          if (!storedTx.transactionHash){\n            storedTx.transactionHash = tx.hash;\n          }\n\n          // Deposited\n          switch (tx.action){\n            case 'Send':\n            case 'Receive':\n            case 'Swap':\n            case 'SwapOut':\n            case 'Migrate':\n              if (!storedTx.tokenAmount){\n                storedTx.idleTokens = idleTokens;\n                storedTx.value = tokensTransfered;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.tokenSymbol = selectedToken;\n              }\n            break;\n            case 'Deposit':\n            case 'Redeem':\n              if (!storedTx.tokenAmount){\n                storedTx.value = idleTokens;\n                storedTx.tokenAmount = idleTokens;\n                storedTx.idleTokens = idleTokens.div(tokenPrice);\n              }\n            break;\n            case 'Withdraw':\n              if (!storedTx.tokenAmount){\n                storedTx.idleTokens = idleTokens;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.value = storedTx.withdrawnValue;\n              }\n            break;\n            case 'CurveIn':\n            case 'CurveOut':\n              if (!storedTx.tokenAmount){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.idleTokens = idleTokens;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n            break;\n            case 'CurveTransferIn':\n            case 'CurveTransferOut':\n              if (!storedTx.curveTokenPrice){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n                storedTx.tokenAmount = this.BNify(storedTx.curveTokens).times(storedTx.curveTokenPrice);\n              }\n\n              storedTx.idleTokens = this.BNify(0);\n            break;\n            case 'CurveZapIn':\n            case 'CurveZapOut':\n              if (!storedTx.curveTokenPrice){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n\n              if (!storedTx.tokenAmount){\n\n                storedTx.tokenAmount = this.BNify(0);\n                storedTx.idleTokens = this.BNify(0);\n\n                const curveTxReceipt = txReceipts[tx.hashKey] ? txReceipts[tx.hashKey] : await (new Promise( async (resolve, reject) => {\n                  this.props.web3.eth.getTransactionReceipt(tx.hash,(err,tx)=>{\n                    if (err){\n                      reject(err);\n                    }\n                    resolve(tx);\n                  });\n                }));\n\n                if (curveTxReceipt){\n\n                  // Save receipt\n                  if (!txReceipts[tx.hashKey]){\n                    txReceipts[tx.hashKey] = curveTxReceipt;\n                  }\n\n                  const filteredLogs = curveTxReceipt.logs.filter( log => (baseTokensAddresses.includes(log.address.toLowerCase()) && log.topics[log.topics.length-1].toLowerCase() === `0x00000000000000000000000${curveZapContract.address.replace('x','').toLowerCase()}` ) );\n\n                  this.customLog('filteredLogs',filteredLogs);\n\n                  if (filteredLogs && filteredLogs.length){\n                    filteredLogs.forEach( log => {\n                      let tokenAmount = parseInt(log.data,16);\n                      const baseTokensConfig = baseTokensConfigs[log.address.toLowerCase()];\n                      const tokenDecimals = baseTokensConfig.decimals;\n                      tokenAmount = this.fixTokenDecimals(tokenAmount,tokenDecimals);\n                      storedTx.tokenAmount = storedTx.tokenAmount.plus(tokenAmount);\n                      this.customLog('Add tokenAmount ('+tx.hash+')',baseTokensConfig.token,tokenAmount.toFixed(5),storedTx.tokenAmount.toFixed(5));\n                    });\n                  }\n                }\n              }\n            break;\n            case 'CurveDepositIn':\n            case 'CurveDepositOut':\n              if (!storedTx.curveTokenPrice){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n\n              storedTx.tokenAmount = this.BNify(storedTx.value);\n\n              if (!storedTx.idleTokens){\n\n                const curveTxReceipt = txReceipts[tx.hashKey] ? txReceipts[tx.hashKey] : await (new Promise( async (resolve, reject) => {\n                  this.props.web3.eth.getTransactionReceipt(tx.hash,(err,tx)=>{\n                    if (err){\n                      reject(err);\n                    }\n                    resolve(tx);\n                  });\n                }));\n\n                if (curveTxReceipt){\n                  const curveTokenConfig = this.getGlobalConfig(['curve','availableTokens',idleToken]);\n                  const idleTokenDecimals = curveTokenConfig && curveTokenConfig.decimals ? curveTokenConfig.decimals : 18;\n                  const idleTokenAddress = curveTokenConfig && curveTokenConfig.address ? curveTokenConfig.address : tokenConfig.idle.address;\n\n                  // Save receipt\n                  if (!txReceipts[tx.hashKey]){\n                    txReceipts[tx.hashKey] = curveTxReceipt;\n                  }\n\n                  const filteredLogs = curveTxReceipt.logs.filter( log => (log.address.toLowerCase()===idleTokenAddress ) );\n                  if (filteredLogs && filteredLogs.length){\n                    idleTokens = parseInt(filteredLogs[0].data,16);\n                    idleTokens = this.fixTokenDecimals(idleTokens,idleTokenDecimals);\n                    storedTx.idleTokens = idleTokens;\n                  }\n                }\n              }\n            break;\n            default:\n            break;\n          }\n            \n          // Save token for future filtering\n          storedTx.token = selectedToken;\n\n          // Save processed tx\n          etherscanTxs[tx.hashKey] = storedTx;\n\n          // Store processed Tx\n          storedTxs[this.props.account][tokenKey][txKey] = storedTx;\n\n          // Remove from minted Txs\n          delete minedTxs[txKey];\n        });\n      }\n\n      // Process Stored txs\n      if (processStoredTxs){\n        etherscanTxs = await this.processStoredTxs(etherscanTxs,[selectedToken],this.props.transactions);\n      }\n    });\n\n    // Update Stored txs\n    if (storedTxs){\n      this.updateStoredTransactions(storedTxs);\n    }\n\n    return etherscanTxs;\n  }\n  processStoredTxs = async (etherscanTxs,enabledTokens=[],txsToProcess=null) => {\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let storedTxs = this.getStoredItem('transactions',true,{})\n\n    // Init storedTxs\n    if (!storedTxs[this.props.account]){\n      storedTxs[this.props.account] = {};\n    }\n\n    etherscanTxs = Object.assign({},etherscanTxs);\n\n    const networkId = this.getGlobalConfig(['network','requiredNetwork']);\n\n    // this.customLog('Processing stored txs',enabledTokens);\n\n    await this.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const tokenKey = tokenConfig.idle.token;\n\n      // Init storedTxs\n      if (!storedTxs[this.props.account][tokenKey]){\n        storedTxs[this.props.account][tokenKey] = {};\n      }\n\n      txsToProcess = txsToProcess && Object.values(txsToProcess).length ? txsToProcess : this.getStoredTransactions(this.props.account,tokenKey,selectedToken);\n      \n      // this.customLog('txsToProcess',selectedToken,txsToProcess);\n\n      // if (!Object.values(txsToProcess).length && selectedToken==='DAI' && Object.values(this.props.transactions).length>0){\n      //   debugger;\n      // }\n\n      // Debug transactions\n      /*\n      txsToProcess['xxxxx'] = {\n        status:'success',\n        created:Date.now(),\n        method:'executeMetaTransaction',\n        token:selectedToken.toUpperCase(),\n        transactionHash:'0x000000000000000000000000000'\n      };\n      */\n\n      await this.asyncForEach(Object.keys(txsToProcess),async (txKey,i) => {\n        const tx = txsToProcess[txKey];\n\n        // Skip wrong token\n        if (!tx || !tx.token || tx.token.toUpperCase() !== selectedToken.toUpperCase() || (tx.networkId && parseInt(tx.networkId) !== parseInt(networkId))){\n          return false;\n        }\n\n        const isStoredTx = storedTxs && storedTxs[this.props.account] && storedTxs[this.props.account][tokenKey] && storedTxs[this.props.account][tokenKey][txKey];\n\n        const allowedMethods = {\n          mintIdleToken:'Deposit',\n          redeemIdleToken:'Redeem',\n          migrateFromToIdle:'Migrate',\n          mintIdleTokensProxy:'Deposit',\n          migrateFromAaveToIdle:'Migrate',\n          migrateFromIearnToIdle:'Migrate',\n          executeMetaTransaction:'Migrate',\n          migrateFromFulcrumToIdle:'Migrate',\n          migrateFromCompoundToIdle:'Migrate',\n        };\n        const pendingStatus = ['pending','started'];\n        const txSucceeded = tx.status === 'success';\n        const txPending = pendingStatus.includes(tx.status);\n        const isMetaTx = tx.method === 'executeMetaTransaction';\n        const txHash = tx.transactionHash ? tx.transactionHash : null;\n        const methodIsAllowed = Object.keys(allowedMethods).includes(tx.method);\n\n        // Skip transaction if already present in etherscanTxs with same status\n        if (txHash && etherscanTxs[txHash] && etherscanTxs[txHash].tokenPrice){\n          return false;\n        }\n\n        if (txPending && txHash && !etherscanTxs[txHash] && methodIsAllowed && tx.params.length){\n          // this.customLog('processStoredTxs',tx.method,tx.status,tx.params);\n          const isMigrationTx = allowedMethods[tx.method] === 'Migrate';\n          const decimals = isMigrationTx ? 18 : tokenConfig.decimals;\n          etherscanTxs[`t${tx.created}`] = {\n            status:'Pending',\n            token:selectedToken,\n            action:allowedMethods[tx.method],\n            timeStamp:parseInt(tx.created/1000),\n            hash:txHash ? tx.transactionHash : null,\n            tokenSymbol:isMigrationTx ? tokenConfig.idle.token : selectedToken,\n            value: tx.value ? tx.value : this.fixTokenDecimals(tx.params[0],decimals).toString()\n          };\n\n          return false;\n        }\n\n        // Skip invalid txs\n        if (!txSucceeded || !txHash || !methodIsAllowed){\n          return false;\n        }\n\n        let realTx = tx.realTx ? tx.realTx : null;\n\n        if (!realTx){\n          // this.customLog('loadTxs - getTransaction',tx.transactionHash);\n          realTx = await (new Promise( async (resolve, reject) => {\n            this.props.web3.eth.getTransaction(tx.transactionHash,(err,txReceipt)=>{\n              if (err){\n                reject(err);\n              }\n              resolve(txReceipt);\n            });\n          }));\n        }\n\n        // this.customLog('realTx (localStorage)',realTx);\n\n        // Skip txs from other wallets if not meta-txs\n        if (!realTx || (!isMetaTx && realTx.from.toLowerCase() !== this.props.account.toLowerCase())){\n          return false;\n        }\n\n        const tokenPrice = await this.getIdleTokenPrice(tokenConfig,realTx.blockNumber,realTx.timeStamp);\n\n        realTx.status = 'Completed';\n        realTx.action = allowedMethods[tx.method];\n        realTx.contractAddress = tokenConfig.address;\n        realTx.timeStamp = parseInt(tx.created/1000);\n\n        let txValue = null;\n        switch (tx.method){\n          case 'mintIdleToken':\n          case 'mintIdleTokensProxy':\n            if (!tx.params){\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n              return false;\n            }\n\n            if (realTx.to.toLowerCase() !== tokenConfig.idle.address.toLowerCase()){\n              // Remove wrong contract tx\n              if (isStoredTx){\n                delete storedTxs[this.props.account][tokenKey][txKey];\n              }\n              // this.customLog('Skipped deposit tx '+tx.transactionHash+' - wrong contract');\n              return false;\n            }\n\n            txValue = tx.params ? this.fixTokenDecimals(tx.params[0],tokenConfig.decimals).toString() : 0;\n            if (!txValue){\n              // this.customLog('Skipped deposit tx '+tx.transactionHash+' - value is zero ('+txValue+')');\n              return false;\n            }\n\n            realTx.value = txValue;\n            realTx.tokenAmount = txValue;\n          break;\n          case 'redeemIdleToken':\n            if (!tx.params){\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n              return false;\n            }\n\n            if (!realTx.tokenPrice){\n              const redeemedValueFixed = this.fixTokenDecimals(tx.params[0],18).times(tokenPrice);\n              realTx.tokenPrice = tokenPrice;\n              realTx.value = redeemedValueFixed;\n              realTx.tokenAmount = redeemedValueFixed;\n            }\n          break;\n          case 'executeMetaTransaction':\n            let executeMetaTransactionReceipt = tx.txReceipt ? tx.txReceipt : null;\n\n            if (!executeMetaTransactionReceipt){\n              executeMetaTransactionReceipt = await (new Promise( async (resolve, reject) => {\n                this.props.web3.eth.getTransactionReceipt(tx.transactionHash,(err,tx)=>{\n                  if (err){\n                    reject(err);\n                  }\n                  resolve(tx);\n                });\n              }));\n            }\n\n            if (!executeMetaTransactionReceipt){\n              return false;\n            }\n\n            // Save txReceipt into the tx\n            if (!tx.txReceipt){\n              tx.txReceipt = executeMetaTransactionReceipt;\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n            }\n\n            let action = null;\n            let executeMetaTransactionContractAddr = null;\n            let executeMetaTransactionInternalTransfers = [];\n            const IdleProxyMinterInfo = this.getGlobalConfig(['contract','deposit','proxyContract']);\n\n            // Handle migration tx\n            if (tokenConfig.migration && tokenConfig.migration.oldContract){\n              if (executeMetaTransactionReceipt.logs){\n                executeMetaTransactionContractAddr = tokenConfig.migration.oldContract.address.replace('x','').toLowerCase();\n                executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n              } else if (executeMetaTransactionReceipt.events){\n                executeMetaTransactionInternalTransfers = Object.values(executeMetaTransactionReceipt.events).filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase(); });\n              }\n\n              if (executeMetaTransactionInternalTransfers.length){\n                action = 'Migrate';\n              }\n            }\n\n            // Handle deposit tx\n            if (!executeMetaTransactionInternalTransfers.length){\n              if (executeMetaTransactionReceipt.logs){\n                executeMetaTransactionContractAddr = tokenConfig.idle.address.replace('x','').toLowerCase();\n                executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n\n                // Handle deposit made with proxy contract\n                if (!executeMetaTransactionInternalTransfers.length && IdleProxyMinterInfo){\n                  executeMetaTransactionContractAddr = IdleProxyMinterInfo.address.replace('x','').toLowerCase();\n                  executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n                }\n              } else if (executeMetaTransactionReceipt.events){\n                executeMetaTransactionInternalTransfers = Object.values(executeMetaTransactionReceipt.events).filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase(); });\n              }\n\n              if (executeMetaTransactionInternalTransfers.length){\n                action = 'Deposit';\n              }\n            }\n\n            if (!executeMetaTransactionInternalTransfers.length){\n              return false;\n            }\n\n            const internalTransfer = executeMetaTransactionInternalTransfers[0];\n\n            const metaTxValue = internalTransfer.data ? parseInt(internalTransfer.data,16) : (internalTransfer.raw && internalTransfer.raw.data) ? parseInt(internalTransfer.raw.data,16) : null;\n\n            if (!metaTxValue){\n              return false;\n            }\n\n            const metaTxValueFixed = this.fixTokenDecimals(metaTxValue,tokenConfig.decimals);\n            realTx.action = action;\n            realTx.value = metaTxValueFixed;\n            realTx.tokenAmount = metaTxValueFixed;\n            // this.customLog(metaTxValueFixed.toString());\n          break;\n          case 'migrateFromCompoundToIdle':\n          case 'migrateFromFulcrumToIdle':\n          case 'migrateFromAaveToIdle':\n          case 'migrateFromIearnToIdle':\n          case 'migrateFromToIdle':\n            if (!tokenConfig.migration || !tokenConfig.migration.oldContract){\n              return false;\n            }\n\n            let migrationTxReceipt = tx.txReceipt ? tx.txReceipt : null;\n\n            if (!migrationTxReceipt){\n              migrationTxReceipt = await (new Promise( async (resolve, reject) => {\n                this.props.web3.eth.getTransactionReceipt(tx.transactionHash,(err,tx)=>{\n                  if (err){\n                    reject(err);\n                  }\n                  resolve(tx);\n                });\n              }));\n            }\n\n            if (!migrationTxReceipt){\n              return false;\n            }\n\n            // Save txReceipt into the tx\n            if (!tx.txReceipt){\n              tx.txReceipt = migrationTxReceipt;\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n            }\n\n            const migrationContractAddr = tokenConfig.migration.migrationContract.address.toLowerCase().replace('x','');\n            const contractAddress = tokenConfig.idle.address.toLowerCase().replace('x','');\n            const migrationTxInternalTransfers = migrationTxReceipt.logs.filter((tx) => { return tx.topics.length>=3 && tx.topics[tx.topics.length-2].toLowerCase() === `0x00000000000000000000000${migrationContractAddr}` && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${contractAddress}`; });\n\n            if (!migrationTxInternalTransfers.length){\n              return false;\n            }\n\n            const migrationInternalTransfer = migrationTxInternalTransfers.pop();\n\n            const decodedLogs = this.props.web3.eth.abi.decodeLog([\n              {\n                internalType: \"uint256\",\n                name: \"_token\",\n                type: \"uint256\"\n              },\n            ],migrationInternalTransfer.data,migrationInternalTransfer.topics);\n\n            if (!decodedLogs || !decodedLogs._token){\n              return false;\n            }\n\n            const migrationValue = decodedLogs._token;\n            const migrationValueFixed = this.fixTokenDecimals(migrationValue,tokenConfig.decimals);\n            realTx.value = migrationValueFixed.toString();\n          break;\n          default:\n          break;\n        }\n\n        realTx.tokenPrice = tokenPrice;\n        realTx.token = selectedToken;\n        realTx.tokenSymbol = selectedToken;\n        realTx.idleTokens = tokenPrice.times(this.BNify(realTx.value));\n\n        // Save processed tx\n        etherscanTxs[txHash] = realTx;\n        // etherscanTxs.push(realTx);\n\n        // Store processed Tx\n        if (!tx.realTx){\n          tx.realTx = realTx;\n          storedTxs[this.props.account][tokenKey][txKey] = tx;\n        }\n      });\n    });\n\n    // Update Stored Txs\n    if (storedTxs){\n      this.updateStoredTransactions(storedTxs);\n    }\n\n    return etherscanTxs;\n  }\n  saveCachedRequest = (endpoint,alias=false,data) => {\n    const key = alias ? alias : endpoint;\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    const timestamp = parseInt(Date.now()/1000);\n    cachedRequests[key] = {\n      data,\n      timestamp\n    };\n    return this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n  }\n  getCustomAddress = () => {\n    return this.getStoredItem('customAddress',false);\n  }\n  setCustomAddress = (customAddress) => {\n    return this.setLocalStorage('customAddress',customAddress);\n  }\n  getCachedRequest = (endpoint,alias=false) => {\n    const key = alias ? alias : endpoint;\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key]){\n      return cachedRequests[key].data;\n    }\n    return null;\n  }\n  makeRequest = async(endpoint,error_callback=false,config=null) => {\n    const data = await axios\n                  .get(endpoint,config)\n                  .catch(err => {\n                    if (typeof error_callback === 'function'){\n                      error_callback(err);\n                    }\n                  });\n    return data;\n  }\n  makeCachedRequest = async (endpoint,TTL=60,return_data=false,alias=false,config=null) => {\n    const key = alias ? alias : endpoint;\n    const timestamp = parseInt(Date.now()/1000);\n    \n    // Check if already exists\n    const cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key] && cachedRequests[key].timestamp && timestamp-cachedRequests[key].timestamp<TTL){\n      return (cachedRequests[key].data && return_data ? cachedRequests[key].data.data : cachedRequests[key].data);\n    }\n\n    const data = await this.makeRequest(endpoint,false,config);\n\n    cachedRequests[key] = {\n      data,\n      timestamp\n    };\n    this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n    return (data && return_data ? data.data : data);\n  }\n  getTransactionError = error => {\n    let output = 'error';\n    if (parseInt(error.code)){\n      const errorCode = parseInt(error.code);\n      switch (errorCode){\n        case 4001:\n          output = 'denied';\n        break;\n        default:\n          output = `error_${errorCode}`;\n        break;\n      }\n    } else if (error.message){\n      output = error.message.split(\"\\n\")[0]; // Take just the first line of the error\n    }\n\n    return output;\n  }\n  getGlobalConfigs = () => {\n    return globalConfigs;\n  }\n  getArrayPath = (path,array) => {\n    path = Object.assign([],path);\n    if (path.length>0){\n      const prop = path.shift();\n      if (!path.length){\n        return array[prop] ? array[prop] : null;\n      } else if (array[prop]) {\n        return this.getArrayPath(path,array[prop]);\n      }\n    }\n    return null;\n  }\n  getGlobalConfig = (path,configs=false) => {\n    configs = configs ? configs : globalConfigs;\n    if (path.length>0){\n      const prop = path.shift();\n      if (!path.length){\n        return configs[prop] ? configs[prop] : null;\n      } else if (configs[prop]) {\n        return this.getGlobalConfig(path,configs[prop]);\n      }\n    }\n    return null;\n  }\n  checkUrlOrigin = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n  }\n  checkUrlBeta = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.betaURL.toLowerCase());\n  }\n  sendGoogleAnalyticsEvent = async (eventData,callback=null) => {\n\n    const googleEventsInfo = globalConfigs.analytics.google.events;\n    const debugEnabled = googleEventsInfo.debugEnabled;\n    const originOk = window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n\n    if (googleEventsInfo.enabled && window.ga && ( debugEnabled || originOk)){\n\n      // Check if testnet postfix required\n      if (googleEventsInfo.addPostfixForTestnet){\n        // Postfix network name if not mainnet\n        if (globalConfigs.network.requiredNetwork !== 1){\n          const currentNetwork = globalConfigs.network.availableNetworks[globalConfigs.network.requiredNetwork];\n          eventData.eventCategory += `_${currentNetwork}`;\n        // Postfix test for debug\n        } else if (debugEnabled && !originOk) {\n          eventData.eventCategory += '_test';\n        }\n      }\n\n      await (new Promise( async (resolve, reject) => {\n        eventData.hitCallback = () => {\n          resolve(true);\n        };\n        eventData.hitCallbackFail = () => {\n          reject();\n        };\n\n        window.ga('send', 'event', eventData);\n      }));\n\n      if (typeof callback === 'function'){\n        callback();\n      }\n    }\n\n    if (typeof callback === 'function'){\n      callback();\n    }\n\n    return false;\n  }\n  createContract = async (name, address, abi) => {\n    try {\n      const contract = new this.props.web3.eth.Contract(abi, address);\n      return {name, contract};\n    } catch (error) {\n      this.customLogError(\"Could not create contract.\",name,address,error);\n    }\n    return null;\n  }\n  getWalletProvider = (defaultProvider=null) => {\n    return this.getStoredItem('walletProvider',false,defaultProvider);\n  }\n  simpleIDPassUserInfo = (userInfo,simpleID) => {\n    if (!userInfo.address && this.props.account){\n      userInfo.address = this.props.account;\n    }\n    if (!userInfo.provider){\n      userInfo.provider = this.getWalletProvider();\n    }\n    if (typeof userInfo.email !== 'undefined' && !userInfo.email){\n      delete userInfo.email;\n    }\n    if (!userInfo.address){\n      return false;\n    }\n    simpleID = simpleID ? simpleID : (this.props.simpleID ? this.props.simpleID : (typeof this.props.initSimpleID === 'function' ? this.props.initSimpleID() : null));\n    if (simpleID){\n      return simpleID.passUserInfo(userInfo);\n    }\n    return false;\n  }\n  getEtherscanTransactionUrl = (tx_address) => {\n    return tx_address ? 'https://etherscan.io/tx/'+tx_address : null;\n  }\n  getEtherscanAddressUrl = (address) => {\n    return address ? 'https://etherscan.io/address/'+address : null;\n  }\n  formatMoney = (amount, decimalCount = 2, decimal = \".\", thousands = \",\") => {\n    try {\n      decimalCount = Math.abs(decimalCount);\n      decimalCount = isNaN(decimalCount) ? 2 : decimalCount;\n\n      const negativeSign = amount < 0 ? \"-\" : \"\";\n\n      let i = parseInt(amount = Math.abs(Number(amount) || 0).toFixed(decimalCount)).toString();\n      let j = (i.length > 3) ? i.length % 3 : 0;\n\n      return negativeSign + (j ? i.substr(0, j) + thousands : '') + i.substr(j).replace(/(\\d{3})(?=\\d)/g, \"$1\" + thousands) + (decimalCount ? decimal + Math.abs(amount - i).toFixed(decimalCount).slice(2) : \"\");\n    } catch (e) {\n      return null;\n    }\n  }\n  getSnapshotProposals = async (activeOnly=false) => {\n\n    const cachedDataKey = `snapshotProposals_${activeOnly}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const whitelist = this.getGlobalConfig(['network','providers','snapshot','whitelist']).map( addr => addr.toLowerCase() );\n    const endpoint = this.getGlobalConfig(['network','providers','snapshot','endpoints','proposals']);\n    let proposals = await this.makeCachedRequest(endpoint,1440,true);\n\n    if (proposals){\n      proposals = Object.values(proposals);\n\n      const currTime = parseInt(Date.now()/1000);\n      if (activeOnly){\n        proposals =  proposals.filter( p => (p.msg.payload.start<=currTime && p.msg.payload.end>currTime) );\n      }\n\n      // console.log(proposals);\n\n      const validProposals = [];\n      await this.asyncForEach(proposals, async (p) => {\n        // Add proposal if ended\n        if (p.msg.payload.end<=currTime || whitelist.includes(p.address.toLowerCase())){\n          validProposals.push(p);\n        } else {\n          const blockNumber = p.msg.payload.snapshot;\n\n          let checkedStrategies = false;\n          await this.asyncForEach( p.msg.payload.metadata.strategies, async (s) => {\n            if (checkedStrategies){\n              return;\n            }\n            if (s.name==='erc20-balance-of'){\n              const tokenName = s.params.symbol;\n              const tokenContract = this.getContractByName(tokenName);\n              if (tokenContract){\n                const tokenBalance = await this.getTokenBalance(tokenName,p.address,true,blockNumber);\n                // console.log(p.relayerIpfsHash,p.address,s.name,tokenBalance ? tokenBalance.toFixed() : null);\n                if (tokenBalance && this.BNify(tokenBalance).gt(100)){\n                  checkedStrategies = true;\n                }\n              }\n            } else {\n              // checkedStrategies = true;\n            }\n\n            // console.log(p.relayerIpfsHash,p.address,s.name,checkedStrategies);\n          });\n          \n          // Add proposal is passed token balances check\n          if (checkedStrategies){\n            validProposals.push(p);\n          }\n        }\n      });\n\n      return this.setCachedData(cachedDataKey,validProposals);\n    }\n\n  }\n  getTokenApiData = async (address,isRisk=null,startTimestamp=null,endTimestamp=null,forceStartTimestamp=false,frequency=null,order=null,limit=null) => {\n    if (globalConfigs.network.requiredNetwork!==1 || !globalConfigs.stats.enabled){\n      return [];\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenApiData_${address}_${isRisk}_${frequency}_${order}_${limit}`;\n    let cachedData = this.getCachedData(cachedDataKey);\n\n    if (cachedData){\n      // Check for fittable start and end time\n      const filteredCachedData = cachedData.filter( c => ( (c.startTimestamp===null || (startTimestamp && c.startTimestamp<=startTimestamp)) && (c.endTimestamp===null || (endTimestamp && c.endTimestamp>=endTimestamp)) ) )\n\n      if (filteredCachedData && filteredCachedData.length>0){\n        const filteredData = filteredCachedData.pop().data;\n        if (filteredData){\n          return filteredData.filter( d => ((!startTimestamp || d.timestamp>=startTimestamp) && (!endTimestamp || d.timestamp<=endTimestamp)) );\n        }\n        return null;\n      }\n    // Initialize cachedData\n    } else {\n      cachedData = [];\n    }\n\n    const apiInfo = globalConfigs.stats.rates;\n    let endpoint = `${apiInfo.endpoint}${address}`;\n\n    if (startTimestamp || endTimestamp || isRisk !== null || frequency !== null){\n      const params = [];\n\n      if (startTimestamp && parseInt(startTimestamp)){\n        if (forceStartTimestamp){\n          params.push(`start=${startTimestamp}`);\n        } else {\n          const start = startTimestamp-(60*60*24*2); // Minus 1 day for Volume graph\n          params.push(`start=${start}`);\n        }\n      }\n\n      if (endTimestamp && parseInt(endTimestamp)){\n        params.push(`end=${endTimestamp}`);\n      }\n\n      if (isRisk !== null){\n        params.push(`isRisk=${isRisk}`);\n      }\n\n      if (frequency !== null && parseInt(frequency)){\n        params.push(`frequency=${frequency}`);\n      }\n\n      if (order !== null){\n        params.push(`order=${order}`);\n      }\n\n      if (limit !== null && parseInt(limit)){\n        params.push(`limit=${limit}`);\n      }\n\n      if (params.length){\n        endpoint += '?'+params.join('&');\n      }\n    }\n\n    const config = this.getGlobalConfig(['stats','config']);\n    let output = await this.makeRequest(endpoint,false,config);\n    if (!output){\n      return [];\n    }\n\n    const data = output.data;\n\n    let filteredData = null;\n    if (isRisk !== null){\n      filteredData = data.filter( d => ( d.isRisk === isRisk ) );\n    }\n\n    cachedData.push({\n      isRisk,\n      endTimestamp,\n      startTimestamp,\n      data:filteredData,\n    });\n\n    this.setCachedData(cachedDataKey,cachedData);\n\n    return data;\n  }\n  getTokenDecimals = async (contractName) => {\n    contractName = contractName ? contractName : this.props.selectedToken;\n    return await this.genericContractCall(contractName,'decimals');\n  }\n  getAvgApr = (aprs,allocations,totalAllocation) => {\n    if (aprs && allocations && totalAllocation){\n      let avgApr = Object.keys(aprs).reduce((aprWeighted,protocolAddr) => {\n        const allocation = this.BNify(allocations[protocolAddr]);\n        const apr = this.BNify(aprs[protocolAddr]);\n        return this.BNify(aprWeighted).plus(allocation.times(apr));\n      },0);\n\n      if (avgApr){\n        return this.BNify(avgApr).div(totalAllocation);\n      }\n    }\n    return null;\n  }\n  getFrequencySeconds = (frequency,quantity=1) => {\n    const frequency_seconds = {\n      hour:3600,\n      day:86400,\n      week:604800\n    };\n    return frequency_seconds[frequency]*quantity;\n  }\n  getProtocolInfoByAddress = (addr) => {\n    return this.props.tokenConfig.protocols.find(c => c.address.toLowerCase() === addr.toLowerCase());\n  }\n  integerValue = value => {\n    return this.BNify(value).integerValue(BigNumber.ROUND_FLOOR).toFixed();\n  }\n  normalizeTokenDecimals = tokenDecimals => {\n    return this.BNify(`1e${tokenDecimals}`);\n  }\n  normalizeTokenAmount = (tokenBalance,tokenDecimals,round=true) => {\n    const normalizedTokenDecimals = this.normalizeTokenDecimals(tokenDecimals);\n    return this.BNify(tokenBalance).times(normalizedTokenDecimals).integerValue(BigNumber.ROUND_FLOOR).toFixed();\n  }\n  fixTokenDecimals = (tokenBalance,tokenDecimals,exchangeRate=null) => {\n    const normalizedTokenDecimals = this.normalizeTokenDecimals(tokenDecimals);\n    let balance = this.BNify(tokenBalance).div(normalizedTokenDecimals);\n    if (exchangeRate && !exchangeRate.isNaN()){\n      balance = balance.times(exchangeRate);\n    }\n    return balance;\n  }\n  checkContractPaused = async (contractName=null) => {\n    contractName = contractName ? contractName : this.props.tokenConfig.idle.token;\n    const contractPaused = await this.genericContractCall(contractName, 'paused', [], {}).catch(err => {\n      this.customLogError('Generic Idle call err:', err);\n    });\n    // this.customLog('checkContractPaused',this.props.tokenConfig.idle.token,contractPaused);\n    return contractPaused;\n  }\n  getStoredItem = (key,parse_json=true,return_default=null) => {\n    let output = return_default;\n    if (window.localStorage){\n      const item = localStorage.getItem(key);\n      if (item){\n        output = item;\n        if (parse_json){\n          output = JSON.parse(item);\n        }\n      }\n    }\n    if (!output){\n      return return_default;\n    }\n    return output;\n  }\n  clearStoredData = (excludeKeys=[]) => {\n    if (window.localStorage){\n\n      if (!excludeKeys || !excludeKeys.length){\n        return window.localStorage.clear();\n      }\n\n      const storedKeysToRemove = [];\n      for (let i=0;i<window.localStorage.length;i++){\n        const storedKey = window.localStorage.key(i);\n        if (!excludeKeys.includes(storedKey)){\n          storedKeysToRemove.push(storedKey);\n        }\n      }\n      storedKeysToRemove.forEach((storedKey) => {\n        this.removeStoredItem(storedKey)\n      });\n    }\n  }\n  removeStoredItem = (key) => {\n    if (window.localStorage){\n      window.localStorage.removeItem(key);\n      return true;\n    }\n    return false;\n  }\n  setLocalStorage = (key,value,stringify=false) => {\n    if (window.localStorage){\n      try {\n        value = stringify ? JSON.stringify(value) : value;\n        window.localStorage.setItem(key,value);\n        return true;\n      } catch (error) {\n        // this.customLog('setLocalStorage',error);\n        window.localStorage.removeItem(key);\n      }\n    }\n    return false;\n  }\n  checkRebalance = async (tokenConfig) => {\n    if (!tokenConfig && this.props.tokenConfig){\n      tokenConfig = this.props.tokenConfig;\n    }\n    if (!tokenConfig){\n      return false;\n    }\n\n    const lastAllocationsPromises = [];\n    const allocations = await this.genericContractCall(tokenConfig.idle.token, 'getAllocations');\n\n    if (!allocations || !allocations.length){\n      return false;\n    }\n\n    for (let protocolIndex=0;protocolIndex<allocations.length;protocolIndex++){\n      const lastAllocationsPromise = new Promise( async (resolve, reject) => {\n        try{\n          const lastAllocations = await this.genericContractCall(tokenConfig.idle.token, 'lastAllocations',[protocolIndex]);\n          resolve(lastAllocations);\n        } catch (error){\n          console.log(error);\n          resolve(null);\n        }\n      });\n      lastAllocationsPromises.push(lastAllocationsPromise);\n    }\n\n    const newAllocations = await Promise.all(lastAllocationsPromises);\n\n    if (!allocations || !newAllocations){\n      return true;\n    }\n\n    const diff = allocations.filter( (alloc,index) => alloc !== newAllocations[index] );\n\n    return diff.length>0;\n  }\n  checkMigration = async (tokenConfig,account) => {\n\n    if (!tokenConfig || !account){\n      return false;\n    }\n\n    let migrationEnabled = false;\n    let oldContractBalance = null;\n    let oldContractTokenDecimals = null;\n    // let migrationContractApproved = false;\n    let oldContractBalanceFormatted = null;\n\n    // Check migration contract enabled and balance\n    if (tokenConfig.migration && tokenConfig.migration.enabled){\n      const oldContractName = tokenConfig.migration.oldContract.name;\n      const oldContract = this.getContractByName(oldContractName);\n      const migrationContract = this.getContractByName(tokenConfig.migration.migrationContract.name);\n\n      // this.customLog(oldContractName,tokenConfig.migration.migrationContract.name);\n\n      if (oldContract && migrationContract){\n        // Get old contract token decimals\n        oldContractTokenDecimals = await this.getTokenDecimals(oldContractName);\n\n        // this.customLog('Migration - token decimals',oldContractTokenDecimals ? oldContractTokenDecimals.toString() : null);\n\n        // Check migration contract approval\n        // migrationContractApproved = await this.checkMigrationContractApproved();\n\n        // this.customLog('Migration - approved',migrationContractApproved ? migrationContractApproved.toString() : null);\n\n        // Check old contractBalance\n        oldContractBalance = await this.getContractBalance(oldContractName,account);\n\n        if (oldContractBalance){\n          oldContractBalanceFormatted = this.fixTokenDecimals(oldContractBalance,oldContractTokenDecimals);\n          // Enable migration if old contract balance if greater than 0\n          migrationEnabled = this.BNify(oldContractBalance).gt(0);\n        }\n\n        // this.customLog('Migration - oldContractBalance',oldContractName,account,oldContractBalance,oldContractBalanceFormatted);\n      }\n    }\n\n    // Set migration contract balance\n    return {\n      migrationEnabled,\n      oldContractBalance,\n      oldContractTokenDecimals,\n      oldContractBalanceFormatted,\n    };\n  }\n\n  executeMetaTransaction = async (contract, userAddress, signedParameters, callback, callback_receipt) => {\n    try {\n\n      // const gasLimit = await contract.methods\n      //   .executeMetaTransaction(userAddress, ...signedParameters)\n      //   .estimateGas({ from: userAddress });\n\n      // this.customLog(gasLimit);\n\n      const gasPrice = await this.props.web3.eth.getGasPrice();\n\n      const tx = contract.methods\n        .executeMetaTransaction(userAddress, ...signedParameters)\n        .send({\n          from: userAddress,\n          gasPrice\n          // gasLimit\n        });\n\n      tx.on(\"transactionHash\", function(hash) {\n        this.customLog(`Transaction sent by relayer with hash ${hash}`);\n        callback_receipt()\n      }).once(\"confirmation\", function(confirmationNumber, receipt) {\n        this.customLog(\"Transaction confirmed on chain\",receipt);\n        callback_receipt(receipt);\n      });\n    } catch (error) {\n      this.customLog(error);\n      callback(null,error);\n    }\n  }\n\n  getSignatureParameters_v4 = signature => {\n    if (!this.props.web3.utils.isHexStrict(signature)) {\n      throw new Error(\n        'Given value \"'.concat(signature, '\" is not a valid hex string.')\n      );\n    }\n    var r = signature.slice(0, 66);\n    var s = \"0x\".concat(signature.slice(66, 130));\n    var v = \"0x\".concat(signature.slice(130, 132));\n    v = this.props.web3.utils.hexToNumber(v);\n    if (![27, 28].includes(v)) v += 27;\n    return {\n      r: r,\n      s: s,\n      v: v\n    };\n  };\n\n  constructMetaTransactionMessage = (nonce, chainId, functionSignature, contractAddress) => {\n    return ethereumjsABI.soliditySHA3(\n      [\"uint256\",\"address\",\"uint256\",\"bytes\"],\n      [nonce, contractAddress, chainId, toBuffer(functionSignature)]\n    );\n  }\n\n  checkBiconomyLimits = async (userAddress) => {\n    const biconomyInfo = this.getGlobalConfig(['network','providers','biconomy']);\n    const res = await this.makeRequest(`${biconomyInfo.endpoints.limits}?userAddress=${userAddress}&apiId=${biconomyInfo.params.apiId}`,null,{\n      headers:{\n        'x-api-key':biconomyInfo.params.apiKey\n      }\n    });\n\n    if (res && res.data){\n      return res.data;\n    }\n\n    return null;\n  }\n\n  sendTxWithPermit = async (contractName,methodName,methodParams,nonce,callback,callback_receipt) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      callback(null,'Contract not found');\n      return false;\n    }\n\n    if (!contract.methods[methodName]){\n      callback(null,'Method not found');\n      return false;\n    }\n\n    const functionSignature = contract.methods[methodName](...methodParams).encodeABI();\n\n    try{\n      const userAddress = this.props.account;\n      const chainId = this.getGlobalConfig(['network','requiredNetwork']);\n      const messageToSign = this.constructMetaTransactionMessage(nonce, chainId, functionSignature, contract._address);\n\n      const signature = await this.props.web3.eth.personal.sign(\n        \"0x\" + messageToSign.toString(\"hex\"),\n        userAddress\n      );\n\n      const { r, s, v } = this.getSignatureParameters_v4(signature);\n\n      this.contractMethodSendWrapper(contractName, methodName, methodParams.concat([nonce, r, s, v]), callback, callback_receipt);\n\n      return true;\n    } catch (error) {\n      callback(null,error);\n      return false;\n    }\n  }\n\n  buildBiconomyErc20ForwarderTx = async (contractName,tokenAddress,permitType,callData,gasLimit) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      return false;\n    }\n\n    console.log('Build Tx ',contract._address,tokenAddress,Number(gasLimit),callData);\n\n    //Create the call data that the recipient contract will receive\n    const tx = await this.props.erc20ForwarderClient.buildTx({\n      permitType,\n      data:callData,\n      token:tokenAddress,\n      to:contract._address,\n      txGas:Number(gasLimit)\n    });\n\n    return tx;\n  }\n\n  sendBiconomyTxWithErc20Forwarder = async (req,metaInfo,callback,callback_receipt) => {\n\n    let transactionHash = null;\n\n    try {\n      const txResponse = await this.props.erc20ForwarderClient.permitAndSendTxEIP712({req,metaInfo});\n      transactionHash = txResponse.txHash;\n      console.log('permitAndSendTxEIP712',transactionHash);\n    } catch (error) {\n      console.log('permitAndSendTxEIP712 ERROR',error);\n      callback(null,true);\n      return false;\n    }\n\n    if (!transactionHash){\n      console.log('!transactionHash ERROR');\n      callback(null,true);\n      return false;\n    }\n    \n    const tx = {\n      method:'mintIdleToken',\n      transactionHash\n    };\n    console.log('sendBiconomyTxWithErc20Forwarder',transactionHash);\n    callback_receipt(tx);\n\n    // fetch mined transaction receipt \n    const fetchReceiptIntervalId = window.setInterval(()=> {\n      this.props.web3.eth.getTransactionReceipt(transactionHash, (err, receipt)=> {\n        console.log('sendBiconomyTxWithErc20Forwarder',transactionHash,err,receipt);\n        if(!err && receipt){\n          window.clearInterval(fetchReceiptIntervalId);\n          tx.txReceipt = receipt;\n          tx.status = !err && receipt.status ? 'success' : 'error';\n\n          callback(tx,err);\n\n          if (typeof window.updateTransaction === 'function'){\n            window.updateTransaction(tx,transactionHash,tx.status,null);\n          }\n        }\n      });\n    }, 3000);\n\n    return true;\n  }\n\n  sendBiconomyTxWithPersonalSign = async (contractName,functionSignature,callback,callback_receipt) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      callback(null,'Contract not found');\n      return false;\n    }\n\n    try{\n      const userAddress = this.props.account;\n      const nonce = await contract.methods.getNonce(userAddress).call();\n      const chainId = this.getGlobalConfig(['network','requiredNetwork']);\n      const messageToSign = this.constructMetaTransactionMessage(nonce, chainId, functionSignature, contract._address);\n\n      const signature = await this.props.web3.eth.personal.sign(\n        \"0x\" + messageToSign.toString(\"hex\"),\n        userAddress\n      );\n\n      const { r, s, v } = this.getSignatureParameters_v4(signature);\n\n      this.contractMethodSendWrapper(contractName, 'executeMetaTransaction', [userAddress, functionSignature, r, s, v], callback, callback_receipt);\n\n      return true;\n    } catch (error) {\n      console.error(error);\n      callback(null,error);\n      return false;\n    }\n  }\n\n  signPermitEIP2612 = async (contractAddress, erc20Name, owner, spender, value, nonce, deadline, chainId) => {\n    if (chainId === undefined) {\n      const result = await this.props.web3.eth.getChainId();\n      chainId = parseInt(result);\n    }\n\n    const domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const permit = [\n      { name: \"owner\", type: \"address\" },\n      { name: \"spender\", type: \"address\" },\n      { name: \"value\", type: \"uint256\" },\n      { name: \"nonce\", type: \"uint256\" },\n      { name: \"deadline\", type: \"uint256\" },\n    ];\n\n    const domainData = {\n      version: \"2\",\n      name: erc20Name,\n      chainId: chainId,\n      verifyingContract: contractAddress\n    };\n\n    const message = {\n      owner,\n      spender,\n      value,\n      nonce,\n      deadline,\n    };\n\n    const data = JSON.stringify({\n      types: {\n        EIP712Domain: domain,\n        Permit: permit,\n      },\n      primaryType: \"Permit\",\n      domain: domainData,\n      message: message\n    });\n\n    return new Promise((resolve, reject) => {\n      this.props.web3.currentProvider.send({\n        jsonrpc: '2.0',\n        id: Date.now().toString().substring(9),\n        method: \"eth_signTypedData_v4\",\n        params: [owner, data],\n        from: owner\n      }, (error, res) => {\n        if (error) {\n          return reject(error);\n        }\n\n        resolve(res.result);\n      });\n    });\n  }\n\n  signPermit = async (baseContractName, holder, spenderContractName, addToNonce=0) => {\n    const baseContract = this.getContractByName(baseContractName);\n    const spenderContract = this.getContractByName(spenderContractName);\n\n    if (!baseContract || !spenderContract){\n      return false;\n    }\n\n    const result = await this.props.web3.eth.net.getId();\n    let chainId = parseInt(result);\n\n    const EIP712Domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const permitConfig = this.getGlobalConfig(['permit',baseContractName]);\n\n    // console.log('permitConfig',permitConfig);\n\n    const expiry = Math.round(new Date().getTime() / 1000 + 3600);\n    let nonce = permitConfig.nonceMethod ? await baseContract.methods[permitConfig.nonceMethod](holder).call() : null;\n    if (addToNonce>0){\n      nonce = parseInt(nonce)+parseInt(addToNonce);\n    }\n    nonce = nonce.toString();\n\n    const Permit = permitConfig.type;\n    const EIPVersion = permitConfig.EIPVersion;\n\n    const spender = spenderContract._address;\n    const verifyingContract = baseContract._address;\n\n    const permitName = permitConfig.name || baseContractName;\n\n    const domain = {\n      chainId,\n      name: permitName,\n      verifyingContract,\n      version: permitConfig.version.toString() || '1',\n    };\n\n    let message = {};\n\n    switch (EIPVersion){\n      case 2612:\n        const owner = holder;\n        const deadline = expiry;\n        // Unlimited allowance\n        const value = this.integerValue(this.BNify(2).pow(256).minus(1));\n        message = {\n          value,\n          nonce,\n          owner,\n          spender,\n          deadline\n        };\n      break;\n      default:\n        message = {\n          holder,\n          nonce,\n          expiry,\n          spender,\n          allowed: true,\n        };\n      break;\n    }\n\n    const data = JSON.stringify({\n      domain,\n      message,\n      types: {\n        Permit,\n        EIP712Domain\n      },\n      primaryType: 'Permit',\n    });\n\n    // console.log('Permit',JSON.parse(data));\n\n    return new Promise((resolve, reject) => {\n      this.props.web3.currentProvider.send({\n        from: holder,\n        jsonrpc: '2.0',\n        params: [holder, data],\n        method: 'eth_signTypedData_v4',\n        id: Date.now().toString().substring(9),\n      }, (error, response) => {\n        if (error || (response && response.error)) {\n          return resolve(null);\n        } else if (response && response.result) {\n          const signedParameters = this.getSignatureParameters_v4(response.result);\n          signedParameters.nonce = nonce;\n          signedParameters.expiry = expiry;\n          return resolve(signedParameters);\n        }\n      });\n    });\n  }\n\n  sendTxWithPermit = async (baseContractName, holder, spenderContractName, methodName, methodParams, callback, callback_receipt, callback_permit=null) => {\n\n    const baseContract = this.getContractByName(baseContractName);\n    const spenderContract = this.getContractByName(spenderContractName);\n\n    if (!baseContract || !spenderContract){\n      callback(null,'Contract not found');\n      return false;\n    }\n\n    const signedParameters = await this.signPermit(baseContractName, holder, spenderContractName);\n\n    if (signedParameters){\n      const { expiry, nonce, r, s, v } = signedParameters;\n      const permitParams = [expiry, v, r, s];\n\n      const methodAbi = spenderContract._jsonInterface.find( f => f.name === methodName );\n      const useNonce = methodAbi ? methodAbi.inputs.find( i => i.name === 'nonce' ) : true;\n      if (!isNaN(parseInt(nonce)) && useNonce){\n        permitParams.unshift(nonce);\n      }\n      const params = methodParams.concat(permitParams);\n      this.contractMethodSendWrapper(spenderContractName, methodName, params, callback, callback_receipt);\n    } else {\n      callback(null,'Permit cancelled');\n    }\n  }\n\n  sendSignedTx = async (contractName,contractAddress,functionSignature,callback,callback_receipt) => {\n\n    const EIP712Domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const MetaTransaction = [\n      { name: \"nonce\", type: \"uint256\" },\n      { name: \"from\", type: \"address\" },\n      { name: \"functionSignature\", type: \"bytes\" }\n    ];\n\n    const chainId = await this.props.web3.eth.getChainId();\n\n    const domainData = {\n      chainId,\n      version: '1',\n      name: contractName,\n      verifyingContract: contractAddress\n    };\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      callback(null,'Contract not found');\n      return false\n    }\n\n    let userAddress = this.props.account;\n    let nonce = await contract.methods.getNonce(userAddress).call();\n    let message = {};\n    message.nonce = nonce;\n    message.from = userAddress;\n    message.functionSignature = functionSignature;\n\n    const dataToSign = JSON.stringify({\n      types: {\n        EIP712Domain,\n        MetaTransaction\n      },\n      domain: domainData,\n      primaryType: \"MetaTransaction\",\n      message\n    });\n\n    // this.customLog('dataToSign',dataToSign);\n\n    this.props.web3.currentProvider.send(\n      {\n        jsonrpc: \"2.0\",\n        id: 999999999999,\n        from: userAddress,\n        method: \"eth_signTypedData_v4\",\n        params: [userAddress, dataToSign]\n      },\n      (error, response) => {\n        if (error || (response && response.error)) {\n          return callback(null,error);\n        } else if (response && response.result) {\n          const signedParameters = this.getSignatureParameters_v4(response.result);\n          const { r, s, v } = signedParameters;\n            \n          this.contractMethodSendWrapper(contractName, 'executeMetaTransaction', [userAddress, functionSignature, r, s, v], callback, callback_receipt);\n        }\n      }\n    );\n  }\n\n  checkTokenApproved = async (contractName,contractAddr,walletAddr) => {\n    const [\n      balance,\n      allowance\n    ] = await Promise.all([\n      this.getTokenBalance(contractName,walletAddr,false),\n      this.getAllowance(contractName,contractAddr,walletAddr)\n    ]);\n    this.customLog('checkTokenApproved',contractName,this.BNify(allowance).toFixed(),this.BNify(balance).toFixed(),(allowance && this.BNify(allowance).gte(this.BNify(balance))));\n    return allowance && this.BNify(allowance).gte(this.BNify(balance));\n  }\n  getAllowance = async (contractName,contractAddr,walletAddr) => {\n    if (!contractName || !contractAddr || !walletAddr){\n      return false;\n    }\n    this.customLog('getAllowance',contractName,contractAddr,walletAddr);\n    return await this.genericContractCall(\n      contractName, 'allowance', [walletAddr, contractAddr]\n    );\n  }\n  contractMethodSendWrapper = (contractName,methodName,params,callback,callback_receipt,txData) => {\n    this.props.contractMethodSendWrapper(contractName, methodName, params, null, (tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    }, null, txData);\n  }\n  disableERC20 = (contractName,address,callback,callback_receipt) => {\n    this.props.contractMethodSendWrapper(contractName, 'approve', [\n      address,\n      this.props.web3.utils.toTwosComplement('0') // max uint solidity\n    ],null,(tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    });\n  }\n  enableERC20 = (contractName,address,callback,callback_receipt) => {\n    this.props.contractMethodSendWrapper(contractName, 'approve', [\n      address,\n      this.props.web3.utils.toTwosComplement('-1') // max uint solidity\n    ],null,(tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    });\n  }\n  loadAssetField = async (field,token,tokenConfig,account,addGovTokens=true,addCurveApy=false) => {\n\n    let output = null;\n    const govTokens = this.getGlobalConfig(['govTokens']);\n\n    // Remove gov tokens for risk adjusted strategy\n    const strategyInfo = this.getGlobalConfig(['strategies',this.props.selectedStrategy]);\n    if (addGovTokens && strategyInfo && typeof strategyInfo.addGovTokens !== 'undefined'){\n      addGovTokens = strategyInfo.addGovTokens;\n    }\n\n    // Take available tokens for gov tokens fields\n    let govTokenAvailableTokens = null;\n    if (this.props.selectedStrategy && this.props.selectedToken){\n      const newTokenConfig = this.props.availableStrategies[this.props.selectedStrategy][this.props.selectedToken];\n      if (newTokenConfig){\n        govTokenAvailableTokens = {};\n        govTokenAvailableTokens[newTokenConfig.token] = newTokenConfig;\n      }\n    } else if (!Object.keys(govTokens).includes(token)){\n      govTokenAvailableTokens = {};\n      govTokenAvailableTokens[token] = tokenConfig;\n    }\n\n    switch (field){\n      case 'amountLentCurve':\n        const [\n          curveAvgSlippage,\n          curveAvgBuyPrice,\n          curveTokenBalance,\n        ] = await Promise.all([\n          this.getCurveAvgSlippage(),\n          this.getCurveAvgBuyPrice([],account),\n          this.getCurveTokenBalance(account,true),\n        ]);\n\n        if (curveAvgBuyPrice && curveTokenBalance){\n          output = this.BNify(curveTokenBalance).times(curveAvgBuyPrice);\n          if (curveAvgSlippage){\n            output = output.minus(output.times(curveAvgSlippage));\n          }\n          // this.customLog('amountLentCurve',curveTokenBalance.toFixed(6),curveAvgBuyPrice.toFixed(6),curveAvgSlippage.toString(),output.toFixed(6));\n        }\n      break;\n      case 'earningsPercCurve':\n        let [amountLentCurve1,redeemableBalanceCurve] = await Promise.all([\n          this.loadAssetField('amountLentCurve',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalanceCurve',token,tokenConfig,account)\n        ]);\n\n        if (amountLentCurve1 && redeemableBalanceCurve && amountLentCurve1.gt(0) && redeemableBalanceCurve.gt(0)){\n          output = redeemableBalanceCurve.div(amountLentCurve1).minus(1).times(100);\n          // this.customLog('earningsPercCurve',redeemableBalanceCurve.toFixed(6),amountLentCurve1.toFixed(6),output.toFixed(6));\n        }\n      break;\n      case 'curveApy':\n        output = await this.getCurveAPY();\n      break;\n      case 'curveAvgSlippage':\n        output = await this.getCurveAvgSlippage();\n      break;\n      case 'redeemableBalanceCurve':\n        output = await this.getCurveRedeemableIdleTokens(account);\n        // this.customLog('earningsPercCurve',output.toFixed(6));\n      break;\n      case 'redeemableBalanceCounterCurve':\n        let [\n          curveApy,\n          amountLentCurve,\n          redeemableBalanceCurveStart\n        ] = await Promise.all([\n          this.loadAssetField('curveApy',token,tokenConfig,account),\n          this.loadAssetField('amountLentCurve',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalanceCurve',token,tokenConfig,account),\n        ]);\n\n        let redeemableBalanceCurveEnd = null;\n\n        if (redeemableBalanceCurveStart && curveApy && amountLentCurve){\n          const earningPerYear = amountLentCurve.times(curveApy.div(100));\n          redeemableBalanceCurveEnd = redeemableBalanceCurveStart.plus(earningPerYear);\n          // this.customLog('redeemableBalanceCounterCurve',amountLentCurve.toFixed(6),redeemableBalanceCurveStart.toFixed(6),redeemableBalanceCurveEnd.toFixed(6));\n        }\n\n        output = {\n          redeemableBalanceCurveEnd,\n          redeemableBalanceCurveStart\n        };\n      break;\n      case 'earningsPerc':\n        let [amountLent1,redeemableBalance1] = await Promise.all([\n          this.loadAssetField('amountLent',token,tokenConfig,account,false),\n          this.loadAssetField('redeemableBalance',token,tokenConfig,account,false)\n        ]);\n\n        if (amountLent1 && redeemableBalance1 && amountLent1.gt(0)){\n          output = redeemableBalance1.div(amountLent1).minus(1).times(100);\n        }\n      break;\n      case 'daysFirstDeposit':\n        const depositTimestamp = await this.loadAssetField('depositTimestamp',token,tokenConfig,account);\n        if (depositTimestamp){\n          const currTimestamp = parseInt(Date.now()/1000);\n          output = (currTimestamp-depositTimestamp)/86400;\n        }\n      break;\n      case 'pool':\n        if (Object.keys(govTokens).includes(token)){\n          output = await this.getGovTokenPool(token, govTokenAvailableTokens);\n        } else {\n          output = await this.getTokenPool(tokenConfig,addGovTokens);\n        }\n      break;\n      case 'userDistributionSpeed':\n        switch (token){\n          case 'COMP':\n            output = await this.getCompUserDistribution(account,govTokenAvailableTokens);\n          break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getUserDistribution(account,govTokenAvailableTokens);\n          break;\n          default:\n          break;\n        }\n        if (output && !this.BNify(output).isNaN()){\n          output = this.BNify(output).div(1e18);\n          if (output){\n            output = this.fixDistributionSpeed(output,tokenConfig.distributionFrequency);\n          }\n        }\n      break;\n      case 'idleDistribution':\n        const idleGovToken = this.getIdleGovToken();\n        const tokenName = this.getGlobalConfig(['governance','props','tokenName']);\n        const govTokenConfig = this.getGlobalConfig(['govTokens',tokenName]);\n        output = await idleGovToken.getSpeed(tokenConfig.idle.address);\n\n        if (output){\n\n          output = this.fixTokenDecimals(output,govTokenConfig.decimals);\n\n          const blocksPerYear = this.BNify(this.getGlobalConfig(['network','blocksPerYear']));\n          switch (govTokenConfig.distributionFrequency){\n            case 'day':\n              const blocksPerDay = blocksPerYear.div(365.242199);\n              output = output.times(blocksPerDay);\n            break;\n            case 'week':\n              const blocksPerWeek = blocksPerYear.div(52.1429);\n              output = output.times(blocksPerWeek);\n            break;\n            case 'month':\n              const blocksPerMonth = blocksPerYear.div(12);\n              output = output.times(blocksPerMonth);\n            break;\n            case 'year':\n              output = output.times(blocksPerYear);\n            break;\n            default:\n            break;\n          }\n        }\n      break;\n      case 'distributionSpeed':\n        const selectedTokenConfig = govTokenAvailableTokens[this.props.selectedToken];\n        switch (token){\n          case 'COMP':\n            output = await this.getCompDistribution(selectedTokenConfig);\n          break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getSpeed(selectedTokenConfig.idle.address);\n          break;\n          default:\n          break;\n        }\n        if (output && !this.BNify(output).isNaN()){\n          output = this.BNify(output).div(1e18);\n        }\n      break;\n      case 'apr':\n        switch (token){\n          case 'COMP':\n            output = await this.getCompAvgApr(govTokenAvailableTokens);\n          break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getAvgApr(govTokenAvailableTokens);\n          break;\n          default:\n            const tokenAprs = await this.getTokenAprs(tokenConfig,false,addGovTokens);\n            if (tokenAprs && tokenAprs.avgApr !== null){\n              output = tokenAprs.avgApr;\n            }\n          break;\n        }\n      break;\n      case 'apy':\n        const tokenApys = await this.getTokenAprs(tokenConfig,false,addGovTokens);\n\n        // console.log('apr',token,tokenApys.avgApr ? tokenApys.avgApr.toString() : null,tokenApys.avgApy ? tokenApys.avgApy.toString() : null);\n\n        if (tokenApys && tokenApys.avgApy !== null){\n          output = tokenApys.avgApy;\n\n          if (addCurveApy){\n            const curveAPY = await this.getCurveAPY();\n            if (curveAPY){\n              output = output.plus(curveAPY);\n            }\n          }\n        }\n      break;\n      case 'avgAPY':\n        const [\n          tokenPrice,\n          firstDepositTx,\n          days\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.getFirstDepositTx([token],account),\n          this.loadAssetField('daysFirstDeposit',token,tokenConfig,account)\n        ]);\n\n        if (tokenPrice && firstDepositTx && firstDepositTx[token]){\n          const tokenPriceFirstDeposit = await this.getIdleTokenPrice(tokenConfig,firstDepositTx[token].blockNumber);\n          output = this.BNify(tokenPrice).div(tokenPriceFirstDeposit).minus(1).times(365).div(days).times(100);\n        }\n      break;\n      case 'avgAPY_old':\n        const [\n          daysFirstDeposit,\n          earningsPerc\n        ] = await Promise.all([\n          this.loadAssetField('daysFirstDeposit',token,tokenConfig,account),\n          this.loadAssetField('earningsPerc',token,tokenConfig,account), // Take earnings perc instead of earnings\n        ]);\n\n        if (daysFirstDeposit && earningsPerc){\n          output = earningsPerc.times(365).div(daysFirstDeposit);\n        }\n      break;\n      case 'depositTimestamp':\n        const depositTimestamps = account ? await this.getDepositTimestamp([token],account) : false;\n        if (depositTimestamps && depositTimestamps[token]){\n          output = depositTimestamps[token];\n        }\n      break;\n      case 'amountLent':\n        output = account ? await this.getAmountDeposited(tokenConfig,account) : false;\n        // const amountLents = account ? await this.getAmountLent([token],account) : false;\n        // if (amountLents && amountLents[token]){\n        //   output = amountLents[token];\n        // }\n      break;\n      case 'tokenPrice':\n        if (Object.keys(govTokens).includes(token)){\n          const govTokenConfig = govTokens[token];\n          const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n          try {\n            output = await this.getUniswapConversionRate(DAITokenConfig,govTokenConfig);\n          } catch (error) {\n\n          }\n          if (!output || this.BNify(output).isNaN()){\n            output = '-';\n          }\n        } else {\n          output = await this.genericContractCall(tokenConfig.idle.token, 'tokenPrice');\n        }\n      break;\n      case 'fee':\n        output = await this.getUserTokenFees(tokenConfig,account);\n      break;\n      case 'tokenBalance':\n        if (Object.keys(govTokens).includes(token)){\n          output = await this.getTokenBalance(token,account);\n          if (!output || output.isNaN()){\n            output = '-';\n          }\n        } else {\n          let tokenBalance = account ? await this.getTokenBalance(tokenConfig.token,account) : false;\n          if (!tokenBalance || tokenBalance.isNaN()){\n            tokenBalance = '-';\n          }\n          output = tokenBalance;\n        }\n      break;\n      case 'idleTokenBalance':\n        const idleTokenBalance = account ? await this.getTokenBalance(tokenConfig.idle.token,account) : false;\n        if (idleTokenBalance){\n          output = idleTokenBalance;\n        }\n      break;\n      case 'redeemableBalanceCounter':\n        let [tokenAPY1,amountLent2,redeemableBalanceStart] = await Promise.all([\n          this.loadAssetField('apy',token,tokenConfig,account,false),\n          this.loadAssetField('amountLent',token,tokenConfig,account,false),\n          this.loadAssetField('redeemableBalance',token,tokenConfig,account,false),\n        ]);\n\n        let redeemableBalanceEnd = null;\n\n        if (redeemableBalanceStart && tokenAPY1 && amountLent2){\n          const earningPerYear = amountLent2.times(tokenAPY1.div(100));\n          redeemableBalanceEnd = redeemableBalanceStart.plus(earningPerYear);\n        }\n\n        // this.customLog('redeemableBalanceCounter',token,parseFloat(redeemableBalanceStart),parseFloat(redeemableBalanceEnd));\n\n        output = {\n          redeemableBalanceEnd,\n          redeemableBalanceStart\n        };\n      break;\n      case 'redeemableBalance':\n        if (Object.keys(govTokens).includes(token)){\n          const govTokenConfig = govTokens[token];\n          output = await this.getGovTokenUserBalance(govTokenConfig,account,govTokenAvailableTokens);\n        } else {\n          let [\n            idleTokenPrice1,\n            idleTokenBalance2,\n            govTokensBalance\n          ] = await Promise.all([\n            this.getIdleTokenPrice(tokenConfig),\n            this.loadAssetField('idleTokenBalance',token,tokenConfig,account),\n            addGovTokens ? this.getGovTokensUserTotalBalance(account,govTokenAvailableTokens,token) : null,\n          ]);\n\n          if (idleTokenBalance2 && idleTokenPrice1){\n            const tokenBalance = idleTokenBalance2.times(idleTokenPrice1);\n            let redeemableBalance = tokenBalance;\n            if (govTokensBalance && !this.BNify(govTokensBalance).isNaN()){\n              redeemableBalance = redeemableBalance.plus(this.BNify(govTokensBalance));\n            }\n            output = redeemableBalance;\n            // console.log('redeemableBalance',token,idleTokenBalance2.toFixed(4),idleTokenPrice1.toFixed(4),tokenBalance.toFixed(4),govTokensBalance ? govTokensBalance.toFixed(4) : null,output.toFixed(4));\n          }\n        }\n      break;\n      case 'earningsCurve':\n        let [amountLentCurve2,redeemableBalanceCurve1] = await Promise.all([\n          this.loadAssetField('amountLentCurve',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalanceCurve',token,tokenConfig,account)\n        ]);\n\n        if (!amountLentCurve2){\n          amountLentCurve2 = this.BNify(0);\n        }\n\n        if (!redeemableBalanceCurve1){\n          redeemableBalanceCurve1 = this.BNify(0);\n        }\n\n        output = redeemableBalanceCurve1.minus(amountLentCurve2);\n      break;\n      case 'earnings':\n        let [amountLent,redeemableBalance2] = await Promise.all([\n          this.loadAssetField('amountLent',token,tokenConfig,account,false),\n          this.loadAssetField('redeemableBalance',token,tokenConfig,account,false)\n        ]);\n\n        if (!amountLent){\n          amountLent = this.BNify(0);\n        }\n        if (!redeemableBalance2){\n          redeemableBalance2 = this.BNify(0);\n        }\n\n        output = redeemableBalance2.minus(amountLent);\n\n        // console.log('earnings',token,amountLent.toFixed(5),redeemableBalance2.toFixed(5),output.toFixed(5));\n\n        if (output.lt(this.BNify(0))){\n          output = this.BNify(0);\n        }\n      break;\n      default:\n      break;\n    }\n\n    return output;\n  }\n  getIdleTokenSupply = async (idleToken,blockNumber='latest') => {\n    const cachedDataKey = `idleTokenSupply_${idleToken}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let idleTokenSupply = await this.genericContractCall(idleToken,'totalSupply',[],{},blockNumber);\n    if (idleTokenSupply){\n      idleTokenSupply = this.BNify(idleTokenSupply);\n      return this.setCachedDataWithLocalStorage(cachedDataKey,idleTokenSupply);\n    }\n\n    return null;\n  }\n  getIdleTokenPriceWithFee = async (tokenConfig,account,blockNumber='latest') => {\n    account = account || this.props.account;\n    if (!account){\n      return null;\n    }\n\n    let [\n      fee,\n      tokenPrice,\n      userAvgPrice\n    ] = await Promise.all([\n      this.genericContractCall(tokenConfig.idle.token, 'fee', [], {}, blockNumber),\n      this.genericContractCall(tokenConfig.idle.token, 'tokenPrice', [], {}, blockNumber),\n      this.genericContractCall(tokenConfig.idle.token, 'userAvgPrices', [account], {}, blockNumber)\n    ]);\n    \n    fee = this.BNify(fee);\n    tokenPrice = this.BNify(tokenPrice);\n    userAvgPrice = this.BNify(userAvgPrice);\n\n    if (!tokenPrice.isNaN() && !userAvgPrice.isNaN() && !fee.isNaN() && !this.BNify(userAvgPrice).eq(0) && this.BNify(tokenPrice).gt(this.BNify(userAvgPrice))){\n      const priceWFee = this.integerValue(this.BNify(tokenPrice).minus(parseInt(fee.div(1e5).times(tokenPrice.minus(userAvgPrice)))));\n      return priceWFee;\n    }\n\n    return tokenPrice;\n  }\n  getIdleTokenPrice = async (tokenConfig,blockNumber='latest',timestamp=false) => {\n\n    const cachedDataKey = `idleTokenPrice_${tokenConfig.idle.token}_${blockNumber}`;\n    // if (blockNumber !== 'latest'){\n      const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.BNify(cachedData).isNaN()){\n        return this.BNify(cachedData);\n      }\n    // }\n\n    let decimals = tokenConfig.decimals;\n\n    let tokenPrice = await this.genericContractCall(tokenConfig.idle.token,'tokenPrice',[],{},blockNumber);\n\n    // If price is NaN try to take it from APIs\n    if (!tokenPrice && timestamp){\n      const isRisk = this.props.selectedStrategy === 'risk';\n      const startTimestamp = parseInt(timestamp)-(60*60);\n      const endTimestamp = parseInt(timestamp)+(60*60);\n      const tokenData = await this.getTokenApiData(tokenConfig.address,isRisk,startTimestamp,endTimestamp,true);\n\n      let beforePrice = {\n        data:null,\n        timeDiff:null\n      };\n\n      let afterPrice = {\n        data:null,\n        timeDiff:null\n      };\n\n      tokenData.forEach( d => {\n        const timeDiff = Math.abs(parseInt(d.timestamp)-parseInt(timestamp));\n        if (parseInt(d.timestamp)<parseInt(timestamp) && (!beforePrice.timeDiff || timeDiff<beforePrice.timeDiff)){\n          beforePrice.timeDiff = timeDiff;\n          beforePrice.data = d;\n        }\n\n        if (parseInt(d.timestamp)>parseInt(timestamp) && !afterPrice.timeDiff){\n          afterPrice.timeDiff = timeDiff;\n          afterPrice.data = d;\n        }\n      });\n\n      // Take before and after and calculate correct tokenPrice based from price acceleration\n      if (beforePrice.data && afterPrice.data){\n        const tokenPriceBefore = this.BNify(beforePrice.data.idlePrice);\n        const tokenPriceAfter = this.BNify(afterPrice.data.idlePrice);\n        const timeBefore = this.BNify(beforePrice.data.timestamp);\n        const timeAfter = this.BNify(afterPrice.data.timestamp);\n        const timeDiff = timeAfter.minus(timeBefore);\n        const priceDiff = tokenPriceAfter.minus(tokenPriceBefore);\n        const priceAcceleration = priceDiff.div(timeDiff);\n        const timeDiffFromBeforePrice = this.BNify(timestamp).minus(timeBefore);\n        tokenPrice = tokenPriceBefore.plus(priceAcceleration.times(timeDiffFromBeforePrice));\n      }\n    }\n\n    // Fix token price decimals\n    if (tokenPrice && !this.BNify(tokenPrice).isNaN()){\n      tokenPrice = this.fixTokenDecimals(tokenPrice,decimals);\n    }\n\n    // If price is NaN then return 1\n    if (!tokenPrice || this.BNify(tokenPrice).isNaN() || this.BNify(tokenPrice).lt(1)){\n      tokenPrice = this.BNify(1);\n    }\n\n    // if (blockNumber !== 'latest'){\n      this.setCachedDataWithLocalStorage(cachedDataKey,tokenPrice);\n    // }\n\n    // this.customLog('getIdleTokenPrice',tokenPrice.toString());\n\n    return tokenPrice;\n  }\n  clearCachedData = () => {\n    if (this.props.clearCachedData && typeof this.props.clearCachedData === 'function'){\n      // this.customLog('clearCachedData',this.props.clearCachedData,typeof this.props.clearCachedData === 'function');\n      this.props.clearCachedData();\n    } else {\n      // this.customLog('clearCachedData - Function not found!');\n    }\n    return false;\n  }\n  /*\n  Cache data locally for 5 minutes\n  */\n  setCachedData = (key,data,TTL=180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function'){\n      this.props.setCachedData(key,data,TTL);\n    }\n    return data;\n  }\n  setCachedDataWithLocalStorage = (key,data,TTL=180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function'){\n      this.props.setCachedData(key,data,TTL,true);\n    }\n    return data;\n  }\n  getCachedDataWithLocalStorage = (key,defaultValue=null) => {\n    return this.getCachedData(key,defaultValue,true);\n  }\n  getCachedData = (key,defaultValue=null,useLocalStorage=false) => {\n    let cachedData = null;\n    key = key.toLowerCase();\n    // Get cache from current session\n    if (this.props.cachedData && this.props.cachedData[key]){\n      cachedData = this.props.cachedData[key];\n    // Get cache from local storage\n    } else if (useLocalStorage) {\n      cachedData = this.getStoredItem('cachedData');\n      if (cachedData && cachedData[key]){\n        cachedData = cachedData[key];\n      } else {\n        cachedData = null;\n      }\n    }\n\n    if (cachedData && cachedData.data && (!cachedData.expirationDate || cachedData.expirationDate>=parseInt(Date.now()/1000))){\n      return cachedData.data;\n    }\n    return defaultValue;\n  }\n  getUserPoolShare = async (walletAddr,tokenConfig) => {\n    const [\n      idleTokensBalance,\n      idleTokensTotalSupply\n    ] = await Promise.all([\n      this.getTokenBalance(tokenConfig.idle.token,walletAddr,false),\n      this.genericContractCall(tokenConfig.idle.token,'totalSupply')\n    ]);\n\n    let userShare = this.BNify(0);\n    if (idleTokensBalance && idleTokensTotalSupply){\n      userShare = this.BNify(idleTokensBalance).div(this.BNify(idleTokensTotalSupply));\n    }\n\n    return userShare;\n  }\n  openWindow = (url) => {\n    return window.open(url,'_blank','noopener');\n  }\n  getActiveCoverages = async (account=null) => {\n    const activeCoverages = [];\n    account = account || this.props.account;\n\n    if (!account){\n      return activeCoverages;\n    }\n\n    const currTimestamp = parseInt(Date.now()/1000);\n    const coverProtocolConfig = this.getGlobalConfig(['tools','coverProtocol']);\n    if (coverProtocolConfig.enabled){\n      await this.asyncForEach(coverProtocolConfig.props.coverages, async (coverage) => {\n        const token = 'Claim';\n        const coverageTokens = coverage.tokens;\n        const tokenConfig = coverageTokens[token];\n        // Initialize coverage contract\n        await this.props.initContract(tokenConfig.name,tokenConfig.address,tokenConfig.abi);\n        // Take balance\n        const balance = await this.getTokenBalance(tokenConfig.name,account);\n        if (balance && balance.gt(0)){\n          const collateral = coverage.collateral;\n          const protocolName = coverProtocolConfig.label;\n          const protocolImage = coverProtocolConfig.image;\n          const fileClaimUrl = coverProtocolConfig.fileClaimUrl;\n          const status = coverage.expirationTimestamp<=currTimestamp ? 'Expired' : 'Active';\n          const expirationDate = moment(coverage.expirationTimestamp*1000).utc().format('YYYY-MM-DD HH:mm:ss')+' UTC';\n          activeCoverages.push({\n            token,\n            status,\n            balance,\n            collateral,\n            protocolName,\n            fileClaimUrl,\n            protocolImage,\n            expirationDate\n          });\n        }\n      });\n    }\n\n    return activeCoverages;\n  }\n  getBatchedDepositExecutions = async (contractAddress) => {\n    const requiredNetwork = this.getGlobalConfig(['network','requiredNetwork']);\n    const etherscanInfo = this.getGlobalConfig(['network','providers','etherscan']);\n    if (etherscanInfo.enabled && etherscanInfo.endpoints[requiredNetwork]){\n      const etherscanApiUrl = etherscanInfo.endpoints[requiredNetwork];\n      const etherscanEndpoint = `${etherscanApiUrl}?&apikey=${env.REACT_APP_ETHERSCAN_KEY}&module=account&action=tokentx&address=${contractAddress}&sort=desc`;\n      const transactions = await this.makeCachedRequest(etherscanEndpoint,1800,true);\n      if (transactions && typeof transactions.result === 'object'){\n        return transactions.result.filter( tx => tx.from === '0x0000000000000000000000000000000000000000' && tx.to.toLowerCase() === contractAddress.toLowerCase() );\n      }\n    }\n    return null;\n  }\n  getBatchedDeposits = async (account=null,filter_by_status=null) => {\n    account = account || this.props.account;\n    if (!account){\n      return null;\n    }\n\n    const batchDepositConfig = this.getGlobalConfig(['tools','batchDeposit']);\n    if (!batchDepositConfig.enabled){\n      return null;\n    }\n\n    const cachedDataKey = `batchedDeposits_${account}_${filter_by_status}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    const batchedDeposits = {};\n    const availableTokens = batchDepositConfig.props.availableTokens;\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const migrationContract = tokenConfig.migrationContract;\n      await this.props.initContract(migrationContract.name,migrationContract.address,migrationContract.abi);\n      const currBatchIndex = await this.genericContractCall(migrationContract.name,'currBatch');\n      for (let batchIndex = 0; batchIndex <= parseInt(currBatchIndex) ; batchIndex++){\n        let [\n          batchExecutions,\n          batchTotal,\n          batchRedeem,\n          batchDeposit\n        ] = await Promise.all([\n          this.getBatchedDepositExecutions(migrationContract.address),\n          this.genericContractCall(migrationContract.name,'batchTotals',[batchIndex]),\n          this.genericContractCall(migrationContract.name,'batchRedeemedTotals',[batchIndex]),\n          this.genericContractCall(migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n        ]);\n        let batchTotals = null;\n        let batchRedeems = null;\n        let batchDeposits = null;\n        if (batchTotal && batchTotal !== null){\n          batchTotals = this.fixTokenDecimals(batchTotal,tokenConfig.decimals);\n        }\n        if (batchDeposit !== null){\n          batchRedeem = this.fixTokenDecimals(batchRedeem,18);\n          batchDeposit = this.fixTokenDecimals(batchDeposit,tokenConfig.decimals);\n          if (batchDeposit.gt(0)){\n            batchDeposits = batchDeposit;\n\n            // Calculate redeemable idleTokens\n            batchRedeems = batchDeposit.times(batchRedeem).div(batchTotals);\n            if (batchRedeems.gt(batchRedeem)){\n              batchRedeems = batchRedeem;\n            }\n\n            const status = batchIndex < currBatchIndex && batchRedeems.gt(0) ? 'executed' : 'pending';\n\n            if (filter_by_status !== null && filter_by_status.toLowerCase() !== status){\n              return;\n            }\n\n            const lastExecution = batchExecutions && batchExecutions.length ? batchExecutions[0] : null;\n\n            batchedDeposits[token] = {\n              status,\n              batchTotals,\n              batchRedeems,\n              batchDeposits,\n              lastExecution\n            };\n          }\n        }\n      }\n    });\n\n    return this.setCachedData(cachedDataKey,batchedDeposits);\n  }\n  getETHBalance = async (walletAddr,fixDecimals=true,blockNumber='latest') => {\n    if (!walletAddr){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `ethBalance_${walletAddr}_${fixDecimals}_${blockNumber}`;\n    if (blockNumber !== 'latest'){\n      const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.BNify(cachedData).isNaN()){\n        return this.BNify(cachedData);\n      }\n    }\n\n    let tokenBalance = await this.props.web3.eth.getBalance(walletAddr);\n\n    if (tokenBalance){\n      if (fixDecimals){\n        tokenBalance = this.fixTokenDecimals(tokenBalance,18);\n      }\n\n      tokenBalance = this.BNify(tokenBalance);\n\n      // Set cached data\n      if (!tokenBalance.isNaN()){\n        if (blockNumber !== 'latest'){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,tokenBalance);\n        } else {\n          return tokenBalance;\n        }\n      }\n    }\n    return null;\n  }\n  getTokenBalance = async (contractName,walletAddr,fixDecimals=true,blockNumber='latest') => {\n    if (!walletAddr){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenBalance_${contractName}_${walletAddr}_${fixDecimals}_${blockNumber}`;\n    if (blockNumber !== 'latest'){\n      const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.BNify(cachedData).isNaN()){\n        return this.BNify(cachedData);\n      }\n    }\n\n    let [\n      tokenDecimals,\n      tokenBalance\n    ] = await Promise.all([\n      this.getTokenDecimals(contractName),\n      this.getContractBalance(contractName,walletAddr,blockNumber)\n    ]);\n\n    if (tokenBalance){\n      if (fixDecimals){\n        tokenBalance = this.fixTokenDecimals(tokenBalance,tokenDecimals);\n      }\n\n      tokenBalance = this.BNify(tokenBalance);\n\n      // Set cached data\n      if (!tokenBalance.isNaN()){\n        if (blockNumber !== 'latest'){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,tokenBalance);\n        } else {\n          return tokenBalance;\n        }\n      }\n    } else {\n      this.customLogError('Error on getting balance for ',contractName);\n    }\n    return null;\n  }\n  copyToClipboard = (copyText) => {\n    if (typeof copyText.select === 'function'){\n      copyText.select();\n      copyText.setSelectionRange(0, 99999); // Select\n      const res = document.execCommand(\"copy\");\n      copyText.setSelectionRange(0, 0); // Deselect\n      return res;\n    }\n    return false;\n  }\n  loadScript = (url,props,callback) => {\n    const script = document.createElement(\"script\");\n    script.src = url;\n\n    // Append props\n    if (props){\n      Object.keys(props).forEach((attr,i) => {\n        script[attr] = props[attr];\n      });\n    }\n\n    if (typeof callback === 'function'){\n      if (script.readyState) {  // only required for IE <9\n        script.onreadystatechange = function() {\n          if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n            script.onreadystatechange = null;\n            callback();\n          }\n        };\n      } else {  //Others\n        script.onload = callback;\n      }\n    }\n\n    if (!script.id || !document.getElementById(script.id)){\n      document.body.appendChild(script);\n    }\n  }\n  isValidJSON = str => {\n    try {\n      JSON.parse(str);\n    } catch (e) {\n      return false;\n    }\n    return true;\n  }\n  checkAddress = (address) => {\n    return address ? address.match(/^0x[a-fA-F0-9]{40}$/) !== null : false;\n  }\n  getContractBalance = async (contractName,address,blockNumber='latest') => {\n    address = address ? address : this.props.tokenConfig.idle.address;\n    return await this.genericContractCall(contractName, 'balanceOf', [address], {}, blockNumber);\n  }\n  getProtocolBalance = async (contractName,address) => {\n    address = address ? address : this.props.tokenConfig.idle.address;\n    return await this.genericContractCall(contractName, 'balanceOf', [address]);\n  }\n  getAprs = async (contractName) => {\n    contractName = contractName ? contractName : this.props.tokenConfig.idle.token;\n    return await this.genericContractCall(contractName, 'getAPRs');\n  }\n  genericIdleCall = async (methodName, params = [], callParams = {}) => {\n    return await this.genericContractCall(this.props.tokenConfig.idle.token, methodName, params, callParams).catch(err => {\n      this.customLogError('Generic Idle call err:', err);\n    });\n  }\n  estimateGas = async (contractName, methodName, params = [], callParams = {}) => {\n    let contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLogError('Wrong contract name', contractName);\n      return null;\n    }\n\n    return await contract.methods[methodName](...params).estimateGas(callParams);\n  }\n  getTxDecodedLogs = async (tx,logAddr,decodeLogs,storedTx) => {\n\n    let txReceipt = storedTx && storedTx.txReceipt ? storedTx.txReceipt : null;\n\n    if (!txReceipt){\n      txReceipt = await (new Promise( async (resolve, reject) => {\n        this.props.web3.eth.getTransactionReceipt(tx.hash,(err,tx)=>{\n          if (err){\n            reject(err);\n          }\n          resolve(tx);\n        });\n      }));\n\n    }\n\n    if (!txReceipt){\n      return null;\n    }\n\n    const internalTransfers = txReceipt.logs.filter((tx) => { return tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${logAddr}`; });\n\n    if (!internalTransfers.length){\n      return null;\n    }\n\n    try {\n      return [\n        txReceipt,\n        this.props.web3.eth.abi.decodeLog(decodeLogs,internalTransfers[0].data,internalTransfers[0].topics)\n      ];\n    } catch (error) {\n      return null;\n    }\n  }\n  blocksToSeconds = (blocks) => {\n    const blocksPerSeconds = this.BNify(this.getGlobalConfig(['network','blocksPerYear'])).div(365.2422).div(86400);\n    return this.BNify(blocks).div(blocksPerSeconds);\n  }\n  getBlockNumber = async () => {\n    return await this.props.web3.eth.getBlockNumber();\n  }\n  getContractPastEvents = async (contractName,methodName,params = {}) => {\n    if (!contractName){\n      return null;\n    }\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLogError('Wrong contract name', contractName);\n      return null;\n    }\n\n    return await contract.getPastEvents(methodName, params);\n  }\n  genericContractCall = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest') => {\n\n    if (!contractName){\n      return null;\n    }\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLog('Wrong contract name', contractName);\n      return null;\n    }\n\n    if (!contract.methods[methodName]) {\n      this.customLog('Wrong method name', methodName);\n      return null;\n    }\n\n    blockNumber = blockNumber !== 'latest' && blockNumber && !isNaN(blockNumber) ? parseInt(blockNumber) : blockNumber;\n\n    try{\n      this.customLog(`genericContractCall - ${contractName} - ${methodName}`);\n      const value = await contract.methods[methodName](...params).call(callParams,blockNumber).catch(error => {\n        this.customLog(`${contractName} contract method ${methodName} error: `, error);\n      });\n      this.customLog(`genericContractCall - ${contractName} - ${methodName} : ${value}`);\n      return value;\n    } catch (error) {\n      this.customLog(\"genericContractCall error\", error);\n    }\n  }\n  asyncForEach = async (array, callback, async=true) => {\n    if (async){\n      await Promise.all(array.map( (c,index) => {\n        return callback(c, index, array);\n      }));\n    } else {\n      for (let index = 0; index < array.length; index++) {\n        await callback(array[index], index, array);\n      }\n    }\n  }\n  apr2apy = (apr) => {\n    return (this.BNify(1).plus(this.BNify(apr).div(12))).pow(12).minus(1);\n  }\n  getUnlentBalance = async (tokenConfig) => {\n    let unlentBalance = await this.getProtocolBalance(tokenConfig.token,tokenConfig.idle.address);\n    if (unlentBalance){\n      unlentBalance = this.fixTokenDecimals(unlentBalance,tokenConfig.decimals);\n    }\n    return unlentBalance;\n  }\n  getTokenPool = async (tokenConfig,addGovTokens=true) => {\n    // Check for cached data\n    const cachedDataKey = `tokenPool_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN() ) {\n      return this.BNify(cachedData);\n    }\n\n    const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,addGovTokens);\n    if (tokenAllocation && tokenAllocation.totalAllocationWithUnlent){\n      const tokenPool = tokenAllocation.totalAllocationWithUnlent;\n      if (!this.BNify(tokenPool).isNaN()){\n        return this.setCachedDataWithLocalStorage(cachedDataKey,tokenPool);\n      }\n    }\n\n    return null;\n  }\n  /*\n  Get idleToken allocation between protocols\n  */\n  getTokenAllocation = async (tokenConfig,protocolsAprs=false,addGovTokens=true) => {\n\n    if (!tokenConfig.idle){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenAllocation_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    let totalAllocation = this.BNify(0);\n\n    const tokenAllocation = {\n      avgApr: null,\n      unlentBalance:null,\n      totalAllocation:null,\n      protocolsBalances:{},\n      protocolsAllocations:null,\n      protocolsAllocationsPerc:null,\n      totalAllocationConverted:null,\n      totalAllocationWithUnlent:null,\n      totalAllocationWithUnlentConverted:null,\n    };\n\n    const exchangeRates = {};\n    const protocolsBalances = {};\n    const protocolsAllocations = {};\n    const protocolsAllocationsPerc = {};\n\n    await this.asyncForEach(tokenConfig.protocols,async (protocolInfo,i) => {\n      const contractName = protocolInfo.token;\n      const protocolAddr = protocolInfo.address.toLowerCase();\n\n      let [\n        tokenDecimals,\n        protocolBalance,\n        exchangeRate\n      ] = await Promise.all([\n        this.getTokenDecimals(contractName),\n        this.getProtocolBalance(contractName,tokenConfig.idle.address),\n        ( protocolInfo.functions.exchangeRate ? this.genericContractCall(contractName,protocolInfo.functions.exchangeRate.name,protocolInfo.functions.exchangeRate.params) : null )\n      ]);\n\n      if (!protocolBalance){\n        return;\n      }\n\n      if (exchangeRate && protocolInfo.decimals){\n        exchangeRates[protocolAddr] = exchangeRate;\n        exchangeRate = this.fixTokenDecimals(exchangeRate,protocolInfo.decimals);\n      }\n\n      let protocolAllocation = this.fixTokenDecimals(protocolBalance,tokenDecimals,exchangeRate);\n\n      if (protocolAllocation.lt(this.BNify(0.00000001))){\n        protocolBalance = this.BNify(0);\n        protocolAllocation = this.BNify(0);\n      }\n\n      protocolsBalances[protocolAddr] = protocolBalance;\n      protocolsAllocations[protocolAddr] = protocolAllocation;\n      totalAllocation = totalAllocation.plus(protocolAllocation);\n\n      // console.log('getTokenAllocation',contractName,protocolAddr,protocolAllocation.toFixed(5),exchangeRate ? exchangeRate.toFixed(5) : null,totalAllocation.toFixed(5));\n    });\n\n    tokenAllocation.unlentBalance = this.BNify(0);\n    tokenAllocation.totalAllocationWithUnlent = this.BNify(totalAllocation);\n\n    // Add unlent balance to the pool\n    let unlentBalance = await this.getUnlentBalance(tokenConfig);\n    if (unlentBalance){\n      tokenAllocation.unlentBalance = unlentBalance;\n      tokenAllocation.totalAllocationWithUnlent = tokenAllocation.totalAllocationWithUnlent.plus(unlentBalance);\n    }\n\n    // console.log('totalAllocationWithUnlent 1',addGovTokens,tokenAllocation.totalAllocationWithUnlent.toFixed(5));\n\n    Object.keys(protocolsAllocations).forEach((protocolAddr,i) => {\n      const protocolAllocation = protocolsAllocations[protocolAddr];\n      const protocolAllocationPerc = protocolAllocation.div(totalAllocation);\n      protocolsAllocationsPerc[protocolAddr] = protocolAllocationPerc;\n    });\n\n    tokenAllocation.totalAllocation = totalAllocation;\n    tokenAllocation.protocolsAllocations = protocolsAllocations;\n    tokenAllocation.protocolsAllocationsPerc = protocolsAllocationsPerc;\n\n    if (addGovTokens){\n      const govTokensBalances = await this.getGovTokensBalances(tokenConfig.idle.address);\n\n      // Sum gov tokens balances\n      if (govTokensBalances.total){\n        const tokenUsdConversionRate = await this.getTokenConversionRate(tokenConfig,false);\n        if (tokenUsdConversionRate){\n          govTokensBalances.total = govTokensBalances.total.div(tokenUsdConversionRate);\n        }\n\n        tokenAllocation.totalAllocationWithUnlent = tokenAllocation.totalAllocationWithUnlent.plus(govTokensBalances.total);\n\n        // console.log('totalAllocationWithUnlent 2',govTokensBalances.total.toFixed(5),tokenAllocation.totalAllocationWithUnlent.toFixed(5));\n      }\n    }\n\n    tokenAllocation.totalAllocationConverted = await this.convertTokenBalance(tokenAllocation.totalAllocation,tokenConfig.token,tokenConfig);\n    tokenAllocation.totalAllocationWithUnlentConverted = await this.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent,tokenConfig.token,tokenConfig);\n\n    if (protocolsAprs){\n      tokenAllocation.avgApr = this.getAvgApr(protocolsAprs,protocolsAllocations,totalAllocation);\n    }\n\n    return this.setCachedData(cachedDataKey,tokenAllocation);\n  }\n  getUniswapConversionRate_path = async (path) => {\n    const one = this.normalizeTokenDecimals(18);\n    const unires = await this.genericContractCall('UniswapRouter','getAmountsIn',[one.toFixed(),path]);\n    return unires;\n  }\n  getUniswapConversionRate = async (tokenConfigFrom,tokenConfigDest) => {\n\n    // Check for cached data\n    const cachedDataKey = `uniswapConversionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    try {\n      const WETHAddr = this.getGlobalConfig(['stats','tokens','WETH','address']);\n      const one = this.normalizeTokenDecimals(18);\n\n      const path = [];\n      path.push(tokenConfigFrom.address);\n      // Don't pass through weth if i'm converting weth\n      if (WETHAddr.toLowerCase() !== tokenConfigFrom.address.toLowerCase() && WETHAddr.toLowerCase() !== tokenConfigDest.address.toLowerCase()){\n        path.push(WETHAddr);\n      }\n      path.push(tokenConfigDest.address);\n\n      const unires = await this.genericContractCall('UniswapRouter','getAmountsIn',[one.toFixed(),path]);\n\n      // console.log('getUniswapConversionRate',tokenConfigFrom,tokenConfigDest,path,unires);\n\n      if (unires){\n        const price = this.BNify(unires[0]).div(one);\n        return this.setCachedDataWithLocalStorage(cachedDataKey,price);\n      }\n      return null;\n    } catch (error) {\n      return null;\n    }\n  }\n  /*\n  getUniswapConversionRate_old = async (tokenConfigFrom,tokenConfigDest) => {\n    const cachedDataKey = `compUniswapConverstionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n\n    const tokenFrom = new Token(ChainId.MAINNET, tokenConfigFrom.address, tokenConfigFrom.decimals);\n    const tokenTo = new Token(ChainId.MAINNET, tokenConfigDest.address, tokenConfigDest.decimals);\n\n    const pair = await Fetcher.fetchPairData(tokenFrom, tokenTo);\n    const route = new Route([pair], tokenTo);\n\n    let output = null;\n    if (route && route.midPrice){\n      output = this.BNify(route.midPrice.toSignificant(tokenConfigDest.decimals));\n      this.setCachedData(cachedDataKey,output);\n    }\n    return output;\n  }\n  */\n  getCurveDepositedTokens = async (account,enabledTokens=[]) => {\n    account = account ? account : this.props.account;\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    if (!account || !enabledTokens || !enabledTokens.length){\n      return [];\n    }\n\n    const curveTxs = await this.getCurveTxs(account,0,'latest',enabledTokens);\n\n    const idleTokensBalances = {};\n    let remainingCurveTokens = this.BNify(0);\n\n    // this.customLog('getCurveDepositedTokens',curveTxs);\n\n    curveTxs.forEach( tx => {\n\n      const idleToken = tx.idleToken;\n      const idleTokens = this.BNify(tx.idleTokens);\n\n      if (!idleTokensBalances[idleToken]){\n        idleTokensBalances[idleToken] = this.BNify(0);\n      }\n\n      switch (tx.action){\n        case 'CurveIn':\n        case 'CurveZapIn':\n          idleTokensBalances[idleToken] = idleTokensBalances[idleToken].plus(idleTokens);\n        break;\n        case 'CurveOut':\n        case 'CurveZapOut':\n          if (idleTokens.gt(idleTokensBalances[idleToken])){\n            remainingCurveTokens = remainingCurveTokens.plus(idleTokens.minus(idleTokensBalances[idleToken]));\n          }\n          idleTokensBalances[idleToken] = idleTokensBalances[idleToken].minus(idleTokens);\n          if (idleTokensBalances[idleToken].lt(0)){\n            idleTokensBalances[idleToken] = this.BNify(0);\n          }\n        break;\n        default:\n        break;\n      }\n\n      // this.customLog(this.strToMoment(tx.timeStamp*1000).format('DD-MM-YYYY HH:mm:ss'),tx.blockNumber,idleToken,tx.action,idleTokens.toFixed(6),idleTokensBalances[idleToken].toFixed(6),remainingCurveTokens.toFixed(6));\n\n      // Scalo il remaining tokens\n      if (remainingCurveTokens.gt(0)){\n        Object.keys(idleTokensBalances).forEach( token => {\n          const tokenBalance = idleTokensBalances[token];\n          if (tokenBalance && tokenBalance.gt(0)){\n            if (tokenBalance.gt(remainingCurveTokens)){\n              idleTokensBalances[token] = idleTokensBalances[token].minus(remainingCurveTokens);\n            } else {\n              remainingCurveTokens = remainingCurveTokens.minus(idleTokensBalances[token]);\n              idleTokensBalances[token] = 0;\n            }\n          }\n        });\n      }\n    });\n\n    // this.customLog('idleTokensBalances',idleTokensBalances);\n  }\n  getCurveUnevenTokenAmounts = async (amounts,max_burn_amount) => {\n    const curveSwapContract = await this.getCurveDepositContract();\n    if (curveSwapContract){\n      const unevenAmounts = await this.genericContractCall(curveSwapContract.name, 'remove_liquidity_imbalance', [amounts, max_burn_amount]);\n      // this.customLog('getCurveUnevenTokenAmounts',amounts,max_burn_amount,unevenAmounts);\n      return unevenAmounts;\n    }\n    return null;\n  }\n  getCurveAPY = async () => {\n\n    // Check for cached data\n    const cachedDataKey = `getCurveAPY`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const curveRatesInfo = this.getGlobalConfig(['curve','rates']);\n    if (curveRatesInfo){\n      const results = await this.makeRequest(curveRatesInfo.endpoint);\n      if (results && results.data){\n        const path = Object.values(curveRatesInfo.path);\n        let curveApy = this.getArrayPath(path,results.data);\n        if (curveApy){\n          curveApy = this.BNify(curveApy).times(100);\n          if (!this.BNify(curveApy).isNaN()){\n            return this.setCachedDataWithLocalStorage(cachedDataKey,curveApy);\n          }\n        }\n      }\n    }\n    return null;\n  }\n  getCurveAvailableTokens = () => {\n    if (!this.props.availableStrategies){\n      return false;\n    }\n    const curveTokens = this.getGlobalConfig(['curve','availableTokens']);\n    const strategyTokens = this.props.availableStrategies['best'];\n    const availableTokens = Object.keys(strategyTokens).reduce( (availableTokens,token) => {\n      const tokenConfig = strategyTokens[token];\n      if (Object.keys(curveTokens).includes(tokenConfig.idle.token) && curveTokens[tokenConfig.idle.token].enabled){\n        availableTokens[token] = tokenConfig;\n      }\n      return availableTokens;\n    },{});\n\n    return availableTokens;\n  }\n  getCurveAPYContract = async () => {\n    const curveSwapContract = await this.getCurveDepositContract();\n    if (curveSwapContract){\n      const blockNumber = await this.getBlockNumber();\n      if (blockNumber){\n        const blocksForPrevTokenPrice = 10;\n        let [tokenPrice,prevTokenPrice] = await Promise.all([\n          this.genericContractCall(curveSwapContract.name,'get_virtual_price'),\n          this.genericContractCall(curveSwapContract.name,'get_virtual_price',[],{},blockNumber-blocksForPrevTokenPrice)\n        ]);\n\n        if (tokenPrice && prevTokenPrice){\n\n          const blocksMultiplier = this.BNify(this.getGlobalConfig(['network','blocksPerYear'])).div(blocksForPrevTokenPrice);\n          const curveAPR = this.BNify(tokenPrice).div(prevTokenPrice).minus(1).times(blocksMultiplier);\n          return this.apr2apy(curveAPR).times(100);\n        }\n      }\n    }\n    return null;\n  }\n  getCurveTokenSupply = async () => {\n    const curvePoolContract = await this.getCurvePoolContract();\n    if (curvePoolContract){\n      return await this.genericContractCall(curvePoolContract.name,'totalSupply');\n    }\n    return null;\n  }\n  getCurveTokenBalance = async (account=null,fixDecimals=true) => {\n    const curvePoolContract = await this.getCurvePoolContract();\n    if (curvePoolContract){\n      account = account ? account : this.props.account;\n      return await this.getTokenBalance(curvePoolContract.name,account,fixDecimals);\n    }\n    return null;\n  }\n  getCurveTokenPrice = async (blockNumber='latest',fixDecimals=true) => {\n    const migrationContract = await this.getCurveDepositContract();\n    let curveTokenPrice = await this.genericContractCall(migrationContract.name,'get_virtual_price',[],{},blockNumber);\n    if (curveTokenPrice){\n      curveTokenPrice = this.BNify(curveTokenPrice);\n      if (fixDecimals){\n        const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n        curveTokenPrice = this.fixTokenDecimals(curveTokenPrice,curvePoolContract.decimals);\n      }\n      return curveTokenPrice;\n    }\n    return null;\n  }\n  getCurveRedeemableIdleTokens = async (account) => {\n    let [curveTokenPrice,curveTokenBalance] = await Promise.all([\n      this.getCurveTokenPrice('latest'),\n      this.getCurveTokenBalance(account),\n    ]);\n    if (curveTokenBalance && curveTokenPrice){\n      return this.BNify(curveTokenBalance).times(curveTokenPrice);\n    }\n    return null;\n  }\n  getCurveDepositContract = async () => {\n    const depositContractInfo = this.getGlobalConfig(['curve','depositContract']);\n    if (depositContractInfo){\n      let curveDepositContract = this.getContractByName(depositContractInfo.name);\n      if (!curveDepositContract && depositContractInfo.abi){\n        curveDepositContract = await this.props.initContract(depositContractInfo.name,depositContractInfo.address,depositContractInfo.abi);\n      }\n    }\n    return depositContractInfo;\n  }\n  getCurveZapContract = async () => {\n    const zapContractInfo = this.getGlobalConfig(['curve','zapContract']);\n    if (zapContractInfo){\n      let curveZapContract = this.getContractByName(zapContractInfo.name);\n      if (!curveZapContract && zapContractInfo.abi){\n        curveZapContract = await this.props.initContract(zapContractInfo.name,zapContractInfo.address,zapContractInfo.abi);\n      }\n    }\n    return zapContractInfo;\n  }\n  getCurvePoolContract = async () => {\n    const poolContractInfo = this.getGlobalConfig(['curve','poolContract']);\n    if (poolContractInfo){\n      let curvePoolContract = this.getContractByName(poolContractInfo.name);\n      if (!curvePoolContract && poolContractInfo.abi){\n        curvePoolContract = await this.props.initContract(poolContractInfo.name,poolContractInfo.address,poolContractInfo.abi);\n      }\n    }\n    return poolContractInfo;\n  }\n  getCurveSwapContract = async () => {\n    const migrationContractInfo = this.getGlobalConfig(['curve','migrationContract']);\n    if (migrationContractInfo){\n      let migrationContract = this.getContractByName(migrationContractInfo.name);\n      if (!migrationContract && migrationContractInfo.abi){\n        migrationContract = await this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi);\n      }\n    }\n    return migrationContractInfo;\n  }\n  getCurveIdleTokensAmounts = async (account=null,curveTokenBalance=null,max_slippage=null) => {\n    if (!account && this.props.account){\n      account = this.props.account;\n    }\n\n    if (!account){\n      return null;\n    }\n\n    const tokensBalances = {};\n    const curveSwapContract = await this.getCurveSwapContract();\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n\n    const curveTokenSupply = await this.getCurveTokenSupply();\n    if (!curveTokenBalance){\n      curveTokenBalance = await this.getCurveTokenBalance(account,false);\n    }\n\n    if (curveTokenBalance && curveTokenSupply){\n      const curveTokenShare = this.BNify(curveTokenBalance).div(this.BNify(curveTokenSupply));\n      const n_coins = Object.keys(curveAvailableTokens).length;\n\n      if (max_slippage){\n        max_slippage = this.BNify(max_slippage).div(n_coins);\n      }\n\n      // this.customLog('curveTokenShare',this.BNify(curveTokenBalance).toString(),this.BNify(curveTokenSupply).toString(),curveTokenShare.toString());\n\n      await this.asyncForEach(Object.keys(curveAvailableTokens), async (token) => {\n        const curveTokenConfig = curveAvailableTokens[token];\n        const coinIndex = curveTokenConfig.migrationParams.coinIndex;\n        const curveIdleTokens = await this.genericContractCall(curveSwapContract.name,'balances',[coinIndex]);\n        if (curveIdleTokens){\n          let idleTokenBalance = this.BNify(curveIdleTokens).times(curveTokenShare);\n          if (max_slippage){\n            // this.customLog('getCurveIdleTokensAmounts',idleTokenBalance.toFixed());\n            idleTokenBalance = idleTokenBalance.minus(idleTokenBalance.times(max_slippage));\n          }\n          tokensBalances[coinIndex] = this.integerValue(idleTokenBalance);\n        }\n      });\n    }\n\n    return Object.values(tokensBalances);\n  }\n\n  // Get amounts of underlying tokens in the curve pool\n  getCurveTokensAmounts = async (account=null,curveTokenBalance=null,fixDecimals=false,useCoinIndex=false) => {\n\n    if (!account && this.props.account){\n      account = this.props.account;\n    }\n\n    if (!account){\n      return null;\n    }\n\n    const tokensBalances = {};\n    const availableTokens = this.getCurveAvailableTokens();\n    const curveSwapContract = await this.getCurveSwapContract();\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n\n    const curveTokenSupply = await this.getCurveTokenSupply();\n    if (!curveTokenBalance){\n      curveTokenBalance = await this.getCurveTokenBalance(account,false);\n    }\n\n    if (curveTokenBalance && curveTokenSupply){\n      const curveTokenShare = this.BNify(curveTokenBalance).div(this.BNify(curveTokenSupply));\n\n      await this.asyncForEach(Object.keys(curveAvailableTokens), async (token) => {\n        const curveTokenConfig = curveAvailableTokens[token];\n        const coinIndex = curveTokenConfig.migrationParams.coinIndex;\n        const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n        const [\n          idleTokenPrice,\n          idleTokenBalance\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.genericContractCall(curveSwapContract.name,'balances',[coinIndex]),\n        ]);\n\n        const totalTokenSupply = this.BNify(idleTokenBalance).times(this.BNify(idleTokenPrice));\n        let tokenBalance = totalTokenSupply.times(curveTokenShare);\n        if (fixDecimals){\n          tokenBalance = this.fixTokenDecimals(tokenBalance,18);\n        }\n\n        tokensBalances[curveTokenConfig.baseToken] = useCoinIndex ? this.integerValue(tokenBalance) : tokenBalance;\n      });\n    }\n\n    return useCoinIndex ? Object.values(tokensBalances) : tokensBalances;\n  }\n\n  // Compile amounts array for Curve\n  getCurveAmounts = async (token,amount,deposit=false) => {\n    const amounts = {};\n    const availableTokens = this.getCurveAvailableTokens();\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n\n    await this.asyncForEach(Object.keys(curveAvailableTokens), async (idleToken) => {\n      const curveTokenConfig = curveAvailableTokens[idleToken];\n      const migrationParams = curveTokenConfig.migrationParams;\n      const coinIndex = migrationParams.coinIndex;\n      if (idleToken === token && parseFloat(amount)>0){\n        const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n        amount = this.fixTokenDecimals(amount,18);\n        if (!deposit){\n          const idleTokenPrice = await this.getIdleTokenPrice(tokenConfig);\n          amount = amount.div(idleTokenPrice);\n        }\n        amount = this.normalizeTokenAmount(amount,curveTokenConfig.decimals);\n        amounts[coinIndex] = amount;\n      } else {\n        amounts[coinIndex] = 0;\n      }\n    });\n\n    return Object.values(amounts);\n  }\n  getCurveTokenAmount = async (amounts,deposit=true) => {\n    const migrationContract = await this.getCurveSwapContract();\n    if (migrationContract){\n      return await this.genericContractCall(migrationContract.name,'calc_token_amount',[amounts,deposit]);\n    }\n    return null;\n  }\n  getCurveSlippage = async (token,amount,deposit=true,uneven_amounts=null) => {\n    let slippage = null;\n    const depositContract = await this.getCurveDepositContract();\n    if (depositContract){\n\n      const n_coins = this.getGlobalConfig(['curve','params','n_coins']);\n\n      amount = this.BNify(amount)\n      if (!amount || amount.isNaN() || amount.lte(0)){\n        return null;\n      }\n\n      let amounts = uneven_amounts;\n      if (!amounts || amounts.length !== n_coins){\n        amounts = await this.getCurveAmounts(token,amount);\n      }\n\n      let [\n        virtualPrice,\n        tokenAmount\n      ] = await Promise.all([\n        this.genericContractCall(depositContract.name,'get_virtual_price'),\n        this.genericContractCall(depositContract.name,'calc_token_amount',[amounts,deposit]),\n      ]);\n\n      if (virtualPrice && tokenAmount){\n        amount = this.fixTokenDecimals(amount,18);\n        virtualPrice = this.fixTokenDecimals(virtualPrice,18);\n        tokenAmount = this.fixTokenDecimals(tokenAmount,18);\n        const Sv = tokenAmount.times(virtualPrice);\n\n        // Handle redeem in uneven amounts (Slippage 0%)\n        if (uneven_amounts && !deposit){\n          amount = amount.times(virtualPrice);\n        }\n\n        if (deposit){\n          slippage = Sv.div(amount).minus(1).times(-1);\n        } else {\n          slippage = amount.div(Sv).minus(1).times(-1);\n        }\n\n        // console.log('getCurveSlippage',token,deposit,amounts,tokenAmount.toFixed(6),virtualPrice.toFixed(6),Sv.toFixed(6),amount.toFixed(6),slippage.toFixed(6));\n\n        return slippage;\n      }\n    }\n    return null;\n  }\n  getCompAPR = async (token,tokenConfig,cTokenIdleSupply=null,compConversionRate=null) => {\n    const COMPTokenConfig = this.getGlobalConfig(['govTokens','COMP']);\n    if (!COMPTokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getCompAPR_${tokenConfig.idle.token}_${cTokenIdleSupply}_${compConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let compAPR = this.BNify(0);\n    const compDistribution = await this.getCompDistribution(tokenConfig,cTokenIdleSupply);\n\n    if (compDistribution){\n\n      const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n        \n      // Get COMP conversion rate\n      if (!compConversionRate){\n        try {\n          compConversionRate = await this.getUniswapConversionRate(DAITokenConfig,COMPTokenConfig);\n        } catch (error) {\n\n        }\n        if (!compConversionRate || compConversionRate.isNaN()){\n          compConversionRate = this.BNify(1);\n        }\n      }\n\n      const compValue = this.BNify(compConversionRate).times(compDistribution);\n\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,false);\n\n      if (tokenAllocation){\n        compAPR = compValue.div(tokenAllocation.totalAllocationConverted).times(100);\n        if (!this.BNify(compAPR).isNaN()){\n          this.setCachedDataWithLocalStorage(cachedDataKey,compAPR);\n        }\n      }\n    }\n\n    return compAPR;\n  }\n  getCompSpeed = async (cTokenAddress) => {\n    let compSpeed = await this.genericContractCall('Comptroller','compSpeeds',[cTokenAddress]);\n    if (compSpeed){\n      return this.BNify(compSpeed);\n    }\n    return null;\n  }\n  getCompDistribution = async (tokenConfig,cTokenIdleSupply=null,annualize=true) => {\n\n    const cachedDataKey = `getCompDistribution_${tokenConfig.idle.token}_${cTokenIdleSupply}_${annualize}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const cTokenInfo = tokenConfig.protocols.find( p => (p.name === 'compound') );\n    if (cTokenInfo){\n\n      // Get IdleToken allocation in compound\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,false);\n      const compoundAllocationPerc = tokenAllocation.protocolsAllocationsPerc[cTokenInfo.address.toLowerCase()];\n\n      // Calculate distribution if compound allocation >= 0.1%\n      if (compoundAllocationPerc && compoundAllocationPerc.gte(0.001)){\n\n        // Get COMP distribution speed and Total Supply\n        const [\n          compSpeed,\n          cTokenTotalSupply\n        ] = await Promise.all([\n          this.getCompSpeed(cTokenInfo.address),\n          this.genericContractCall(cTokenInfo.token,'totalSupply'),\n        ]);\n\n        if (compSpeed && cTokenTotalSupply){\n\n          // Get Idle liquidity supply\n          if (!cTokenIdleSupply){\n            cTokenIdleSupply = await this.genericContractCall(cTokenInfo.token,'balanceOf',[tokenConfig.idle.address]);\n          }\n\n          if (cTokenIdleSupply){\n\n            // Get COMP distribution for Idle in a Year\n            const blocksPerYear = this.getGlobalConfig(['network','blocksPerYear']);\n\n            // Take 50% of distrubution for lenders side\n            const compoundPoolShare = this.BNify(cTokenIdleSupply).div(this.BNify(cTokenTotalSupply));\n            let compDistribution = this.BNify(compSpeed).times(compoundPoolShare);\n\n            if (annualize){\n              compDistribution = compDistribution.div(1e18).times(this.BNify(blocksPerYear));\n            }\n\n            if (!this.BNify(compDistribution).isNaN()){\n              return this.setCachedDataWithLocalStorage(cachedDataKey,compDistribution);\n            }\n          }\n        }\n      }\n    }\n\n    return null;\n  }\n  getCompUserDistribution = async (account=null,availableTokens=null) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens){\n      return false;\n    }\n\n    let output = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const cTokenInfo = tokenConfig.protocols.find( p => (p.name === 'compound') );\n      if (cTokenInfo){\n        const [\n          userPoolShare,\n          compDistribution,\n        ] = await Promise.all([\n          this.getUserPoolShare(account,tokenConfig,false),\n          this.getCompDistribution(tokenConfig,null,false),\n        ]);\n\n        if (compDistribution && userPoolShare){\n          output = output.plus(compDistribution.times(userPoolShare));\n        }\n      }\n    });\n\n    return output;\n  }\n  getCompAvgApr = async (availableTokens=null) => {\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n    let output = this.BNify(0);\n    let totalAllocation = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [compApr,tokenAllocation] = await Promise.all([\n        this.getCompAPR(token,tokenConfig),\n        this.getTokenAllocation(tokenConfig,false,false)\n      ]);\n      \n      if (compApr && tokenAllocation){\n        output = output.plus(compApr.times(tokenAllocation.totalAllocation));\n        totalAllocation = totalAllocation.plus(tokenAllocation.totalAllocation);\n        // this.customLog(token,compApr.toString(),tokenAllocation.totalAllocation.toString(),output.toString(),totalAllocation.toString());\n      }\n    });\n\n    output = output.div(totalAllocation);\n\n    return output;\n  }\n  getTokensCsv = async () => {\n\n    // eslint-disable-next-line\n    Array.prototype.sum = function() {\n      return this.reduce(function(pv, cv) { return pv + cv; }, 0);\n    };\n    // eslint-disable-next-line\n    Array.prototype.max = function() {\n      return Math.max.apply(null, this);\n    };\n    // eslint-disable-next-line\n    Array.prototype.avg = function() {\n      return this.sum()/this.length;\n    };\n\n    const csv = [];\n    const availableStrategies = this.props.availableStrategies;\n    await this.asyncForEach(Object.keys(availableStrategies), async (strategy) => {\n      const availableTokens = availableStrategies[strategy];\n      const isRisk = strategy === 'risk';\n      await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n        const tokenConfig = availableTokens[token];\n        const rates = await this.getTokenApiData(tokenConfig.address,isRisk,null,null,false,7200,'ASC');\n        const header = [];\n        let protocols = null;\n        const rows = [];\n        const aprAvg = {};\n        const scoreAvg = {};\n\n        const lastRow = rates[rates.length-1];\n\n        rates.forEach( r => {\n          if (!protocols){\n            header.push('Token');\n            header.push('Date');\n\n            // Get protocols\n            protocols = [];\n            lastRow.protocolsData.forEach( p1 => {\n              const foundProtocol = tokenConfig.protocols.find( p2 => ( p2.address.toLowerCase() === p1.protocolAddr.toLowerCase() ) );\n              if (foundProtocol){\n                protocols.push(foundProtocol);\n              }\n            });\n\n            // Add APR columns\n            header.push('APR Idle');\n            header.push('SCORE Idle');\n\n            aprAvg['idle'] = [];\n            scoreAvg['idle'] = [];\n\n            protocols.forEach( p => {\n              header.push('APR '+p.name);\n              header.push('SCORE '+p.name);\n\n              aprAvg[p.name] = [];\n              scoreAvg[p.name] = [];\n            });\n\n            rows.push(header.join(','));\n          }\n\n          const date = moment(r.timestamp*1000).format('YYYY-MM-DD');\n          const rate = this.BNify(r.idleRate).div(1e18).toFixed(5);\n          const score = parseFloat(r.idleScore);\n\n          const row = [];\n          row.push(`${token}-${strategy}`);\n          row.push(date);\n          row.push(rate);\n          row.push(score);\n\n          if (date>='2020-09-15'/* && date<='2020-11-09'*/){\n            aprAvg['idle'].push(parseFloat(rate));\n            scoreAvg['idle'].push(parseFloat(score));\n          }\n\n          protocols.forEach( pInfo => {\n            const pData = r.protocolsData.find( p => (p.protocolAddr.toLowerCase() === pInfo.address.toLowerCase()) );\n            let pRate = '';\n            let pScore = '';\n            if (pData){\n              pScore = !this.BNify(pData.defiScore).isNaN() ? parseFloat(pData.defiScore) : '0.00000';\n              pRate = !this.BNify(pData.rate).isNaN() ? this.BNify(pData.rate).div(1e18) : '0.00000';\n              if (typeof pData[`${pInfo.name}AdditionalAPR`] !== 'undefined'){\n                const additionalRate = this.BNify(pData[`${pInfo.name}AdditionalAPR`]).div(1e18);\n                if (!additionalRate.isNaN()){\n                  pRate = pRate.plus(additionalRate);\n                }\n              }\n\n              if (date>='2020-09-15'/* && date<='2020-11-09'*/){\n                if (!isNaN(parseFloat(pRate))){\n                  aprAvg[pInfo.name].push(parseFloat(pRate));\n                }\n                if (!isNaN(parseFloat(pScore))){\n                  scoreAvg[pInfo.name].push(parseFloat(pScore));\n                }\n              }\n            }\n\n            row.push(pRate);\n            row.push(pScore);\n          });\n\n          rows.push(row.join(','));\n        });\n\n        Object.keys(aprAvg).forEach( p => {\n          const avgRate = aprAvg[p].sum()/aprAvg[p].length;\n          this.customLog(`${token}-${strategy}-${p} - Avg Rate: ${avgRate}`);\n        });\n\n        Object.keys(scoreAvg).forEach( p => {\n          const avgScore = scoreAvg[p].sum()/scoreAvg[p].length;\n          this.customLog(`${token}-${strategy}-${p} - Avg Score: ${avgScore}`);\n        });\n\n        // if (token==='DAI' && isRisk){\n        //   debugger;\n        // }\n\n        csv.push(rows.join('\\n'));\n      });\n    });\n\n    this.customLog(csv.join('\\n'));\n  }\n  getGovTokenPool = async (govToken=null,availableTokens=null,convertToken=null) => {\n    let output = this.BNify(0);\n\n    if (!availableTokens){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const enabledTokens = govToken ? [govToken] : null;\n      const compTokenBalance = await this.getGovTokensBalances(tokenConfig.idle.address,convertToken,enabledTokens);\n      if (compTokenBalance && compTokenBalance.total){\n        output = output.plus(compTokenBalance.total);\n      }\n    });\n    return output;\n  }\n  getIdleGovToken = () => {\n    if (!this.idleGovToken){\n      this.idleGovToken = new IdleGovToken(this.props);\n    }\n    return this.idleGovToken;\n  }\n  getTokenGovTokens = (tokenConfig) => {\n    const output = {};\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    Object.keys(govTokens).forEach( govToken => {\n      const govTokenConfig = govTokens[govToken];\n      if (!govTokenConfig.enabled){\n        return;\n      }\n      if (govTokenConfig.protocol === 'idle'){\n        if (!govTokenConfig.disabledTokens.includes(tokenConfig.idle.token)){\n          output[govToken] = govTokenConfig;\n        }\n      } else {\n        const foundProtocol = tokenConfig.protocols.find( p => (p.enabled && p.name.toLowerCase() === govTokenConfig.protocol.toLowerCase()) )\n        if (foundProtocol){\n          output[govToken] = govTokenConfig;\n        }\n      }\n    });\n    return output;\n  }\n  fixDistributionSpeed = (speed,frequency) => {\n    const blocksPerYear = this.BNify(this.getGlobalConfig(['network','blocksPerYear']));\n    speed = this.BNify(speed);\n    if (speed && !speed.isNaN()){\n      switch (frequency){\n        case 'day':\n          const blocksPerDay = blocksPerYear.div(365.242199);\n          speed = speed.times(blocksPerDay);\n        break;\n        case 'week':\n          const blocksPerWeek = blocksPerYear.div(52.1429);\n          speed = speed.times(blocksPerWeek);\n        break;\n        case 'month':\n          const blocksPerMonth = blocksPerYear.div(12);\n          speed = speed.times(blocksPerMonth);\n        break;\n        case 'year':\n          speed = speed.times(blocksPerYear);\n        break;\n        default:\n        break;\n      }\n      return speed;\n    }\n    return null;\n  }\n  getGovTokensUserDistributionSpeed = async (account,tokenConfig=null,enabledTokens=null) => {\n    const govTokensUserDistribution = {};\n    const govTokens = this.getGlobalConfig(['govTokens']);\n\n    await this.asyncForEach(Object.keys(govTokens),async (govToken) => {\n      if (enabledTokens && !enabledTokens.includes(govToken)){\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled){\n        return;\n      }\n\n      const availableTokens = {};\n      availableTokens[tokenConfig.token] = tokenConfig;\n\n      let output = null;\n      switch (govToken){\n        case 'COMP':\n          output = await this.getCompUserDistribution(account,availableTokens);\n        break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          output = await idleGovToken.getUserDistribution(account,availableTokens);\n        break;\n        default:\n        break;\n      }\n\n      if (output){\n        output = output.div(1e18);\n        if (govTokenConfig.distributionFrequency){\n          output = this.fixDistributionSpeed(output,govTokenConfig.distributionFrequency);\n        }\n        govTokensUserDistribution[govToken] = output;\n      }\n    });\n\n    return govTokensUserDistribution;\n  }\n  getGovTokensDistributionSpeed = async (tokenConfig,enabledTokens=null) => {\n    const govTokensDistribution = {};\n    const govTokens = this.getGlobalConfig(['govTokens']);\n\n    await this.asyncForEach(Object.keys(govTokens),async (govToken) => {\n      if (enabledTokens && !enabledTokens.includes(govToken)){\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled){\n        return;\n      }\n\n      let govSpeed = null;\n      switch (govToken){\n        case 'COMP':\n          const cTokenInfo = tokenConfig.protocols.find( p => (p.name === 'compound') );\n          if (cTokenInfo){\n            govSpeed = await this.getCompDistribution(tokenConfig,null,false);\n          }\n        break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          govSpeed = await idleGovToken.getSpeed(tokenConfig.idle.address);\n        break;\n        default:\n        break;\n      }\n\n      if (govSpeed){\n        govSpeed = govSpeed.div(1e18);\n        if (govTokenConfig.distributionFrequency){\n          govSpeed = this.fixDistributionSpeed(govSpeed,govTokenConfig.distributionFrequency);\n        }\n        govTokensDistribution[govToken] = govSpeed;\n      }\n    });\n\n    return govTokensDistribution;\n  }\n  getGovTokensAprs = async (token,tokenConfig,enabledTokens=null) => {\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const govTokensAprs = {}\n\n    await this.asyncForEach(Object.keys(govTokens),async (govToken) => {\n\n      if (enabledTokens && !enabledTokens.includes(govToken)){\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled || govTokenConfig.aprTooltipMode === false){\n        return;\n      }\n\n      let output = null;\n      let tokenAllocation = null;\n\n      switch (govToken){\n        case 'COMP':\n          switch (govTokenConfig.aprTooltipMode){\n            default:\n            case 'apr':\n              [output,tokenAllocation] = await Promise.all([\n                this.getCompAPR(token,tokenConfig),\n                this.getTokenAllocation(tokenConfig,false,false)\n              ]);\n\n              // Cut the COMP token proportionally on Idle funds allocation in compound\n              if (tokenAllocation){\n                const compoundInfo = tokenConfig.protocols.find( p => (p.name === 'compound') );\n                if (compoundInfo){\n                  if (tokenAllocation.protocolsAllocationsPerc[compoundInfo.address.toLowerCase()]){\n                    const compoundAllocationPerc = tokenAllocation.protocolsAllocationsPerc[compoundInfo.address.toLowerCase()];\n                    output = output.times(compoundAllocationPerc);\n                  }\n                }\n              }\n            break;\n          }\n        break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          switch (govTokenConfig.aprTooltipMode){\n            case 'apr':\n              output = await idleGovToken.getAPR(token,tokenConfig);\n            break;\n            case 'distribution':\n              output = await idleGovToken.getSpeed(tokenConfig.idle.address);\n              if (output){\n                output = this.fixTokenDecimals(output,18);\n                output = this.fixDistributionSpeed(output,govTokenConfig.distributionFrequency);\n              }\n            break;\n            case 'userDistribution':\n              output = await idleGovToken.getUserDistribution(tokenConfig);\n            break;\n            default:\n            break;\n          }\n        break;\n        default:\n        break;\n      }\n\n      if (output !== null && this.BNify(output).gt(0)){\n        govTokensAprs[govToken] = output;\n      }\n    });\n\n    return govTokensAprs;\n  }\n  getGovTokensBalances = async (address=null,convertToken='DAI',enabledTokens=null) => {\n    if (!address){\n      address = this.props.tokenConfig.idle.address;\n    }\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const govTokensBalances = {}\n\n    await this.asyncForEach(Object.keys(govTokens),async (token) => {\n\n      if (enabledTokens && !enabledTokens.includes(token)){\n        return;\n      }\n      \n      const govTokenConfig = govTokens[token];\n\n      if (!govTokenConfig.enabled){\n        return;\n      }\n\n      // Get gov token balance\n      let govTokenBalance = await this.getProtocolBalance(token,address);\n\n      if (govTokenBalance){\n        // Get gov token conversion rate\n        let tokenConversionRate = null;\n        if (convertToken){\n          const fromTokenConfig = this.getGlobalConfig(['stats','tokens',convertToken]);\n          try {\n            tokenConversionRate = await this.getUniswapConversionRate(fromTokenConfig,govTokenConfig);\n          } catch (error) {\n            \n          }\n        }\n\n        // Fix token decimals and convert\n        govTokensBalances[token] = this.fixTokenDecimals(govTokenBalance,govTokens[token].decimals,tokenConversionRate);\n\n        // Initialize Total gov Tokens\n        if (!govTokensBalances.total){\n          govTokensBalances.total = this.BNify(0);\n        }\n\n        // Sum Total gov Tokens\n        govTokensBalances.total = govTokensBalances.total.plus(govTokensBalances[token]);\n      }\n    });\n\n    return govTokensBalances;\n  }\n  getGovTokenConfigByAddress = (address) => {\n    if (!address){\n      return false;\n    }\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    return Object.values(govTokens).find( tokenConfig => (tokenConfig.enabled && tokenConfig.address.toLowerCase() === address.toLowerCase()) );\n  }\n  getGovTokensUserTotalBalance = async (account=null,availableTokens=null,convertToken=null,checkShowBalance=true) => {\n\n    // Check for cached data\n    const cachedDataKey = `govTokensUserTotalBalance_${account}_${JSON.stringify(availableTokens)}_${convertToken}_${checkShowBalance}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const govTokensUserBalances = await this.getGovTokensUserBalances(account,availableTokens,convertToken,null,checkShowBalance);\n    if (govTokensUserBalances){\n      const govTokensEarnings = Object.values(govTokensUserBalances).reduce( (acc, govTokenAmount) => {\n        acc = acc.plus(this.BNify(govTokenAmount));\n        return acc;\n      }, this.BNify(0));\n\n      return this.setCachedDataWithLocalStorage(cachedDataKey,govTokensEarnings);\n    }\n    return this.BNify(0);\n  }\n  getGovTokensUserBalances = async (account=null,availableTokens=null,convertToken=null,govTokenConfigForced=null,checkShowBalance=false) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.availableStrategies && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    const output = {};\n\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const idleTokenConfig = availableTokens[token].idle;\n\n      // Get govTokens amounts\n      const govTokensAmounts = await this.genericContractCall(idleTokenConfig.token,'getGovTokensAmounts',[account]);\n\n      if (govTokensAmounts){\n        await this.asyncForEach(govTokensAmounts, async (govTokenAmount,govTokenIndex) => {\n          govTokenAmount = this.BNify(govTokenAmount);\n          // Get gov Token config by index\n          const govTokenAddress = await this.genericContractCall(idleTokenConfig.token,'govTokens',[govTokenIndex]);\n\n          if (govTokenAddress){\n            const govTokenConfig = govTokenConfigForced ? govTokenConfigForced : this.getGovTokenConfigByAddress(govTokenAddress);\n\n            if (govTokenConfig && (!checkShowBalance || govTokenConfig.showBalance) && govTokenConfig.address && govTokenConfig.address.toLowerCase() === govTokenAddress.toLowerCase()){\n\n              // Get gov token conversion rate\n              let tokenConversionRate = null;\n              if (convertToken){\n                const fromTokenConfig = this.getGlobalConfig(['stats','tokens',convertToken]);\n                if (fromTokenConfig){\n                  try {\n                    tokenConversionRate = await this.getUniswapConversionRate(fromTokenConfig,govTokenConfig);\n                  } catch (error) {\n                    \n                  }\n                }\n              }\n\n              govTokenAmount = this.fixTokenDecimals(govTokenAmount,govTokenConfig.decimals,tokenConversionRate);\n\n              // Initialize govToken balance\n              if (!output[govTokenConfig.token]){\n                output[govTokenConfig.token] = this.BNify(0); // this.BNify(1) for testing\n              }\n\n              // Add govTokens balance\n              output[govTokenConfig.token] = output[govTokenConfig.token].plus(govTokenAmount);\n            }\n          }\n        });\n      }\n    });\n\n    return output;\n  }\n  getTokenFees = async (tokenConfig=null) => {\n    if (!tokenConfig && this.props.tokenConfig){\n      tokenConfig = this.props.tokenConfig;\n    }\n    const fee = await this.genericContractCall(tokenConfig.idle.token, 'fee');\n    if (fee){\n      return this.BNify(fee).div(this.BNify(100000));\n    }\n    return null;\n  }\n  getUserTokenFees = async (tokenConfig=null,account=null) => {\n    if (!tokenConfig && this.props.tokenConfig){\n      tokenConfig = this.props.tokenConfig;\n    }\n    if (!account && this.props.account){\n      account = this.props.account;\n    }\n\n    if (!account || !tokenConfig){\n      return null;\n    }\n\n    let [\n      feePercentage,\n      amountLent,\n      redeemableBalance\n    ] = await Promise.all([\n      this.getTokenFees(tokenConfig),\n      this.loadAssetField('amountLent',tokenConfig.token,tokenConfig,account),\n      this.loadAssetField('redeemableBalance',tokenConfig.token,tokenConfig,account)\n    ]);\n\n    if (feePercentage && amountLent && redeemableBalance){\n      const gain = redeemableBalance.minus(amountLent);\n      const fees = gain.times(feePercentage);\n\n      // this.customLog('fees',tokenConfig.token,amountLent.toString(),redeemableBalance.toString(),gain.toString(),fees.toString());\n\n      return fees;\n    }\n\n    return null;\n  }\n  getGovTokenUserBalance = async (govTokenConfig,account=null,availableTokens=null,convertToken=null) => {\n    const govTokensUserBalances = await this.getGovTokensUserBalances(account,availableTokens,convertToken,govTokenConfig);\n    return govTokensUserBalances && govTokensUserBalances[govTokenConfig.token] ? govTokensUserBalances[govTokenConfig.token] : this.BNify(0);\n  }\n  getTotalTVL = async () => {\n    const tokensTVL = await this.getTokensTVL();\n    return Object.values(tokensTVL).reduce( (totalTVL,tokenInfo) => {\n      const tokenTVL = this.BNify(tokenInfo.totalTVL);\n      if (tokenTVL && !tokenTVL.isNaN()){\n        totalTVL = totalTVL.plus(tokenTVL);\n      }\n      return totalTVL;\n    },this.BNify(0));\n  }\n  getTokensTVL = async () => {\n    const output = {};\n    const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n    await this.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n      const isRisk = strategy === 'risk';\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n\n        let tokenTVL = this.BNify(0);\n        let totalTVL = this.BNify(0);\n        let oldTokenTVL = this.BNify(0);\n        const tokenConfig = availableTokens[token];\n        const idleTokenName = tokenConfig.idle.token;\n\n        output[idleTokenName] = {\n          tokenTVL,\n          totalTVL,\n          oldTokenTVL,\n          govTokens:{},\n        };\n\n        const [\n          tokenPrice,\n          totalSupply\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.getIdleTokenSupply(tokenConfig)\n        ]);\n\n        tokenTVL = this.fixTokenDecimals(totalSupply,18).times(tokenPrice);\n        tokenTVL = await this.convertTokenBalance(tokenTVL,token,tokenConfig,isRisk);\n\n        output[idleTokenName].tokenTVL = tokenTVL;\n        totalTVL = totalTVL.plus(tokenTVL);\n\n        // Add Gov Tokens\n        const govTokens = this.getTokenGovTokens(tokenConfig);\n        if (govTokens){\n          await this.asyncForEach(Object.keys(govTokens).filter( govToken => (govTokens[govToken].showAUM) ), async (govToken) => {\n            const govTokenConfig = govTokens[govToken];\n            const [\n              govTokenBalance,\n              govTokenConversionRate\n            ] = await Promise.all([\n              this.getProtocolBalance(govToken,tokenConfig.idle.address),\n              this.getUniswapConversionRate(DAITokenConfig,govTokenConfig)\n            ]);\n            \n            if (govTokenBalance && govTokenConversionRate){\n              const govTokenBalanceConverted = this.fixTokenDecimals(govTokenBalance,govTokenConfig.decimals).times(this.BNify(govTokenConversionRate));\n              if (govTokenBalanceConverted && !govTokenBalanceConverted.isNaN()){\n                totalTVL = totalTVL.plus(govTokenBalanceConverted);\n                output[idleTokenName].govTokens[govToken] = govTokenBalanceConverted;\n              }\n            }\n          });\n        }\n\n        // Get old token allocation\n        if (tokenConfig.migration && tokenConfig.migration.oldContract){\n          const oldTokenConfig = Object.assign({},tokenConfig);\n          oldTokenConfig.protocols = Object.values(tokenConfig.protocols);\n          oldTokenConfig.idle = Object.assign({},tokenConfig.migration.oldContract);\n\n          // Replace protocols with old protocols\n          if (oldTokenConfig.migration.oldProtocols){\n            oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n              const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n              if (foundProtocol){\n                const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                oldTokenConfig.protocols[protocolPos] = oldProtocol;\n              }\n            });\n          }\n\n          const [\n            oldTokenPrice,\n            oldTotalSupply\n          ] = await Promise.all([\n            this.getIdleTokenPrice(oldTokenConfig),\n            this.getIdleTokenSupply(oldTokenConfig.idle.name)\n          ]);\n\n          if (oldTokenPrice && oldTotalSupply){\n            oldTokenTVL = this.fixTokenDecimals(oldTotalSupply,18).times(oldTokenPrice);\n            oldTokenTVL = await this.convertTokenBalance(oldTokenTVL,token,oldTokenConfig,isRisk);\n            if (oldTokenTVL && !oldTokenTVL.isNaN()){\n              output[idleTokenName].oldTokenTVL = oldTokenTVL;\n              totalTVL = totalTVL.plus(oldTokenTVL);\n            }\n          }\n        }\n\n        output[idleTokenName].totalTVL = totalTVL;\n      });\n    });\n\n    return output;\n  }\n  getSubstackLatestFeed = async () => {\n    const cachedDataKey = `substackLatestFeed`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const config = this.getGlobalConfig(['stats','config']);\n    const endpointInfo = this.getGlobalConfig(['stats','substack']);\n    const idleSubstackFeed = await this.makeRequest(endpointInfo.endpoint,false,config);\n\n    if (idleSubstackFeed && idleSubstackFeed.data && idleSubstackFeed.data.items && idleSubstackFeed.data.items.length>0){\n      const latestFeed = idleSubstackFeed.data.items[0];\n      return this.setCachedDataWithLocalStorage(cachedDataKey,latestFeed,endpointInfo.TTL);\n    }\n\n    return null;\n  }\n  getAggregatedStats = async (addGovTokens=true) => {\n    const config = this.getGlobalConfig(['stats','config']);\n    const endpointInfo = this.getGlobalConfig(['stats','tvls']);\n    const tvls = await this.makeCachedRequest(endpointInfo.endpoint,endpointInfo.TTL,true,false,config);\n\n    if (tvls){\n      const avgAPY = this.BNify(tvls.avgAPY);\n      const totalAUM = this.BNify(tvls.totalTVL);\n      return {\n        avgAPY,\n        totalAUM\n      };\n    } else {\n      return await this.getAggregatedStats_chain();\n    }\n  }\n  getAggregatedStats_chain = async (addGovTokens=true) => {\n\n    // Check for cached data\n    const cachedDataKey = `getAggregatedStats_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && (cachedData.avgAPR && !this.BNify(cachedData.avgAPR).isNaN()) && (cachedData.avgAPY && !this.BNify(cachedData.avgAPY).isNaN()) && (cachedData.totalAUM && !this.BNify(cachedData.totalAUM).isNaN())){\n      return {\n        avgAPR:this.BNify(cachedData.avgAPR),\n        avgAPY:this.BNify(cachedData.avgAPY),\n        totalAUM:this.BNify(cachedData.totalAUM)\n      };\n    }\n\n    let avgAPR = this.BNify(0);\n    let avgAPY = this.BNify(0);\n    let totalAUM = this.BNify(0);\n    const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n    await this.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n      const isRisk = strategy === 'risk';\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n        const tokenConfig = availableTokens[token];\n        const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,addGovTokens);\n        const tokenAprs = await this.getTokenAprs(tokenConfig,tokenAllocation,addGovTokens);\n        if (tokenAllocation && tokenAllocation.totalAllocationWithUnlent && !tokenAllocation.totalAllocationWithUnlent.isNaN()){\n          const tokenAUM = await this.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent,token,tokenConfig,isRisk);\n          totalAUM = totalAUM.plus(tokenAUM);\n          // console.log(tokenConfig.idle.token+'V4',tokenAUM.toFixed());\n          if (tokenAprs && tokenAprs.avgApr && !tokenAprs.avgApr.isNaN()){\n            avgAPR = avgAPR.plus(tokenAUM.times(tokenAprs.avgApr));\n            avgAPY = avgAPY.plus(tokenAUM.times(tokenAprs.avgApy));\n          }\n        }\n\n        // Add Gov Tokens\n        const govTokens = this.getTokenGovTokens(tokenConfig);\n        if (govTokens){\n          await this.asyncForEach(Object.keys(govTokens).filter( govToken => (govTokens[govToken].showAUM) ), async (govToken) => {\n            const govTokenConfig = govTokens[govToken];\n            const [\n              tokenBalance,\n              tokenConversionRate\n            ] = await Promise.all([\n              this.getProtocolBalance(govToken,tokenConfig.idle.address),\n              this.getUniswapConversionRate(DAITokenConfig,govTokenConfig)\n            ]);\n            \n            if (tokenBalance && tokenConversionRate){\n              const tokenBalanceConverted = this.fixTokenDecimals(tokenBalance,govTokenConfig.decimals).times(this.BNify(tokenConversionRate));\n              if (tokenBalanceConverted && !tokenBalanceConverted.isNaN()){\n                // console.log(tokenConfig.idle.token+'V4 - COMP',tokenBalanceConverted.toFixed());\n                totalAUM = totalAUM.plus(tokenBalanceConverted);\n              }\n            }\n          });\n        }\n\n        // Get old token allocation\n        if (tokenConfig.migration && tokenConfig.migration.oldContract){\n          const oldTokenConfig = Object.assign({},tokenConfig);\n          oldTokenConfig.protocols = Object.values(tokenConfig.protocols);\n          oldTokenConfig.idle = Object.assign({},tokenConfig.migration.oldContract);\n\n          // Replace protocols with old protocols\n          if (oldTokenConfig.migration.oldProtocols){\n            oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n              const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n              if (foundProtocol){\n                const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                oldTokenConfig.protocols[protocolPos] = oldProtocol;\n              }\n            });\n          }\n\n          const oldTokenAllocation = await this.getTokenAllocation(oldTokenConfig,false,false);\n          if (oldTokenAllocation && oldTokenAllocation.totalAllocation && !oldTokenAllocation.totalAllocation.isNaN()){\n            const oldTokenTotalAllocation = await this.convertTokenBalance(oldTokenAllocation.totalAllocation,token,oldTokenConfig,isRisk);\n            totalAUM = totalAUM.plus(oldTokenTotalAllocation);\n            // console.log(oldTokenConfig.idle.name,oldTokenTotalAllocation.toFixed(5));\n          }\n        }\n      });\n    });\n\n    avgAPR = avgAPR.div(totalAUM);\n    avgAPY = avgAPY.div(totalAUM);\n\n    const output = {\n      avgAPR,\n      avgAPY,\n      totalAUM\n    };\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey,output);\n  }\n  getTokenApy = async (tokenConfig) => {\n    const tokenAprs = await this.getTokenAprs(tokenConfig);\n    if (tokenAprs && tokenAprs.avgApy !== null){\n      return tokenAprs.avgApy;\n    }\n    return null;\n  }\n  getTokensToMigrate = async (selectedStrategy=null) => {\n\n    if (!this.props.availableStrategies || !this.props.account){\n      return false;\n    }\n\n    const tokensToMigrate = {};\n\n    await this.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n      if (selectedStrategy && selectedStrategy !== strategy){\n        return;\n      }\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n        const tokenConfig = availableTokens[token];\n        const {\n          migrationEnabled,\n          oldContractBalanceFormatted\n        } = await this.checkMigration(tokenConfig,this.props.account);\n        \n        if (migrationEnabled){\n          const tokenKey = selectedStrategy ? token : tokenConfig.idle.token;\n          tokensToMigrate[tokenKey] = {\n            token,\n            strategy,\n            tokenConfig,\n            oldContractBalanceFormatted\n          }\n        }\n      });\n    });\n\n    return tokensToMigrate;\n  }\n  /*\n  Get protocols tokens balances\n  */\n  getProtocolsTokensBalances = async (protocol=null) => {\n    if (!this.props.account){\n      return false;\n    }\n    const tokenBalances = {};\n    const minTokenBalance = this.BNify(1).div(1e4);\n    const protocolsTokens = this.getGlobalConfig(['tools','tokenMigration','props','availableTokens']);\n    if (protocolsTokens){\n      await this.asyncForEach(Object.keys(protocolsTokens),async (token) => {\n        const tokenConfig = protocolsTokens[token];\n        if (protocol !== null && tokenConfig.protocol.toLowerCase() !== protocol.toLowerCase() ){\n          return;\n        }\n        let tokenContract = this.getContractByName(tokenConfig.token);\n        if (!tokenContract && tokenConfig.abi){\n          tokenContract = await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n        }\n        if (tokenContract){\n          const tokenBalance = await this.getTokenBalance(tokenConfig.token,this.props.account);\n          if (tokenBalance && tokenBalance.gte(minTokenBalance)){\n            tokenBalances[token] = {\n              tokenConfig,\n              balance:tokenBalance,\n            };\n          }\n        }\n      });\n    }\n\n    return tokenBalances;\n  }\n  /*\n  Convert token Balance\n  */\n  convertTokenBalance = async (tokenBalance,token,tokenConfig,isRisk=false) => {\n    // Check for USD conversion rate\n    tokenBalance = this.BNify(tokenBalance);\n    if (tokenBalance.gt(0)){\n      const tokenUsdConversionRate = await this.getTokenConversionRate(tokenConfig,isRisk);\n      if (tokenUsdConversionRate){\n        tokenBalance = tokenBalance.times(tokenUsdConversionRate);\n      }\n    }\n    return tokenBalance;\n  }\n\n  getAvgAPYStats = async (address,isRisk,startTimestamp=null,endTimestamp=null) => {\n\n    const apiResults = await this.getTokenApiData(address,isRisk,startTimestamp,endTimestamp,true,7200);\n\n    if (apiResults && apiResults.length){\n      const apr = apiResults.reduce( (sum,r) => {\n        const idleRate = this.fixTokenDecimals(r.idleRate,18);\n        return sum.plus(idleRate);\n      },this.BNify(0));\n\n      // Calculate average\n      return apr.div(apiResults.length);\n    }\n\n    return null;\n  }\n\n  /*\n  Get idleToken conversion rate\n  */\n  getTokenConversionRate = async (tokenConfig,isRisk,conversionRateField=null,count=0) => {\n\n    if (!conversionRateField){\n      conversionRateField = this.getGlobalConfig(['stats','tokens',tokenConfig.token,'conversionRateField']);\n      if (!conversionRateField){\n        return null;\n      }\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenConversionRate_${tokenConfig.address}_${isRisk}_${conversionRateField}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      // console.log('CACHED -',count,cachedDataKey,this.BNify(cachedData).toFixed());\n      return this.BNify(cachedData);\n    }\n\n    let tokenData = await this.getTokenApiData(tokenConfig.address,isRisk,null,null,false,null,'desc',1);\n\n    // console.log('TOKEN DATA - ',tokenConfig.address,isRisk,tokenData);\n\n    if (tokenData && tokenData.length){\n      tokenData = tokenData.pop();\n      if (tokenData && !this.BNify(tokenData[conversionRateField]).isNaN()){\n        const conversionRate = this.fixTokenDecimals(tokenData[conversionRateField],18);\n        if (!this.BNify(conversionRate).isNaN()){\n          // console.log('NOT CACHED -',count,cachedDataKey,this.BNify(conversionRate).toFixed());\n          return this.setCachedDataWithLocalStorage(cachedDataKey,conversionRate);\n        }\n      }\n    } else {\n      const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n      const conversionRate = await this.getUniswapConversionRate(DAITokenConfig,tokenConfig);\n      if (!this.BNify(conversionRate).isNaN()){\n        // console.log('NOT CACHED -',count,cachedDataKey,this.BNify(conversionRate).toFixed());\n        return this.setCachedDataWithLocalStorage(cachedDataKey,conversionRate);\n      }\n    }\n\n    if (count<3){\n      return await this.getTokenConversionRate(tokenConfig,isRisk,conversionRateField,count+1); \n    }\n\n    return null;\n  }\n\n  getTokenScore = async (tokenConfig,isRisk) => {\n    // Check for cached data\n    const cachedDataKey = `tokenScore_${tokenConfig.address}_${isRisk}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const apiInfo = globalConfigs.stats.rates;\n    const config = this.getGlobalConfig(['stats','config']);\n    const endpoint = `${apiInfo.endpoint}${tokenConfig.address}?isRisk=${isRisk}&limit=1&order=DESC`;\n    const [\n      tokenData,\n      tokenAllocation\n    ] = await Promise.all([\n      this.makeCachedRequest(endpoint,apiInfo.TTL,true,false,config),\n      this.getTokenAllocation(tokenConfig,false,false)\n    ]);\n\n    let tokenScore = this.BNify(0);\n\n    if (tokenData && tokenAllocation){\n      Object.keys(tokenAllocation.protocolsAllocationsPerc).forEach( protocolAddr => {\n        const protocolAllocationPerc = this.BNify(tokenAllocation.protocolsAllocationsPerc[protocolAddr]);\n        if (protocolAllocationPerc.gt(0.001) && tokenData.length>0){\n          const protocolInfo = tokenData[0].protocolsData.find( p => (p.protocolAddr.toLowerCase() === protocolAddr.toLowerCase()) );\n          if (protocolInfo){\n            const protocolScore = this.BNify(protocolInfo.defiScore);\n            if (!protocolScore.isNaN()){\n              tokenScore = tokenScore.plus(protocolScore.times(protocolAllocationPerc));\n              // this.customLog(protocolAddr,tokenAllocation.protocolsAllocationsPerc[protocolAddr].toFixed(6),protocolScore.toFixed(6),tokenScore.toFixed(6));\n            }\n          }\n        }\n      });\n    }\n\n    // Fallback\n    if (!tokenScore || tokenScore.isNaN() || tokenScore.lte(0)){\n      tokenScore = this.getTokenScoreApi(tokenConfig,isRisk);\n    }\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey,tokenScore);\n  }\n\n  /*\n  Get idleToken score\n  */\n  getTokenScoreApi = async (tokenConfig,isRisk) => {\n    // Check for cached data\n    const cachedDataKey = `tokenScoreApi_${tokenConfig.address}_${isRisk}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const apiInfo = globalConfigs.stats.scores;\n    const config = this.getGlobalConfig(['stats','config']);\n    const endpoint = `${apiInfo.endpoint}${tokenConfig.address}?isRisk=${isRisk}`;\n    let tokenData = await this.makeCachedRequest(endpoint,apiInfo.TTL,true,false,config);\n\n    if (tokenData && tokenData.length){\n      let tokenScore = this.BNify(tokenData[0].idleScore);\n      if (tokenScore && tokenScore.gt(0)){\n        // Set cached data\n        return this.setCachedData(cachedDataKey,tokenScore);\n      // Take latest historical valid score\n      } else {\n        const timestamp = parseInt(Date.now()/1000);\n        const startTimestamp = parseInt(timestamp)-(60*60*24);\n        tokenData = await this.getTokenApiData(tokenConfig.address,isRisk,startTimestamp,null,true,null,'DESC');\n\n        const filteredTokenData = tokenData.filter( d => (this.BNify(d.idleScore).gt(0)) );\n        if (filteredTokenData.length){\n          tokenScore = this.BNify(filteredTokenData[0].idleScore);\n          if (!this.BNify(tokenScore).isNaN()){\n            return this.setCachedDataWithLocalStorage(cachedDataKey,tokenScore);\n          }\n        }\n      }\n    }\n\n    return null;\n  }\n  /*\n  Get idleTokens aggregated APR\n  */\n  getTokenAprs = async (tokenConfig,tokenAllocation=false,addGovTokens=true) => {\n\n    if (!tokenConfig.idle){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenAprs_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && (cachedData.avgApr && !this.BNify(cachedData.avgApr).isNaN()) && (cachedData.avgApy && !this.BNify(cachedData.avgApy).isNaN()) ){\n      return {\n        avgApr:this.BNify(cachedData.avgApr),\n        avgApy:this.BNify(cachedData.avgApy)\n      };\n    }\n\n    const Aprs = await this.getAprs(tokenConfig.idle.token);\n\n    if (!Aprs){\n      return false;\n    }\n\n    if (!tokenAllocation){\n      tokenAllocation = await this.getTokenAllocation(tokenConfig);\n    }\n\n    if (!tokenAllocation){\n      return false;\n    }\n\n    const addresses = Aprs.addresses.map((addr,i) => { return addr.toString().toLowerCase() });\n    const aprs = Aprs.aprs;\n\n    const protocolsAprs = {};\n    const protocolsApys = {};\n    let compAPR = null;\n\n    await this.asyncForEach(tokenConfig.protocols,async (protocolInfo,i) => {\n      const protocolAddr = protocolInfo.address.toString().toLowerCase();\n      const addrIndex = addresses.indexOf(protocolAddr);\n      if ( addrIndex !== -1 ) {\n        let protocolApr = this.BNify(+this.toEth(aprs[addrIndex]));\n        let protocolApy = this.apr2apy(protocolApr.div(100)).times(100);\n\n        if (addGovTokens && protocolInfo.name === 'compound'){\n          compAPR = await this.getCompAPR(tokenConfig.token,tokenConfig);\n        }\n\n        protocolsApys[protocolAddr] = protocolApy;\n        protocolsAprs[protocolAddr] = protocolApr;\n      }\n    });\n\n    const tokenAprs = {\n      avgApr: null,\n      avgApy: null\n    };\n\n    if (tokenAllocation){\n      tokenAprs.avgApr = this.getAvgApr(protocolsAprs,tokenAllocation.protocolsAllocations,tokenAllocation.totalAllocation);\n      tokenAprs.avgApy = this.getAvgApr(protocolsApys,tokenAllocation.protocolsAllocations,tokenAllocation.totalAllocation);\n\n      if (compAPR){\n        tokenAprs.avgApr = tokenAprs.avgApr.plus(compAPR);\n        tokenAprs.avgApy = tokenAprs.avgApy.plus(compAPR);\n      }\n\n      // Add $IDLE token APR\n      const idleGovTokenShowAPR = this.getGlobalConfig(['govTokens','IDLE','showAPR']);\n      const idleGovTokenEnabled = this.getGlobalConfig(['govTokens','IDLE','enabled']);\n      if (idleGovTokenEnabled && idleGovTokenShowAPR){\n        const idleGovToken = this.getIdleGovToken();\n        const idleAPR = await idleGovToken.getAPR(tokenConfig.token,tokenConfig);\n        if (idleAPR){\n          tokenAprs.avgApr = tokenAprs.avgApr.plus(idleAPR);\n          tokenAprs.avgApy = tokenAprs.avgApy.plus(idleAPR);\n        }\n      }\n      return this.setCachedDataWithLocalStorage(cachedDataKey,tokenAprs);\n    }\n\n    return null;\n  }\n  abbreviateNumber(value,decimals=3,maxPrecision=5,minPrecision=0){\n\n    const isNegative = parseFloat(value)<0;\n    let newValue = this.BNify(value).abs();\n    const suffixes = [\"\", \"K\", \"M\", \"B\",\"T\"];\n    let suffixNum = 0;\n    while (newValue.gte(1000)) {\n      newValue = newValue.div(1000);\n      suffixNum++;\n    }\n\n    maxPrecision = Math.max(1,maxPrecision);\n\n    // Prevent decimals on integer number\n    if (value>=1000){\n      const decimalPart = decimals ? newValue.mod(1).toFixed(maxPrecision).substr(2,decimals) : null;\n      newValue = parseInt(newValue).toString()+( decimalPart ? '.'+decimalPart : '' );\n    } else {\n      newValue = newValue.toFixed(decimals);\n    }\n\n    // Adjust number precision\n    if (newValue>=1 && (newValue.length-1)>maxPrecision){\n      newValue = parseFloat(newValue).toPrecision(maxPrecision);\n    } else if ((newValue.length-1)<minPrecision) {\n      const difference = minPrecision-(newValue.length-1);\n      const append = this.BNify(value).abs().toString().replace('.','').substr((newValue.length-1),difference);\n      newValue += append;\n    }\n\n    // Add minus if number is negative\n    if (isNegative){\n      newValue = '-'+newValue;\n    }\n\n    newValue += suffixes[suffixNum];\n\n    return newValue;\n  }\n  getFormattedBalance(balance,label,decimals,maxLen,highlightedDecimals){\n    const defaultValue = '-';\n    decimals = !isNaN(decimals) ? decimals : 6;\n    maxLen = !isNaN(maxLen) ? maxLen : 10;\n    highlightedDecimals = !isNaN(highlightedDecimals) ? highlightedDecimals : 0;\n    balance = parseFloat(this.BNify(balance)).toFixed(decimals);\n\n    const numLen = balance.toString().replace('.','').length;\n    if (numLen>maxLen){\n      decimals = Math.max(0,decimals-(numLen-maxLen));\n      balance = parseFloat(this.BNify(balance)).toFixed(decimals);\n    }\n\n    const intPart = Math.floor(balance);\n    let decPart = (balance%1).toPrecision(decimals).substr(2,decimals);;\n    decPart = (decPart+(\"0\".repeat(decimals))).substr(0,decimals);\n\n    if (highlightedDecimals){\n      const highlightedDec = decPart.substr(0,highlightedDecimals);\n      decPart = decPart.substr(highlightedDecimals);\n      const highlightedIntPart = (<Text.span fontSize={'100%'} color={'blue'} fontWeight={'inerith'}>{intPart}.{highlightedDec}</Text.span>);\n      return !isNaN(this.trimEth(balance)) ? ( <>{highlightedIntPart}<small style={{fontSize:'70%'}}>{decPart}</small> <Text.span fontSize={[1,2]}>{label}</Text.span></> ) : defaultValue;\n    } else {\n      return !isNaN(this.trimEth(balance)) ? ( <>{intPart}<small>.{decPart}</small>{ label !== '%' ? ' ' : null }{ label ? <Text.span fontSize={[1,2]}>{label}</Text.span> : null }</> ) : defaultValue;\n    }\n  }\n};\n\nexport default FunctionsUtil;","import React, { Component } from 'react';\nimport styles from './DashboardCard.module.scss';\nimport { Flex, Icon, Heading, Card, Tooltip } from \"rimble-ui\";\n\nclass DashboardCard extends Component {\n\n  state = {\n    mouseOver:false\n  }\n\n  setMouseOver(mouseOver){\n    this.setState({\n      mouseOver\n    });\n  }\n\n  render() {\n    const isDisabled = this.props.isDisabled;\n    const isActive = this.props.isActive && !isDisabled;\n    const isInteractive = this.props.isInteractive && !isDisabled;\n    const isVisible = typeof this.props.isVisible !== 'undefined' ? this.props.isVisible : true;\n    const isRainbow = typeof this.props.isRainbow !== 'undefined' ? this.props.isRainbow : false;\n\n    const cardProps = {\n      p:0,\n      border:1,\n      boxShadow:1,\n      borderRadius:2,\n      borderColor:null,\n      position:'relative',\n      minHeight:'initial',\n      backgroundColor:'cardBg'\n    };\n\n    if (isActive || (isInteractive && this.state.mouseOver)){\n      cardProps.border = 2;\n      cardProps.boxShadow = null;\n      cardProps.backgroundColor = 'cardBgHover';\n    }\n\n    // Replace props\n    if (this.props.cardProps && Object.keys(this.props.cardProps).length){\n      Object.keys(this.props.cardProps).forEach(p => {\n        cardProps[p] = this.props.cardProps[p];\n      });\n    }\n\n    const className = [\n      styles.defaultOpacity,\n      isActive ? styles.active : null,\n      !isVisible ? styles.hidden : null,\n      isRainbow ? styles.rainbow : null,\n      isDisabled ? styles.disabled : null,\n      isInteractive ? styles.interactive : null,\n    ];\n\n    if (this.props.className && styles[this.props.className]){\n      className.push(styles[this.props.className]);\n    }\n\n    return (\n      <Card\n        {...cardProps}\n        className={className}\n        onClick={this.props.handleClick}\n        onMouseOut={(e) => this.setMouseOver(false)}\n        onMouseOver={(e) => this.setMouseOver(true)}\n      >\n        {\n          this.props.title && this.props.title.length>0 &&\n            <Flex\n              mt={[3,4]}\n              ml={[3,4]}\n              alignItems={'center'}\n              flexDirection={'row'}\n              {...this.props.titleParentProps}\n            >\n              <Heading.h4\n                fontWeight={4}\n                fontSize={[2,3]}\n                textAlign={'left'}\n                color={'dark-gray'}\n                lineHeight={'initial'}\n                {...this.props.titleProps}\n              >\n                {this.props.title}\n              </Heading.h4>\n              {\n                this.props.description && this.props.description.length>0 &&\n                  <Tooltip\n                    placement={'top'}\n                    message={this.props.description}\n                  >\n                    <Icon\n                      ml={2}\n                      name={\"Info\"}\n                      size={'1em'}\n                      color={'cellTitle'}\n                    />\n                  </Tooltip>\n              }\n            </Flex>\n        }\n        {this.props.children}\n      </Card>\n    );\n  }\n}\n\nexport default DashboardCard;","import Footer from '../Footer/Footer';\nimport styles from './Tos.module.scss';\nimport React, { Component } from 'react';\nimport { Box, Flex, Text, Heading } from 'rimble-ui'\n\nclass Tos extends Component {\n  state = {};\n\n  render() {\n    return (\n      <Box>\n        <Box className={styles.headerContainer} pb={[3,5]} px={[3,6]} pt={['2em', '3em']}>\n          <Box className={styles.headerBgFiller}></Box>\n          <Box position={'relative'} zIndex={10}>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"60em\"]} mx={'auto'} pb={3} textAlign={'center'} pt={['8vh', '8vh']}>\n              <Heading.h1 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.2em'} fontSize={['2.5em',7]} textAlign={'center'} color={'white'}>\n                Terms of Service\n              </Heading.h1>\n              <Heading.h2 fontWeight={'400'} lineHeight={['1.4em', '2em']} fontSize={[2,3]} textAlign={'center'} color={'white'}>\n                Updated: November 28, 2019\n              </Heading.h2>\n            </Flex>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"70em\"]} mx={'auto'} textAlign={'center'}>\n              <Box className={styles.textContainer} alignItems={'center'} width={'100%'} minHeight={['auto','20em']} backgroundColor={'white'} color={'dark-gray'} p={[3,4]} boxShadow={'0 0 25px 5px rgba(102, 139, 255, 0.7)'} borderRadius={'15px'} style={{position:'relative'}}>\n                <Box id={'first-paragraph'} pb={3}>\n                  <Text pb={3}>\n                    These terms of service, together with any documents and additional terms they expressly incorporate by reference (collectively, these “Terms”), are entered into between Idle Labs Inc. (“Idle,” “we,” “us” and “our”) and you or the company or other legal entity you represent (“you” or “your”), and constitute a binding legal agreement.\n                  </Text>\n                  <Text pb={3}>\n                    Please read these Terms carefully, as these Terms govern your use of our Portal and our Services, and expressly cover your rights and obligations, and our disclaimers and limitations of legal liability, relating to such use. By accessing or using the Interface, you signify that you have read, understand, and agree to be bound by and to comply with these Terms, including the mandatory arbitration provision in Section 12. If you do not agree to these Terms, you must not access or use our Portal or the Services.\n                  </Text>\n                  <Text pb={3}>\n                    You must be able to form a legally binding contract online either on behalf of a company or as an individual. Accordingly, you represent that: (a) if you are agreeing to these Terms on behalf of a company or other legal entity, you have the legal authority to bind the company or other legal entity to these Terms; and (b) you are at least 18 years old (or the age of majority where you reside, whichever is older), can form a legally binding contract online, and have the full, right, power and authority to enter into and to comply with the obligations under these Terms.\n                  </Text>\n                  <Text pb={3}>\n                    In addition to the foregoing, you also represent and warrant that you are not a citizen or resident of a state, country, territory or other jurisdiction that is embargoed by the United States or where your use of the Portal or the Services would be illegal or otherwise violate any applicable law.  Specifically, you represent that you are not located in, organized in, or a resident of New York, Cuba, Iran, Syria, North Korea, the Crimea region, Venezuela, or any other jurisdiction where Applicable law prohibits you from accessing or using the Services; and you represent that you are not be named on the Office of Foreign Asset Control of the U.S. Department of the Treasury’s Specially Designated and Blocked Persons List.\n                   </Text>\n                  <Text>\n                    Please carefully review the disclosures and disclaimers set forth in Section 9 in their entirety before using any software developed by Idle. The information in Section 9 provides important details about the legal obligations associated with your use of the Idle open-source software. By accessing or using our Portal or our Services, you agree that Idle is a provider of open-source software that optimizes the allocation of your digital assets to third-party decentralized web protocols.  Idle is not affiliated with and has no control over these third-party protocols and is not responsible for any losses that occur as a result of interconnection with these third-party protocols. The Protocol is open-source software deployed on the Ethereum Blockchain.  While Idle developed and deployed the Protocol, the software operates in an autonomous fashion on a decentralized network and, as a result, Idle has no control over user transactions. You accordingly acknowledge that you use the Services at your own risk and agree that Idle will not be responsible for any losses that occur as a result of your use of the Services.\n                  </Text>\n                </Box>\n\n                <Box id={'key-definitions'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    1. KEY DEFINITIONS\n                  </Heading.h3>\n\n                  <Text py={2}>\n                    For the purpose of these Terms, the following capitalized terms shall have the following meanings:\n                  </Text>\n\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>1.1. “Affiliate”</strong> means, with respect to a party to these Terms, any legal entity that, directly or indirectly controls, is controlled by, or is under common control with such party.\n                    </li>\n                    <li>\n                      <strong>1.2. “Applicable Law”</strong> means any domestic or foreign law, rule, statute, regulation, by-law, order, protocol, code, decree, or other directive, requirement or guideline, published or in force which applies to or is otherwise intended to govern or regulate any person, property, transaction, activity, event or other matter, including any rule, order, judgment, directive or other requirement or guideline issued by any Governmental Authority having jurisdiction over Idle, you, the Portal or the Services, or as otherwise duly enacted, enforceable by law, the common law or equity.\n                    </li>\n                    <li>\n                      <strong>1.3. “Ether”</strong> means the Ethereum Blockchain utility token that may be used to purchase computational resources to run decentralized applications or perform actions on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.4. “Ethereum Address”</strong> means the unique public key digital asset identifier that points to an Ethereum-compatible wallet to which Ether may be sent or stored.\n                    </li>\n                    <li>\n                      <strong>1.5. “Ethereum Blockchain”</strong> means the underlying blockchain infrastructure which the Portal leverages to perform portions of the Services.\n                    </li>\n                    <li>\n                      <strong>1.6. “Governmental Authority”</strong> includes any domestic or foreign federal, provincial or state, municipal, local or other governmental, regulatory, judicial or administrative authority.\n                    </li>\n                    <li>\n                      <strong>1.7. “Portal”</strong> means the Idle site located at https://idle.finance and all associated sites linked thereto by Idle and its Affiliates, which includes, for certainty, Idle’s decentralized application layer on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.8. “Protocol”</strong> means the Idle decentralized web protocol, which optimizes the allocation of users’ digital assets to third-party decentralized web protocols.\n                    </li>\n                    <li>\n                      <strong>1.9. “Token”</strong> means an “ERC-20” digital asset issued on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.10. “Services”</strong> has the meaning set out in Section 3.1.\n                    </li>\n                    <li>\n                      <strong>1.11. “Third-Parties Services”</strong> means other services (such as fiat-to-token gateway, or token-to-token swap) provided by third parties services running on Ethereum Blockchain.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'modifications-terms'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    2. MODIFICATIONS TO THESE TERMS\n                  </Heading.h3>\n\n                  <Text py={2}>\n                    We reserve the right, in our sole discretion, to modify these Terms from time to time. If we make changes, we will provide you with notice of such changes, such as by sending an email, providing a notice through our Services or updating the date at the top of these Terms. Unless we say otherwise in our notice, any and all such modifications are effective immediately, and your continued use of our Services after we provide such notice will confirm your acceptance of the changes. If you do not agree to the amended Terms, you must stop using our Services.\n                  </Text>\n                </Box>\n\n                <Box id={'services'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    3. SERVICES\n                  </Heading.h3>\n                </Box>\n\n                <ul className={styles.list}>\n                  <li>\n                    <strong>3.1. Services</strong><br />\n                    The primary purpose of the Portal and Protocol is to enable users to interact with smart contracts that allocate their digital assets to third-party decentralized web protocols and enable users to receive an optimized allocation of digital assets from these protocols in return (the “Services”).\n                  </li>\n                  <li>\n                    <strong>3.2. Fees</strong><br />\n                    Use of the Services is provided to you at no charge. Fees are charged on-top of Third-Parties.\n                  </li>\n                  <li>\n                    <strong>3.3. Ethereum Gas Charges</strong><br />\n                    Some Services involve the use of the Ethereum Blockchain, which may require that you pay a fee, commonly known as “Ethereum Gas Charges,” for the computational resources required to perform a transaction on the Ethereum Blockchain. You acknowledge and agree that Idle has no control over: (a) any Ethereum Blockchain transactions; (b) the method of payment of any Ethereum Gas Charges; or (c) any actual payments of Ethereum Gas Charges. Accordingly, you must ensure that you have a sufficient balance of Ether stored at your Ethereum Address to complete any transaction on the Ethereum Blockchain before initiating such Ethereum Blockchain transaction. We will make reasonable efforts to notify you of any Ethereum Gas Charges before initiating any Services that require the use of the Ethereum Blockchain.\n                  </li>\n                  <li>\n                    <strong>3.4. Conditions and Restrictions</strong><br />\n                    We may, at any time and in our sole discretion, restrict your access to, or otherwise impose conditions or restrictions upon your use of, the Services or the Portal, with or without prior notice.\n                  </li>\n                  <li>\n                    <strong>3.5. No Broker, Legal or Fiduciary Relationship</strong><br />\n                    Idle is not your broker, lawyer, intermediary, agent, or advisor and has no fiduciary relationship or obligation to you regarding any other decisions or activities that you effect when using the Portal or the Services. Neither our communications nor any information that we provide to you is intended as, or shall be considered or construed as, advice.\n                  </li>\n                  <li>\n                    <strong>3.6. Your Responsibilities</strong><br />\n                    As a condition to accessing or using the Services or the Portal, you shall:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>only use the Services and the Portal for lawful purposes and in accordance with these Terms;</li>\n                      <li>ensure that, at all times, all information that you provide on the Portal is current, complete and accurate; and maintain the security and confidentiality of your Ethereum Address.</li>\n                      <li>shall be responsible for payment of all applicable taxes, if any, to which the Services might be subject and any and all other taxes which may apply to you.</li>\n                    </ul>\n                  </li>\n                  <li>\n                    <strong>3.7. Unacceptable Use or Conduct</strong><br />\n                    As a condition to accessing or using the Portal or the Services, you will not:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>violate any Applicable Law, including, without limitation, any relevant and applicable anti-money laundering and anti-terrorist financing laws, such as the Bank Secrecy Act, each as may be amended;</li>\n                      <li>infringe on or misappropriate any contract, intellectual property or other third-party right, or commit a tort while using the Portal or the Services;</li>\n                      <li>use the Services in any manner that could interfere with, disrupt, negatively affect, or inhibit other users from fully enjoying the Services, or that could damage, disable, overburden, or impair the functioning of the Services in any manner;</li>\n                      <li>attempt to circumvent any content filtering techniques or security measures that Idle employs on the Portal, or attempt to access any service or area of the Portal or the Services that you are not authorized to access;</li>\n                      <li>use the Services to pay for, support, or otherwise engage in any illegal gambling activities, fraud, money-laundering, or terrorist activities, or other illegal activities;</li>\n                      <li>use any robot, spider, crawler, scraper, or other automated means or interface not provided by us, to access the Services or to extract data;</li>\n                      <li>introduce any malware, virus, Trojan horse, worm, logic bomb, drop-dead device, backdoor, shutdown mechanism or other harmful material into the Portal or the Services;</li>\n                      <li>provide false, inaccurate, or misleading information;</li>\n                      <li>post content or communications on the Portal that are, in our sole discretion, libelous, defamatory, profane, obscene, pornographic, sexually explicit, indecent, lewd, vulgar, suggestive, harassing, hateful, threatening, offensive, discriminatory, bigoted, abusive, inflammatory, fraudulent, deceptive or otherwise objectionable;</li>\n                      <li>post content on the Portal containing unsolicited promotions, political campaigning, or commercial messages or any chain messages or user content designed to deceive or trick the user of the Service;</li>\n                      <li>use the Portal or the Services from a jurisdiction that we have, in our sole discretion, or a relevant Governmental Authority has determined is a jurisdiction where the use of the Portal or the Services is prohibited; or</li>\n                      <li>encourage or induce any third party to engage in any of the activities prohibited under this Section 3.7.</li>\n                    </ul>\n                  </li>\n\n                  <li>\n                    <strong>3.8. Your Assumption of Risks</strong><br />\n                    You represent and warrant that you:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>have the necessary technical expertise and ability to review and evaluate the security, integrity and operation of any transactions that you engage in through the Protocol;</li>\n                      <li>have the knowledge, experience, understanding, professional advice and information to make your own evaluation of the merits, risks and applicable compliance requirements under Applicable Law of engaging in transactions through the Protocol;</li>\n                      <li>acknowledge and understand that the Protocol allocates your digital assets to third-party decentralized web protocols to facilitate your lending and borrowing through these third-party protocols and that Idle is not responsible or liable for these transactions or the operation of these third-party protocols;</li>\n                      <li>know, understand and accept the risks associated with your Ethereum Address, the Ethereum Blockchain, Ether and Tokens; and</li>\n                      <li>accept the risks associated with lending, borrowing and trading Ether and Tokens, and are responsible for conducting your own independent analysis of the risks specific to any Ether and Tokens lent, borrowed or traded by you and your use of the Services.</li>\n                    </ul>\n                    You hereby assume, and agree that Idle will have no responsibility or liability for, such risks. You hereby irrevocably waive, release and discharge all claims, whether known or unknown to you, against Idle, its affiliates and their respective shareholders, members, directors, officers, employees, agents and representatives related to any of the risks set forth herein.\n                  </li>\n                  <li>\n                    <strong>3.9. Additional Representations</strong><br />\n                    You represent and warrant that you:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>are not using the Protocol to engage in the leveraged, margined, or financed purchase of digital assets; and</li>\n                      <li>are using the Protocol for the purpose of accessing third-party decentralized web protocols.</li>\n                    </ul>\n                  </li>\n                  <li>\n                    <strong>3.10. Your Content</strong><br />\n                    You hereby grant to us a royalty-free, fully paid-up, sublicensable, transferable, perpetual, irrevocable, non-exclusive, worldwide license to use, copy, modify, create derivative works of, display, perform, publish and distribute, in any form, medium or manner, any content that is available to other users via the Idle Platform as a result of your use of the Portal (collectively, “Your Content”) through your use of the Services or the Portal, including, without limitation, for promoting Idle (or its Affiliates), the Services or the Portal. You represent and warrant that: (a) you own Your Content or have the right to grant the rights and licenses in these Terms; and (b) Your Content and our use of Your Content, as licensed herein, does not and will not violate, misappropriate or infringe on any third party’s rights.\n                  </li>\n                </ul>\n\n                <Box id={'privacy-policy'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    4. PRIVACY POLICY\n                  </Heading.h3>\n                  <Text py={2}>\n                    Please refer to our privacy policy available at https://idle.finance/privacy-policy for information about how we collect, use, share and otherwise process information about you.\n                  </Text>\n                </Box>\n\n                <Box id={'proprietary-rights'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    5. PROPRIETARY RIGHTS\n                  </Heading.h3>\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>5.1. Ownership of Services; License to Services</strong><br />\n                      Excluding any open source software (as further described in Section 5.2) or third-party software that the Portal or the Services incorporates, as between you and Idle, Idle owns the Portal and the Services, including all technology, content and other materials used, displayed or provided on the Portal or in connection with the Services (including all intellectual property rights subsisting therein), and hereby grants you a limited, revocable, transferable, license to access and use those portions of the Portal and the Services that are proprietary to Idle.\n                    </li>\n                    <li>\n                      <strong>5.2. Idle License; Open Source Software License; Limitations</strong><br />\n                      The Portal and the Services are governed by the most recent version of the open source license commonly known as the Apache 2.0 a copy of which (as it applies to the Portal and the Services) can be found at:  https://apache.org/licenses/LICENSE-2.0 (as of the date these Terms were last updated) and any other applicable licensing terms for the Portal and the Services in these Terms (collectively, the “Idle License”). You acknowledge that the Portal or the Services may use, incorporate or link to certain open-source components and that your use of the Portal or Services is subject to, and you will comply with any, applicable open-source licenses that govern any such open-source components (collectively, “Open-Source Licenses”). Without limiting the generality of the foregoing, you may not: (a) resell, lease, lend, share, distribute or otherwise permit any third party to use the Portal or the Services; (b) use the Portal or the Services for time-sharing or service bureau purposes; or (c) otherwise use the Portal or the Services in a manner that violates the Idle License or any other Open-Source Licenses.\n                    </li>\n                    <li>\n                      <strong>5.3. Trademarks</strong><br />\n                      Any of Idle’s product or service names, logos, and other marks used in the Portal or as a part of the Services, including Idle's name and logo are trademarks owned by Idle, its Affiliates or its applicable licensors. You may not copy, imitate or use them without Idle’s (or the applicable licensor’s) prior written consent.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'changes-suspension-termination'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    6. CHANGES; SUSPENSION; TERMINATION\n                  </Heading.h3>\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>6.1. Changes to Services</strong><br />\n                      We may, at our sole discretion, from time to time and with or without prior notice to you, modify, suspend or disable, temporarily or permanently, the Services, in whole or in part, for any reason whatsoever, including, but not limited to, as a result of a security incident.\n                    </li>\n                    <li>\n                      <strong>6.2. No Liability</strong><br />\n                      We will not be liable for any losses suffered by you resulting from any modification to any Services or from any suspension or termination, for any reason, of your access to all or any portion of the Portal or the Services.\n                    </li>\n                    <li>\n                      <strong>6.3. Survival</strong><br />\n                      The following sections will survive any termination of your access to the Portal or the Services, regardless of the reasons for its expiration or termination, in addition to any other provision which by law or by its nature should survive: Sections 1, 4, 5, 6.3, and 7-14.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'electronic-notices'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    7. ELECTRONIC NOTICES\n                  </Heading.h3>\n                  <Text py={2}>\n                    You consent to receive all communications, agreements, documents, receipts, notices, and disclosures electronically (collectively, our “Communications”) that we provide in connection with these Terms or any Services. You agree that we may provide our Communications to you by posting them on the Portal or by emailing them to you at the email address you provide in connection with using the Services, if any. You should maintain copies of our Communications by printing a paper copy or saving an electronic copy. You may also contact our support team to request additional electronic copies of our Communications by filing a support request at info@idle.finance.\n                  </Text>\n                </Box>\n\n                <Box id={'indemnification'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    8. INDEMNIFICATION\n                  </Heading.h3>\n                  <Text py={2}>\n                    You will defend, indemnify, and hold harmless us, our Affiliates, and our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers and contractors (collectively, “Indemnified Parties”) from any claim, demand, lawsuit, action, proceeding, investigation, liability, damage, loss, cost or expense, including without limitation reasonable attorneys’ fees, arising out of or relating to (a) your use of, or conduct in connection with, the Portal, Services or Margin Tokens; (b) Ethereum Blockchain assets associated with your Ethereum Address; (c) any feedback or user content you provide to the Portal, if any; (d) your violation of these Terms; or (e) your infringement or misappropriation of the rights of any other person or entity. If you are obligated to indemnify any Indemnified Party, Idle (or, at its discretion, the applicable Indemnified Party) will have the right, in its sole discretion, to control any action or proceeding and to determine whether Idle wishes to settle, and if so, on what terms.\n                  </Text>\n                </Box>\n\n                <Box id={'disclosures-disclaimers'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    9. Disclosures; DISCLAIMERS\n                  </Heading.h3>\n                  <Text py={2}>\n                    Idle is a developer of open-source software. Idle does not operate a digital asset exchange platform or execute peer-to-peer transactions through its Protocol and therefore has no oversight, involvement, or control with respect to your transactions, which are executed through third-party protocols and the Ethereum Blockchain.  The Protocol is an autonomous decentralized web protocol deployed to the Ethereum Blockchain that operates in a disintermediated fashion, and, as such, Idle does not participate in any of these transactions.  In each instance, when you interact with the Protocol, you are interacting with a smart contract that transfers your digital assets to a third-party protocol.\n                  </Text>\n                  <Text py={2}>\n                    [Under U.S. federal law, unless you are an “eligible contract participant” as defined in 7 U.S.C. § 1a(18), your transaction must settle within 28 days. Individuals who do not have more than $10 million invested on a discretionary basis (or $5 million if the transaction is for the purpose of managing risk associated with an asset owned or liability incurred, or reasonably likely to be owned or incurred) are not eligible contract participants and may not enter into transactions using the Idle open-source software that do not result in actual delivery of digital assets within 28 days.]\n                  </Text>\n                  <Text py={2}>\n                    You are responsible for complying with all laws and regulations applicable to your transactions, including, but not limited to, the Commodity Exchange Act and the regulations promulgated thereunder by the U.S. Commodity Futures Trading Commission (“CFTC”), and the federal securities laws and the regulations promulgated thereunder by the U.S. Securities and Exchange Commission (“SEC”).\n                  </Text>\n                  <Text py={2}>\n                    You understand that Idle is not registered or licensed by the CFTC, SEC, the Financial Crimes Enforcement Network or any financial regulatory authority. No financial regulatory authority has reviewed or approved the use of the Idle open-source software. This website and the Idle open-source software do not constitute advice or a recommendation concerning any commodity, security or other asset. Idle is not acting as an investment adviser or commodity trading adviser to any person.\n                  </Text>\n                  <Text py={2}>\n                    Idle does not own or control the underlying software protocols that enable the Protocol to function. In general, the underlying protocols are open-source and anyone can use, copy, modify, and distribute them. Idle is not responsible for operation of the underlying protocols, and Idle makes no guarantee of their functionality, security, or availability.\n                  </Text>\n                  <Text py={2}>\n                    To the maximum extent permitted under Applicable Law, the Portal and the Services (and any of their content or functionality) provided by or on behalf of us are provided on an “AS IS” and “AS AVAILABLE” basis, and we expressly disclaim, and you hereby waive, any representations, conditions or warranties of any kind, whether express or implied, legal, statutory or otherwise, or arising from statute, otherwise in law, course of dealing, or usage of trade, including, without limitation, the implied or legal warranties and conditions of merchantability, merchantable quality, quality or fitness for a particular purpose, title, security, availability, reliability, accuracy, quiet enjoyment and non-infringement of third party rights. Without limiting the foregoing, we do not represent or warrant that the Portal or the Services (including any data relating thereto) will be uninterrupted, available at any particular time or error-free. Further, we do not warrant that errors in the Portal or the Service are correctable or will be correctable.\n                  </Text>\n                  <Text py={2}>\n                    You acknowledge that your data on the Portal may become irretrievably lost or corrupted or temporarily unavailable due to a variety of causes, and agree that, to the maximum extent permitted under Applicable Law, we will not be liable for any loss or damage caused by denial-of-service attacks, software failures, viruses or other technologically harmful materials (including those which may infect your computer equipment), protocol changes by third party providers, Internet outages, force majeure events or other disasters, scheduled or unscheduled maintenance, or other causes either within or outside our control.\n                  </Text>\n                  <Text py={2}>\n                    The disclaimer of implied warranties contained herein may not apply if and to the extent such warranties cannot be excluded or limited under the Applicable Law of the jurisdiction in which you reside.\n                  </Text>\n                </Box>\n\n                <Box id={'exclusion-consequential-related-damages'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    10. EXCLUSION OF CONSEQUENTIAL AND RELATED DAMAGES\n                  </Heading.h3>\n                  <Text py={2}>\n                    In no event shall we (together with our Affiliates, including our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers or contractors) be liable for any incidental, indirect, special, punitive, consequential or similar damages or liabilities whatsoever (including, without limitation, damages for loss of data, information, revenue, goodwill, profits or other business or financial benefit) arising out of or in connection with the Portal and the Services (and any of their content and functionality), any execution or settlement of a transaction, any performance or non-performance of the Services, your Ether, Margin Tokens or any other product, service or other item provided by or on behalf of us, whether under contract, tort (including negligence), civil liability, statute, strict liability, breach of warranties, or under any other theory of liability, and whether or not we have been advised of, knew of or should have known of the possibility of such damages and notwithstanding any failure of the essential purpose of these Terms or any limited remedy hereunder nor is Idle in any way responsible for the execution or settlement of transactions between users of Idle open-source software.\n                  </Text>\n                </Box>\n\n                <Box id={'exclusion-consequential-related-damages'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    11. LIMITATION OF LIABILITY\n                  </Heading.h3>\n                  <Text py={2}>\n                    In no event shall our aggregate liability (together with our Affiliates, including our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers or contractors) arising out of or in connection with the Portal and the Services (and any of their content and functionality), any performance or non-performance of the Services, your Ether, Margin Tokens or any other product, service or other item provided by or on behalf of us, whether under contract, tort (including negligence), civil liability, statute, strict liability or other theory of liability exceed the amount of fees paid by you to us under these Terms, if any, in the twelve (12) month period immediately preceding the event giving rise to the claim for liability.\n                  </Text>\n                </Box>\n\n                <Box id={'dispute-resolution-arbitration'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    12. DISPUTE RESOLUTION AND ARBITRATION\n                  </Heading.h3>\n                  <Text py={2}>\n                    Please read the following section carefully because it requires you to arbitrate certain disputes and claims with Idle and limits the manner in which you can seek relief from us, unless you opt out of arbitration by following the instructions set forth below. In addition, arbitration precludes you from suing in court or having a jury trial.\n                    You and Idle agree that any dispute arising out of or related to these Terms or our Services is personal to you and Idle and that any dispute will be resolved solely through individual action, and will not be brought as a class arbitration, class action or any other type of representative proceeding.\n                  </Text>\n                  <Text py={2}>\n                    Except for small claims disputes in which you or Idle seeks to bring an individual action in small claims court located in the county of your billing address or disputes in which you or Idle seeks injunctive or other equitable relief for the alleged unlawful use of intellectual property, you and Idle waive your rights to a jury trial and to have any dispute arising out of or related to these Terms or our Services resolved in court. Instead, for any dispute or claim that you have against Idle or relating in any way to the Services, you agree to first contact Idle and attempt to resolve the claim informally by sending a written notice of your claim (“Notice”) to Idle by email at info@idle.finance or by certified mail addressed to info@idle.finance. The Notice must (a) include your name, residence address, email address, and telephone number; (b) describe the nature and basis of the claim; (c) set forth the specific relief sought. Our notice to you will be similar in form to that described above. If you and Idle cannot reach an agreement to resolve the claim within thirty (30) days after such Notice is received, then either party may submit the dispute to binding arbitration administered by JAMS or, under the limited circumstances set forth above, in court. All disputes submitted to JAMS will be resolved through confidential, binding arbitration before one arbitrator. Arbitration proceedings will be held in New York City, New York, in accordance with the JAMS Streamlined Arbitration Rules and Procedures (“JAMS Rules”). The most recent version of the JAMS Rules are available on the JAMS website and are hereby incorporated by reference. You either acknowledge and agree that you have read and understand the JAMS Rules or waive your opportunity to read the JAMS Rules and waive any claim that the JAMS Rules are unfair or should not apply for any reason.\n                  </Text>\n                  <Text py={2}>\n                    You and Idle agree that these Terms affect interstate commerce and that the enforceability of this Section 12 will be substantively and procedurally governed by the Federal Arbitration Act, 9 U.S.C. § 1, et seq. (the “FAA”), to the maximum extent permitted by applicable law. As limited by the FAA, these Terms and the JAMS Rules, the arbitrator will have exclusive authority to make all procedural and substantive decisions regarding any dispute and to grant any remedy that would otherwise be available in court, including the power to determine the question of arbitrability. The arbitrator may conduct only an individual arbitration and may not consolidate more than one individual’s claims, preside over any type of class or representative proceeding or preside over any proceeding involving more than one individual.\n                  </Text>\n                  <Text py={2}>\n                    The arbitrator, Idle, and you will maintain the confidentiality of any arbitration proceedings, judgments and awards, including, but not limited to, all information gathered, prepared and presented for purposes of the arbitration or related to the dispute(s) therein. The arbitrator will have the authority to make appropriate rulings to safeguard confidentiality, unless the law provides to the contrary. The duty of confidentiality does not apply to the extent that disclosure is necessary to prepare for or conduct the arbitration hearing on the merits, in connection with a court application for a preliminary remedy or in connection with a judicial challenge to an arbitration award or its enforcement, or to the extent that disclosure is otherwise required by law or judicial decision.\n                  </Text>\n                  <Text py={2}>\n                    You and Idle agree that for any arbitration you initiate, you will pay the filing fee and Idle will pay the remaining JAMS fees and costs. For any arbitration initiated by Idle, Idle will pay all JAMS fees and costs. You and Idle agree that the state or federal courts of the State of New York and the United States sitting in New York City, New York have exclusive jurisdiction over any appeals and the enforcement of an arbitration award.\n                  </Text>\n                  <Text py={2}>\n                    Any claim arising out of or related to these Terms or our Services must be filed within one year after such claim arose; otherwise, the claim is permanently barred, which means that you and Idle will not have the right to assert the claim.\n                  </Text>\n                  <Text py={2}>\n                    You have the right to opt out of binding arbitration within 30 days of the date you first accepted the terms of this Section 12 by emailing us at info@idle.finance. In order to be effective, the opt-out notice must include your full name and address and clearly indicate your intent to opt out of binding arbitration. By opting out of binding arbitration, you are agreeing to resolve disputes in accordance with Section 13.\n                  </Text>\n                  <Text py={2}>\n                    If any portion of this Section 12 is found to be unenforceable or unlawful for any reason, (a) the unenforceable or unlawful provision shall be severed from these Terms; (b) severance of the unenforceable or unlawful provision shall have no impact whatsoever on the remainder of this Section 12 or the parties’ ability to compel arbitration of any remaining claims on an individual basis pursuant to this Section 12; and (c) to the extent that any claims must therefore proceed on a class, collective, consolidated, or representative basis, such claims must be litigated in a civil court of competent jurisdiction and not in arbitration, and the parties agree that litigation of those claims shall be stayed pending the outcome of any individual claims in arbitration. Further, if any part of this Section 12 is found to prohibit an individual claim seeking public injunctive relief, that provision will have no effect to the extent such relief is allowed to be sought out of arbitration, and the remainder of this Section 12 will be enforceable.\n                  </Text>\n                </Box>\n\n                <Box id={'governing-law'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    13. GOVERNING LAW\n                  </Heading.h3>\n                  <Text py={2}>\n                    The interpretation and enforcement of these Terms, and any dispute related to these Terms, the Portal or the Services, will be governed by and construed and enforced in accordance with the laws of the State of Delaware, as applicable, without regard to conflict of law rules or principles (whether of the State of Delaware or any other jurisdiction) that would cause the application of the laws of any other jurisdiction. You agree that we may initiate a proceeding related to the enforcement or validity of our intellectual property rights in any court having jurisdiction. With respect to any other proceeding that is not subject to arbitration under these Terms, the state and federal courts located in Wilmington, Delaware, will have exclusive jurisdiction. You waive any objection to venue in any such courts.\n                  </Text>\n                </Box>\n\n                <Box id={'miscellaneous'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    14. MISCELLANEOUS\n                  </Heading.h3>\n                  <Text py={2}>\n                    Any right or remedy of Idle set forth in these Terms is in addition to, and not in lieu of, any other right or remedy whether described in these Terms, under Applicable Law, at law or in equity. Our failure or delay in exercising any right, power, or privilege under these Terms shall not operate as a waiver thereof. The invalidity or unenforceability of any of these Terms shall not affect the validity or enforceability of any other of these Terms, all of which shall remain in full force and effect. We will have no responsibility or liability for any failure or delay in performance of the Portal or any of the Services, or any loss or damage that you may incur, due to any circumstance or event beyond our control, including without limitation any flood, extraordinary weather conditions, earthquake, or other act of God, fire, war, insurrection, riot, labor dispute, accident, action of government, communications, power failure, or equipment or software malfunction. You may not assign or transfer any right to use the Portal or the Services, or any of your rights or obligations under these Terms, without our express prior written consent, including by operation of law or in connection with any change of control. We may assign or transfer any or all of our rights or obligations under these Terms, in whole or in part, without notice or obtaining your consent or approval. Headings of sections are for convenience only and shall not be used to limit or construe such sections. These Terms contain the entire agreement and supersede all prior and contemporaneous understandings between the parties regarding the Portal and the Services. In the event of any conflict between these Terms and any other agreement you may have with us, these Terms will control unless the other agreement specifically identifies these Terms and declares that the other agreement supersedes these Terms.\n                  </Text>\n                </Box>\n\n              </Box>\n            </Flex>\n          </Box>\n        </Box>\n        <Footer />\n      </Box>\n    );\n  }\n}\n\nexport default Tos;\n","import baseColors, { blue, green, yellow, red } from \"./colors\";\nimport { tint, shade } from 'polished';\n\n// theme.js\nexport default {\n  breakpoints: ['52em', '64em'],\n  // breakpoints: ['40em', '52em', '64em', '80em'],\n  fontSizes: [12, 14, 16, 18, 21, 32, 38, 48, 54, 64, 72, 84],\n  fontWeights: [0, 300, 400, 600, 700, 800],\n  letterSpacings: [0, 1, 2, 4, 8],\n  lineHeights: {\n    solid: 1,\n    title: 1.25,\n    copy: 1.5,\n  },\n  fonts: {\n    serif: '\"georgia regular\", athelas, times, serif',\n    sansSerif: '\"Inter\", -apple-system, sans-serif',\n    counter: '\"Roboto Mono\", Arial, -apple-system, sans-serif'\n  },\n  space: [0, 4, 8, 16, 32, 64, 128, 256],\n  radii: ['0', '4px', '8px', '16px', '2rem'],\n  width: [0, 16, 32, 64, 128, 256],\n  minWidths: [0, 16, 32, 64, 128, 256],\n  maxWidths: [0, 16, 32, 64, 128, 256, 512, 768, 1024, 1536],\n  heights: [0, 16, 32, 64, 128, 256],\n  minHeights: [0, 16, 32, 64, 128, 256],\n  maxHeights: [0, 16, 32, 64, 128, 256],\n  borders: [0, '1px solid #0d2034','1px solid #475d7c'],\n  borderWidths: ['0', '1px', '2px', '4px'],\n  shadows: [\n    '0',\n    '0px 2px 4px rgba(0, 0, 0, 0.1)',\n    '0 7px 14px rgba(50,50,93,.1)',\n    '1px 1px 0px rgba(0,0,0,0.2)',\n    '0px 0px 16px 2px rgb(71,93,123,0.6)'\n  ],\n  opacity: {\n    disabled: 0.4,\n  },\n  colors: {\n    primary: '#fcfcfc',\n    'gradient-bg': 'linear-gradient(120deg, #f6d365 0%, #ea0d73 100%)',\n    'primary-light': blue.light[1],\n    'primary-dark': blue.dark[1],\n    bgBlue: '#0030e0',\n    blue: '#0036ff',\n    'dark-blue': '#00219a',\n    skyBlue: '#00abfe',\n    lightBlue: '#79f4e1',\n    copyColor: '#fcfcfc',\n    subColor: '#a7a7a7',\n    black: baseColors.black,\n    'near-black': '#1e3657',\n    'dark-gray': '#fcfcfc',\n    'mid-gray': '#999',\n    gray: ' #e0e0e0',\n    grey: '#CCC',\n    silver: '#999',\n    'light-silver': '#aaa',\n    'moon-gray': '#ccc',\n    'light-gray': '#eee',\n    'near-white': '#a4aec6',\n    white: '#fff',\n    transparent: 'transparent',\n    /*\n    NEW COLORS\n    */\n    arrowActive:'#d8d8d8',\n    arrowInactive:'#4f4f4f',\n    selectBgFocused:'#1e3657',\n    selectBg:'#162e4d',\n    backButtonBg:'#162e4d',\n    lineChartStroke:'#a4aec6',\n    wrongNetworkBannerBg:'#0e2133',\n    dashboardBg: '#13273f',\n    statValue: '#a4aec6',\n    boxBorder: '#eeeeee',\n    cellTitle: '#a4aec6',\n    cellText: '#a4aec6',\n    divider: '#a4aec6',\n    counter: '#a4aec6',\n    redeem: '#00a9fe',\n    deposit: '#0239ff',\n    migrate: '#00a9fe',\n    legend: '#c9c9c9',\n    cardBg:'#162e4d',\n    menuBg:'#162e4d',\n    menuHover:'#1e3657',\n    flashColor:'#bac5ff',\n    cardBgHover:'#1e3657',\n    cardBorder:'#0d2034',\n    menuRightBorder:'#0d2034',\n    cardHoverShadow:'0px 0px 0px 1px rgb(45 74 114)',\n    transactions:{\n      action:{\n        send:'#10a0dd',\n        swap:'#3d53c0',\n        boost:'#ffff00',\n        redeem:'#10a0dd',\n        swapout:'#10a0dd',\n        deposit:'#3d53c0',\n        curvein:'#10a0dd',\n        receive:'#3d53c0',\n        migrate:'#3d53c0',\n        default:'#4f4f4f',\n        curveout:'#3d53c0',\n        withdraw:'#10a0dd',\n        curvedepositin:'#10a0dd',\n        curvedepositout:'#3d53c0'\n      },\n      actionBg:{\n        send:'#ceeff6',\n        swap:'#ced6ff',\n        boost:'#ff7979',\n        redeem:'#ceeff6',\n        swapout:'#ceeff6',\n        deposit:'#ced6ff',\n        curvein:'#ceeff6',\n        default:'#dadada',\n        receive:'#ced6ff',\n        migrate:'#ced6ff',\n        withdraw:'#ceeff6',\n        curveout:'#ced6ff',\n        curvedepositin:'#ceeff6',\n        curvedepositout:'#ced6ff'\n      },\n      status:{\n        completed:'#00b84a',\n        pending:'#a5a5a5',\n        failed:'#fa0000'\n      }\n    },\n    blacks: [\n      'rgba(0,0,0,.0125)',\n      'rgba(0,0,0,.025)',\n      'rgba(0,0,0,.05)',\n      'rgba(0,0,0,.1)',\n      'rgba(0,0,0,.2)',\n      'rgba(0,0,0,.3)',\n      'rgba(0,0,0,.4)',\n      'rgba(0,0,0,.5)',\n      'rgba(0,0,0,.6)',\n      'rgba(0,0,0,.7)',\n      'rgba(0,0,0,.8)',\n      'rgba(0,0,0,.9)',\n    ],\n    whites: [\n      'rgba(255,255,255,.0125)',\n      'rgba(255,255,255,.025)',\n      'rgba(255,255,255,.05)',\n      'rgba(255,255,255,.1)',\n      'rgba(255,255,255,.2)',\n      'rgba(255,255,255,.3)',\n      'rgba(255,255,255,.4)',\n      'rgba(255,255,255,.5)',\n      'rgba(255,255,255,.6)',\n      'rgba(255,255,255,.7)',\n      'rgba(255,255,255,.8)',\n      'rgba(255,255,255,.9)',\n    ],\n  },\n  zIndices: [0, 9, 99, 999, 9999],\n  messageStyle: {\n    base: {\n      color: '#fcfcfc',\n      borderColor: '#0d2034',\n      backgroundColor: '#162e4d',\n    },\n    success: {\n      color: shade(0.4, green.base),\n      backgroundColor: tint(0.9, green.base),\n      borderColor: green.base,\n    },\n    warning: {\n      color: shade(0.4, yellow.base),\n      backgroundColor: tint(0.9, yellow.base),\n      borderColor: yellow.base,\n    },\n    danger: {\n      color: shade(0.4, red.base),\n      backgroundColor: tint(0.9, red.base),\n      borderColor: red.base,\n    },\n    info: {\n      color: '#fcfcfc',\n      borderColor: '#0d2034',\n      backgroundColor: '#162e4d',\n    },\n  },\n  buttons: {\n    primary: {\n      color: blue.text,\n      backgroundColor: blue.base,\n      // use css custom props\n      '--main-color': blue.base,\n      '--contrast-color': blue.text,\n    },\n    normal: {\n      color: baseColors.black,\n      '--contrast-color': baseColors.black,\n    },\n    success: {\n      '--main-color': green.base,\n      '--contrast-color': green.text,\n    },\n    danger: {\n      '--main-color': red.base,\n      '--contrast-color': red.text,\n    },\n  },\n  buttonSizes: {\n    small: {\n      fontSize: '0.75rem',\n      height: '2rem',\n      minWidth: '2rem',\n      padding: '0 1rem',\n    },\n    medium: {\n      fontSize: '1rem',\n      height: '3rem',\n      minWidth: '3rem',\n    },\n    large: {\n      fontSize: '1.5rem',\n      height: '4rem',\n      minWidth: '4rem',\n      borderRadius: '2rem'\n    },\n  },\n};\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class TorusConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: Torus, initParams, ...rest } = kwargs;\n    super(rest);\n\n    this.torus = null;\n    this.Torus = Torus;\n    this.initParams = initParams;\n  }\n\n  async onActivation() {\n    if (!this.torus) {\n      this.torus = new this.Torus({\n        buttonPosition: \"bottom-right\" // default: bottom-left\n      });\n    }\n    await this.torus.init();\n    await this.torus.login();\n  }\n\n  async getProvider(){\n    return new Promise( async (resolve, reject) => {\n      resolve(this.torus.provider);\n    });\n  }\n\n  async getAccount(provider) {\n    const userInfo = await this.torus.getUserInfo();\n    if (userInfo){\n      return await this.torus.getPublicAddress({\n        verifier:userInfo.verifier,\n        verifierId:userInfo.verifierId\n      });\n    }\n    return null;\n  }\n\n  async onDeactivation() {\n    await this.torus.logout();\n  }\n\n  changeNetwork(network) {\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class AuthereumConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: Authereum, network, ...rest } = kwargs;\n    super(rest);\n\n    this.authereum = null;\n    this.Authereum = Authereum;\n    this.network = network;\n  }\n\n  async onActivation() {\n    if (!this.authereum) {\n      this.authereum = new this.Authereum(this.network);\n    }\n    const provider = await this.getProvider();\n    if (provider){\n      await provider.enable();\n      return provider;\n    }\n  }\n\n  async getProvider(){\n    return new Promise( async (resolve, reject) => {\n      resolve(this.authereum.getProvider());\n    });\n  }\n\n  async getAccount(provider) {\n    if (provider){\n      const accounts = await provider.getAccounts();\n      if (accounts && accounts.length){\n        return accounts[0];\n      }\n    }\n    return null;\n  }\n\n  async disable() {\n    const provider = await this.getProvider();\n    if (provider){\n      await provider.disable();\n      return provider;\n    }\n  }\n\n  changeNetwork(network) {\n    this.constructor({\n      api: this.Authereum,\n      network\n    })\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class WalletLinkConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: WalletLink, appName, infuraUrl, chainId, appLogoUrl, ...rest } = kwargs;\n    super(rest);\n\n    this.provider = null;\n    this.walletLink = null;\n    this.appName = appName;\n    this.chainId = chainId;\n    this.infuraUrl = infuraUrl;\n    this.appLogoUrl = appLogoUrl;\n    this.WalletLink = WalletLink;\n  }\n\n  async onActivation() {\n    if (!this.walletLink){\n      this.walletLink = new this.WalletLink({\n        darkMode: false,\n        appName: this.appName,\n        infuraUrl: this.infuraUrl,\n        appLogoUrl: this.appLogoUrl,\n      });\n    }\n\n    const provider = this.getProvider();\n    if (provider){\n      await provider.enable();\n      return provider;\n    }\n  }\n\n  getProvider(){\n    if (!this.provider){\n      this.provider = this.walletLink.makeWeb3Provider(this.infuraUrl, this.chainId);\n    }\n    return this.provider;\n  }\n\n  async getAccount(provider) {\n    if (provider){\n      // Use eth_RequestAccounts\n      const accounts = await provider.send('eth_requestAccounts');\n      if (accounts && accounts.length){\n        return accounts[0];\n      }\n    }\n    return null;\n  }\n\n  async disable() {\n    const provider = this.getProvider();\n    if (provider){\n      await provider.close();\n      return provider;\n    }\n  }\n\n  changeNetwork(network) {\n    this.constructor({\n      network,\n      api: this.WalletLink,\n      appName: this.appName,\n      chainId: this.chainId,\n      infuraUrl: this.infuraUrl,\n      appLogoUrl: this.appLogoUrl,\n    })\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class WalletConnectConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: WalletConnectProvider, defaultNetwork, infuraId, ...rest } = kwargs;\n    super(rest);\n\n    this.provider = null;\n    this.WalletConnectProvider = WalletConnectProvider;\n    this.infuraId = infuraId;\n  }\n\n  async onActivation() {\n    if (!this.provider) {\n      this.provider = new this.WalletConnectProvider({\n        infuraId:this.infuraId\n      });\n    }\n\n    // console.log('onActivation',this.provider);\n\n    if (this.provider){\n\n      await this.provider.enable();\n\n      /*\n      // Subscribe to accounts change\n      this.provider.on(\"accountsChanged\", (accounts) => {\n        console.log('accountsChanged',accounts);\n      });\n\n      // Subscribe to chainId change\n      this.provider.on(\"chainChanged\", (chainId) => {\n        console.log('chainChanged',chainId);\n      });\n\n      // Subscribe to networkId change\n      this.provider.on(\"networkChanged\", (networkId) => {\n        console.log('networkChanged',networkId);\n      });\n\n      // Subscribe to session connection/open\n      this.provider.on(\"open\", () => {\n        console.log('open');\n      });\n\n      // Subscribe to session disconnection/close\n      this.provider.on(\"close\", (code, reason) => {\n        console.log('close',code, reason);\n      });\n      */\n\n      return this.provider;\n    }\n  }\n\n  async getProvider(){\n    return this.provider;\n  }\n\n  async disable() {\n    if (this.provider){\n      this.provider.close();\n      return this.provider;\n    }\n  }\n}\n","import WalletLink from 'walletlink';\nimport AuthereumApi from 'authereum';\nimport PortisApi from \"@portis/web3\";\nimport FortmaticApi from \"fortmatic\";\nimport TrezorApi from \"trezor-connect\";\nimport { Connectors } from \"web3-react\";\nimport TorusApi from '@toruslabs/torus-embed';\nimport globalConfigs from '../configs/globalConfigs';\nimport TorusConnector from './connectors/TorusConnector';\nimport AuthereumConnector from './connectors/AuthereumConnector';\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport WalletLinkConnector from './connectors/WalletLinkConnector';\nimport WalletConnectConnector from './connectors/WalletConnectConnector';\n\nconst {\n  InjectedConnector,\n  NetworkOnlyConnector,\n  TrezorConnector,\n  LedgerConnector,\n  FortmaticConnector,\n  PortisConnector\n} = Connectors;\n\nconst env = process.env;\n\nconst manifestEmail = env.REACT_APP_TREZOR_MANIFEST_EMAIL; // trezor\nconst manifestAppUrl = env.REACT_APP_TREZOR_MANIFEST_URL; // trezor\nconst defaultNetwork = globalConfigs.network.requiredNetwork;\nconst fortmaticApiKey = env.REACT_APP_FORTMATIC_KEY_MAINNET;\nconst portisDAppId = env.REACT_APP_PORTIS_DAPP_ID;\nconst portisNetwork = env.REACT_APP_PORTIS_NETWORK;\n\nconst supportedNetworkURLs = {};\n  \nObject.keys(globalConfigs.network.providers.infura).forEach((networkId,index) => {\n  supportedNetworkURLs[networkId] = globalConfigs.network.providers.infura[networkId]+env.REACT_APP_INFURA_KEY;\n});\n\nconst Injected = new InjectedConnector({\n  supportedNetworks: [defaultNetwork]\n});\n\nconst Infura = new NetworkOnlyConnector({\n  providerURL: globalConfigs.network.providers.infura[defaultNetwork]+env.REACT_APP_INFURA_KEY\n});\n\n\nconst Trezor = new TrezorConnector({\n  api: TrezorApi,\n  supportedNetworkURLs,\n  defaultNetwork,\n  manifestEmail,\n  manifestAppUrl\n});\n\nconst Ledger = new LedgerConnector({\n  supportedNetworkURLs,\n  defaultNetwork\n});\n\nconst WalletConnect = new WalletConnectConnector({\n  defaultNetwork,\n  supportedNetworkURLs,\n  api: WalletConnectProvider,\n  infuraId:env.REACT_APP_INFURA_KEY,\n  bridge: \"https://bridge.walletconnect.org\",\n});\n\nconst Fortmatic = new FortmaticConnector({\n  api: FortmaticApi,\n  apiKey: fortmaticApiKey,\n  logoutOnDeactivation: false\n});\n\nconst Portis = new PortisConnector({\n  api: PortisApi,\n  dAppId: portisDAppId,\n  network: portisNetwork\n});\n\nconst Authereum = new AuthereumConnector({\n  api: AuthereumApi,\n  network: globalConfigs.network.availableNetworks[defaultNetwork].toLowerCase()\n});\n\nconst walletLink = new WalletLinkConnector({\n  api: WalletLink,\n  darkMode: false,\n  chainId: defaultNetwork,\n  appName: globalConfigs.appName,\n  infuraUrl: supportedNetworkURLs[defaultNetwork],\n  appLogoUrl: 'https://idle.finance/images/idle-mark.png',\n});\n\nconst Torus = new TorusConnector({\n  api: TorusApi,\n  initParams:{\n    buildEnv: 'production', // default: production\n    enableLogging: false, // default: false\n    network: {\n      host: globalConfigs.network.availableNetworks[defaultNetwork].toLowerCase(), // default: mainnet\n      chainId: defaultNetwork, // default: 1\n      networkName: globalConfigs.network.availableNetworks[defaultNetwork].toLowerCase() // default: Main Ethereum Network\n    },\n    showTorusButton: false // default: true\n  }\n});\n\nexport default {\n  Injected,\n  Infura,\n  WalletConnect,\n  walletLink,\n  Fortmatic,\n  Portis,\n  Authereum,\n  Torus,\n  Trezor,\n  Ledger,\n};","import React from \"react\";\nimport { Box, Flex, Text, Icon } from \"rimble-ui\";\n\nclass WrongNetworkBanner extends React.Component {\n  render() {\n    const bannerStyle = {\n      position: \"fixed\",\n      bottom: 0,\n      left: 0,\n      right: 0,\n      width: \"100%\",\n      zIndex: 9999\n    };\n\n    return (\n      <Box style={bannerStyle} backgroundColor={'wrongNetworkBannerBg'} p={3}>\n        <Flex alignItems={\"center\"}>\n          <Box p={4}>\n            <Icon name=\"Warning\" color=\"gold\" size=\"30\" />\n          </Box>\n          <Flex flexDirection={\"column\"}>\n            <Text fontWeight={\"bold\"}>\n              Looks like you're on the wrong network\n            </Text>\n            <Text>\n              You should be on the {this.props.network.required.name} Ethereum\n              network. You are currently connected to the{\" \"}\n              <Text.span style={{ textTransform: \"capitalize\" }}>\n                {this.props.network.current.name}\n              </Text.span>{\" \"}\n              Network - please switch to the correct network.\n            </Text>\n          </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default WrongNetworkBanner;\n","import React from \"react\";\n\nimport WrongNetworkBanner from \"./components/WrongNetworkBanner\";\n\nclass NetworkUtil extends React.Component {\n  render() {\n    return (\n      <div>\n        { this.props.network.isCorrectNetwork === false && this.props.web3\n          ?\n            <WrongNetworkBanner\n              network={this.props.network}\n            />\n          :\n            null\n        }\n      </div>\n    );\n  }\n}\n\nexport default NetworkUtil;\n","import React from \"react\";\nimport { Box, Heading, Text, Modal, Link } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport RimbleUtil from \"@rimble/utils\";\n\nclass NoWeb3BrowserModal extends React.Component {\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2\n          fontSize={4}\n          fontWeight={3}\n          lineHeight={\"1.375em\"}\n          my={3}\n        >\n          Switch browsers to use the Idle App\n        </Heading.h2>\n\n        {RimbleUtil.isMobileDevice() ? (\n          <Text my={4}>\n            You can't use our blockchain features, like increasing the count\n            value, in this browser. We recommend using{\" \"}\n            <Link\n              href=\"https://status.im/\"\n              title=\"status.im website\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Status\n            </Link>\n            ,{\" \"}\n            <Link\n              href=\"https://www.cipherbrowser.com/\"\n              title=\"Cipher Wallet\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Cipher\n            </Link>{\" \"}\n            or{\" \"}\n            <Link\n              href=\"https://wallet.coinbase.com/\"\n              title=\"Coinbase Wallet\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Coinbase wallet\n            </Link>{\" \"}\n            browsers.\n          </Text>\n        ) : (\n          <Box>\n            <Text my={4}>\n              You can't use our blockchain features, like increasing the\n              count value, in this browser. Switch to{\" \"}\n              <Link\n                href=\"https://brave.com/download/\"\n                title=\"Download Brave browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Brave\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.mozilla.org/\"\n                title=\"Download FireFox browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                FireFox\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.opera.com/download\"\n                title=\"Download Opera Browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Opera\n              </Link>\n              , or{\" \"}\n              <Link\n                href=\"https://www.google.com/chrome/\"\n                title=\"Download Chrome browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Chrome\n              </Link>{\" \"}\n              to continue.\n            </Text>\n\n            <Text>\n              <Text.span bold>Rather use your phone?</Text.span> You can use\n              the Idle App in mobile browser wallets like{\" \"}\n              <Link\n                href=\"https://status.im/\"\n                title=\"status.im website\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Status\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.cipherbrowser.com/\"\n                title=\"Cipher Wallet\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Cipher\n              </Link>{\" \"}\n              or{\" \"}\n              <Link\n                href=\"https://wallet.coinbase.com/\"\n                title=\"Coinbase Wallet\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Coinbase wallet\n              </Link>\n              .\n            </Text>\n          </Box>\n        )}\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default NoWeb3BrowserModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Flex,\n  Icon,\n  Modal,\n  Link,\n  Button\n} from \"rimble-ui\";\n\nclass NoWalletModal extends React.Component {\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card p={5} maxWidth={\"600px\"}>\n          <Button.Text\n            icononly\n            icon={\"Close\"}\n            color={\"moon-gray\"}\n            position={\"absolute\"}\n            top={0}\n            right={0}\n            mt={3}\n            mr={3}\n            onClick={this.props.closeModal}\n          />\n\n          <Flex flexDirection={\"column\"} justifyContent={\"space-between\"}>\n            <Flex justifyContent={\"center\"} my={4}>\n              <Icon name=\"Warning\" color=\"gold\" size=\"40\" />\n            </Flex>\n\n            <Heading.h2 my={3}>No Wallet Available</Heading.h2>\n\n            <Text my={4}>\n              Your current browser does not have a blockchain connected wallet.\n              Try using MetaMask, Fortmatic, Portis.\n            </Text>\n\n            <Link\n              href=\"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              <Button.Outline size=\"small\">Get MetaMask Extension</Button.Outline>\n            </Link>\n          </Flex>\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default NoWalletModal;\n","// Checks for MetaMask\nconst GeneralUtil = {\n  hasMetaMask: () => {\n    let hasMetaMask = false;\n\n    if (typeof window.ethereum !== \"undefined\") {\n      hasMetaMask = typeof window.ethereum.isMetaMask !== \"undefined\";\n    } else if (typeof window.web3 !== 'undefined') {\n      hasMetaMask = typeof window.web3.currentProvider.isMetaMask !== 'undefined' && window.web3.currentProvider.isMetaMask;\n    }\n\n    return hasMetaMask;\n  },\n  isTrustWallet: () => {\n    if (typeof window.web3 !== \"undefined\" && typeof window.web3.currentProvider !== 'undefined'){\n      return typeof window.web3.currentProvider.isTrust !== 'undefined' && window.web3.currentProvider.isTrust;\n    }\n    return false;\n  },\n  isCoinbaseWallet: () => {\n    if (typeof window.web3 !== \"undefined\" && typeof window.web3.currentProvider !== 'undefined'){\n      return typeof window.web3.currentProvider.isCoinbaseWallet !== 'undefined' && window.web3.currentProvider.isCoinbaseWallet;\n    }\n    return false;\n  },\n  hasDapper: () => {\n    let hasDapper = typeof window.DapperEthereum !== 'undefined';\n\n    if (typeof window.ethereum !== \"undefined\") {\n      hasDapper = typeof window.ethereum.isDapper !== \"undefined\" && window.ethereum.isDapper;\n    }\n\n    return hasDapper;\n  },\n  isOpera: () => {\n    return /Opera|OPR\\//.test(navigator.userAgent);\n  },\n  // Current device is Android\n  isAndroid: () => {\n    const isAndroid = /android/i.test(navigator.userAgent) ? true : false;\n\n    return isAndroid;\n  },\n  // Current device is iOS\n  isIos() {\n    const isIos =\n      /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream\n        ? true\n        : false;\n\n    return isIos;\n  }\n};\n\nexport default GeneralUtil;\n","import React from \"react\";\nimport {\n  Heading,\n  Text,\n  Flex,\n  Modal,\n  Button,\n  Box,\n  Loader\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport GeneralUtil from \"../GeneralUtil\";\nimport RimbleUtils from \"@rimble/utils\";\n\nclass WrongNetworkModal extends React.Component {\n  renderContent = () => {\n    return (\n      <ModalCard.Body>\n        <Heading.h2 my={3}>\n          Switch to the {this.props.network.required.name} network in{\" \"}\n          {GeneralUtil.hasMetaMask() ? `MetaMask` : `Settings`}\n        </Heading.h2>\n\n        <Text my={4}>\n          The Idle App only works on the{\" \"}\n          <Text.span style={{ textTransform: \"capitalize\" }}>\n            {this.props.network.required.name}\n          </Text.span>{\" \"}\n          network. You’re currently on the{\" \"}\n          <Text.span style={{ textTransform: \"capitalize\" }}>\n            {\" \"}\n            {this.props.network.current.name}\n          </Text.span>{\" \"}\n          network.\n        </Text>\n\n        {GeneralUtil.hasMetaMask() && !RimbleUtils.isMobileDevice() ? (\n          <Box bg={\"#f6f6fc\"} p={3} display={[\"none\", \"block\"]}>\n            <Flex alignItems={\"center\"}>\n              <Box position={\"relative\"} width={\"4em\"}>\n                <Box>\n                  <Loader size={\"3em\"} />\n                </Box>\n              </Box>\n              <Box>\n                <Text fontWeight={4}>Waiting for the right network...</Text>\n                <Text fontWeight={2}>\n                  Go to your Wallet and to switch\n                </Text>\n              </Box>\n            </Flex>\n          </Box>\n        ) : null}\n\n        <Box display={[\"block\", \"none\"]}>\n          <Button onClick={this.props.closeModal} width={1}>\n            OK\n          </Button>\n        </Box>\n      </ModalCard.Body>\n    )\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <React.Fragment>\n            {this.renderContent()}\n          </React.Fragment>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default WrongNetworkModal;\n","import React from \"react\";\nimport { Heading, Text, Box, Flex, Icon } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\n\nfunction TransactionFeeModal(props) {\n  return (\n    <Box>\n      <ModalCard.Header title={'Transaction fees, what are you paying for?'} subtitle={'You need to pay a fee to use the Ethereum blockchain.'} subtitle2={'This pays for someone to process your transaction and store the data.'}></ModalCard.Header>\n      <ModalCard.Body>\n        <Flex flexDirection={['column', 'row']}\n          justifyContent={\"space-between\"}\n          my={[0, 4]}>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"Fingerprint\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Undeniable proof</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              You get a public record of any funds you send or receive, a bit like\n              a deed for a house.\n            </Text>\n          </Box>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"EnhancedEncryption\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Unbreakable encryption</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              Your funds can only ever go to your intended recipients.\n            </Text>\n          </Box>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"AccountBalance\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n              <Icon\n                name=\"NotInterested\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Unparalleled control</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              You can pay or get paid without using any banks or companies.\n            </Text>\n          </Box>\n        </Flex>\n      </ModalCard.Body>\n    </Box>\n  );\n}\n\nexport default TransactionFeeModal;\n","import React from 'react'\nimport moment from 'moment';\nimport connectors from '../App/connectors';\nimport { useWeb3Context } from 'web3-react';\nimport GeneralUtil from \"../utilities/GeneralUtil\";\nimport ImageButton from '../ImageButton/ImageButton';\nimport globalConfigs from '../configs/globalConfigs';\nimport styles from './Web3ConnectionButtons.module.scss';\nimport { Button, Box, Text, Flex, Link } from 'rimble-ui';\n\nconst LOG_ENABLED = false;\nconst customLog = (...props) => { if (LOG_ENABLED) console.log(moment().format('HH:mm:ss'),...props); };\n\nexport default function Web3ConnectionButtons(props) {\n  const context = useWeb3Context();\n\n  if (!context.active && !context.error) {\n    customLog('context loading', context);\n  } else if (context.error) {\n    customLog('context error', context);\n  } else {\n    customLog('context success', context);\n  }\n\n  const setConnector = async (connectorName,name) => {\n    let walletProvider = connectorName === 'Injected' ? name : connectorName;\n    if (localStorage) {\n      localStorage.setItem('walletProvider', walletProvider);\n      localStorage.setItem('connectorName', connectorName);\n    }\n\n    if (props.setConnector && typeof props.setConnector === 'function'){\n      props.setConnector(connectorName,walletProvider);\n    }\n    \n    // Close modal\n    if (typeof props.connectionCallback === 'function'){\n      props.connectionCallback();\n    }\n\n    return connectorName;\n    // return await context.setConnector(connectorName);\n  };\n  const unsetConnector = async () => {\n    context.unsetConnector();\n    if (props.setConnector && typeof props.setConnector === 'function'){\n      props.setConnector('Infura','Infura');\n    }\n  };\n\n  // Show provider fields to detect in-app browser\n  // alert(JSON.stringify(Object.keys(window.web3.currentProvider)));\n    \n  const isOpera = GeneralUtil.isOpera();\n  const isDapper = GeneralUtil.hasDapper();\n  const isMetamask = GeneralUtil.hasMetaMask();\n  const isTrustWallet = GeneralUtil.isTrustWallet();\n  const isCoinbaseWallet = GeneralUtil.isCoinbaseWallet();\n  const browserWalletDetected = isMetamask || isOpera || isDapper || isCoinbaseWallet || isTrustWallet;\n  \n  const allowedConnectors = props.allowedConnectors;\n  const registerPage = props.registerPage;\n\n  if (connectors.Portis) {\n    if (registerPage) {\n      connectors.Portis.options = connectors.Portis.options || {};\n      connectors.Portis.options.registerPageByDefault = true;\n    } else {\n      connectors.Portis.options = connectors.Portis.options || {};\n      connectors.Portis.options.registerPageByDefault = false;\n    }\n  }\n\n  let basicConnectorsName = Object.keys(connectors).filter(c => c !== 'Infura');\n\n  if (allowedConnectors) {\n    basicConnectorsName = basicConnectorsName.filter(n => allowedConnectors.map((v) => { return v.toLowerCase(); }).indexOf(n.toLowerCase()) !== -1 );\n  }\n\n  const buttons = basicConnectorsName.map(connectorName => {\n\n    switch (connectorName) {\n      case 'Injected':\n        if (browserWalletDetected) {\n          let name = null;\n          if (isMetamask) {\n            name = 'Metamask';\n          } else if (isOpera) {\n            name = 'Opera';\n          } else if (isDapper){\n            name = 'Dapper';\n          } else if (isCoinbaseWallet){\n            name = 'Coinbase';\n          } else if (isTrustWallet){\n            name = 'TrustWallet';\n          }\n\n          const connectorInfo = globalConfigs.connectors[name.toLowerCase()];\n          if (connectorInfo && connectorInfo.enabled){\n            const walletIcon = connectorInfo.icon ? connectorInfo.icon : `${name.toLowerCase()}.svg`;\n            return (\n              <Flex\n                width={1}\n                key={`wallet_${name}`}\n                justifyContent={'space-between'}\n                style={{\n                  flex:'0 100%',\n                }}\n              >\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={name}\n                  isMobile={true}\n                  width={[1,0.48]}\n                  imageSrc={`images/${walletIcon}`}\n                  imageProps={{width:'auto',height:'42px'}}\n                  handleClick={ async () => await setConnector(connectorName,name)}\n                  subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using ${name}` }\n                />\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  isMobile={true}\n                  width={[1,0.48]}\n                  caption={'Watch Address'}\n                  imageSrc={`images/tokens/ETH.svg`}\n                  subcaption={'Watch an Ethereum address'}\n                  imageProps={{width:'auto',height:'42px'}}\n                  handleClick={ e => props.setCustomAddress(true) }\n                />\n              </Flex>\n            )\n          }\n          return null;\n        } else {\n          const connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n          return (\n            <ImageButton\n              buttonProps={{\n                border:2\n              }}\n              isMobile={true}\n              caption={'Browser Wallet'}\n              key={`wallet_${connectorName}`}\n              imageSrc={`images/browser-wallet.png`}\n              imageProps={{width:'auto',height:'42px'}}\n              handleClick={ async () => await setConnector(connectorName) }\n              subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using a browser wallet`}\n              buttonStyle={ props.isMobile ? {justifyContent:'flex-start',flex:'0 100%'} : {justifyContent:'flex-start',flex:'0 48%'} }\n            />\n          );\n        }\n      default:\n        const connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n        if (connectorInfo && connectorInfo.enabled){\n          const walletIcon = connectorInfo.iconModal ? connectorInfo.iconModal : (connectorInfo.icon ? connectorInfo.icon : `${connectorName.toLowerCase()}.svg`);\n\n          let caption = connectorInfo.name ? connectorInfo.name : connectorName;\n          return (\n            <ImageButton\n              buttonProps={{\n                border:2\n              }}\n              isMobile={true}\n              caption={caption}\n              key={`wallet_${connectorName}`}\n              imageSrc={`images/${walletIcon}`}\n              imageProps={{width:'auto',height:'42px'}}\n              handleClick={ async () => await setConnector(connectorName) }\n              subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using ${connectorName}`}\n              buttonStyle={ props.isMobile ? {justifyContent:'flex-start',flex:'0 100%'} : {justifyContent:'flex-start',flex:'0 48%'} }\n            />\n          );\n        }\n        return null;\n    }\n  });\n\n  return (\n    <Box width={[1]}>\n      <Flex flexDirection={'column'} alignItems={\"center\"}>\n        {context.error && (\n          <Text.p textAlign=\"center\">\n            An error occurred, are you using an Ethereum browser such as\n            <Link href=\"https://metamask.io/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">\n              &nbsp; Metamask &nbsp;\n            </Link>\n             or\n            <Link href=\"https://www.meetdapper.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">\n              &nbsp; Dapper\n            </Link>\n            ?\n            If you do not have an Ethereum wallet follow the\n            \"I'm new to Ethereum\" flow when connecting.\n            If you do have a wallet, click Reset and retry one of the wallet listed below,\n            Generic wallet option is used for Ethereum browsers only.\n          </Text.p>\n        )}\n        {(context.active || (context.error && context.connectorName)) && context.connectorName !== 'Infura' && (\n          <Button.Outline\n            width={[1/2]}\n            className={[styles.button]}\n            mb={[1, 3]}\n            size={'large'}\n            key={'reset'}\n            onClick={async () => await unsetConnector()}\n          >\n            {context.active ? \"Deactivate Connector\" : \"Reset\"}\n          </Button.Outline>\n        )}\n      </Flex>\n      <Flex\n        flexWrap={'wrap'}\n        flexDirection={'row'}\n        justifyContent={'space-between'}\n      >\n        {buttons}\n      </Flex>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport {\n  Box,\n  Text,\n  Link,\n  Icon,\n  Flex,\n  Field,\n  Modal,\n  Input,\n  Loader,\n  Button,\n  Heading\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard.js';\nimport styles from './Header.module.scss';\nimport FunctionsUtil from '../FunctionsUtil.js';\nimport ImageButton from '../../ImageButton/ImageButton.js';\nimport TransactionFeeModal from \"./TransactionFeeModal.js\";\nimport Web3ConnectionButtons from \"../../Web3ConnectionButtons/Web3ConnectionButtons.js\";\n\nimport {\n  Link as RouterLink\n} from \"react-router-dom\";\n\nclass ConnectionModal extends React.Component {\n  // TODO save pref in localstorage and do not show 'Before connecting' info every time\n  state = {\n    validated:false,\n    showTxFees:false,\n    customAddress:'',\n    currentSection:null,\n    showInstructions:false,\n    askCustomAddress:false,\n    closeRemainingTime:null,\n    customAddressError:false,\n    newToEthereumChoice:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  toggleShowTxFees = e => {\n    e.preventDefault();\n\n    this.setState({\n      showTxFees: !this.state.showTxFees\n    });\n  }\n\n  setStoredSection = () => {\n    let currentSection = null;\n    if (localStorage){\n      currentSection = localStorage.getItem('currentSection');\n      if (currentSection){\n        this.setState({\n          currentSection\n        });\n      }\n    }\n    return currentSection;\n  }\n\n  componentDidMount = () => {\n    this.loadUtils();\n    this.setStoredSection();\n  }\n\n  componentDidUpdate = () => {\n    this.loadUtils();\n  }\n\n  resetModal = e => {\n    this.setState({\n      showTxFees: false,\n      currentSection:null,\n      askCustomAddress:false,\n      showInstructions: false,\n      newToEthereumChoice:null,\n    });\n  }\n\n  setConnector = async (connectorName,name) => {\n    let walletProvider = connectorName === 'Injected' ? name : connectorName;\n\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory:'Connect',\n      eventLabel:walletProvider,\n      eventAction:'select_wallet'\n    });\n\n    if (this.props.setConnector && typeof this.props.setConnector === 'function'){\n      this.props.setConnector(connectorName,walletProvider);\n    }\n\n    // Set Wallet choice\n    this.setState({\n      newToEthereumChoice: connectorName\n    });\n\n    this.closeCountdown();\n\n    return connectorName;\n\n    // return await window.RimbleWeb3_context.setConnector(connectorName);\n  }\n\n  closeCountdown = () => {\n    const closeRemainingTime = this.state.closeRemainingTime ? this.state.closeRemainingTime-1 : 5;\n    if (!closeRemainingTime){\n      this.closeModal();\n    } else {\n      setTimeout(() => { this.closeCountdown() },1000);\n    }\n    this.setState({\n      closeRemainingTime\n    });\n  }\n\n  setWalletChoice = (e,choice) => {\n    e.preventDefault();\n    this.setState({\n      newToEthereumChoice: choice\n    });\n  }\n\n  closeModal = () => {\n    // Reset modal\n    this.resetModal();\n    // Set latest stored sections\n    this.setStoredSection();\n    // Close modal\n    this.props.closeModal();\n  }\n\n  setCurrentSection = (e,currentSection) => {\n    e.preventDefault();\n    this.setState({\n      currentSection\n    });\n\n    if (currentSection!=='instructions'){\n      // Send Google Analytics event\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Connect',\n        eventAction: 'select_mode',\n        eventLabel: currentSection\n      });\n\n      this.functionsUtil.setLocalStorage('currentSection',currentSection);\n    }\n  }\n\n  connectCustomAddress = () => {\n    const addressValid = this.functionsUtil.checkAddress(this.state.customAddress);\n    if (addressValid){\n      this.setCustomAddress(false);\n      this.functionsUtil.setCustomAddress(this.state.customAddress);\n      this.setConnector('custom','custom');\n      setTimeout(() => { this.closeModal() },1000);\n      return true;\n    } else {\n      return this.setState({\n        customAddressError:true\n      });\n    }\n  }\n\n  updateCustomAddress = (e) => {\n    const customAddressError = false;\n    const customAddress = e.target.value;\n    const validated = this.functionsUtil.checkAddress(customAddress);\n    this.setState({\n      validated,\n      customAddress,\n      customAddressError\n    });\n  }\n\n  setCustomAddress = (askCustomAddress) => {\n    this.setState({\n      askCustomAddress\n    });\n  }\n\n  renderModalContent = () => {\n\n    const TOSacceptance = (\n      <Box>\n        <Text textAlign={'center'} fontSize={1} py={[2,3]}>By connecting, I accept Idle's <RouterLink to=\"/terms-of-service\" color={'primary'} style={{color:this.props.theme.colors.primary,textDecoration:'underline'}} target={'_blank'} rel=\"nofollow noopener noreferrer\">Terms of Service</RouterLink></Text>\n      </Box>\n    );\n\n    const newToEthereum = this.state.currentSection === 'new';\n    const showConnectionButtons = this.state.currentSection === 'wallet';\n    const showInstructions = this.state.currentSection === 'instructions';\n\n    if (showInstructions){\n      return (\n        <React.Fragment>\n          <ModalCard.Header title={'Before you connect'} subtitle={'Connecting lets you use Idle via your Ethereum account.'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              flexDirection={['column', 'row']}\n              justifyContent={\"space-between\"}\n              my={[0, 3]}\n            >\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"Public\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>The blockchain is public</Heading>\n                <Text fontSize={1} textAlign={'center'}>\n                  Your Ethereum account activity is public on the\n                  blockchain. Choose an account you don’t mind being\n                  linked with your activity here.\n                </Text>\n              </Box>\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"AccountBalanceWallet\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>Have some Ether for fees</Heading>\n                <Text fontSize={1} mb={3} textAlign={'center'}>\n                  You’ll need Ether to pay transaction fees. Buy Ether\n                  from exchanges like Coinbase or directly via enabled wallet\n                  such as Portis or Dapper.<br />\n                  <Link\n                    title=\"Learn about Ethereum transaction fees\"\n                    fontWeight={'0'}\n                    color={'blue'}\n                    textAlign={'center'}\n                    hoverColor={'blue'}\n                    href=\"#\"\n                    onClick={this.toggleShowTxFees}\n                  >\n                    What are transaction fees?\n                  </Link>\n                </Text>\n              </Box>\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"People\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>Have the right account ready</Heading>\n                <Text fontSize={1} textAlign={'center'}>\n                  If you have multiple Ethereum accounts, check that the\n                  one you want to use is active in your browser.\n                </Text>\n              </Box>\n            </Flex>\n          </ModalCard.Body>\n        </React.Fragment>\n      );\n    }\n\n    if (this.state.askCustomAddress){\n      return (\n        <Box>\n          <ModalCard.Header\n            title={'Connect ETH wallet'}\n            icon={'images/idle-mark.png'}\n            subtitle={'And get started with Idle.'}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              width={1}\n              minWidth={[1,'30em']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Field\n                width={1}\n                label={'Ethereum address'}\n              >\n                <Input\n                  required\n                  width={1}\n                  type={'text'}\n                  className={styles.input}\n                  borderColor={'cardBorder'}\n                  backgroundColor={'cardBg'}\n                  pattern={'^0x[a-fA-F0-9]{40}$'}\n                  value={this.state.customAddress}\n                  onChange={ e => this.updateCustomAddress(e) }\n                  placeholder={'Insert a valid Ethereum address'}\n                />\n              </Field>\n              {\n                this.state.customAddressError && (\n                  <Text\n                    mb={2}\n                    fontSize={2}\n                    color={'red'}\n                    fontWeight={3}\n                    textAlign={'center'}\n                  >\n                    Insert a valid Ethereum Address\n                  </Text>\n                )\n              }\n              <Button\n                px={[3,4]}\n                mx={'auto'}\n                fontWeight={3}\n                size={'medium'}\n                fontSize={[2,2]}\n                borderRadius={4}\n                contrastColor={'primary'}\n                className={[styles.gradientButton]}\n                onClick={ e => this.connectCustomAddress() }\n              >\n                CONNECT\n              </Button>\n            </Flex>\n            <Flex\n              pt={3}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <Link\n                hoverColor={'blue'}\n                textAlign={'center'}\n                onClick={ e => this.setCustomAddress(false) }\n              >\n                Select another Wallet\n              </Link>\n            </Flex>\n            { TOSacceptance }\n          </ModalCard.Body>\n        </Box>\n      );\n    }\n\n    if (showConnectionButtons) {\n      return (\n        <Box>\n          <ModalCard.Header title={'Select your Wallet'} subtitle={'And get started with Idle.'} icon={'images/idle-mark.png'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex width={1} px={[0,5]} flexDirection={'column'} justifyContent={'center'}>\n              <Web3ConnectionButtons\n                width={1/2}\n                isMobile={this.props.isMobile}\n                setConnector={this.setConnector}\n                connectionCallback={this.closeModal}\n                size={this.props.isMobile ? 'medium' : 'large'}\n                setCustomAddress={this.setCustomAddress.bind(this)}\n              />\n            </Flex>\n            <Flex pt={3} alignItems={'center'} justifyContent={'center'}>\n              <Link textAlign={'center'} hoverColor={'blue'} onClick={ e => this.setCurrentSection(e,'new') }>I don't have a wallet</Link>\n            </Flex>\n            { TOSacceptance }\n          </ModalCard.Body>\n        </Box>\n      );\n    }\n\n    if (newToEthereum) {\n      return (\n        <React.Fragment>\n          <ModalCard.Header title={'Let\\'s create your first Ethereum wallet'} icon={'images/idle-mark.png'}></ModalCard.Header>\n          <ModalCard.Body>\n            {\n              !this.state.newToEthereumChoice ? (\n                <Flex width={1} px={[0,4]} flexDirection={'column'} justifyContent={'center'}>\n                  <Box mb={3}>\n                    <Text fontSize={[2,3]} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                      Connect with e-mail or phone number?\n                    </Text>\n                  </Box>\n                  <Flex mb={3} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                    <ImageButton\n                      buttonProps={{\n                        border:2\n                      }}\n                      caption={'Use e-mail'}\n                      imageSrc={'images/email.svg'}\n                      isMobile={this.props.isMobile}\n                      subcaption={'Powered by Portis'}\n                      handleClick={ e => this.setConnector('Portis','Portis') }\n                      imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {mb:'3px',width:'auto',height:'55px'}}\n                    />\n                    <ImageButton\n                      buttonProps={{\n                        border:2\n                      }}\n                      caption={'Use phone number'}\n                      isMobile={this.props.isMobile}\n                      imageSrc={'images/mobile.svg'}\n                      subcaption={'Powered by Fortmatic'}\n                      handleClick={ e => this.setConnector('Fortmatic','Fortmatic') }\n                      imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {mb:'3px',width:'auto',height:'55px'}}\n                    />\n                  </Flex>\n                  <Flex alignItems={'center'} justifyContent={'center'}>\n                    <Link textAlign={'center'} hoverColor={'blue'} onClick={ e => this.setCurrentSection(e,'wallet') }>I already have a wallet</Link>\n                  </Flex>\n                </Flex>\n              ) : (\n                <Box>\n                  <Text fontSize={3} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                    We are connecting you to {this.state.newToEthereumChoice} wallet provider...\n                  </Text>\n                  <Flex\n                    mt={2}\n                    justifyContent={'center'}\n                    alignItems={'center'}\n                    textAlign={'center'}>\n                    <Loader size=\"40px\" /> <Text ml={2} color={'dark-gray'}>Closing in {this.state.closeRemainingTime} seconds...</Text>\n                  </Flex>\n                </Box>\n              )\n            }\n            { TOSacceptance }\n          </ModalCard.Body>\n        </React.Fragment>\n      );\n    }\n\n    return (\n      <React.Fragment>\n        <ModalCard.Header title={'Connect to Idle'} icon={'images/idle-mark.png'}></ModalCard.Header>\n        <ModalCard.Body>\n          {\n            <Flex\n              width={1}\n              px={[0,4]}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Box mb={3}>\n                <Text\n                  fontWeight={2}\n                  fontSize={[2,3]}\n                  lineHeight={1.5}\n                  textAlign={'center'}\n                >\n                  How do you want to connect to Idle?\n                </Text>\n              </Box>\n              <Flex\n                mb={[2,3]}\n                alignItems={'center'}\n                justifyContent={'center'}\n                flexDirection={['column','row']}\n              >\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={`Ethereum wallet`}\n                  isMobile={this.props.isMobile}\n                  subcaption={'Choose your favourite'}\n                  imageSrc={'images/ethereum-wallet.svg'}\n                  handleClick={ e => this.setCurrentSection(e,'wallet') }\n                  imageProps={this.props.isMobile ? {width:'auto',height:'42px'} : {width:'auto',height:'55px',marginBottom:'5px'}}\n                />\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={`New wallet`}\n                  isMobile={this.props.isMobile}\n                  subcaption={'Use email / phone'}\n                  imageSrc={'images/new-wallet.png'}\n                  handleClick={ e => this.setCurrentSection(e,'new') }\n                  imageProps={this.props.isMobile ? {width:'auto',height:'42px'} : {width:'auto',height:'55px',marginBottom:'5px'}}\n                />\n              </Flex>\n              <Flex\n                alignItems={'center'}\n                justifyContent={'center'}\n              >\n                <Link\n                  color={'primary'}\n                  hoverColor={'primary'}\n                  onClick={ e => this.setCustomAddress(true) }\n                >\n                  Watch Ethereum Address\n                </Link>\n              </Flex>\n            </Flex>\n          }\n          { TOSacceptance }\n        </ModalCard.Body>\n      </React.Fragment>\n    );\n  }\n\n  renderFooter = () => {\n\n    if (this.state.newToEthereumChoice || (this.state.currentSection && this.state.askCustomAddress)){\n      return null;\n    }\n\n    return (\n      <ModalCard.Footer>\n        { !this.state.currentSection ? (\n            <Button\n              className={[styles.gradientButton,styles.empty]}\n              onClick={ e => this.setCurrentSection(e,'instructions') }\n              size={'medium'}\n              borderRadius={4}\n              contrastColor={'blue'}\n              fontWeight={3}\n              fontSize={[2,2]}\n              mx={'auto'}\n              px={[4,5]}\n            >\n              READ INSTRUCTIONS\n            </Button>\n          ) : (!this.state.askCustomAddress || this.state.currentSection==='instructions') && (\n            <Button\n              className={[styles.gradientButton,styles.empty]}\n              onClick={this.resetModal}\n              size={'medium'}\n              borderRadius={4}\n              contrastColor={'blue'}\n              fontWeight={3}\n              fontSize={[2,2]}\n              mx={'auto'}\n              px={[4,5]}\n            >\n              BACK\n            </Button>\n          )\n        }\n      </ModalCard.Footer>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.closeModal}>\n          {this.state.showTxFees === false ? (\n            <React.Fragment>\n              {this.renderModalContent()}\n              {this.renderFooter()}\n            </React.Fragment>\n          ) : (\n            <Box>\n              <TransactionFeeModal />\n              {this.renderFooter()}\n            </Box>\n          )}\n\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionModal;\n","import React from \"react\";\nimport {\n  Heading,\n  Text,\n  Modal,\n  Flex,\n  Box,\n  Loader\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport GeneralUtil from \"../GeneralUtil\";\n\nclass ConnectionPendingModal extends React.Component {\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2 my={3}>Connect Ethereum account</Heading.h2>\n\n        <Text my={4}>\n          Confirm the request that's just appeared. If you can't see a\n          request, open your{\" \"}\n          {GeneralUtil.hasMetaMask()\n            ? `MetaMask extension`\n            : `eth wallet settings`}\n          .\n        </Text>\n\n        <Box bg={\"#f6f6fc\"} p={3} display={[\"none\", \"block\"]}>\n          <Flex alignItems={\"center\"}>\n            <Box position={\"relative\"} width={\"4em\"}>\n              <Box>\n                <Loader size={\"3em\"} />\n              </Box>\n            </Box>\n            <Box>\n              <Text fontWeight={4}>\n                Waiting for connection confirmation...\n              </Text>\n              <Text fontWeight={2}>This won’t cost you any Ether</Text>\n            </Box>\n          </Flex>\n        </Box>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionPendingModal;\n","import React from \"react\";\nimport { Heading, Text, Flex, Button, Modal } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\n\nclass UserRejectedConnectionModal extends React.Component {\n  sendMessageAgain = event => {\n    this.props.closeModal();\n    this.props.initAccount();\n  };\n\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2 my={3}>\n          You can't continue without connecting your account\n        </Heading.h2>\n\n        <Text my={4}>\n          To use our blockchain features you need to confirm the connection\n          request.\n        </Text>\n\n        <Flex flexDirection={['column', 'row']} justifyContent={\"flex-end\"} mt={4}>\n          <Button.Outline onClick={this.props.closeModal} mr={[0, 3]} mb={[3, 0]}>\n            Cancel connection\n          </Button.Outline>\n          <Button onClick={this.sendMessageAgain}>\n            Try again\n          </Button>\n        </Flex>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default UserRejectedConnectionModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Icon,\n  Modal,\n  Flex,\n  Box,\n  Button,\n  EthAddress,\n  QR,\n  Link\n} from \"rimble-ui\";\nimport TransactionFeeModal from \"./TransactionFeeModal\";\n\nclass LowFundsModal extends React.Component {\n  state = {\n    showSecondary: false,\n    showTxFees: false\n  };\n\n  toggleQRVisible = () => {\n    this.setState({\n      showSecondary: !this.state.showSecondary\n    });\n  };\n\n  toggleShowTxFees = e => {\n    console.log(\"showTxFees\", this.state.showTxFees);\n    e.preventDefault();\n\n    this.setState({\n      showTxFees: !this.state.showTxFees\n    });\n  };\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card\n          pr={[0, 5]}\n          pl={[0, 5]}\n          pt={[\"48px\", 5]}\n          pb={[\"97px\", 4]}\n          maxWidth={\"960px\"}\n          overflow={\"hidden\"}\n          position={\"relative\"}\n        >\n          <Box position={\"relative\"}>\n            <Flex\n              justifyContent={\"flex-end\"}\n              mr={[0, -5]}\n              mt={[\"-48px\", -5]}\n              position={\"absolute\"}\n              top={\"0\"}\n              left={\"0\"}\n              right={\"0\"}\n              bg={\"white\"}\n              zIndex={\"1\"}\n            >\n              <Button.Text\n                icononly\n                icon={\"Close\"}\n                color={\"moon-gray\"}\n                onClick={this.props.closeModal}\n              />\n            </Flex>\n          </Box>\n\n          {this.state.showSecondary === false &&\n          this.state.showTxFees === false ? (\n            <Box>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start primary content */}\n\n                  <Box alignContent=\"center\" py={3}>\n                    <Heading.h2>\n                      Not enough Ether for transaction fees\n                    </Heading.h2>\n                  </Box>\n                  <Text mb={4}>\n                    This is a blockchain action so you’ll have to pay a\n                    transaction fee. A few dollars worth of Ether should be\n                    enough but fees do change based on how busy the network is.{\" \"}\n                    <strong>Fund your account and try again.</strong>{\" \"}\n                    <Link\n                      title=\"Learn about Ethereum transaction fees\"\n                      as={\"a\"}\n                      href=\"#\"\n                      onClick={this.toggleShowTxFees}\n                    >\n                      What are transaction fees?\n                    </Link>\n                  </Text>\n\n                  <Heading.h3>How to add funds</Heading.h3>\n\n                  <Flex\n                    alignItems={\"stretch\"}\n                    mx={0}\n                    mb={[4, 5]}\n                    mt={[3, 4]}\n                    flexWrap={[\"wrap\", \"no-wrap\"]}\n                  >\n                    <Box p={[1, 2]} width={[1, 1 / 2]}>\n                      <Flex\n                        flexDirection={\"column\"}\n                        justifyContent={\"space-between\"}\n                        height={\"100%\"}\n                      >\n                        <Box>\n                          <Heading.h5>Buy ETH from an exchange</Heading.h5>\n                          <Text fontSize=\"1\">\n                            You can buy ETH from exchanges like Coinbase and\n                            send it to your account. If you don’t already have\n                            a Coinbase account, it can take a while to get set\n                            up.\n                          </Text>\n                        </Box>\n\n                        <Button.Outline my={3}>\n                          <Flex alignItems={\"center\"}>\n                            <Icon name=\"OpenInNew\" mr={2} />\n                            Go to CoinBase\n                          </Flex>\n                        </Button.Outline>\n                      </Flex>\n                    </Box>\n                    <Box p={[1, 2]} width={[1, 1 / 2]}>\n                      <Flex\n                        flexDirection={\"column\"}\n                        justifyContent={\"space-between\"}\n                        height={\"100%\"}\n                      >\n                        <Box>\n                          <Heading.h5>\n                            Send ETH from another account\n                          </Heading.h5>\n                          <Text fontSize=\"1\">\n                            If you have ETH in another Ethereum account, you\n                            can send it to this account using your public\n                            Ethereum address or QR code.\n                          </Text>\n                        </Box>\n                        <Button.Outline my={3} onClick={this.toggleQRVisible}>\n                          <Flex alignItems={\"center\"}>\n                            <Icon name=\"FilterCenterFocus\" mr={2} />\n                            Show account QR code\n                          </Flex>\n                        </Button.Outline>\n                      </Flex>\n                    </Box>\n                  </Flex>\n                  {/* End primary content */}\n                </Box>\n              </Box>\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start primary footer */}\n                <Flex borderTop={1} borderColor={\"#eee\"} />\n                <Flex pt={4} justifyContent={[\"center\", \"flex-end\"]}>\n                  <Button onClick={this.props.closeModal} width={[1, \"auto\"]}>\n                    Back to Idle\n                  </Button>\n                </Flex>\n                {/* End primary footer */}\n              </Box>\n            </Box>\n          ) : null}\n\n          {this.state.showSecondary ? (\n            <Box mb={3}>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start secondary content */}\n                  <Flex my={3} justifyContent={\"center\"}>\n                    <QR\n                      size={130}\n                      value={\n                        this.props.account ? this.props.account : \"1234512345\"\n                      }\n                    />\n                  </Flex>\n\n                  <EthAddress my={4} address={this.props.account} />\n                  <Flex mb={3} />\n                  {/* End secondary content */}\n                </Box>\n              </Box>\n\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start secondary footer */}\n                <Flex borderTop={1} borderColor={\"#eee\"} />\n                <Flex mt={4} justifyContent={[\"center\", \"flex-end\"]}>\n                  <Button.Outline\n                    width={[1, \"auto\"]}\n                    onClick={this.toggleQRVisible}\n                  >\n                    Go back\n                  </Button.Outline>\n                </Flex>\n                {/* End secondary footer */}\n              </Box>\n            </Box>\n          ) : null}\n\n          {this.state.showTxFees ? (\n            <Box mb={3}>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start tx fee content */}\n                  <TransactionFeeModal />\n                  {/* End tx fee content */}\n                </Box>\n              </Box>\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start primary footer */}\n                <Flex\n                  pt={4}\n                  justifyContent={[\"center\", \"flex-end\"]}\n                  borderTop={1}\n                  borderColor={\"#eee\"}\n                >\n                  <Button.Outline\n                    width={[1, \"auto\"]}\n                    onClick={this.toggleShowTxFees}\n                  >\n                    Go Back\n                  </Button.Outline>\n                </Flex>\n                {/* End primary footer */}\n              </Box>\n            </Box>\n          ) : null}\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default LowFundsModal;\n","import React from \"react\";\n\nimport NoWeb3BrowserModal from \"./components/NoWeb3BrowserModal\";\nimport NoWalletModal from \"./components/NoWalletModal\";\nimport WrongNetworkModal from \"./components/WrongNetworkModal\";\n\nimport ConnectionModal from \"./components/ConnectionModal\";\nimport ConnectionPendingModal from \"./components/ConnectionPendingModal\";\nimport UserRejectedConnectionModal from \"./components/UserRejectedConnectionModal\";\n\nimport LowFundsModal from \"./components/LowFundsModal\";\n\nclass ConnectionModalUtil extends React.Component {\n  render() {\n    return (\n      <div>\n        <NoWeb3BrowserModal\n          closeModal={this.props.modals.methods.closeNoWeb3BrowserModal}\n          isOpen={this.props.modals.data.noWeb3BrowserModalIsOpen}\n          transaction={this.props.transaction}\n        />\n\n        <NoWalletModal\n          closeModal={this.props.modals.methods.closeNoWalletModal}\n          isOpen={this.props.modals.data.noWalletModalIsOpen}\n          transaction={this.props.transaction}\n        />\n\n        <WrongNetworkModal\n          closeModal={this.props.modals.methods.closeWrongNetworkModal}\n          isOpen={this.props.modals.data.wrongNetworkModalIsOpen}\n          network={this.props.network}\n        />\n\n        <ConnectionModal\n          {...this.props}\n          isMobile={this.props.isMobile}\n          setConnector={this.props.setConnector}\n          currentNetwork={this.props.network.current}\n          validateAccount={this.props.validateAccount}\n          closeModal={this.props.modals.methods.closeConnectionModal}\n          isOpen={ this.props.modals.data.connectionModalIsOpen && !this.props.accountValidated }\n        />\n\n        <ConnectionPendingModal\n          closeModal={this.props.modals.methods.closeConnectionPendingModal}\n          isOpen={this.props.modals.data.accountConnectionPending}\n          currentNetwork={this.props.network.current}\n        />\n        <UserRejectedConnectionModal\n          closeModal={\n            this.props.modals.methods.closeUserRejectedConnectionModal\n          }\n          isOpen={this.props.modals.data.userRejectedConnect}\n          initAccount={this.props.initAccount}\n        />\n\n        <LowFundsModal\n          closeModal={this.props.modals.methods.closeLowFundsModal}\n          isOpen={this.props.modals.data.lowFundsModalIsOpen}\n          currentNetwork={this.props.network.current}\n          account={this.props.account}\n        />\n      </div>\n    );\n  }\n}\n\nexport default ConnectionModalUtil;\n","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Flex,\n  Button\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass ConnectionErrorModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  async closeModal(e){\n    e.preventDefault();\n    // Disconnect to Infura only if the wallet is not logged\n    if (!this.props.account){\n      await this.props.context.setFirstValidConnector(['Infura']);\n      this.props.setConnector('Infura',null);\n    }\n    this.props.modals.methods.closeConnectionErrorModal();\n  }\n\n  render() {\n\n    const walletProvider = this.functionsUtil.getWalletProvider();\n    const isLedger = (walletProvider && walletProvider.toLowerCase() === 'ledger') || (typeof this.props.modals.data.connectionError === 'string' && this.props.modals.data.connectionError.toLowerCase().includes('ledger'));\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={ e => this.closeModal(e) }>\n          <ModalCard.Header title={ isLedger ? 'Ledger Error' : `Connection Error` } icon={'images/warning.svg'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={1} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text.p color={'dark-gray'} textAlign={'center'}>\n                The following error occured while trying to connect with your { isLedger ? 'Ledger' : 'account' }:<br />\n                <Text.span color={'red'} fontWeight={3}>\"{this.props.modals.data.connectionError}\"</Text.span><br />\n                {\n                  isLedger ? (\n                    <Text.span>\n                      Make sure that your Ledger is <strong>connected</strong> and <strong>unlocked</strong>. Also check that both <strong>Contract data</strong> and <strong>Browser support</strong> are enabled in the Ledger settings.<br />\n\n                    </Text.span>\n                  ) : 'Make sure that your wallet is unlocked and try again.'\n                }\n              </Text.p>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ async (e) => { await this.closeModal(e); } }\n              >\n              GOT IT\n              </Button>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionErrorModal;","import React from \"react\";\nimport {\n  Text,\n  Link,\n  Flex,\n  Modal,\n  Button\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass TransactionErrorModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  async closeModal(e){\n    e.preventDefault();\n    this.props.modals.methods.closeTransactionErrorModal();\n  }\n\n  render() {\n\n    const isLedgerError = typeof this.props.modals.data.transactionError === 'string' && this.props.modals.data.transactionError.toLowerCase().includes('ledger');\n    const isSlowTxError = typeof this.props.modals.data.transactionError === 'string' && this.props.modals.data.transactionError.toLowerCase().includes('not mined within 50 blocks');\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={ e => this.closeModal(e) }>\n          <ModalCard.Header title={ 'Transaction Error' } icon={'images/warning.svg'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={1} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text.p color={'dark-gray'} textAlign={'center'}>\n                The following error occured while trying to send a transaction:<br />\n                <Text.span color={'red'} fontWeight={3}>\"{this.props.modals.data.transactionError}\"</Text.span><br />\n                {\n                  isLedgerError ? (\n                    <Text.span\n                      fontSize={1}\n                    >\n                      <br />Make sure that your Ledger is <strong>connected</strong> and <strong>unlocked</strong>. Also check that both <strong>Contract data</strong> and <strong>Browser support</strong> are enabled in the Ledger settings.<br />\n                      We also suggest you to connect your Ledger with Metamask, read the <Link fontSize={1} color={'blue'} hoverColor={'blue'} target={'_blank'} rel={\"nofollow noopener noreferrer\"} href={'https://metamask.zendesk.com/hc/en-us/articles/360020394612-How-to-connect-a-Trezor-or-Ledger-Hardware-Wallet'}>instructions here</Link>.\n                    </Text.span>\n                  ) : isSlowTxError ? 'This could happen when the gas price is low, check the transaction status with your Wallet.' : 'Make sure that your have enough funds in your wallet.'\n                }\n              </Text.p>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ async (e) => { await this.closeModal(e); } }\n              >\n              GOT IT\n              </Button>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default TransactionErrorModal;","import Web3 from \"web3\";\nimport React from 'react';\nimport BigNumber from 'bignumber.js';\nimport SimpleID from 'simpleid-js-sdk';\nimport NetworkUtil from \"./NetworkUtil\";\nimport { Biconomy } from \"@biconomy/mexa\";\nimport * as Sentry from '@sentry/browser';\nimport FunctionsUtil from './FunctionsUtil';\nimport globalConfigs from '../configs/globalConfigs';\nimport ConnectionModalUtil from \"./ConnectionModalsUtil\";\nimport detectEthereumProvider from '@metamask/detect-provider';\nimport ConnectionErrorModal from './components/ConnectionErrorModal';\nimport TransactionErrorModal from './components/TransactionErrorModal';\nimport { TerminalHttpProvider, SourceType } from '@terminal-packages/sdk';\n\nrequire('dotenv').config();\nconst INFURA_KEY = process.env[\"REACT_APP_INFURA_KEY\"];\n\nconst RimbleTransactionContext = React.createContext({\n  web3: {},\n  account: {},\n  biconomy: {},\n  simpleID: {},\n  contracts: [],\n  web3Infura: {},\n  tokenConfig: {},\n  transactions: {},\n  permitClient: {},\n  accountBalance: {},\n  initWeb3: () => {},\n  accountValidated: {},\n  initAccount: () => {},\n  accountBalanceLow: {},\n  initSimpleID: () => {},\n  initContract: () => {},\n  erc20ForwarderClient: {},\n  accountBalanceToken: {},\n  checkPreflight: () => {},\n  validateAccount: () => {},\n  network: {\n    current: {},\n    required: {},\n    checkNetwork: () => {},\n    isCorrectNetwork: null,\n  },\n  accountInizialized: false,\n  getTokenDecimals: () => {},\n  rejectValidation: () => {},\n  getAccountBalance: () => {},\n  contractsInitialized: false,\n  accountValidationPending: {},\n  initializeContracts: () => {},\n  rejectAccountConnect: () => {},\n  enableUnderlyingWithdraw: false,\n  connectAndValidateAccount: () => {},\n  modals: {\n    data: {\n      connectionError: {},\n      lowFundsModalIsOpen: {},\n      noWalletModalIsOpen: {},\n      userRejectedConnect: {},\n      connectionModalIsOpen: {},\n      userRejectedValidation: {},\n      wrongNetworkModalIsOpen: {},\n      accountValidationPending: {},\n      accountConnectionPending: {},\n      noWeb3BrowserModalIsOpen: {},\n      transactionConnectionModalIsOpen: {},\n    },\n    methods: {\n      openLowFundsModal: () => {},\n      closeLowFundsModal: () => {},\n      openWrongNetworkModal: () => {},\n      closeWrongNetworkModal: () => {},\n      openNoWeb3BrowserModal: () => {},\n      closeNoWeb3BrowserModal: () => {},\n      openConnectionErrorModal: () => {},\n      closeConnectionErrorModal: () => {},\n      openTransactionErrorModal: () => {},\n      closeTransactionErrorModal: () => {},\n      openConnectionPendingModal: () => {},\n      closeConnectionPendingModal: () => {},\n      openUserRejectedConnectionModal: () => {},\n      openUserRejectedValidationModal: () => {},\n      closeUserRejectedConnectionModal: () => {},\n      closeUserRejectedValidationModal: () => {},\n    }\n  },\n  transaction: {\n    data: {\n      transactions: {}\n    },\n    meta: {},\n    methods: {}\n  }\n});\n\nlet setConnectorName = null;\nlet biconomyLoginProcessing = false;\n\nclass RimbleTransaction extends React.Component {\n  static Consumer = RimbleTransactionContext.Consumer;\n\n  componentUnmounted = false;\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    const props = Object.assign({},this.props);\n    props.contracts = this.state.contracts;\n    if (this.functionsUtil){\n      props.account = this.state.account;\n      this.functionsUtil.setProps(props);\n    } else {\n      props.account = this.state.account;\n      this.functionsUtil = new FunctionsUtil(props);\n    }\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n    window.initWeb3 = this.initWeb3;\n  }\n\n  componentDidMount = async () => {\n    this.initSimpleID();\n\n    // this.functionsUtil.customLog('RimbleWeb3 componentDidMount');\n    this.initWeb3();\n\n    // TEST - Manually triggers transaction error\n    // this.openTransactionErrorModal(null,'Your Ledger device is Ineligible');\n\n    window.testTransaction = (method) => {\n      const transaction = this.createTransaction();\n      transaction.method = method;\n      this.addTransaction(transaction);\n      return transaction;\n    }\n\n    window.updateTransaction = (transaction,hash,status,params) => {\n      // Add meta data to transaction\n      transaction.status = status;\n      transaction.params = params;\n      transaction.type = \"contract\";\n      transaction.created = Date.now();\n      transaction.transactionHash = hash;\n\n      // console.log('window.updateTransaction',transaction);\n\n      this.updateTransaction(transaction);\n      return transaction;\n    }\n  }\n\n  componentDidUpdate = async (prevProps, prevState) => {\n\n    this.loadUtils();\n\n    // this.functionsUtil.customLog('componentDidUpdate',prevProps.connectorName,this.props.connectorName,this.props.context.connectorName,this.props.context.active,(this.props.context.error ? this.props.context.error.message : null));\n\n    if (prevProps.connectorName !== this.props.connectorName && this.props.connectorName){\n      this.initWeb3();\n    } else if ( prevProps.context !== this.props.context ){\n      if (this.props.context.error instanceof Error && this.props.context.error.message.length){\n        const errorMessage = this.props.context.error.message;\n        const isWalletConnectClosedModalError = (errorMessage === 'User closed WalletConnect modal' || errorMessage === 'User closed modal');\n        // this.functionsUtil.customLog('componentDidUpdate',setConnectorName,errorMessage);\n        if (setConnectorName === 'WalletConnect' && isWalletConnectClosedModalError){\n          // this.functionsUtil.customLog('WalletConnect disconnected! Set Infura connector');\n          this.props.setConnector('Infura',null);\n          // this.functionsUtil.removeStoredItem('walletProvider');\n          // this.functionsUtil.removeStoredItem('connectorName');\n          // this.functionsUtil.setLocalStorage('context',JSON.stringify({active:this.props.context.active,connectorName:'Infura'}));\n          setConnectorName = null;\n          // await this.props.context.setConnector('Infura');\n        } else if (!isWalletConnectClosedModalError) {\n          this.openConnectionErrorModal(null,errorMessage);\n        } else {\n          this.initWeb3();\n        }\n      // WalletConnect double trigger initWeb3\n      } else if (this.props.context.active && this.props.context.connectorName!=='WalletConnect' && this.props.connectorName==='WalletConnect') {\n        this.initWeb3();\n      }\n    } else if ( (this.props.context.connectorName && this.props.context.connectorName !== this.props.connectorName) || prevProps.customAddress !== this.props.customAddress){\n      this.initWeb3();\n    }\n\n    const customAddressChanged = prevProps.customAddress !== this.props.customAddress;\n    if (customAddressChanged){\n      this.initAccount();\n    }\n\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    // const availableTokensChanged = prevProps.availableTokens && this.props.availableTokens && JSON.stringify(Object.keys(prevProps.availableTokens)) !== JSON.stringify(Object.keys(this.props.availableTokens));\n    const availableStrategiesChanged = prevProps.availableStrategies && this.props.availableStrategies && JSON.stringify(Object.keys(prevProps.availableStrategies)) !== JSON.stringify(Object.keys(this.props.availableStrategies));\n\n    // Reset tokenDecimals if token is changed\n    if (tokenChanged){\n      this.setState({\n        tokenDecimals: null\n      });\n    }\n\n    // this.functionsUtil.customLog(prevProps.enableUnderlyingWithdraw,this.props.enableUnderlyingWithdraw,this.state.enableUnderlyingWithdraw);\n    if (prevProps.enableUnderlyingWithdraw !== this.props.enableUnderlyingWithdraw){\n      this.setState({\n        enableUnderlyingWithdraw:this.props.enableUnderlyingWithdraw\n      });\n    }\n\n    if (localStorage){\n      const context = JSON.parse(localStorage.getItem('context'));\n      if (!context || (this.props.context.active !== context.active || this.props.context.connectorName !== context.connectorName)){\n        this.functionsUtil.setLocalStorage('context',JSON.stringify({active:this.props.context.active,connectorName:this.props.context.connectorName}));\n      }\n    }\n\n    if (tokenChanged/* || availableTokensChanged*/ || availableStrategiesChanged){\n      await this.initializeContracts();\n    }\n  }\n\n  // Initialize a web3 provider\n  initWeb3 = async (connectorName=null) => {\n\n    // Detect ethereum provider\n    const metamaskProvider = await detectEthereumProvider();\n    if (metamaskProvider && (!window.ethereum || window.ethereum !== metamaskProvider)){\n      window.ethereum = metamaskProvider;\n    }\n\n    // Suppress console warning\n    if (window.ethereum && window.ethereum.autoRefreshOnNetworkChange) {\n      window.ethereum.autoRefreshOnNetworkChange = false;\n    }\n\n    const context = this.props.context;\n\n    const web3Infura = new Web3(new Web3.providers.HttpProvider(globalConfigs.network.providers.infura[globalConfigs.network.requiredNetwork]+INFURA_KEY));\n\n    let web3 = context.library;\n\n    // 0x Instant Wallet Provider Injection\n    if (!window.RimbleWeb3_context || context.connectorName !== window.RimbleWeb3_context.connectorName){\n      window.RimbleWeb3_context = context;\n    }\n\n    // Reset setConnectorName if force connectorName\n    if (connectorName){\n      setConnectorName = null;\n    } else {\n      connectorName = this.props.connectorName;\n    }\n\n    // const last_context = localStorage ? JSON.parse(localStorage.getItem('context')) : null;\n\n    // this.functionsUtil.customLog('initWeb3',context.active,connectorName,context.connectorName,context.connector,(web3 && web3.currentProvider ? web3.currentProvider.disable : null),(context.connector ? context.connector.disable : null));\n    if (context && connectorName === 'Infura' && connectorName !== context.connectorName){\n      if (web3 && typeof web3.currentProvider.disable === 'function'){\n        web3.currentProvider.disable();\n      } else if (context.connector && typeof context.connector.disable === 'function'){\n        context.connector.disable();\n      }\n      web3 = null;\n      setConnectorName = null;\n    }\n\n    const connectorNameChanged = (context.connectorName && context.connectorName !== connectorName) || (connectorName !== 'Infura' && connectorName !== setConnectorName);\n\n    // this.functionsUtil.customLog('initWeb3',context.active,connectorNameChanged,context.connectorName,connectorName,setConnectorName);\n\n    if (!context.active || connectorNameChanged) {\n      // Select preferred web3 provider\n      if (connectorName && connectorNameChanged){\n        // this.functionsUtil.customLog('initWeb3 set connector',connectorName);\n        setConnectorName = connectorName;\n        await context.setConnector(connectorName);\n        // await context.setFirstValidConnector([connectorName, 'Infura']);\n        return web3;\n      }\n      /*\n      else if (setConnectorName){\n        // Catch WalletConnect unexpected disconnect and fallback to Infura\n        if (connectorName === 'WalletConnect' && connectorName === setConnectorName && last_context && last_context.active && last_context.connectorName==='WalletConnect' && !context.connectorName){\n          this.functionsUtil.customLog('WalletConnect disconnected! Set Infura connector');\n          this.props.setConnector('Infura',null);\n          this.functionsUtil.removeStoredItem('walletProvider');\n          this.functionsUtil.removeStoredItem('connectorName');\n          this.functionsUtil.setLocalStorage('context',JSON.stringify({active:context.active,connectorName:context.connectorName}));\n          setConnectorName = null;\n          await context.setConnector('Infura');\n          if (context.connector && typeof context.connector.disable === 'function'){\n            await context.connector.disable();\n          }\n        }\n\n        this.functionsUtil.customLog('initWeb3 skip due to setConnectorName ('+setConnectorName+') already set');\n        return web3;\n      }\n      */\n    }\n    /* else if (context.connectorName === \"WalletConnect\") {\n      if (!context.account) {\n\n        // WalletConnect already opened\n        if (document.getElementById('walletconnect-wrapper')){\n          return web3;\n        }\n\n        WalletConnectQRCodeModal.open(\n          context.connector.walletConnector.uri,\n          async () => {\n            document.getElementById('walletconnect-wrapper').remove();\n            this.props.setConnector('Infura',null);\n            await context.setConnector('Infura');\n            setConnectorName = null;\n          }\n        );\n      } else {\n        try {\n          WalletConnectQRCodeModal.close();\n        } catch {}\n      }\n    // Reset web3 if Infura\n    } */\n    /*\n    else if (context.active && (connectorName === 'Infura' || context.connectorName === \"Infura\")){\n      if (typeof web3.currentProvider.disable === 'function'){\n        await web3.currentProvider.disable();\n      } else if (context.connector && typeof context.connector.disable === 'function'){\n        await context.connector.disable();\n      }\n      web3 = null;\n      setConnectorName = null;\n    }\n    */\n\n    let web3Host = null;\n    let web3Provider = null;\n\n    if (!web3) { // safety web3 implementation\n      if (window.ethereum) {\n        this.functionsUtil.customLog(\"Using modern web3 provider.\");\n        web3Provider = window.ethereum;\n      } else if (window.web3) {\n        this.functionsUtil.customLog(\"Legacy web3 provider. Try updating.\");\n        web3Provider = window.web3;\n      } else {\n        this.functionsUtil.customLog(\"Non-Ethereum browser detected. Using Infura fallback.\");\n        web3Host = globalConfigs.network.providers.infura[globalConfigs.network.requiredNetwork]+INFURA_KEY;\n      }\n    } else {\n      web3Provider = web3.currentProvider;\n    }\n\n    let forceCallback = false;\n\n    if ((!connectorName || connectorName === 'Infura') && web3Provider && typeof web3Provider.enable === 'function'){\n      try {\n        await web3Provider.enable();\n      } catch (connectionError){\n        web3Provider = null;\n        web3Host = globalConfigs.network.providers.infura[globalConfigs.network.requiredNetwork]+INFURA_KEY;\n        forceCallback = true;\n      }\n    }\n\n    const terminalInfo = globalConfigs.network.providers.terminal;\n\n    if (terminalInfo && terminalInfo.enabled && terminalInfo.supportedNetworks.indexOf(globalConfigs.network.requiredNetwork) !== -1 ){\n      const TerminalHttpProviderParams = terminalInfo.params;\n      const terminalSourceType = localStorage && localStorage.getItem('walletProvider') ? localStorage.getItem('walletProvider') : SourceType.Infura;\n      TerminalHttpProviderParams.source = terminalSourceType;\n\n      if (web3Provider){\n        TerminalHttpProviderParams.customHttpProvider = web3Provider;\n      } else if (web3Host){\n        TerminalHttpProviderParams.host = web3Host;\n      }\n\n      const terminalHttpProvider = new TerminalHttpProvider(TerminalHttpProviderParams);\n      web3 = new Web3(terminalHttpProvider);\n    } else {\n      // Injected web3 provider\n      if (web3Provider){\n        web3 = new Web3(web3Provider);\n      // Infura\n      } else if (web3Host) {\n        web3 = new Web3(new Web3.providers.HttpProvider(web3Host));\n        if (connectorName !== 'Infura'){\n          this.props.setConnector('Infura',null);\n        }\n      }\n    }\n\n    const web3Callback = async () => {\n\n      window.web3Injected = this.state.web3;\n      // window.web3InfuraInjected = this.state.web3Infura;\n\n      if (typeof this.props.callbackAfterLogin === 'function'){\n        this.props.callbackAfterLogin();\n        this.props.setCallbackAfterLogin(null);\n      }\n\n      // After setting the web3 provider, check network\n      try {\n        await this.checkNetwork();\n        if (this.state.network.isCorrectNetwork){\n\n          if (!this.state.contractsInitialized){\n            await this.initializeContracts();\n          }\n\n          if (context.account){\n            // Login with biconomy\n            if (this.state.biconomy){\n              const biconomy = this.state.biconomy;\n              const biconomyInfo = globalConfigs.network.providers.biconomy;\n              if (biconomyInfo.enableLogin && !biconomy.isLogin && !biconomyLoginProcessing){\n                biconomyLoginProcessing = true;\n                biconomy.login(context.account, (error, response) => {\n                  // this.functionsUtil.customLog('biconomy login',error,response);\n                  // Failed to login with Biconomy\n                  if (error) {\n                    return this.setState({\n                      biconomy:false,\n                    },() => {\n                      this.initAccount(context.account);\n                    });\n                  }\n\n                  biconomyLoginProcessing = false;\n\n                  if (response.transactionHash) {\n                    this.initAccount(context.account);\n                  } else if(response.userContract) {\n                    this.initAccount(context.account);\n                  }\n                });\n                return false;\n              }\n            }\n\n            await this.initAccount(context.account);\n          } else {\n            await this.setState({\n              accountInizialized: true,\n              account: this.props.customAddress\n            });\n          }\n        }\n      // Initialize Infura Web3 and display error\n      } catch (error) {\n        this.openConnectionErrorModal(null,error.message);\n      }\n    }\n\n    // Save original web3 connector in case Mexa initialization fails\n    const originalWeb3 = web3;\n    const biconomyInfo = globalConfigs.network.providers.biconomy;\n    const walletProvider = this.functionsUtil.getWalletProvider();\n\n    if (connectorName !== 'Infura' && biconomyInfo && biconomyInfo.enabled && biconomyInfo.supportedNetworks.includes(globalConfigs.network.requiredNetwork) && (!walletProvider || !biconomyInfo.disabledWallets.includes(walletProvider.toLowerCase()))){\n\n      if (this.state.biconomy === null){\n        const biconomyWeb3Provider = web3Provider ? web3Provider : web3Host;\n\n        const biconomy = new Biconomy(biconomyWeb3Provider,biconomyInfo.params);\n\n        if (biconomy && typeof biconomy.onEvent === 'function'){\n          web3 = new Web3(biconomy);\n          biconomy.onEvent(biconomy.READY, () => {\n            if (this.componentUnmounted || this.state.biconomy === false || this.state.biconomy === biconomy){\n              return false;\n            }\n            \n            const permitClient = biconomy.permitClient;\n            const erc20ForwarderClient = biconomy.erc20ForwarderClient;\n\n            const newState = {\n              web3,\n              biconomy,\n              web3Infura,\n              permitClient,\n              erc20ForwarderClient\n            };\n            // console.log('biconomy',newState);\n\n            if (web3 !== this.state.web3){\n              this.setState(newState, web3Callback);\n            }\n          }).onEvent(biconomy.ERROR, (error, message) => {\n            // console.error('Biconomy error',error,message,this.state.biconomy);\n            web3 = originalWeb3;\n            // Handle error while initializing mexa\n            if (this.state.biconomy !== false){\n              this.setState({\n                web3,\n                web3Infura,\n                biconomy:false\n              }, web3Callback);\n            }\n          });\n        } else {\n          this.setState({\n            web3,\n            web3Infura,\n            biconomy:false\n          }, web3Callback);\n        }\n      }\n    } else {\n      if (web3 !== this.state.web3){\n        this.setState({\n          web3,\n          web3Infura,\n        }, web3Callback);\n      } else if (context.account || forceCallback){\n        web3Callback();\n      }\n    }\n\n    return web3;\n  }\n\n  initContract = async (name, address, abi, useInfuraProvider=false) => {\n    this.functionsUtil.customLog(`Init contract: ${name}`);\n    return await this.createContract(name, address, abi, useInfuraProvider);\n  }\n\n  createContract = async (name, address, abi, useInfuraProvider=false) => {\n    this.functionsUtil.customLog(`creating contract ${name} - addr: ${address}`);\n\n    const web3Provider = useInfuraProvider && this.state.web3Infura ? this.state.web3Infura : this.state.web3;\n\n    if (!web3Provider){\n      return null;\n    }\n\n    // Create contract on initialized web3 provider with given abi and address\n    try {\n      const contract = new web3Provider.eth.Contract(abi, address);\n      this.setState(state => ({\n        ...state,\n        contracts: [...state.contracts, {name, contract}]\n      }));\n      return {name, contract};\n    } catch (error) {\n      this.functionsUtil.customLogError(\"Could not create contract.\",name,address,error);\n    }\n\n    return null;\n  }\n\n  initSimpleID = () => {\n\n    if (this.state.simpleID){\n      return this.state.simpleID;\n    }\n\n    const simpleIDInfo = globalConfigs.network.providers.simpleID;\n    let simpleID = null;\n\n    if (simpleIDInfo && simpleIDInfo.enabled && simpleIDInfo.supportedNetworks.indexOf(globalConfigs.network.requiredNetwork) !== -1 ){\n      const simpleIDParams = simpleIDInfo.params;\n      simpleIDParams.network = simpleIDInfo.getNetwork(this.state.network.current.id,globalConfigs.network.availableNetworks);\n      simpleID = new SimpleID(simpleIDParams);\n    }\n\n    window.simpleID = simpleID;\n\n    this.setState({\n      simpleID\n    });\n\n    return simpleID;\n  }\n\n  initAccount = async (account=false) => {\n    \n    const customAddress = this.props.customAddress;\n    const walletProvider = this.functionsUtil.getWalletProvider('Infura');\n\n    if (customAddress){\n      // Set custom account\n      this.setState({\n        account:customAddress,\n        accountInizialized:true,\n      });\n\n      // After account is complete, get the balance\n      this.getAccountBalance();\n\n      return false;\n    }\n\n    try {\n      if (!account){\n        const wallets = await this.state.web3.eth.getAccounts();\n        if (wallets && wallets.length){\n          account = wallets[0];\n        }\n      }\n\n      if (!account || this.state.account === account){\n        this.setState({\n          accountInizialized: true\n        });\n        return false;\n      }\n\n      // Request account access if needed\n      if (account && walletProvider !== 'Infura'){\n\n        if (walletProvider === 'Infura'){\n          this.setState({\n            accountInizialized: true,\n            account:this.props.customAddress\n          });\n          return false;\n        }\n\n        // Send address info to SimpleID\n        const simpleID = this.initSimpleID();\n\n        if (simpleID){\n\n          const notifications = await simpleID.notifications();\n\n          if (notifications && notifications.length && window.$crisp){\n\n            let shownNotifications = [];\n            if (localStorage){\n              shownNotifications = localStorage.getItem('shownNotifications') && JSON.parse(localStorage.getItem('shownNotifications')) ? JSON.parse(localStorage.getItem('shownNotifications')) : [];\n            }\n\n            notifications.forEach((n,i) => {\n\n              const notificationId = n.name;\n\n              // Show notification if not shown already\n              if (shownNotifications.indexOf(notificationId) === -1){\n                window.$crisp.push([\"do\", \"message:show\", [\"text\", this.functionsUtil.normalizeSimpleIDNotification(n.content) ]]);\n\n                // Save notification id\n                shownNotifications.push(notificationId);\n              }\n            });\n\n            // Store shown notification\n            if (localStorage){\n              this.functionsUtil.setLocalStorage('shownNotifications',JSON.stringify(shownNotifications));\n            }\n          }\n        }\n\n        // Send Google Analytics connection event\n        this.functionsUtil.sendGoogleAnalyticsEvent({\n          eventCategory: 'Connect',\n          eventAction: 'connected',\n          eventLabel: walletProvider\n        });\n\n        /*\n        // Unsubscribes to all subscriptions\n        if (this.state.web3SocketProvider && typeof this.state.web3SocketProvider.clearSubscriptions === 'function'){\n          this.functionsUtil.customLog('Clear all web3SocketProvider subscriptions');\n          this.state.web3SocketProvider.clearSubscriptions();\n        }\n\n        const networkName = globalConfigs.network.availableNetworks[globalConfigs.network.requiredNetwork].toLowerCase();\n        const web3SocketProvider = new Web3(new Web3.providers.WebsocketProvider(`wss://${networkName}.infura.io/ws/v3/${INFURA_KEY}`));\n\n        // Subscribe to logs\n        const addressTopic = '0x00000000000000000000000'+account.toLowerCase().replace('x','');\n\n        // Subscribe for payment methods\n        const paymentProviders = Object.keys(globalConfigs.payments.providers).filter((providerName,i) => { const providerInfo = globalConfigs.payments.providers[providerName]; return providerInfo.enabled && providerInfo.web3Subscription && providerInfo.web3Subscription.enabled  })\n        if (paymentProviders && paymentProviders.length){\n          paymentProviders.forEach((providerName,i) => {\n            const providerInfo = globalConfigs.payments.providers[providerName];\n\n            this.functionsUtil.customLog(`Subscribe to ${providerName} logs`);\n\n            // Subscribe for deposit transactions\n            web3SocketProvider.eth.subscribe('logs', {\n                address: [account,providerInfo.web3Subscription.contractAddress],\n                topics: [null,[addressTopic]]\n            }, function(error, result){\n              \n            })\n            .on(\"data\", async (log) => {\n              this.functionsUtil.customLog(providerName,'logs',log);\n\n              if (log){\n                const txHash = log.transactionHash;\n                const subscribedTransactions = this.state.subscribedTransactions;\n                const walletAddressFound = log.topics.filter((addr,i) => { return addr.toLowerCase().includes(addressTopic); });\n\n                this.functionsUtil.customLog(providerName,txHash,walletAddressFound);\n\n                if (!subscribedTransactions[txHash] && walletAddressFound.length){\n                  const decodedLogs = web3SocketProvider.eth.abi.decodeLog(providerInfo.web3Subscription.decodeLogsData,log.data,log.topics);\n\n                  this.functionsUtil.customLog(providerName,txHash,decodedLogs);\n\n                  if (decodedLogs && decodedLogs._tokenAmount && decodedLogs._tokenAddress && decodedLogs._tokenAddress.toLowerCase() === this.props.tokenConfig.address.toLowerCase()){\n\n                    const receiptCallback = async (tx,decodedLogs) => {\n                      const tokenDecimals = await this.getTokenDecimals();\n                      const tokenAmount = this.functionsUtil.BNify(decodedLogs._tokenAmount);\n                      const tokenAmountFixed = this.functionsUtil.fixTokenDecimals(tokenAmount,tokenDecimals);\n                      const tokenAmountFormatted = parseFloat(tokenAmountFixed.toString()).toFixed(2);\n                      const isProviderTx = tx.from.toLowerCase() === account.toLowerCase() && tx.to.toLowerCase() === providerInfo.web3Subscription.contractAddress.toLowerCase();\n\n                      if (isProviderTx){\n\n                        // Mined\n                        if (tx.blockNumber && tx.status){\n                          // Toast message\n                          window.showToastMessage({\n                            variant:'success',\n                            message:'Deposit completed',\n                            secondaryMessage:`${providerName} sent you ${tokenAmountFormatted} ${this.props.selectedToken}`,\n                          });\n\n                          // Update User Balance\n                          this.getAccountBalance(tokenAmount);\n                        } else {\n                          // Toast message\n                          window.showToastMessage({\n                            variant:'processing',\n                            message:'Deposit pending',\n                            secondaryMessage:`${providerName} is sending ${tokenAmountFormatted} ${this.props.selectedToken}`,\n                          });\n                        }\n                      }\n                    }\n\n                    let checkTransactionReceiptTimeoutID = null;\n\n                    const checkTransactionReceipt = (txHash,decodedLogs) => {\n                      if (checkTransactionReceiptTimeoutID){\n                        window.clearTimeout(checkTransactionReceiptTimeoutID);\n                      }\n                      web3SocketProvider.eth.getTransactionReceipt(txHash,(err,txReceipt)=>{\n                        if (!err){\n                          if (txReceipt){\n                            receiptCallback(txReceipt,decodedLogs);\n                          } else{\n                            checkTransactionReceiptTimeoutID = window.setTimeout(() => { checkTransactionReceipt(txHash,decodedLogs) },3000);\n                          }\n                        }\n                      });\n                    }\n\n                    checkTransactionReceipt(txHash,decodedLogs);\n\n                    subscribedTransactions[txHash] = log;\n                    this.setState({subscribedTransactions});\n                  }\n                }\n              }\n            });\n          })\n        }\n\n        // Subscribe for deposit transactions\n        web3SocketProvider.eth.subscribe('logs', {\n            address: [account,this.props.tokenConfig.address],\n            topics: [null,null,[addressTopic]]\n        }, function(error, result){\n\n        })\n        .on(\"data\", async (log) => {\n          if (log){\n            const txHash = log.transactionHash;\n            const subscribedTransactions = this.state.subscribedTransactions;\n            const walletAddressFound = log.topics.filter((addr,i) => { return addr.toLowerCase().includes(addressTopic); });\n\n            if (!subscribedTransactions[txHash] && walletAddressFound.length){\n              const decodedLogs = web3SocketProvider.eth.abi.decodeLog([\n                {\n                  \"internalType\": \"uint256\",\n                  \"name\": \"_tokenAmount\",\n                  \"type\": \"uint256\"\n                },\n              ],log.data,log.topics);\n\n              if (decodedLogs && decodedLogs._tokenAmount){\n\n                const receiptCallback = async (tx,decodedLogs) => {\n                  const tokenDecimals = await this.getTokenDecimals();\n                  const tokenAmount = this.functionsUtil.BNify(decodedLogs._tokenAmount);\n                  const tokenAmountFixed = this.functionsUtil.fixTokenDecimals(tokenAmount,tokenDecimals);\n                  const tokenAmountFormatted = parseFloat(tokenAmountFixed.toString()).toFixed(2);\n                  const isDepositTokenTx = tx.to.toLowerCase() === this.props.tokenConfig.address.toLowerCase();\n\n                  if (isDepositTokenTx){\n\n                    // Mined\n                    if (tx.blockNumber && tx.status){\n                      // Toast message\n                      window.showToastMessage({\n                        message:'Deposit completed',\n                        secondaryMessage: `${tokenAmountFormatted} ${this.props.selectedToken} has been deposited`,\n                        variant: \"success\",\n                      });\n\n                      // Update User Balance\n                      this.getAccountBalance(tokenAmount);\n                    } else {\n                      // Toast message\n                      window.showToastMessage({\n                        message:'Deposit pending',\n                        secondaryMessage: `${tokenAmountFormatted} ${this.props.selectedToken} are on the way`,\n                        variant: \"processing\",\n                      });\n                    }\n                  }\n                }\n\n                let checkTransactionReceiptTimeoutID = null;\n\n                const checkTransactionReceipt = (txHash,decodedLogs) => {\n                  if (checkTransactionReceiptTimeoutID){\n                    window.clearTimeout(checkTransactionReceiptTimeoutID);\n                  }\n                  web3SocketProvider.eth.getTransactionReceipt(txHash,(err,txReceipt)=>{\n                    if (!err){\n                      if (txReceipt){\n                        receiptCallback(txReceipt,decodedLogs);\n                      } else{\n                        checkTransactionReceiptTimeoutID = window.setTimeout(() => { checkTransactionReceipt(txHash,decodedLogs) },3000);\n                      }\n                    }\n                  });\n                }\n\n                checkTransactionReceipt(txHash,decodedLogs);\n\n                subscribedTransactions[txHash] = log;\n                this.setState({subscribedTransactions});\n              }\n            }\n          }\n        })\n        .on(\"changed\", log => {\n          \n        });\n        */\n\n        // this.functionsUtil.customLog('initAccount',account);\n\n        // Set custom account\n        this.setState({\n          account,\n          // web3SocketProvider,\n          accountInizialized: true\n        });\n\n        // After account is complete, get the balance\n        this.getAccountBalance();\n\n        // TODO subscribe for account changes, no polling\n        // set a state flag which indicates if the subscribe handler has been\n        // called at least once\n      }\n    } catch (error) {\n\n      this.setState({\n        accountInizialized: true\n      });\n\n      // User denied account access...\n      this.functionsUtil.customLog(\"User cancelled connect request. Error:\", error);\n\n      // this.functionsUtil.customLog(error);\n\n      // Catch ledger error\n      if (error && error.message && error.message.includes('MULTIPLE_OPEN_CONNECTIONS_DISALLOWED')) {\n        return;\n      }\n\n      // Send Sentry connection error\n      const isError = error instanceof Error;\n      if (this.functionsUtil.checkUrlOrigin() && isError){\n        Sentry.captureException(error);\n      }\n\n      // Reject Connect\n      // this.rejectAccountConnect(error);\n    }\n  }\n\n  // TODO: Can this be moved/combined?\n  rejectAccountConnect = error => {\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    modals.data.userRejectedConnect = true;\n    this.setState({ modals });\n  }\n\n  getAccountBalance = async (increaseAmount) => {\n\n    increaseAmount = increaseAmount ? this.functionsUtil.BNify(increaseAmount) : null;\n\n    try {\n\n      let [accountBalance,accountBalanceToken,tokenDecimals] = await Promise.all([\n        this.state.web3.eth.getBalance(this.state.account), // Get ETH balance\n        this.getTokenBalance(this.state.account), // Get token balance\n        this.getTokenDecimals()\n      ]);\n\n      if (accountBalance) {\n\n        // Convert to wei if decimals found\n        if (accountBalance.toString().includes('.')){\n          accountBalance = this.state.web3.utils.toWei(accountBalance);\n        }\n\n        // Convert to Eth amount\n        accountBalance = this.state.web3.utils.fromWei(\n          accountBalance,\n          'ether'\n        );\n\n        accountBalance = this.functionsUtil.BNify(accountBalance).toString();\n\n        this.setState({\n          accountBalance\n        });\n\n        this.functionsUtil.customLog(\"account balance: \", accountBalance);\n      }\n\n      // this.functionsUtil.customLog('accountBalance',res,(accountBalanceToken ? accountBalanceToken.toString() : null),tokenDecimals,increaseAmount);\n\n      if (accountBalanceToken) {\n\n        accountBalanceToken = this.functionsUtil.BNify(accountBalanceToken);\n\n        // Increase balance amount if passed and balance didn't change\n        if (increaseAmount && this.state.accountBalanceToken && this.functionsUtil.normalizeTokenAmount(this.state.accountBalanceToken,tokenDecimals).toString() === accountBalanceToken.toString()){\n          accountBalanceToken = accountBalanceToken.plus(increaseAmount);\n        }\n        \n        accountBalanceToken = this.functionsUtil.fixTokenDecimals(accountBalanceToken,tokenDecimals).toString();\n\n        // this.functionsUtil.customLog('increaseAmount',(increaseAmount ? increaseAmount.toString() : '0'),(this.state.accountBalanceToken ? this.state.accountBalanceToken.toString() : '0'),(accountBalanceToken ? accountBalanceToken.toString() : 'ERROR'));\n        // this.functionsUtil.customLog(`account balance ${this.props.selectedToken}: `, accountBalanceToken);\n\n        this.setState({\n          accountBalanceToken,\n          [`accountBalance${this.props.selectedToken}`]:accountBalanceToken\n        });\n\n      } else {\n        this.functionsUtil.customLog('accountBalanceToken is not set:',accountBalanceToken);\n      }\n    } catch (error) {\n      this.functionsUtil.customLogError(\"Failed to get account balance.\", error);\n    }\n  }\n\n  initializeContracts = async () => {\n\n    const contracts = this.functionsUtil.getGlobalConfig(['contracts']);\n    await this.functionsUtil.asyncForEach(Object.keys(contracts),async (contractName) => {\n      const contractInfo = contracts[contractName];\n      if (contractInfo.address !== null && contractInfo.abi !== null){\n        this.functionsUtil.customLog('initializeContracts, init contract', contractName, contractInfo.address);\n        await this.initContract(contractName, contractInfo.address, contractInfo.abi);\n      }\n    });\n\n    const govTokens = this.functionsUtil.getGlobalConfig(['govTokens']);\n    await this.functionsUtil.asyncForEach(Object.keys(govTokens),async (token) => {\n      const govTokenConfig = govTokens[token];\n      if (!govTokenConfig.enabled){\n        return;\n      }\n      // Initialize govToken contracts\n      let foundGovTokenContract = this.state.contracts.find(c => c.name === token);\n      if (!foundGovTokenContract) {\n        this.functionsUtil.customLog('initializeContracts, init contract', token, govTokenConfig.address);\n        await this.initContract(token, govTokenConfig.address, govTokenConfig.abi);\n      }\n    });\n\n    if (this.props.availableStrategies){\n      // Initialize Tokens Contracts\n      await this.functionsUtil.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n        \n        const availableTokens = this.props.availableStrategies[strategy];\n\n        await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n          const tokenConfig = availableTokens[token];\n\n          let foundTokenContract = this.state.contracts.find(c => c.name === token);\n          if (!foundTokenContract) {\n            this.functionsUtil.customLog('initializeContracts, init contract',token, tokenConfig.address);\n            await this.initContract(token, tokenConfig.address, tokenConfig.abi);\n          }\n\n          // Initialize idleTokens contracts\n          let foundIdleTokenContract = this.state.contracts.find(c => c.name === tokenConfig.idle.token);\n          if (!foundIdleTokenContract) {\n            this.functionsUtil.customLog('initializeContracts, init contract',tokenConfig.idle.token, tokenConfig.idle.address);\n            await this.initContract(tokenConfig.idle.token, tokenConfig.idle.address, tokenConfig.idle.abi);\n          }\n\n          // Initialize protocols contracts\n          tokenConfig.protocols.forEach(async (p,i) => {\n            let foundProtocolContract = this.state.contracts.find(c => c.name === p.token);\n            if (!foundProtocolContract) {\n              this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n              await this.initContract(p.token, p.address, p.abi);\n            }\n          });\n\n          // Check migration contract\n          if (tokenConfig.migration){\n\n            if (tokenConfig.migration.oldContract){\n              const oldContract = tokenConfig.migration.oldContract;\n              this.functionsUtil.customLog('initializeContracts, init '+oldContract.name+' contract',oldContract);\n              await this.initContract(oldContract.name, oldContract.address, oldContract.abi);\n            }\n\n            // Initialize protocols contracts\n            if (tokenConfig.migration.oldProtocols){\n              tokenConfig.migration.oldProtocols.forEach(async (p,i) => {\n                let foundProtocolContract = this.state.contracts.find(c => c.name === p.token);\n                if (!foundProtocolContract) {\n                  this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n                  await this.initContract(p.token, p.address, p.abi);\n                }\n              });\n            }\n\n            if (tokenConfig.migration.migrationContract){\n              const migrationContract = tokenConfig.migration.migrationContract;\n              this.functionsUtil.customLog('initializeContracts, init '+migrationContract.name+' contract',migrationContract);\n              await this.initContract(migrationContract.name, migrationContract.address, migrationContract.abi);\n            }\n          }\n        })\n      });\n    }\n\n    return this.setState({\n      contractsInitialized:true\n    });\n  }\n\n  getContractByName = async (contractName) => {\n    let contract = this.state.contracts.find(c => c.name === contractName);\n\n    if (!contract && this.props.tokenConfig) {\n      const tokenConfig = this.props.tokenConfig;\n      contract = await this.initContract(contractName, tokenConfig.address, tokenConfig.abi);\n    }\n\n    return contract ? contract.contract : null;\n  }\n\n  getTokenDecimals = async () => {\n    let tokenDecimals = null;\n\n    if (!this.state.tokenDecimals){\n\n      tokenDecimals = await this.functionsUtil.getTokenDecimals(this.props.selectedToken);\n\n      this.setState({\n        tokenDecimals\n      });\n    } else {\n      tokenDecimals = await (new Promise( async (resolve, reject) => {\n        resolve(this.state.tokenDecimals);\n      }));\n    }\n\n    return tokenDecimals;\n  }\n\n  getTokenBalance = async (account) => {\n    const contract = await this.getContractByName(this.props.selectedToken);\n\n    if (!contract) {\n      this.functionsUtil.customLogError('Wrong contract name', this.props.selectedToken);\n      return null;\n    }\n\n    if (!contract.methods['balanceOf']){\n      this.customLogError('Wrong method name balanceOf');\n      return null;\n    }\n\n    return await contract.methods.balanceOf(account).call().catch(error => {\n      this.functionsUtil.customLog(`Failed to get ${this.props.selectedToken} balance`, error);\n    });\n  }\n\n  determineAccountLowBalance = () => {\n    // If provided a minimum from config then use it, else default to 1\n    const accountBalanceMinimum =\n      typeof this.props.config !== \"undefined\" &&\n      typeof this.props.config.accountBalanceMinimum !== \"undefined\"\n        ? this.props.config.accountBalanceMinimum\n        : 1;\n    // Determine if the account balance is low\n    const accountBalanceLow =\n      this.state.accountBalance < accountBalanceMinimum;\n\n    this.setState({\n      accountBalanceLow\n    });\n  }\n\n  connectAndValidateAccount = async (callbackAfterLogin) => {\n    // Check for account\n    if (!this.state.account) {\n      this.props.setCallbackAfterLogin(callbackAfterLogin);\n      // Show modal to connect account\n      this.openConnectionModal();\n    }\n  }\n\n  getRequiredNetwork = () => {\n\n    const networkId =\n      typeof this.props.config !== \"undefined\" &&\n      typeof this.props.config.requiredNetwork !== \"undefined\"\n        ? this.props.config.requiredNetwork\n        : globalConfigs.network.requiredNetwork;\n\n    let networkName = globalConfigs.network.availableNetworks[networkId] ? globalConfigs.network.availableNetworks[networkId] : 'unknown';\n\n    let requiredNetwork = {\n      name: networkName,\n      id: networkId\n    };\n\n    let network = { ...this.state.network };\n    network.required = requiredNetwork;\n\n    this.setState({ network });\n  }\n\n  getNetworkId = async () => {\n    try {\n      return this.state.web3.eth.net.getId((error, networkId) => {\n        let current = { ...this.state.network.current };\n        current.id = networkId;\n        let network = { ...this.state.network };\n        network.current = current;\n        this.setState({ network });\n      });\n    } catch (error) {\n      this.functionsUtil.customLog(\"Could not get network ID: \", error);\n    }\n  }\n\n  getNetworkName = async () => {\n    try {\n      return this.state.web3.eth.net.getNetworkType((error, networkName) => {\n        let current = { ...this.state.network.current };\n        current.name = networkName;\n        let network = { ...this.state.network };\n        network.current = current;\n        this.setState({ network });\n      });\n    } catch (error) {\n      this.functionsUtil.customLog(\"Could not get network Name: \", error);\n    }\n  }\n\n  checkNetwork = async () => {\n    this.getRequiredNetwork();\n\n    await Promise.all([\n      this.getNetworkId(),\n      this.getNetworkName()\n    ]);\n\n    let network = { ...this.state.network };\n    network.isCorrectNetwork = this.state.network.current.id === this.state.network.required.id;\n\n    // console.log('checkNetwork',this.state.network.current.id,this.state.network.required.id);\n\n    // To do, check window.web3.currentProvider.networkVersion to see if Metamask is in the requiredNetwork\n\n    this.setState({ network });\n  }\n\n  contractMethodSendWrapper = async (contractName, contractMethod, params = [], value = null, callback = null, callback_receipt = null, gasLimit = null, txData = null) => {\n    // Is it on the correct network?\n    if (!this.state.network.isCorrectNetwork) {\n      // wrong network modal\n      this.state.modals.methods.openWrongNetworkModal();\n      return false;\n    }\n\n    // Is a wallet connected and verified?\n    if (!this.state.account) {\n      this.openConnectionModal();\n      if (typeof callback === 'function') {\n        callback(null,'account_not_connected');\n      }\n      return false;\n    }\n\n    // Are there a minimum amount of funds?\n    if (this.state.accountBalanceLow) {\n      this.openLowFundsModal();\n      if (typeof callback === 'function') {\n        callback(null,'account_balance_low');\n      }\n      return false;\n    }\n\n    // Is the contract loaded?\n\n    // Create new tx and add to collection\n    // Maybe this needs to get moved out of the wrapper?\n    let transaction = this.createTransaction(txData);\n    transaction.method = contractMethod;\n\n    this.addTransaction(transaction);\n\n    // Add meta data to transaction\n    transaction.type = \"contract\";\n    transaction.status = \"started\";\n    transaction.params = params;\n\n    // Show toast for starting transaction\n    this.updateTransaction(transaction);\n\n    const { account, contracts } = this.state;\n    let contract = contracts.find(c => c.name === contractName);\n    if (!contract) {\n      if (typeof callback === 'function') {\n        callback(null,'contract_not_found');\n      }\n      return this.functionsUtil.customLog(`No contract with name ${contractName}`);\n    }\n\n    contract = contract.contract;\n\n    // Does the method exists?\n    // if (typeof contract.methods[contractMethod] === 'undefined'){\n    //   return false;\n    // }\n\n    let manualConfirmationTimeoutId = null;\n\n    try {\n\n      if (!value){\n        value = this.functionsUtil.BNify(0);\n      }\n\n      this.functionsUtil.customLog('contractMethodSendWrapper',contractName,contract._address,account,contractMethod,params,(value ? { from: account, value } : { from: account }));\n\n      // estimate gas price\n      let gas = await contract.methods[contractMethod](...params)\n        .estimateGas(value ? { from: account, value } : { from: account })\n        .catch(e => console.error(e));\n\n      if (gas) {\n\n        gas = this.functionsUtil.BNify(gas);\n        gas = gas.plus(gas.times(this.functionsUtil.BNify('0.2'))); // Increase 20% of enstimation\n\n        // Check if gas is under the gasLimit param\n        if (gasLimit && gas.lt(this.functionsUtil.BNify(gasLimit))){\n          gas = this.functionsUtil.BNify(gasLimit);\n        }\n\n        // Convert gasLimit toBN with web3 utils\n        gas = this.state.web3.utils.toBN(gas.integerValue(BigNumber.ROUND_FLOOR));\n      }\n\n      const confirmationCallback = (confirmationNumber, receipt) => {\n\n        // this.functionsUtil.customLog('confirmationCallback', confirmationNumber, receipt);\n\n        if (manualConfirmationTimeoutId){\n          window.clearTimeout(manualConfirmationTimeoutId);\n        }\n\n        // this.functionsUtil.customLog('txOnConfirmation', receipt);\n        // Update confirmation count on each subsequent confirmation that's received\n        transaction.confirmationCount += 1;\n\n        const call_callback = !globalConfigs.network.isForked && typeof callback === 'function' && transaction.confirmationCount===1;\n\n        // How many confirmations should be received before informing the user\n        const confidenceThreshold = this.props.config.requiredConfirmations || 1;\n\n        if (transaction.confirmationCount === 1) {\n          // Initial confirmation receipt\n          transaction.status = \"confirmed\";\n        } else if (transaction.confirmationCount < confidenceThreshold) {\n          // Not enough confirmations to match threshold\n        }\n\n        if (transaction.confirmationCount === confidenceThreshold) {\n          // Confirmations match threshold\n          // Check the status from result since we are confident in the result\n          if (receipt.status) {\n            transaction.status = \"success\";\n          } else if (!receipt.status) {\n            transaction.status = \"error\";\n          }\n        } else if (transaction.confirmationCount > confidenceThreshold) {\n          // Confidence threshold met\n        }\n\n\n        if (call_callback){\n          // Update transaction with receipt details\n          if (receipt){\n            transaction.txReceipt = receipt;\n          }\n          transaction.recentEvent = \"confirmation\";\n          this.updateTransaction(transaction);\n          \n          callback(transaction);\n\n          this.functionsUtil.customLog('Confirmed', confirmationNumber, receipt, transaction);\n        }\n      };\n\n      const manualConfirmation = (transactionHash,timeout) => {\n        if (!transactionHash){\n          return false;\n        }\n        this.state.web3.eth.getTransactionReceipt(transactionHash,(err,txReceipt) => {\n          if (txReceipt && txReceipt.status){\n            this.functionsUtil.customLog('Tx manualConfirmation', txReceipt);\n            confirmationCallback(1,txReceipt);\n          } else {\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(transactionHash,timeout) , timeout);\n          }\n        });\n      };\n\n      const receiptCallback = receipt => {\n\n        // this.functionsUtil.customLog('txOnReceipt', receipt);\n\n        if (manualConfirmationTimeoutId){\n          window.clearTimeout(manualConfirmationTimeoutId);\n        }\n\n        // Received receipt, met total number of confirmations\n        if (receipt){\n          transaction.txReceipt = receipt;\n        }\n        transaction.recentEvent = \"receipt\";\n\n        // If the network is forked use the receipt for confirmation\n        if (globalConfigs.network.isForked){\n          transaction.status = \"success\";\n          if (typeof callback === 'function') {\n            callback(transaction);\n          }\n        } else {\n          this.updateTransaction(transaction);\n\n          // Transaction mined, wait for manual confirmation\n          if (receipt.status){\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(receipt.transactionHash,4000), 2000);\n          }\n        }\n      };\n\n      // const networkId = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n      // const common = { customChain:{ chainId: 1337, networkId: 1337 } };\n\n      return contract.methods[contractMethod](...params)\n        .send(value ? { from: account, value, gas/*, common*/ } : { from: account, gas/*, common*/ })\n        .on(\"transactionHash\", hash => {\n          this.functionsUtil.customLog('txOnTransactionHash', hash);\n\n          if (!hash){\n            this.functionsUtil.customLog('Skip transactionHash due to hash empty', hash);\n            return false;\n          }\n\n          transaction.transactionHash = hash;\n          transaction.status = \"pending\";\n          transaction.recentEvent = \"transactionHash\";\n          this.updateTransaction(transaction);\n\n          if (callback_receipt){\n            callback_receipt(transaction);\n          }\n\n          // Wait for manual confirmation only for mobile\n          if (this.props.isMobile){\n            if (manualConfirmationTimeoutId){\n              window.clearTimeout(manualConfirmationTimeoutId);\n            }\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(hash,60000), 20000);\n          }\n        })\n        .on(\"receipt\", receiptCallback)\n        .on(\"confirmation\", confirmationCallback)\n        .on(\"error\", error => {\n\n          console.log('Tx error',error);\n          \n          const isDeniedTx = error && error.message && typeof error.message.includes === 'function' ? error.message.includes('User denied transaction signature') : false;\n          \n          // Set error on transaction\n          transaction.status = \"error\";\n          transaction.recentEvent = \"error\";\n          this.updateTransaction(transaction);\n\n\n          // Show ToastProvider\n          if (!isDeniedTx){\n            window.toastProvider.addMessage(\"Something went wrong\", {\n              icon: 'Block',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"failure\",\n              colorTheme: 'light',\n              secondaryMessage: \"Please retry\",\n            });\n\n            const isError = error instanceof Error;\n\n            if (typeof error.message !== 'undefined'){\n              this.openTransactionErrorModal(null,error.message);\n            } else if (this.functionsUtil.checkUrlOrigin() && isError){\n              Sentry.captureException(error);\n            }\n          }\n\n          if (typeof callback === 'function') {\n            callback(transaction,error);\n          }\n        });\n    } catch (error) {\n\n      console.log('Tx catch error',error);\n\n      transaction.status = \"error\";\n      this.updateTransaction(transaction);\n\n      // TODO: should this be a custom error? What is the error here?\n      // TODO: determine how to handle error messages globally\n      window.toastProvider.addMessage(\"Something went really wrong, we are sorry\", {\n        icon: 'Block',\n        actionHref: \"\",\n        actionText: \"\",\n        variant: \"failure\",\n        colorTheme: 'light',\n        secondaryMessage: \"Try refreshing the page :(\",\n      });\n\n      const isDeniedTx = error && error.message ? error.message.includes('User denied transaction signature') : false;\n\n      const isError = error instanceof Error;\n      if ( this.functionsUtil.checkUrlOrigin() && isError && !isDeniedTx){\n        Sentry.captureException(error);\n      }\n\n      if (typeof callback === 'function') {\n        // this.functionsUtil.customLog('Tx Failed',error,transaction,typeof callback);\n        callback(transaction,error);\n      }\n\n      return false;\n    }\n  }\n\n  // Create tx\n  createTransaction = (txData=null) => {\n    let transaction = {\n      ...txData\n    };\n    transaction.txReceipt = {};\n    transaction.created = Date.now();\n    transaction.confirmationCount = 0;\n    transaction.status = \"initialized\";\n    transaction.lastUpdated = Date.now();\n    transaction.token = this.props.selectedToken;\n    transaction.strategy = this.props.selectedStrategy;\n    transaction.networkId = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    return transaction;\n  }\n\n  addTransaction = transaction => {\n    const transactions = { ...this.state.transactions };\n    transactions[`tx${transaction.created}`] = transaction;\n    this.setState({ transactions });\n  }\n\n  // Add/update transaction in state\n  updateTransaction = updatedTransaction => {\n    const transactions = { ...this.state.transactions };\n    const transaction = { ...updatedTransaction };\n    transaction.lastUpdated = Date.now();\n    transactions[`tx${updatedTransaction.created}`] = transaction;\n    this.setState({ transactions });\n\n    // Save transactions in localStorage only if pending or succeeded\n    // console.log('updateTransaction',transaction);\n    if (transaction.transactionHash){\n      // Clear cached data\n      this.functionsUtil.clearCachedData();\n\n      // Store transaction\n      this.functionsUtil.addStoredTransaction(`tx${transaction.created}`,transaction);\n    }\n\n    return transaction;\n  }\n\n  // CONNECTION MODAL METHODS\n  closeConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionModalIsOpen = false;\n    // this.functionsUtil.customLog(\"this.state\", this.state);\n    this.setState({ modals });\n  }\n\n  openConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionModalIsOpen = true;\n    this.setState({ modals: modals });\n  }\n\n  closeConnectionPendingModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    this.setState({ modals });\n  }\n\n  openConnectionPendingModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = true;\n    modals.data.transactionConnectionModalIsOpen = false;\n    modals.data.connectionModalIsOpen = false;\n\n    this.setState({ modals });\n  }\n\n  closeTransactionErrorModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.transactionError = false;\n    this.setState({ modals });\n  }\n\n  openTransactionErrorModal = (e,error) => {\n    if (typeof e !== \"undefined\" && e) {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.transactionError = error;\n\n    this.setState({ modals });\n  }\n\n  closeConnectionErrorModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionError = false;\n    this.setState({ modals });\n  }\n\n  openConnectionErrorModal = (e,error) => {\n    if (typeof e !== \"undefined\" && e) {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n\n    // Handle generic error\n    if (error==='[object Object]'){\n      error = 'Unable to access to the wallet.'\n    }\n\n    // this.functionsUtil.customLog('openConnectionErrorModal',typeof error,typeof error === 'object' ? JSON.stringify(error) : error);\n\n    modals.data.connectionError = error;\n\n    this.setState({ modals });\n  }\n\n  closeUserRejectedConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedConnect = false;\n    this.setState({ modals });\n  }\n\n  openUserRejectedConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedConnect = true;\n    this.setState({ modals });\n  }\n\n  closeNoWeb3BrowserModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWeb3BrowserModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openNoWeb3BrowserModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWeb3BrowserModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeNoWalletModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openNoWalletModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeWrongNetworkModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.wrongNetworkModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openWrongNetworkModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.wrongNetworkModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeLowFundsModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.lowFundsModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openLowFundsModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.lowFundsModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  state = {\n    web3: null,\n    context:null,\n    account: null,\n    contracts: [],\n    biconomy: null,\n    simpleID: null,\n    web3Infura:null,\n    transactions: {},\n    CrispClient: null,\n    permitClient:null,\n    tokenDecimals:null,\n    accountBalance: null,\n    web3Subscription: null,\n    accountValidated: null,\n    accountBalanceDAI: null,\n    erc20ForwarderClient:null,\n    initWeb3: this.initWeb3,\n    accountBalanceLow: null,\n    accountInizialized:false,\n    subscribedTransactions:{},\n    contractsInitialized:false,\n    initAccount: this.initAccount,\n    accountValidationPending: null,\n    initSimpleID: this.initSimpleID,\n    initContract: this.initContract,\n    checkPreflight: this.checkPreflight,\n    validateAccount: this.validateAccount,\n    rejectValidation: this.rejectValidation,\n    getTokenDecimals: this.getTokenDecimals,\n    getAccountBalance: this.getAccountBalance,\n    initializeContracts: this.initializeContracts,\n    rejectAccountConnect: this.rejectAccountConnect,\n    contractMethodSendWrapper: this.contractMethodSendWrapper,\n    connectAndValidateAccount: this.connectAndValidateAccount,\n    enableUnderlyingWithdraw: this.props.enableUnderlyingWithdraw,\n    network: {\n      current: {},\n      required: {},\n      isCorrectNetwork: null,\n      checkNetwork: this.checkNetwork\n    },\n    modals: {\n      data: {\n        connectionError: null,\n        lowFundsModalIsOpen: null,\n        userRejectedConnect: null,\n        connectionModalIsOpen: null,\n        userRejectedValidation: null,\n        wrongNetworkModalIsOpen: null,\n        accountConnectionPending: null,\n        accountValidationPending: null,\n        transactionConnectionModalIsOpen: null,\n        noWalletModalIsOpen: this.noWalletModalIsOpen,\n        noWeb3BrowserModalIsOpen: this.noWeb3BrowserModalIsOpen,\n      },\n      methods: {\n        openLowFundsModal: this.openLowFundsModal,\n        openNoWalletModal: this.openNoWalletModal,\n        closeNoWalletModal: this.closeNoWalletModal,\n        closeLowFundsModal: this.closeLowFundsModal,\n        openConnectionModal: this.openConnectionModal,\n        closeConnectionModal: this.closeConnectionModal,\n        openWrongNetworkModal: this.openWrongNetworkModal,\n        closeWrongNetworkModal: this.closeWrongNetworkModal,\n        openNoWeb3BrowserModal: this.openNoWeb3BrowserModal,\n        closeNoWeb3BrowserModal: this.closeNoWeb3BrowserModal,\n        openConnectionErrorModal: this.openConnectionErrorModal,\n        closeConnectionErrorModal: this.closeConnectionErrorModal,\n        openTransactionErrorModal: this.openTransactionErrorModal,\n        closeTransactionErrorModal: this.closeTransactionErrorModal,\n        openConnectionPendingModal: this.openConnectionPendingModal,\n        closeConnectionPendingModal: this.closeConnectionPendingModal,\n        openUserRejectedValidationModal: this.openUserRejectedValidationModal,\n        openUserRejectedConnectionModal: this.openUserRejectedConnectionModal,\n        closeUserRejectedValidationModal: this.closeUserRejectedValidationModal,\n        closeUserRejectedConnectionModal: this.closeUserRejectedConnectionModal,\n      }\n    },\n    transaction: {\n      data: {\n        transactions: null\n      },\n      meta: {},\n      methods: {}\n    }\n  }\n\n  render() {\n    const connectionErrorModalOpened = typeof this.state.modals.data.connectionError === 'string' && this.state.modals.data.connectionError.length>0;\n    const transactionErrorModalOpened = typeof this.state.modals.data.transactionError === 'string' && this.state.modals.data.transactionError.length>0;\n    return (\n      <div>\n        <RimbleTransactionContext.Provider\n          {...this.props}\n          value={this.state}\n        />\n        <ConnectionModalUtil\n          {...this.props}\n          modals={this.state.modals}\n          network={this.state.network}\n          account={this.state.account}\n          isMobile={this.props.isMobile}\n          initAccount={this.state.initAccount}\n          setConnector={this.props.setConnector}\n          validateAccount={this.state.validateAccount}\n          accountValidated={this.state.accountValidated}\n          accountConnectionPending={this.state.accountConnectionPending}\n          accountValidationPending={this.state.accountValidationPending}\n        />\n        <TransactionErrorModal\n          modals={this.state.modals}\n          account={this.state.account}\n          context={this.props.context}\n          isOpen={transactionErrorModalOpened}\n        />\n        <ConnectionErrorModal\n          modals={this.state.modals}\n          account={this.state.account}\n          context={this.props.context}\n          isOpen={connectionErrorModalOpened}\n          setConnector={this.props.setConnector}\n        />\n        <NetworkUtil\n          web3={this.state.web3}\n          theme={this.props.theme}\n          network={this.state.network}\n        />\n      </div>\n    );\n  }\n}\n\nexport default RimbleTransaction;\n","import React from \"react\";\nimport ExtLink from '../../ExtLink/ExtLink';\nimport FunctionsUtil from '../FunctionsUtil';\nimport { Box, Flex, Image, Text, Link, Icon } from \"rimble-ui\";\n\nimport {\n  Link as RouterLink\n} from \"react-router-dom\";\n\nclass Header extends React.Component {\n  state = {\n\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidMount() {\n\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n\n    this.loadUtils();\n\n    if (this.props.network && !this.props.network.isCorrectNetwork){\n      return false;\n    }\n  }\n\n  render() {\n\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n\n    return (\n      <Box\n        style={{\n          left: '0',\n          right: '0',\n          zIndex: 99,\n          position: 'absolute',\n        }}\n      >\n        <Flex\n          p={2}\n          alignItems={'center'}\n          justifyContent={'center'}\n          backgroundColor={'dark-blue'}\n          flexDirection={['column','row']}\n        >\n          <Text\n            color={'white'}\n            textAlign={'center'}\n          >\n            IDLE Governance Token is now live!\n          </Text>\n          <ExtLink\n            pr={2}\n            py={1}\n            mt={[1,0]}\n            ml={[0,2]}\n            pl={'12px'}\n            color={'white'}\n            style={{\n              display:'flex',\n              borderRadius:'8px',\n              flexDirection:'row',\n              alignItems:'flex-end'\n            }}\n            backgroundColor={'#0037ff'}\n            href={'https://idlefinance.medium.com/idle-governance-is-live-9b55e8f407d7'}\n          >\n            Read More\n            <Icon\n              ml={1}\n              size={'1.3em'}\n              color={'white'}\n              name={'KeyboardArrowRight'}\n            >\n            </Icon>\n          </ExtLink>\n        </Flex>\n        <Flex\n          pt={[3,4]}\n          mx={'auto'}\n          bg={\"transparent\"}\n          width={['98%','100%']}\n          maxWidth={['100%','100em']}\n          alignItems={['center','flex-start']}\n        >\n          <Flex\n            ml={[3, 5]}\n            width={[0.5, 3/12]}\n          >\n            <RouterLink\n              to=\"/\"\n            >\n              <Image\n                position={'relative'}\n                src={'images/logo.svg'}\n                height={['35px','48px']}\n              />\n            </RouterLink>\n          </Flex>\n            <Flex\n              width={[0.5,8/12]}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={\"flex-end\"}\n            >\n              {\n                governanceEnabled && \n                  <Link\n                    mr={4}\n                    fontSize={3}\n                    color={'white'}\n                    hoverColor={'white'}\n                    fontFamily={'sansSerif'}\n                    textAlign={['center','left']}\n                    onClick={ (e) => window.location.hash='#/governance' }\n                  >\n                    Governance\n                  </Link>\n              }\n              {\n                !this.props.isMobile &&\n                  <>\n                    <Link\n                      mr={4}\n                      fontSize={3}\n                      color={'white'}\n                      hoverColor={'white'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                      onClick={(e) => {this.functionsUtil.scrollTo(document.getElementById('contacts').offsetTop,300)}}\n                    >\n                      Contact Us\n                    </Link>\n                    <Link\n                      fontSize={3}\n                      color={'white'}\n                      hoverColor={'white'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                      onClick={(e) => {this.functionsUtil.scrollTo(document.getElementById('faq').offsetTop,300)}}\n                    >\n                      FAQs\n                    </Link>\n                  </>\n              }\n            </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default Header;\n","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nexport default function ScrollToTop() {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return null;\n}","import Footer from '../Footer/Footer';\nimport React, { Component } from 'react';\nimport styles from './PageNotFound.module.scss';\nimport { Box, Flex, Heading, Button } from 'rimble-ui'\nimport Header_styles from '../utilities/components/Header.module.scss';\nimport {\n  Link as RouterLink,\n} from \"react-router-dom\";\n\nclass PageNotFound extends Component {\n  state = {};\n\n  render() {\n    return (\n      <Box>\n        <Box className={styles.headerContainer} px={[3,6]} pt={['2em', '3em']}>\n          <Box className={styles.headerBgFiller}></Box>\n          <Box position={'relative'} zIndex={10}>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"60em\"]} mx={'auto'} textAlign={'center'} pt={['8vh', '8vh']}>\n              <Heading.h1 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.3em'} fontSize={['2.5em',7]} textAlign={'center'} color={'white'}>\n                This page doesn't exist!\n              </Heading.h1>\n              <Heading.h3 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.6em'} fontWeight={2} fontSize={['1.5em',4]} textAlign={'center'} color={'white'}>\n                Sorry, the page you are looking for cannot be found.\n              </Heading.h3>\n              <RouterLink to=\"/\" style={{textDecoration:'none'}}>\n                <Button\n                  className={Header_styles.gradientButton}\n                  borderRadius={4}\n                  size={this.props.isMobile ? 'medium' : 'medium'}\n                  mainColor={'blue'}\n                  contrastColor={'white'}\n                  fontWeight={3}\n                  fontSize={[2,2]}\n                  mx={'auto'}\n                  px={[4,5]}\n                  mt={2}\n                >\n                  GO TO HOMEPAGE\n                </Button>\n              </RouterLink>\n            </Flex>\n          </Box>\n        </Box>\n        <Footer />\n      </Box>\n    );\n  }\n}\n\nexport default PageNotFound;\n","import React from \"react\";\nimport { Box, Flex, Text } from \"rimble-ui\";\n\nclass NetworkOverview extends React.Component {\n  getNetworkCircleColor = () => {\n    let circleColor = \"#333\";\n    if (this.props.network) {\n      switch (this.props.network.id) {\n        case 1:\n          circleColor = \"#56b3ae\";\n          break;\n        case 2:\n          circleColor = \"#000\";\n          break;\n        case 3:\n          circleColor = \"#ed5a8d\";\n          break;\n        case 4:\n          circleColor = \"#efc35c\";\n          break;\n        case 42:\n          circleColor = \"#6a5ff6\";\n          break;\n        default:\n          circleColor = \"#ccc\";\n      }\n    }\n\n    return circleColor;\n  };\n\n  render() {\n    const networkCircle = {\n      borderRadius: \"50%\",\n      backgroundColor: this.getNetworkCircleColor(),\n      height: \"1em\",\n      width: \"1em\"\n    };\n\n    return (\n      <Flex alignItems={\"center\"}>\n        <Box style={networkCircle} mr={2} />\n        <Text style={{ textTransform: \"capitalize\" }}>\n          {this.props.network.name}\n        </Text>\n      </Flex>\n    );\n  }\n}\n\nexport default NetworkOverview;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Icon,\n  Flex,\n  ToastMessage,\n  Box,\n  Button,\n  Link\n} from \"rimble-ui\";\nimport NetworkOverview from \"../utilities/components/NetworkOverview\";\n\nconst DebuggerButtons = props => (\n  <Box mt={4} borderTop={1} borderColor=\"#E8E8E8\" pt={3}>\n    <Heading.h4 textAlign={\"center\"}>Show Modal</Heading.h4>\n    <Button\n      onClick={props.modals.methods.openWrongNetworkModal}\n      size=\"small\"\n      mr={2}\n      mb={2}\n    >\n      Blocking Wrong Network\n    </Button>\n\n    <Button\n      onClick={props.modals.methods.openConnectionModal}\n      size=\"small\"\n      mr={2}\n      mb={2}\n    >\n      Connection\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openConnectionPendingModal}\n      mr={2}\n      mb={2}\n    >\n      Connection Pending\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openUserRejectedConnectionModal}\n      mr={2}\n      mb={2}\n    >\n      Connection Rejected\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={event => {\n        props.modals.methods.openLowFundsModal(event);\n      }}\n      mr={2}\n      mb={2}\n    >\n      Low Funds\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openNoWeb3BrowserModal}\n      mr={2}\n      mb={2}\n    >\n      Not Web3 Browser\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openNoWalletModal}\n      mr={2}\n      mb={2}\n    >\n      No Wallet\n    </Button>\n  </Box>\n);\n\nclass Web3Debugger extends React.Component {\n  render() {\n    return (\n      <Card width={\"600px\"} mx={\"auto\"} px={4}>\n        <Heading.h3 textAlign={\"center\"}>Get Connected</Heading.h3>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            <Icon name=\"Check\" color={\"green\"} mr={2} />\n            <Text>Modern & Web3 Capable Browser</Text>\n          </Flex>\n        </Box>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.web3 ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Browser-connected Wallet</Text>\n          </Flex>\n\n          {!this.props.web3 ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">You do not have a wallet.</Text>\n              </Flex>\n\n              <Link\n                href=\"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                <Button.Outline size=\"small\">\n                  Get MetaMask Extension\n                </Button.Outline>\n              </Link>\n            </Flex>\n          ) : null}\n        </Box>\n\n        {this.props.web3 ? (\n          <Flex\n            py={3}\n            my={3}\n            borderTop={1}\n            borderBottom={1}\n            borderColor={\"#E8E8E8\"}\n            textAlign={\"center\"}\n            justifyContent={\"space-around\"}\n            alignItems={\"center\"}\n          >\n            <Button\n              size=\"small\"\n              onClick={this.props.connectAndValidateAccount}\n              disabled={!this.props.web3}\n            >\n              Connect and verify\n            </Button>\n            <Text>- or -</Text>\n            <Button size=\"small\" disabled>\n              Initiate On-Chain Action\n            </Button>\n          </Flex>\n        ) : null}\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.network.isCorrectNetwork ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Correct Network</Text>\n          </Flex>\n\n          {this.props.web3 && !this.props.network.isCorrectNetwork ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Box>\n                  <Flex alignItems={\"center\"}>\n                    <Text\n                      mr={2}\n                      color=\"#999\"\n                      style={{ textTransform: \"capitalize\" }}\n                    >\n                      Current network:\n                    </Text>\n                    <NetworkOverview network={this.props.network.current} />\n                  </Flex>\n                  <Flex alignItems={\"center\"}>\n                    <Text\n                      mr={2}\n                      color=\"#999\"\n                      style={{ textTransform: \"capitalize\" }}\n                    >\n                      Required network:\n                    </Text>\n                    <NetworkOverview network={this.props.network.required} />\n                  </Flex>\n                </Box>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.checkNetwork}>\n                Check Network\n              </Button.Outline>\n            </Flex>\n          ) : null}\n          {this.props.web3 && this.props.isCorrectNetwork ? (\n            <Flex ml={4} alignItems={\"center\"}>\n              <NetworkOverview network={this.props.network.current} />\n            </Flex>\n          ) : null}\n        </Box>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.account && this.props.accountValidated ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Wallet connected and verified</Text>\n          </Flex>\n\n          {!this.props.account &&\n          this.props.web3 &&\n          !this.props.userRejectedConnect ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">Not connected to this dApp.</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.initAccount}>\n                Connect\n              </Button.Outline>\n            </Flex>\n          ) : null}\n          {this.props.account && this.props.web3 ? (\n            <Flex ml={4} alignItems={\"center\"}>\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n              <Box>\n                <Text color=\"#999\">Connected wallet {this.props.account}</Text>\n                <Text color={this.props.accountBalanceLow ? \"red\" : \"#999\"}>\n                  Account balance {this.props.accountBalance}\n                </Text>\n              </Box>\n            </Flex>\n          ) : null}\n\n          {this.props.userRejectedConnect ? (\n            <Flex ml={4} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Error\" mr={2} color=\"red\" />\n                <Text color=\"red\">User rejected Connect request</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.initAccount}>\n                Connect\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {(this.props.accountValidated === null ||\n            this.props.accountValidated === false) &&\n          this.props.web3 ? (\n            <Flex\n              ml={4}\n              my={1}\n              alignItems={\"center\"}\n              justifyContent={\"space-between\"}\n            >\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">Account not verified</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.validateAccount}>\n                Validate\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {this.props.accountValidated === false ? (\n            <Flex\n              ml={4}\n              my={1}\n              alignItems={\"center\"}\n              justifyContent={\"space-between\"}\n            >\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Error\" mr={2} color=\"red\" />\n                <Text color=\"red\">Account not verified</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.validateAccount}>\n                Validate\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {this.props.userRejectedValidation === false ? (\n            <Flex ml={4}>\n              <Icon name=\"Error\" mr={2} color=\"red\" />\n              <Text color=\"red\">Account not verified</Text>\n            </Flex>\n          ) : null}\n        </Box>\n\n        <DebuggerButtons {...this.props} />\n\n        <ToastMessage.Provider ref={node => (window.toastProvider = node)} />\n      </Card>\n    );\n  }\n}\n\nexport default Web3Debugger;\n","const address = '0xf5dce57282a584d2746faf1593d3121fcac444dc'; // mainnet\nconst abi = [\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"name\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x06fdde03\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"approve\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x095ea7b3\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"reserveFactorMantissa\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x173b9904\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"borrowBalanceCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x17bfdfbc\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalSupply\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x18160ddd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"exchangeRateStored\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x182df0f5\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"src\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"dst\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transferFrom\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x23b872dd\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"pendingAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x26782247\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"decimals\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x313ce567\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOfUnderlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x3af9e669\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"getCash\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x3b1d21a2\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newComptroller\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setComptroller\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x4576b5db\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalBorrows\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x47bd3718\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"comptroller\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x5fe3b567\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"reduceAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"_reduceReserves\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x601a0bf1\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"initialExchangeRateMantissa\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x675d972c\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"accrualBlockNumber\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x6c540baf\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"underlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x6f307dc3\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOf\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x70a08231\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"totalBorrowsCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x73acee98\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalReserves\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x8f840ddd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"symbol\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x95d89b41\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"borrowBalanceStored\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x95dd9193\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"accrueInterest\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa6afed95\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"dst\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transfer\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa9059cbb\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"borrowIndex\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xaa5af0fd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"supplyRatePerBlock\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xae9d70b0\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"liquidator\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"seizeTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"seize\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xb2a02ff1\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newPendingAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setPendingAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xb71d1a0c\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"exchangeRateCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xbd6d894d\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"getAccountSnapshot\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xc37f68e2\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"allowance\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xdd62ed3e\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"_acceptAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xe9c714f2\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newInterestRateModel\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setInterestRateModel\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf2b3abbd\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"interestRateModel\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf3fdb15a\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"admin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf851a440\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"borrowRatePerBlock\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf8f9da28\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"_setReserveFactor\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xfca7820b\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"isCToken\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xfe9c44ae\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"name\": \"underlying_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"comptroller_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"interestRateModel_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"initialExchangeRateMantissa_\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"name_\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"symbol_\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"decimals_\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"constructor\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"constructor\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"interestAccumulated\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrowIndex\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"AccrueInterest\",\n    \"signature\": \"0x875352fb3fadeb8c0be7cbbe8ff761b308fa7033470cd0287f02f3436fd76cb9\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"minter\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"mintAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"mintTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Mint\",\n    \"signature\": \"0x4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"redeemer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"redeemAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"redeemTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Redeem\",\n    \"signature\": \"0xe5b754fb1abb7f01b499791d0b820ae3b6af3424ac1c59768edb53f4ec31a929\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrowAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"accountBorrows\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Borrow\",\n    \"signature\": \"0x13ed6866d4e1ee6da46f845c46d7e54120883d75c5ea9a2dacc1c4ca8984ab80\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"payer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"accountBorrows\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"RepayBorrow\",\n    \"signature\": \"0x1a2a22cb034d26d1854bdc6666a5b91fe25efbbb5dcad3b0355478d6f5c362a1\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"liquidator\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"cTokenCollateral\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"seizeTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"LiquidateBorrow\",\n    \"signature\": \"0x298637f684da70674f26509b10f07ec2fbc77a335ab1e7d6215a4b2484d8bb52\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldPendingAdmin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newPendingAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewPendingAdmin\",\n    \"signature\": \"0xca4f2f25d0898edd99413412fb94012f9e54ec8142f9b093e7720646a95b16a9\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldAdmin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewAdmin\",\n    \"signature\": \"0xf9ffabca9c8276e99321725bcb43fb076a6c66a54b7f21c4e8146d8519b417dc\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldComptroller\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newComptroller\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewComptroller\",\n    \"signature\": \"0x7ac369dbd14fa5ea3f473ed67cc9d598964a77501540ba6751eb0b3decf5870d\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldInterestRateModel\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newInterestRateModel\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewMarketInterestRateModel\",\n    \"signature\": \"0xedffc32e068c7c95dfd4bdfd5c4d939a084d6b11c4199eac8436ed234d72f926\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"NewReserveFactor\",\n    \"signature\": \"0xaaa68312e2ea9d50e16af5068410ab56e1a1fd06037b1a35664812c30f821460\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"admin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"reduceAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newTotalReserves\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"ReservesReduced\",\n    \"signature\": \"0x3bad0c59cf2f06e7314077049f48a93578cd16f5ef92329f1dab1420a99c177e\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"error\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"info\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"detail\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Failure\",\n    \"signature\": \"0x45b96fe442630264581b197e84bbada861235052c5a1aadfff9ea4e40a969aa0\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"name\": \"from\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"name\": \"to\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Transfer\",\n    \"signature\": \"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Approval\",\n    \"signature\": \"0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\",\n    \"type\": \"event\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"mintAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"mint\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa0712d68\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"redeemTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"redeem\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xdb006a75\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"redeemAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"redeemUnderlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x852a12e3\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrowAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"borrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xc5ebeaec\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"repayBorrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x0e752702\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"repayBorrowBehalf\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x2608f818\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"cTokenCollateral\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"liquidateBorrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf5e3c462\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }\n];\nexport default { address, abi };\n","const address = '0x5592EC0cfb4dbc12D3aB100b257153436a1f0FEa'; // rinkeby\nconst abi = [{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"stop\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"owner_\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"name_\",\"type\":\"bytes32\"}],\"name\":\"setName\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"stopped\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"authority_\",\"type\":\"address\"}],\"name\":\"setAuthority\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"push\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"move\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"start\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"authority\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"pull\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"symbol_\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"authority\",\"type\":\"address\"}],\"name\":\"LogSetAuthority\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"LogSetOwner\",\"type\":\"event\"},{\"anonymous\":true,\"inputs\":[{\"indexed\":true,\"name\":\"sig\",\"type\":\"bytes4\"},{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"foo\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"bar\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"fax\",\"type\":\"bytes\"}],\"name\":\"LogNote\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"dst\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}];\nexport default { address, abi };\n","import DAI from '../abis/tokens/DAI.json';\nimport CHAI from '../abis/chai/CHAI.json';\nimport cToken from '../abis/compound/cDAI';\nimport WETH from '../abis/tokens/WETH.json';\nimport USDC from '../abis/tokens/USDC.json';\nimport ERC20 from '../abis/tokens/ERC20.js';\nimport aToken from '../abis/aave/AToken.json';\nimport yToken from '../abis/dydx/yToken.json';\nimport iToken from '../abis/fulcrum/iToken.json';\nimport IdleTokenV3 from '../contracts/IdleTokenV3.json';\nimport IdleTokenV4 from '../contracts/IdleTokenV4.json';\nimport IdleConverterPersonalSignV4 from '../contracts/IdleConverterPersonalSignV4.json';\n\nconst availableTokens = {\n  42:{\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x4f96fe3b7a6cf9725f59d353f723c1bdb64ca6aa',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x295CA5bC5153698162dDbcE5dF50E436a58BA21e',\n        },\n        protocols:[\n          {\n            decimals:28,\n            token:'cDAI',\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0xf0d0eb522cfa50b716b3b1604c4f0fa6f04376ad',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          }\n        ]\n      },\n      USDC:{\n        abi:USDC,\n        token:'USDC',\n        decimals:6,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0xb7a4f3e9097c08da09517b5ab877f7a917224ede',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        ramp:{\n          swapAsset:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x0de23D3bc385a74E2196cfE827C8a640B8774B9f',\n        },\n        protocols:[\n          {\n            decimals:16,\n            enabled:true,\n            token:'cUSDC',\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x4a92e71227d294f041bd82dd8f78591b75140d63',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          }\n        ]\n      },\n    },\n  },\n  1337:{\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your DAI with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleDAI',\n            name:'idleDAIYieldV3',\n            address:'0x78751b12da02728f467a44eac40f5cbc16bd7934',\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token:'yxDAIOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            token:'idleDAI',\n            abi:IdleConverterPersonalSignV4,\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token:'cDAI',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:iToken,\n            enabled:false,\n            name:'fulcrum',\n            address:'0x493c57c4763932315a328269e1adad09653b9081',\n            token:'iDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            address:'0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token:'aDAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:CHAI,\n            name:'dsr',\n            enabled:true,\n            address:'0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token:'CHAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:yToken,\n            name:'dydx',\n            enabled:true,\n            address:'0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token:'yxDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDC:{\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        abi:USDC,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x5274891bEC421B39D23760c04A6755eCB444797C',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your USDC with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDC',\n            name:'idleUSDCYieldV3',\n            address:'0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6'\n          },\n          oldProtocols:[\n            {\n              abi:yToken,\n              name:'dydx',\n              enabled:true,\n              address:'0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token:'yxUSDCOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token:'cUSDC',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token:'iUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token:'aUSDC',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token:'yxUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      WETH:{\n        abi:WETH,\n        token:'WETH',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WETH'\n        },\n        ramp:{\n          swapAsset:'WETH'\n        },\n        defiPrime:{\n          token:'weth'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWETHYield',\n          address:'0xC8E6CA6E96a326dC448307A5fDE90a0b21fd7f80',\n        },\n        protocols:[\n          {\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x4Ddc2D193948926D02f9B1fE9e1daa0718270ED5',\n            token:'cETH',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            address:'0x030bA81f1c18d280636F32af80b9AAd02Cf0854e',\n            token:'aWETH',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n    }\n  },\n  1:{ // Mainnet\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your DAI with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleDAI',\n            name:'idleDAIYieldV3',\n            address:'0x78751b12da02728f467a44eac40f5cbc16bd7934',\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token:'yxDAIOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            token:'idleDAI',\n            abi:IdleConverterPersonalSignV4,\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token:'cDAI',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:iToken,\n            enabled:false,\n            name:'fulcrum',\n            address:'0x493c57c4763932315a328269e1adad09653b9081',\n            token:'iDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            address:'0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token:'aDAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            address:'0x028171bCA77440897B824Ca71D1c56caC55b68A3',\n            token:'aDAIv2',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:CHAI,\n            name:'dsr',\n            enabled:true,\n            address:'0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token:'CHAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:yToken,\n            name:'dydx',\n            enabled:true,\n            address:'0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token:'yxDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDC:{\n        abi:USDC,\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x5274891bEC421B39D23760c04A6755eCB444797C',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your USDC with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDC',\n            name:'idleUSDCYieldV3',\n            address:'0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6'\n          },\n          oldProtocols:[\n            {\n              abi:yToken,\n              name:'dydx',\n              enabled:true,\n              address:'0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token:'yxUSDCOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token:'cUSDC',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token:'iUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token:'aUSDC',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            decimals:18,\n            enabled:true,\n            name:'aavev2',\n            token:'aUSDCv2',\n            address:'0xBcca60bB61934080951369a648Fb03DF4F96263C',\n            functions:{\n              \n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token:'yxUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDT:{\n        decimals:6,\n        token:'USDT',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre:{\n          destCurrency:'USDT'\n        },\n        defiPrime:{\n          token:'usdt'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDTYield',\n          address:'0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your USDT with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDT',\n            name:'idleUSDTYieldV3',\n            address:'0x63D27B3DA94A9E871222CB0A32232674B02D2f2D'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDT',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token:'cUSDT',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token:'iUSDT',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token:'aUSDT',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            decimals:18,\n            name:'aavev2',\n            enabled:true,\n            token:'aUSDTv2',\n            address:'0x3ed3b47dd13ec9a98b44e6204a523e766b225811',\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      SUSD:{\n        decimals:18,\n        token:'SUSD',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        skipMintForDeposit:false,\n        color:'hsl(250, 31%, 15%)',\n        // icon:'images/tokens/SUSD.svg',\n        address:'0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n        wyre:{\n          destCurrency:'SUSD'\n        },\n        defiPrime:{\n          token:'susd'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleSUSDYield',\n          address:'0xf52cdcd458bf455aed77751743180ec4a595fd3f',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your SUSD with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleSUSD',\n            name:'idleSUSDYieldV3',\n            address:'0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleSUSD',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x625aE63000f46200499120B906716420bd059240',\n            token:'aSUSD',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            name:'aavev2',\n            enabled:true,\n            abi:aToken,\n            address:'0x6c5024cd4f8a59110119c56f8933403a539555eb',\n            token:'aSUSDv2',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      TUSD:{\n        decimals:18,\n        token:'TUSD',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        skipMintForDeposit:false,\n        color:'hsl(217, 100%, 20%)',\n        address:'0x0000000000085d4780b73119b644ae5ecd22b376',\n        wyre:{\n          destCurrency:'TUSD'\n        },\n        defiPrime:{\n          token:'tusd'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleTUSDYield',\n          address:'0xc278041fDD8249FE4c1Aad1193876857EEa3D68c',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your TUSD with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleTUSD',\n            name:'idleTUSDYieldV3',\n            address:'0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleTUSD',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x4da9b813057d04baef4e5800e36083717b4a0341',\n            token:'aTUSD',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            enabled:true,\n            name:'aavev2',\n            token:'aTUSDv2',\n            address:'0x101cc05f4A51C0319f570d5E146a8C625198e636',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      WETH:{\n        abi:WETH,\n        token:'WETH',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WETH'\n        },\n        ramp:{\n          swapAsset:'WETH'\n        },\n        defiPrime:{\n          token:'weth'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWETHYield',\n          address:'0xC8E6CA6E96a326dC448307A5fDE90a0b21fd7f80',\n        },\n        protocols:[\n          {\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x4Ddc2D193948926D02f9B1fE9e1daa0718270ED5',\n            token:'cETH',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            address:'0x030bA81f1c18d280636F32af80b9AAd02Cf0854e',\n            token:'aWETH',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n      WBTC:{\n        decimals:8,\n        token:'WBTC',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(29, 81%, 59%)',\n        address:'0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WBTC'\n        },\n        defiPrime:{\n          token:'wbtc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWBTCYield',\n          address:'0x8C81121B15197fA0eEaEE1DC75533419DcfD3151',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your WBTC with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleWBTC',\n            name:'idleWBTCYieldV3',\n            address:'0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleWBTC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            enabled:true,\n            token:'cWBTC',\n            abi:cToken.abi,\n            name:'compound',\n            address:'0xc11b1268c1a384e55c48c2391d8d480264a3a7f4',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:iToken,\n            decimals:18,\n            token:'iWBTC',\n            enabled:false,\n            name:'fulcrum',\n            address:'0xba9262578efef8b3aff7f60cd629d6cc8859c8b5',\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            token:'aWBTC',\n            address:'0xfc4b8ed459e00e5400be803a9bb3954234fd50e3',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            enabled:true,\n            name:'aavev2',\n            token:'aWBTCv2',\n            address:'0x9ff58f4fFB29fA2266Ab25e75e2A8b3503311656',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      }\n    },\n    risk:{\n      DAI:{\n        abi:DAI,\n        decimals:18,\n        token:'DAI',\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAISafe',\n          address:'0xa14ea0e11121e6e951e87c66afe460a00bcd6a16'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleDAI',\n            name:'idleDAISafeV3',\n            address:'0x1846bdfDB6A0f5c473dEc610144513bd071999fB'\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token:'yxDAIOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleDAI',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token:'cDAI',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0x493c57c4763932315a328269e1adad09653b9081',\n            token:'iDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token:'aDAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            name:'dsr',\n            enabled:true,\n            abi:CHAI,\n            address:'0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token:'CHAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token:'yxDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDC:{\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCSafe',\n          address:'0x3391bc034f2935ef0e1e41619445f998b2680d35'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDC',\n            name:'idleUSDCSafeV3',\n            address:'0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token:'yxUSDCOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token:'cUSDC',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token:'iUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token:'aUSDC',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token:'yxUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDT:{\n        decimals:6,\n        token:'USDT',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre:{\n          destCurrency:'USDT'\n        },\n        defiPrime:{\n          token:'usdt'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDTSafe',\n          address:'0x28fAc5334C9f7262b3A3Fe707e250E01053e07b5'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDT',\n            name:'idleUSDTSafeV3',\n            address:'0x42740698959761baf1b06baa51efbd88cb1d862b'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleDAI',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token:'cUSDT',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token:'iUSDT',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token:'aUSDT',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      }\n    }\n  }\n};\n\nexport default availableTokens;","const TransactionToastMessages = {\n    initialized: {\n      message: \"{action} request initialized\",\n      secondaryMessage: \"Confirm with your wallet provider\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"default\",\n      icon: \"InfoOutline\"\n    },\n    started: {\n      message: \"{action} request submitted\",\n      secondaryMessage: \"Confirm with your wallet provider\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"default\",\n      icon: \"InfoOutline\"\n    },\n    pending: {\n      message: \"Processing {action} request...\",\n      secondaryMessage: \"This may take a few minutes\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"processing\",\n      icon: \"InfoOutline\"\n    },\n    confirmed: {\n      message: \"First block confirmed\",\n      secondaryMessage: \"Your {action} request is in progress\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"processing\",\n      icon: 'CheckCircle'\n    },\n    success: {\n      message: \"{action} request completed\",\n      variant: \"success\",\n      icon: 'CheckCircle'\n    },\n    error: {\n      message: \"{action} request failed\",\n      secondaryMessage: \"Could not complete transaction.\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"failure\",\n      icon: \"Block\"\n    }\n  };\n\n  export default TransactionToastMessages;\n","import React from \"react\";\nimport { ToastMessage } from \"rimble-ui\";\nimport TransactionToastMessages from \"./TransactionToastMessages\";\n\nclass TransactionToastUtil extends React.Component {\n  // Determines if collections are same size\n  collectionHasNewObject = (prevCollection, currentCollection) => {\n    return (\n      typeof prevCollection === \"undefined\" ||\n      Object.keys(prevCollection).length !==\n        Object.keys(currentCollection).length\n    );\n  };\n\n  // Returns object from currentCollection that doesn't exist in prevCollection\n  getNewObjectFromCollection = (prevCollection, currentCollection) => {\n    if (typeof prevCollection !== \"undefined\") {\n      const objectKey = Object.keys(currentCollection).filter(key => {\n        return !Object.keys(prevCollection).includes(key);\n      });\n      return currentCollection[objectKey];\n    } else {\n      return Object.keys(currentCollection).map(key => {\n        return currentCollection[key];\n      });\n    }\n  };\n\n  // Compare two collections of objects, return single object from current collection that differs from prev collection\n  getUpdatedObjectFromCollection = (prevCollection, currentCollection) => {\n    const updatedTransaction = Object.keys(prevCollection)\n      .map(key => {\n        if (\n          prevCollection[key].lastUpdated !== currentCollection[key].lastUpdated\n        ) {\n          return currentCollection[key];\n        } else {\n          return null;\n        }\n      })\n      .filter(object => object !== null);\n    return updatedTransaction[0];\n  };\n\n  // Returns an transaction from a collection based on a given identifier\n  getTransactionFromCollection = (identifier, collection) => {\n    const object = collection[`tx${identifier}`];\n    return object;\n  };\n\n  // Returns either a new object or finds an updated object in a collection against a previous collection\n  getUpdatedTransaction = (prevCollection, currentCollection) => {\n    let tx = null;\n    let currentTx = {};\n    let prevTx = {};\n\n    if (this.collectionHasNewObject(prevCollection, currentCollection)) {\n      tx = this.getNewObjectFromCollection(prevCollection, currentCollection);\n    } else {\n      currentTx = this.getUpdatedObjectFromCollection(\n        prevCollection,\n        currentCollection\n      );\n      if (currentTx) {\n        prevTx = this.getTransactionFromCollection(\n          currentTx.created,\n          prevCollection\n        );\n      } else {\n        return false;\n      }\n\n      if (currentTx.status !== prevTx.status) {\n        tx = currentTx;\n      }\n    }\n    return tx;\n  };\n\n  // Check for updates to the transactions collection\n  processTransactionUpdates = prevProps => {\n    let tx = null;\n    if (Object.keys(this.props.transactions).length) {\n      tx = this.getUpdatedTransaction(\n        prevProps.transactions,\n        this.props.transactions\n      );\n    }\n\n    if (tx) {\n      this.showTransactionToast(tx);\n    }\n  };\n\n  showTransactionToast = transaction => {\n    // console.log(\"showTransactionToast: \", { ...transaction });\n    // Get text info for toast\n    let toastMeta = this.getTransactionToastMeta(transaction);\n    toastMeta.colorTheme = this.props.themeMode;\n    toastMeta.closeElem = true;\n    // console.log('toastMeta',toastMeta);\n\n    // Show toast\n    window.toastProvider.addMessage(\".\", toastMeta);\n  };\n\n  getTransactionToastMeta = transaction => {\n    let transactionToastMeta = {};\n    let status = transaction.status;\n\n    switch (status) {\n      case \"initialized\":\n        transactionToastMeta = TransactionToastMessages.initialized;\n        break;\n      case \"started\":\n        transactionToastMeta = TransactionToastMessages.started;\n        break;\n      case \"pending\":\n        transactionToastMeta = TransactionToastMessages.pending;\n        break;\n      case \"confirmed\":\n        transactionToastMeta = TransactionToastMessages.confirmed;\n        break;\n      case \"success\":\n        transactionToastMeta = TransactionToastMessages.success;\n        break;\n      case \"error\":\n        transactionToastMeta = TransactionToastMessages.error;\n        break;\n      default:\n        // do nothing\n        break;\n    }\n\n    let transactionAction = '';\n    switch (transaction.method){\n      case 'redeemIdleToken':\n        transactionAction = 'Redeem';\n      break;\n      case 'redeemGovTokens':\n        transactionAction = 'Redeem (Gov Tokens)';\n      break;\n      case 'mintIdleToken':\n      case 'mintIdleTokensProxy':\n        transactionAction = 'Lending';\n      break;\n      case 'migrateFromToIdle':\n      case 'migrateFromCompoundToIdle':\n      case 'migrateFromFulcrumToIdle':\n      case 'migrateFromAaveToIdle':\n      case 'migrateFromIearnToIdle':\n      case 'bridgeIdleV1ToIdleV2':\n        transactionAction = 'Migration';\n      break;\n      case 'executeMetaTransaction':\n        transactionAction = 'Meta-Tx';\n      break;\n      case 'approve':\n        transactionAction = 'Approve';\n      break;\n      case 'rebalance':\n        transactionAction = 'Rebalance';\n      break;\n      default:\n        transactionAction = transaction.method.charAt(0).toUpperCase() + transaction.method.substr(1);\n      break;\n    }\n\n    transactionToastMeta = JSON.parse(JSON.stringify(transactionToastMeta));\n\n    let newMessage = transactionToastMeta.message.replace('{action}',transactionAction);\n    newMessage = newMessage.charAt(0).toUpperCase() + newMessage.slice(1);\n    transactionToastMeta.message = newMessage;\n    transactionToastMeta.closeElem = true;\n    transactionToastMeta.colorTheme = this.props.themeMode;\n\n    return transactionToastMeta;\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    this.processTransactionUpdates(prevProps);\n  }\n\n  render() {\n    return (\n      <div>\n        <ToastMessage.Provider ref={node => (window.toastProvider = node)} />\n      </div>\n    );\n  }\n}\n\nexport default TransactionToastUtil;\n","import Web3 from \"web3\";\nimport jQuery from 'jquery';\nimport theme from \"../theme\";\nimport Tos from \"../Tos/Tos\";\nimport themeDark from \"../theme-dark\";\nimport connectors from './connectors';\nimport Web3Provider from 'web3-react';\nimport { Web3Consumer } from 'web3-react';\nimport CookieConsent from \"react-cookie-consent\";\nimport RimbleWeb3 from \"../utilities/RimbleWeb3\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport React, { Component, Suspense } from \"react\";\nimport GeneralUtil from \"../utilities/GeneralUtil\";\nimport Header from \"../utilities/components/Header\";\nimport globalConfigs from '../configs/globalConfigs';\nimport ScrollToTop from \"../ScrollToTop/ScrollToTop\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport PageNotFound from \"../PageNotFound/PageNotFound\";\nimport Web3Debugger from \"../Web3Debugger/Web3Debugger\";\nimport availableTokens from '../configs/availableTokens';\nimport TransactionToastUtil from \"../utilities/TransactionToastUtil\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { ThemeProvider, Box, Text, Link, Image, Flex } from 'rimble-ui';\n\n// Lazy Loading\nconst Landing = React.lazy(() => import(\"../Landing/Landing\"));\nconst Dashboard = React.lazy(() => import('../Dashboard/Dashboard'));\nconst Governance = React.lazy(() => import('../Governance/Governance'));\n\nclass App extends Component {\n  state = {\n    cachedData:{},\n    buyToken: null,\n    selectedTab: '1',\n    route: \"default\", // or 'onboarding'\n    themeMode:'light',\n    connecting: false,\n    tokenConfig: null,\n    genericError: null,\n    customAddress: null,\n    connectorName: null,\n    selectedToken: null,\n    selectedTheme:theme,\n    currentSection:null,\n    walletProvider: null,\n    availableTokens: null,\n    buyModalOpened: false,\n    selectedStrategy: null,\n    toastMessageProps: null,\n    callbackAfterLogin: null,\n    width: window.innerWidth,\n    availableStrategies: null,\n    height: window.innerHeight,\n    unsubscribeFromHistory: null,\n    enableUnderlyingWithdraw: false,\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  closeToastMessage = (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    this.setState({\n      toastMessageProps:null\n    });\n  }\n\n  showToastMessage = (props) => {\n    this.setState({\n      toastMessageProps:props\n    });\n  }\n\n  processCustomParam = (props,prevProps) => {\n    // const params = props ? props.match.params : null;\n    // const prevParams = prevProps ? prevProps.match.params : null;\n\n    // Reset params\n    /*\n    if ( prevParams && params && prevParams.customParam !== params.customParam && (!params || !params.customParam || params.customParam === undefined)){\n      this.setState({\n        customAddress:null,\n        enableUnderlyingWithdraw:false\n      });\n    } else if (params && typeof params.customParam === 'string') {\n      // Check if custom address\n      if (params.customParam.toLowerCase().match(/0x[\\w]{40}/) && this.state.customAddress !== params.customParam){\n        this.setCustomAddress(params.customParam);\n      } else if (params && params.customParam === 'withdraw' && !this.state.enableUnderlyingWithdraw){\n        this.setState({\n          customAddress:null,\n          enableUnderlyingWithdraw:true\n        });\n      }\n    }\n    */\n  }\n\n  clearCachedData = () => {\n    this.functionsUtil.setLocalStorage('cachedData',{},true);\n    this.setState({\n      cachedData:{}\n    });\n    return true;\n  }\n\n  setCachedData = (key,data,TTL=null,useLocalStorage=false) => {\n\n    key = key.toLowerCase();\n    const cachedKeyFound = this.state.cachedData[key];\n    const currentTime = parseInt(Date.now()/1000);\n\n    const update_key = !cachedKeyFound || ( (!cachedKeyFound.expirationDate || cachedKeyFound.expirationDate>=currentTime) || JSON.stringify(cachedKeyFound.data) !== JSON.stringify(data));\n\n    let output = false;\n\n    if (update_key){\n      const expirationDate = TTL ? currentTime+(TTL) : null;\n\n      // Save cached data in local storage\n      if (useLocalStorage){\n        let storedCachedData = this.functionsUtil.getStoredItem('cachedData');\n        if (!storedCachedData){\n          storedCachedData = {};\n        }\n        storedCachedData = {\n          ...storedCachedData,\n          [key]:{\n            data,\n            expirationDate\n          }\n        };\n        // console.log('STORED CACHE - INSERT KEY',key,data);\n        this.functionsUtil.setLocalStorage('cachedData',storedCachedData,true);\n      }\n\n      // Set new cached data state\n      this.setState((prevState) => ({\n        cachedData: {\n          ...prevState.cachedData,\n          [key]:{\n            data,\n            expirationDate\n          }\n        }\n      }));\n\n      output = true;\n    }\n\n    return output;\n  }\n\n  setCallbackAfterLogin = (callbackAfterLogin) => {\n    this.setState({\n      callbackAfterLogin\n    });\n  }\n\n  setCustomAddress = (customAddress) => {\n    // Reset customAddress if not well formatted\n    if (customAddress && !customAddress.toLowerCase().match(/0x[\\w]{40}/)){\n      customAddress = null;\n    }\n\n    if (customAddress !== this.state.customAddress){\n      this.setState({\n        customAddress,\n        enableUnderlyingWithdraw:false\n      });\n    }\n  }\n\n  async selectTab(e, tabIndex) {\n    return this.setState(state => ({...state, selectedTab: tabIndex}));\n  }\n\n  async loadAvailableTokens() {\n    const newState = {};\n    const availableStrategies = {};\n    const requiredNetwork = globalConfigs.network.requiredNetwork;\n\n    // Load available strategies\n    Object.keys(availableTokens[requiredNetwork]).forEach((strategy) => {\n      availableStrategies[strategy] = availableTokens[requiredNetwork][strategy];\n    });\n\n    newState.availableStrategies = availableStrategies;\n\n    // Load strategy\n    const selectedStrategy = this.state.selectedStrategy;\n    if (selectedStrategy && this.state.availableStrategies[selectedStrategy]){\n      newState.availableTokens = this.state.availableStrategies[selectedStrategy];\n\n      // Load token\n      const selectedToken = this.state.selectedToken;\n      if (selectedToken && newState.availableTokens[selectedToken]){\n        newState.tokenConfig = newState.availableTokens[selectedToken];\n      }\n    }\n\n    // console.log('loadAvailableTokens',newState);\n\n    await this.setState(newState);\n  }\n\n  async setStrategyToken(selectedStrategy,selectedToken){\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    const newState = {\n      tokenConfig:!selectedToken ? null : this.state.tokenConfig,\n      availableTokens:!selectedToken ? null : this.state.availableTokens,\n      selectedToken:!selectedToken ? selectedToken :this.state.selectedToken,\n      selectedStrategy:!selectedStrategy ? selectedStrategy :this.state.selectedStrategy,\n    };\n\n    if (selectedStrategy && this.state.availableStrategies && selectedStrategy !== this.state.selectedStrategy && Object.keys(this.state.availableStrategies).includes(selectedStrategy.toLowerCase())){\n      newState.selectedStrategy = selectedStrategy.toLowerCase();\n    }\n\n    if (selectedToken && selectedToken !== this.state.selectedToken) {\n      if ( this.state.availableTokens && Object.keys(this.state.availableTokens).includes(selectedToken.toUpperCase()) ){\n        newState.selectedToken = selectedToken.toUpperCase();\n        newState.tokenConfig = this.state.availableTokens[selectedToken];\n      } else if (this.state.availableStrategies && Object.keys(this.state.availableStrategies[selectedStrategy]).includes(selectedToken.toUpperCase())) {\n        newState.selectedToken = selectedToken.toUpperCase();\n        newState.tokenConfig = this.state.availableStrategies[selectedStrategy][newState.selectedToken];\n        newState.availableTokens = this.state.availableStrategies[selectedStrategy];\n      }\n    }\n\n    // console.log('setStrategyToken',newState);\n\n    await this.setState(newState,callback);\n  }\n\n  async setStrategy(selectedStrategy) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    if (selectedStrategy && selectedStrategy !== this.state.selectedStrategy && Object.keys(this.state.availableStrategies).includes(selectedStrategy.toLowerCase())){\n      selectedStrategy = selectedStrategy.toLowerCase();\n      await this.setState({\n        selectedStrategy\n      },callback);\n    } else if (!selectedStrategy) {\n      await this.setState({\n        selectedStrategy\n      },callback);\n    }\n  }\n\n  async setToken(selectedToken) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    if (selectedToken && selectedToken !== this.state.selectedToken && Object.keys(this.state.availableTokens).includes(selectedToken.toUpperCase())){\n      selectedToken = selectedToken.toUpperCase();\n      const newState = {\n        selectedToken\n      };\n      newState.tokenConfig = this.state.availableTokens[selectedToken];\n      await this.setState(newState,callback);\n    } else if(!selectedToken) {\n      await this.setState({\n        selectedToken,\n        tokenConfig:null\n      },callback);\n    }\n  }\n\n  async componentWillMount() {\n\n    this.loadUtils();\n\n    window.BNify = this.functionsUtil.BNify;\n\n    // Suppress warnings and errors in production\n    const isProduction = window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n    if (isProduction){\n      window.console.error = () => {};\n      window.console.warn = () => {};\n    }\n\n    window.jQuery = jQuery;\n\n    if (window.localStorage){\n      this.functionsUtil.removeStoredItem('context');\n\n      // Clear all localStorage data except walletProvider and connectorName if version has changed\n      const version = this.functionsUtil.getStoredItem('version',false);\n      if (version !== globalConfigs.version){\n        this.functionsUtil.clearStoredData(['walletProvider','connectorName']);\n        this.functionsUtil.setLocalStorage('version',globalConfigs.version);\n      }\n    }\n\n    const themeMode = this.functionsUtil.getStoredItem('themeMode',false);\n    if (themeMode){\n      this.setThemeMode(themeMode);\n    }\n\n    window.closeIframe = (w) => {\n      const iFrames = document.getElementsByTagName('iframe');\n      for (let i=0;i<iFrames.length;i++){\n        const iframe = iFrames[i];\n        if (iframe.contentWindow === w){\n          window.jQuery(iframe).parents('.iframe-container')[0].remove();\n        }\n      }\n    }\n\n    window.addEventListener('resize', this.handleWindowSizeChange);\n\n    this.loadCustomAddress();\n    this.loadAvailableTokens();\n  }\n\n  loadCustomAddress(){\n    if (!this.state.customAddress){\n      const walletProvider = this.functionsUtil.getWalletProvider('Infura');\n      if (walletProvider === 'custom'){\n        const customAddress = this.functionsUtil.getCustomAddress();\n        if (customAddress && customAddress !== this.state.customAddress){\n          this.setState({\n            customAddress\n          });\n        }\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n\n  componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const currentSectionChanged = prevState.currentSection !== this.state.currentSection;\n    if (currentSectionChanged){\n      if (this.state.currentSection === 'landing'){\n        this.setThemeMode('light',false);\n      } else {\n        // Get stored Mode\n        const themeMode = this.functionsUtil.getStoredItem('themeMode',false) || this.functionsUtil.getGlobalConfig(['dashboard','theme','mode']);\n        this.setThemeMode(themeMode);\n      }\n    }\n\n    const tokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const strategyChanged = prevState.selectedStrategy !== this.state.selectedStrategy;\n\n    if (tokenChanged || strategyChanged){\n      this.loadAvailableTokens();\n    }\n  }\n\n  componentDidMount() {\n\n    // Close iFrame\n    if (window.self !== window.top && window.top.location.href.indexOf(globalConfigs.baseURL) !== -1 && typeof window.parent.closeIframe === 'function' ){\n      window.parent.closeIframe(window.self);\n    }\n\n    window.showToastMessage = this.showToastMessage;\n    window.closeToastMessage = this.closeToastMessage;\n\n    if (localStorage){\n      const connectorName = localStorage.getItem('connectorName') ? localStorage.getItem('connectorName') : 'Infura';\n      const walletProvider = localStorage.getItem('walletProvider') ? localStorage.getItem('walletProvider') : 'Infura';\n\n      this.setConnector(connectorName,walletProvider);\n    }\n  }\n\n  handleWindowSizeChange = () => {\n    const newState = {\n      width:this.state.width,\n      height:this.state.height,\n    };\n\n    const widthChanged = window.innerWidth !== this.state.width;\n    const heightChanged = window.innerHeight !== this.state.height;\n\n    if (widthChanged || heightChanged){\n      if (widthChanged){\n        newState.width = window.innerWidth;\n      }\n      if (heightChanged){\n        newState.height = window.innerHeight;\n      }\n      return this.setState(newState);\n    }\n\n    return null;\n  };\n\n  // Optional parameters to pass into RimbleWeb3\n  config = globalConfigs.network;\n\n  showRoute(route) {\n    return this.setState({ route });\n  }\n\n  closeBuyModal(e) {\n    if (e){\n      e.preventDefault();\n    }\n    return this.setState({\n      buyToken:null,\n      buyModalOpened:false\n    });\n  }\n\n  openBuyModal(e,buyToken) {\n    e.preventDefault();\n\n    return this.setState({\n      buyToken,\n      buyModalOpened:true\n    });\n  }\n\n  async logout(){\n    // Reset Custom Address\n    this.setState({\n      customAddress:null\n    });\n    // Reset Localstorage\n    this.functionsUtil.clearStoredData(['version','themeMode','lastLogin']);\n  }\n\n  setConnector(connectorName,walletProvider){\n\n    let connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n    if (!connectorInfo && walletProvider){\n      connectorInfo = globalConfigs.connectors[walletProvider.toLowerCase()];\n    }\n\n    if ( (connectorInfo && !connectorInfo.enabled) || (connectorName !== 'Injected' && !Object.keys(globalConfigs.connectors).includes(connectorName.toLowerCase())) || (walletProvider && !Object.keys(globalConfigs.connectors).includes(walletProvider.toLowerCase()))) {\n      connectorName = 'Infura';\n      walletProvider = 'Infura';\n    } else if ( connectorName === 'Injected' ){\n      const hasMetamask = GeneralUtil.hasMetaMask();\n      const hasDapper = GeneralUtil.hasDapper()\n\n      // Check if injected connector is valid\n      switch (walletProvider){\n        case 'Metamask':\n          if (!hasMetamask && hasDapper){\n            walletProvider = 'Dapper';\n          }\n        break;\n        case 'Dapper':\n          if (!hasDapper && hasMetamask){\n            walletProvider = 'Metamask';\n          }\n        break;\n        default:\n        break;\n      }\n    }\n\n    this.functionsUtil.setLocalStorage('connectorName', connectorName);\n    this.functionsUtil.setLocalStorage('walletProvider', walletProvider);\n\n    return this.setState({\n      connectorName,\n      walletProvider\n    },() => {\n      this.loadCustomAddress();\n    });\n  }\n\n  setThemeMode(themeMode,store=true){\n    let selectedTheme = null;\n\n    // Check Dark Mode Enabled\n    const darkModeEnabled = this.functionsUtil.getGlobalConfig(['dashboard','theme','darkModeEnabled']);\n    if (themeMode === 'dark' && !darkModeEnabled){\n      themeMode = 'light';\n    }\n\n    switch (themeMode){\n      default:\n      case 'light':\n        selectedTheme = theme;\n      break;\n      case 'dark':\n        selectedTheme = themeDark;\n      break;\n    }\n\n    if (store){\n      this.functionsUtil.setLocalStorage('themeMode',themeMode);\n    }\n\n    this.setState({\n      themeMode,\n      selectedTheme\n    });\n  }\n\n  setCurrentSection(currentSection){\n    this.setState({\n      currentSection\n    });\n  }\n\n  render() {\n    const isMobile = this.state.width <= 768;\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n\n    // console.log(this.state.selectedToken,this.state.tokenConfig);\n\n    const SuspenseLoader = (\n      <Flex\n        width={1}\n        minHeight={'100vh'}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        backgroundColor={'selectBg'}\n      >\n        <FlexLoader\n          textProps={{\n            textSize:4,\n            fontWeight:2\n          }}\n          loaderProps={{\n            mb:3,\n            size:'80px',\n            color:'primary'\n          }}\n          flexProps={{\n            my:3,\n            flexDirection:'column'\n          }}\n          text={''}\n        />\n      </Flex>\n    );\n\n    return (\n      <Router>\n        <ScrollToTop />\n        <ThemeProvider\n          theme={this.state.selectedTheme}\n        >\n          <Web3Provider\n            web3Api={Web3}\n            connectors={connectors}\n            libraryName={'web3.js'}\n          >\n            <Web3Consumer>\n              {context => {\n                return (\n                  <RimbleWeb3\n                    context={context}\n                    isMobile={isMobile}\n                    config={this.config}\n                    connectors={connectors}\n                    theme={this.state.selectedTheme}\n                    cachedData={this.state.cachedData}\n                    tokenConfig={this.state.tokenConfig}\n                    customAddress={this.state.customAddress}\n                    selectedToken={this.state.selectedToken}\n                    connectorName={this.state.connectorName}\n                    walletProvider={this.state.walletProvider}\n                    setConnector={this.setConnector.bind(this)}\n                    availableTokens={this.state.availableTokens}\n                    setCachedData={this.setCachedData.bind(this)}\n                    clearCachedData={this.clearCachedData.bind(this)}\n                    callbackAfterLogin={this.state.callbackAfterLogin}\n                    availableStrategies={this.state.availableStrategies}\n                    setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                    enableUnderlyingWithdraw={this.state.enableUnderlyingWithdraw}\n                  >\n                    <RimbleWeb3.Consumer>\n                      {({\n                        web3,\n                        modals,\n                        network,\n                        account,\n                        initWeb3,\n                        simpleID,\n                        biconomy,\n                        contracts,\n                        transaction,\n                        initAccount,\n                        initContract,\n                        transactions,\n                        initSimpleID,\n                        permitClient,\n                        tokenDecimals,\n                        accountBalance,\n                        needsPreflight,\n                        validateAccount,\n                        rejectValidation,\n                        accountValidated,\n                        getTokenDecimals,\n                        getAccountBalance,\n                        accountBalanceLow,\n                        accountInizialized,\n                        accountBalanceToken,\n                        userRejectedConnect,\n                        initializeContracts,\n                        erc20ForwarderClient,\n                        rejectAccountConnect,\n                        contractsInitialized,\n                        userRejectedValidation,\n                        accountValidationPending,\n                        connectAndValidateAccount,\n                        contractMethodSendWrapper\n                      }) => {\n                        return (\n                        <Box>\n                          <Switch>\n                            <Route\n                              path=\"/dashboard/:section?/:param1?/:param2?\"\n                              render={\n                                (props) => \n                                  <Suspense\n                                    fallback={SuspenseLoader}\n                                  >\n                                    <Dashboard\n                                      {...props}\n                                      web3={web3}\n                                      modals={modals}\n                                      network={network}\n                                      context={context}\n                                      account={account}\n                                      isDashboard={true}\n                                      initWeb3={initWeb3}\n                                      biconomy={biconomy}\n                                      isMobile={isMobile}\n                                      simpleID={simpleID}\n                                      contracts={contracts}\n                                      initAccount={initAccount}\n                                      permitClient={permitClient}\n                                      initSimpleID={initSimpleID}\n                                      initContract={initContract}\n                                      transactions={transactions}\n                                      buyToken={this.state.buyToken}\n                                      logout={this.logout.bind(this)}\n                                      accountBalance={accountBalance}\n                                      themeMode={this.state.themeMode}\n                                      theme={this.state.selectedTheme}\n                                      validateAccount={validateAccount}\n                                      connecting={this.state.connecting}\n                                      cachedData={this.state.cachedData}\n                                      setToken={this.setToken.bind(this)}\n                                      accountValidated={accountValidated}\n                                      getTokenDecimals={getTokenDecimals}\n                                      rejectValidation={rejectValidation}\n                                      tokenConfig={this.state.tokenConfig}\n                                      getAccountBalance={getAccountBalance}\n                                      accountBalanceLow={accountBalanceLow}\n                                      accountInizialized={accountInizialized}\n                                      selectedToken={this.state.selectedToken}\n                                      connectorName={this.state.connectorName}\n                                      setStrategy={this.setStrategy.bind(this)}\n                                      userRejectedConnect={userRejectedConnect}\n                                      accountBalanceToken={accountBalanceToken}\n                                      initializeContracts={initializeContracts}\n                                      walletProvider={this.state.walletProvider}\n                                      buyModalOpened={this.state.buyModalOpened}\n                                      erc20ForwarderClient={erc20ForwarderClient}\n                                      contractsInitialized={contractsInitialized}\n                                      openBuyModal={this.openBuyModal.bind(this)}\n                                      rejectAccountConnect={rejectAccountConnect}\n                                      handleMenuClick={this.selectTab.bind(this)}\n                                      setConnector={this.setConnector.bind(this)}\n                                      setThemeMode={this.setThemeMode.bind(this)}\n                                      availableTokens={this.state.availableTokens}\n                                      closeBuyModal={this.closeBuyModal.bind(this)}\n                                      setCachedData={this.setCachedData.bind(this)}\n                                      selectedStrategy={this.state.selectedStrategy}\n                                      userRejectedValidation={userRejectedValidation}\n                                      clearCachedData={this.clearCachedData.bind(this)}\n                                      setStrategyToken={this.setStrategyToken.bind(this)}\n                                      accountValidationPending={accountValidationPending}\n                                      availableStrategies={this.state.availableStrategies}\n                                      setCurrentSection={this.setCurrentSection.bind(this)}\n                                      connectAndValidateAccount={connectAndValidateAccount}\n                                      contractMethodSendWrapper={contractMethodSendWrapper}\n                                      setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                                    />\n                                  </Suspense>\n\n                              }\n                            >\n                            </Route>\n                            {\n                              governanceEnabled && \n                                <Route\n                                  path=\"/governance/:section?/:item_id?\"\n                                  render={\n                                    (props) =>\n                                      <Suspense\n                                        fallback={SuspenseLoader}\n                                      >\n                                        <Governance\n                                          {...props}\n                                          web3={web3}\n                                          modals={modals}\n                                          network={network}\n                                          context={context}\n                                          account={account}\n                                          initWeb3={initWeb3}\n                                          biconomy={biconomy}\n                                          isMobile={isMobile}\n                                          simpleID={simpleID}\n                                          isGovernance={true}\n                                          contracts={contracts}\n                                          initAccount={initAccount}\n                                          initSimpleID={initSimpleID}\n                                          initContract={initContract}\n                                          transactions={transactions}\n                                          buyToken={this.state.buyToken}\n                                          logout={this.logout.bind(this)}\n                                          accountBalance={accountBalance}\n                                          themeMode={this.state.themeMode}\n                                          theme={this.state.selectedTheme}\n                                          validateAccount={validateAccount}\n                                          connecting={this.state.connecting}\n                                          cachedData={this.state.cachedData}\n                                          setToken={this.setToken.bind(this)}\n                                          accountValidated={accountValidated}\n                                          getTokenDecimals={getTokenDecimals}\n                                          rejectValidation={rejectValidation}\n                                          tokenConfig={this.state.tokenConfig}\n                                          getAccountBalance={getAccountBalance}\n                                          accountBalanceLow={accountBalanceLow}\n                                          accountInizialized={accountInizialized}\n                                          selectedToken={this.state.selectedToken}\n                                          connectorName={this.state.connectorName}\n                                          setStrategy={this.setStrategy.bind(this)}\n                                          userRejectedConnect={userRejectedConnect}\n                                          accountBalanceToken={accountBalanceToken}\n                                          initializeContracts={initializeContracts}\n                                          walletProvider={this.state.walletProvider}\n                                          buyModalOpened={this.state.buyModalOpened}\n                                          contractsInitialized={contractsInitialized}\n                                          openBuyModal={this.openBuyModal.bind(this)}\n                                          rejectAccountConnect={rejectAccountConnect}\n                                          handleMenuClick={this.selectTab.bind(this)}\n                                          setConnector={this.setConnector.bind(this)}\n                                          setThemeMode={this.setThemeMode.bind(this)}\n                                          availableTokens={this.state.availableTokens}\n                                          closeBuyModal={this.closeBuyModal.bind(this)}\n                                          setCachedData={this.setCachedData.bind(this)}\n                                          selectedStrategy={this.state.selectedStrategy}\n                                          userRejectedValidation={userRejectedValidation}\n                                          clearCachedData={this.clearCachedData.bind(this)}\n                                          setStrategyToken={this.setStrategyToken.bind(this)}\n                                          accountValidationPending={accountValidationPending}\n                                          availableStrategies={this.state.availableStrategies}\n                                          setCurrentSection={this.setCurrentSection.bind(this)}\n                                          connectAndValidateAccount={connectAndValidateAccount}\n                                          contractMethodSendWrapper={contractMethodSendWrapper}\n                                          setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                                        />\n                                      </Suspense>\n                                  }\n                                >\n                                </Route>\n                            }\n                            <Route>\n                              <Header\n                                modals={modals}\n                                network={network}\n                                context={context}\n                                account={account}\n                                initWeb3={initWeb3}\n                                isMobile={isMobile}\n                                contracts={contracts}\n                                initAccount={initAccount}\n                                initContract={initContract}\n                                buyToken={this.state.buyToken}\n                                accountBalance={accountBalance}\n                                logout={this.logout.bind(this)}\n                                validateAccount={validateAccount}\n                                connecting={this.state.connecting}\n                                accountValidated={accountValidated}\n                                getTokenDecimals={getTokenDecimals}\n                                rejectValidation={rejectValidation}\n                                tokenConfig={this.state.tokenConfig}\n                                getAccountBalance={getAccountBalance}\n                                accountBalanceLow={accountBalanceLow}\n                                selectedToken={this.state.selectedToken}\n                                connectorName={this.state.connectorName}\n                                userRejectedConnect={userRejectedConnect}\n                                accountBalanceToken={accountBalanceToken}\n                                walletProvider={this.state.walletProvider}\n                                buyModalOpened={this.state.buyModalOpened}\n                                contractsInitialized={contractsInitialized}\n                                openBuyModal={this.openBuyModal.bind(this)}\n                                rejectAccountConnect={rejectAccountConnect}\n                                handleMenuClick={this.selectTab.bind(this)}\n                                setConnector={this.setConnector.bind(this)}\n                                availableTokens={this.state.availableTokens}\n                                closeBuyModal={this.closeBuyModal.bind(this)}\n                                userRejectedValidation={userRejectedValidation}\n                                accountValidationPending={accountValidationPending}\n                                connectAndValidateAccount={connectAndValidateAccount}\n                                setToken={ e => { this.setToken(e) } }\n                              />\n\n                              {this.state.route === \"onboarding\" ? (\n                                <Web3Debugger\n                                  web3={web3}\n                                  account={account}\n                                  accountBalance={accountBalance}\n                                  accountBalanceToken={accountBalanceToken}\n                                  accountBalanceLow={accountBalanceLow}\n                                  initAccount={initAccount}\n                                  rejectAccountConnect={rejectAccountConnect}\n                                  userRejectedConnect={userRejectedConnect}\n                                  accountValidated={accountValidated}\n                                  accountValidationPending={accountValidationPending}\n                                  rejectValidation={rejectValidation}\n                                  userRejectedValidation={userRejectedValidation}\n                                  validateAccount={validateAccount}\n                                  connectAndValidateAccount={connectAndValidateAccount}\n                                  modals={modals}\n                                  network={network}\n                                  transaction={transaction}\n                                />\n                              ) : null}\n\n                              {this.state.route === \"default\" ? (\n                                <Switch>\n                                  <Route exact path=\"/\"\n                                    render={ (props) =>\n                                      <Suspense\n                                        fallback={SuspenseLoader}\n                                      >\n                                        <Landing\n                                          {...props}\n                                          web3={web3}\n                                          network={network}\n                                          account={account}\n                                          isMobile={isMobile}\n                                          simpleID={simpleID}\n                                          contracts={contracts}\n                                          innerWidth={this.state.width}\n                                          logout={this.logout.bind(this)}\n                                          innerHeight={this.state.height}\n                                          accountBalance={accountBalance}\n                                          themeMode={this.state.themeMode}\n                                          theme={this.state.selectedTheme}\n                                          cachedData={this.state.cachedData}\n                                          connecting={this.state.connecting}\n                                          selectedTab={this.state.selectedTab}\n                                          tokenConfig={this.state.tokenConfig}\n                                          accountBalanceLow={accountBalanceLow}\n                                          getAccountBalance={getAccountBalance}\n                                          customAddress={this.state.customAddress}\n                                          selectedToken={this.state.selectedToken}\n                                          accountBalanceToken={accountBalanceToken}\n                                          closeToastMessage={this.closeToastMessage}\n                                          contractsInitialized={contractsInitialized}\n                                          openBuyModal={this.openBuyModal.bind(this)}\n                                          setThemeMode={this.setThemeMode.bind(this)}\n                                          processCustomParam={this.processCustomParam}\n                                          availableTokens={this.state.availableTokens}\n                                          setCachedData={this.setCachedData.bind(this)}\n                                          updateSelectedTab={this.selectTab.bind(this)}\n                                          toastMessageProps={this.state.toastMessageProps}\n                                          clearCachedData={this.clearCachedData.bind(this)}\n                                          availableStrategies={this.state.availableStrategies}\n                                          setCurrentSection={this.setCurrentSection.bind(this)}\n                                          connectAndValidateAccount={connectAndValidateAccount}\n                                          setToken={ e => { this.setToken(e) } }\n                                        />\n                                        <CookieConsent\n                                          expires={365}\n                                          buttonText={\"Ok\"}\n                                          location={\"bottom\"}\n                                          acceptOnScroll={true}\n                                          cookieName={\"cookieAccepted\"}\n                                          acceptOnScrollPercentage={5}\n                                          style={{background: \"rgba(255,255,255,0.95)\",zIndex:'9999999'}}\n                                          buttonStyle={{display: isMobile ? \"block\" : \"none\", backgroundColor:'#0036ff', color: 'white', marginTop: isMobile ? \"0px\" : \"15px\"}}\n                                        >\n                                          <Flex flexDirection={'row'} alignItems={['flex-start','center']} justifyContent={'flex-start'} maxHeight={['150px','initial']} style={ isMobile ? {overflowY:'scroll'} : null }>\n                                            <Image display={['none','block']} src={'images/cookie.svg'} width={'42px'} height={'42px'} />\n                                            <Text pl={[0,3]} color={'dark-gray'} fontSize={1} textAlign={'justify'}>\n                                              This website or its third-party tools process personal data (e.g. browsing data or IP addresses) and use cookies or other identifiers, which are necessary for its functioning and required to achieve the purposes illustrated in the cookie policy. To learn more, please refer to the <Link href={'https://www.iubenda.com/privacy-policy/61211749/cookie-policy'} target={'_blank'} rel=\"nofollow noopener noreferrer\" hoverColor={'blue'}>cookie policy</Link>.\n                                              You accept the use of cookies or other identifiers by closing or dismissing this notice, by scrolling this page, by clicking a link or button or by continuing to browse otherwise.\n                                            </Text>\n                                          </Flex>\n                                        </CookieConsent>\n                                      </Suspense>\n                                    }\n                                  ></Route>\n                                  <Route exact path=\"/terms-of-service\">\n                                    <Tos />\n                                  </Route>\n                                  <Route>\n                                    <PageNotFound />\n                                  </Route>\n                                </Switch>\n                              ) : null}\n                            </Route>\n                          </Switch>\n                          <TransactionToastUtil\n                            transactions={transactions}\n                            themeMode={this.state.themeMode}\n                          />\n                        </Box>\n                      )}}\n                    </RimbleWeb3.Consumer>\n                  </RimbleWeb3>\n                );\n              }}\n            </Web3Consumer>\n          </Web3Provider>\n        </ThemeProvider>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport * as Sentry from '@sentry/browser';\nimport App from './App/App';\nimport * as serviceWorker from './serviceWorker';\n\nif (window.location.hostname !== 'localhost') {\n  Sentry.init({\n    dsn: \"https://56f5c0bce273442390d7f25698fefe53@sentry.io/1547544\",\n    beforeSend(event, hint) {\n      let output = event;\n      const error = hint.originalException;\n      if (error && error.message){\n        if (error.message.match(/Failed to subscribe to new newBlockHeaders/i)){\n          output = false;\n        }\n      }\n      return output;\n    }\n  });\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass TableRow extends Component {\n  render() {\n    const FieldComponent = this.props.fieldComponent;\n    const isInteractive = typeof this.props.handleClick === 'function';\n    return (\n      <DashboardCard\n        cardProps={{\n          mb:2,\n          width:1,\n          px:[2,4],\n          py:[2,'12px']\n        }}\n        id={this.props.cardId}\n        {...this.props.rowProps}\n        className={this.props.token}\n        isInteractive={isInteractive}\n        handleClick={ isInteractive ? e => this.props.handleClick(this.props) : null }\n      >\n        <Flex\n          flexDirection={'row'}\n          id={this.props.rowId}\n        >\n          {\n            this.props.cols.map((colInfo,colIndex) => {\n              if (colInfo.visible === false || (colInfo.mobile === false && this.props.isMobile)){\n                return null;\n              }\n              return (\n                <Flex\n                  key={`col-${colIndex}`}\n                  {...colInfo.props}\n                >\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    {...colInfo.parentProps}\n                  >\n                    {\n                      colInfo.fields.map((fieldInfo,fieldIndex) => {\n                        if (fieldInfo.visible === false || (fieldInfo.mobile === false && this.props.isMobile)){\n                          return null;\n                        }\n                        return (\n                          <Flex\n                            height={'100%'}\n                            flexDirection={'column'}\n                            alignItems={'flex-start'}\n                            justifyContent={'center'}\n                            {...fieldInfo.parentProps}\n                            style={fieldInfo.style || {\n                              overflow:'hidden'\n                            }}\n                            width={colInfo.fields.length>1 ? 'auto' : 1}\n                            id={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                            key={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                          >\n                            <FieldComponent\n                              {...this.props}\n                              fieldInfo={fieldInfo}\n                              colProps={colInfo.props}\n                              parentId={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                            />\n                          </Flex>\n                        );\n                      })\n                    }\n                  </Flex>\n                </Flex>\n              )\n            })\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default TableRow;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableCellHeader from '../TableCellHeader/TableCellHeader';\n\nclass TableHeader extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        px={[2,4]}\n        pb={[2,3]}\n        flexDirection={'row'}\n      >\n        {\n          this.props.cols.map((colInfo,colIndex) => {\n            // Skip non-mobile columns\n            if (colInfo.visible === false || (colInfo.mobile === false && this.props.isMobile)){\n              return null;\n            }\n\n            return (colInfo.title && colInfo.title.length) ? (\n              <TableCellHeader\n                {...this.props}\n                {...colInfo.props}\n                desc={colInfo.desc}\n                title={colInfo.title}\n                key={`col-header-${colIndex}`}\n              >\n                {colInfo.title}\n              </TableCellHeader>\n            ) : (\n              <Flex key={`col-header-${colIndex}`} {...colInfo.props}></Flex>\n            )\n          })\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TableHeader;\n","import React, { Component } from 'react';\nimport styles from './Migrate.module.scss';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport TransactionField from '../TransactionField/TransactionField';\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\nimport { Box, Flex, Text, Icon, Checkbox, Input, Link, Image } from \"rimble-ui\";\n\nclass Migrate extends Component {\n\n  state = {\n    nonce:0,\n    loading:true,\n    action:'migrate',\n    processing:{\n      approve:{\n        txHash:null,\n        loading:false\n      },\n      migrate:{\n        txHash:null,\n        loading:false\n      },\n      redeem:{\n        txHash:null,\n        loading:false\n      }\n    },\n    inputValue:{},\n    usePermit:false,\n    oldTokenName:null,\n    oldIdleTokens:null,\n    skipMigration:false,\n    buttonDisabled:true,\n    migrationEnabled:null,\n    fastBalanceSelector:{},\n    oldContractBalance:null,\n    biconomyLimitReached:false,\n    metaTransactionsEnabled:true,\n    oldContractTokenDecimals:null,\n    migrationContractApproved:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  setAction = (action) => {\n    if (action !== null){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  toggleSkipMigration = (skipMigration) => {\n    this.setState({\n      skipMigration\n    });\n\n    if (typeof this.props.toggleSkipMigration === 'function'){\n      this.props.toggleSkipMigration(skipMigration);\n    }\n  }\n\n  changeInputValue = (e) => {\n    if (!this.state.action){\n      return false;\n    }\n    const amount = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: null\n      },\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  checkButtonDisabled = (amount=null) => {\n    if (!this.state.action){\n      return false;\n    }\n    if (!amount){\n      amount = this.state.inputValue[this.state.action];\n    }\n    let buttonDisabled = true;\n    if (amount){\n      buttonDisabled = amount.lte(0);\n      switch (this.state.action){\n        case 'migrate':\n        case 'redeem':\n          buttonDisabled = buttonDisabled || amount.gt(this.state.oldIdleTokens);\n        break;\n        default:\n        break;\n      }\n    }\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  setInputValue = () => {\n    if (!this.state.action || this.state.fastBalanceSelector[this.state.action] === null){\n      return false;\n    }\n\n    let amount = null;\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector[this.state.action]).div(100);\n\n    switch(this.state.action){\n      case 'migrate':\n      case 'redeem':\n        amount = this.state.oldIdleTokens ? this.functionsUtil.BNify(this.state.oldIdleTokens).times(selectedPercentage) : null;\n      break;\n      default:\n      break;\n    }\n\n    this.setState((prevState) => ({\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  setFastBalanceSelector = (percentage) => {\n    if (!this.state.action){\n      return false;\n    }\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: percentage\n      }\n    }));\n  }\n\n  executeAction = async () => {\n\n    const inputValue = this.state.inputValue[this.state.action];\n\n    if (this.state.buttonDisabled || !inputValue || this.functionsUtil.BNify(inputValue).lte(0)){\n      return false;\n    }\n\n    const loading = true;\n\n    switch (this.state.action){\n      case 'redeem':\n\n        if (!this.props.tokenConfig.migration || !this.props.tokenConfig.migration.oldContract){\n          return false;\n        }\n\n        const oldContractName = this.props.tokenConfig.migration.oldContract.name;\n\n        const idleTokenToRedeem = this.functionsUtil.normalizeTokenAmount(inputValue,18);\n\n        // Get amounts for best allocations\n        const _skipRebalance = true;\n        let paramsForRedeem = null;\n\n        /*\n        if (this.props.account){\n          const callParams = { from: this.props.account, gas: this.props.web3.utils.toBN(5000000) };\n          paramsForRedeem = await this.functionsUtil.genericContractCall(oldContractName,'getParamsForRedeemIdleToken',[idleTokenToRedeem, _skipRebalance],callParams);\n        }\n        */\n\n        const _clientProtocolAmountsRedeem = paramsForRedeem && paramsForRedeem.length ? paramsForRedeem[1] : [];\n        const gasLimitRedeem = _clientProtocolAmountsRedeem.length && _clientProtocolAmountsRedeem.indexOf('0') === -1 ? this.functionsUtil.BNify(1500000) : this.functionsUtil.BNify(1000000);\n\n        const callbackRedeem = (tx,error) => {\n          const txSucceeded = tx.status === 'success';\n\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: `Redeem_old`,\n            eventAction: this.props.selectedToken,\n            eventLabel: tx.status,\n            eventValue: parseInt(inputValue)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (txSucceeded){\n            this.setState((prevState) => ({\n              inputValue:{\n                ...prevState.inputValue,\n                [this.state.action]: this.functionsUtil.BNify(0)\n              }\n            }));\n          }\n        };\n\n        const callbackReceiptRedeem = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                ...prevState.processing[this.state.action],\n                txHash\n              }\n            }\n          }));\n        };\n\n        this.props.contractMethodSendWrapper(oldContractName, 'redeemIdleToken', [\n          idleTokenToRedeem, _skipRebalance, _clientProtocolAmountsRedeem\n        ], null, callbackRedeem, callbackReceiptRedeem, gasLimitRedeem);\n      break;\n      default:\n      break;\n    }\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        [this.state.action]:{\n          ...prevState.processing[this.state.action],\n          loading\n        }\n      }\n    }));\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n    this.checkMigration();\n  }\n\n  componentDidMount(){\n    \n  }\n\n  componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const biconomyChanged = prevProps.biconomy !== this.props.biconomy;\n    const usePermitChanged = prevProps.usePermit !== this.props.usePermit;\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken || (!prevProps.tokenConfig && this.props.tokenConfig);\n\n    if (tokenChanged || accountChanged || biconomyChanged || usePermitChanged){\n      this.checkMigration();\n    }\n\n    const actionChanged = this.state.action !== prevState.action;\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector[this.state.action] !== prevState.fastBalanceSelector[this.state.action];\n    if (actionChanged || fastBalanceSelectorChanged){\n      this.setInputValue();\n    }\n\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue;\n    if (inputValueChanged){\n      this.checkButtonDisabled();\n    }\n\n    const contractApprovedChanged = prevState.migrationContractApproved !== this.state.migrationContractApproved;\n    if (contractApprovedChanged){\n      // console.log(this.props.selectedToken,'contractApprovedChanged',this.state.migrationContractApproved);\n      if (typeof this.props.callbackApprove === 'function'){\n        this.props.callbackApprove(this.state.migrationContractApproved);\n      }\n    }\n  }\n\n  toggleMetaTransactionsEnabled = (metaTransactionsEnabled) => {\n    this.setState({\n      metaTransactionsEnabled\n    });\n  }\n\n  checkMigrationContractApproved = async () => {\n    if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.migrationContract){\n      const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n      const migrationContractName = migrationContractInfo.name;\n      const migrationContract = this.functionsUtil.getContractByName(migrationContractName);\n      if (migrationContract){\n        const oldContractName = this.props.tokenConfig.migration.oldContract.name;\n        const tokenApproved = await this.functionsUtil.checkTokenApproved(oldContractName,migrationContractInfo.address,this.props.account);\n        return tokenApproved;\n      }\n    }\n    return false;\n  }\n\n  checkMigration = async () => {\n\n    if (!this.props.tokenConfig || !this.props.account){\n      return false;\n    }\n\n    let loading = true;\n    this.setState({\n      loading,\n      processing:{\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        migrate:{\n          txHash:null,\n          loading:false\n        },\n        redeem:{\n          txHash:null,\n          loading:false\n        }\n      },\n    });\n\n    let migrationEnabled = false;\n    let oldTokenName = 'idleTokens';\n    let oldIdleTokensConverted = null;\n    let oldContractTokenDecimals = null;\n    let migrationContractApproved = false;\n    let oldTokenPrice = this.functionsUtil.BNify(0);\n    let oldIdleTokens = this.functionsUtil.BNify(0);\n    let oldContractBalance = this.functionsUtil.BNify(0);\n    const getTokenPrice = this.props.getTokenPrice !== undefined ? this.props.getTokenPrice : true;\n\n    // Check migration contract enabled and balance\n    if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.enabled){\n      const oldContractInfo = this.props.tokenConfig.migration.oldContract;\n      const oldContractABI = oldContractInfo.abi;\n      const oldContractName = oldContractInfo.name;\n      let oldContract = this.functionsUtil.getContractByName(oldContractName);\n\n      // Initialize contract\n      if (!oldContract && oldContractABI){\n        oldContract = await this.props.initContract(oldContractName,oldContractInfo.address,oldContractABI);\n      }\n\n      let migrationContract = this.functionsUtil.getContractByName(this.props.tokenConfig.migration.migrationContract.name);\n\n      if (!migrationContract && this.props.tokenConfig.migration.migrationContract.abi){\n        migrationContract = await this.props.initContract(this.props.tokenConfig.migration.migrationContract.name,this.props.tokenConfig.migration.migrationContract.address,this.props.tokenConfig.migration.migrationContract.abi);\n      }\n\n      if (oldContract && migrationContract){\n\n        oldTokenName = this.props.tokenConfig.migration.oldContract.token;\n\n        [\n          oldContractTokenDecimals,\n          migrationContractApproved,\n          oldContractBalance,\n          oldTokenPrice,\n        ] = await Promise.all([\n          // Get old contract token decimals\n          this.functionsUtil.getTokenDecimals(oldContractName),\n          // Check migration contract approval\n          this.checkMigrationContractApproved(),\n          // Check old contractBalance\n          this.functionsUtil.getContractBalance(oldContractName,this.props.account),\n          // Get token price\n          (getTokenPrice ? this.functionsUtil.genericContractCall(oldContractName,'tokenPrice') : null)\n        ]);\n\n        // console.log('Migration',oldContractName,migrationContractApproved,this.props.selectedToken,oldContractBalance ? oldContractBalance.toString() : null,oldTokenPrice ? oldTokenPrice.toString() : null);\n\n        if (oldContractBalance){\n          // Convert old idleTokens\n          oldIdleTokens = this.functionsUtil.fixTokenDecimals(oldContractBalance,oldContractTokenDecimals);\n          if (oldTokenPrice){\n            oldTokenPrice = this.functionsUtil.fixTokenDecimals(oldTokenPrice,this.props.tokenConfig.decimals);\n            oldIdleTokensConverted = this.functionsUtil.BNify(oldIdleTokens).times(this.functionsUtil.BNify(oldTokenPrice));\n          }\n          // Enable migration if old contract balance if greater than 0\n          migrationEnabled = this.functionsUtil.BNify(oldContractBalance).gt(0);\n        }\n      }\n    }\n    \n    loading = false;\n\n    // If use Permit don't ask for Approve\n    const usePermit = this.props.usePermit;\n\n    const newState = {\n      loading,\n      usePermit,\n      oldTokenName,\n      oldIdleTokens,\n      migrationEnabled,\n      oldContractBalance,\n      oldIdleTokensConverted,\n      oldContractTokenDecimals,\n      migrationContractApproved\n    };\n\n    if (this.props.biconomy){\n      const biconomyLimits = await this.functionsUtil.checkBiconomyLimits(this.props.account);\n      if (biconomyLimits && !biconomyLimits.allowed){\n        newState.biconomyLimitReached = true;\n      }\n    }\n\n    if (typeof this.props.migrationEnabledCallback === 'function'){\n      this.props.migrationEnabledCallback(migrationEnabled);\n    }\n\n    // console.log('checkMigration',this.props.selectedToken,'usePermit',this.props.usePermit,'migrationContractApproved',newState.migrationContractApproved);\n\n    // Set migration contract balance\n    return this.setState(newState);\n  }\n\n  disapproveMigration = async (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n      this.disableERC20(null,this.props.tokenConfig.migration.oldContract.name,migrationContractInfo.address);\n    }\n  }\n\n  cancelTransaction = async () => {\n    this.setState({\n      processing: {\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        migrate:{\n          txHash:null,\n          loading:false\n        },\n        redeem:{\n          txHash:null,\n          loading:false\n        }\n      },\n    });\n  }\n\n  approveMigration = async (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n\n      // Check if the migration contract is approved\n      const migrationContractApproved = await this.checkMigrationContractApproved();\n\n      if (!migrationContractApproved){\n\n        const callbackApprove = (tx,error) => {\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: 'Migrate',\n            eventAction: 'approve',\n            eventLabel: tx ? tx.status : null\n          };\n\n          const txSucceeded = tx && tx.status === 'success';\n\n          // console.log('callbackApprove',tx,error);\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            migrationContractApproved: txSucceeded, // True\n            processing: {\n              ...prevState.processing,\n              approve:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (typeof this.props.callbackApprove === 'function' && txSucceeded){\n            this.props.callbackApprove(tx);\n          }\n\n          this.checkMigration();\n        };\n\n        const callbackReceiptApprove = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              approve:{\n                ...prevState.processing.approve,\n                txHash\n              }\n            }\n          }));\n        };\n\n        this.functionsUtil.enableERC20(this.props.tokenConfig.migration.oldContract.name,migrationContractInfo.address,callbackApprove,callbackReceiptApprove);\n\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            approve:{\n              txHash:null,\n              loading:true\n            }\n          },\n          migrationContractApproved:false\n        }));\n      } else {\n        this.setState({\n          migrationContractApproved:true\n        });\n      }\n    }\n  }\n\n  migrate = async (e,migrationMethod) => {\n    e.preventDefault();\n\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n\n      // Check if the migration contract is approved\n      // const migrationContractApproved = await this.checkMigrationContractApproved();\n\n      // if (!migrationContractApproved){\n      //   return this.approveMigration();\n      // } else {\n        const callbackMigrate = (tx,error) => {\n\n          if (!error && tx && tx.status === 'error'){\n            error = {\n              message:'Unknown error'\n            };\n          } else if (!tx && error){\n            tx = {\n              status:'error'\n            };\n          }\n\n          const txSucceeded = tx && tx.status === 'success';\n\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: 'Migrate',\n            eventAction: migrationMethod,\n            eventLabel: tx ? tx.status : null,\n            eventValue: parseInt(oldIdleTokens)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          // console.log('callbackMigrate',tx,tx.status,txSucceeded,error,this.props.migrationCallback);\n\n          if (txSucceeded){\n            // Toast message\n            window.toastProvider.addMessage(`Migration completed`, {\n              secondaryMessage: `Your funds has been migrated`,\n              colorTheme: 'light',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"success\",\n            });\n\n            if (this.props.migrationCallback && typeof this.props.migrationCallback === 'function'){\n              this.props.migrationCallback(tx);\n            }\n\n          } else { // Show migration error toast only for real error\n            window.toastProvider.addMessage(`Migration error`, {\n              secondaryMessage: `The migration has failed, try again...`,\n              colorTheme: 'light',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"failure\",\n            });\n\n            // Check migration if failed\n            this.checkMigration();\n          }\n\n          this.setState((prevState) => ({\n            migrationEnabled:txSucceeded ? false : true,\n            processing: {\n              ...prevState.processing,\n              migrate:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n        }\n\n        const callbackReceiptMigrate = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              migrate:{\n                ...prevState.processing.migrate,\n                txHash\n              }\n            }\n          }));\n        };\n\n        const callbackPermit = () => {\n          if (typeof this.props.callbackPermit === 'function'){\n            this.props.callbackPermit();\n          }\n        }\n\n        const useMetaTx = this.props.biconomy && this.state.metaTransactionsEnabled && !this.state.biconomyLimitReached;\n\n        // Call migration contract function to migrate funds\n        const oldIdleTokens = this.state.oldIdleTokens;\n        const toMigrate = this.props.showBalanceSelector ? this.functionsUtil.integerValue(this.functionsUtil.normalizeTokenAmount(this.state.inputValue[this.state.action],this.state.oldContractTokenDecimals)) : this.functionsUtil.integerValue(this.state.oldContractBalance);\n        // const toMigrate =  this.functionsUtil.normalizeTokenAmount('1',this.state.oldContractTokenDecimals).toString(); // TEST AMOUNT\n\n        let _skipRebalance = typeof this.props.tokenConfig.skipMintForDeposit !== 'undefined' ? this.props.tokenConfig.skipMintForDeposit : this.functionsUtil.getGlobalConfig(['contract','methods','migrate','skipRebalance']);\n\n        // Mint if someone mint over X amount\n        let minAmountForRebalance = null;\n        \n        if (_skipRebalance){\n\n          // Check if the amount is over a certain amount to rebalance the pool\n          if (useMetaTx){\n            minAmountForRebalance = this.functionsUtil.getGlobalConfig(['contract','methods','migrate','minAmountForRebalanceMetaTx']);\n          } else {\n            minAmountForRebalance = this.functionsUtil.getGlobalConfig(['contract','methods','migrate','minAmountForRebalance']);\n          }\n\n          if (minAmountForRebalance){\n            const amountToDeposit = await this.functionsUtil.convertTokenBalance(oldIdleTokens,this.props.selectedToken,this.props.tokenConfig,false);\n            if (amountToDeposit.gte(this.functionsUtil.BNify(minAmountForRebalance))){\n              _skipRebalance = false;\n            }\n          }\n        }\n\n        let migrationParams = this.props.migrationParams ? this.props.migrationParams : [toMigrate,this.props.tokenConfig.migration.oldContract.address,this.props.tokenConfig.idle.address,this.props.tokenConfig.address,_skipRebalance];\n\n        if (typeof migrationParams === 'function'){\n          migrationParams = migrationParams(toMigrate);\n        }\n\n        // Check if Biconomy is enabled\n        if (useMetaTx){\n          const functionSignature = migrationContract.methods[migrationMethod](...migrationParams).encodeABI();\n          this.functionsUtil.sendBiconomyTxWithPersonalSign(migrationContractInfo.name, functionSignature, callbackMigrate, callbackReceiptMigrate);\n          // this.functionsUtil.sendBiconomyTx(migrationContractInfo.name, migrationContractInfo.address, functionSignature, callbackMigrate, callbackReceiptMigrate);\n        } else {\n          const permitContract = this.functionsUtil.getContractByName(this.props.tokenConfig.name);\n          const functionInfo = migrationContractInfo.functions.find( f => f.name === migrationMethod );\n          if (this.props.usePermit && permitContract){\n            this.functionsUtil.sendTxWithPermit(this.props.tokenConfig.name, this.props.account, migrationContractInfo.name, functionInfo.permitName, migrationParams, callbackMigrate, callbackReceiptMigrate, callbackPermit);\n          } else {\n            // Send migration tx\n            this.functionsUtil.contractMethodSendWrapper(migrationContractInfo.name, migrationMethod, migrationParams, callbackMigrate, callbackReceiptMigrate);\n          }\n        }\n\n        // debugger;\n\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            migrate:{\n              txHash:null,\n              loading:true\n            }\n          }\n        }));\n      // }\n    }\n\n    return false;\n  }\n\n  render() {\n\n    if (!this.props.tokenConfig || !this.props.selectedToken){\n      return null;\n    }\n\n    const contractApproved = this.props.usePermit || this.state.migrationContractApproved;\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationEnabled = batchMigrationInfo.enabled && typeof batchMigrationInfo.props.availableTokens[this.props.tokenConfig.idle.token] !== 'undefined';\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    // console.log('contractApproved',contractApproved,this.props.usePermit,this.state.migrationContractApproved);\n\n    const SkipMigrationComponent = (props) => (\n      <DashboardCard\n        cardProps={{\n          pt:2,\n          pb:3,\n          px:2,\n          mb:2,\n          display:'flex',\n          alignItems:'center',\n          flexDirection:'column',\n          justifyContent:'center',\n          mt:this.state.skipMigration ? 3 : 2,\n        }}\n      >\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Icon\n            size={'1.8em'}\n            color={'cellText'}\n            name={'FastForward'}\n          />\n        </Flex>\n        <Checkbox\n          required={false}\n          checked={this.state.skipMigration}\n          label={`Skip migration and deposit in Idle v4`}\n          onChange={ e => this.toggleSkipMigration(e.target.checked) }\n        />\n      </DashboardCard>\n    );\n\n    const biconomyEnabled = this.functionsUtil.getGlobalConfig(['network','providers','biconomy','enabled']) && !this.state.biconomyLimitReached;\n\n    return (\n      this.state.loading && this.props.account ? (\n        <DashboardCard\n          cardProps={{\n            p:3,\n            mt:3,\n            minHeight:'195px',\n            style:{\n              display:'flex',\n              alignItems:'center',\n              justifyContent:'center'\n            }\n          }}\n        >\n          <FlexLoader\n            flexProps={{\n              flexDirection:'row'\n            }}\n            loaderProps={{\n              size:'30px'\n            }}\n            textProps={{\n              ml:2\n            }}\n            text={'Checking migration...'}\n          />\n        </DashboardCard>\n      ) : (\n        (this.state.migrationEnabled && !this.state.skipMigration) ? (\n          <Box width={1}>\n            {\n              !this.props.isMigrationTool &&\n              <Flex\n                mt={3}\n                flexDirection={'column'}\n              >\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  >\n                    <Icon\n                      size={'2.3em'}\n                      color={'cellText'}\n                      name={ this.props.isMigrationTool ? 'SwapHoriz' : 'Warning' }\n                    />\n                    <Text\n                      mt={1}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      { this.props.migrateTextBefore !== null ? this.props.migrateTextBefore : null }\n                      { this.props.migrateTextBefore !== null &&\n                        <br />\n                      }\n                      You { !this.props.isMigrationTool ? 'still' : '' } have <strong>{this.state.oldIdleTokens.toFixed(4)} {this.state.oldTokenName} {this.state.oldIdleTokensConverted ? `(${this.state.oldIdleTokensConverted.toFixed(4)} ${this.props.selectedToken})` : ''}</strong> to migrate.<br />\n                      { this.props.migrateText !== null ? this.props.migrateText : 'Please use the section below to migrate or redeem your old tokens.' }\n                    </Text>\n                  </Flex>\n                </DashboardCard>\n              </Flex>\n            }\n            {\n              (this.props.showActions === undefined || this.props.showActions) && \n                <Flex\n                  mt={2}\n                  flexDirection={'column'}\n                >\n                  {\n                    !this.props.isMigrationTool && \n                      <SkipMigrationComponent />\n                  }\n                  <Text mb={2}>\n                    Choose the action:\n                  </Text>\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'space-between'}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        width:0.48,\n                        onMouseDown:() => {\n                          this.setAction('migrate');\n                        }\n                      }}\n                      isInteractive={true}\n                      isActive={ this.state.action === 'migrate' }\n                    >\n                      <Flex\n                        my={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <TransactionField\n                          transaction={{\n                            action:'migrate'\n                          }}\n                          fieldInfo={{\n                            name:'icon',\n                            props:{\n                              mr:3\n                            }\n                          }}\n                        />\n                        <Text\n                          fontSize={3}\n                          fontWeight={3}\n                        >\n                          Migrate\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        width:0.48,\n                        onMouseDown:() => {\n                          this.setAction('redeem');\n                        }\n                      }}\n                      isInteractive={true}\n                      isActive={ this.state.action === 'redeem' }\n                    >\n                      <Flex\n                        my={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <TransactionField\n                          transaction={{\n                            action:'redeem'\n                          }}\n                          fieldInfo={{\n                            name:'icon',\n                            props:{\n                              mr:3\n                            }\n                          }}\n                        />\n                        <Text\n                          fontSize={3}\n                          fontWeight={3}\n                        >\n                          Redeem\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                </Flex>\n            }\n            {\n              this.state.action === 'migrate' ? (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  flexDirection={'column'}\n                >\n                  {\n                    (batchMigrationEnabled && batchMigrationDepositEnabled && !this.props.isMigrationTool) &&\n                      <Flex\n                        mb={3}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <Link\n                          textAlign={'center'}\n                          hoverColor={'primary'}\n                          href={`/#/dashboard/tools/${batchMigrationInfo.route}/${this.props.tokenConfig.idle.token}`}\n                        >\n                          Gas fees too high? Save gas with our Batch Migrator!\n                        </Link>\n                        <Icon\n                          ml={1}\n                          size={'1em'}\n                          color={'primary'}\n                          name={'LocalGasStation'}\n                        />\n                      </Flex>\n                  }\n                  {\n                    contractApproved ? (\n                      this.state.processing.migrate.loading ? (\n                        <Flex\n                          mt={3}\n                          flexDirection={'column'}\n                        >\n                          <TxProgressBar\n                            web3={this.props.web3}\n                            hash={this.state.processing.migrate.txHash}\n                            endMessage={`Finalizing migration request...`}\n                            cancelTransaction={this.cancelTransaction.bind(this)}\n                            waitText={ this.props.waitText ? this.props.waitText : 'Migration estimated in'}\n                            sendingMessage={ this.props.biconomy && this.state.metaTransactionsEnabled ? 'Sending meta-transaction...' : 'Sending transaction...' }\n                          />\n                        </Flex>\n                      ) : this.props.showBalanceSelector ? (\n                        <Flex\n                          mt={1}\n                          flexDirection={'column'}\n                        >\n                          <Flex\n                            mb={3}\n                            width={1}\n                            flexDirection={'column'}\n                          >\n                            <Flex\n                              mb={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={this.props.balanceSelectorInfo ? 'space-between' : 'flex-end'}\n                            >\n                              {\n                                this.props.balanceSelectorInfo && (\n                                  <Flex\n                                    width={1}\n                                    maxWidth={'50%'}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                  >\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      textAlign={'left'}\n                                      style={{\n                                        maxWidth:'100%',\n                                        overflow:'hidden',\n                                        whiteSpace:'nowrap',\n                                        textOverflow:'ellipsis'\n                                      }}\n                                      color={this.props.balanceSelectorInfo.color ? this.props.balanceSelectorInfo.color : 'copyColor'}\n                                    >\n                                      {this.props.balanceSelectorInfo.text}\n                                    </Text>\n                                  </Flex>\n                                )\n                              }\n                              {\n                                this.state.oldIdleTokens && (\n                                  <Flex\n                                    width={1}\n                                    maxWidth={'50%'}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'flex-end'}\n                                  >\n                                    <Link\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      color={'dark-gray'}\n                                      textAlign={'right'}\n                                      hoverColor={'copyColor'}\n                                      onClick={ (e) => this.setFastBalanceSelector(100) }\n                                    >\n                                      Balance: {this.state.oldIdleTokens.toFixed(6)} {this.props.selectedToken}\n                                    </Link>\n                                  </Flex>\n                                )\n                              }\n                            </Flex>\n                            <Input\n                              min={0}\n                              type={\"number\"}\n                              required={true}\n                              height={'3.4em'}\n                              borderRadius={2}\n                              fontWeight={500}\n                              borderColor={'cardBorder'}\n                              backgroundColor={'cardBg'}\n                              boxShadow={'none !important'}\n                              placeholder={'Insert amount'}\n                              onChange={this.changeInputValue.bind(this)}\n                              border={`1px solid ${this.props.theme.colors.divider}`}\n                              value={this.state.inputValue[this.state.action] ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]).toFixed() : ''}\n                            />\n                            <Flex\n                              mt={2}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              {\n                                [25,50,75,100].map( percentage => (\n                                  <FastBalanceSelector\n                                    percentage={percentage}\n                                    key={`selector_${percentage}`}\n                                    onMouseDown={()=>this.setFastBalanceSelector(percentage)}\n                                    isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(percentage)}\n                                  />\n                                ))\n                              }\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            mt={1}\n                            width={1}\n                            alignItems={'center'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.props.tokenConfig.migration.migrationContract.functions.map((functionInfo,i) => {\n                                const functionName = functionInfo.name;\n                                return (\n                                  <RoundButton\n                                    buttonProps={{\n                                      width:[1,0.5],\n                                      disabled:this.state.buttonDisabled,\n                                      mainColor:this.props.theme.colors.migrate\n                                    }}\n                                    key={`migrate_${i}`}\n                                    handleClick={ e => this.migrate(e,functionName) }\n                                  >\n                                    { functionInfo.label }\n                                  </RoundButton>\n                                )\n                              })\n                            }\n                          </Flex>\n                        </Flex>\n                      ) : (\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:2,\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            {\n                              this.props.migrationImage ? (\n                                <Image\n                                  {...this.props.migrationImage}\n                                />\n                              ) : (\n                                <Icon\n                                  size={'2.3em'}\n                                  color={'cellText'}\n                                  name={ this.props.migrationIcon ? this.props.migrationIcon : (this.props.isMigrationTool ? 'SwapHoriz' : 'Repeat') }\n                                />\n                              )\n                            }\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              {\n                                this.props.migrationText ? (\n                                  <Text.span\n                                    migrationTextProps={this.props.migrationTextProps}\n                                    dangerouslySetInnerHTML={{\n                                      __html:this.props.migrationText\n                                    }}\n                                  >\n                                  </Text.span>\n                                ) : (\n                                  <Text.span\n                                    color={'cellText'}\n                                  >\n                                    You are one step away from the migration of your { this.props.isMigrationTool ? this.state.oldIdleTokens.toFixed(4) : 'old' } {this.state.oldTokenName}{ this.props.isMigrationTool ? ` into the Idle ${this.props.tokenConfig.token} ${this.props.selectedStrategy} strategy` : '' }!\n                                  </Text.span>\n                                )\n                              }\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                            {\n                              biconomyEnabled && \n                                <Flex\n                                  py={3}\n                                  px={2}\n                                  mt={2}\n                                  width={1}\n                                  borderRadius={2}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                  backgroundColor={'dashboardBg'}\n                                  border={`1px solid ${this.props.theme.colors.boxBorder}`}\n                                >\n                                  <Text\n                                    mt={1}\n                                    fontSize={1}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    {\n                                      this.props.biconomy ?\n                                        `Meta-Transactions allow you to migrate without spending a dime! But, if you are stuck, please disable it and try again.`\n                                      :\n                                        'Your wallet does not support Meta-transactions, you are still able to migrate with a normal transaction.'\n                                    }\n                                  </Text>\n                                  {\n                                  this.props.biconomy &&\n                                    <Checkbox\n                                      mt={2}\n                                      required={false}\n                                      label={\"Migrate with Meta-Transaction\"}\n                                      checked={this.state.metaTransactionsEnabled}\n                                      onChange={ e => this.toggleMetaTransactionsEnabled(e.target.checked) }\n                                    />\n                                  }\n                                </Flex>\n                            }\n                            {\n                              this.props.tokenConfig.migration.migrationContract.functions.map((functionInfo,i) => {\n                                const functionName = functionInfo.name;\n                                return (\n                                  <RoundButton\n                                    buttonProps={{\n                                      mt:3,\n                                      width:[1,0.5],\n                                      mainColor:this.props.theme.colors.migrate\n                                    }}\n                                    key={`migrate_${i}`}\n                                    handleClick={ e => this.migrate(e,functionName) }\n                                  >\n                                    { functionInfo.label }\n                                  </RoundButton>\n                                )\n                              })\n                            }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      )\n                    ) : this.state.processing.approve.loading ? (\n                      <Flex\n                        mt={3}\n                        flexDirection={'column'}\n                      >\n                        <TxProgressBar\n                          web3={this.props.web3}\n                          waitText={`Approve estimated in`}\n                          hash={this.state.processing.approve.txHash}\n                          endMessage={`Finalizing approve request...`}\n                          cancelTransaction={this.cancelTransaction.bind(this)}\n                        />\n                      </Flex>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          mt:2,\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            size={'2.3em'}\n                            name={'LockOpen'}\n                            color={'cellText'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            {\n                              this.props.approveText ? this.props.approveText : `To migrate your ${ !this.props.isMigrationTool ? 'old' : '' } ${this.state.oldTokenName} you need to approve our Smart-Contract first.`\n                            }\n                          </Text>\n                          <RoundButton\n                            buttonProps={{\n                              mt:3,\n                              width:[1,1/2]\n                            }}\n                            handleClick={this.approveMigration.bind(this)}\n                          >\n                            Approve\n                          </RoundButton>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  }\n                </Flex>\n              ) : (\n                !this.state.processing[this.state.action].loading ? (\n                  <Flex\n                    mt={3}\n                    flexDirection={'column'}\n                  >\n                    <Input\n                      min={0}\n                      type={\"number\"}\n                      required={true}\n                      height={'3.4em'}\n                      borderRadius={2}\n                      fontWeight={500}\n                      className={styles.input}\n                      borderColor={'cardBorder'}\n                      backgroundColor={'cardBg'}\n                      boxShadow={'none !important'}\n                      onChange={this.changeInputValue.bind(this)}\n                      border={`1px solid ${this.props.theme.colors.divider}`}\n                      placeholder={`Insert ${this.state.oldTokenName} amount`}\n                      value={this.state.inputValue[this.state.action] !== null ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]).toString() : ''}\n                    />\n                    <Flex\n                      mt={3}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'space-between'}\n                    >\n                      <FastBalanceSelector\n                        percentage={25}\n                        onMouseDown={()=>this.setFastBalanceSelector(25)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(25)}\n                      />\n                      <FastBalanceSelector\n                        percentage={50}\n                        onMouseDown={()=>this.setFastBalanceSelector(50)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(50)}\n                      />\n                      <FastBalanceSelector\n                        percentage={75}\n                        onMouseDown={()=>this.setFastBalanceSelector(75)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(75)}\n                      />\n                      <FastBalanceSelector\n                        percentage={100}\n                        onMouseDown={()=>this.setFastBalanceSelector(100)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(100)}\n                      />\n                    </Flex>\n                    <Flex\n                      mt={3}\n                      justifyContent={'center'}\n                    >\n                      <RoundButton\n                        buttonProps={{\n                          width:[1,1/2],\n                          disabled:this.state.buttonDisabled,\n                          style:{\n                            textTransform:'capitalize'\n                          }\n                        }}\n                        handleClick={this.state.buttonDisabled ? null : this.executeAction.bind(this) }\n                      >\n                        {this.state.action}\n                      </RoundButton>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Flex\n                    mt={4}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      web3={this.props.web3}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                      hash={this.state.processing[this.state.action].txHash}\n                      endMessage={`Finalizing ${this.state.action} request...`}\n                      waitText={`${this.functionsUtil.capitalize(this.state.action)} estimated in`}\n                    />\n                  </Flex>\n                )\n              )\n            }\n          </Box>\n        ) : (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'column'}\n            justifyContent={'center'}\n          >\n            {\n              (!this.props.isMigrationTool && this.state.migrationEnabled) && \n                <SkipMigrationComponent />\n            }\n            {\n              this.props.children ? this.props.children : null\n            }\n          </Flex>\n        )\n      )\n    )\n  }\n}\n\nexport default Migrate;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport AssetField from '../AssetField/AssetField';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass AssetsList extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    return (\n      <Flex id=\"assets-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"assets-list\" flexDirection={'column'}>\n          {\n            enabledTokens.map(token => {\n              const tokenConfig = this.props.availableTokens[token];\n              if (!tokenConfig){\n                return null;\n              }\n              return (\n                <TableRow\n                  token={token}\n                  {...this.props}\n                  key={`asset-${token}`}\n                  tokenConfig={tokenConfig}\n                  rowId={`asset-col-${token}`}\n                  cardId={`asset-card-${token}`}\n                  fieldComponent={this.props.fieldComponent || AssetField}\n                />\n              );\n            })\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default AssetsList;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__38P6I\",\"link\":\"Footer_link__13yZU\"};","import { tint, shade, readableColor } from 'polished';\n\n// rimble base colors\nconst baseColors = {\n  black: '#000e1a',\n  white: '#FFF',\n  blue: '#0036ff',\n  darkBlue: '#0028be',\n  green: '#28C081',\n  yellow: '#FD9D28',\n  red: '#DC2C10',\n  blurple: '#4E3FCE',\n  consensysblue: '#3259D6',\n};\n\n// rimble palette\nconst colors = {\n  blurple: {\n    base: baseColors.blurple,\n    text: readableColor(baseColors.blurple),\n    light: [null, tint(0.2, baseColors.blurple)],\n    dark: [null, shade(0.2, baseColors.blurple)],\n  },\n  blue: {\n    base: baseColors.blue,\n    text: readableColor(baseColors.blue),\n    light: [null, tint(0.9, baseColors.blue)],\n    dark: [null, shade(0.4, baseColors.blue)],\n  },\n  green: {\n    base: baseColors.green,\n    text: baseColors.white,\n    light: [null, tint(0.9, baseColors.green)],\n    dark: [null, shade(0.4, baseColors.green)],\n  },\n  yellow: {\n    base: baseColors.yellow,\n    text: readableColor(baseColors.yellow),\n    light: [null, tint(0.9, baseColors.yellow)],\n    dark: [null, shade(0.4, baseColors.yellow)],\n  },\n  red: {\n    base: baseColors.red,\n    text: readableColor(baseColors.red),\n    light: [null, tint(0.9, baseColors.red)],\n    dark: [null, shade(0.4, baseColors.red)],\n  },\n};\n\nconst blurple = colors.blurple;\nconst blue = colors.blue;\nconst green = colors.green;\nconst yellow = colors.yellow;\nconst red = colors.red;\n\nexport { blurple };\nexport { blue };\nexport { green };\nexport { yellow };\nexport { red };\nexport default baseColors;\n","import { Flex, Icon } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass VariationNumber extends Component {\n\n  render() {\n\n    const IconDirection = () => (\n      <Icon\n        color={ this.props.direction === 'up' ?  '#6dd400' : '#f7b500' }\n        name={ this.props.direction === 'up' ?  'ArrowDropUp' : 'ArrowDropDown' }\n        size={ this.props.iconSize ? this.props.iconSize : ( this.props.isMobile ? '1.4em' : '2em') }\n      />\n    );\n\n    return (\n      <Flex\n        alignItems={'center'}\n        flexDirection={'row'}\n        width={ this.props.width ? this.props.width : 1 }\n        justifyContent={this.props.justifyContent ? this.props.justifyContent : 'center'}\n      >\n        {\n          (!this.props.iconPos || this.props.iconPos==='left') &&\n            <IconDirection />\n        }\n        {this.props.children}\n        {\n          this.props.iconPos==='right' &&\n            <IconDirection />\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default VariationNumber;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchInput\":\"GenericSelector_searchInput__vl2hJ\",\"genericSelector\":\"GenericSelector_genericSelector__1Nqkd\",\"dark\":\"GenericSelector_dark__zCOnP\",\"searchInputHidden\":\"GenericSelector_searchInputHidden__2Zm1B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loading-dots\":\"LoadingSpinner_loading-dots__2-3YZ\",\"loading-dots--dot\":\"LoadingSpinner_loading-dots--dot__2Y25C\",\"dot-keyframes\":\"LoadingSpinner_dot-keyframes__3SU_M\"};","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Box,\n  Button,\n  Flex,\n  Image\n} from \"rimble-ui\";\nimport Select from 'react-select';\nimport ModalCard from './ModalCard';\nimport ImageButton from '../../ImageButton/ImageButton';\nimport styles from './Header.module.scss';\nimport globalConfigs from '../../configs/globalConfigs';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\n\nclass BuyModal extends React.Component {\n\n  state = {\n    selectedMethod:null,\n    availableMethods:[],\n    selectedCountry:null,\n    selectedProvider:null,\n    availableProviders:null,\n    selectedToken:this.props.buyToken,\n  }\n\n  async loadRemoteResources() {\n\n    if (!this.state.selectedToken){\n      return false;\n    }\n\n    // Load payments providers external remote resources\n    Object.keys(globalConfigs.payments.providers).forEach((provider,i) => {\n\n      const providerInfo = globalConfigs.payments.providers[provider];\n      if (providerInfo.enabled && providerInfo.remoteResources && (providerInfo.supportedTokens.indexOf(this.state.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1)){\n        \n        const remoteResources = providerInfo.remoteResources;\n\n        Object.keys(remoteResources).forEach((url,j) => {\n\n          const resourceType = url.split('.').pop().toLowerCase();\n\n          switch (resourceType){\n            case 'js':\n              const scriptID = `script_${provider}_${j}_${this.state.selectedToken}`;\n\n              if (!document.getElementById(scriptID)){\n                const script = document.createElement(\"script\");\n                const remoteResourceParams = remoteResources[url];\n                const callback = remoteResourceParams && remoteResourceParams.callback ? remoteResourceParams.callback : null;\n                const precall = remoteResourceParams && remoteResourceParams.precall ? remoteResourceParams.precall : null;\n\n                if (precall && typeof precall === 'function'){\n                  precall(this.state,globalConfigs,providerInfo);\n                }\n\n                if (callback && typeof callback === 'function'){\n                  if (script.readyState) {  // only required for IE <9\n                    script.onreadystatechange = function() {\n                      if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n                        script.onreadystatechange = null;\n                        callback();\n                      }\n                    };\n                  } else {  //Others\n                    script.onload = callback;\n                  }\n                }\n\n                script.id = scriptID;\n                script.className = `script_${provider}`;\n                script.src = url;\n                script.async = true;\n\n                if (remoteResourceParams && remoteResourceParams.parentElement){\n                  remoteResourceParams.parentElement.appendChild(script)\n                } else {\n                  document.head.appendChild(script);\n                }\n              }\n            break;\n            case 'css':\n              const stylesheetId = `stylesheet_${provider}_${j}`;\n\n              if (!document.getElementById(stylesheetId)){\n                const style = document.createElement(\"link\");\n\n                style.id = stylesheetId;\n                style.rel = 'stylesheet';\n                style.href = url;\n\n                document.head.appendChild(style);\n              }\n            break;\n            default:\n            break;\n          }\n        });\n      }\n    });\n  }\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  loadAvailableMethods(){\n    const availableMethods = {};\n    const availableMethodsKeys = this.props.availableMethods && this.props.availableMethods.length ? this.props.availableMethods : Object.keys(globalConfigs.payments.methods);\n\n    availableMethodsKeys.forEach(method => {\n      const availableProviders = this.getAvailablePaymentProviders(method,this.state.selectedToken);\n      if (availableProviders && availableProviders.length>0){\n        const methodInfo = globalConfigs.payments.methods[method];\n        methodInfo.availableProviders = availableProviders;\n        availableMethods[method] = methodInfo;\n      }\n    });\n\n    this.setState({\n      availableMethods\n    });\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n\n    this.loadAvailableMethods();\n    this.loadRemoteResources();\n  }\n\n  async componentDidMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps) {\n\n    this.loadUtils();\n\n    if ( this.props.buyToken && prevProps.buyToken !== this.props.buyToken){\n      this.selectToken(null,this.props.buyToken);\n    }\n  }\n\n  renderPaymentMethod = async (e,provider,buyParams) => {\n\n    const onSuccess = async (tx) => {\n      // Toast message\n      window.toastProvider.addMessage(`Deposit completed`, {\n        secondaryMessage: `Your ${this.state.selectedToken} have been deposited`,\n        colorTheme: 'light',\n        actionHref: \"\",\n        actionText: \"\",\n        variant: \"success\",\n      });\n\n      this.props.getAccountBalance();\n    };\n\n    const onClose = async (e) => {\n      return true;\n    }\n\n    const paymentProvider = globalConfigs.payments.providers[provider];\n    const initParams = paymentProvider && paymentProvider.getInitParams ? paymentProvider.getInitParams(this.props,globalConfigs,buyParams,onSuccess,onClose) : null;\n\n    // Render the Payment Provider\n    switch (provider){\n      default:\n        if (typeof paymentProvider.render === 'function'){\n          const currentState = Object.assign({},this.state);\n          paymentProvider.render(initParams,null,currentState,globalConfigs);\n        }\n      break;\n    }\n\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_provider',\n        eventLabel: provider\n      });\n\n      this.closeModal(e);\n    } else {\n      this.closeModal(e);\n    }\n  }\n\n  goBack = (e) => {\n    e.preventDefault();\n\n    if (this.state.selectedProvider){\n      this.setState({\n        selectedProvider:null,\n      });\n    } else if (this.state.selectedMethod){\n      this.setState({\n        selectedMethod:null,\n        selectedCountry:null,\n        selectedProvider:null,\n      });\n    } else if (this.state.selectedToken){\n      this.setState({\n        selectedMethod:null,\n        selectedCountry:null,\n        selectedProvider:null,\n        selectedToken:this.props.buyToken,\n      });\n    } else {\n      this.resetModal();\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      selectedMethod:null,\n      selectedCountry:null,\n      selectedProvider:null,\n      availableProviders:null,\n      selectedToken:this.props.buyToken\n    });\n\n    this.componentWillMount();\n  }\n\n  closeModal = (e) => {\n    this.resetModal();\n    if (!this.props.showInline && typeof this.props.closeModal === 'function'){\n      this.props.closeModal();\n    }\n  }\n\n  getProviderInfo = (provider) => {\n    if (!globalConfigs.payments.providers[provider]){\n      return false;\n    }\n    let providerInfo = globalConfigs.payments.providers[provider];\n    if (typeof providerInfo.getInfo === 'function'){\n      const newProviderInfo = providerInfo.getInfo(this.state);\n      if (newProviderInfo && Object.keys(newProviderInfo).length){\n        providerInfo = Object.assign(providerInfo,newProviderInfo);\n      }\n    }\n    return providerInfo;\n  }\n\n  getDefaultPaymentProvider = (selectedMethod) => {\n    const paymentMethod = this.state.availableMethods[selectedMethod];\n    if (paymentMethod && paymentMethod.defaultProvider){\n      return paymentMethod.defaultProvider;\n    }\n    return null;\n  }\n\n  getAvailablePaymentProviders = (selectedMethod,selectedToken) => {\n    const availableProviders = [];\n\n    Object.keys(globalConfigs.payments.providers).map((provider,i) => {\n      const providerInfo = globalConfigs.payments.providers[provider];\n      const providerSupportMethod = providerInfo.supportedMethods.indexOf(selectedMethod) !== -1;\n      const providerSupportToken = selectedToken ? providerInfo.supportedTokens.indexOf(selectedToken) !== -1 : (providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1);\n      if (providerInfo.enabled && providerSupportMethod && providerSupportToken ){\n        availableProviders.push(provider);\n      }\n      return provider;\n    });\n\n    const defaultPaymentProvider = this.getDefaultPaymentProvider(selectedMethod);\n\n    if (defaultPaymentProvider && this.state.availableMethods[selectedMethod].showDefaultOnly && availableProviders.indexOf(defaultPaymentProvider) !== -1){\n      return [defaultPaymentProvider];\n    }\n\n    return availableProviders;\n  }\n\n  selectProvider = (e,selectedProvider) => {\n    if (e){\n      e.preventDefault();\n    }\n    \n    if (!selectedProvider || !globalConfigs.payments.providers[selectedProvider]){\n      return this.setState({\n        selectedProvider:null\n      });\n    }\n\n    const providerInfo = globalConfigs.payments.providers[selectedProvider];\n    if (providerInfo){\n\n      if (this.state.selectedToken){\n        this.renderPaymentMethod(e,selectedProvider,this.state);\n        return;\n      }\n\n      const ethAvailable = providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1;\n      const tokenAvailable = providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1;\n\n      // Show tokens to buy if more are available or if the selected one is not\n      const availableTokens = [];\n      if ( (ethAvailable && tokenAvailable) || !tokenAvailable ){\n        if (ethAvailable){\n          availableTokens.push(globalConfigs.baseToken);\n        }\n        if (tokenAvailable){\n          availableTokens.push(this.props.selectedToken);\n        }\n      } else {\n        this.renderPaymentMethod(e,selectedProvider,this.state);\n        return;\n      }\n\n      this.setState({\n        availableTokens,\n        selectedProvider\n      });\n    }\n  }\n\n  selectMethod = (e,selectedMethod) => {\n    if (e){\n      e.preventDefault();\n    }\n\n    if (Object.keys(this.state.availableMethods).indexOf(selectedMethod) !== -1){\n      const availableProviders = this.getAvailablePaymentProviders(selectedMethod,this.state.selectedToken);\n\n      // Send Google Analytics event\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_method',\n        eventLabel: selectedMethod\n      });\n\n      this.setState({\n        availableProviders,\n        selectedMethod\n      });\n    }\n  }\n\n  selectToken = (e,selectedToken) => {\n    if (e){\n      e.preventDefault();\n    }\n\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Buy',\n      eventAction: 'select_token',\n      eventLabel: selectedToken\n    });\n\n    this.setState({ selectedToken }, async () => {\n      if (this.state.selectedProvider){\n        return this.renderPaymentMethod(e,this.state.selectedProvider,this.state);\n      } else {\n        this.loadRemoteResources();\n      }\n    });\n  }\n\n  handleCountryChange = selectedCountry => {\n\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled && selectedCountry){\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_country',\n        eventLabel: selectedCountry.value\n      });\n    }\n\n    this.setState({\n      selectedCountry\n    });\n  }\n\n  getAvailableCountries = () => {\n    const availableCountries = {};\n    this.state.availableProviders.forEach((provider,i) => {\n      const providerInfo = this.getProviderInfo(provider);\n      const providerSupportMethod = providerInfo.supportedMethods.indexOf(this.state.selectedMethod) !== -1;\n      const providerSupportToken = this.state.selectedToken ? providerInfo.supportedTokens.indexOf(this.state.selectedToken) !== -1 : (providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1);\n\n      // Skip disabled provider, not supported selected method or not supported token\n      if (!providerInfo.enabled || !providerSupportMethod || !providerSupportToken ){\n        return;\n      }\n\n      // Get available providers and countries\n      providerInfo.supportedCountries.forEach((countryCode,j) => {\n        if (!availableCountries[countryCode]){\n          availableCountries[countryCode] = {\n            providers:[],\n            label:globalConfigs.countries[countryCode],\n            value:countryCode\n          };\n        }\n        availableCountries[countryCode].providers.push(provider);\n      });\n    });\n\n    return Object.values(availableCountries);\n  }\n\n  render() {\n\n    let title = null;\n    if (this.state.selectedToken === null){\n      title = 'BUY TOKEN';\n    } else {\n      title = 'BUY '+this.state.selectedToken;\n      if (this.state.selectedMethod !== null){\n        title += ' - '+this.state.availableMethods[this.state.selectedMethod].props.caption;\n      }\n    }\n\n    let availableTokens = this.props.availableTokens && Object.keys(this.props.availableTokens).length>0 ? [globalConfigs.baseToken,...Object.keys(this.props.availableTokens)] : [globalConfigs.baseToken];\n\n    // Show all tokens\n    if (this.props.showAllTokens){\n      availableTokens = [];\n      Object.keys(globalConfigs.payments.providers).forEach( provider => {\n        const providerInfo = globalConfigs.payments.providers[provider];\n        if (providerInfo.supportedTokens){\n          providerInfo.supportedTokens.forEach(token => {\n            if (!availableTokens.includes(token)){\n              availableTokens.push(token);\n            }\n          })\n        }\n      });\n    }\n\n    const InnerComponent = props => (\n      <Box minWidth={ this.props.showInline ? 'auto' : ['auto','35em'] }>\n      {\n        this.state.selectedToken === null ? (\n          <Box mb={2}>\n            <Text\n              mb={[2,3]}\n              fontWeight={2}\n              textAlign={'center'}\n              fontSize={[2, this.props.showInline ? 2 : 3]}\n            >\n              Which token do you want to buy?\n            </Text>\n            <Flex\n              mb={4}\n              style={{\n                flexWrap:'wrap'\n              }}\n              alignItems={'center'}\n              justifyContent={'center'}\n              flexDirection={['column','row']}\n            >\n            {\n              availableTokens.map((token,i) => {\n                return (\n                  <ImageButton\n                    caption={token}\n                    key={`token_${token}`}\n                    isMobile={this.props.isMobile}\n                    imageSrc={`images/tokens/${token}.svg`}\n                    handleClick={ e => { this.selectToken(e,token); } }\n                    imageProps={ this.props.isMobile ? {height:'42px'} : {p:[2,3],height:'80px'}}\n                    buttonProps={ !this.props.isMobile ? {\n                      style:{\n                        'flex':'0 0 170px'\n                      }\n                    } : null}\n                  />\n                );\n              })\n            }\n            </Flex>\n          </Box>\n        ) : this.state.selectedMethod === null ? (\n          <Box>\n            <Flex mb={3} flexDirection={'column'} justifyContent={'center'} alignItems={'center'}>\n              {\n                !this.props.showInline &&\n                  <Image height={2} mb={2} src={`images/tokens/${this.state.selectedToken}.svg`} />\n              }\n              <Text textAlign={'center'} fontWeight={500} fontSize={[2, this.props.showInline ? 2 : 3]} my={0}>\n                {\n                  this.props.showInline && this.props.buyToken ? `Ops... you don't have any ${this.props.buyToken} in your wallet, how do you prefer do buy some?` : `How do you prefer to buy ${this.state.selectedToken}?`\n                }\n              </Text>\n            </Flex>\n            <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n              {\n                Object.keys(this.state.availableMethods).map((method,i) => {\n                  const methodInfo = this.state.availableMethods[method];\n                  let imageProps = methodInfo.props && methodInfo.props.imageProps ? methodInfo.props.imageProps : {};\n                  const imagePropsExtended = this.props.isMobile ? {height:'42px'} : {height:'70px'};\n                  imageProps = Object.assign(imageProps,imagePropsExtended);\n\n                  return (\n                    <ImageButton\n                      {...methodInfo.props}\n                      buttonProps={{\n                        border:2\n                      }}\n                      key={`method_${method}`}\n                      imageProps={ imageProps }\n                      isMobile={ this.props.isMobile }\n                      handleClick={ e => this.selectMethod(e,method) }\n                    />\n                  );\n                })\n              }\n            </Flex>\n          </Box>\n        ) : this.state.selectedMethod === 'wallet' ? (\n              <Box mt={2} mb={3}>\n                <Text textAlign={'center'} fontWeight={3} fontSize={2} my={0}>\n                  <Box width={'100%'}>\n                      <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                      {\n                        this.state.availableProviders.length > 0 ?\n                          (\n                            <Box>\n                              <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                                Choose your preferred payment provider:\n                              </Text>\n                              {\n                                this.state.availableProviders.map((provider,i) => {\n                                  const providerInfo = this.getProviderInfo(provider);\n                                  return (\n                                    <ImageButton key={`payment_provider_${provider}`} {...providerInfo} handleClick={ e => { this.renderPaymentMethod(e,provider,this.state); } } />\n                                  );\n                                })\n                              }\n                            </Box>\n                          )\n                        : (\n                          <Text textAlign={'center'} fontWeight={3} fontSize={2} my={2}>\n                            Sorry, there are no providers available for the selected method.\n                          </Text>\n                        )\n                      }\n                      </Flex>\n                    </Box>\n                </Text>\n              </Box>\n            ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              {\n                !this.state.selectedProvider &&\n                <Box\n                  mb={3}\n                  maxWidth={ this.props.showInline ? '35em' : 'initial' }\n                  width={ (this.props.showInline && !this.props.isMobile) ? 0.72 : 1 }\n                >\n                  {\n                    !this.props.showInline &&\n                      <Flex flexDirection={'column'} justifyContent={'center'} alignItems={'center'}>\n                        <Image height={2} mb={2} src={`images/tokens/${this.state.selectedToken}.svg`} />\n                      </Flex>\n                  }\n                  <Text textAlign={'center'} fontWeight={ this.props.showInline ? 2 : 3 } fontSize={2} mb={2}>\n                    Select your country:\n                  </Text>\n                  <Select\n                    bg={'#162e4d'}\n                    backgroundColor={'#162e4d'}\n                    value={this.state.selectedCountry}\n                    placeholder={'Select your country'}\n                    onChange={this.handleCountryChange}\n                    options={this.getAvailableCountries()}\n                    maxWidth={ this.props.showInline && !this.props.isMobile ? '25em' : 'auto' }\n                    noOptionsMessage={ (inputValue) => 'For European countries select Europe' }\n                    className={this.props.themeMode === 'light' ? styles.select : styles.selectDark}\n                  />\n                </Box>\n              }\n              <Flex flexDirection={'column'} justifyContent={'center'} alignItems={'center'} minHeight={'200px'}>\n                {\n                  !this.state.selectedProvider ?\n                    this.state.selectedCountry !== null ? (\n                      <Box width={'100%'}>\n                        <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                          Choose your preferred payment provider:\n                        </Text>\n                        <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                        {\n                          this.state.selectedCountry.providers.length > 0 ?\n                            this.state.selectedCountry.providers.map((provider,i) => {\n                              const providerInfo = this.getProviderInfo(provider);\n                              return (\n                                <ImageButton key={`payment_provider_${provider}`} {...providerInfo} handleClick={ e => {this.selectProvider(e,provider) } } />\n                              );\n                            })\n                          : (\n                            <Text textAlign={'center'} fontWeight={3} fontSize={2} mb={2}>\n                              Sorry, there are no providers available for the selected method.\n                            </Text>\n                          )\n                        }\n                        </Flex>\n                      </Box>\n                    ) : (\n                      <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={2}>\n                        Select the country to load the payment providers.\n                      </Text>\n                    )\n                  : false && this.state.availableTokens && this.state.availableTokens.length > 0 && (\n                    <Box mb={2}>\n                      <Flex justifyContent={'center'} my={2}>\n                        <Image src={ globalConfigs.payments.providers[this.state.selectedProvider].imageSrc } height={'35px'} />\n                      </Flex>\n                      <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                        Choose which token do you want to buy:\n                      </Text>\n                      <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                      {\n                        this.state.availableTokens.map((token,i) => {\n                          return (\n                            <ImageButton key={`token_${token}`} imageSrc={`images/tokens/${token}.svg`} caption={token} imageProps={{p:[2,3],height:'80px'}} handleClick={ e => { this.selectToken(e,token); } } />\n                          );\n                        })\n                      }\n                      </Flex>\n                    </Box>\n                  )\n                }\n              </Flex>\n            </Flex>\n          )\n      }\n        {\n          this.props.showInline && this.state.selectedToken !== null  && (this.props.buyToken === null || this.state.selectedMethod !== null) && (\n            <Flex\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <Button\n                my={2}\n                mx={[0, 2]}\n                size={'medium'}\n                borderRadius={4}\n                mainColor={'blue'}\n                onClick={ e => this.goBack(e) }\n              >\n                GO BACK\n              </Button>\n            </Flex>\n          )\n        }\n      </Box>\n    );\n\n    if (this.props.showInline){\n      return (\n        <InnerComponent\n          {...this.props}\n        />\n      );\n    }\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.closeModal}>\n          <ModalCard.Header title={title}>\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <InnerComponent/>\n          </ModalCard.Body>\n          <ModalCard.Footer>\n            <Flex px={[2,0]} flexDirection={['column', 'row']} width={1} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                onClick={ e => this.closeModal(e) }\n                size={this.props.isMobile ? 'small' : 'medium'}\n              >\n              CLOSE\n              </Button>\n              {\n                this.state.selectedToken !== null && (this.props.buyToken === null || this.state.selectedMethod !== null) && (\n                  <Button\n                    my={2}\n                    mx={[0, 2]}\n                    borderRadius={4}\n                    onClick={ e => this.goBack(e) }\n                    className={styles.gradientButton}\n                    size={this.props.isMobile ? 'small' : 'medium'}\n                  >\n                    GO BACK\n                  </Button>\n                )\n              }\n            </Flex>\n          </ModalCard.Footer>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default BuyModal;","import React from \"react\";\nimport styles from './ModalCard.module.scss';\nimport { Box, Flex, Card, Button, Heading, Image } from \"rimble-ui\";\n\nconst ModalCard = ({children, closeFunc, ...props}) => (\n  <Card\n    p={0}\n    border={0}\n    mx={'auto'}\n    my={'auto'}\n    height={'auto'}\n    borderRadius={2}\n    overflow={'auto'}\n    width={ props.width ? props.width : 'auto' }\n    minWidth={ props.minWidth ? props.minWidth : 'auto' }\n    maxWidth={ props.maxWidth ? props.maxWidth : '960px'}\n  >\n    <Box\n      top={'0'}\n      zIndex={1}\n      right={'0'}\n      position={\"absolute\"}\n    >\n      <Button.Text\n        icononly\n        icon={\"Close\"}\n        size={'2.5em'}\n        onClick={closeFunc}\n        mainColor={ props.mainColor ? props.mainColor :  'copyColor' }\n      />\n    </Box>\n    <Flex\n      height={'100%'}\n      flex={'1 1 auto'}\n      flexDirection={'column'}\n      className={[ props.bgLayer ? styles.bg : null]}\n      style={{\n        overflow: 'auto',\n        backgroundRepeat:'no-repeat',\n        backgroundPosition:'bottom right',\n        backgroundSize: !props.background ? '65%' : null,\n        backgroundImage:'url(/images/bg-bottom-right.png)',\n        background: props.background ? props.background : null,\n      }}\n      backgroundColor={'cardBg'}\n    >\n      {children}\n    </Flex>\n  </Card>\n);\n\nModalCard.Header = (props) => (\n  <Box\n    width={1}\n    mb={[2,3]}\n    pb={[2,2]}\n    pt={ props.pt ? props.pt : (props.icon ? 3 : [5,3]) }\n    borderBottom={ props.borderBottom ? props.borderBottom : '1px solid #eee' }\n  >\n    <Flex\n      px={[1,2]}\n      alignItems={'center'}\n      flexDirection={'column'}\n    >\n      { props.icon && <Image width={ props.iconHeight ? props.iconHeight : '50px' } src={props.icon} /> }\n      <Heading.h3\n        mb={0}\n        fontSize={[3,3]}\n        color={'copyColor'}\n        textAlign={'center'}\n        mt={props.icon ? 2 : 0}\n        fontFamily={'sansSerif'}\n        {...props.titleProps}\n      >\n        {props.title}\n      </Heading.h3>\n      {\n        props.subtitle &&\n        <Heading.h4\n          pt={[1,2]}\n          fontWeight={2}\n          fontSize={[2,2]}\n          lineHeight={1.5}\n          color={'dark-gray'}\n          textAlign={'center'}\n          {...props.subtitleProps}\n        >\n          {props.subtitle}\n        </Heading.h4>\n      }\n      {\n        props.subtitle2 &&\n        <Heading.h4 pt={0} fontSize={[2,2]} textAlign={'center'} fontWeight={2} lineHeight={1.5} color={'dark-gray'}>\n          {props.subtitle2}\n        </Heading.h4>\n      }\n    </Flex>\n  </Box>\n);\n\nModalCard.Body = ({children, ...props}) => (\n  <Box\n    width={1}\n    px={[3,5]}\n    {...props}\n  >\n    {children}\n  </Box>\n);\n/*\nModalCard.Body = ({children, ...props}) => (\n  <Flex flex={'1 1 auto'} style={{ overflow: 'auto' }} >\n    <Box width={1} px={[4,5]} py={[3,4]} m={'auto'}>\n      {children}\n    </Box>\n  </Flex>\n);\n*/\n\nModalCard.Footer = ({children, ...props}) => (\n  <Flex\n    flex={'1 0 auto'}\n    justifyContent={'center'}\n    borderTop={1}\n    borderColor={'light-gray'}\n    px={[0,3]}\n    py={3}\n  >\n    {children}\n  </Flex>\n);\n\n\nModalCard.BackButton = ({onClick, ...props}) => (\n  <Box\n    position={'absolute'}\n    top={'0'}\n    left={'0'}\n    m={3}\n    bg={'white'}\n  >\n    <Button.Outline\n      onClick={onClick}\n      icononly\n      icon={'ArrowBack'}\n      size={'2.5em'}\n    />\n  </Box>\n);\n\nexport default ModalCard;\n","import {\n  Link as RouterLink,\n} from \"react-router-dom\";\nimport ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport styles from './Footer.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Heading, Image, Link } from 'rimble-ui';\n\nclass Footer extends Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  render() {\n    const currYear = new Date().getFullYear();\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n    const columnWidth = governanceEnabled ? 1/4 : 1/3;\n    return (\n      <Flex\n        pl={0}\n        id={\"footer\"}\n        alignItems={'center'}\n        flexDirection={'column'}\n        className={styles.footer}\n        backgroundColor={'white'}\n        justifyContent={'flex-start'}\n      >\n        <Flex\n          width={1}\n          px={[3,6]}\n          justifyContent={'center'}\n        >\n          <Flex\n            width={1}\n            height={['auto','100%']}\n            alignItems={'flex-start'}\n            maxWidth={['35em','70em']}\n            justifyContent={'flex-start'}\n            flexDirection={['column','row']}\n          >\n            <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Resources\n              </Heading.h3>\n              <Flex width={1} flexDirection={'column'}>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://developers.idle.finance'}\n                >\n                  <span role=\"img\" aria-label=\"documentation\">📚</span> Documentation\n                </ExtLink>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://www.notion.so/idlelabs/Idle-Finance-Brand-Assets-fd63e4161cb64c999531646c7549bc4b'}\n                >\n                  <span role=\"img\" aria-label=\"brand-assets\">🎨</span> Brand Assets\n                </ExtLink>\n                <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                  <RouterLink\n                    color={'blue'}\n                    to=\"/terms-of-service\"\n                    className={styles.link}\n                  >\n                    <Text\n                      fontWeight={3}\n                      color={'blue'}\n                      fontSize={[3,2]}\n                      hoverColor={'blue'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                    >\n                      <span role=\"img\" aria-label=\"terms-of-service\">📑</span> Terms of Service\n                    </Text>\n                  </RouterLink>\n                </Flex>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://www.iubenda.com/privacy-policy/61211749'}\n                >\n                  <span role=\"img\" aria-label=\"privacy-policy\">🕵️‍♂️</span> Privacy Policy\n                </ExtLink>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://www.iubenda.com/privacy-policy/61211749/cookie-policy'}\n                >\n                  <span role=\"img\" aria-label=\"cookie-policy\">🍪</span> Cookie Policy\n                </ExtLink>\n              </Flex>\n            </Flex>\n            {\n              governanceEnabled && \n                <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n                  <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                    Governance\n                  </Heading.h3>\n                  <Flex width={1} flexDirection={'column'}>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        to={\"/governance\"}\n                        className={styles.link}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-overview\">🏛</span> Overview\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        className={styles.link}\n                        to={\"/governance/proposals\"}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-proposals\">💡</span> Proposals\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        className={styles.link}\n                        to={\"/governance/leaderboard\"}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-leaderboard\">📋</span> Leaderboard\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <ExtLink href=\"https://gov.idle.finance/\">\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-forum\">🤝</span> Forum\n                        </Text>\n                      </ExtLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <ExtLink href=\"https://www.notion.so/idlelabs/ffe8115b7b53489ab0a7f84e656e4bb0?v=916250f54ff24daabad72cf095fd6d88\">\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-forum\">🌎</span> Team\n                        </Text>\n                      </ExtLink>\n                    </Flex>\n                  </Flex>\n                </Flex>\n            }\n            <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Start a Conversation\n              </Heading.h3>\n              <Link textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} color={'blue'} hoverColor={'blue'}>\n                <span role=\"img\" aria-label=\"email\">✉️</span> info@idle.finance\n              </Link>\n            </Flex>\n            <Flex width={[1,columnWidth]} flexDirection={'column'}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Explore\n              </Heading.h3>\n              <Flex flexDirection={'row'} justifyContent={['space-evenly','flex-start']}>\n                <ExtLink href=\"https://twitter.com/idlefinance\">\n                  <Image src=\"images/social/twitter.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://t.me/idlefinance\">\n                  <Image src=\"images/social/telegram.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://discord.gg/mpySAJp\">\n                  <Image src=\"images/social/discord.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://medium.com/@idlefinance\">\n                  <Image src=\"images/social/medium.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://github.com/Idle-Labs/\">\n                  <Image src=\"images/social/github.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://www.linkedin.com/company/idlefinance\">\n                  <Image src=\"images/social/linkedin.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://defipulse.com/defi-list\">\n                  <Image src=\"images/social/defi-pulse.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n              </Flex>\n            </Flex>\n          </Flex>\n        </Flex>\n        <Flex\n          width={1}\n          height={['auto','100%']}\n          flexDirection={'column'}\n          alignItems={['center','flex-end']}\n          justifyContent={['center','flex-end']}\n        >\n          <Flex\n            p={2}\n            width={1}\n            alignItems={'center'}\n            justifyContent={'center'}\n            backgroundColor={'dark-blue'}\n            flexDirection={['column','row']}\n          >\n            <Text\n              color={'white'}\n              textAlign={['center','flex-end']}\n            >\n              &copy; {currYear} - Idle Labs Inc.\n            </Text>\n            <RouterLink\n              color={'blue'}\n              to={'/terms-of-service'}\n              style={{textDecoration:'none'}}\n            >\n              <Text\n                pl={2}\n                color={'#0df'}\n                textAlign={['center','flex-end']}\n              >\n                Terms of Service\n              </Text>\n            </RouterLink>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default Footer;\n","import React, { Component } from 'react';\nimport styles from './TableCellHeader.module.scss';\nimport { Flex, Heading, Icon, Link, Tooltip } from \"rimble-ui\";\n\nclass TableCellHeader extends Component {\n  render() {\n\n    const ColTitle = (props) => (\n      <Heading.h4\n        fontWeight={[3,4]}\n        color={'cellTitle'}\n        style={{\n          width:'100%',\n          whiteSpace:'nowrap'\n        }}\n        fontSize={['10px',3]}\n        lineHeight={'initial'}\n        {...props}\n      >\n        {props.children}\n      </Heading.h4>\n    );\n\n    return (\n      <Flex\n        width={this.props.width}\n      >\n        {\n          (this.props.desc && this.props.desc.length>1) ? (\n            <Flex\n              alignItems={'center'}\n            >\n              <ColTitle\n                {...this.props}\n              />\n              <Link\n                style={{\n                  cursor:'pointer'\n                }}\n                onClick={ e => this.props.openTooltipModal(this.props.title,this.props.desc) }\n              >\n                <Tooltip\n                  placement={'top'}\n                  message={'Click to read the description'}\n                >\n                  <Icon\n                    ml={1}\n                    name={\"Info\"}\n                    color={'cellTitle'}\n                    className={styles.tooltip}\n                    size={ this.props.isMobile ? '1em' : '1.2em'}\n                  />\n                </Tooltip>\n              </Link>\n            </Flex>\n          ) : (\n            <ColTitle\n              {...this.props}\n            />\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TableCellHeader;\n","import React, { Component } from 'react';\nimport { Flex, Text, Icon, Image } from \"rimble-ui\";\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass CardIconButton extends Component {\n  render() {\n    const cardProps = Object.assign({\n      py:1,\n      width:'auto',\n      px:['12px',3],\n    },this.props.cardProps);\n\n    return (\n       <DashboardCard\n         cardProps={cardProps}\n         isInteractive={true}\n         isActive={this.props.isActive}\n         handleClick={this.props.handleClick}\n       >\n         <Flex\n           my={1}\n           alignItems={'center'}\n           flexDirection={'row'}\n           justifyContent={'center'}\n         >\n          {\n            this.props.image ? (\n              <Image\n                align={'center'}\n                src={this.props.image}\n                height={ this.props.isMobile ? '1.2em' : '1.4em' }\n                width={ this.props.isMobile ? '1.2em' : '1.4em' }\n                {...this.props.imageProps}\n              />\n            ) : this.props.useIconOnly ? (\n              <Icon\n                align={'center'}\n                name={this.props.icon}\n                size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                color={ this.props.iconColor ? this.props.iconColor : 'redeem' }\n                {...this.props.iconProps}\n              />\n            ) : (\n             <Flex\n               mr={2}\n               p={['4px','7px']}\n               borderRadius={'50%'}\n               alignItems={'center'}\n               justifyContent={'center'}\n               backgroundColor={ this.props.iconBgColor ? this.props.iconBgColor : this.props.theme.colors.transactions.actionBg.redeem }\n             >\n               <Icon\n                 align={'center'}\n                 name={this.props.icon}\n                 size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                 color={ this.props.iconColor ? this.props.iconColor : 'redeem' }\n                 {...this.props.iconProps}\n               />\n             </Flex>\n            )\n          }\n           <Text\n             fontWeight={3}\n             fontSize={[1,3]}\n             {...this.props.textProps}\n           >\n             {this.props.text}\n           </Text>\n         </Flex>\n       </DashboardCard>\n    );\n  }\n}\n\nexport default CardIconButton;","import { Line } from '@nivo/line';\nimport CountUp from 'react-countup';\nimport React, { Component } from 'react';\nimport { linearGradientDef } from '@nivo/core'\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport CustomTooltip from '../CustomTooltip/CustomTooltip';\nimport VariationNumber from '../VariationNumber/VariationNumber';\nimport AllocationChart from '../AllocationChart/AllocationChart';\nimport CustomTooltipRow from '../CustomTooltip/CustomTooltipRow';\nimport { Image, Text, Loader, Button, Tooltip, Icon, Flex } from \"rimble-ui\";\n\nclass AssetField extends Component {\n\n  state = {\n    ready:false\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const tokenChanged = prevProps.token !== this.props.token;\n    const accountChanged = prevProps.account !== this.props.account;\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    const contractInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized && this.props.contractsInitialized;\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (fieldChanged || tokenChanged || accountChanged || transactionsChanged || (contractInitialized && !this.state.ready)){\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.loadField();\n      });\n    } else if (mobileChanged || themeModeChanged){\n      const oldState = Object.assign({},this.state);\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  loadField = async(fieldName=null) => {\n    // Exit if component unmounted\n    // console.log('loadField',this.props.fieldInfo.name,this.props.account,this.props.token,this.props.tokenConfig);\n\n    if (this.componentUnmounted || !this.props.token || !this.props.tokenConfig){\n      return false;\n    }\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const setState = fieldName === null;\n    const fieldInfo = this.props.fieldInfo;\n    if (!fieldName){\n      fieldName = fieldInfo.name;\n    }\n\n    const fieldProps = fieldInfo.props;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    // const addCurveApy = typeof this.props.addCurveApy !== 'undefined' ? this.props.addCurveApy : false;\n    const addGovTokens = typeof this.props.addGovTokens !== 'undefined' ? this.props.addGovTokens : true;\n\n    let output = null;\n    if (this.props.token){\n      switch (fieldName){\n        case 'tokenBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              tokenBalance:output.toString()\n            });\n          }\n        break;\n        case 'govTokens':\n          const govTokens = this.functionsUtil.getTokenGovTokens(this.props.tokenConfig);\n          const getGovTokensDistributionSpeed = await this.functionsUtil.getGovTokensDistributionSpeed(this.props.tokenConfig);\n          this.setStateSafe({\n            govTokens,\n            getGovTokensDistributionSpeed\n          });\n        break;\n        case 'tokenPrice':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            let tokenPrice = '-';\n            if (typeof this.props.tokenConfig.showPrice === 'undefined' || this.props.tokenConfig.showPrice){\n              tokenPrice = output.toString();\n            }\n            this.setStateSafe({\n              tokenPrice\n            });\n          }\n        break;\n        case 'fee':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              fee:output.toString()\n            });\n          }\n        break;\n        case 'amountToMigrate':\n          const {\n            oldContractBalanceFormatted\n          } = await this.functionsUtil.checkMigration(this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (setState && oldContractBalanceFormatted){\n            this.setStateSafe({\n              amountToMigrate:oldContractBalanceFormatted.toString()\n            });\n            output = oldContractBalanceFormatted;\n          }\n        break;\n        case 'amountLent':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              amountLent:output.toString()\n            });\n          }\n        break;\n        case 'idleTokenBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              idleTokenBalance:output.toString()\n            });\n          }\n        break;\n        case 'redeemableBalanceCounterCurve':\n          const {\n            redeemableBalanceCurveEnd,\n            redeemableBalanceCurveStart\n          } = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (redeemableBalanceCurveStart && redeemableBalanceCurveEnd){\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                redeemableBalanceCurveEnd,\n                redeemableBalanceCurveStart\n              });\n            }\n\n            output = {\n              redeemableBalanceCurveEnd,\n              redeemableBalanceCurveStart\n            };\n          }\n        break;\n        case 'redeemableBalanceCounter':\n          const {\n            redeemableBalanceEnd,\n            redeemableBalanceStart\n          } = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (redeemableBalanceStart && redeemableBalanceEnd){\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                redeemableBalanceEnd,\n                redeemableBalanceStart\n              });\n            }\n\n            output = {\n              redeemableBalanceEnd,\n              redeemableBalanceStart\n            };\n          }\n        break;\n        case 'earnings':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earnings:output.toString()\n            });\n          }\n        break;\n        case 'feesCounter':\n          const [earningsCounter,feePercentage] = await Promise.all([\n            this.loadField('earningsCounter'),\n            this.functionsUtil.getTokenFees(this.props.tokenConfig)\n          ]);\n\n          if (earningsCounter && earningsCounter.earningsStart && earningsCounter.earningsEnd && feePercentage){\n\n            const feesStart = earningsCounter.earningsStart.times(feePercentage);\n            const feesEnd = earningsCounter.earningsEnd.times(feePercentage);\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                feesEnd,\n                feesStart\n              });\n            }\n\n            output = {\n              feesEnd,\n              feesStart\n            };\n          }\n        break;\n        case 'earningsCounterCurve':\n          const [curveApy,earningsCurveStart,amountLentCurve] = await Promise.all([\n            this.functionsUtil.getCurveAPY(),\n            this.functionsUtil.loadAssetField('earningsCurve',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('amountLentCurve',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens)\n          ]);\n\n          if (amountLentCurve && earningsCurveStart && curveApy){\n            const earningsCurveEnd = amountLentCurve.gt(0) ? amountLentCurve.times(curveApy.div(100)).plus(earningsCurveStart) : 0;\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                earningsCurveEnd,\n                earningsCurveStart\n              });\n            }\n\n            output = {\n              earningsCurveEnd,\n              earningsCurveStart\n            };\n          }\n        break;\n        case 'earningsCounter':\n          const [tokenAPY2,earningsStart,amountLent2] = await Promise.all([\n            this.functionsUtil.loadAssetField('apy',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('earnings',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('amountLent',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens)\n          ]);\n\n          if (amountLent2 && earningsStart && tokenAPY2){\n            const earningsEnd = amountLent2.gt(0) ? amountLent2.times(tokenAPY2.div(100)).plus(earningsStart) : 0;\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                earningsEnd,\n                earningsStart\n              });\n            }\n\n            output = {\n              earningsEnd,\n              earningsStart\n            };\n          }\n        break;\n        case 'redeemableBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              redeemableBalance:output.toString()\n            });\n          }\n        break;\n        case 'score':\n          const tokenScore = await this.functionsUtil.getTokenScore(this.props.tokenConfig,isRisk);\n          if (setState){\n            this.setStateSafe({\n              score:tokenScore ? tokenScore : false\n            });\n          }\n          output = tokenScore;\n        break;\n        case 'pool':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              poolSize:output.toString()\n            });\n          }\n        break;\n        case 'earningsPercCurve':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earningsPercCurveDirection:parseFloat(output)>0 ? 'up' : 'down',\n              earningsPercCurve:parseFloat(output).toFixed(decimals)\n            });\n          }\n        break;\n        case 'earningsPerc':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earningsPerc:parseFloat(output).toFixed(decimals),\n              earningsPercDirection:parseFloat(output)>0 ? 'up' : 'down'\n            });\n          }\n        break;\n        case 'apr':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            let tokenAPR = '-';\n            if (typeof this.props.tokenConfig.showAPR === 'undefined' || this.props.tokenConfig.showAPR){\n              tokenAPR = parseFloat(output).toFixed(decimals);\n            }\n            this.setStateSafe({\n              tokenAPR\n            });\n          }\n        break;\n        case 'oldApy':\n          if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.oldContract){\n            const oldTokenConfig = Object.assign({},this.props.tokenConfig);\n            oldTokenConfig.idle = Object.assign({},this.props.tokenConfig.migration.oldContract);\n            oldTokenConfig.protocols = Object.values(this.props.tokenConfig.protocols);\n\n            // Override token with name\n            oldTokenConfig.idle.token = oldTokenConfig.idle.name;\n\n            // Replace protocols with old protocols\n            if (oldTokenConfig.migration.oldProtocols){\n              oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n                const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n                if (foundProtocol){\n                  const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                  oldTokenConfig.protocols[protocolPos] = oldProtocol;\n                }\n              });\n            }\n\n            output = await this.functionsUtil.loadAssetField('apy',this.props.token,oldTokenConfig,this.props.account,false);\n\n          } else {\n            output = await this.loadField('apyNoGov');\n          }\n\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                oldAPY:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                oldAPY:false\n              });\n            }\n          }\n        break;\n        case 'apyNoGov':\n          output = await this.functionsUtil.loadAssetField('apy',this.props.token,this.props.tokenConfig,this.props.account,false);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                tokenAPYNoGov:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                tokenAPYNoGov:false\n              });\n            }\n          }\n        break;\n        case 'curveApy':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                curveApy:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                curveApy:false\n              });\n            }\n          }\n        break;\n        case 'curveAvgSlippage':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                curveAvgSlippage:(parseFloat(output)*100).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                curveAvgSlippage:false\n              });\n            }\n          }\n        break;\n\n        case 'apy':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              const tokenAPY = parseFloat(output).toFixed(decimals);\n              const showTooltip = !this.props.isMobile && (fieldInfo.showTooltip !== undefined && fieldInfo.showTooltip);\n              const govTokensAprs = showTooltip ? await this.functionsUtil.getGovTokensAprs(this.props.token,this.props.tokenConfig) : null;\n              this.setStateSafe({\n                tokenAPY,\n                govTokensAprs\n              });\n            } else {\n              this.setStateSafe({\n                tokenAPY:false\n              });\n            }\n          }\n        break;\n        case 'allocationChart':\n          let allocationChartWidth = 0;\n          let allocationChartHeight = 0;\n\n          const resizeAllocationChart = () => {\n            const allocationChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (allocationChartRowElement){\n              const $allocationChartRowElement = window.jQuery(allocationChartRowElement);\n              allocationChartWidth = $allocationChartRowElement.innerWidth()-parseFloat($allocationChartRowElement.css('padding-right'))-parseFloat($allocationChartRowElement.css('padding-left'));\n              allocationChartHeight = $allocationChartRowElement.innerHeight();\n\n              // Make it a square\n              allocationChartWidth = parseInt(allocationChartWidth)>0 ? Math.min(allocationChartWidth,allocationChartHeight) : allocationChartHeight;\n              allocationChartHeight = allocationChartWidth;\n\n\n              if (allocationChartWidth !== this.state.allocationChartWidth){\n                if (setState){\n                  this.setStateSafe({\n                    allocationChartWidth,\n                    allocationChartHeight\n                  });\n                }\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAllocationChart();\n          window.removeEventListener('resize', resizeAllocationChart.bind(this));\n          window.addEventListener('resize', resizeAllocationChart.bind(this));\n\n          if (setState){\n            this.setStateSafe({\n              allocationChartWidth,\n              allocationChartHeight\n            });\n          }\n        break;\n        case 'aprChart':\n          // Set start timestamp for v3 tokens\n          const aprChartEndTimestamp = isRisk ? this.functionsUtil.getGlobalConfig(['stats','versions','v3','endTimestamp']) : null;\n          const aprChartStartTimestamp = isRisk ? aprChartEndTimestamp-(7*24*60*60) : Math.max(this.functionsUtil.getGlobalConfig(['stats','versions','v3','startTimestamp']),parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(new Date()).format('DD/MM/YYYY 00:00:00'),'DD/MM/YYYY HH:mm:ss').subtract(7,'days')._d.getTime()/1000));\n\n          // Check for cached data\n          let aprChartData = null;\n          const cachedDataKey = `aprChart_${this.props.tokenConfig.address}_${isRisk}`;\n          const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n\n          aprChartData = [{\n            id:this.props.token,\n            color: this.props.color ? this.props.color : 'hsl('+this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token,'color','hsl']).join(',')+')',\n            data: []\n          }];\n\n          if (cachedData !== null){\n            aprChartData = cachedData;\n          } else {\n\n            // FAKE CHART DATA\n            if (this.props.token === 'COMP'){\n              aprChartData[0].data = [];\n              const startTimestamp = new Date().getTime();\n              let y = 20;\n              for (var i=0; i<=16; i++) {\n                const mDate = this.functionsUtil.strToMoment(startTimestamp).add(i,'day');\n                const x = mDate.format(\"YYYY/MM/DD HH:mm\");\n                // Grow\n                if ((i>=5 && i<=10) || (i>=13)){\n                  y+=Math.random()*4+2; // Risk\n                  // y+=Math.random()*7+4; // Best\n                // Decrease\n                } else {\n                  y-=Math.random()*3+1; // Risk\n                  // y-=Math.random()*3+1; // Best\n                }\n                aprChartData[0].data.push({x,y});\n              }\n            } else {\n              const frequencySeconds = this.functionsUtil.getFrequencySeconds('hour',12);\n              const apiResultsAprChart = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,aprChartStartTimestamp,aprChartEndTimestamp,false,frequencySeconds);\n\n              // if (isRisk){\n              //   debugger;\n              // }\n\n              apiResultsAprChart.forEach((d,i) => {\n                const x = this.functionsUtil.strToMoment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n                const y = parseFloat(this.functionsUtil.fixTokenDecimals(d.idleRate,18));\n                aprChartData[0].data.push({ x, y });\n              });\n            }\n\n            this.functionsUtil.setCachedData(cachedDataKey,aprChartData);\n          }\n\n\n          // Add same value\n          if (aprChartData[0].data.length === 1){\n            const newPoint = Object.assign({},aprChartData[0].data[0]);\n            newPoint.x = this.functionsUtil.strToMoment(newPoint,\"YYYY/MM/DD HH:mm\").add(1,'hours').format(\"YYYY/MM/DD HH:mm\")\n            aprChartData[0].data.push(newPoint);\n          }\n\n          let aprChartWidth = 0;\n          let aprChartHeight = 0;\n\n          const resizeAprChart = () => {\n            const aprChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (aprChartRowElement){\n              const $aprChartRowElement = window.jQuery(aprChartRowElement);\n              aprChartWidth = $aprChartRowElement.innerWidth()-parseFloat($aprChartRowElement.css('padding-right'))-parseFloat($aprChartRowElement.css('padding-left'));\n              aprChartHeight = $aprChartRowElement.innerHeight();\n              if (aprChartWidth !== this.state.aprChartWidth || !this.state.aprChartHeight){\n                this.setStateSafe({\n                  aprChartWidth,\n                  aprChartHeight: this.state.aprChartHeight ? this.state.aprChartHeight : aprChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAprChart();\n          window.removeEventListener('resize', resizeAprChart.bind(this));\n          window.addEventListener('resize', resizeAprChart.bind(this));\n\n          // Set chart type\n          const aprChartType = Line;\n\n          const aprChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            axisLeft:null,\n            animate:false,\n            axisBottom:null,\n            enableArea:true,\n            areaOpacity:0.1,\n            curve:'monotoneX',\n            enableGridX:false,\n            enableGridY:false,\n            pointBorderWidth:2,\n            isInteractive:true,\n            colors:d => d.color,\n            defs:[\n              linearGradientDef('gradientArea', [\n                  { offset: 0, color: '#faf047' },\n                  { offset: 50, color: '#e4b400' },\n              ])\n            ],\n            enableSlices:this.props.isMobile ? false : 'x',\n            yFormat:value => parseFloat(value).toFixed(2)+'%',\n            fill:[\n              { match: { id: this.props.token } , id: 'gradientArea' },\n            ],\n            margin: { top: 10, right: 0, bottom: 0, left: 0 },\n            sliceTooltip:(slideData) => {\n              const { slice } = slideData;\n              const point = slice.points[0];\n              return (\n                <CustomTooltip\n                  point={point}\n                >\n                  {\n                  typeof slice.points === 'object' && slice.points.length &&\n                    slice.points.map(point => {\n                      const protocolName = point.serieId;\n                      const protocolEarning = point.data.yFormatted;\n                      // const protocolApy = point.data.apy;\n                      return (\n                        <CustomTooltipRow\n                          key={point.id}\n                          color={point.color}\n                          label={protocolName}\n                          value={protocolEarning}\n                        />\n                      );\n                    })\n                  }\n                </CustomTooltip>\n              );\n            }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                aprChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              aprChartType,\n              aprChartData,\n              aprChartProps,\n              aprChartWidth,\n              aprChartHeight\n            });\n          }\n          output = aprChartData;\n        break;\n        case 'performanceChart':\n          let firstTokenPrice = null;\n          let firstIdleBlock = null;\n          /*\n          let performanceChartWidth = 0;\n          let performanceChartHeight = 0;\n\n          const performanceChartRowElement = document.getElementById(this.props.rowId) ? document.getElementById(this.props.rowId) : document.getElementById(this.props.parentId);\n          if (performanceChartRowElement){\n            performanceChartWidth = parseFloat(performanceChartRowElement.offsetWidth)>0 ? performanceChartRowElement.offsetWidth* (this.props.colProps ? this.props.colProps.width : 1) : 0;\n            performanceChartHeight = parseFloat(performanceChartRowElement.offsetHeight);\n          }\n          */\n\n          let performanceChartWidth = 0;\n          let performanceChartHeight = 0;\n\n          const resizePerformanceChart = () => {\n            const PerformanceChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (PerformanceChartRowElement){\n              const $PerformanceChartRowElement = window.jQuery(PerformanceChartRowElement);\n              performanceChartWidth = $PerformanceChartRowElement.innerWidth()-parseFloat($PerformanceChartRowElement.css('padding-right'))-parseFloat($PerformanceChartRowElement.css('padding-left'));\n              performanceChartHeight = $PerformanceChartRowElement.innerHeight();\n              if (performanceChartWidth !== this.state.performanceChartWidth || !this.state.performanceChartHeight){\n                this.setStateSafe({\n                  performanceChartWidth,\n                  performanceChartHeight: this.state.performanceChartHeight ? this.state.performanceChartHeight : performanceChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizePerformanceChart();\n          window.removeEventListener('resize', resizePerformanceChart.bind(this));\n          window.addEventListener('resize', resizePerformanceChart.bind(this));\n\n          const apr_end_date = this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(new Date()).subtract(1,'day').format('YYYY-MM-DD 23:59'),'YYYY-MM-DD HH:mm');\n          const apr_start_date = apr_end_date.clone().subtract(1,'week');\n\n          // Set start timestamp for v3 tokens\n          const apr_start_timestamp =  Math.max(this.functionsUtil.getGlobalConfig(['stats','versions','v3','startTimestamp']),parseInt(apr_start_date._d.getTime()/1000));\n          // const apr_end_timestamp = parseInt(apr_end_date._d.getTime()/1000);\n\n          let apiResultsPerformanceChart = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,apr_start_timestamp,null,false,43200);\n\n          const idleTokenPerformance = apiResultsPerformanceChart.map((d,i) => {\n            let y = 0;\n            const x = this.functionsUtil.strToMoment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n            const tokenPrice = this.functionsUtil.fixTokenDecimals(d.idlePrice,this.props.tokenConfig.decimals);\n\n            if (!firstTokenPrice){\n              firstTokenPrice = tokenPrice;\n            } else {\n              y = parseFloat(tokenPrice.div(firstTokenPrice).minus(1).times(100));\n            }\n\n            if (firstIdleBlock === null){\n              firstIdleBlock = parseInt(d.blocknumber);\n            }\n\n            return { x, y };\n          });\n\n          const performanceChartData = [{\n            id:'Idle',\n            color: 'hsl('+this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token,'color','hsl']).join(',')+')',\n            data: idleTokenPerformance\n          }];\n\n          // Set chart type\n          const performanceChartType = Line;\n\n          const performanceChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            animate:false,\n            axisLeft:null,\n            axisBottom:null,\n            enableArea:true,\n            enableGridX:false,\n            enableGridY:false,\n            curve:'monotoneX',\n            enableSlices:false,\n            pointBorderWidth:1,\n            colors:d => d.color,\n            pointLabelYOffset:-12,\n            margin: { top: 0, right: 0, bottom: 0, left: 0 }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                performanceChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              performanceChartType,\n              performanceChartData,\n              performanceChartProps,\n              performanceChartWidth,\n              performanceChartHeight\n            });\n          }\n          output = performanceChartData;\n        break;\n        case 'custom':\n          const path = fieldInfo.path;\n          output = this.functionsUtil.getArrayPath(path,this.props.tokenConfig);\n          if (output){\n            this.setStateSafe({\n              [fieldName]:output\n            });\n          }\n        break;\n        default:\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              ready:true,\n              [fieldName]:output\n            });\n          }\n        break;\n      }\n    }\n    return output;\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n    let output = null;\n\n    const showLoader = fieldInfo.showLoader === undefined || fieldInfo.showLoader;\n    const loader = showLoader ? (<Loader size=\"20px\" />) : null;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n      \n    const maxPrecision = fieldProps && fieldProps.maxPrecision ? fieldProps.maxPrecision : 5;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    const minPrecision = fieldProps && fieldProps.minPrecision ? fieldProps.minPrecision : ( this.props.isMobile ? 3 : 4 );\n\n    switch (fieldInfo.name){\n      case 'iconTooltip':\n        const icon1 = this.props.tokenConfig && this.props.tokenConfig.icon ? this.props.tokenConfig.icon : `images/tokens/${this.props.token}.svg`;\n        output = (\n          <Tooltip\n            placement={'top'}\n            message={this.props.token}\n            {...fieldInfo.tooltipProps}\n          >\n            <Image src={icon1} {...fieldProps} />\n          </Tooltip>\n        );\n      break;\n      case 'icon':\n        const icon2 = this.props.tokenConfig && this.props.tokenConfig.icon ? this.props.tokenConfig.icon : `images/tokens/${this.props.token}.svg`;\n        output = (\n          <Image src={icon2} {...fieldProps} />\n        );\n      break;\n      case 'tokenName':\n        output = (\n          <Text {...fieldProps}>{this.props.token}</Text>\n        );\n      break;\n      case 'strategyIcon':\n        const strategyIcon = this.functionsUtil.getGlobalConfig(['strategies',this.props.tokenConfig.strategy,'icon']);\n        if (strategyIcon){\n          output = (\n            <Image src={strategyIcon} {...fieldProps} />\n          );\n        }\n      break;\n      case 'strategyName':\n        const strategyName = this.functionsUtil.getGlobalConfig(['strategies',this.props.tokenConfig.strategy,'title']);\n        output = (\n          <Text {...fieldProps}>{strategyName}</Text>\n        );\n      break;\n      case 'tokenBalance':\n        output = this.state.tokenBalance ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.tokenBalance} />\n        ) : loader\n      break;\n      case 'fee':\n        output = this.state.fee ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.fee} />\n        ) : loader\n      break;\n      case 'tokenPrice':\n        output = this.state.tokenPrice ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.tokenPrice} />\n        ) : loader\n      break;\n      case 'amountToMigrate':\n        output = this.state.amountToMigrate ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.amountToMigrate} />\n        ) : loader\n      break;\n      case 'idleTokenBalance':\n        output = this.state.idleTokenBalance ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.idleTokenBalance} />\n        ) : loader\n      break;\n      case 'redeemableBalanceCounterCurve':\n        output = this.state.ready && this.state.redeemableBalanceCurveStart && this.state.redeemableBalanceCurveEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.redeemableBalanceCurveEnd)}\n            start={parseFloat(this.state.redeemableBalanceCurveStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'redeemableBalanceCounter':\n        output = this.state.ready && this.state.redeemableBalanceStart && this.state.redeemableBalanceEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.redeemableBalanceEnd)}\n            start={parseFloat(this.state.redeemableBalanceStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'feesCounter':\n        output = this.state.ready && this.state.feesStart && this.state.feesEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.feesEnd)}\n            start={parseFloat(this.state.feesStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounterCurve':\n        output = this.state.ready && this.state.earningsCurveStart && this.state.earningsCurveEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsCurveEnd)}\n            start={parseFloat(this.state.earningsCurveStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounter':\n        output = this.state.ready && this.state.earningsStart && this.state.earningsEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsEnd)}\n            start={parseFloat(this.state.earningsStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'redeemableBalance':\n        output = this.state.redeemableBalance ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.redeemableBalance} />\n        ) : loader\n      break;\n      case 'govTokens':\n        output = this.state.govTokens ? (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'flex-start'}\n          >\n            {\n              Object.values(this.state.govTokens).map( (govTokenConfig,govTokenIndex) => (\n                <AssetField\n                  token={govTokenConfig.token}\n                  tokenConfig={govTokenConfig}\n                  key={`asset_${govTokenIndex}`}\n                  fieldInfo={{\n                    name:'iconTooltip',\n                    tooltipProps:{\n                      message:`${govTokenConfig.token}`+(this.state.getGovTokensDistributionSpeed && this.state.getGovTokensDistributionSpeed[govTokenConfig.token] ? `: ${this.state.getGovTokensDistributionSpeed[govTokenConfig.token].toFixed(decimals)}/${govTokenConfig.distributionFrequency} (for the whole pool)` : '')\n                    },\n                    props:{\n                      borderRadius:'50%',\n                      position:'relative',\n                      height:['1.1em','2em'],\n                      ml:govTokenIndex ? '-10px' : 0,\n                      zIndex:Object.values(this.state.govTokens).length-govTokenIndex,\n                      boxShadow:['1px 1px 1px 0px rgba(0,0,0,0.1)','1px 2px 3px 0px rgba(0,0,0,0.1)'],\n                    }\n                  }}\n                />\n              ))\n            }\n          </Flex>\n        ) : loader\n      break;\n      case 'amountLentCurve':\n        output = this.state.amountLentCurve ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.amountLentCurve} />\n        ) : loader\n      break;\n      case 'amountLent':\n        output = this.state.amountLent ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.amountLent} />\n        ) : loader\n      break;\n      case 'pool':\n        output = this.state.poolSize ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.poolSize} />\n        ) : loader\n      break;\n      case 'score':\n        // console.log('score',this.state.score);\n        output = this.state.score !== undefined && this.state.score !== null ? (\n          <SmartNumber {...fieldProps} decimals={1} number={this.state.score} />\n        ) : loader\n      break;\n      case 'earningsPerc':\n        output = this.state.earningsPerc ?\n          (typeof fieldInfo.showDirection === 'undefined' || fieldInfo.showDirection) ? (\n            <VariationNumber\n              isMobile={this.props.isMobile}\n              direction={this.state.earningsPercDirection}\n            >\n              <Text {...fieldProps}>{this.state.earningsPerc}%</Text>\n            </VariationNumber>\n          ) : (\n            <Text {...fieldProps}>{this.state.earningsPerc}%</Text>\n          )\n        : loader\n      break;\n      case 'earningsPercCurve':\n        output = this.state.earningsPercCurve ?\n          (typeof fieldInfo.showDirection === 'undefined' || fieldInfo.showDirection) ? (\n            <VariationNumber\n              isMobile={this.props.isMobile}\n              direction={this.state.earningsPercCurveDirection}\n            >\n              <Text {...fieldProps}>{this.state.earningsPercCurve}%</Text>\n            </VariationNumber>\n          ) : (\n            <Text {...fieldProps}>{this.state.earningsPercCurve}%</Text>\n          )\n        : loader\n      break;\n      case 'earningsCurve':\n        output = this.state.earningsCurve ? (\n          <VariationNumber\n            direction={'up'}\n            isMobile={this.props.isMobile}\n          >\n            <SmartNumber\n              {...fieldProps}\n              decimals={decimals}\n              minPrecision={minPrecision}\n              number={this.state.earningsCurve}\n            />\n          </VariationNumber>\n        ) : loader\n      break;\n      case 'earnings':\n        output = this.state.earnings ? (\n          <VariationNumber\n            direction={'up'}\n            isMobile={this.props.isMobile}\n          >\n            <SmartNumber\n              {...fieldProps}\n              decimals={decimals}\n              minPrecision={minPrecision}\n              number={this.state.earnings}\n            />\n          </VariationNumber>\n        ) : loader\n      break;\n      case 'idleDistribution':\n        const governanceTokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n        const idleTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',governanceTokenName]);\n        output = this.state.idleDistribution ? (\n          <Text {...fieldProps}>+{this.state.idleDistribution.toFixed(decimals)} IDLE/{idleTokenConfig.distributionFrequency}</Text>\n        ) : loader\n      break;\n      case 'userDistributionSpeed':\n        output = this.state.userDistributionSpeed ? (\n          <Text {...fieldProps}>{this.state.userDistributionSpeed.toFixed(decimals)}/{this.props.tokenConfig.distributionFrequency}</Text>\n        ) : loader\n      break;\n      case 'distributionSpeed':\n        output = this.state.distributionSpeed ? (\n          <Text {...fieldProps}>{this.state.distributionSpeed.toFixed(decimals)}</Text>\n        ) : loader\n      break;\n      case 'apr':\n        output = this.state.tokenAPR ? (\n          <Text {...fieldProps}>{this.state.tokenAPR}{!isNaN(parseFloat(this.state.tokenAPR)) ? '%' : ''}</Text>\n        ) : loader\n      break;\n      case 'oldApy':\n        output = this.state.oldAPY !== undefined ? (\n          <Text {...fieldProps}>{this.state.oldAPY !== false ? this.state.oldAPY : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'apyNoGov':\n        output = this.state.tokenAPYNoGov !== undefined ? (\n          <Text {...fieldProps}>{this.state.tokenAPYNoGov !== false ? this.state.tokenAPYNoGov : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'curveApy':\n        output = this.state.curveApy !== undefined ? (\n          <Text {...fieldProps}>{this.state.curveApy !== false ? this.state.curveApy : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'curveAvgSlippage':\n        output = this.state.curveAvgSlippage !== undefined ? (\n          <Text {...fieldProps}>{this.state.curveAvgSlippage !== false ? this.state.curveAvgSlippage : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'apy':\n        output = this.state.tokenAPY !== undefined ? (\n          <Flex\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            <Text {...fieldProps}>{this.state.tokenAPY !== false ? this.state.tokenAPY : '-' }<small>%</small></Text>\n            {\n              this.state.govTokensAprs && Object.keys(this.state.govTokensAprs).length>0 && \n                <AssetField\n                  fieldInfo={{\n                    name:'tooltip',\n                    props:{\n                      iconProps:{\n                        ml:1\n                      },\n                      placement:'top',\n                      message:Object.keys(this.state.govTokensAprs).map( govToken => {\n                        const distributionFrequency = this.functionsUtil.getGlobalConfig(['govTokens',govToken,'distributionFrequency']);\n                        const tooltipMode = this.functionsUtil.getGlobalConfig(['govTokens',govToken,'aprTooltipMode']);\n                        let value = this.state.govTokensAprs[govToken].toFixed(decimals);\n                        switch (tooltipMode){\n                          default:\n                          case 'apr':\n                            value += '%';\n                          break;\n                          case 'distribution':\n                            value = `${value}/${distributionFrequency}`;\n                          break;\n                        }\n                        return `${govToken}: ${value}`\n                      }).join('; ')\n                    }\n                  }}\n                />\n            }\n          </Flex>\n        ) : loader\n      break;\n      case 'button':\n        const buttonLabel = typeof fieldInfo.label === 'function' ? fieldInfo.label(this.props) : fieldInfo.label;\n        output = (\n          <Button {...fieldProps} onClick={() => fieldProps.handleClick(this.props) }>{buttonLabel}</Button>\n        );\n      break;\n      case 'performanceChart':\n        output = this.state.performanceChartData ? (\n          <GenericChart\n            {...this.state.performanceChartProps}\n            type={this.state.performanceChartType}\n            data={this.state.performanceChartData}\n            width={this.state.performanceChartWidth}\n            height={this.state.performanceChartHeight}\n          />\n        ) : loader\n      break;\n      case 'allocationChart':\n        output = this.state.allocationChartWidth && this.state.allocationChartHeight ? (\n          <AllocationChart\n            {...this.props}\n            loaderProps={{\n              size:'20px'\n            }}\n            loaderText={''}\n            selectedToken={this.props.token}\n            width={this.state.allocationChartWidth}\n            height={this.state.allocationChartHeight}\n            inline={typeof this.props.inline !== 'undefined' ? this.props.inline : true}\n            showLoader={typeof this.props.showLoader !== 'undefined' ? this.props.showLoader : false}\n          />\n        ) : loader\n      break;\n      case 'tooltip':\n        output = (\n          <Tooltip\n            {...fieldProps}\n          >\n            <Icon\n              ml={2}\n              name={\"Info\"}\n              size={'1em'}\n              color={'cellTitle'}\n              {...fieldProps.iconProps}\n            />\n          </Tooltip>\n        );\n      break;\n      case 'aprChart':\n        output = this.state.aprChartData ? (\n          <GenericChart\n            {...this.state.aprChartProps}\n            type={this.state.aprChartType}\n            data={this.state.aprChartData}\n            width={this.state.aprChartWidth}\n            height={this.state.aprChartHeight}\n          />\n        ) : loader\n      break;\n      case 'custom':\n        let CustomComponent = null;\n        let customValue = this.state[fieldInfo.name];\n        switch (fieldInfo.type){\n          case 'number':\n            customValue = this.functionsUtil.BNify(customValue).toString();\n            CustomComponent = SmartNumber;\n            fieldProps.number = customValue;\n          break;\n          case 'icon':\n            CustomComponent = Icon;\n            fieldProps.name = customValue;\n            const customFieldName = Object.values(fieldInfo.path).pop();\n            if (this.props.tokenConfig[`${customFieldName}Props`]){\n              const customFieldProps = this.props.tokenConfig[`${customFieldName}Props`];\n              // Replace props\n              if (customFieldProps && Object.keys(customFieldProps).length){\n                Object.keys(customFieldProps).forEach(p => {\n                  fieldProps[p] = customFieldProps[p];\n                });\n              }\n            }\n          break;\n          default:\n            CustomComponent = Text;\n          break;\n        }\n        output = customValue ? (\n          <CustomComponent {...fieldProps}>{customValue}</CustomComponent>\n        ) : loader\n      break;\n      default:\n        let formattedValue = this.state[fieldInfo.name];\n        if (this.state[fieldInfo.name] && this.state[fieldInfo.name]._isBigNumber){\n          formattedValue = this.state[fieldInfo.name].toFixed(decimals);\n        }\n        output = this.state[fieldInfo.name] ? (\n          <Text {...fieldProps}>{formattedValue}</Text>\n        ) : loader\n      break;\n    }\n    return output;\n  }\n}\n\nexport default AssetField;\n"],"sourceRoot":""}