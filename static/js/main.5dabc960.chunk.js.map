{"version":3,"sources":["ChartCustomTooltipRow/ChartCustomTooltipRow.js","PageNotFound/PageNotFound.module.scss","utilities/components/ShortHash.js","LoadingSpinner/LoadingSpinner.js","ButtonLoader/ButtonLoader.js","TransactionListFilters/TransactionListFilters.js","TransactionsList/TransactionsList.js","SmartNumber/SmartNumber.js","RoundButton/RoundButton.js","CustomTooltip/CustomTooltip.js","AllocationChart/AllocationChart.js","CustomTooltip/CustomTooltipRow.js","CustomField/CustomField.js","PortfolioEquity/PortfolioEquity.js","ChartCustomTooltip/ChartCustomTooltip.js","TxProgressBar/TxProgressBar.js","theme.js","CustomList/CustomList.js","ActiveCoverages/ActiveCoverages.js","TableCellHeader/TableCellHeader.module.scss","TransactionListFilters/TransactionListFilters.module.scss","utilities/components/ModalCard.module.scss","Web3ConnectionButtons/Web3ConnectionButtons.module.scss","GenericSelector/GenericSelector.js","AssetSelector/AssetSelector.js","CardIconButton/CardIconButton.js","utilities/components/Header.module.scss","IconBox/IconBox.js","Tos/Tos.module.scss","TransactionField/TransactionField.js","Title/Title.js","GenericChart/GenericChart.js","ExecuteTransaction/ExecuteTransaction.js","DashboardCard/DashboardCard.module.scss","FastBalanceSelector/FastBalanceSelector.js","Staking/Staking.js","TokenSwap/TokenSwap.js","SendTxWithBalance/SendTxWithBalance.js","LpStaking/LpStaking.js","IdleStaking/IdleStaking.js","NexusMutual/NexusMutual.js","TokenWrapper/TokenWrapper.js","PortfolioDonut/PortfolioDonut.js","TotalEarningsCounter/TotalEarningsCounter.js","EarningsEstimation/EarningsEstimation.js","DashboardIconButton/DashboardIconButton.js","TotalBalanceCounter/TotalBalanceCounter.js","StrategyPage/StrategyPage.js","BatchDeposit/BatchDeposit.js","CoverProtocol/CoverProtocol.js","TokenMigration/TokenMigration.js","BatchMigration/BatchMigration.js","DeployB2BVesting/DeployB2BVesting.js","configs/globalConfigs.js","utilities/IdleGovToken.js","utilities/FunctionsUtil.js","DashboardCard/DashboardCard.js","Tos/Tos.js","theme-dark.js","App/connectors/TorusConnector.js","App/connectors/AuthereumConnector.js","App/connectors/GnosisSafeConnector.js","App/connectors/WalletLinkConnector.js","App/connectors/WalletConnectConnector.js","App/connectors.js","utilities/components/WrongNetworkBanner.js","utilities/NetworkUtil.js","utilities/components/NoWeb3BrowserModal.js","utilities/components/NoWalletModal.js","utilities/GeneralUtil.js","utilities/components/WrongNetworkModal.js","utilities/components/TransactionFeeModal.js","Web3ConnectionButtons/Web3ConnectionButtons.js","utilities/components/ConnectionModal.js","utilities/components/ConnectionPendingModal.js","utilities/components/UserRejectedConnectionModal.js","utilities/components/LowFundsModal.js","utilities/ConnectionModalsUtil.js","utilities/components/ConnectionErrorModal.js","utilities/components/TransactionErrorModal.js","utilities/RimbleWeb3.js","utilities/components/Header.js","ScrollToTop/ScrollToTop.js","PageNotFound/PageNotFound.js","utilities/components/NetworkOverview.js","Web3Debugger/Web3Debugger.js","abis/compound/cDAI.js","abis/tokens/ERC20.js","configs/availableTokens.js","configs/availableTranches.js","utilities/TransactionToastMessages.js","utilities/TransactionToastUtil.js","App/App.js","serviceWorker.js","index.js","TableRow/TableRow.js","TableHeader/TableHeader.js","Migrate/Migrate.js","AssetsList/AssetsList.js","Footer/Footer.module.scss","colors.js","VariationNumber/VariationNumber.js","GenericSelector/GenericSelector.module.scss","LoadingSpinner/LoadingSpinner.module.scss","utilities/components/BuyModal.js","ConnectBox/ConnectBox.js","utilities/components/ModalCard.js","Footer/Footer.js","TableCellHeader/TableCellHeader.js","FlexLoader/FlexLoader.js","ImageButton/ImageButton.js","AssetField/AssetField.js","ExtLink/ExtLink.js"],"names":["ChartCustomTooltipRow","prevProps","prevState","react__WEBPACK_IMPORTED_MODULE_7___default","a","createElement","rimble_ui__WEBPACK_IMPORTED_MODULE_8__","mb","width","alignItems","flexDirection","pr","style","flexBasis","flex","justifyContent","this","props","color","mr","height","borderRadius","backgroundColor","fontSize","fontWeight","textAlign","textTransform","label","whiteSpace","dangerouslySetInnerHTML","__html","value","Component","module","exports","headerContainer","headerBgFiller","bgContainer","list","textContainer","ShortHash","state","text","functionsUtil","setProps","FunctionsUtil","loadUtils","loadData","resolveAddress","shortenHash","hash","getENSName","ensName","setState","loader","size","Object","assign","display","LoadingSpinner","react_default","index_es","className","styles","mx","ButtonLoader","onClick","handleClick","buttonProps","isLoading","src_LoadingSpinner_LoadingSpinner","buttonText","TransactionListFilters","maxWidth","minWidth","maxHeight","isOpened","activeFilters","status","assets","actions","setFilter","filter","_this","objectSpread","defineProperty","applyFilters","toggle","arguments","length","undefined","toggleOpened","resetFilter","resetFilters","_this2","top","zIndex","position","DashboardCard","cardProps","py","px","transition","isInteractive","cursor","isMobile","name","overflow","mt","borderTop","concat","theme","colors","divider","keys","filters","map","filterCategory","filterValues","key","TableCellHeader","pb","toUpperCase","filterValue","filterLabel","isChecked","my","checked","radioBtn","onChange","e","Text","mainColor","ml","values","v","filterName","hoverColor","TransactionsList","page","prevTxs","txsPerPage","loading","totalTxs","totalPages","deposit","redeem","send","receive","migrate","swap","swapout","withdraw","completed","pending","failed","renderedTxs","processedTxs","lastBlockNumber","processTxs","availableActions","action","toLowerCase","txsIndexes","tx","parseFloat","token","includes","sort","b","timeStamp","Math","ceil","forEach","i","selectedToken","tokenConfig","availableTokens","getGlobalConfig","decimals","min","date","Date","getTxAction","parsedValue","tokenAmount","amount","toFixed","momentDate","strToMoment","push","preventDefault","max","loadTxs","transactionsChanged","JSON","stringify","transactions","enabledTokens","count","account","firstBlockNumber","enabledActions","transactionsList","getEtherscanTxs","etherscanTxs","hashKey","lastTx","pop","blockNumber","parseInt","_this3","_this4","hasActiveFilters","m","FlexLoader","flexProps","minHeight","loaderProps","textProps","id","pt","src_TransactionListFilters_TransactionListFilters","bind","TableHeader","cols","index","txHash","txHashKey","TableRow","rowProps","transaction","window","open","getEtherscanTransactionUrl","rowId","cardId","fieldComponent","TransactionField","prevPage","nextPage","h3","fontFamily","SmartNumber","formattedNumber","number","isNaN","type","formatMoney","precision","abbreviateNumber","maxPrecision","minPrecision","p","showUnit","unitPos","react__WEBPACK_IMPORTED_MODULE_8___default","rimble_ui__WEBPACK_IMPORTED_MODULE_7__","unit","unitProps","RoundButton","boxShadow","react__WEBPACK_IMPORTED_MODULE_6___default","rimble_ui__WEBPACK_IMPORTED_MODULE_5__","children","CustomTooltip","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_7__","point","left","data","itemPos","xFormatted","AllocationChart","chartData","chartProps","selectedSlice","totalAllocation","protocolsAllocations","protocolsAllocationsPerc","componentUnmounted","setStateSafe","newState","callback","getTokenAllocation","padAngle","animate","borderWidth","cornerRadius","motionDamping","innerRadius","motionStiffness","d","onMouseEnter","onMouseLeave","tooltipFormat","sliceLabel","radialLabel","tooltip","container","inline","background","cardBg","labels","fonts","sansSerif","legends","slicesLabelsSkipAngle","radialLabelsSkipAngle","enableRadialLabels","radialLabelsTextXOffset","slicesLabelsTextColor","radialLabelsTextColor","radialLabelsLinkStrokeWidth","radialLabelsLinkDiagonalLength","radialLabelsLinkHorizontalLength","enableSlicesLabels","radialLabelsLinkColor","from","borderColor","modifiers","margin","right","bottom","protocols","protocolInfo","protocolName","protocolAddr","address","protocolAllocationPercParsed","times","globalConfigs","stats","hsl","join","capitalize","protocolIcon","icon","rimble_ui__WEBPACK_IMPORTED_MODULE_9__","src","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_10__","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_13__","Pie","showLoader","CustomTooltipRow","react__WEBPACK_IMPORTED_MODULE_5___default","rimble_ui__WEBPACK_IMPORTED_MODULE_6__","CustomField","fieldInfo","fieldProps","funcProps","CustomComponent","componentHasChildren","fieldType","fieldPath","path","customValue","getArrayPath","row","Image","BNify","toString","Icon","Button","customFieldName","customFieldProps","PortfolioEquity","startDate","chartwidth","chartHeight","loadChartData","quickDateSelectionChanged","quickDateSelection","componentDidMount","mobileChanged","themeModeChanged","themeMode","tokensBalance","firstTxTimestamp","asyncForEach","_ref","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","mark","_callee3","filteredTxs","amountLent","wrap","_context3","prev","next","plus","minus","lt","balance","tokenPrice","idleTokens","stop","_x3","apply","currentDate","clone","subtract","days","prevBalances","prevTimestamp","minChartValue","maxChartValue","aggregatedBalance","aggregatedBalancesKeys","tokensBalancesPerDate","currTimestamp","getTime","tokensData","isRisk","selectedStrategy","_ref2","_callee4","_context4","getTokenApiData","sent","_x4","idleTokenBalance","foundBalances","tokensBalances","lastTokenData","lastTokenDataUnfiltered","filteredTokenData","timestamp","tokenDecimals","filteredBalances","lastFilteredTx","idlePrice","fixTokenDecimals","newBalance","lastTxBalance","gt","tokenUsdConversionRate","conversionRateField","chartToken","conversionRate","isSameOrAfter","isSameOrBefore","formattedDate","format","frequencySeconds","_loop","aggregatedBalances","x","y","balances","itemIndex","item","floor","yFormatDecimals","gridYStep","gridYValues","gridYValue","daysCount","daysFrequency","xScale","yScale","stacked","xFormat","yFormat","axisBottom","legend","tickSize","tickPadding","orient","legendOffset","legendPosition","tickValues","pointSize","useMesh","axisLeft","tickRotation","pointLabel","enableArea","enableSlices","enableGridY","curve","enableGridX","pointBorderWidth","pointLabelYOffset","areaBaselineValue","pointColor","areaOpacity","axis","ticks","fill","grid","line","stroke","lineChartStroke","strokeDasharray","sliceTooltip","slideData","slice","points","_ChartCustomTooltip_ChartCustomTooltip__WEBPACK_IMPORTED_MODULE_11__","_ChartCustomTooltipRow_ChartCustomTooltipRow__WEBPACK_IMPORTED_MODULE_12__","serieId","yFormatted","formattedBalance","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_10__","Line","parentId","parentIdHeight","ChartCustomTooltip","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_9__","TxProgressBar","txCount","error","ended","percentage","processing","txTimestamp","initialized","estimatedTime","remainingTime","_callee","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default","_context","initProgressBar","getTransaction","Promise","_ref3","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__","_callee2","resolve","reject","_context2","web3","eth","err","_x","_x2","abrupt","getBlockTime","blockTime","axios","get","getPredictionTable","_callee5","predictTable","_context5","getTxEstimatedTime","gasPrice","prediction","gasprice","pdValues","_estimateWait","gas","txMeanSecs","block_time","customLog","calculateRemainingTime","_callee6","secondsPassed","timePassed","_context6","div","setTimeout","updateProgressBar","getTxInfo","_callee7","txProgressBarKey","txProgressBarData","_ref8","_ref9","_context7","localStorage","getItem","parse","all","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__","setLocalStorage","_callee8","_context8","clearTimeout","gasoffered","minedProb","expectedWait","sum1","sum2","prob","exp","minutes","seconds","substr","react__WEBPACK_IMPORTED_MODULE_10___default","rimble_ui__WEBPACK_IMPORTED_MODULE_13__","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_11__","textColor","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","endMessage","waitText","span","renderRemainingTime","loadingMessage","sendingMessage","target","rel","href","cancelTransaction","cancelTextColor","cancelTextHoverColor","_colors__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","polished__WEBPACK_IMPORTED_MODULE_1__","__webpack_exports__","breakpoints","fontSizes","fontWeights","letterSpacings","lineHeights","solid","title","copy","serif","counter","space","radii","minWidths","maxWidths","heights","minHeights","maxHeights","borders","borderWidths","shadows","opacity","disabled","primary","blue","base","gradient-bg","primary-light","light","primary-dark","dark","bgBlue","dark-blue","skyBlue","lightBlue","copyColor","subColor","black","baseColors","near-black","dark-gray","mid-gray","gray","grey","silver","light-silver","moon-gray","light-gray","near-white","white","transparent","alert","arrowActive","arrowInactive","selectBgFocused","selectBg","backButtonBg","wrongNetworkBannerBg","dashboardBg","statValue","boxBorder","cellTitle","cellText","link","menuBg","menuHover","flashColor","menuRightBorder","cardHoverShadow","cardBgHover","cardBorder","pageActive","pageInactive","boost","curvein","default","curveout","curvedepositin","curvedepositout","actionBg","blacks","whites","zIndices","messageStyle","shade","tint","success","green","warning","yellow","danger","red","info","buttons","--main-color","--contrast-color","normal","buttonSizes","small","padding","medium","large","CustomList","rows","rowIndex","Base","loaded","activeCoverages","loadCoverages","getActiveCoverages","coverages","c","collateral","statusColors","statusIcon","statusColor","statusIconProps","portfolioCoverage","Title","titleProps","src_CustomList_CustomList","fileClaimUrl","openWindow","fields","mobile","parentProps","actionLabel","actionDisabled","actionUrl","bg","button","GenericSelector","loadComponents","selectedTokenChanged","optionsChanged","options","defaultValueChanged","defaultValue","componentsChanged","CustomOptionValue","CustomValueContainer","ControlComponent","innerProps","menuIsOpen","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_12__","CustomIndicatorSeparator","CustomMenu","selectProps","CustomInputContainer","isSearchable","searchInput","searchInputHidden","CustomOption","selectedValue","o","indexOf","genericSelector","isFocused","react_select__WEBPACK_IMPORTED_MODULE_7__","components","Menu","Option","Control","Input","SingleValue","IndicatorSeparator","AssetSelector","find","_AssetField_AssetField__WEBPACK_IMPORTED_MODULE_9__","showCustomField","cachedData","setCachedData","showBalance","_GenericSelector_GenericSelector__WEBPACK_IMPORTED_MODULE_11__","changeToken","CardIconButton","isActive","isDisabled","image","align","imageProps","useIconOnly","iconColor","iconProps","iconBgColor","gradientButton","empty","select","selectDark","input","IconBox","isVisible","loadField","hashChanged","accountChanged","output","bgColor","textOverflow","rimble_ui__WEBPACK_IMPORTED_MODULE_12__","_utilities_components_ShortHash__WEBPACK_IMPORTED_MODULE_11__","border","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_9__","tokenSymbol","iconSrc","lineHeight","HeadingComponent","component","Heading","h1","GenericChart","addEventListener","handleWindowSizeChange","removeEventListener","chartContainer","document","getElementById","chartWidth","offsetWidth","chartContainerH","ChartType","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_7__","loaderText","ExecuteTransaction","txStatus","console","log","eventData","eventCategory","eventLabel","methodName","eventAction","contractName","getTransactionError","sendGoogleAnalyticsEvent","callbackReceipt","transactionHash","params","getTransactionParams","getTransactionParamsAsync","sendRawTransaction","contractMethodSendWrapper","ExecuteComponent","react__WEBPACK_IMPORTED_MODULE_9___default","_TxProgressBar_TxProgressBar__WEBPACK_IMPORTED_MODULE_11__","network","progressBarProps","execute","componentProps","defaultOpacity","hidden","interactive","rainbow","FastBalanceSelector","onMouseDown","replaceArrayProps","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_10__","Staking","contractInfo","selectedOption","toolProps","contract","initContract","abi","reduce","enabled","SelectedComponent","AssetField","selectToken","TokenSwap","selectedFromToken","selectedDestToken","availableDestinationTokens","selectFromToken","baseToken","regenerator_default","selectDestToken","getGlobalConfigs","paymentProvider","providerInfo","initProps","buttonId","initParams","getInitParams","render","remoteResources","url","j","split","scriptID","script","remoteResourceParams","precall","readyState","onreadystatechange","onload","async","parentElement","appendChild","head","stylesheetId","loadTokens","asyncToGenerator","getContractByName","fromTokenChanged","destTokenChanged","loadKyberWidget","SendTxWithBalance","inputValue","txSucceeded","permitEnabled","showPermitBox","approveEnabled","buttonDisabled","contractApproved","fastBalanceSelector","changeInputValue","call_callback","changeInputCallback","setInputValue","selectedPercentage","tokenBalance","getFastBalanceSelector","setFastBalanceSelector","checkButtonDisabled","lte","approve","callbackApprove","callbackReceiptApprove","checkContractApproved","enableERC20","executeTx","_amount","signedParameters","_params","methodParams","checkLimit","normalizeTokenAmount","eventValue","signPermit","getPermitTransactionParams","approveCallback","actionChanged","tokenBalanceChanged","permitEnabledChanged","approveEnabledChanged","contractChanged","tokenConfigChanged","checkTokenApproved","viewOnly","connectorName","infoBox","steps","step","stepIndex","ExtLink","description","required","togglePermitEnabled","approveDescription","balanceSelectorInfo","placeholder","ConnectBox","LpStaking","globalStats","balanceProp","statsLoaded","stakedBalance","rewardMultiplier","accountingData","selectedAction","successMessage","poolTokenPrice","rewardTokenPrice","tokenWrapperProps","distributionSpeed","transactionSucceeded","showTokenWrapperEnabled","updateData","selectedActionChanged","contractApprovedChanged","contractInfoChanged","userStakedBalance","totalStakedBalance","totalStakingShares","userTotalStakingShare","rewardsPerDay","stakedBalanceUSD","rewardsPerYearUSD","apy","rewardToken","normalizedInputValue","genericContractCall","unstakeRewards","toBN","expiry","r","s","integerValue","totalLocked","totalUnlocked","unlockScheduleCount","collectedRewards","unlockSchedulesPromises","unlockSchedules","totalRewards","totalDeposits","lockedRewards","unlockedRewards","programEndTime","endTime","endAtSec","now","programDuration","utc","initialLockedShares","durationSec","tokensPerSecond","stakingShare","maxMultiplier","distributionSpeedMultiplier","userDistributionSpeed","maxBonusDays","currentRewards","stakedTokensLog","txReceipt","logs","_this5","topics","t","replace","stakedTokens","unstakedTokensLog","unstakedTokens","rewardTokenConfig","receivedRewardsLog","receivedRewards","DAITokenConfig","getSushiswapPoolTokenPrice","getSushiswapConversionRate","getTokenBalance","startContract","wrapMethod","destContract","unwrapMethod","_this6","loadStats","_this7","StatsCard","titleParentProps","isStake","isUnstake","isStats","txAction","poolLink","statInfo","ImageButton","caption","imageSrc","setAction","src_SendTxWithBalance_SendTxWithBalance","flexWrap","IdleStaking","maxApr","lockPeriods","lockedEnd","lockExpired","claimedRewards","increaseAction","lockPeriodInput","internalInfoBox","distributedRewards","selectedLockPeriod","lockPeriodTimestamp","lockEndDateIsMaxEndDate","feeDistributorConfig","feeDistributor","lockPeriodChanged","increaseActionChanged","calculateStkIDLEAmount","minLockPeriod","maxLockPeriod","minDate","add","mDate","maxDate","isAfter","currTime","endDate","endDateTime","_d","maxDateTime","stkIDLEAmount","_value","_unlock_time","getIdleStakingRewardsTxs","genericContractCallCached","getContractBalance","getContractEvents","fromBlock","toBlock","provider","etherscanRewardsTxs","totalSupply","tokenTotalSupply","claimableRewards","lockedInfo","tokenUserBalance","claimable","claimEvents","depositEvents","totalRewardsDays","abs","tokenName","totalClaimedUser","blockInfo","claimedAmount","returnValues","recipient","getBlockInfo","totalDeposited","totalLockedFunds","stkTokenTotalSupply","claimableRewardsFormatted","totalRewardsFormatted","userDeposited","totalCollectedRewards","stakeStartTime","stakedTime","event","depositTimestamp","ts","depositValue","stakePeriod","currentProfit","stakePeriodWeeks","apr","lockEndDate","currDate","isValid","lockedTokensLog","lockedTokens","increaseAmountTokensLog","increaseTokens","_this8","isLock","isClaim","isIncrease","canIncrease","borderBottom","reward","setIncreaseAction","changelockPeriodInput","selectLockPeriod","getIncreaseTimeParams","contractApprovedCallback","claim","NexusMutual","quote","1","2","periodOptions","30","60","90","365","coverId","claimId","capacity","coverCost","amountValue","periodValue","yearlyCost","maxCapacity","amountValid","periodValid","claimableCovers","tokenApproved","selectedPeriod","maxPriceWithFee","transactionParams","transactionValue","yieldTokenBalance","selectedUnderlying","yieldTokenApproved","claimButtonDisabled","selectedCoverToClaim","defaultClaimableCover","selectedUnderlyingConfig","changeAmount","changePeriod","selectPeriod","approveSucceeded","yieldTokenApproveSucceeded","claimInputChange","normalizedAmount","coveredTokenAmount","getClaimTransactionParams","incident","realAddress","claimTransactionSucceeded","loadContracts","buyCoverTransactionSucceeded","getNexusMutualCoverages","coverage","validClaimableCoverFromParam","urlParams","param3","cover","param2","paramIsValidToken","setSelectedAction","changeSelectedToken","requiredNetwork","baseEndpoint","makeRequest","response","selectedUnderlyingChanged","loadTokenData","isETH","underlying","getPoolCapacity","getETHBalance","coverData","period","coverAmount","currency","contractAddress","asset","quoteURL","encodeParameters","price","priceInNXM","expiresAt","generatedAt","COVER_TYPE","feePercentage","basePrice","priceWithFee","mul","divn","amountInWei","toWei","textDecoration","activeColor","reset","utils","toTwosComplement","placement","message","changeSelectedUnderlying","setMaxCoverAmount","borderStyle","periodInfo","getQuote","selectCoverToClaim","coverAsset","claimableAmount","maxCoveredAmount","TokenWrapper","balanceDest","balanceStart","startContractChanged","destContractChanged","loadBalance","updateActionData","mintLog","mintedAmount","withdrawLog","withdrawnAmount","fullWidth","connectAndValidateAccount","PortfolioDonut","totalFunds","parentWidth","selectedTokenConfig","loadPortfolio","portfolio","idle","getIdleTokenPrice","convertTokenBalance","getGovTokensUserBalances","govTokensUserBalances","govToken","govTokenBalance","tokenPercentage","tokenColorHsl","round","radialLabelsLinkOffset","itemWidth","itemHeight","translateY","symbolSize","anchor","direction","itemTextColor","symbolShape","effects","on","strategyIcon","convertToken","Fragment","TotalEarningsCounter","earningsEnd","earningsStart","loadTotalEarnings","contractsInitialized","availableStrategies","counterStyle","oldState","getAccountPortfolio","totalEarnings","totalAmountLent","avgAPY","build_default","delay","decimal","separator","useEasing","duration","end","start","formattingFn","n","countUpRef","ref","EarningsEstimation","tokensEarnings","estimationStepsPerc","estimationStepsOptions","estimationStepsDefaultOption","estimationSteps","0","Month","perc","2 months","3 months","optionName","25","8 months","Year","2 Years","5 Years","loadEarnings","stepsCount","aggregatedEarnings","earnings","earningsYear","amountDeposited","avgBuyPrice","idleTokenPrice","earningsPerc","tokenAPY","tokenAprs","earningsPercStep","possibleSteps","maxPossibleStep","getAmountDeposited","getAvgBuyPrice","slicedToArray","getTokenAprs","avgApr","avgApy","maxCountStep","orderedTokensEarnings","estimationStep","option","setEstimationStepsPerc","tokenIndex","tokenEarnings","estimationStepPerc","finalEarnings","cursorPerc","tokenIcon","tokenRGBColor","estimateIndex","estimationStepEarnings","estimationStepEarningsFormatted","borderRight","wordBreak","gte","pl","src_TotalEarningsCounter_TotalEarningsCounter","estimationLabel","DashboardIconButton","TotalBalanceCounter","counterEnd","counterStart","StrategyPage","depositedTokens","tokensToMigrate","aggregatedValues","remainingTokens","batchedDeposits","portfolioLoaded","availableGovTokens","portfolioEquityStartDate","batchedDepositsAvailableTokens","portfolioEquityQuickSelection","availableTokensChanged","getTokensToMigrate","batchInfo","strategy","deposited","batchDeposits","redeemable","batchRedeems","avgScore","totalBalanceWithScore","_ref4","_ref5","tokenScore","amountLentToken","tokenWeight","getTokenScore","totalBalance","getGovTokensUserTotalBalance","govTokensTotalBalance","govTokensUserBalance","govTokensTotalBalanceTooltip","govTokens","apyLong","riskScore","yieldFarming","nexusMutualConfig","batchDepositConfig","src_TotalBalanceCounter_TotalBalanceCounter","totalEarningsPerc","src_PortfolioDonut_PortfolioDonut","aligItems","setPortfolioEquityQuickSelection","getFrequencySeconds","h4","toolName","toolIndex","toolConfig","src_DashboardIconButton_DashboardIconButton","desc","goToSection","route","ActiveCoverages","AssetsList","visibleOnDesktop","showTooltip","showDirection","src_EarningsEstimation_EarningsEstimation","textSize","BatchDeposit","canClaim","batchTotals","canDeposit","usePermit","lastExecution","hasDeposited","permitSigned","currBatchIndex","batchCompleted","claimSucceeded","componentLoaded","executeSucceeded","migrationEnabled","migrationSucceeded","batchDepositEnabled","migrationContractApproved","migrationEnabledCallback","migrationCallback","checkBatchs","loadStrategies","executeSucceededChanged","callbackExecute","callbackReceiptExecute","migrationContract","migrationContractInfo","getBatchedDepositExecutions","batchExecutions","functions","functionInfo","nonceMethod","permitContract","methods","batchIndex","batchTotal","batchRedeem","batchDeposit","batchDepositInfo","depositEnabled","availableStrategiesKeys","_ref6","strategyConfig","selectStrategy","obj","baseTokenConfig","strategyAvailableTokens","oldContract","migrateFunction","migration","setStrategyToken","batchId","callbackClaim","callbackReceiptClaim","canExecuteBatch","strategyDefaultValue","openTooltipModal","Migrate","useMetaTx","showActions","getTokenPrice","isMigrationTool","showBalanceSelector","migrationIcon","migrationParams","toMigrate","callbackPermit","migrationText","minPoolSize","CoverProtocol","swapInfo","defaultCoverage","selectedCoverage","inputValueChanged","swapInfoChanged","swapFee","covTokens","tokenAmountOut","getSwapInfo","MAX_UINT256","pow","expirationTimestamp","balancerTokenConfig","tokens","dashboardUrl","fixedAmount","mintedClaimLog","mintedNoClaimLog","mintedClaimAmount","mintedNoClaimAmount","claimTokenConfig","claimTokensLog","receivedClaimAmount","balancerPool","noClaimTokenConfig","noClaimTokensLog","receivedNoClaimAmount","collateralAmount","balancerClaimConfig","balancerNoClaimConfig","claimTokenBalance","noClaimTokenBalance","balancerPoolClaimBalance","balancerPoolNoClaimBalance","hasMintedTokens","apyPrice","expirationDate","selectCoverage","isMint","isBuyClaim","isBuyNoClaim","subcaption","BuyModal","showInline","availableMethods","buyToken","TokenMigration","changeFromToken","convertTool","tokenInfo","destTokenConfig","BatchMigration","batchMigrationInfo","batchMigrationDepositEnabled","_ref7","DeployB2BVesting","actionIndex","validated","viewAction","editAction","newAction","maxContracts","actionValid","actionInputs","claimedTokens","deployedContracts","contractDeployed","inputs","validateForm","checkInputs","vesterImplementation","contracts","getContractPastEvents","proxyCreated","deployedContractsAddresses","implementation","proxy","owner","vestingPeriod","availableBalance","depositAmounts","total","claimedTokensLog","returnString","fieldPattern","RegExp","inputIndex","inputInfo","getPatternByFieldType","inputValid","match","actionValue","txError","deployedContract","idleAddress","isLastAction","clonedVesterAddress","events","ProxyCreated","ownerAddress","recipientAddress","initData","depositContracts","claimContracts","onSubmit","handleSubmit","setEditAction","pattern","inputChange","getEtherscanAddressUrl","addAction","deleteAction","setNewAction","setViewAction","readOnly","depositCallback","claimCallback","env","process","appName","version","baseURL","forumURL","darkModeEnabled","betaURL","countries","USA","GBR","AUS","BRA","CHN","CAN","EUR","HKG","IND","MEX","RUS","ZAF","KOR","errorsEnabled","messagesEnabled","connectors","metamask","opera","dapper","coinbase","trustwallet","walletconnect","iconModal","walletlink","gnosis","fortmatic","portis","authereum","torus","trezor","ledger","ledgerlive","custom","newsletterSubscription","endpoint","messages","scoreShort","apyShort","cheapRedeem","curveBonusSlippage","directMint","performanceFee","govTokenApr","govTokenRedeemableBalance","riskScoreShort","redeemSkipGov","batchDepositExecutionSchedule","curveInstructions","analytics","google","debugEnabled","addPostfixForTestnet","pageView","modals","first_deposit_referral","first_deposit_share","welcome","frequency","dashboard","baseRoute","mode","governance","test","startBlock","availableContracts","IDLE","FeeTreasury","PriceOracle","GovernorAlpha","EcosystemFund","IdleController","proposals","7","delegates","n_coins","imageInactive","rates","poolContract","CurvePool","depositContract","CurveDeposit","gaugeContract","LiquidityGaugeV2","zapContract","CurveZap","idleDAIYield","coinIndex","idleUSDCYield","idleUSDTYield","permit","DAI","EIPVersion","USDC","SLP","showAUM","showAPR","protocol","showPrice","aprTooltipMode","distributionMode","distributionFrequency","disabledTokens","COMP","stkAAVE","aToken","addressForPrice","ProxyFactory","MinimalInitializableProxyFactory","LockedIDLE","Timelock","VesterFactory","EarlyRewards","Comptroller","SushiswapRouter","SushiV2Router02","UniswapRouter","UniswapV2Router02","BalancerExchangeProxy","zeroExInstant","orderSource","assetData","affiliateInfo","feeRecipient","tranches","AA","hex","rgb","baseName","features","long","stake","unstake","cantUnstake","cantWithdraw","BB","strategies","best","visible","comingSoon","addGovTokens","titlePostfix","iconName","govTokensEnabled","chartColor","iconInactive","iconInactiveDark","descLong","descShort","risk","TTL","tvls","substack","scores","config","headers","REACT_APP_IDLE_KEY","Authorization","versions","v3","additionalProtocols","endTimestamp","startTimestamp","showPerformanceTooltip","strategiesParams","enabledStrategies","v4","chart","labelTextColorModifiers","performanceTooltip","USD","USDT","TUSD","SUSD","WBTC","WETH","RAI","disabledCharts","FEI","idleDAI+idleUSDC+idleUSDT","compound","aavev2WithStkAAVE","rateField","compoundWithCOMP","fulcrum","dsr","dydx","iearn","aave","aavev2","cream","fuse","skipRebalance","metaTransactionsEnabled","skipMint","minAmountForMint","erc20ForwarderEnabled","skipMintCheckboxEnabled","erc20ForwarderProxyContract","forwarder","erc20Forwarder","function","permitType","IdleDepositForwarder","proxyContract","IdleProxyMinter","minAmountForRebalance","minAmountForRebalanceMetaTx","redeemGovTokens","rebalance","IdleRebalancerV3","availableNetworks","3","4","42","1337","isForked","blocksPerYear","secondsPerYear","requiredConfirmations","enabledNetworks","accountBalanceMinimum","providers","infura","ens","supportedNetworks","nexus","endpoints","etherscan","REACT_APP_ETHERSCAN_KEY","REACT_APP_ETHERSCAN_KEY2","REACT_APP_ETHERSCAN_KEY3","REACT_APP_ETHERSCAN_KEY4","baseUrl","snapshot","whitelist","urls","biconomy","enableLogin","disabledWallets","limits","debug","apiKey","REACT_APP_BICONOMY_KEY","dappId","REACT_APP_BICONOMY_APPID","apiId","simpleID","getNetwork","networkId","networkName","appOrigin","location","origin","appId","renderNotifications","to","notifications","tools","subComponent","stkIDLE","StakingFeeDistributor","LpStakingAbi","SushiLiquidityPool","nexusMutual","IdleTokenV4","ERC20","directProps","yieldTokenCoverGracePeriod","NexusMutualDistributor","incidentsInfo","NexusMutualIncidents","b2bVesting","B2BVester","ethWrapper","coverProtocol","CoverMint","Claim","CovToken","BalancerPool","NoClaim","claimEnabled","IdleBatchedMint","permitName","batchMigration","IdleTokenV3","IdleBatchConverter","idleSUSDYield","idleTUSDYield","idleWBTCYield","idleDAISafe","idleUSDCSafe","idleUSDTSafe","tokenMigration","IdleConverterPersonalSignV4","oldAddresses","idleDAIv2","IdleTokenV2","cDAI","iDAI","aDAI","yDAIv3","yDAIv2","idleUSDCv2","cUSDC","iUSDC","aUSDC","yUSDCv3","yUSDCv2","cUSDT","iUSDT","aUSDT","yUSDTv3","yUSDTv2","idleSUSDv2","aSUSD","ySUSDv3","idleTUSDv2","aTUSD","yTUSDv3","cWBTC","iWBTC","aWBTC","addFunds","showAllTokens","tokenSwap","ETH","USDS","BUSD","EURS","2KEY","ABT","ABYSS","AMPL","ANT","BAM","BAND","BAT","BLZ","BNT","BQX","BTU","CDT","CVC","DAT","DGX","EKG","ELF","ENJ","EQUAD","FXC","GDC","GEN","GHT","GNO","IOST","KEY","KNC","LEND","LINK","LOOM","LRC","MANA","MCO","MET","MFG","MKR","MLN","MTL","MYB","NEXXO","NPXS","OGN","OMG","OST","PAX","PBTC","PLR","PNK","POLY","POWR","PT","QKC","QNT","RAE","REN","REP","REQ","RLC","RSR","RSV","SAN","SNT","SNX","SPIKE","SPN","TKN","TKX","TRYB","UBT","UPP","ZRX","insurance","imageDark","payments","bank","defaultProvider","showDefaultOnly","card","wallet","wyre","captionPos","supportedMethods","supportedCountries","supportedTokens","envParams","accountId","prod","getInfo","selectedMethod","buyParams","referrerAccountId","dest","destCurrency","redirectUrl","k","encodeURIComponent","iframeBox","innerHTML","body","wyreStyle","ramp","badge","hostAppName","userAddress","hostApiKey","REACT_APP_RAMP_KEY","variant","hostLogoUrl","swapAsset","RampInstantSDK","t0","getAccountBalance","getTokenDecimals","payload","purchase","toastProvider","addMessage","secondaryMessage","colorTheme","actionHref","actionText","show","transak","https://global.transak.com/v1/widget.js","REACT_APP_TRANSAK_KEY_TEST","REACT_APP_TRANSAK_KEY_PROD","fee","selectedCountry","fiatCurrency","cryptoCurrencyCode","currencyCode","walletAddress","partnerCustomerId","disableWalletAddressForm","transakGlobal","transakStyle","moonpay","REACT_APP_MOONPAY_KEY_TEST","REACT_APP_MOONPAY_KEY_PROD","baseCurrencyCode","showWalletAddressForm","enabledPaymentMethods","navigator","userAgent","cookie","moonpayStyle","https://instant.0x.org/v3/instant.js","onSuccess","onClose","tokenParams","RimbleWeb3_context","chainId","connector","ethereum","defaultSelectedAssetData","availableAssetDatas","shouldDisableAnalyticsTracking","defaultAssetBuyAmount","kyberSwap","web3Subscription","decodeLogsData","internalType","https://widget.kyber.network/v0.7.5/widget.css","https://widget.kyber.network/v0.7.5/widget.js","querySelectorAll","remove","scripts","lang","paramForwarding","pinnedTokens","defaultPair","commissionId","click","airSwap","https://cdn.airswap.io/airswap-instant-widget.js","onComplete","AirSwapInstant","totle","https://widget.totle.com/latest/dist.js","sourceAssetAddress","sourceAmountDecimal","destinationAssetAddress","destinationAmountDecimal","partnerContractAddress","TotleWidget","nodeId","totleWidgetContainer","run","IdleGovToken","classCallCheck","getBalance","claimRewards","getPriorVotes","priorVotes","_args3","refreshIdleSpeed","getUnclaimedTokens","getAPR","IDLETokenConfig","cachedDataKey","APR","idleDistribution","tokenAllocation","tokenPool","idleDistributedPerYearUSD","_args6","getDistribution","getUniswapConversionRate","totalAllocationWithUnlent","getSpeed","idleTokenAddress","idleSpeeds","getCachedDataWithLocalStorage","setCachedDataWithLocalStorage","_x5","_ref10","distribution","_x6","getUserDistribution","_callee10","fixByFrequency","totalSpeed","_args10","_context10","_ref12","_callee9","_ref13","_ref14","idleSpeed","userPoolShare","tokenSpeed","_context9","getUserPoolShare","_x7","fixDistributionSpeed","getAvgApr","_callee12","_args12","_context12","_ref16","_callee11","_ref17","_ref18","idleApr","_context11","_x8","ethereumjsABI","require","profiler","idleGovToken","trimEth","BN","toEth","wei","fromWei","htmlDecode","childNodes","nodeValue","BNify_obj","BigNumber","String","_len","Array","_key","moment","customLogError","_console","_len2","_key2","normalizeSimpleIDNotification","str","arr1","arr2","stripHtml","html","tmp","textContent","innerText","scrollTo","scrollY","change","currentTime","easeInOutQuad","animateScroll","val","getQueryStringParameterByName","results","exec","decodeURIComponent","depositProxyContractInfo","migrationContractAddr","migrationContractOldAddrs","batchMigrationContractAddr","isMigrationTx","isSendTransferTx","isReceiveTransferTx","isDepositTx","isRedeemTx","isSwapTx","shortHash","txStart","txEnd","ensConfig","addressCheck","current","checkAddress","currentProvider","ENS","ensAddress","getEnsAddress","getName","getAddress","getAccountPortfolioTranches","availableTranches","_args5","tranchesBalance","protocolConfig","tranche","trancheConfig","trancheTokenBalance","tranchePool","tranchePrice","trancheUserInfo","trancheApy","poolShare","trancheEarnings","loadTrancheFieldRaw","getTrancheUserInfo","toConsumableArray","trancheInfo","trancheWeight","orderedTokensBalance","_args8","totalBalanceConverted","_ref11","tokenBalanceConverted","getCurveAvgSlippage","processedHashes","curveTokensBalance","curveTxs","avgSlippage","_args9","getCurveAvailableTokens","getCurveTxs","curveTokens","curveTokenPrice","received","slippage","getCurveAvgBuyPrice","prevAvgBuyPrice","_args11","idleTokensBalance","getFirstDepositTx","deposits","firstDepositTx","getDashboardSectionUrl","section","asyncTimeout","ms","getDepositTimestamp","_callee13","firstDepositTxs","_args13","_context13","acc","getTrancheRewardTokensInfo","_ref20","_callee15","stakingRewards","tokensDistribution","_context15","_ref21","_callee14","eventFilters","transfers","firstHarvest","latestHarvest","firstBlock","govTokenConfig","_ref22","_ref23","prevBlockInfo","lastBlockInfo","lastBlockPoolSize","poolSize","elapsedBlocks","elapsedSeconds","lastAmount","totalAmount","tokensPerBlock","tokensPerDay","tokensPerYear","convertedTokensPerYear","tokenApr","tokenApy","_context14","CDO","CDORewards","apr2apy","_x9","_ref24","_callee17","defaultEventsConfig","underlyingEventsConfig","underlyingEventsFilters","_ref25","_ref26","underlying_transfers","trancheToken_transfers","totalAmountDeposited","_context17","_ref27","_callee16","trancheTokenTransferEvent","tokenTransferEvent","trancheTokenAmount","_context16","trancheTokens","_x13","_x10","_x11","_x12","getTrancheUserTransactions","_ref28","_callee18","_context18","_x14","_x15","_x16","getTrancheFirstDepositTx","_ref29","_callee19","_context19","_x17","_x18","_x19","getAmountDepositedTranche","_ref30","_callee20","_context20","_x20","_x21","_x22","_ref31","_callee21","_ref32","_ref33","userAvgPrice","_context21","_x23","_x24","getAmountLent","_callee22","amountLents","_args22","_context22","getEtherscanBaseTxs","_callee23","endBlockNumber","firstIdleBlockNumber","etherscanInfo","etherscanBaseTxs","etherscanBaseEndpoint","etherscanApiUrl","lastCachedTx","lastCachedBlockNumber","etherscanEndpointLastBlock","latestTxs","latestBlockNumbers","txs","requestCount","requestStatus","cachedRequests","_args23","_context23","getCachedRequest","result","makeCachedRequest","filterEtherscanTxs","saveEtherscanTxs","_callee24","_args24","_context24","filterCurveTxs","txsToStore","cachedRequest","saveCachedRequest","_callee25","_ref38","allAvailableTokens","_args25","_context25","processStoredTxs","_ref39","_callee26","_args26","_context26","_x25","_ref40","_callee27","curveTransfersTxs","curveTransfersTxsToDelete","curveZapContract","curvePoolContract","curveSwapContract","curveDepositContract","_args27","_context27","tokenMigrationToolParams","curveTokenConfig","idleToken","internalTxs","isRightToken","iTx","isBatchMigrationTx","isDepositInternalTx","iTx2","isRedeemInternalTx","isConversionTx","isWithdrawTx","curveTx","isCurveTx","isCurveDepositTx","isCurveRedeemTx","isCurveDepositIn","isCurveDepositOut","isCurveZapIn","isCurveZapOut","isCurveTransferOut","isCurveTransferIn","isSwapOutTx","tokenDecimal","tokenValue","newValue","iTxs","withdrawnValue","processEtherscanTransactions","_x26","addStoredTransaction","txKey","tokenKey","storedTxs","getStoredTransactions","updateStoredTransactions","getStoredItem","_ref41","_callee32","txReceipts","baseTokensConfigs","baseTokensAddresses","curveAvailableTokens","_args32","_context32","baseTokenAddress","_ref42","_callee31","minedTxs","_context31","_ref43","_callee30","storedTx","tokensTransfered","_curveTokenPrice","_curveTokenPrice2","curveTxReceipt","filteredLogs","_curveTokenPrice3","_curveTxReceipt","idleTokenDecimals","_filteredLogs","_context30","getCurveTokenPrice","t1","_ref44","_callee28","_context28","getTransactionReceipt","_x31","_x32","baseTokensConfig","t2","_ref45","_callee29","_context29","_x33","_x34","_x29","_x30","_x28","_x27","_ref46","_callee38","txsToProcess","_args38","_context38","_ref47","_callee37","_context37","_ref48","_callee36","isStoredTx","allowedMethods","pendingStatus","txPending","isMetaTx","methodIsAllowed","realTx","txValue","redeemedValueFixed","executeMetaTransactionReceipt","executeMetaTransactionContractAddr","executeMetaTransactionInternalTransfers","IdleProxyMinterInfo","internalTransfer","metaTxValue","metaTxValueFixed","migrationTxReceipt","migrationTxInternalTransfers","migrationInternalTransfer","decodedLogs","migrationValue","migrationValueFixed","_context36","mintIdleToken","redeemIdleToken","migrateFromToIdle","mintIdleTokensProxy","migrateFromAaveToIdle","migrateFromIearnToIdle","executeMetaTransaction","migrateFromFulcrumToIdle","migrateFromCompoundToIdle","method","created","_ref49","_callee33","_context33","_x39","_x40","_ref50","_callee34","_context34","_x41","_x42","raw","_ref51","_callee35","_context35","_x43","_x44","decodeLog","_token","_x37","_x38","_x36","_x35","alias","getCustomAddress","setCustomAddress","customAddress","_ref52","_callee39","error_callback","_args39","_context39","catch","_x45","makeEtherscanApiRequest","_ref53","_callee40","apiKeyIndex","_args40","_context40","_x46","_ref54","_callee41","return_data","_args41","_context41","_x47","code","errorCode","array","prop","shift","configs","checkUrlOrigin","checkUrlBeta","sendGoogleAnalyticsPageview","_callee42","googlePageviewInfo","isOrigin","_args42","_context42","ga","_ref56","_callee44","googleEventsInfo","originOk","currentNetwork","_args44","_context44","_ref57","_callee43","_context43","hitCallback","hitCallbackFail","_x49","_x50","_x48","createContract","_ref58","_callee45","_context45","Contract","_x51","_x52","_x53","getWalletProvider","simpleIDPassUserInfo","userInfo","email","initSimpleID","passUserInfo","baseurl","decimalCount","thousands","negativeSign","Number","getSnapshotProposals","_callee48","activeOnly","validProposals","_args48","_context48","getCachedData","addr","msg","_ref60","_callee47","checkedStrategies","_context47","metadata","_ref61","_callee46","_context46","symbol","_x55","_x54","_ref62","_callee49","forceStartTimestamp","order","limit","filteredCachedData","_filteredData","apiInfo","filteredData","_args49","_context49","_x56","getTokenExchangeRate","_ref63","_callee50","exchangeRateParams","exchangeRate","_context50","_x57","_x58","_ref64","_callee51","_context51","_x59","aprs","allocations","aprWeighted","allocation","quantity","hour","day","week","_callee52","idleTokenConfig","etherscanEndpoint","etherscanTxlist","_context52","getProtocolInfoByAddress","ROUND_FLOOR","normalizeTokenDecimals","normalizedTokenDecimals","checkContractPaused","_callee53","contractPaused","_args53","_context53","parse_json","return_default","clearStoredData","excludeKeys","clear","storedKeysToRemove","storedKey","removeStoredItem","removeItem","setItem","checkRebalance","_ref67","_callee55","lastAllocationsPromises","protocolIndex","newAllocations","diff","_context55","lastAllocationsPromise","_ref68","_callee54","lastAllocations","_context54","_x61","_x62","alloc","_x60","checkMigration","_ref69","_callee56","oldContractBalance","oldContractTokenDecimals","oldContractBalanceFormatted","oldContractName","_context56","_x63","_x64","_ref70","_callee57","eventName","_args57","_context57","_x65","_x66","estimateMethodGasUsage","_ref71","_callee58","_contract$methods","functionCall","gasLimit","_ref72","_ref73","_args58","_context58","getGasPrice","estimateGas","_x67","_x68","_ref74","_callee59","callback_receipt","_contract$methods2","_context59","once","confirmationNumber","receipt","_x69","_x70","_x71","_x72","_x73","getSignatureParameters_v4","signature","isHexStrict","Error","hexToNumber","constructMetaTransactionMessage","nonce","functionSignature","soliditySHA3","toBuffer","checkBiconomyLimits","_ref75","_callee60","biconomyInfo","res","_context60","x-api-key","_x74","sendTxWithPermit","_ref76","_callee61","_contract$methods3","messageToSign","_this$getSignaturePar","_context61","encodeABI","_address","personal","sign","_x75","_x76","_x77","_x78","_x79","_x80","buildBiconomyErc20ForwarderTx","_ref77","_callee62","tokenAddress","callData","buildParams","_context62","txGas","erc20ForwarderClient","buildTx","_x81","_x82","_x83","_x84","_x85","_ref78","_callee64","_context64","_ref79","_callee63","_context63","_x87","_x88","_x86","sendBiconomyTxWithErc20Forwarder","_ref80","_callee65","req","metaInfo","txResponse","fetchReceiptIntervalId","_context65","permitAndSendTxEIP712","setInterval","clearInterval","updateTransaction","_x89","_x90","_x91","_x92","sendBiconomyTxWithPersonalSign","_ref81","_callee66","_this$getSignaturePar2","_context66","getNonce","call","_x93","_x94","_x95","_x96","signPermitEIP2612","_ref82","_callee67","erc20Name","spender","deadline","domain","domainData","_context67","getChainId","verifyingContract","types","EIP712Domain","Permit","primaryType","jsonrpc","substring","_x97","_x98","_x99","_x100","_x101","_x102","_x103","_x104","_ref83","_callee68","baseContractName","holder","spenderContractName","addToNonce","baseContract","spenderContract","permitConfig","_args68","_context68","net","getId","allowed","_x105","_x106","_x107","_ref84","_callee69","permitParams","methodAbi","useNonce","_args69","_context69","_jsonInterface","f","unshift","_x108","_x109","_x110","_x111","_x112","_x113","_x114","sendSignedTx","_ref85","_callee70","MetaTransaction","dataToSign","_context70","_x115","_x116","_x117","_x118","_x119","_ref86","_callee71","contractAddr","walletAddr","_ref87","_ref88","allowance","_context71","getAllowance","_x120","_x121","_x122","_ref89","_callee72","_context72","_x123","_x124","_x125","contractMethodSendWrapperWithValue","txData","disableERC20","getTrancheStakedBalance","_ref90","_callee73","_args73","_context73","_x126","_x127","getTrancheStakingRewards","_ref91","_callee75","_context75","_ref92","_callee74","tokenGlobalConfig","_context74","_x130","_x128","_x129","_ref93","_callee76","field","_args76","_context76","loadTrancheField","_x131","_x132","_x133","_x134","_x135","_x136","_x137","_x138","_ref94","_callee77","formatValue","addTokenName","idleStrategyAddress","idleGovTokenConfig","_ref95","_ref96","virtualPrice","_ref97","_ref98","staked1","lastPrice1","_ref99","_ref100","deposited1","lastPrice","_ref101","_ref102","redeemable1","staked2","_ref103","_ref104","trancheApy2","deposited3","_ref105","_ref106","trancheFee","earningsCounter","feesStart","feesEnd","_ref107","_ref108","deposited4","redeemable3","_ref109","_ref110","deposited2","redeemable2","_ref111","_ref112","secondsFromFirstTx","rewardsTokensInfo","_ref113","_ref114","rewardsTokens","incentiveTokens","_args77","_context77","Strategy","getTokenTotalSupply","rewardTokenAddr","govTokenAddress","getGovTokenConfigByAddress","_x139","_x140","_x141","_x142","_x143","_x144","_x145","loadAssetField","_ref115","_callee78","addCurveApy","strategyInfo","govTokenAvailableTokens","newTokenConfig","_ref116","_ref117","curveAvgSlippage","curveAvgBuyPrice","curveTokenBalance","_ref118","_ref119","amountLentCurve1","redeemableBalanceCurve","_ref120","_ref121","curveApy","amountLentCurve","redeemableBalanceCurveStart","redeemableBalanceCurveEnd","earningPerYear","_ref122","_ref123","amountLent1","redeemableBalance1","_idleGovToken","blocksPerDay","blocksPerWeek","blocksPerMonth","_idleGovToken2","_idleGovToken3","tokenApys","curveAPY","_ref124","_ref125","tokenPriceFirstDeposit","_ref126","_ref127","daysFirstDeposit","depositTimestamps","_govTokenConfig","_ref128","_ref129","tokenAPY1","amountLent2","redeemableBalanceStart","redeemableBalanceEnd","_earningPerYear","_govTokenConfig2","_ref130","_ref131","idleTokenPrice1","idleTokenBalance2","govTokensBalance","_tokenBalance","redeemableBalance","_ref132","_ref133","amountLentCurve2","redeemableBalanceCurve1","_ref134","_ref135","redeemableBalance2","_args78","_context78","getCurveTokenBalance","getCurveAPY","getCurveRedeemableIdleTokens","getGovTokenPool","getTokenPool","getCompUserDistribution","getStkAaveUserDistribution","getIdleGovToken","t3","getCompDistribution","getStkAaveDistribution","t4","getCompAvgApr","t5","t6","t7","getUserTokenFees","t8","t9","getGovTokenUserBalance","_x146","_x147","_x148","_x149","getIdleTokenSupply","_ref136","_callee79","idleTokenSupply","_args79","_context79","_x150","getIdleTokenPriceWithFee","_ref137","_callee80","_ref138","_ref139","priceWFee","_args80","_context80","eq","_x151","_x152","_ref140","_callee81","tokenData","beforePrice","afterPrice","tokenPriceBefore","tokenPriceAfter","timeBefore","timeAfter","timeDiff","priceDiff","priceAcceleration","timeDiffFromBeforePrice","_args81","_context81","_x153","clearCachedData","useLocalStorage","_ref141","_callee82","_ref142","_ref143","idleTokensTotalSupply","userShare","_context82","_x154","_x155","_callee84","coverProtocolConfig","_args84","_context84","_ref145","_callee83","coverageTokens","protocolImage","_context83","_x156","sumAssured","coverAssetConfig","yieldTokenConfig","collateralIcon","protocolImageDark","coverDetails","validUntil","_ref146","_callee86","_ref147","_ref148","coverBoughtEvents","claimSubmittedEvents","nexusMutualCoverages","_context86","buyer","_ref149","_callee85","claimSubmittedEvent","_ref150","_ref151","incidentEvents","matchedIncidents","matchedIncident","expiryDate","payoutOutcome","claimTxReceipt","claimedAmountLog","claimablePrice","_ref152","_ref153","_context85","productId","incidentDate","curr","priceBefore","underlyingConfig","findIndex","_x158","_x157","_ref154","_callee87","_context87","_x159","getBatchedDeposits","_callee89","filter_by_status","_args89","_context89","_ref156","_callee88","_ref157","_ref158","_context88","_x160","_ref159","_callee90","fixDecimals","_args90","_context90","_x161","_ref160","_callee91","_ref161","_ref162","_args91","_context91","_x162","_x163","copyToClipboard","copyText","setSelectionRange","execCommand","loadScript","attr","isValidJSON","_ref163","_callee92","_args92","_context92","_x164","_ref164","_callee93","_args93","_context93","_x165","_ref165","_callee94","_args94","_context94","_x166","_x167","getProtocolBalance","_ref166","_callee95","_context95","_x168","_x169","getAprs","_ref167","_callee96","_context96","addresses","_x170","genericIdleCall","_ref168","_callee97","callParams","_args97","_context97","_x171","_ref169","_callee98","_contract$methods4","_args98","_context98","_x172","_x173","getTxDecodedLogs","_ref170","_callee100","logAddr","decodeLogs","internalTransfers","_context100","_ref171","_callee99","_context99","_x178","_x179","_x174","_x175","_x176","_x177","blocksToSeconds","blocks","blocksPerSeconds","getBlockNumber","_callee101","_context101","_ref173","_callee102","_context102","getBlock","_x180","_ref174","_callee103","_args103","_context103","getPastEvents","_x181","_x182","_ref175","_callee104","_args104","_context104","_x183","_x184","_ref176","_callee105","_contract$methods5","_args105","_context105","_x185","_x186","_ref177","_callee106","_args106","_context106","_x187","_x188","getUnlentBalance","_ref178","_callee107","unlentBalance","_context107","_x189","_ref179","_callee108","_args108","_context108","_x190","_ref180","_callee110","protocolsAprs","exchangeRates","protocolsBalances","govTokensBalances","_ref184","_ref185","_args110","_context110","totalAllocationConverted","totalAllocationWithUnlentConverted","_ref181","_callee109","_ref182","_ref183","protocolBalance","protocolAllocation","_context109","_x192","_x193","protocolAllocationPerc","getGovTokensBalances","getTokenConversionRate","_x191","_ref186","_callee111","pairAddresses","_ref187","_ref188","token0_address","token1_address","poolReserves","token0_config","token1_config","_ref189","_ref190","token0_price","token1_price","token0_pool","token1_pool","totalPoolSize","_context111","_x194","_x195","_ref191","_callee112","tokenConfigFrom","tokenConfigDest","WETHAddr","one","_context112","_x196","_x197","_ref192","_callee113","unires","_context113","_x198","_x199","getCurveDepositedTokens","_ref193","_callee114","idleTokensBalances","remainingCurveTokens","_args114","_context114","_x200","getCurveUnevenTokenAmounts","_ref194","_callee115","amounts","max_burn_amount","unevenAmounts","_context115","getCurveDepositContract","_x201","_x202","_callee116","curveRatesInfo","_context116","strategyTokens","getCurveAPYContract","_callee117","blocksForPrevTokenPrice","_ref197","_ref198","prevTokenPrice","blocksMultiplier","curveAPR","_context117","getCurveTokenSupply","_callee118","_context118","getCurvePoolContract","_callee119","_args119","_context119","_callee120","_args120","_context120","_ref202","_callee121","_ref203","_ref204","_context121","_x203","_callee122","depositContractInfo","_context122","getCurveZapContract","_callee123","zapContractInfo","_context123","_callee124","poolContractInfo","_context124","getCurveSwapContract","_callee125","_context125","getCurveIdleTokensAmounts","_callee127","max_slippage","curveTokenSupply","curveTokenShare","_args127","_context127","_ref210","_callee126","curveIdleTokens","_context126","_x204","getCurveTokensAmounts","_callee129","useCoinIndex","_args129","_context129","_ref212","_callee128","_ref213","_ref214","totalTokenSupply","_context128","_x205","getCurveAmounts","_ref215","_callee131","_args131","_context131","_ref216","_callee130","_context130","_x208","_x206","_x207","getCurveTokenAmount","_ref217","_callee132","_args132","_context132","_x209","getCurveSlippage","_ref218","_callee133","uneven_amounts","_ref219","_ref220","Sv","_args133","_context133","_x210","_x211","_ref221","_callee134","aTokenIdleSupply","annualize","aaveDistribution","stkAAVETokenConfig","aTokenConfig","aaveIncentivesController_address","IAaveIncentivesController_name","_ref222","_ref223","aTokenTotalSupply","aaveAllocationPerc","aaveSpeed","aavePoolShare","_args134","_context134","_x212","_callee136","_args136","_context136","_ref225","_callee135","_ref226","_ref227","_context135","_x213","getStkAaveApr","_ref228","_callee137","aaveConversionRate","stkAaveAPR","stkAaveValue","_args137","_context137","_x214","_x215","getCompAPR","_ref229","_callee138","cTokenIdleSupply","compConversionRate","COMPTokenConfig","compAPR","compDistribution","compValue","_args138","_context138","_x216","_x217","getCompSpeed","_ref230","_callee139","cTokenAddress","compSpeed","_context139","_x218","_ref231","_callee140","cTokenInfo","compoundAllocationPerc","_ref232","_ref233","cTokenTotalSupply","compoundPoolShare","_args140","_context140","_x219","_callee142","_args142","_context142","_ref235","_callee141","_ref236","_ref237","_context141","_x220","_callee144","_args144","_context144","_ref239","_callee143","_ref240","_ref241","compApr","_context143","_x221","getTokensCsv","_callee147","csv","_context147","prototype","sum","pv","cv","avg","_ref243","_callee146","_context146","_ref244","_callee145","header","aprAvg","scoreAvg","lastRow","_context145","protocolsData","p1","foundProtocol","p2","rate","idleRate","score","idleScore","pInfo","pData","pRate","pScore","defiScore","additionalRate","avgRate","_x223","_x222","_callee149","_args149","_context149","_ref246","_callee148","compTokenBalance","_context148","_x224","getTokenGovTokens","speed","multipliers","block","second","month","year","getGovTokensUserDistributionSpeed","_ref247","_callee151","govTokensUserDistribution","_args151","_context151","_ref248","_callee150","_context150","_x226","_x225","getGovTokensDistributionSpeed","_ref249","_callee153","govTokensDistribution","tokenGovTokens","_args153","_context153","_ref250","_callee152","govSpeed","_context152","_x228","_x227","getGovTokensAprs","_ref251","_callee155","govTokensAprs","_args155","_context155","_ref252","_callee154","_ref253","_ref254","_ref255","_ref256","cTokenConfig","_context154","_x231","_x229","_x230","_callee157","_args157","_context157","_ref258","_callee156","tokenConversionRate","fromTokenConfig","_context156","_x232","_callee158","checkShowBalance","govTokensEarnings","_args158","_context158","govTokenAmount","getGovTokensIndexes","_ref260","_callee160","govTokensAmounts","_context160","getGovTokensUserAmounts","_ref261","_callee159","govTokenIndex","_context159","getGovTokenAddessByIndex","_x235","_x236","_x233","_x234","_ref262","_callee161","_context161","_x237","_x238","_ref263","_callee162","_context162","_x239","_x240","_callee165","govTokenConfigForced","_args165","_context165","_ref265","_callee164","_context164","_ref266","_callee163","_context163","_x242","_x243","_x241","getTokenFees","_callee166","_args166","_context166","_callee167","_ref269","_ref270","gain","fees","_args167","_context167","_ref271","_callee168","_args168","_context168","_x244","getTotalTVL","_callee169","tokensTVL","_context169","getTokensTVL","totalTVL","tokenTVL","_callee173","_context173","_ref274","_callee172","_context172","_ref275","_callee171","oldTokenTVL","idleTokenName","_ref276","_ref277","oldTokenConfig","_ref281","_ref282","oldTokenPrice","oldTotalSupply","_context171","_ref278","_callee170","_ref279","_ref280","govTokenConversionRate","govTokenBalanceConverted","_context170","_x247","oldProtocols","oldProtocol","protocolPos","_x246","_x245","getSubstackLatestFeed","_callee174","endpointInfo","idleSubstackFeed","latestFeed","_context174","items","getAggregatedStats","_callee175","totalAUM","_args175","_context175","getAggregatedStats_chain","_callee179","avgAPR","_args179","_context179","_ref286","_callee178","_context178","_ref287","_callee177","tokenAUM","oldTokenAllocation","oldTokenTotalAllocation","_context177","_ref288","_callee176","_ref289","_ref290","_context176","_x250","_x249","_x248","getTokenApy","_ref291","_callee180","_context180","_x251","_callee183","_args183","_context183","_ref293","_callee182","_context182","_ref294","_callee181","_ref295","_context181","_x253","_x252","getProtocolsTokensBalances","_callee185","tokenBalances","minTokenBalance","protocolsTokens","_args185","_context185","_ref297","_callee184","tokenContract","_context184","_x254","_ref298","_callee186","_args186","_context186","_x255","_x256","_x257","getAvgAPYStats","_ref299","_callee187","apiResults","_args187","_context187","_x258","_x259","_ref300","_callee188","_conversionRate","_args188","_context188","_x260","_x261","_ref301","_callee189","_ref302","_ref303","_context189","protocolScore","getTokenScoreApi","_x262","_x263","_ref304","_callee190","_context190","_x264","_x265","_ref305","_callee193","Aprs","protocolsApys","idleGovTokenShowAPR","idleAPR","_args193","_context193","_ref306","_callee192","addrIndex","protocolApr","protocolApy","govTokenAPR","_context192","_ref307","_callee191","_context191","_x269","_x267","_x268","_x266","isNegative","suffixNum","decimalPart","mod","toPrecision","difference","maxLen","highlightedDecimals","numLen","intPart","decPart","repeat","highlightedDec","highlightedIntPart","mouseOver","isRainbow","active","onMouseOut","setMouseOver","onMouseOver","Tos","h2","listStyle","Footer","theme_dark","TorusConnector","kwargs","Torus","api","rest","objectWithoutProperties","possibleConstructorReturn","getPrototypeOf","buttonPosition","init","login","getUserInfo","getPublicAddress","verifier","verifierId","logout","updateNetworkId","Connector","AuthereumConnector","Authereum","getProvider","enable","getAccounts","accounts","disable","constructor","GnosisSafeConnector","SafeAppConnector","safeLoaded","checkSafeApp","activate","getAccount","getSafeInfo","isSafeApp","deactivate","WalletLinkConnector","WalletLink","infuraUrl","appLogoUrl","walletLink","darkMode","makeWeb3Provider","disconnect","close","WalletConnectConnector","WalletConnectProvider","infuraId","defaultNetwork","InjectedConnector","Connectors","NetworkOnlyConnector","TrezorConnector","LedgerConnector","FortmaticConnector","PortisConnector","manifestEmail","REACT_APP_TREZOR_MANIFEST_EMAIL","manifestAppUrl","REACT_APP_TREZOR_MANIFEST_URL","fortmaticApiKey","REACT_APP_FORTMATIC_KEY_MAINNET","portisDAppId","REACT_APP_PORTIS_DAPP_ID","portisNetwork","REACT_APP_PORTIS_NETWORK","supportedNetworkURLs","REACT_APP_INFURA_KEY","Injected","Infura","providerURL","Trezor","TrezorApi","Ledger","WalletConnect","bridge","Fortmatic","FortmaticApi","logoutOnDeactivation","Portis","PortisApi","dAppId","AuthereumApi","TorusApi","buildEnv","enableLogging","host","showTorusButton","WrongNetworkBanner","React","NetworkUtil","isCorrectNetwork","components_WrongNetworkBanner","NoWeb3BrowserModal","renderContent","RimbleUtil","isMobileDevice","bold","isOpen","ModalCard","closeFunc","closeModal","Body","NoWalletModal","icononly","Outline","GeneralUtil","hasMetaMask","isMetaMask","isTrustWallet","isTrust","isCoinbaseWallet","hasDapper","DapperEthereum","isDapper","isOpera","isAndroid","isIos","MSStream","WrongNetworkModal","RimbleUtils","TransactionFeeModal","Header","subtitle","subtitle2","Web3ConnectionButtons","context","useWeb3Context","setConnector","walletProvider","connectionCallback","unsetConnector","isMetamask","isGnosisSafe","safe","browserWalletDetected","allowedConnectors","registerPage","registerPageByDefault","basicConnectorsName","injectedIndex","splice","gnosisIndex","connectorInfo","walletIcon","buttonStyle","ConnectionModal","showTxFees","currentSection","showInstructions","askCustomAddress","closeRemainingTime","customAddressError","newToEthereumChoice","toggleShowTxFees","setStoredSection","componentDidUpdate","resetModal","closeCountdown","setWalletChoice","choice","setCurrentSection","connectCustomAddress","updateCustomAddress","renderModalContent","TOSacceptance","react_router_dom","newToEthereum","showConnectionButtons","contrastColor","assertThisInitialized","marginBottom","renderFooter","components_TransactionFeeModal","ConnectionPendingModal","UserRejectedConnectionModal","sendMessageAgain","initAccount","LowFundsModal","showSecondary","toggleQRVisible","alignContent","as","h5","ConnectionModalUtil","components_NoWeb3BrowserModal","closeNoWeb3BrowserModal","noWeb3BrowserModalIsOpen","components_NoWalletModal","closeNoWalletModal","noWalletModalIsOpen","components_WrongNetworkModal","closeWrongNetworkModal","wrongNetworkModalIsOpen","components_ConnectionModal","validateAccount","closeConnectionModal","connectionModalIsOpen","accountValidated","components_ConnectionPendingModal","closeConnectionPendingModal","accountConnectionPending","components_UserRejectedConnectionModal","closeUserRejectedConnectionModal","userRejectedConnect","components_LowFundsModal","closeLowFundsModal","lowFundsModalIsOpen","ConnectionErrorModal","setFirstValidConnector","closeConnectionErrorModal","isLedger","connectionError","TransactionErrorModal","closeTransactionErrorModal","isLedgerError","transactionError","isSlowTxError","INFURA_KEY","RimbleTransactionContext","createContext","web3Infura","permitClient","accountBalance","initWeb3","accountBalanceLow","accountBalanceToken","checkPreflight","checkNetwork","accountInizialized","rejectValidation","accountValidationPending","initializeContracts","rejectAccountConnect","enableUnderlyingWithdraw","userRejectedValidation","transactionConnectionModalIsOpen","openLowFundsModal","openWrongNetworkModal","openNoWeb3BrowserModal","openConnectionErrorModal","openTransactionErrorModal","openConnectionPendingModal","openUserRejectedConnectionModal","openUserRejectedValidationModal","closeUserRejectedValidationModal","meta","setConnectorName","biconomyLoginProcessing","RimbleTransaction","connectGnosisSafe","testTransaction","createTransaction","addTransaction","errorMessage","isWalletConnectClosedModalError","tokenChanged","availableStrategiesChanged","gnosisSafeLoaded","setNetwork","metamaskProvider","connectorNameChanged","web3Host","web3Provider","forceCallback","web3Callback","originalWeb3","biconomyWeb3Provider","_args4","detectEthereumProvider","Web3","HttpProvider","library","IFrameEthereumProvider","web3Injected","callbackAfterLogin","setCallbackAfterLogin","isLogin","userContract","Biconomy","onEvent","READY","ERROR","useInfuraProvider","simpleIDInfo","simpleIDParams","SimpleID","wallets","shownNotifications","isError","_args7","race","$crisp","notificationId","content","Sentry","increaseAmount","_ref15","_ref19","balanceOf","determineAccountLowBalance","openConnectionModal","getRequiredNetwork","getNetworkId","getNetworkName","getNetworkType","contractMethod","_this$state","manualConfirmationTimeoutId","confirmationCallback","manualConfirmation","receiptCallback","isDeniedTx","confirmationCount","confidenceThreshold","recentEvent","timeout","lastUpdated","updatedTransaction","openNoWalletModal","CrispClient","accountBalanceDAI","subscribedTransactions","connectionErrorModalOpened","transactionErrorModalOpened","Provider","ConnectionModalsUtil","components_TransactionErrorModal","components_ConnectionErrorModal","utilities_NetworkUtil","Consumer","governanceEnabled","offsetTop","ScrollToTop","pathname","useLocation","useEffect","PageNotFound","Header_styles","NetworkOverview","getNetworkCircleColor","circleColor","networkCircle","DebuggerButtons","Web3Debugger","components_NetworkOverview","Web3Debugger_DebuggerButtons","node","constant","outputs","payable","stateMutability","anonymous","indexed","govTokensDisabled","defiPrime","cToken","yToken","iToken","CHAI","skipMintForDeposit","enabledEnvs","crToken","fToken","defiScoreDisabled","IdleCDO","IdleStrategy","IdleCDOTrancheRewards","TransactionToastMessages","started","confirmed","TransactionToastUtil","collectionHasNewObject","prevCollection","currentCollection","getNewObjectFromCollection","objectKey","getUpdatedObjectFromCollection","object","getTransactionFromCollection","identifier","collection","getUpdatedTransaction","currentTx","prevTx","processTransactionUpdates","showTransactionToast","toastMeta","getTransactionToastMeta","closeElem","transactionToastMeta","transactionAction","charAt","newMessage","Landing","lazy","then","Dashboard","Governance","App","currentEnv","selectedTab","connecting","genericError","selectedTheme","buyModalOpened","toastMessageProps","innerWidth","innerHeight","unsubscribeFromHistory","closeToastMessage","showToastMessage","processCustomParam","storedCachedData","_args","cachedKeyFound","widthChanged","heightChanged","tabIndex","envEnabled","loadAvailableTokens","warn","jQuery","setThemeMode","closeIframe","w","iFrames","getElementsByTagName","iframe","contentWindow","parents","loadCustomAddress","loadCurrentEnvironment","strategyChanged","networkChanged","hasMetamask","store","themeDark","_this9","SuspenseLoader","web3_react_dist_default","web3Api","libraryName","web3_react_dist","RimbleWeb3","needsPreflight","react_router","react","fallback","isDashboard","setToken","setStrategy","openBuyModal","handleMenuClick","selectTab","closeBuyModal","isGovernance","components_Header","src_Web3Debugger_Web3Debugger","exact","updateSelectedTab","expires","acceptOnScroll","cookieName","acceptOnScrollPercentage","marginTop","overflowY","src_Tos_Tos","src_PageNotFound_PageNotFound","utilities_TransactionToastUtil","Boolean","hostname","dsn","beforeSend","hint","originalException","ReactDOM","src_App_App","serviceWorker","ready","registration","unregister","FieldComponent","colInfo","colIndex","fieldIndex","colProps","_TableCellHeader_TableCellHeader__WEBPACK_IMPORTED_MODULE_7__","oldTokenName","oldIdleTokens","skipMigration","biconomyLimitReached","toggleSkipMigration","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_5__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_4__","executeAction","idleTokenToRedeem","_clientProtocolAmountsRedeem","gasLimitRedeem","callbackRedeem","callbackReceiptRedeem","toggleMetaTransactionsEnabled","checkMigrationContractApproved","migrationContractName","oldIdleTokensConverted","oldContractInfo","oldContractABI","biconomyLimits","disapproveMigration","approveMigration","migrationMethod","callbackMigrate","callbackReceiptMigrate","_skipRebalance","_migrationContract$me","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","biconomyChanged","usePermitChanged","fastBalanceSelectorChanged","batchMigrationEnabled","SkipMigrationComponent","react__WEBPACK_IMPORTED_MODULE_11___default","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_16__","rimble_ui__WEBPACK_IMPORTED_MODULE_20__","biconomyEnabled","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_13__","migrateTextBefore","migrateText","_TransactionField_TransactionField__WEBPACK_IMPORTED_MODULE_18__","_TxProgressBar_TxProgressBar__WEBPACK_IMPORTED_MODULE_17__","_FastBalanceSelector_FastBalanceSelector__WEBPACK_IMPORTED_MODULE_19__","functionName","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_14__","migrationImage","migrationTextProps","approveText","_TableHeader_TableHeader__WEBPACK_IMPORTED_MODULE_11__","_TableRow_TableRow__WEBPACK_IMPORTED_MODULE_9__","footer","polished__WEBPACK_IMPORTED_MODULE_0__","darkBlue","blurple","consensysblue","readableColor","VariationNumber","IconDirection","iconSize","iconPos","loading-dots","loading-dots--dot","dot-keyframes","selectedProvider","availableProviders","renderPaymentMethod","currentState","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__","goBack","componentWillMount","getProviderInfo","newProviderInfo","getDefaultPaymentProvider","paymentMethod","getAvailablePaymentProviders","providerSupportMethod","providerSupportToken","defaultPaymentProvider","selectProvider","ethAvailable","tokenAvailable","selectMethod","loadRemoteResources","handleCountryChange","getAvailableCountries","availableCountries","countryCode","methodInfo","loadAvailableMethods","InnerComponent","_ImageButton_ImageButton__WEBPACK_IMPORTED_MODULE_12__","imagePropsExtended","react_select__WEBPACK_IMPORTED_MODULE_10__","noOptionsMessage","_ModalCard__WEBPACK_IMPORTED_MODULE_11__","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_10__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1___default","rimble_ui__WEBPACK_IMPORTED_MODULE_3__","bgLayer","backgroundRepeat","backgroundPosition","backgroundSize","backgroundImage","iconHeight","subtitleProps","BackButton","currYear","getFullYear","columnWidth","_ExtLink_ExtLink__WEBPACK_IMPORTED_MODULE_8__","role","aria-label","react_router_dom__WEBPACK_IMPORTED_MODULE_7__","ColTitle","fieldName","earningsCurveStart","earningsCurveEnd","tokenAPY2","tokenAPR","allocationChartWidth","allocationChartHeight","resizeAllocationChart","aprChartEndTimestamp","aprChartStartTimestamp","aprChartData","newPoint","aprChartWidth","aprChartHeight","resizeAprChart","aprChartType","aprChartProps","firstTokenPrice","firstIdleBlock","performanceChartWidth","performanceChartHeight","resizePerformanceChart","apr_end_date","apr_start_date","apr_start_timestamp","apiResultsPerformanceChart","idleTokenPerformance","performanceChartData","performanceChartType","performanceChartProps","amountToMigrate","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","earningsPercCurveDirection","earningsPercCurve","earningsPercDirection","oldAPY","tokenAPYNoGov","allocationChartRowElement","$allocationChartRowElement","css","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_9__","random","aprChartRowElement","$aprChartRowElement","lineWidth","defs","linearGradientDef","offset","react__WEBPACK_IMPORTED_MODULE_12___default","_CustomTooltip_CustomTooltip__WEBPACK_IMPORTED_MODULE_17__","protocolEarning","_CustomTooltip_CustomTooltipRow__WEBPACK_IMPORTED_MODULE_20__","PerformanceChartRowElement","$PerformanceChartRowElement","blocknumber","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_1__","fieldChanged","contractInitialized","rimble_ui__WEBPACK_IMPORTED_MODULE_21__","icon1","tooltipProps","icon2","strategyName","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_14__","react_countup__WEBPACK_IMPORTED_MODULE_11___default","_VariationNumber_VariationNumber__WEBPACK_IMPORTED_MODULE_18__","earningsCurve","governanceTokenName","tooltipMode","buttonLabel","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_16__","_AllocationChart_AllocationChart__WEBPACK_IMPORTED_MODULE_19__","formattedValue","_isBigNumber"],"mappings":"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","file":"static/js/main.5dabc960.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\n\nclass ChartCustomTooltipRow extends Component {\n\n  async componentWillMount(){\n    \n  }\n\n  async componentDidUpdate(prevProps,prevState){\n\n  }\n\n  render() {\n    return (\n      <Flex\n        mb={2}\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n      >\n        <Flex\n          pr={2}\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-start'}\n        > \n          {\n            this.props.color && \n            <Box\n              mr={2}\n              width={'10px'}\n              height={'10px'}\n              borderRadius={'50%'}\n              backgroundColor={this.props.color}\n            >\n            </Box>\n          }\n          <Text\n            fontSize={1}\n            fontWeight={2}\n            textAlign={'left'}\n            color={'dark-gray'}\n            style={{\n              textTransform:'capitalize'\n            }}\n          >\n            {this.props.label}\n          </Text>\n        </Flex>\n        <Flex\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-end'}\n        >\n          <Text\n            fontSize={1}\n            fontWeight={3}\n            color={'cellText'}\n            textAlign={'right'}\n            style={{\n              whiteSpace:'nowrap'\n            }}\n            dangerouslySetInnerHTML={{\n              __html: this.props.value\n            }}\n          >\n          </Text>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default ChartCustomTooltipRow;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"PageNotFound_headerContainer__Ly5Tz\",\"headerBgFiller\":\"PageNotFound_headerBgFiller__1NzlO\",\"bgContainer\":\"PageNotFound_bgContainer__1Racj\",\"list\":\"PageNotFound_list__Cnz-b\",\"textContainer\":\"PageNotFound_textContainer__g_kTm\"};","import React, { Component } from 'react';\nimport { Text, Loader } from \"rimble-ui\";\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass ShortHash extends Component {\n\n  state = {\n    text:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  async loadData(){\n    const resolveAddress = this.props.resolveAddress !== false;\n    let text = this.functionsUtil.shortenHash(this.props.hash);\n    const ensName = resolveAddress ? await this.functionsUtil.getENSName(this.props.hash) : null;\n    // console.log('ShortHash',resolveAddress,this.props.hash,ensName);\n    if (ensName){\n      text = ensName;\n    }\n    this.setState({\n      text\n    });\n  }\n\n  render() {\n    const loader = (<Loader size=\"20px\" />);\n    return this.state.text ? <Text display={'inline'} {...this.props}>{this.state.text}</Text> : loader;\n  }\n}\n\nexport default ShortHash;","import React, { Component } from 'react';\nimport {\n  Flex, Box\n} from \"rimble-ui\";\nimport styles from './LoadingSpinner.module.scss';\n\nclass LoadingSpinner extends Component {\n  render() {\n    return (\n      <Flex\n        alignItems={'center'}\n        justifyContent={'center'}\n      >\n        <Box className={[styles[\"loading-dots\"]]}>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n        </Box>\n      </Flex>\n    );\n  }\n}\n\nexport default LoadingSpinner;\n","import React, { Component } from 'react';\nimport {\n  Flex,\n  Button\n} from \"rimble-ui\";\nimport LoadingSpinner from '../LoadingSpinner/LoadingSpinner.js';\n\nclass ButtonLoader extends Component {\n  render() {\n    return (\n       <Button\n        onClick={this.props.handleClick}\n         {...this.props.buttonProps}\n       >\n        <Flex flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n          <Flex width={1} display={ this.props.isLoading ? 'flex' : 'none' }>\n            <LoadingSpinner />\n          </Flex>\n          <Flex width={1} display={ this.props.isLoading ? 'none' : 'flex' }>\n            {this.props.buttonText}\n          </Flex>\n        </Flex>\n       </Button>\n    );\n  }\n}\n\nexport default ButtonLoader;\n","import theme from '../theme';\nimport React, { Component } from 'react';\nimport styles from './TransactionListFilters.module.scss';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TableCellHeader from '../TableCellHeader/TableCellHeader';\nimport { Flex, Text, Icon, Radio, Button, Link } from \"rimble-ui\";\n\nclass TransactionListFilters extends Component {\n\n  state = {\n    maxWidth:0.4,\n    minWidth:0.18,\n    maxHeight:425,\n    isOpened:false,\n    activeFilters:{\n      status:null,\n      assets:null,\n      actions:null\n    }\n  }\n\n  setFilter = (filter,value) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:value\n      }\n    }));\n  }\n\n  applyFilters = (toggle=true) => {\n    if (typeof this.props.applyFilters === 'function'){\n      this.props.applyFilters(this.state.activeFilters);\n    }\n    if (toggle){\n      this.toggleOpened();\n    }\n  }\n\n  resetFilter = (filter) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:null\n      }\n    }),() => {\n      this.applyFilters(false);\n    });\n  }\n\n  resetFilters = (toggle=true) => {\n    this.setState({\n      activeFilters:{\n        status:null,\n        assets:null,\n        actions:null\n      }\n    },() => {\n      if (typeof this.props.resetFilters === 'function'){\n        this.props.resetFilters();\n      }\n      if (toggle){\n        this.toggleOpened();\n      }\n    })\n  }\n\n  toggleOpened = () => {\n    this.setState((prevState) => ({\n      isOpened: !prevState.isOpened\n    }));\n  }\n\n  render() {\n    return (\n      <Flex\n        mb={3}\n        top={0}\n        width={1}\n        zIndex={1}\n        flexDirection={'column'}\n        alignItems={'flex-start'}\n        justifyContent={'center'}\n        position={['relative','absolute']}\n      >\n        <DashboardCard\n          cardProps={{\n            py:2,\n            px:3,\n            width:[1, this.state.isOpened ? this.state.maxWidth : this.state.minWidth ],\n            style:{\n              transition:'width 0.3s ease-in-out'\n            }\n          }}\n          isInteractive={ !this.state.isOpened }\n          handleClick={ !this.state.isOpened ? this.toggleOpened : null }\n        >\n          <Flex\n            width={1}\n            style={{\n              cursor:'pointer'\n            }}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'space-between'}\n            onClick={ this.state.isOpened ? this.toggleOpened : null }\n          >\n            <Text\n              fontSize={2}\n              fontWeight={500}\n              color={'copyColor'}\n            >\n              Filters\n            </Text>\n            <Icon\n              color={'copyColor'}\n              size={ this.props.isMobile ? '1.3em' : '1.5em'}\n              name={ this.state.isOpened ? 'Close' : 'Tune' }\n            />\n          </Flex>\n          <Flex\n            flexDirection={'column'}\n            style={{\n              overflow:'hidden',\n              transition:'max-height 0.3s ease-in-out',\n              maxHeight:this.state.isOpened ? this.state.maxHeight : 0\n            }}\n          >\n            <Flex\n              mt={2}\n              py={2}\n              width={1}\n              flexDirection={'row'}\n              borderTop={`1px solid ${theme.colors.divider}`}\n            >\n              {\n                Object.keys(this.props.filters).map((filterCategory) => {\n                  const filterValues = this.props.filters[filterCategory];\n                  return (\n                    <Flex\n                      flexDirection={'column'}\n                      key={`filter_${filterCategory}`}\n                      style={{\n                        flexBasis:'0',\n                        flex:'1 1 0px'\n                      }}\n                    >\n                      <TableCellHeader\n                        pb={2}\n                        fontWeight={3}\n                        fontSize={[0,2]}\n                        color={'cellText'}\n                      >\n                        {filterCategory.toUpperCase()}\n                      </TableCellHeader>\n                      {\n                        Object.keys(filterValues).map((filterValue) => {\n                          const filterLabel = filterValues[filterValue];\n                          const isChecked = this.state.activeFilters[filterCategory]===filterValue;\n                          return (\n                            <Radio\n                              my={2}\n                              fontSize={[0,2]}\n                              label={filterLabel}\n                              checked={isChecked}\n                              className={styles.radioBtn}\n                              key={`filter_${filterCategory}_${filterValue}`}\n                              onChange={ e => this.setFilter(filterCategory,filterValue) }\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                  );\n                })\n              }\n            </Flex>\n            <Flex\n              flexDirection={'row'}\n            >\n              <Button.Text\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.applyFilters}\n              >\n                Apply filters\n              </Button.Text>\n              <Button.Text\n                ml={3}\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.resetFilters}\n              >\n                Reset\n              </Button.Text>\n            </Flex>\n          </Flex>\n        </DashboardCard>\n        {\n          !this.state.isOpened && this.props.activeFilters && Object.values(this.props.activeFilters).filter( v => (v !== null) ).length>0 &&\n            <Flex\n              mt={3}\n              width={1}\n              flexDirection={['column','row']}\n              alignItems={['flex-start','flex-end']}\n              justifyContent={['flex-end','flex-start']}\n            >\n              {\n                Object.keys(this.props.activeFilters).map((filterName) => {\n                  const filterValue = this.props.activeFilters[filterName];\n                  if (filterValue !== null){\n                    const filterLabel = this.props.filters[filterName][filterValue];\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:[2,0],\n                          mr:[0,3],\n                          width:[1,this.state.minWidth]\n                        }}\n                        isInteractive={true}\n                        key={`filter_${filterName}`}\n                      >\n                        <Flex\n                          width={1}\n                          style={{\n                            cursor:'pointer'\n                          }}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'space-between'}\n                          onClick={e => this.resetFilter(filterName)}\n                        >\n                          <Text\n                            fontSize={2}\n                            fontWeight={500}\n                            color={'cellText'}\n                            style={{\n                              textTransform:'capitalize'\n                            }}\n                          >\n                            {filterLabel}\n                          </Text>\n                          <Icon\n                            name={'Close'}\n                            color={'cellText'}\n                            size={ this.props.isMobile ? '1.3em' : '1.5em'}\n                          />\n                        </Flex>\n                      </DashboardCard>\n                    );\n                  }\n                  return null;\n                })\n              }\n              <Link\n                mt={[2,0]}\n                fontSize={[3,2]}\n                fontWeight={[3]}\n                color={'dark-gray'}\n                hoverColor={'copyColor'}\n                textAlign={['center','left']}\n                onClick={ e => this.resetFilters(false) }\n              >\n                Clear all filters\n              </Link>\n            </Flex>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TransactionListFilters;","import React, { Component } from 'react';\n// import style from './TransactionsList.module.scss';\nimport TableRow from '../TableRow/TableRow';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Heading, Text, Link, Icon } from \"rimble-ui\";\nimport TransactionField from '../TransactionField/TransactionField';\nimport TransactionListFilters from '../TransactionListFilters/TransactionListFilters';\n\nclass TransactionsList extends Component {\n\n  state = {\n    page:1,\n    prevTxs:{},\n    txsPerPage:5,\n    loading:false,\n    totalTxs:null,\n    totalPages:null,\n    activeFilters:{\n      status:null,\n      assets:null,\n      actions:null,\n    },\n    filters:{\n      actions:{\n        deposit:'Deposit',\n        redeem:'Redeem',\n        send:'Send',\n        receive:'Receive',\n        migrate:'Migrate',\n        swap:'Swap-In',\n        swapout:'Swap-Out',\n        withdraw:'Withdraw',\n        // curvein:'CurveIn',\n        // curveout:'CurveOut',\n        // curvezapin:'CurveZapIn',\n        // curvezapout:'CurveZapOut',\n      },\n      status:{\n        completed:'Completed',\n        pending:'Pending',\n        failed:'Failed'\n      },\n      assets:{}\n    },\n    renderedTxs:null,\n    processedTxs:null,\n    lastBlockNumber:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  prevPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.max(1,this.state.page-1);\n    this.setState({\n      page\n    });\n  }\n\n  nextPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.min(this.state.totalPages,this.state.page+1);this.processTxs(page);\n    this.setState({\n      page\n    });\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadTxs();\n  }\n\n  applyFilters = activeFilters => {\n    this.setState({\n      activeFilters\n    },() => {\n      this.processTxs();\n    });\n  }\n\n  resetFilters = () => {\n    this.setState({\n      activeFilters:{\n        status:null,\n        assets:null,\n        actions:null,\n      }\n    },() => {\n      this.processTxs();\n    });\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n    const transactionsChanged = JSON.stringify(prevProps.transactions) !== JSON.stringify(this.props.transactions);\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n\n    if (tokenChanged || transactionsChanged){\n      this.setState({\n        page:1,\n        prevTxs:{}\n      },()=>{\n        this.loadTxs();\n      })\n      return false;\n    }\n    const pageChanged = prevState.page !== this.state.page;\n    if (pageChanged){\n      this.processTxs();\n    }\n  }\n\n  async loadTxs(count,endBlockNumber='latest'){\n    if (!this.props.account){\n      return false;\n    }\n\n    count = count ? count : 0;\n\n    this.setState({\n      loading:true\n    });\n\n    const firstBlockNumber = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n\n    // Take last block number, is null take first block number\n    let prevTxs = {...this.state.prevTxs};\n    let lastBlockNumber = Math.max(firstBlockNumber,this.state.lastBlockNumber);\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    const assets = {...this.state.filters.assets};\n\n    enabledTokens.forEach((token) => {\n      assets[token] = token;\n    });\n\n    let actions = this.props.availableActions || {...this.state.filters.actions};\n    \n    const enabledActions = typeof this.props.enabledActions !== 'undefined' ? this.props.enabledActions : [];\n\n    if (enabledActions.length){\n      actions = {};\n      enabledActions.forEach( action => {\n        actions[action.toLowerCase()] = action;\n      });\n    }\n\n    const etherscanTxs = this.props.transactionsList || await this.functionsUtil.getEtherscanTxs(this.props.account,lastBlockNumber,'latest',enabledTokens);\n\n    // console.log('TransactionsList',etherscanTxs);\n\n    // Merge new txs with previous ones\n    if (etherscanTxs && etherscanTxs.length){\n      etherscanTxs.forEach((tx) => {\n        if (tx.hashKey){\n          prevTxs[tx.hashKey] = tx;\n        } else {\n          prevTxs[`t${tx.timeStamp}`] = tx;\n        }\n      });\n    }\n\n    const lastTx = Object.values(prevTxs).pop();\n\n    // Update last block number\n    if (lastTx && lastTx.blockNumber && (!this.state.lastBlockNumber || lastTx.blockNumber>this.state.lastBlockNumber)){\n      lastBlockNumber = parseInt(lastTx.blockNumber)+1;\n    }\n\n    return this.setState( prevState => ({\n      prevTxs,\n      loading:false,\n      lastBlockNumber,\n      filters:{\n        ...prevState.filters,\n        assets,\n        actions\n      }\n    }), () => {\n      this.processTxs()\n    });\n  };\n\n  processTxs = (page=null) => {\n\n    page = page ? page : this.state.page;\n\n    const availableActions = Object.keys(this.state.filters.actions).map( action => (action.toLowerCase()) );\n\n    // Sort prevTxs by timeStamp\n    const txsIndexes = Object.values(this.state.prevTxs)\n                        .filter(tx => (!!parseFloat(tx.value))) // Filter txs with value\n                        .filter(tx => (\n                          (this.state.activeFilters.status === null || (tx.status && tx.status.toLowerCase() === this.state.activeFilters.status.toLowerCase())) && \n                          (this.state.activeFilters.assets === null || (tx.token && tx.token.toLowerCase() === this.state.activeFilters.assets.toLowerCase())) &&\n                          ( tx.action && availableActions.includes(tx.action.toLowerCase()) && (this.state.activeFilters.actions === null || (tx.action.toLowerCase() === this.state.activeFilters.actions.toLowerCase()) ))\n                        )) // Filter by activeFilters\n                        .sort((a,b) => (a.timeStamp > b.timeStamp) ? -1 : 1 );\n\n    // Calculate max number of pages\n    const totalTxs = txsIndexes.length;\n    const totalPages = Math.ceil(totalTxs/this.state.txsPerPage);\n\n    const processedTxs = [];\n\n    // console.log(this.state.prevTxs,txsIndexes);\n\n    txsIndexes.forEach((tx, i) => {\n      const selectedToken = tx.token;\n      const tokenConfig = this.props.availableTokens && this.props.availableTokens[selectedToken] ? this.props.availableTokens[selectedToken] : this.functionsUtil.getGlobalConfig(['stats','tokens',selectedToken]);\n      const decimals = Math.min(tokenConfig.decimals,8);\n      \n      const date = new Date(tx.timeStamp*1000);\n      const action = tx.action ? tx.action : this.functionsUtil.getTxAction(tx,tokenConfig);\n\n      const parsedValue = parseFloat(tx.tokenAmount);\n\n      const amount = parsedValue ? (this.props.isMobile ? parsedValue.toFixed(4) : parsedValue.toFixed(decimals)) : '-';\n      const momentDate = this.functionsUtil.strToMoment(date);\n\n      // Save new params\n      tx.action = action;\n      tx.amount = amount;\n      tx.momentDate = momentDate;\n      tx.status = tx.status ? tx.status : 'Completed';\n\n      if (i>=((page-1)*this.state.txsPerPage) && i<((page-1)*this.state.txsPerPage)+this.state.txsPerPage) {\n        processedTxs.push(tx);\n      }\n    });\n\n    // console.log('processedTxs',this.state.page,txsIndexes,processedTxs);\n\n    const loading = false;\n  \n    this.setState({\n      loading,\n      totalTxs,\n      totalPages,\n      processedTxs\n    });\n  }\n\n  render() {\n\n    const hasActiveFilters = Object.values(this.state.activeFilters).filter( v => (v !== null) ).length>0;\n\n    // console.log('processedTxs',this.state.processedTxs);\n    const processedTxs = this.state.processedTxs ? Object.values(this.state.processedTxs) : null;\n\n    return (\n      <Flex flexDirection={'column'} width={1} m={'0 auto'}>\n        {\n          this.state.loading ? (\n            <FlexLoader\n              flexProps={{\n                flexDirection:'row',\n                minHeight:this.props.height\n              }}\n              loaderProps={{\n                size:'30px'\n              }}\n              textProps={{\n                ml:2\n              }}\n              text={'Loading transactions...'}\n            />\n          ) : (\n            <Flex\n              width={1}\n              position={'relative'}\n              flexDirection={'column'}\n              id={'transactions-list-container'}\n              pt={[0, hasActiveFilters ? '116px' : 5]}\n            >\n              <TransactionListFilters\n                {...this.props}\n                filters={this.state.filters}\n                activeFilters={this.state.activeFilters}\n                resetFilters={this.resetFilters.bind(this)}\n                applyFilters={this.applyFilters.bind(this)}\n              />\n              {\n                processedTxs && processedTxs.length ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <TableHeader\n                      cols={this.props.cols}\n                      isMobile={this.props.isMobile}\n                    />\n                    <Flex\n                      id={'transactions-list'}\n                      flexDirection={'column'}\n                    >\n                      {\n                        processedTxs.map( (tx,index) => {\n                          const txHash = tx.hash;\n                          const txHashKey = tx.hashKey;\n                          const handleClick = (e) => {\n                            return (txHash ? window.open(this.functionsUtil.getEtherscanTransactionUrl(txHash)) : null);\n                          };\n\n                          return (\n                            <TableRow\n                              {...this.props}\n                              rowProps={{\n                                isInteractive:true\n                              }}\n                              hash={txHash}\n                              transaction={tx}\n                              key={`tx-${index}`}\n                              handleClick={handleClick}\n                              rowId={`tx-col-${txHashKey}`}\n                              cardId={`tx-card-${txHashKey}`}\n                              fieldComponent={TransactionField}\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                    <Flex\n                      height={'50px'}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'flex-end'}\n                      id={'transactions-list-pagination'}\n                    >\n                      <Flex mr={3}>\n                        <Link mr={1} onClick={ e => this.prevPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowLeft'}\n                            size={'2em'}\n                            color={ this.state.page>1 ? 'arrowActive' : 'arrowInactive' }\n                          />\n                        </Link>\n                        <Link onClick={ e => this.nextPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowRight'}\n                            size={'2em'}\n                            color={ this.state.page<this.state.totalPages ? 'arrowActive' : 'arrowInactive' }\n                          />\n                        </Link>\n                      </Flex>\n                      <Flex alignItems={'center'}>\n                        <Text \n                          fontSize={1}\n                          fontWeight={3}\n                          color={'cellText'}\n                        >\n                          Page {this.state.page} of {this.state.totalPages}\n                        </Text>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Heading.h3 textAlign={'center'} fontFamily={'sansSerif'} fontWeight={2} fontSize={[2]} color={'dark-gray'}>\n                    There are no transactions\n                  </Heading.h3>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TransactionsList;\n","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass SmartNumber extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  render() {\n    let formattedNumber = '-';\n    const number = typeof this.props.number !== 'undefined' && !isNaN(this.props.number) && this.props.number !== false && this.props.number !== null ? this.props.number : null;\n\n    if (number){\n      switch (this.props.type){\n        case 'money':\n          formattedNumber = this.functionsUtil.formatMoney(number,this.props.precision);\n        break;\n        default:\n          formattedNumber = this.functionsUtil.abbreviateNumber(number,this.props.decimals,this.props.maxPrecision,this.props.minPrecision);\n        break;\n      }\n    } else {\n      formattedNumber = '-';\n    }\n\n    const flexProps = {\n      width:1,\n      alignItems:'center',\n      flexDirection:'row',\n      justifyContent:'center'\n    };\n\n    // Replace props\n    if (this.props.flexProps && Object.keys(this.props.flexProps).length){\n      Object.keys(this.props.flexProps).forEach(p => {\n        flexProps[p] = this.props.flexProps[p];\n      });\n    }\n\n    const showUnit = formattedNumber !== '-';\n    const unitPos = this.props.unitPos ? this.props.unitPos : 'right';\n\n    return (\n      <Flex\n        {...flexProps}\n      >\n        {\n          this.props.unit && unitPos === 'left' && showUnit &&\n            <Text {...this.props.unitProps}>{this.props.unit}</Text>\n        }\n        <Text {...this.props}>{formattedNumber}</Text>\n        {\n          this.props.unit && unitPos === 'right' && showUnit &&\n            <Text {...this.props.unitProps}>{this.props.unit}</Text>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default SmartNumber;\n","import { Button } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass RoundButton extends Component {\n  render() {\n    const buttonProps = Object.assign({\n      width:1,\n      fontSize:3,\n      fontWeight:3,\n      height:'45px',\n      boxShadow:null,\n      borderRadius:4,\n      mainColor:'blue'\n    },this.props.buttonProps);\n\n    return (\n       <Button\n        {...buttonProps}\n        onClick={this.props.handleClick}\n       >\n        {this.props.children}\n       </Button>\n    );\n  }\n}\n\nexport default RoundButton;\n","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass CustomTooltip extends Component {\n\n  render() {\n    return (\n      <DashboardCard\n        key={this.props.point.id}\n        cardProps={{\n          py:2,\n          px:3,\n          width:1,\n          left: this.props.point.data.itemPos>50 ? '-110%' : '0'\n        }}\n      >\n        <Flex\n          width={1}\n          flexDirection={'column'}\n        >\n          {\n            this.props.point.data.xFormatted && \n              <Text\n                mb={2}\n                fontSize={1}\n                fontWeight={3}\n                color={'cellText'}\n                textAlign={'left'}\n              >\n                {this.props.point.data.xFormatted}\n              </Text>\n          }\n          {this.props.children}\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default CustomTooltip;","import { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport globalConfigs from '../configs/globalConfigs';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass AllocationChart extends Component {\n  state = {\n    chartData:null,\n    chartProps:null,\n    selectedSlice:null,\n    totalAllocation:null,\n    protocolsAllocations:null,\n    protocolsAllocationsPerc:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    if (tokenChanged){\n      this.setStateSafe({\n        chartData:null,\n        chartProps:null,\n        selectedSlice:null,\n        totalAllocation:null,\n        protocolsAllocations:null,\n        protocolsAllocationsPerc:null\n      },() => {\n        this.loadData();\n      });\n    } else if (prevProps.isMobile !== this.props.isMobile){\n      this.loadData()\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async loadData(){\n    const {\n      totalAllocation,\n      protocolsAllocations,\n      protocolsAllocationsPerc\n    } = await this.functionsUtil.getTokenAllocation(this.props.tokenConfig);\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth: 0,\n      cornerRadius:0,\n      motionDamping:15,\n      innerRadius: 0.65,\n      motionStiffness:90,\n      colors:d => d.color,\n      onMouseEnter:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:data\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:null\n        });\n      },\n      tooltipFormat: v => v+'%',\n      sliceLabel: d => d.value+'%',\n      radialLabel: d => {\n        return null;\n      },\n      theme:{\n        tooltip: {\n          container: this.props.inline ? {\n            background: this.props.theme.colors.cardBg\n          } : {\n            display: 'none',\n          }\n        },\n        labels:{\n          text:{\n            fontWeight:600,\n            fontSize:this.props.isMobile ? 13 : 15,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      enableRadialLabels:false,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      enableSlicesLabels: !this.props.inline,\n      radialLabelsLinkColor:{ from: 'color' },\n      borderColor:{ from: 'color', modifiers: [ [ 'darker', 0.2 ] ] },\n      margin: this.props.inline ? {top:0,right:15,bottom:0,left:1} : (this.props.isMobile ? { top: 10, right: 15, bottom: 0, left: 15 } : { top: 10, right: 35, bottom: 0, left: 35 }),\n    };\n\n    const chartData = [];\n\n    this.props.tokenConfig.protocols.forEach((protocolInfo,i)=>{\n      const protocolName = protocolInfo.name;\n      const protocolAddr = protocolInfo.address.toLowerCase();\n      if (protocolsAllocationsPerc[protocolAddr]){\n        const protocolAllocationPercParsed = parseFloat(protocolsAllocationsPerc[protocolAddr].times(100).toFixed(2));\n        chartData.push({\n          id:protocolAddr,\n          name:protocolName,\n          value:protocolAllocationPercParsed,\n          color:'hsl('+globalConfigs.stats.protocols[protocolName].color.hsl.join(',')+')',\n          label: globalConfigs.stats.protocols[protocolName].label ? globalConfigs.stats.protocols[protocolName].label : this.functionsUtil.capitalize(protocolName)\n        });\n      }\n    });\n\n    this.setStateSafe({\n      chartData,\n      chartProps,\n      totalAllocation,\n      protocolsAllocations,\n      protocolsAllocationsPerc\n    });\n  }\n\n  render() {\n    \n    const selectedSlice = this.state.selectedSlice !== null && this.state.protocolsAllocations[this.state.selectedSlice.id] ? this.state.protocolsAllocations[this.state.selectedSlice.id] : false;\n    const protocolIcon = this.state.selectedSlice !== null ? (globalConfigs.stats.protocols[this.state.selectedSlice.name] && globalConfigs.stats.protocols[this.state.selectedSlice.name].icon ? globalConfigs.stats.protocols[this.state.selectedSlice.name].icon : `${this.state.selectedSlice.name}.svg`) : null;\n\n    return (\n      <Flex\n        width={1}\n        position={'relative'}\n      >\n        {\n          this.state.totalAllocation && !this.props.inline &&\n            <Flex\n              zIndex={0}\n              top={['23%','25%']}\n              left={['20%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              position={'absolute'}\n              width={['60%','46%']}\n              height={['53%','46%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                selectedSlice ? (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={`/images/protocols/${protocolIcon}`}\n                    />\n                    <SmartNumber\n                      fontSize={[3,4]}\n                      decimals={3}\n                      fontWeight={4}\n                      maxPrecision={5}\n                      number={selectedSlice}\n                    />\n                    <Text\n                      fontSize={[1,2]}\n                      fontWeight={3}\n                      color={'cellTitle'}\n                    >\n                      Funds in {this.state.selectedSlice.label}\n                    </Text>\n                  </Flex>\n                ) : (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={`/images/idle-mark.png`}\n                    />\n                    <SmartNumber\n                      unitProps={{\n                        ml:2,\n                        fontWeight:3,\n                        fontSize:[3,4]\n                      }}\n                      decimals={3}\n                      fontWeight={4}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      number={this.state.totalAllocation}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      Total funds\n                    </Text>\n                  </Flex>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          showLoader={true}\n          {...this.props}\n          {...this.state.chartProps}\n          data={this.state.chartData}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default AllocationChart;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\n\nclass CustomTooltipRow extends Component {\n\n  render() {\n    return (\n      <Flex\n        mb={2}\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n      >\n        <Flex\n          pr={2}\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-start'}\n        > \n          {\n            this.props.color && \n            <Box\n              mr={2}\n              width={'10px'}\n              height={'10px'}\n              borderRadius={'50%'}\n              backgroundColor={this.props.color}\n            >\n            </Box>\n          }\n          <Text\n            fontSize={1}\n            fontWeight={2}\n            textAlign={'left'}\n            color={'dark-gray'}\n            style={{\n              whiteSpace:'nowrap',\n              textTransform:'capitalize'\n            }}\n          >\n            {this.props.label}\n          </Text>\n        </Flex>\n        <Flex\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-end'}\n        >\n          <Text\n            fontSize={1}\n            fontWeight={3}\n            color={'cellText'}\n            textAlign={'right'}\n            style={{\n              whiteSpace:'nowrap'\n            }}\n            dangerouslySetInnerHTML={{\n              __html: this.props.value\n            }}\n          >\n          </Text>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default CustomTooltipRow;","import React, { Component } from 'react';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport { Text, Icon, Image, Button } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass CustomField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    \n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText'\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    let CustomComponent = null;\n    let componentHasChildren = false;\n    const fieldType = fieldInfo.type;\n    const fieldPath = fieldInfo.path;\n    let customValue = fieldPath ? this.functionsUtil.getArrayPath(fieldPath,this.props.row) : null;\n\n    switch (fieldType){\n      case 'image':\n        CustomComponent = Image;\n        fieldProps.src = customValue;\n      break;\n      case 'number':\n        customValue = this.functionsUtil.BNify(customValue).toString();\n        CustomComponent = SmartNumber;\n        fieldProps.number = customValue;\n      break;\n      case 'icon':\n        CustomComponent = Icon;\n        fieldProps.name = customValue;\n      break;\n      case 'button':\n        CustomComponent = Button;\n        componentHasChildren = true;\n        customValue = fieldInfo.label || fieldProps.label;\n        fieldProps.onClick=() => fieldProps.handleClick(this.props)\n      break;\n      default:\n        CustomComponent = Text;\n        componentHasChildren = true;\n      break;\n    }\n\n    if (!customValue){\n      return null;\n    }\n\n    // Add custom field extra props\n    if (fieldPath){\n      const customFieldName = Object.values(fieldPath).pop();\n      if (this.props.row[`${customFieldName}Props`]){\n        const customFieldProps = this.props.row[`${customFieldName}Props`];\n        // Replace props\n        if (customFieldProps && Object.keys(customFieldProps).length){\n          Object.keys(customFieldProps).forEach(p => {\n            fieldProps[p] = customFieldProps[p];\n          });\n        }\n      }\n    }\n\n    return CustomComponent ? (componentHasChildren ? (<CustomComponent {...fieldProps}>{customValue}</CustomComponent>) : (<CustomComponent {...fieldProps} />) ) : null;\n  }\n}\n\nexport default CustomField;","import { Line } from '@nivo/line';\nimport React, { Component } from 'react';\n// import { linearGradientDef } from '@nivo/core'\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport ChartCustomTooltip from '../ChartCustomTooltip/ChartCustomTooltip';\nimport ChartCustomTooltipRow from '../ChartCustomTooltipRow/ChartCustomTooltipRow';\n\nclass PortfolioEquity extends Component {\n  state = {\n    startDate:null,\n    chartData:null,\n    chartProps:null,\n    chartwidth:null,\n    chartHeight:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadChartData();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const quickDateSelectionChanged = prevProps.quickDateSelection !== this.props.quickDateSelection;\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n    if (tokenChanged || quickDateSelectionChanged){\n      this.setState({\n        chartData:null\n      },() => {\n        this.componentDidMount();\n      });\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    if (mobileChanged || themeModeChanged){\n      this.loadChartData();\n    }\n  }\n\n  async loadChartData() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    const etherscanTxs = await this.functionsUtil.getEtherscanTxs(this.props.account,0,'latest',enabledTokens);\n\n    const chartData = [];\n    let tokensBalance = {};\n    let firstTxTimestamp = null;\n\n    await this.functionsUtil.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      tokensBalance[selectedToken] = [];\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        let amountLent = this.functionsUtil.BNify(0);\n\n        filteredTxs.forEach((tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending')){\n            return false;\n          }\n          \n          firstTxTimestamp = firstTxTimestamp ? Math.min(firstTxTimestamp,parseInt(tx.timeStamp)) : parseInt(tx.timeStamp);\n\n          const tokenAmount = this.functionsUtil.BNify(tx.tokenAmount);\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n            case 'CurveOut':\n              amountLent = amountLent.plus(tokenAmount);\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.functionsUtil.BNify(0);\n          }\n\n          const balance = amountLent;\n          const action = tx.action;\n          const timeStamp = parseInt(tx.timeStamp);\n          const tokenPrice = this.functionsUtil.BNify(tx.tokenPrice);\n          const idleTokens = this.functionsUtil.BNify(tx.idleTokens);\n\n          if (!tokenPrice.isNaN() && !tokenPrice.isNaN()){\n            tokensBalance[selectedToken].push({\n              action,\n              balance,\n              timeStamp,\n              tokenPrice,\n              idleTokens,\n              tokenAmount\n            });\n          }\n        });\n      }\n    });\n\n    // Calculate Start Date\n    let startDate = null;\n    const currentDate = this.functionsUtil.strToMoment(new Date());\n\n    switch (this.props.quickDateSelection){\n      case 'week':\n        startDate = currentDate.clone().subtract(1,'week');\n      break;\n      case 'month':\n        startDate = currentDate.clone().subtract(1,'month');\n      break;\n      case 'month3':\n        startDate = currentDate.clone().subtract(3,'month');\n      break;\n      case 'month6':\n        startDate = currentDate.clone().subtract(6,'month');\n      break;\n      default:\n        startDate = null;\n      break;\n    }\n\n    const days = {};\n    let prevBalances = {};\n    let prevTimestamp = null;\n    let minChartValue = null;\n    let maxChartValue = null;\n    let aggregatedBalance = null;\n    const aggregatedBalancesKeys = {};\n    const tokensBalancesPerDate = {};\n    const currTimestamp = parseInt(new Date().getTime()/1000)+86400;\n\n    const tokensData = {};\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      tokensData[token] = await this.functionsUtil.getTokenApiData(this.props.availableTokens[token].address,isRisk,firstTxTimestamp,null,false,3600);\n    });\n\n    // debugger;\n\n    const idleTokenBalance = {};\n\n    for (let timeStamp=firstTxTimestamp;timeStamp<=currTimestamp;timeStamp+=this.props.frequencySeconds){\n\n      const foundBalances = {};\n      const tokensBalances = {};\n      timeStamp = Math.min(currTimestamp,timeStamp);\n      aggregatedBalance = this.functionsUtil.BNify(0);\n\n      // await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      // eslint-disable-next-line\n      Object.keys(tokensBalance).forEach(token => {\n\n        let lastTokenData = null;\n        const lastTokenDataUnfiltered = Object.values(tokensData[token]).pop();\n        const filteredTokenData = tokensData[token].filter(tx => (tx.timestamp>=prevTimestamp && tx.timestamp<=timeStamp));\n        if (filteredTokenData && filteredTokenData.length){\n          lastTokenData = filteredTokenData.pop();\n        }\n\n        if (!idleTokenBalance[token]){\n          idleTokenBalance[token] = this.functionsUtil.BNify(0);\n        }\n\n        const tokenConfig = this.props.availableTokens[token];\n        const tokenDecimals = tokenConfig.decimals;\n        let filteredBalances = tokensBalance[token].filter(tx => (tx.timeStamp<=timeStamp && (!prevTimestamp || tx.timeStamp>prevTimestamp)));\n        \n        if (!filteredBalances.length){\n          if (prevBalances && prevBalances[token]){\n            filteredBalances = prevBalances[token];\n            const lastFilteredTx = Object.assign([],filteredBalances).pop();\n            const currentBalance = parseFloat(lastFilteredTx.balance);\n\n            // Take idleToken price from API and calculate new balance\n            if (currentBalance>0 && timeStamp>firstTxTimestamp && lastTokenData){\n              const idleTokens = idleTokenBalance[token];\n              const idlePrice = this.functionsUtil.fixTokenDecimals(lastTokenData.idlePrice,tokenDecimals);\n              let newBalance = idleTokens.times(idlePrice);\n\n              // Set new balance and tokenPrice\n              lastFilteredTx.balance = newBalance;\n              lastFilteredTx.tokenPrice = idlePrice;\n              filteredBalances = [lastFilteredTx];\n            }\n          } else {\n            filteredBalances = [{\n              balance:this.functionsUtil.BNify(0),\n              tokenPrice:this.functionsUtil.BNify(0)\n            }];\n          }\n        } else {\n          filteredBalances.forEach(tx => {\n            switch (tx.action){\n              case 'Swap':\n              case 'Deposit':\n              case 'Migrate':\n              case 'Receive':\n              case 'CurveOut':\n                idleTokenBalance[token] = idleTokenBalance[token].plus(tx.idleTokens);\n              break;\n              default:\n                idleTokenBalance[token] = idleTokenBalance[token].minus(tx.idleTokens);\n                if (idleTokenBalance[token].lt(0)){\n                  idleTokenBalance[token] = this.functionsUtil.BNify(0);\n                }\n              break;\n            }\n          });\n        }\n\n        const lastTx = Object.assign([],filteredBalances).pop();\n        // let lastTxBalance = this.functionsUtil.BNify(lastTx.balance);\n        let lastTxBalance = idleTokenBalance[token].times(lastTx.tokenPrice);\n\n        if (lastTxBalance.gt(0)){\n          // Convert token balance to USD\n          let tokenUsdConversionRate = null;\n          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'conversionRateField']);\n          if (!this.props.chartToken && conversionRateField){\n            const conversionRate = lastTokenData && lastTokenData[conversionRateField] ? lastTokenData[conversionRateField] : (lastTokenDataUnfiltered && lastTokenDataUnfiltered[conversionRateField] ? lastTokenDataUnfiltered[conversionRateField] : null);\n            if (conversionRate){\n              tokenUsdConversionRate = this.functionsUtil.fixTokenDecimals(conversionRate,18);\n              if (tokenUsdConversionRate.gt(0)){\n                lastTxBalance = lastTxBalance.times(tokenUsdConversionRate);\n              }\n            }\n          }\n          \n          tokensBalances[token] = lastTxBalance;\n\n          aggregatedBalance = aggregatedBalance.plus(lastTxBalance);\n        }\n\n        foundBalances[token] = filteredBalances;\n      });\n\n      let momentDate = this.functionsUtil.strToMoment(timeStamp*1000);\n\n      if (startDate === null || (momentDate.isSameOrAfter(startDate) && momentDate.isSameOrBefore(new Date(),'day'))){\n        \n        // if (momentDate.isAfter(new Date(),'day')){\n        //   momentDate = this.functionsUtil.strToMoment(new Date());\n        // }\n\n        // Force date to midnight\n        const formattedDate = momentDate.format('YYYY/MM/DD 00:00');\n\n        // Save days for axisBottom format\n        days[momentDate.format('YYYY/MM/DD')] = 1;\n\n        aggregatedBalance = parseFloat(parseFloat(aggregatedBalance.toFixed(6)));\n\n        tokensBalancesPerDate[formattedDate] = tokensBalances;\n        aggregatedBalancesKeys[formattedDate] = aggregatedBalance;\n\n        // console.log(formattedDate,tokensBalances);\n\n        minChartValue = minChartValue === null ? aggregatedBalance : Math.min(minChartValue,aggregatedBalance);\n        maxChartValue = maxChartValue === null ? aggregatedBalance : Math.max(maxChartValue,aggregatedBalance);\n      }\n\n      prevTimestamp = timeStamp;\n      prevBalances = foundBalances;\n    }\n\n    const aggregatedBalances = Object.keys(aggregatedBalancesKeys).map(date => ({\n      x:date,\n      y:aggregatedBalancesKeys[date],\n      balances:tokensBalancesPerDate[date]\n    }));\n\n    let itemIndex = 0;\n    aggregatedBalances.forEach( (item,index) => {\n      const itemPos = Math.floor(itemIndex/aggregatedBalances.length*100);\n      aggregatedBalances[index].itemPos = itemPos;\n      itemIndex++;\n    });\n\n    /*\n    aggregatedBalances.push({\n      x:momentDate.format('YYYY/MM/DD HH:mm'),\n      y:aggregatedBalance\n    });\n    */\n\n    // Add day before to start with zero balance\n    /*\n    const firstTxMomentDate = this.functionsUtil.strToMoment(firstTxTimestamp*1000);\n    if ((startDate === null || startDate.isSameOrBefore(firstTxMomentDate)) && aggregatedBalances.length){\n      const firstItem = aggregatedBalances[0];\n      const firstDate = this.functionsUtil.strToMoment(firstItem.x,'YYYY/MM/DD HH:mm');\n      firstDate.subtract(1,'day');\n      aggregatedBalances.unshift({\n        x:firstDate.format('YYYY/MM/DD HH:mm'),\n        y:0\n      });\n    }\n    */\n\n    const chartToken = this.props.chartToken ? this.props.chartToken.toUpperCase() : 'USD';\n\n    // Add token Data\n    chartData.push({\n      id:chartToken,\n      color: 'hsl('+ this.functionsUtil.getGlobalConfig(['stats','tokens',chartToken,'color','hsl']).join(',')+')',\n      data:aggregatedBalances\n    });\n\n    let yFormatDecimals = 2;\n    if (maxChartValue-minChartValue<1){\n      yFormatDecimals = 4;\n    }\n\n    if (maxChartValue === minChartValue){\n      minChartValue = Math.max(0,maxChartValue-1);\n    }\n\n    const maxGridLines = 5;\n    const gridYStep = (maxChartValue-minChartValue)/maxGridLines;\n    const gridYValues = [];\n    for (let i=0;i<=maxGridLines;i++){\n      const gridYValue = parseFloat(parseFloat(minChartValue+(i*gridYStep)).toFixed(6));\n      gridYValues.push(gridYValue);\n    }\n    \n    const axisBottomMaxValues = 10;\n    const daysCount = Object.values(days).length;    \n    const daysFrequency = Math.max(1,Math.ceil(daysCount/axisBottomMaxValues));\n\n    const chartProps = {\n      xScale:{\n        type: 'time',\n        format: '%Y/%m/%d %H:%M',\n      },\n      yScale:{\n        type: 'linear',\n        stacked: false,\n        min: minChartValue,\n        max: maxChartValue\n      },\n      xFormat:'time:%b %d %Y',\n      yFormat:value => this.functionsUtil.formatMoney(value,yFormatDecimals),\n      axisBottom: this.props.isMobile ? null : {\n        legend: '',\n        tickSize:0,\n        format: '%b %d',\n        tickPadding: 15,\n        orient: 'bottom',\n        legendOffset: 36,\n        legendPosition: 'middle',\n        tickValues:'every '+daysFrequency+' days'\n      },\n      gridYValues,\n      pointSize:0,\n      useMesh:true,\n      axisLeft: this.props.isMobile ? null : {\n        legend: '',\n        tickSize: 0,\n        orient: 'left',\n        tickPadding: 10,\n        tickRotation: 0,\n        legendOffset: -70,\n        tickValues:gridYValues,\n        legendPosition: 'middle',\n        format: v => this.functionsUtil.abbreviateNumber(v,2),\n      },\n      animate:true,\n      pointLabel:'y',\n      enableArea:true,\n      enableSlices:'x',\n      enableGridY:true,\n      curve:'monotoneX',\n      enableGridX:false,\n      pointBorderWidth:1,\n      colors:d => d.color,\n      pointLabelYOffset:-12,\n      areaBaselineValue:minChartValue,\n      pointColor:{ from: 'color', modifiers: []},\n      areaOpacity:this.props.themeMode === 'light' ? 0.1 : 0.5,\n      theme:{\n        axis: {\n          ticks: {\n            text: {\n              fontSize:12,\n              fontWeight:600,\n              fill:this.props.theme.colors.legend,\n              fontFamily:this.props.theme.fonts.sansSerif\n            }\n          }\n        },\n        grid: {\n          line: {\n            stroke: this.props.theme.colors.lineChartStroke, strokeDasharray: '8 4'\n          }\n        },\n      },\n      /*\n      defs:[\n        linearGradientDef('gradientA', [\n          { offset: 0, color: 'inherit' },\n          { offset: 100, color: 'inherit', opacity: 0 },\n        ]),\n      ],\n      fill:[{ match: '*', id: 'gradientA' }],\n      */\n      margin: this.props.isMobile ? { top: 20, right: 25, bottom: 25, left: 20 } : { top: 30, right: 50, bottom: 45, left: 60 },\n      sliceTooltip:(slideData) => {\n        const { slice } = slideData;\n        const point = slice.points[0];\n        return (\n          <ChartCustomTooltip\n            point={point}\n          >\n            <ChartCustomTooltipRow\n              color={point.color}\n              label={point.serieId}\n              value={`$ ${point.data.yFormatted}`}\n            />\n            {\n            (typeof point.data.balances === 'object' && Object.keys(point.data.balances).length>0) &&\n              Object.keys(point.data.balances).map(token => {\n                if (token === point.serieId){\n                  return null;\n                }\n                const color = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'color','hex']);\n                const balance = point.data.balances[token];\n                let formattedBalance = this.functionsUtil.formatMoney(balance,2);\n                if (parseFloat(balance)>=0.01){\n                  return (\n                    <ChartCustomTooltipRow\n                      label={token}\n                      color={color}\n                      key={`row_${token}`}\n                      value={`$ ${formattedBalance}`}\n                    />\n                  );\n                }\n                return null;\n              })\n            }\n          </ChartCustomTooltip>\n        );\n      }\n    };\n\n    this.setState({\n      chartData,\n      chartProps\n    });\n  }\n\n  render() {\n    return (\n      <GenericChart\n        type={Line}\n        showLoader={true}\n        {...this.state.chartProps}\n        data={this.state.chartData}\n        parentId={this.props.parentId}\n        height={this.props.chartHeight}\n        parentIdHeight={this.props.parentIdHeight}\n      />\n    );\n  }\n}\n\nexport default PortfolioEquity;","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass ChartCustomTooltip extends Component {\n\n  async componentWillMount(){\n\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    \n  }\n\n  render() {\n    return (\n      <DashboardCard\n        key={this.props.point.id}\n        cardProps={{\n          py:2,\n          px:3,\n          width:1,\n          left: this.props.point.data.itemPos && this.props.point.data.itemPos>50 ? '-110%' : '0'\n        }}\n      >\n        <Flex\n          width={1}\n          flexDirection={'column'}\n        >\n          {\n            this.props.point.data.xFormatted && \n              <Text\n                mb={2}\n                fontSize={1}\n                fontWeight={3}\n                color={'cellText'}\n                textAlign={'left'}\n              >\n                {this.props.point.data.xFormatted}\n              </Text>\n          }\n          {this.props.children}\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default ChartCustomTooltip;\n","import axios from 'axios';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Progress, Icon, Link } from 'rimble-ui'\n\nclass TxProgressBar extends Component {\n  state = {\n    txCount:0,\n    error:null,\n    ended:false,\n    percentage:0,\n    processing:true,\n    txTimestamp:null,\n    initialized:false,\n    estimatedTime:null,\n    remainingTime:null\n  };\n\n  componentUnmounted = false;\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n\n    this.componentUnmounted = true;\n\n    var id = window.setTimeout(function() {}, 0);\n\n    while (id--) {\n        window.clearTimeout(id); // will do nothing if no timeout with id is present\n    }\n\n    window.initProgressBar = this.initProgressBar;\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps){\n    this.loadUtils();\n\n    if (!this.state.initialized && this.props.web3){\n      this.initProgressBar();\n    }\n  }\n\n  componentDidMount = async () => {\n    this.initProgressBar();\n  }\n\n  getTransaction = async () => {\n    const transaction = await (new Promise( async (resolve, reject) => {\n      // console.log('getTransaction',this.props.hash);\n      this.props.web3.eth.getTransaction(this.props.hash,(err,transaction) => {\n        resolve(transaction);\n      });\n    }));\n\n    // console.log('getTransaction',transaction);\n\n    const newState = {};\n    if (transaction){\n      newState.transaction = transaction;\n    } else {\n      newState.processing = false;\n      newState.error = 'Unable to find the transaction';\n    }\n\n    this.setState(newState);\n    return transaction;\n  }\n\n  /*\n  Taken from https://ethgasstation.info/calculatorTxV.php\n  */\n  _estimateWait (prediction, gasoffered) {\n    var minedProb;\n    var expectedWait;\n    var sum1, sum2;\n    var intercept = 4.2794;\n    var hpa = .0329;\n    var hgo = -3.2836;\n    var tx = -0.0004;\n    var intercept2 = 7.5375;\n    var hpa_coef = -0.0801;\n    var txatabove_coef= 0.0003;\n    var high_gas_coef = .3532;\n\n    if (gasoffered > 1000000) {    \n      sum1 = intercept + (prediction['hashpower_accepting'] * hpa) + hgo  + (prediction['tx_atabove'] * tx);\n      sum2 = intercept2 + (prediction['hashpower_accepting'] * hpa_coef) + (prediction['tx_atabove'] * txatabove_coef) + high_gas_coef;\n    } else {\n      sum1 = intercept + (prediction['hashpower_accepting'] * hpa) + (prediction['tx_atabove'] * tx);\n      sum2 = intercept2 + (prediction['tx_atabove'] * txatabove_coef) + (prediction['hashpower_accepting'] * hpa_coef);\n    }\n\n    var factor = Math.exp(- 1 * sum1);\n    const prob = 1 / (1 + factor);\n\n    if (prob > .95) {\n      minedProb = 'Very High';\n    } else if (prob > .9 && prob <= .95) {\n      minedProb = 'Medium'\n    } else {\n      minedProb = 'Low';\n    }\n\n    expectedWait = Math.exp(sum2);\n    if (expectedWait < 2) {\n      expectedWait = 2;\n    }\n\n    if (gasoffered > 2000000) {\n      expectedWait += 100;\n    }\n\n    return [expectedWait, prediction['hashpower_accepting'], prediction['tx_atabove'], minedProb];\n  }\n\n  getBlockTime = async () => {\n    const pt = await axios.get('https://ethgasstation.info/json/ethgasAPI.json');\n    if (pt){\n      const blockTime = pt.data;\n      this.setState({\n        blockTime\n      });\n      return blockTime;\n    }\n    return null;\n  }\n\n  getPredictionTable = async () => {\n    const pt = await axios.get('https://ethgasstation.info/json/predictTable.json');\n    if (pt){\n      const predictTable = pt.data;\n      this.setState({\n        predictTable\n      });\n      return predictTable;\n    }\n    return null;\n  }\n\n  getTxEstimatedTime = (gasPrice) => {\n    let prediction = null;\n    if (this.state.predictTable){\n      this.state.predictTable.forEach((p,i) => {\n        if (!prediction && parseFloat(p.gasprice)>=parseFloat(gasPrice)){\n          prediction = p;\n          return true;\n        }\n      });\n    }\n\n    if (this.state.blockTime && prediction){\n      const pdValues = this._estimateWait(prediction,this.state.transaction.gas);\n      const blocksWait = pdValues[0];\n      const blockInterval = this.state.blockTime.block_time;\n      let txMeanSecs = blocksWait * blockInterval;\n      txMeanSecs = parseInt(txMeanSecs.toFixed(0));\n      this.functionsUtil.customLog('getTxEstimatedTime',prediction,this.state.transaction.gas,pdValues,txMeanSecs);\n      return txMeanSecs; // Customized\n    }\n\n    return null;\n  }\n\n  calculateRemainingTime = async () => {\n    let remainingTime = 0;\n    let estimatedTime = 0;\n\n    if (!this.state.transaction || this.componentUnmounted){\n      return false;\n    }\n\n    if (!this.state.transaction.blockNumber){\n      const gasPrice = parseFloat(this.functionsUtil.BNify(this.state.transaction.gasPrice).div(1e9).toString());\n      remainingTime = this.getTxEstimatedTime(gasPrice);\n    }\n\n    estimatedTime = remainingTime ? remainingTime : 0;\n\n    if (this.state.txTimestamp){\n      const currTimestamp = new Date().getTime();\n      const secondsPassed = parseInt((currTimestamp-parseInt(this.state.txTimestamp))/1000);\n      \n      // Calculate new remaining time\n      remainingTime -= secondsPassed;\n      remainingTime = Math.max(remainingTime,0);\n\n      this.functionsUtil.customLog('Estimated time',estimatedTime,'secondsPassed',secondsPassed,'New remaining time',remainingTime);\n    }\n\n    const timePassed = estimatedTime-remainingTime;\n    const percentage = estimatedTime>0 ? parseFloat(timePassed/estimatedTime) : 1;\n\n    this.setState({\n      estimatedTime,\n      remainingTime,\n      percentage\n    });\n\n    setTimeout(()=>{this.updateProgressBar()},1000);\n  }\n\n  updateProgressBar = () => {\n\n    if (this.componentUnmounted){\n      return false;\n    }\n\n    let remainingTime = this.state.remainingTime;\n    if (remainingTime){\n      remainingTime--;\n      if (!remainingTime){\n        this.setState({\n          percentage:1,\n          ended:true\n        });\n      } else {\n        const timePassed = this.state.estimatedTime-remainingTime;\n        const percentage = parseFloat(timePassed/this.state.estimatedTime);\n        this.setState({\n          percentage,\n          remainingTime\n        });\n        setTimeout(()=>{this.updateProgressBar()},1000);\n      }\n    } else {\n      this.setState({\n        percentage:1,\n        ended:true\n      });\n    }\n  }\n\n  getTxInfo = async () => {\n\n    // Get tx timestamp\n    const txProgressBarKey = `txProgressBarData`;\n    const txHash = this.props.hash.toLowerCase();\n\n    let txProgressBarData = null;\n    let txTimestamp = null;\n    let newState = {};\n\n    if (localStorage){\n      txProgressBarData = localStorage.getItem(txProgressBarKey);\n      if (txProgressBarData){\n        txProgressBarData = JSON.parse(txProgressBarData);\n      }\n    }\n\n    if (!txProgressBarData || !txProgressBarData[txHash]){\n      txTimestamp = new Date().getTime();\n\n      const [predictTable,blockTime] = await Promise.all([\n        this.getPredictionTable(),\n        this.getBlockTime()\n      ]);\n\n      txProgressBarData = {};\n      txProgressBarData[txHash] = {\n        txTimestamp,\n        blockTime,\n        predictTable\n      };\n\n      // Save progress bar status in localStorage\n      this.functionsUtil.setLocalStorage(txProgressBarKey,JSON.stringify(txProgressBarData));\n\n      newState = txProgressBarData[txHash];\n\n      if (!predictTable || !blockTime){\n        newState.error = 'Processing transaction';\n      }\n    }\n\n    this.setState(newState);\n  }\n\n  initProgressBar = async () => {\n\n    if (!this.props.hash || !this.props.web3){\n      return false;\n    }\n\n    const newState = {\n      initialized:true\n    };\n    this.setState(newState);\n\n    // console.log('initProgressBar',this.state.txCount,this.props.hash);\n\n    const transaction = await this.getTransaction();\n\n    if (transaction){\n      await this.getTxInfo();\n      try{\n        this.calculateRemainingTime();\n      } catch (err) {\n        newState.error = 'Processing transaction';\n        // const errStringified = JSON.stringify(err);\n      }\n\n      this.setState(newState);\n    } else {\n      const txCount = this.state.txCount++;\n      if (txCount<5){\n        this.setState({\n          txCount\n        },() => {\n          window.setTimeout(() => {\n            this.initProgressBar();\n          },1000);\n        });\n      }\n    }\n  }\n\n  renderRemainingTime(){\n    // More than 60 seconds\n    if (this.state.remainingTime>60){\n      const minutes = Math.floor(this.state.remainingTime/60);\n      const seconds = this.state.remainingTime-(minutes*60);\n      return ('0'+minutes).substr(-2)+':'+('0'+seconds).substr(-2)+' min';\n    } else {\n      return this.state.remainingTime+'s';\n    }\n  }\n\n  render() {\n    return (\n      <Flex flexDirection={'column'} alignItems={'center'}>\n        {\n          this.state.remainingTime !== null ? (\n            this.state.ended ? (\n              <FlexLoader\n                textProps={{\n                  ml:2,\n                  color:this.props.textColor ? this.props.textColor : 'copyColor'\n                }}\n                loaderProps={{\n                  size:'25px',\n                  ...this.props.loaderProps\n                }}\n                flexProps={{\n                  textAlign:'center',\n                  alignItems:'center',\n                  justifyContent:'center',\n                }}\n                text={this.props.endMessage ? this.props.endMessage : 'Finalizing transaction...'}\n              />\n            ) : (\n              <Flex\n                mb={2}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Text mb={2} color={ this.props.textColor ? this.props.textColor : 'copyColor'}>{ this.props.waitText ? this.props.waitText : 'Remaining time:' } <Text.span color={ this.props.textColor ? this.props.textColor : 'copyColor'} fontWeight={3}>{ this.renderRemainingTime() }</Text.span></Text>\n                <Progress value={ this.state.percentage } />\n              </Flex>\n            )\n          ) : (\n            this.state.error !== null && !this.state.processing ? (\n              <Flex\n                alignItems={'center'}\n                flexDirection={'column'}\n              >\n                <Icon\n                  size={'2em'}\n                  name={'Warning'}\n                  color={'cellText'}\n                />\n                <Text\n                  mt={0}\n                  fontSize={2}\n                  textAlign={'center'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                >\n                  {this.state.error}\n                </Text>\n              </Flex>\n            ) : (\n              <FlexLoader\n                textProps={{\n                  ml:2,\n                  color:this.props.textColor ? this.props.textColor : 'copyColor'\n                }}\n                loaderProps={{\n                  size:'25px',\n                  ...this.props.loaderProps\n                }}\n                flexProps={{\n                  textAlign:'center',\n                  alignItems:'center',\n                  justifyContent:'center',\n                }}\n                text={ this.state.error ? this.state.error : (this.props.hash ? (this.props.loadingMessage ? this.props.loadingMessage : 'Calculating estimated time...') : (this.props.sendingMessage ? this.props.sendingMessage : 'Sending transaction...') ) }\n              />\n            )\n          )\n        }\n        {\n          this.props.hash ? (\n            <Link\n              mt={0}\n              target={'_blank'}\n              hoverColor={'dark-gray'}\n              rel={\"nofollow noopener noreferrer\"}\n              color={this.props.textColor ? this.props.textColor : 'cellText'}\n              href={this.functionsUtil.getEtherscanTransactionUrl(this.props.hash)}\n            >\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={'center'}\n              >\n                <Text\n                  fontSize={0}\n                  textAlign={'center'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                >\n                  View in Etherscan\n                </Text>\n                <Icon\n                  ml={1}\n                  size={'0.75em'}\n                  name={'OpenInNew'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                />\n              </Flex>\n            </Link>\n          ) : typeof this.props.cancelTransaction === 'function' ? (\n              <Link\n                mt={0}\n                href={`javascript:void(0)`}\n                onClick={ e => this.props.cancelTransaction() }\n                color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                hoverColor={this.props.cancelTextHoverColor ? this.props.cancelTextHoverColor : 'dark-gray'}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'row'}\n                  justifyContent={'center'}\n                >\n                  <Text\n                    fontSize={0}\n                    textAlign={'center'}\n                    color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                  >\n                    Cancel transaction\n                  </Text>\n                  <Icon\n                    ml={1}\n                    size={'0.85em'}\n                    name={'Cancel'}\n                    color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                  />\n                </Flex>\n              </Link>\n          ) : null\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TxProgressBar;","import baseColors, { blue, green, yellow, red } from \"./colors\";\nimport { tint, shade } from 'polished';\n\n// theme.js\nexport default {\n  breakpoints: ['52em', '64em'],\n  // breakpoints: ['40em', '52em', '64em', '80em'],\n  fontSizes: [12, 14, 16, 18, 21, 32, 38, 48, 54, 64, 72, 84],\n  fontWeights: [0, 300, 400, 600, 700, 800],\n  letterSpacings: [0, 1, 2, 4, 8],\n  lineHeights: {\n    solid: 1,\n    title: 1.25,\n    copy: 1.5,\n  },\n  fonts: {\n    serif: '\"georgia regular\", athelas, times, serif',\n    sansSerif: '\"Inter\", -apple-system, sans-serif',\n    counter: '\"Roboto Mono\", Arial, -apple-system, sans-serif'\n  },\n  space: [0, 4, 8, 16, 32, 64, 128, 256],\n  radii: ['0', '4px', '8px', '16px', '2rem'],\n  width: [0, 16, 32, 64, 128, 256],\n  minWidths: [0, 16, 32, 64, 128, 256],\n  maxWidths: [0, 16, 32, 64, 128, 256, 512, 768, 1024, 1536],\n  heights: [0, 16, 32, 64, 128, 256],\n  minHeights: [0, 16, 32, 64, 128, 256],\n  maxHeights: [0, 16, 32, 64, 128, 256],\n  borders: [0, '1px solid #eee','1px solid #b6c2ff'],\n  borderWidths: ['0', '1px', '2px', '4px'],\n  shadows: [\n    '0',\n    '0px 2px 4px rgba(0, 0, 0, 0.1)',\n    '0 7px 14px rgba(50,50,93,.1)',\n    '1px 1px 0px rgba(0,0,0,0.2)',\n    '0px 0px 16px 2px rgba(0,54,255,0.3)'\n  ],\n  opacity: {\n    disabled: 0.4,\n  },\n  colors: {\n    primary: blue.base,\n    'gradient-bg': 'linear-gradient(120deg, #f6d365 0%, #ea0d73 100%)',\n    'primary-light': blue.light[1],\n    'primary-dark': blue.dark[1],\n    bgBlue: '#0030e0',\n    blue: '#0036ff',\n    'dark-blue': '#00219a',\n    skyBlue: '#00abfe',\n    lightBlue: '#79f4e1',\n    copyColor: '#3F3D4B',\n    subColor: '#a7a7a7',\n    black: baseColors.black,\n    'near-black': '#111',\n    'dark-gray': '#4e4e4e',\n    'mid-gray': '#999',\n    gray: ' #e0e0e0',\n    grey: '#CCC',\n    silver: '#999',\n    'light-silver': '#aaa',\n    'moon-gray': '#ccc',\n    'light-gray': '#eee',\n    'near-white': '#f4f4f4',\n    white: '#fff',\n    transparent: 'transparent',\n    /*\n    NEW COLORS\n    */\n    alert:'#ff9900',\n    arrowActive:'#4f4f4f',\n    arrowInactive:'#d8d8d8',\n    selectBgFocused:'#fbfbfb',\n    selectBg:'#ffffff',\n    backButtonBg:'#ffffff',\n    lineChartStroke:'#dbdbdb',\n    wrongNetworkBannerBg:'#ffffff',\n    dashboardBg: '#f9fafd',\n    statValue: '#959595',\n    boxBorder: '#eeeeee',\n    cellTitle: '#a3a4a5',\n    cellText: '#a6a6a6',\n    divider: '#d8d8d8',\n    counter: '#5d5d5d',\n    redeem: '#00a9fe',\n    link:'#0036ff',\n    deposit: '#0239ff',\n    migrate: '#00a9fe',\n    legend: '#c9c9c9',\n    menuBg:'#fff',\n    menuHover:'#f3f6ff',\n    cardBg:'#fff',\n    flashColor:'#3f4e9a',\n    menuRightBorder:'#eee',\n    cardHoverShadow:'0px 0px 0px 1px rgba(0, 54, 255, 0.3)',\n    cardBgHover:'#f7f8ff',\n    cardBorder:'#eee',\n    pageActive:'#4f4f4f',\n    pageInactive:'#d8d8d8',\n    transactions:{\n      action:{\n        send:'#10a0dd',\n        swap:'#3d53c0',\n        boost:'#ffff00',\n        redeem:'#10a0dd',\n        swapout:'#10a0dd',\n        deposit:'#3d53c0',\n        curvein:'#10a0dd',\n        receive:'#3d53c0',\n        migrate:'#3d53c0',\n        default:'#4f4f4f',\n        curveout:'#3d53c0',\n        withdraw:'#10a0dd',\n        curvedepositin:'#10a0dd',\n        curvedepositout:'#3d53c0'\n      },\n      actionBg:{\n        send:'#ceeff6',\n        swap:'#ced6ff',\n        boost:'#ff7979',\n        redeem:'#ceeff6',\n        swapout:'#ceeff6',\n        deposit:'#ced6ff',\n        curvein:'#ceeff6',\n        default:'#dadada',\n        receive:'#ced6ff',\n        migrate:'#ced6ff',\n        withdraw:'#ceeff6',\n        curveout:'#ced6ff',\n        curvedepositin:'#ceeff6',\n        curvedepositout:'#ced6ff'\n      },\n      status:{\n        completed:'#00b84a',\n        pending:'#a5a5a5',\n        failed:'#fa0000'\n      }\n    },\n    blacks: [\n      'rgba(0,0,0,.0125)',\n      'rgba(0,0,0,.025)',\n      'rgba(0,0,0,.05)',\n      'rgba(0,0,0,.1)',\n      'rgba(0,0,0,.2)',\n      'rgba(0,0,0,.3)',\n      'rgba(0,0,0,.4)',\n      'rgba(0,0,0,.5)',\n      'rgba(0,0,0,.6)',\n      'rgba(0,0,0,.7)',\n      'rgba(0,0,0,.8)',\n      'rgba(0,0,0,.9)',\n    ],\n    whites: [\n      'rgba(255,255,255,.0125)',\n      'rgba(255,255,255,.025)',\n      'rgba(255,255,255,.05)',\n      'rgba(255,255,255,.1)',\n      'rgba(255,255,255,.2)',\n      'rgba(255,255,255,.3)',\n      'rgba(255,255,255,.4)',\n      'rgba(255,255,255,.5)',\n      'rgba(255,255,255,.6)',\n      'rgba(255,255,255,.7)',\n      'rgba(255,255,255,.8)',\n      'rgba(255,255,255,.9)',\n    ],\n  },\n  zIndices: [0, 9, 99, 999, 9999],\n  messageStyle: {\n    base: {\n      color: shade(0.4, '#AAA'),\n      backgroundColor: tint(0.9, '#AAA'),\n      borderColor: '#AAA',\n    },\n    success: {\n      color: shade(0.4, green.base),\n      backgroundColor: tint(0.9, green.base),\n      borderColor: green.base,\n    },\n    warning: {\n      color: shade(0.4, yellow.base),\n      backgroundColor: tint(0.9, yellow.base),\n      borderColor: yellow.base,\n    },\n    danger: {\n      color: shade(0.4, red.base),\n      backgroundColor: tint(0.9, red.base),\n      borderColor: red.base,\n    },\n    info: {\n      color: shade(0.4, blue.base),\n      backgroundColor: '#f3f6ff',\n      borderColor: '#b6c2ff',\n    },\n  },\n  buttons: {\n    primary: {\n      color: blue.text,\n      backgroundColor: blue.base,\n      // use css custom props\n      '--main-color': blue.base,\n      '--contrast-color': blue.text,\n    },\n    normal: {\n      color: baseColors.black,\n      '--contrast-color': baseColors.black,\n    },\n    success: {\n      '--main-color': green.base,\n      '--contrast-color': green.text,\n    },\n    danger: {\n      '--main-color': red.base,\n      '--contrast-color': red.text,\n    },\n  },\n  buttonSizes: {\n    small: {\n      fontSize: '0.75rem',\n      height: '2rem',\n      minWidth: '2rem',\n      padding: '0 1rem',\n    },\n    medium: {\n      fontSize: '1rem',\n      height: '3rem',\n      minWidth: '3rem',\n    },\n    large: {\n      fontSize: '1.5rem',\n      height: '4rem',\n      minWidth: '4rem',\n      borderRadius: '2rem'\n    },\n  },\n};\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport CustomField from '../CustomField/CustomField';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass CustomList extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n\n    return (\n      <Flex id=\"custom-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"custom-list\" flexDirection={'column'}>\n          {\n            this.props.rows.map( (row,rowIndex) => {\n              return (\n                <TableRow\n                  row={row}\n                  {...this.props}\n                  key={`asset-${rowIndex}`}\n                  fieldComponent={CustomField}\n                  rowId={`asset-col-${rowIndex}`}\n                  cardId={`asset-card-${rowIndex}`}\n                />\n              );\n            })\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default CustomList;","import { Flex } from \"rimble-ui\";\nimport Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport CustomList from '../CustomList/CustomList';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass Base extends Component {\n\n  state = {\n    loaded:false,\n    activeCoverages:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadCoverages();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    if (accountChanged){\n      this.loadCoverages();\n    }\n  }\n\n  async loadCoverages(){\n    if (!this.props.account){\n      return false;\n    }\n\n    const coverages = await this.functionsUtil.getActiveCoverages(this.props.account);\n    const activeCoverages = [];\n    if (coverages && coverages.length>0){\n      coverages.forEach( c => {\n        if (!this.props.availableTokens || !this.props.availableTokens.length || this.props.availableTokens.includes(c.collateral)){\n          const statusColors = this.props.theme.colors.transactions.status;\n          let statusIcon = 'VerifiedUser';\n          let statusColor = statusColors.completed;\n          switch (c.status){\n            case 'Expired':\n              statusIcon = 'Error';\n              statusColor = statusColors.failed;\n            break;\n            case 'Claimed':\n              statusIcon = 'Error';\n              statusColor = statusColors.pending;\n            break;\n            default:\n            case 'Active':\n              statusIcon = 'VerifiedUser';\n              statusColor = statusColors.completed;\n            break;\n          }\n\n          const statusIconProps = {\n            color:statusColor\n          };\n\n          const portfolioCoverage = c.portfolioCoverage || 'N/A';\n\n          activeCoverages.push(Object.assign(c,{\n            statusIcon,\n            statusIconProps,\n            portfolioCoverage\n          }));\n        }\n      })\n    }\n\n    this.setState({\n      loaded:true,\n      activeCoverages\n    });\n  }\n\n  render() {\n\n    if (!this.state.loaded){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          this.props.title && ((this.state.activeCoverages && this.state.activeCoverages.length>0) || this.props.children) && (\n            <Title\n              {...this.props.titleProps}\n            >\n              {this.props.title}\n            </Title>\n          )\n        }\n        {\n          this.state.activeCoverages && this.state.activeCoverages.length>0 ? (\n            <CustomList\n              rows={this.state.activeCoverages}\n              handleClick={ this.props.isMobile ? (props) => props.row.status!=='Expired' && props.row.fileClaimUrl && this.functionsUtil.openWindow(props.row.fileClaimUrl) : null }\n              cols={[\n                {\n                  title:'PROTOCOL',\n                  props:{\n                    width:[0.28,0.14]\n                  },\n                  fields:[\n                    {\n                      type:'image',\n                      props:{\n                        mr:[1,2],\n                        size:this.props.isMobile ? '1.2em' : '1.8em'\n                      },\n                      path:[this.props.themeMode === 'dark' ? 'protocolImageDark' : 'protocolImage']\n                    },\n                    {\n                      type:'text',\n                      path:['protocolName'],\n                    }\n                  ]\n                },\n                {\n                  title:'TOKEN',\n                  props:{\n                    width:[0.33,0.14]\n                  },\n                  fields:[\n                    {\n                      type:'image',\n                      props:{\n                        mr:[1,2],\n                        size:this.props.isMobile ? '1.2em' : '1.8em'\n                      },\n                      path:['collateralIcon']\n                    },\n                    {\n                      type:'text',\n                      path:['collateral'],\n                    }\n                  ]\n                },\n                {\n                  title:'AMOUNT',\n                  props:{\n                    width:[0.24, 0.12],\n                  },\n                  fields:[\n                    {\n                      type:'number',\n                      path:['balance'],\n                      props:{\n                        decimals: this.props.isMobile ? 2 :  4,\n                      }\n                    },\n                    {\n                      type:'text',\n                      path:['token'],\n                      props:{\n                        ml:[1,2],\n                        style:{\n                          textTransform:'uppercase'\n                        }\n                      }\n                    }\n                  ]\n                },\n                {\n                  mobile:false,\n                  title:'EXPIRATION DATE',\n                  props:{\n                    width:0.19,\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'text',\n                      path:['expirationDate'],\n                      props:{\n                        \n                      }\n                    },\n                  ]\n                },\n                {\n                  mobile:false,\n                  title:'COVERED FUNDS',\n                  props:{\n                    width:0.14,\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'text',\n                      path:['portfolioCoverage'],\n                      props:{\n                        \n                      }\n                    },\n                  ]\n                },\n                {\n                  title:'STATUS',\n                  props:{\n                    width:[0.15,0.12],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'icon',\n                      name:'custom',\n                      path:['statusIcon'],\n                      props:{\n                        mr:[1,2],\n                        size:this.props.isMobile ? '1.2em' : '1.8em'\n                      }\n                    },\n                    {\n                      mobile:false,\n                      name:'custom',\n                      path:['status'],\n                      props:{\n                        style:{\n                          textTransform:'capitalize'\n                        }\n                      }\n                    }\n                  ]\n                },\n                {\n                  title:'',\n                  mobile:false,\n                  props:{\n                    width:0.17,\n                  },\n                  parentProps:{\n                    width:1\n                  },\n                  fields:[\n                    {\n                      type:'button',\n                      name:'custom',\n                      funcProps:{\n                        label:(props) => (props.row.actionLabel),\n                        disabled:(props) => (props.row.actionDisabled)\n                      },\n                      props:{\n                        width:1,\n                        fontSize:3,\n                        fontWeight:3,\n                        height:'45px',\n                        borderRadius:4,\n                        boxShadow:null,\n                        mainColor:'redeem',\n                        size: this.props.isMobile ? 'small' : 'medium',\n                        handleClick:(props) => props.row.status!=='Expired' && props.row.actionUrl && this.functionsUtil.openWindow(props.row.actionUrl)\n                      }\n                    }\n                  ]\n                }\n              ]}\n              {...this.props}\n            />\n          ) : this.props.children\n        }\n      </Flex>\n    )\n  }\n}\n\nexport default Base;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tooltip\":\"TableCellHeader_tooltip__3xM3k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"radioBtn\":\"TransactionListFilters_radioBtn__1vgHa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bg\":\"ModalCard_bg__3ocwQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Web3ConnectionButtons_button__1Wov0\"};","import Select from 'react-select';\nimport React, { Component } from 'react';\nimport { Flex, Text, Input } from \"rimble-ui\";\nimport styles from './GenericSelector.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass GenericSelector extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadComponents();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const optionsChanged = JSON.stringify(prevProps.options) !== JSON.stringify(this.props.options);\n    const defaultValueChanged = JSON.stringify(prevProps.defaultValue) !== JSON.stringify(this.props.defaultValue);\n    const componentsChanged = prevProps.CustomOptionValue !== this.props.CustomOptionValue || prevProps.CustomValueContainer !== this.props.CustomValueContainer;\n\n    if (optionsChanged || selectedTokenChanged || defaultValueChanged || componentsChanged){\n      this.loadComponents();\n    }\n  }\n\n  async loadComponents(){\n    \n    const ControlComponent = props => {\n      const cardProps = Object.assign(\n        props.innerProps,\n        {\n          p:2,\n          width:1,\n          style:{cursor:'pointer'}\n        },\n        (this.props.innerProps ? this.props.innerProps : {})\n      );\n\n      if (props.menuIsOpen){\n        cardProps.boxShadow = 4;\n      }\n      return (\n        <DashboardCard\n          isInteractive={true}\n          cardProps={cardProps}\n        >\n          <Flex\n            width={1}\n            flexDirection={'row'}\n          >\n            {props.children}\n          </Flex>\n        </DashboardCard>\n      );\n    };\n\n    const CustomIndicatorSeparator = props => null;\n\n    const CustomMenu = props => {\n      const cardProps = Object.assign(props.innerProps,{\n        mt:2,\n        zIndex:1,\n        boxShadow:null,\n        position:'absolute'\n      });\n      return (\n        <DashboardCard\n          cardProps={cardProps}\n        >\n          {props.children}\n        </DashboardCard>\n      );\n    }\n\n    const CustomValueContainer = this.props.CustomValueContainer ? this.props.CustomValueContainer : props => {\n      return (\n        <Flex\n          {...props.innerProps}\n        >\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            <Text\n              fontWeight={3}\n            >\n              {props.selectProps.value.label}\n            </Text>\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomOptionValue = this.props.CustomOptionValue ? this.props.CustomOptionValue : (props) => {\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n        >\n          <Text>\n            {props.label}\n          </Text>\n        </Flex>\n      );\n    };\n\n    const CustomInputContainer = this.props.CustomInputContainer ? this.props.CustomInputContainer : (props) => {\n\n      if (!props.selectProps.isSearchable){\n        return null;\n      }\n\n      return (\n        <Input\n          {...props}\n          fontSize={this.props.theme.fontSizes[2]}\n          color={this.props.theme.colors.copyColor}\n          fontWeight={this.props.theme.fontWeights[3]}\n          fontFamily={this.props.theme.fonts.sansSerif}\n          backgroundColor={this.props.theme.colors.cardBg}\n          className={[styles.searchInput,this.props.themeMode==='dark' ? styles.dark : null,!props.selectProps.menuIsOpen ? styles.searchInputHidden : null]}\n        />\n      );\n    };\n\n    const CustomOption = (props) => {\n\n      const options = props.selectProps.options;\n      let selectedValue = props.selectProps && props.selectProps.value && props.selectProps.value.value;\n\n      // Check if the selectedValue is included in options\n      if (selectedValue && options.map( o => o.value ).indexOf(selectedValue) === -1 && this.props.defaultValue){\n        selectedValue = this.props.defaultValue.value;\n      }\n\n      // Don't show selected value\n      if (selectedValue && selectedValue === props.value){\n        return null;\n      }\n\n      return (\n        <Flex\n          px={3}\n          py={2}\n          width={1}\n          {...props.innerProps}\n          alignItems={'center'}\n          flexDirection={'row'}\n          style={{cursor:'pointer'}}\n          justifyContent={'flex-start'}\n          className={styles.genericSelector}\n          backgroundColor={ props.isFocused ? 'selectBgFocused' : 'selectBg' }\n        >\n          <CustomOptionValue\n            {...props}\n          />\n        </Flex>\n      );\n    }\n\n    await this.setState({\n      CustomMenu,\n      CustomOption,\n      ControlComponent,\n      CustomValueContainer,\n      CustomInputContainer,\n      CustomIndicatorSeparator\n    });\n  }\n\n  render() {\n    const isSearchable = typeof this.props.isSearchable !== 'undefined' ? this.props.isSearchable : false;\n    return (\n      <Select\n        name={this.props.name}\n        isSearchable={isSearchable}\n        options={this.props.options}\n        defaultValue={this.props.defaultValue}\n        onChange={ v => this.props.onChange(v.value) }\n        components={{\n            Menu: this.state.CustomMenu,\n            Option: this.state.CustomOption,\n            Control: this.state.ControlComponent,\n            Input: this.state.CustomInputContainer,\n            SingleValue: this.state.CustomValueContainer,\n            IndicatorSeparator: this.state.CustomIndicatorSeparator\n        }}\n      />\n    );\n  }\n}\n\nexport default GenericSelector;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericSelector from '../GenericSelector/GenericSelector';\n\nclass AssetSelector extends Component {\n\n  state = {\n    options:null,\n    defaultValue:null,\n    CustomOptionValue:null,\n    CustomValueContainer:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  loadComponents(){\n    const options = Object.keys(this.props.availableTokens).map(token => {\n      const tokenConfig = this.props.availableTokens[token];\n      return {\n        value:token,\n        label:token,\n        tokenConfig\n      };\n    });\n\n    const defaultValue = this.props.selectedToken ? options.find(v => (v.value.toUpperCase() === this.props.selectedToken.toUpperCase())) : null;\n\n    const CustomOptionValue = props => {\n      const token = props.value;\n      const tokenConfig = props.data.tokenConfig;\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={token}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={token}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n          {\n            this.state.props.showCustomField ? (\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:this.state.props.showCustomField,\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n            ) : this.props.showBalance &&\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:'tokenBalance',\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n          }\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : defaultValue;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const token = selectProps.value;\n      const tokenConfig = selectProps.tokenConfig;\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={token}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={token}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n\n          {\n            this.props.showBalance &&\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:'tokenBalance',\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n          }\n        </Flex>\n      );\n    }\n\n    this.setState({\n      options,\n      defaultValue,\n      CustomOptionValue,\n      CustomValueContainer\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadComponents();\n\n    this.setState({\n      props:this.props\n    });\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const availableTokensChanged = JSON.stringify(Object.keys(prevProps.availableTokens)) !== JSON.stringify(Object.keys(this.props.availableTokens));\n    if (availableTokensChanged || selectedTokenChanged){\n      this.loadComponents();\n    }\n  }\n\n  render() {\n    if (!this.state.options || !this.state.defaultValue || !this.state.CustomOptionValue || !this.state.CustomValueContainer || !this.props.availableTokens || !Object.keys(this.props.availableTokens).length){\n      return null;\n    }\n\n    return (\n      <GenericSelector\n        {...this.props}\n        name={'assets'}\n        options={this.state.options}\n        innerProps={this.props.innerProps}\n        isSearchable={this.props.isSearchable}\n        defaultValue={this.state.defaultValue}\n        selectedToken={this.props.selectedToken}\n        CustomOptionValue={this.state.CustomOptionValue}\n        CustomValueContainer={this.state.CustomValueContainer}\n        onChange={ this.props.onChange ? this.props.onChange : this.props.changeToken}\n      />\n    );\n  }\n}\n\nexport default AssetSelector;\n","import React, { Component } from 'react';\nimport { Flex, Text, Icon, Image } from \"rimble-ui\";\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass CardIconButton extends Component {\n  render() {\n    const cardProps = Object.assign({\n      py:1,\n      width:'auto',\n      px:['12px',3],\n    },this.props.cardProps);\n\n    return (\n       <DashboardCard\n         cardProps={cardProps}\n         isInteractive={true}\n         isActive={this.props.isActive}\n         isDisabled={this.props.isDisabled}\n         handleClick={this.props.handleClick}\n       >\n         <Flex\n           my={1}\n           alignItems={'center'}\n           flexDirection={'row'}\n           justifyContent={'center'}\n         >\n          {\n            this.props.image ? (\n              <Image\n                align={'center'}\n                src={this.props.image}\n                height={ this.props.isMobile ? '1.2em' : '1.4em' }\n                width={ this.props.isMobile ? '1.2em' : '1.4em' }\n                {...this.props.imageProps}\n              />\n            ) : this.props.useIconOnly ? (\n              <Icon\n                align={'center'}\n                name={this.props.icon}\n                size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                color={ this.props.iconColor ? this.props.iconColor : 'redeem' }\n                {...this.props.iconProps}\n              />\n            ) : (\n             <Flex\n               mr={2}\n               p={['4px','7px']}\n               borderRadius={'50%'}\n               alignItems={'center'}\n               justifyContent={'center'}\n               backgroundColor={ this.props.iconBgColor ? this.props.iconBgColor : this.props.theme.colors.transactions.actionBg.redeem }\n             >\n               <Icon\n                 align={'center'}\n                 name={this.props.icon}\n                 size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                 color={ this.props.iconColor ? this.props.iconColor : 'redeem' }\n                 {...this.props.iconProps}\n               />\n             </Flex>\n            )\n          }\n           <Text\n             fontWeight={3}\n             fontSize={[1,3]}\n             {...this.props.textProps}\n           >\n             {this.props.text}\n           </Text>\n         </Flex>\n       </DashboardCard>\n    );\n  }\n}\n\nexport default CardIconButton;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gradientButton\":\"Header_gradientButton__2mrQl\",\"empty\":\"Header_empty__3fhiX\",\"select\":\"Header_select__27Xyx\",\"selectDark\":\"Header_selectDark__EHAAP\",\"input\":\"Header_input__3dr8P\"};","import React, { Component } from 'react';\nimport { Icon, Text, Flex } from \"rimble-ui\";\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass IconBox extends Component {\n\n  render() {\n    const cardProps = Object.assign({\n      p:3\n    },this.props.cardProps);\n    return (\n      <DashboardCard\n        cardProps={cardProps}\n        isActive={this.props.isActive}\n        isVisible={this.props.isVisible}\n        isInteractive={this.props.isInteractive}\n      >\n        <Flex\n          alignItems={'center'}\n          flexDirection={'column'}\n        >\n          <Icon\n            size={'1.8em'}\n            color={'cellText'}\n            name={this.props.icon ? this.props.icon : 'InfoOutline'}\n            {...this.props.iconProps}\n          />\n          {\n            this.props.text && \n              <Text\n                mt={1}\n                fontSize={2}\n                color={'cellText'}\n                textAlign={'center'}\n                dangerouslySetInnerHTML={{\n                  __html:this.props.text\n                }}\n                {...this.props.textProps}\n              />\n          }\n          {\n            this.props.children\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default IconBox;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"Tos_headerContainer__23W_f\",\"headerBgFiller\":\"Tos_headerBgFiller__36Nfk\",\"bgContainer\":\"Tos_bgContainer__rX7uJ\",\"list\":\"Tos_list__3bMLG\",\"textContainer\":\"Tos_textContainer__3hUuq\"};","import theme from '../theme';\nimport React, { Component } from 'react';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ShortHash from \"../utilities/components/ShortHash\";\nimport { Flex, Text, Icon, Link, Image } from \"rimble-ui\";\n\nclass TransactionField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const hashChanged = prevProps.hash !== this.props.hash;\n    const accountChanged = prevProps.account !== this.props.account;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    if (fieldChanged || hashChanged || accountChanged){\n      this.loadField();\n    }\n  }\n\n  async loadField(){\n    const fieldInfo = this.props.fieldInfo;\n    if (this.props.hash && this.props.account){\n      switch (fieldInfo.name){\n        case 'icon':\n        break;\n        case 'hash':\n          \n        break;\n        case 'action':\n          \n        break;\n        case 'date':\n        break;\n        case 'status':\n        break;\n        case 'amount':\n        break;\n        case 'asset':\n        break;\n        case 'custom':\n        break;\n        default:\n        break;\n      }\n    }\n  }\n\n  render(){\n    let icon = null;\n    let color = null;\n    let output = null;\n    const fieldInfo = this.props.fieldInfo;\n    const transaction = this.props.transaction;\n    let bgColor = theme.colors.transactions.actionBg.default;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      style:{\n        maxWidth:'100%',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis'\n      },\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    switch (fieldInfo.name){\n      case 'icon':\n        if (transaction.action){\n          color = theme.colors.transactions.action[transaction.action.toLowerCase()] ? theme.colors.transactions.action[transaction.action.toLowerCase()] : color;\n          bgColor = theme.colors.transactions.actionBg[transaction.action.toLowerCase()] ? theme.colors.transactions.actionBg[transaction.action.toLowerCase()] : bgColor;\n        }\n        switch (transaction.action.toLowerCase()) {\n          case 'deposit':\n          case 'curveout':\n          case 'curvezapout':\n          case 'curvedepositout':\n            icon = \"ArrowDownward\";\n          break;\n          case 'boost':\n            icon = \"TrendingUp\";\n          break;\n          case 'redeem':\n          case 'curvein':\n          case 'curvezapin':\n          case 'curvedepositin':\n            icon = \"ArrowUpward\";\n          break;\n          case 'send':\n            icon = \"Send\";\n          break;\n          case 'receive':\n            icon = \"Redo\";\n          break;\n          case 'migrate':\n            // icon = \"Sync\";\n            icon = \"Repeat\";\n          break;\n          case 'swap':\n            icon = \"SwapHoriz\";\n          break;\n          case 'swapout':\n            icon = \"SwapHoriz\";\n          break;\n          case 'withdraw':\n            icon = \"ArrowUpward\";\n          break;\n          default:\n            icon = \"Refresh\";\n          break;\n        }\n        output = (\n          <Flex\n            p={'5px'}\n            borderRadius={'50%'}\n            {...fieldProps}\n            alignItems={'center'}\n            backgroundColor={bgColor}\n            justifyContent={'center'}\n          >\n            <Icon\n              name={icon}\n              color={color}\n              align={'center'}\n              size={this.props.isMobile ? '1em' : '1.4em'}\n            />\n          </Flex>\n        );\n      break;\n      case 'hash':\n        if (transaction.hash){\n          output = (\n            <Link\n              target={'_blank'}\n              rel={'nofollow noopener noreferrer'}\n              href={`https://etherscan.io/tx/${transaction.hash}`}\n            >\n              <ShortHash\n                fontSize={1}\n                color={'white'}\n                {...fieldProps}\n                resolveAddress={false}\n                hash={transaction.hash}\n              />\n            </Link>\n          );\n        }\n      break;\n      case 'action':\n        let action = transaction.action;\n        switch (transaction.action) {\n          case 'Swap':\n            action = \"Swap In\";\n          break;\n          case 'SwapOut':\n            action = \"Swap Out\";\n          break;\n          default:\n          break;\n        }\n        output = (\n          <Text {...fieldProps}>{action.toUpperCase()}</Text>\n        );\n      break;\n      case 'date':\n        const formattedDate = transaction.momentDate.format('DD MMM, YYYY');\n        output = (\n          <Text {...fieldProps}>{formattedDate}</Text>\n        );\n      break;\n      case 'statusIcon':\n        color = theme.colors.transactions.status[transaction.status.toLowerCase()];\n        switch (transaction.status) {\n          case 'Completed':\n            icon = \"Done\";\n          break;\n          case 'Pending':\n            icon = \"Timelapse\";\n          break;\n          case 'Failed':\n            icon = \"ErrorOutline\";\n          break;\n          default:\n          break;\n        }\n        output = (\n          <Flex\n            p={[0,'1px']}\n            borderRadius={'50%'}\n            {...fieldProps}\n            alignItems={'center'}\n            width={['24px','26px']}\n            height={['24px','26px']}\n            justifyContent={'center'}\n            border={ this.props.isMobile ? `1px solid ${color}` : `2px solid ${color}` }\n          >\n            <Icon\n              name={icon}\n              color={color}\n              align={'center'}\n              size={ this.props.isMobile ? '1em' : '1.2em'}\n            />\n          </Flex>\n        );\n      break;\n      case 'status':\n        output = (\n          <Text {...fieldProps}>{transaction.status}</Text>\n        );\n      break;\n      case 'amount':\n        output = (\n          <SmartNumber {...fieldProps} number={transaction.amount} />\n        );\n      break;\n      case 'tokenIcon':\n        const tokenSymbol = transaction.tokenSymbol.toUpperCase();\n        const tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',tokenSymbol]);\n        const iconSrc = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${tokenSymbol}.svg`;\n        output = (\n          <Image src={iconSrc} {...fieldProps} />\n        );\n      break;\n      case 'tokenName':\n        output = (\n          <Text {...fieldProps}>{transaction.tokenSymbol.toUpperCase()}</Text>\n        );\n      break;\n      case 'custom':\n        let CustomComponent = null;\n        let customValue = this.functionsUtil.getArrayPath(fieldInfo.path,this.props.transaction);\n        switch (fieldInfo.type){\n          case 'number':\n            customValue = this.functionsUtil.BNify(customValue).toString();\n            CustomComponent = SmartNumber;\n            fieldProps.number = customValue;\n            customValue = null;\n          break;\n          case 'image':\n            CustomComponent = Image;\n            fieldProps.src = customValue;\n            customValue = null;\n          break;\n          case 'icon':\n            CustomComponent = Icon;\n            fieldProps.name = customValue;\n            customValue = null;\n          break;\n          default:\n            CustomComponent = Text;\n          break;\n        }\n        output = customValue ? (\n          <CustomComponent {...fieldProps}>{customValue}</CustomComponent>\n        ) : <CustomComponent {...fieldProps} />\n      break;\n      default:\n      break;\n    }\n    return output;\n  }\n}\n\nexport default TransactionField;\n","import { Heading } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass Title extends Component {\n  render() {\n    const props = {\n      fontWeight:4,\n      fontSize:[4,6],\n      color:'copyColor',\n      textAlign:'center',\n      lineHeight:'initial',\n    };\n\n    // Replace props\n    if (this.props && Object.keys(this.props).length){\n      Object.keys(this.props).forEach(p => {\n        props[p] = this.props[p];\n      });\n    }\n\n    const HeadingComponent = this.props.component ? this.props.component : Heading.h1;\n\n    return (\n      <HeadingComponent\n        {...props}\n      >\n        {this.props.children}\n      </HeadingComponent>\n    );\n  }\n}\n\nexport default Title;\n","/*\nTheming: https://github.com/plouc/nivo/issues/308\n*/\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\n\nclass GenericChart extends Component {\n  state = {\n    width:null,\n    height:null\n  };\n\n  componentUnmounted = false;\n\n  componentWillMount() {\n    window.addEventListener('resize', this.handleWindowSizeChange.bind(this));\n  }\n\n  componentWillUnmount() {\n    this.componentUnmounted = true;\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n\n  componentDidMount(){\n    this.handleWindowSizeChange();\n  }\n\n  componentDidUpdate(prevProps){\n    if (prevProps.isMobile !== this.props.isMobile){\n      this.handleWindowSizeChange();\n    }\n  }\n\n  handleWindowSizeChange(){\n    if (this.componentUnmounted){\n      return false;\n    }\n\n    const newState = {...this.state};\n\n    if (this.props.parentId){\n      const chartContainer = document.getElementById(this.props.parentId);\n      if (chartContainer){\n        const chartWidth = parseFloat(chartContainer.offsetWidth)>0 ? chartContainer.offsetWidth : 0;\n\n        if (chartWidth && chartWidth !== newState.width){\n          newState.width = chartWidth;\n        }\n      }\n    }\n\n    if (!newState.width && this.props.width && this.props.width !== newState.width) {\n      newState.width = this.props.width;\n    }\n\n    if (this.props.parentIdHeight){\n      const chartContainerH = document.getElementById(this.props.parentIdHeight);\n      if (chartContainerH){\n        const chartHeight = parseFloat(chartContainerH.offsetWidth)>0 ? chartContainerH.offsetWidth : 0;\n        if (chartHeight && chartHeight !== newState.height){\n          newState.height = chartHeight;\n          if (!newState.width){\n            newState.width = chartHeight;\n          }\n        }\n      }\n    }\n\n    if (!newState.height && this.props.height && this.props.height !== newState.height) {\n      newState.height = this.props.height;\n    }\n\n    newState.height = newState.height || newState.width;\n\n    if (Object.keys(newState).length>0){\n      this.setState(newState);\n    }\n  };\n\n  render() {\n    const ChartType = this.props.type;\n\n    const height = this.state.height && !isNaN(this.state.height) ? parseInt(this.state.height) : 350;\n    const width = this.state.width && !isNaN(this.state.width) ? parseInt(this.state.width) : 0;\n\n    let chartProps = Object.assign({},this.props);\n    chartProps = {\n      ...chartProps,\n      height,\n      width\n    }\n\n    return chartProps.showLoader && (!chartProps.data || !width || !height) ? (\n      <FlexLoader\n        flexProps={{\n          flexDirection:'row',\n          minHeight:height\n        }}\n        loaderProps={ this.props.loaderProps ? this.props.loaderProps : {\n          size:'30px'\n        }}\n        textProps={{\n          ml:2\n        }}\n        text={ this.props.loaderText !== undefined ? this.props.loaderText : 'Loading graph data...'}\n      />\n    ) : this.props.data && (\n      <ChartType\n        {...chartProps}\n      />\n    )\n  }\n}\n\nexport default GenericChart;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\n\nclass ExecuteTransaction extends Component {\n\n  state = {\n    txStatus:null,\n    processing:{\n      txHash:null,\n      loading:false\n    }\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  async execute(){\n\n    const callback = (tx,error) => {\n\n      console.log('callback',tx,error);\n\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: 'Transaction',\n        eventLabel: this.props.methodName,\n        eventAction: this.props.contractName\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      const txSucceeded = tx && tx.status === 'success';\n      if (txSucceeded){\n        if (typeof this.props.callback === 'function'){\n          this.props.callback(tx);\n        }\n      }\n\n      this.setState({\n        processing: {\n          txHash:null,\n          loading:false\n        },\n        txStatus:tx ? tx.status : null\n      });\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        txStatus:'processing',\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    this.setState((prevState) => ({\n      txStatus:'loading',\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n\n    let params = this.props.params;\n    if (typeof this.props.getTransactionParams === 'function'){\n      params = this.props.getTransactionParams();\n    } else if (typeof this.props.getTransactionParamsAsync === 'function'){\n      params = await this.props.getTransactionParamsAsync();\n    }\n\n    if (!params){\n      this.setState((prevState) => ({\n        txStatus:null,\n        processing: {\n          ...prevState.processing,\n          loading:false\n        }\n      }));\n      return false;\n    }\n\n    // console.log('ExecuteTransaction',this.props.contractName,this.props.methodName,params);\n\n    if (this.props.sendRawTransaction){\n      this.functionsUtil.contractMethodSendWrapper(this.props.contractName,this.props.methodName,params,callback,callbackReceipt,null,true,params);\n    } else {\n      this.functionsUtil.contractMethodSendWrapper(this.props.contractName,this.props.methodName,params,callback,callbackReceipt);\n    }\n  }\n\n  render() {\n    const ExecuteComponent = this.props.Component;\n    return (\n      <Flex\n        {...this.props.parentProps}\n      >\n        {\n          this.state.txStatus === 'success' && this.props.children ?\n            this.props.children\n          : this.state.processing && this.state.processing.loading ? (\n            <TxProgressBar\n              web3={this.props.web3}\n              network={this.props.network}\n              {...this.props.progressBarProps}\n              hash={this.state.processing.txHash}\n              cancelTransaction={this.cancelTransaction.bind(this)}\n              endMessage={`Finalizing ${this.props.action} request...`}\n              waitText={`${this.functionsUtil.capitalize(this.props.action)} estimated in`}\n            />\n          ) : (\n            <ExecuteComponent\n              onClick={this.execute.bind(this)}\n              {...this.props.componentProps}\n            >\n              {this.props.componentProps.value}\n            </ExecuteComponent>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default ExecuteTransaction;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"defaultOpacity\":\"DashboardCard_defaultOpacity__1B1rs\",\"hidden\":\"DashboardCard_hidden__8pO5t\",\"interactive\":\"DashboardCard_interactive__2adxr\",\"rainbow\":\"DashboardCard_rainbow__3HCI7\",\"disabled\":\"DashboardCard_disabled__uqHO2\"};","import { Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass FastBalanceSelector extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n\n    let cardProps = {\n      p:2,\n      width:0.23,\n      onMouseDown:this.props.onMouseDown\n    };\n\n    let textProps = {\n      fontSize:2,\n      fontWeight:3,\n      textAlign:'center',\n      color:this.props.isActive ? 'copyColor' : 'cellText'\n    }\n\n    cardProps = this.functionsUtil.replaceArrayProps(cardProps,this.props.cardProps);\n    textProps = this.functionsUtil.replaceArrayProps(textProps,this.props.textProps);\n\n    return (\n      <DashboardCard\n        isInteractive={true}\n        cardProps={cardProps}\n        isActive={this.props.isActive}\n      >\n        <Text \n          {...textProps}\n        >\n          {this.props.percentage}%\n        </Text>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default FastBalanceSelector;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n// import TokenWrapper from '../TokenWrapper/TokenWrapper';\nimport GenericSelector from '../GenericSelector/GenericSelector';\n\nclass Staking extends Component {\n\n  state = {\n    tokenConfig:null,\n    contractInfo:null,\n    selectedToken:null,\n    selectedOption:null,\n    availableTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      const tokenConfig = this.props.toolProps.availableTokens[this.state.selectedToken];\n      const contractInfo = tokenConfig.contract;\n\n      // Init contracts\n      await Promise.all([\n        this.props.initContract(contractInfo.name,contractInfo.address,contractInfo.abi),\n        this.props.initContract(this.state.selectedToken,tokenConfig.address,tokenConfig.abi)\n      ]);\n\n      this.setState({\n        tokenConfig,\n        contractInfo\n      });\n    }\n  }\n\n  async loadData(){\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens).reduce( (output,token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      if (tokenConfig.enabled){\n        output.push({\n          value:token,\n          ...tokenConfig\n        });\n      }\n      return output;\n    },[]);\n\n    const selectedOption = availableTokens[0];\n    const selectedToken = selectedOption.value;\n\n    this.setState({\n      selectedToken,\n      selectedOption,\n      availableTokens\n    });\n  }\n\n  selectToken(selectedToken){\n    this.setState({\n      selectedToken\n    });\n  }\n\n  render() {\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const SelectedComponent = this.state.tokenConfig ? this.state.tokenConfig.component : null;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.availableTokens ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading tokens...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.availableTokens.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active tokens.\n                  </Text>\n                ) : (\n                  <Flex\n                    width={[1,0.46]}\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Box\n                      width={1}\n                    >\n                      <Text\n                        mb={1}\n                      >\n                        Select Token:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        name={'tokens'}\n                        isSearchable={false}\n                        options={this.state.availableTokens}\n                        CustomOptionValue={CustomOptionValue}\n                        onChange={this.selectToken.bind(this)}\n                        defaultValue={this.state.selectedOption}\n                        CustomValueContainer={CustomValueContainer}\n                      />\n                    </Box>\n                    {\n                      SelectedComponent && (\n                        <SelectedComponent\n                          {...this.props}\n                          tokenConfig={this.state.tokenConfig}\n                          contractInfo={this.state.contractInfo}\n                          selectedToken={this.state.selectedToken}\n                        />\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default Staking;","import React, { Component } from 'react';\nimport { Flex, Box, Text, Button } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\n\nclass TokenSwap extends Component {\n\n  state = {\n    tokenConfig:null,\n    selectedFromToken:null,\n    selectedDestToken:null,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async loadKyberWidget(){\n\n    if (!this.state.selectedFromToken || !this.state.selectedDestToken){\n      return false;\n    }\n\n    const provider = 'kyberSwap';\n    const providerInfo = this.functionsUtil.getGlobalConfig(['payments','providers',provider]);\n    if (providerInfo.enabled && providerInfo.remoteResources){\n\n      const globalConfigs = this.functionsUtil.getGlobalConfigs();\n      const remoteResources = providerInfo.remoteResources;\n\n      Object.keys(remoteResources).forEach((url,j) => {\n\n        const resourceType = url.split('.').pop().toLowerCase();\n\n        switch (resourceType){\n          case 'js':\n            const scriptID = `script_${provider}_${j}_${this.state.selectedFromToken}_${this.state.selectedDestToken}`;\n\n            if (!document.getElementById(scriptID)){\n              const script = document.createElement(\"script\");\n              const remoteResourceParams = remoteResources[url];\n              const callback = remoteResourceParams && remoteResourceParams.callback ? remoteResourceParams.callback : null;\n              const precall = remoteResourceParams && remoteResourceParams.precall ? remoteResourceParams.precall : null;\n\n              if (precall && typeof precall === 'function'){\n                const precallProps = {\n                  baseToken:this.state.selectedFromToken,\n                  selectedToken:this.state.selectedDestToken,\n                  buttonId:`kyber-swapper-${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n                };\n                precall(precallProps,globalConfigs,providerInfo);\n              }\n\n              if (callback && typeof callback === 'function'){\n                if (script.readyState) {  // only required for IE <9\n                  script.onreadystatechange = function() {\n                    if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n                      script.onreadystatechange = null;\n                      callback();\n                    }\n                  };\n                } else {  //Others\n                  script.onload = callback;\n                }\n              }\n\n              script.id = scriptID;\n              script.className = `script_${provider}`;\n              script.src = url;\n              script.async = true;\n\n              if (remoteResourceParams && remoteResourceParams.parentElement){\n                remoteResourceParams.parentElement.appendChild(script)\n              } else {\n                document.head.appendChild(script);\n              }\n            }\n          break;\n          case 'css':\n            const stylesheetId = `stylesheet_${provider}_${j}`;\n\n            if (!document.getElementById(stylesheetId)){\n              const style = document.createElement(\"link\");\n\n              style.id = stylesheetId;\n              style.rel = 'stylesheet';\n              style.href = url;\n\n              document.head.appendChild(style);\n            }\n          break;\n          default:\n          break;\n        }\n      });\n    }\n\n    this.setState({\n      providerInfo\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async loadTokens(){\n    const selectedFromToken = Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    this.selectFromToken(selectedFromToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const fromTokenChanged = prevState.selectedFromToken !== this.state.selectedFromToken;\n    const destTokenChanged = prevState.selectedDestToken !== this.state.selectedDestToken;\n    if ((fromTokenChanged ||  destTokenChanged) && this.state.selectedFromToken && this.state.selectedDestToken){\n      this.loadKyberWidget();\n    }\n  }\n\n  selectFromToken = async (selectedFromToken) => {\n    let selectedDestToken = null;\n    const availableDestinationTokens = {};\n    const supportedTokens = this.functionsUtil.getGlobalConfig(['payments','providers','kyberSwap','supportedTokens']);\n\n    supportedTokens.forEach( token => {\n      if (token !== selectedFromToken){\n        if (!selectedDestToken){\n          selectedDestToken = token;\n        }\n        availableDestinationTokens[token] = {\n          token\n        };\n      }\n    });\n\n    const baseToken = this.functionsUtil.getGlobalConfig(['baseToken']);\n    if (baseToken !== selectedFromToken){\n      availableDestinationTokens[baseToken] = {\n        token:baseToken\n      };\n    }\n\n    this.setState({\n      selectedFromToken,\n      availableDestinationTokens\n    },() => {\n      this.selectDestToken(selectedDestToken);\n    });\n  }\n\n  selectDestToken = async (selectedDestToken) => {\n    this.setState({\n      selectedDestToken\n    });\n  }\n\n  swap = () => {\n    const globalConfigs = this.functionsUtil.getGlobalConfigs();\n    const paymentProvider = this.state.providerInfo;\n    const initProps = {\n      baseToken:this.state.selectedFromToken,\n      selectedToken:this.state.selectedDestToken,\n      buttonId:`kyber-swapper-${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n    };\n    const initParams = paymentProvider && paymentProvider.getInitParams ? paymentProvider.getInitParams(initProps,globalConfigs) : null;\n\n    // Render the Payment Provider\n    if (typeof paymentProvider.render === 'function'){\n      paymentProvider.render(initParams,null,initProps);\n    }\n\n    // Send GA event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Tools',\n      eventAction: 'TokenSwap',\n      eventLabel: `${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedFromToken){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to swap:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              showBalance={false}\n              isSearchable={true}\n              onChange={this.selectFromToken}\n              selectedToken={this.state.selectedFromToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            this.state.availableDestinationTokens && this.state.selectedDestToken && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text mb={1}>\n                  Select destination asset:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  showBalance={false}\n                  isSearchable={true}\n                  onChange={this.selectDestToken}\n                  selectedToken={this.state.selectedDestToken}\n                  availableTokens={this.state.availableDestinationTokens}\n                />\n              </Box>\n          }\n          <Flex\n            mt={2}\n            width={1}\n            justifyContent={'center'}\n          >\n            <Button\n              my={2}\n              mx={[0, 2]}\n              size={'medium'}\n              borderRadius={4}\n              mainColor={'blue'}\n              onClick={ e => this.swap(e) }\n              disabled={ !this.state.selectedFromToken || !this.state.selectedDestToken }\n            >\n              SWAP TOKENS\n            </Button>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenSwap;\n","import React, { Component } from 'react';\nimport IconBox from '../IconBox/IconBox';\nimport ExtLink from '../ExtLink/ExtLink';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport { Flex, Box, Text, Icon, Link, Input, Checkbox } from \"rimble-ui\";\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\n\nclass SendTxWithBalance extends Component {\n\n  state = {\n    processing:{\n      txHash:null,\n      loading:false\n    },\n    inputValue:null,\n    txSucceeded:false,\n    permitEnabled:true,\n    showPermitBox:false,\n    approveEnabled:true,\n    buttonDisabled:true,\n    contractApproved:false,\n    fastBalanceSelector:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    await this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const actionChanged = prevProps.action !== this.props.action;\n    const accountChanged = prevProps.account !== this.props.account;\n    const tokenBalanceChanged = prevProps.tokenBalance !== this.props.tokenBalance;\n    const permitEnabledChanged = prevState.permitEnabled !== this.state.permitEnabled;\n    const approveEnabledChanged = prevProps.approveEnabled !== this.props.approveEnabled;\n    const contractChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    if (actionChanged || accountChanged || tokenBalanceChanged || contractChanged || approveEnabledChanged || tokenConfigChanged || permitEnabledChanged){\n      await this.loadData();\n    }\n\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    if (contractApprovedChanged){\n      if (typeof this.props.contractApproved === 'function'){\n        this.props.contractApproved(this.state.contractApproved);\n      }\n    }\n\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector !== prevState.fastBalanceSelector;\n    if (fastBalanceSelectorChanged || actionChanged){\n      this.setInputValue();\n    }\n\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue;\n    if (inputValueChanged){\n      this.checkButtonDisabled();\n    }\n  }\n\n  changeInputValue = (e,call_callback=true) => {\n    const fastBalanceSelector = null;\n    const inputValue = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n    if (this.state.inputValue !== inputValue){\n      this.setState((prevState) => ({\n        inputValue,\n        fastBalanceSelector\n      }),() => {\n        if (call_callback && typeof this.props.changeInputCallback === 'function'){\n          this.props.changeInputCallback(this.state.inputValue);\n        }\n      });\n    }\n  }\n\n  setInputValue = () => {\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n    const inputValue = this.props.tokenBalance && !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() ? this.functionsUtil.BNify(this.props.tokenBalance).times(selectedPercentage) : null;\n\n    this.setState((prevState) => ({\n      inputValue\n    }),() => {\n      if (typeof this.props.changeInputCallback === 'function'){\n        this.props.changeInputCallback(this.state.inputValue);\n      }\n    });\n  }\n\n  getFastBalanceSelector = () => {\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n    return this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n  }\n\n  showPermitBox(){\n    this.setState({\n      showPermitBox:true\n    });\n  }\n\n  togglePermitEnabled(permitEnabled){\n    this.setState({\n      permitEnabled\n    });\n  }\n\n  setFastBalanceSelector = (fastBalanceSelector) => {\n    this.setState({\n      fastBalanceSelector\n    });\n  }\n\n  checkButtonDisabled = (amount=null) => {\n    if (!amount){\n      amount = this.state.inputValue;\n    }\n    amount = this.functionsUtil.BNify(amount);\n    const buttonDisabled = amount.isNaN() || amount.lte(0) || amount.gt(this.props.tokenBalance);\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  approve = async () => {\n    // Check if the migration contract is approved\n    const contractApproved = await this.checkContractApproved();\n\n    if (!contractApproved){\n\n      const callbackApprove = (tx,error) => {\n        // Send Google Analytics event\n        const eventData = {\n          eventAction: 'approve',\n          eventCategory: 'CurveDeposit',\n          eventLabel: tx ? tx.status : null\n        };\n\n        const txSucceeded = tx && tx.status === 'success';\n\n        if (error){\n          eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n        }\n\n        // Send Google Analytics event\n        if (error || eventData.status !== 'error'){\n          this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n        }\n\n        this.setState((prevState) => ({\n          contractApproved: txSucceeded, // True\n          processing: {\n            ...prevState.processing,\n            txHash:null,\n            loading:false\n          }\n        }));\n\n        if (typeof this.props.callbackApprove === 'function' && txSucceeded){\n          this.props.callbackApprove(tx);\n        }\n      };\n\n      const callbackReceiptApprove = (tx) => {\n        const txHash = tx.transactionHash;\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            txHash\n          }\n        }));\n      };\n\n      // console.log('Approve',this.props.tokenConfig.token,this.props.contractInfo.address);\n\n      this.functionsUtil.enableERC20(this.props.tokenConfig.token,this.props.contractInfo.address,callbackApprove,callbackReceiptApprove);\n\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash:null,\n          loading:true\n        },\n        contractApproved:false\n      }));\n    } else {\n      this.setState({\n        contractApproved:true\n      });\n    }\n  }\n\n  executeTx = async () => {\n\n    const inputValue = this.state.inputValue ? this.functionsUtil.BNify(this.state.inputValue) : null;\n    if (!inputValue){\n      return false;\n    }\n\n    if (typeof this.props.checkLimit === 'function'){\n      const limitCheck = await this.props.checkLimit(inputValue);\n      if (!limitCheck){\n        return false;\n      }\n    }\n\n    const _amount = this.functionsUtil.normalizeTokenAmount(inputValue,this.props.tokenConfig.decimals);\n\n    // console.log('executeTx',params);\n\n    const callback = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventLabel: tx.status,\n        eventCategory: `CurveDeposit`,\n        eventValue: inputValue.toFixed(),\n        eventAction: this.props.tokenConfig.token,\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState({\n        txSucceeded,\n        processing: {\n          txHash:null,\n          loading:false\n        }\n      });\n\n      if (txSucceeded){\n        // Reset input\n        this.changeInputValue({\n          target:{\n            value:0\n          }\n        },false);\n        this.setState({\n          showPermitBox:false\n        });\n        // Call upper component callback\n        if (typeof this.props.callback === 'function'){\n          this.props.callback(tx,_amount,params);\n        }\n      }\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    const contractName = this.props.contractInfo.name;\n\n    let params = null;\n\n    // Check contract approved without permit\n    const contractApproved = await this.checkContractApproved(false);\n\n    const permitEnabled = this.props.permitEnabled && this.state.permitEnabled && !contractApproved;\n    if (permitEnabled){\n      const signedParameters = await this.functionsUtil.signPermit(this.props.tokenConfig.token, this.props.account, contractName);\n      // console.log('signedParameters',signedParameters);\n      if (signedParameters){\n        params = this.props.getPermitTransactionParams(_amount,signedParameters);\n      }\n    } else {\n      params = this.props.getTransactionParams(_amount,this.state.fastBalanceSelector);\n    }\n\n    if (params){\n      let {\n        methodName,\n        methodParams\n      } = params;\n\n      const value = params.value || null;\n\n      // console.log('SendTxWithBalance',contractName, methodName, methodParams, value);\n\n      this.props.contractMethodSendWrapper(contractName, methodName, methodParams, value, callback, callbackReceipt);\n\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          loading:true\n        }\n      }));\n    } else {\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          loading:false\n        }\n      }));\n    }\n  }\n\n  cancelTransaction = async () => {\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  async checkContractApproved(checkPermit=true){\n\n    if (checkPermit && this.props.permitEnabled && this.state.permitEnabled){\n      return true;\n    }\n\n    if (this.props.approveEnabled !== undefined && !this.props.approveEnabled){\n      return true;\n    }\n    const contractInfo = await this.props.initContract(this.props.contractInfo.name,this.props.contractInfo.address,this.props.contractInfo.abi);\n\n    if (contractInfo){\n      const contractApproved = await this.functionsUtil.checkTokenApproved(this.props.tokenConfig.token,this.props.contractInfo.address,this.props.account);\n      return contractApproved;\n    }\n    \n    return false;\n  }\n\n  async loadData(){\n    const inputValue = null;\n    const fastBalanceSelector = null;\n    const contractApproved = await this.checkContractApproved();\n    const approveEnabled = this.props.approveEnabled !== false;\n\n    this.setState({\n      inputValue,\n      approveEnabled,\n      contractApproved,\n      fastBalanceSelector\n    });\n  }\n\n  approveCallback = () => {\n    this.loadData();\n  }\n\n  render() {\n\n    const viewOnly = this.props.connectorName === 'custom';\n    const action = this.props.action ? this.props.action : 'Deposit';\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'stretch'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          viewOnly ? (\n            <IconBox\n              cardProps={{\n                mt:3\n              }}\n              icon={'Visibility'}\n              text={'You are using Idle in \"Read-Only\" mode.<br />Logout and connect with your wallet to interact.'}\n            />\n          ) : !this.props.account ? (\n            <ConnectBox\n              {...this.props}\n            />\n          ) : this.props.tokenConfig && !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() && this.functionsUtil.BNify(this.props.tokenBalance).gt(0) ? (\n            <Box\n              width={1}\n            >\n              {\n                this.props.infoBox && (\n                  <IconBox\n                    cardProps={{\n                      mb:3\n                    }}\n                    {...this.props.infoBox}\n                  />\n                )\n              }\n              {\n                this.props.steps && this.props.steps.length>0 && (\n                  <DashboardCard\n                    cardProps={{\n                      p:3,\n                      px:[2,4]\n                    }}\n                  >\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                    > \n                      {\n                        this.props.steps.map( (step,stepIndex) => (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            key={`step_${stepIndex}`}\n                          >\n                            <Icon\n                              size={'1.5em'}\n                              name={ step.completed ? 'CheckBox' : step.icon}\n                              color={ step.completed ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                            />\n                            {\n                              step.link ? (\n                                <ExtLink\n                                  ml={2}\n                                  fontSize={2}\n                                  color={'blue'}\n                                  fontWeight={1}\n                                  href={step.link}\n                                  textAlign={'left'}\n                                  hoverColor={'blue'}\n                                >\n                                  {step.description}\n                                </ExtLink>\n                              ) : (\n                                <Text\n                                  ml={2}\n                                  fontSize={2}\n                                  fontWeight={1}\n                                  color={'cellText'}\n                                  textAlign={'left'}\n                                >\n                                  {step.description}\n                                </Text>\n                              )\n                            }\n                          </Flex>\n                        ) )\n                      }\n                    </Flex>\n                  </DashboardCard>\n                )\n              }\n              <Box\n                mt={2}\n                width={1}\n              >\n                {\n                  this.state.showPermitBox && this.props.permitEnabled ? (\n                    <DashboardCard\n                      cardProps={{\n                        py:3,\n                        px:3,\n                        mt:3,\n                        display:'flex',\n                        alignItems:'center',\n                        flexDirection:'column',\n                        justifyContent:'center',\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          name={'Warning'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={1}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Approve and Deposit in a single transaction is supported for this transaction, disable this feature and try again if you can't deposit.\n                        </Text>\n                      </Flex>\n                      <Checkbox\n                        mt={1}\n                        required={false}\n                        checked={this.state.permitEnabled}\n                        label={`Approve and Deposit in a single transaction`}\n                        onChange={ e => this.togglePermitEnabled(e.target.checked) }\n                      />\n                    </DashboardCard>\n                  ) : !this.state.showPermitBox && this.props.permitEnabled && (\n                    <Flex\n                      p={2}\n                      mt={3}\n                      width={1}\n                      borderRadius={2}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'center'}\n                      backgroundColor={'DashboardCard'}\n                      border={`1px solid ${this.props.theme.colors.primary}`}\n                    >\n                      <Link\n                        textAlign={'center'}\n                        hoverColor={'primary'}\n                        onClick={this.showPermitBox.bind(this)}\n                      >\n                        Having trouble with the Permit signature?\n                      </Link>\n                      <Icon\n                        ml={1}\n                        size={'1em'}\n                        name={'Warning'}\n                        color={'primary'}\n                      />\n                    </Flex>\n                  )\n                }\n              </Box>\n              {\n                this.state.approveEnabled && !this.state.contractApproved ?\n                  this.state.processing.loading ? (\n                    <Flex\n                      mt={3}\n                      flexDirection={'column'}\n                    >\n                      <TxProgressBar\n                        {...this.props}\n                        waitText={`Approve estimated in`}\n                        hash={this.state.processing.txHash}\n                        endMessage={`Finalizing approve request...`}\n                        cancelTransaction={this.cancelTransaction.bind(this)}\n                      />\n                    </Flex>\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'2.3em'}\n                          name={'LockOpen'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                          dangerouslySetInnerHTML={{\n                            __html:this.props.approveDescription\n                          }}\n                        />\n                        <RoundButton\n                          buttonProps={{\n                            mt:3,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.approve.bind(this)}\n                        >\n                          Approve\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  )\n                : this.state.processing.loading ? (\n                  <Flex\n                    mt={3}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      {...this.props}\n                      hash={this.state.processing.txHash}\n                      endMessage={`Finalizing ${action} request...`}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                      waitText={`${this.functionsUtil.capitalize(action)} estimated in`}\n                    />\n                  </Flex>\n                ) : (\n                  <Box\n                    mt={2}\n                    width={1}\n                  >\n                    <Flex\n                      mt={2}\n                      mb={3}\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        mb={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={this.props.balanceSelectorInfo ? 'space-between' : 'flex-end'}\n                      >\n                        {\n                          this.props.balanceSelectorInfo && (\n                            <Flex\n                              width={1}\n                              maxWidth={'50%'}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                            >\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                textAlign={'left'}\n                                style={{\n                                  maxWidth:'100%',\n                                  overflow:'hidden',\n                                  whiteSpace:'nowrap',\n                                  textOverflow:'ellipsis'\n                                }}\n                                color={this.props.balanceSelectorInfo.color ? this.props.balanceSelectorInfo.color : 'copyColor'}\n                              >\n                                {this.props.balanceSelectorInfo.text}\n                              </Text>\n                            </Flex>\n                          )\n                        }\n                        {\n                          !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() && (\n                            <Flex\n                              width={1}\n                              maxWidth={'50%'}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'flex-end'}\n                            >\n                              <Link\n                                fontSize={1}\n                                fontWeight={3}\n                                color={'dark-gray'}\n                                textAlign={'right'}\n                                hoverColor={'copyColor'}\n                                onClick={ (e) => this.setFastBalanceSelector(100) }\n                                style={{\n                                  maxWidth:'100%',\n                                  overflow:'hidden',\n                                  whiteSpace:'nowrap',\n                                  textOverflow:'ellipsis'\n                                }}\n                              >\n                                Balance: {this.functionsUtil.BNify(this.props.tokenBalance).toFixed(this.props.isMobile ? 2 : 4)} {this.props.tokenConfig.token}\n                              </Link>\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                      <Input\n                        min={0}\n                        type={\"number\"}\n                        required={true}\n                        height={'3.4em'}\n                        borderRadius={2}\n                        fontWeight={500}\n                        borderColor={'cardBorder'}\n                        backgroundColor={'cardBg'}\n                        boxShadow={'none !important'}\n                        placeholder={`Insert amount`}\n                        onChange={this.changeInputValue.bind(this)}\n                        border={`1px solid ${this.props.theme.colors.divider}`}\n                        value={this.state.inputValue !== null ? this.functionsUtil.BNify(this.state.inputValue).toFixed() : ''}\n                      />\n                      <Flex\n                        mt={2}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        {\n                          [25,50,75,100].map( percentage => (\n                            <FastBalanceSelector\n                              percentage={percentage}\n                              key={`selector_${percentage}`}\n                              onMouseDown={()=>this.setFastBalanceSelector(percentage)}\n                              isActive={this.state.fastBalanceSelector === parseInt(percentage)}\n                            />\n                          ))\n                        }\n                      </Flex>\n                      <Flex\n                        mt={2}\n                        justifyContent={'center'}\n                      >\n                        <RoundButton\n                          handleClick={this.executeTx.bind(this)}\n                          buttonProps={Object.assign({\n                            mt:2,\n                            width:[1,1/2],\n                            style:{\n                              textTransform:'capitalize'\n                            },\n                            disabled:this.state.buttonDisabled||this.props.buttonDisabled\n                          },this.props.buttonProps)}\n                        >\n                          {this.props.action}\n                        </RoundButton>\n                      </Flex>\n                    </Flex>\n                  </Box>\n                )\n              }\n            </Box>\n          ) : this.props.children\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default SendTxWithBalance;","import ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass LpStaking extends Component {\n\n  state = {\n    stats:[],\n    steps:null,\n    infoBox:null,\n    globalStats:[],\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    balanceProp:null,\n    statsLoaded:false,\n    tokenBalance:null,\n    contractInfo:null,\n    stakedBalance:null,\n    selectedToken:null,\n    rewardMultiplier:1,\n    accountingData:null,\n    selectedAction:null,\n    selectedOption:null,\n    successMessage:null,\n    permitEnabled:false,\n    poolTokenPrice:null,\n    availableTokens:null,\n    approveEnabled:false,\n    rewardTokenPrice:null,\n    contractApproved:false,\n    tokenWrapperProps:null,\n    distributionSpeed:null,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    transactionSucceeded:false,\n    showTokenWrapperEnabled:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.setState({\n      selectedAction:'Stake'\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async componentDidMount(){\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    const contractInfoChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    if (selectedActionChanged || contractApprovedChanged || tokenConfigChanged){\n      this.setState({\n        tokenWrapperProps:null,\n        showTokenWrapperEnabled:false\n      },() => {\n        this.updateData(selectedActionChanged);\n      });\n    }\n\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async changeInputCallback(inputValue=null){\n\n    let infoBox = null;\n\n    if (inputValue && this.functionsUtil.BNify(inputValue).gt(0)){\n      inputValue = this.functionsUtil.BNify(inputValue);\n      switch (this.state.selectedAction){\n        case 'Stake':\n          const userStakedBalance = this.functionsUtil.fixTokenDecimals(this.state.stakedBalance,this.props.tokenConfig.decimals).plus(inputValue);\n          const totalStakedBalance = this.functionsUtil.fixTokenDecimals(this.state.totalStakingShares,this.props.contractInfo.decimals).plus(inputValue);\n          const userTotalStakingShare = userStakedBalance.div(totalStakedBalance);\n          const rewardsPerDay = this.state.distributionSpeed.times(86400).times(userTotalStakingShare);//.times(this.state.distributionSpeedMultiplier);\n\n          const stakedBalanceUSD = userStakedBalance.times(this.state.poolTokenPrice);\n          const rewardsPerYearUSD = rewardsPerDay.times(365).times(this.state.rewardTokenPrice);\n          const apy = stakedBalanceUSD.gt(0) ? rewardsPerYearUSD.div(stakedBalanceUSD).times(100) : this.functionsUtil.BNify(0);\n\n          // console.log(parseFloat(userStakedBalance),parseFloat(this.state.poolTokenPrice),parseFloat(stakedBalanceUSD),parseFloat(rewardsPerDay),parseFloat(this.state.rewardTokenPrice),parseFloat(rewardsPerYearUSD),parseFloat(apy));\n          infoBox = {\n            icon:'FileDownload',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`By staking <strong>${inputValue.toFixed(4)} ${this.props.tokenConfig.token}</strong> you will get <strong>${rewardsPerDay.toFixed(4)} ${this.props.contractInfo.rewardToken} / day</strong> with an average APY of <strong>${apy.toFixed(2)}%</strong><br /><small style=\"color:#ff9900\">assuming you have achieved the maximum reward multiplier</small>`\n          };\n        break;\n        case 'Withdraw':\n          const normalizedInputValue = this.functionsUtil.normalizeTokenAmount(inputValue,this.props.tokenConfig.decimals);\n          let unstakeRewards = await this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unstakeQuery',[normalizedInputValue],{from:this.props.account});\n          unstakeRewards = this.functionsUtil.formatMoney(this.functionsUtil.fixTokenDecimals(unstakeRewards,this.props.tokenConfig.decimals));\n          infoBox = {\n            icon:'FileUpload',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`By unstaking <strong>${inputValue.toFixed(4)} ${this.props.tokenConfig.token}</strong> you will get <strong>${unstakeRewards} ${this.props.contractInfo.rewardToken}</strong>`\n          };\n        break;\n        default:\n        break;\n      }\n    }\n\n    this.setState({\n      infoBox\n    });\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = [];\n    amount = this.functionsUtil.toBN(amount);\n    switch (this.state.selectedAction){\n      case 'Stake':\n        methodName = 'wrapAndStake';\n        methodParams = [amount];\n      break;\n      case 'Withdraw':\n        methodName = 'unstakeAndUnwrap';\n        methodParams = [amount];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  getPermitTransactionParams(amount,signedParameters){\n    let methodName = null;\n    let methodParams = [];\n    const { expiry, r, s, v } = signedParameters;\n    amount = this.functionsUtil.toBN(amount);\n    switch (this.state.selectedAction){\n      case 'Stake':\n        methodName = 'permitWrapAndStakeUnlimited';\n        methodParams = [amount, expiry, v, r, s];\n      break;\n      case 'Withdraw':\n        methodName = 'unstakeAndUnwrap';\n        methodParams = [amount];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async loadStats(){\n    const stats = [];\n\n    const [\n      totalLocked,\n      totalUnlocked,\n      totalStakingShares,\n      unlockScheduleCount,\n      accountingData,\n      collectedRewards\n    ] = await Promise.all([\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalLocked'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalUnlocked'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalStakingShares'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unlockScheduleCount'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'updateAccounting',[],{from:this.props.account}),\n      this.state.stakedBalance.gt(0) ? this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unstakeQuery',[this.functionsUtil.integerValue(this.state.stakedBalance)],{from:this.props.account}) : this.functionsUtil.BNify(0)\n    ]);\n\n    const unlockSchedulesPromises = [];\n    for (let i = 0; i < unlockScheduleCount ; i++){\n      unlockSchedulesPromises.push(this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unlockSchedules',[i]));\n    }\n\n    const unlockSchedules = await Promise.all(unlockSchedulesPromises);\n\n    const totalRewards = this.functionsUtil.fixTokenDecimals(this.functionsUtil.BNify(totalLocked).plus(this.functionsUtil.BNify(totalUnlocked)),this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Total Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(totalRewards))+' '+this.props.contractInfo.rewardToken\n    });\n\n    const totalDeposits = this.functionsUtil.fixTokenDecimals(totalStakingShares,this.props.contractInfo.decimals);\n    stats.push({\n      title:'Total Deposits',\n      value:this.functionsUtil.formatMoney(parseFloat(totalDeposits))+' '+this.props.tokenConfig.token\n    });\n\n    const lockedRewards = this.functionsUtil.fixTokenDecimals(totalLocked,this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Locked Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(lockedRewards))+' '+this.props.contractInfo.rewardToken\n    });\n\n    const unlockedRewards = this.functionsUtil.fixTokenDecimals(totalUnlocked,this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Unlocked Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(unlockedRewards))+' '+this.props.contractInfo.rewardToken\n    });\n\n    const programEndTime = unlockSchedules.length>0 ? unlockSchedules.reduce( (endTime,s) => {\n      endTime = Math.max(s.endAtSec,endTime);\n      return endTime;\n    },parseInt(Date.now()/1000)) : null;\n\n    const programDuration = programEndTime ? `${this.functionsUtil.strToMoment(programEndTime*1000).utc().format('DD MMM, YYYY @ HH:mm')} UTC` : 'None';\n    stats.push({\n      title:'Program End-Date',\n      value:programDuration\n    });\n\n    const distributionSpeed = unlockSchedules.reduce( (distributionSpeed,s) => {\n      if (this.functionsUtil.BNify(s.initialLockedShares).gt(0) && this.functionsUtil.BNify(s.durationSec).gt(0)){\n        const tokensPerSecond = this.functionsUtil.fixTokenDecimals(s.initialLockedShares,this.props.contractInfo.decimals).div(s.durationSec);\n        if (!tokensPerSecond.isNaN()){\n          distributionSpeed = distributionSpeed.plus(tokensPerSecond);\n        }\n      }\n      return distributionSpeed;\n    },this.functionsUtil.BNify(0));\n\n    stats.push({\n      title:'Reward unlock rate',\n      value:this.functionsUtil.formatMoney(distributionSpeed.times(86400))+' '+this.props.contractInfo.rewardToken+' / day'\n    });\n\n    const globalStats = [];\n\n    const stakedBalance = this.functionsUtil.fixTokenDecimals(this.state.stakedBalance,this.props.tokenConfig.decimals);\n    const stakingShare = stakedBalance.div(totalDeposits); // accountingData && accountingData[2] && this.functionsUtil.BNify(accountingData[3]).gt(0) ? this.functionsUtil.BNify(accountingData[2]).div(this.functionsUtil.BNify(accountingData[3])) : this.functionsUtil.BNify(0);\n\n    const rewardMultiplier = accountingData && this.functionsUtil.BNify(accountingData[4]).gt(0) ? this.functionsUtil.BNify(Math.max(1,parseFloat(this.functionsUtil.BNify(collectedRewards).div(this.functionsUtil.BNify(accountingData[4])).times(this.props.contractInfo.maxMultiplier)))) : this.functionsUtil.BNify(1);\n\n    const distributionSpeedMultiplier = this.functionsUtil.BNify(1).div(this.props.contractInfo.maxMultiplier).times(rewardMultiplier);\n    const userDistributionSpeed = distributionSpeed.times(stakingShare).times(distributionSpeedMultiplier);\n    const rewardsPerDay = userDistributionSpeed.times(86400);\n\n    // console.log(parseFloat(this.functionsUtil.BNify(collectedRewards)),parseFloat(this.functionsUtil.BNify(accountingData[4])),this.props.contractInfo.maxMultiplier,parseFloat(this.functionsUtil.BNify(collectedRewards).div(this.functionsUtil.BNify(accountingData[4])).times(this.props.contractInfo.maxMultiplier)),parseFloat(rewardMultiplier));\n\n    // globalStats.push({\n    //   title:'Distribution rate',\n    //   description:'Your daily rewards distribution based on your current multiplier',\n    //   value:this.functionsUtil.formatMoney(rewardsPerDay)+' '+this.props.contractInfo.rewardToken+' / day',\n    // });\n\n    const stakedBalanceUSD = stakedBalance.times(this.state.poolTokenPrice);\n    const rewardsPerYearUSD = rewardsPerDay.times(365).times(this.state.rewardTokenPrice);\n    const apy = stakedBalanceUSD.gt(0) ? rewardsPerYearUSD.div(stakedBalanceUSD).times(100) : this.functionsUtil.BNify(0);\n\n    // console.log(parseFloat(this.state.stakedBalance),parseFloat(this.state.poolTokenPrice),parseFloat(stakedBalanceUSD),parseFloat(rewardsPerDay),parseFloat(this.state.rewardTokenPrice),parseFloat(rewardsPerYearUSD),parseFloat(apy));\n\n    globalStats.push({\n      title:'APY',\n      value:`${apy.toFixed(2)}%`,\n      description:'Annualized rewards based on your current multiplier',\n    });\n\n    globalStats.push({\n      title:'Share',\n      value:`${stakingShare.times(100).toFixed(2)}%`,\n      description:'Your share of the total deposits',\n    });\n\n    globalStats.push({\n      title:'Multiplier',\n      value:`${rewardMultiplier.toFixed(2)}x`,\n      description:`Deposit liquidity tokens for ${this.props.contractInfo.maxBonusDays} days to achieve a ${this.props.contractInfo.maxMultiplier}x reward multiplier`\n    });\n\n    const currentRewards = this.functionsUtil.formatMoney(this.functionsUtil.fixTokenDecimals(collectedRewards,this.props.tokenConfig.decimals));\n    globalStats.push({\n      title:'Rewards',\n      value:currentRewards+' '+this.props.contractInfo.rewardToken,\n      description:'Your share of the total unlocked reward pool. Larger your deposit and for longer, higher your share'\n    });\n\n    // console.log('loadStats',stats,globalStats);\n\n    const statsLoaded = true;\n\n    this.setState({\n      stats,\n      statsLoaded,\n      globalStats,\n      stakingShare,\n      totalRewards,\n      accountingData,\n      rewardMultiplier,\n      distributionSpeed,\n      totalStakingShares,\n      userDistributionSpeed,\n      distributionSpeedMultiplier\n    });\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    // console.log('transactionSucceeded',tx);\n    let infoBox = null;\n    switch (this.state.selectedAction){\n      case 'Stake':\n        const stakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const stakedTokens = stakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(stakedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully staked <strong>${stakedTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n        }\n      break;\n      case 'Withdraw':\n        const unstakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() ) : null;\n        const unstakedTokens = unstakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(unstakedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.props.contractInfo.rewardToken]);\n        const receivedRewardsLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => (log.address.toLowerCase() === rewardTokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) )) ) : null;\n        const receivedRewards = receivedRewardsLog ? this.functionsUtil.fixTokenDecimals(parseInt(receivedRewardsLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully withdrawn <strong>${unstakedTokens.toFixed(4)} ${this.props.selectedToken}</strong> and received <strong>${receivedRewards.toFixed(4)} ${this.props.contractInfo.rewardToken}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    const transactionSucceeded = true;\n\n    this.setState({\n      infoBox,\n      transactionSucceeded\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async updateData(selectedActionChanged=false){\n    const newState = {};\n\n    const DAITokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens','DAI']);\n    const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.contractInfo.rewardToken]);\n\n    const [\n      poolTokenPrice,\n      rewardTokenPrice,\n      tokenBalance,\n      stakedBalance,\n    ] = await Promise.all([\n      this.functionsUtil.getSushiswapPoolTokenPrice(this.props.selectedToken),\n      this.functionsUtil.getSushiswapConversionRate(DAITokenConfig,rewardTokenConfig),\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalStakedFor',[this.props.account]),\n    ]);\n\n    newState.balanceProp = this.functionsUtil.BNify(0);\n    newState.tokenBalance = !this.functionsUtil.BNify(tokenBalance).isNaN() ? this.functionsUtil.BNify(tokenBalance) : this.functionsUtil.BNify(0);\n    newState.stakedBalance = !this.functionsUtil.BNify(stakedBalance).isNaN() ? this.functionsUtil.BNify(stakedBalance) : this.functionsUtil.BNify(0);\n    newState.poolTokenPrice = !this.functionsUtil.BNify(poolTokenPrice).isNaN() ? this.functionsUtil.BNify(poolTokenPrice) : this.functionsUtil.BNify(0);\n    newState.rewardTokenPrice = !this.functionsUtil.BNify(rewardTokenPrice).isNaN() ? this.functionsUtil.BNify(rewardTokenPrice) : this.functionsUtil.BNify(0);\n\n    switch (this.state.selectedAction){\n      case 'Stake':\n        newState.permitEnabled = true;\n        newState.approveEnabled = true;\n        newState.balanceProp = newState.tokenBalance;\n        newState.approveDescription = 'Approve the Staking contract to stake your LP tokens';\n        newState.tokenWrapperProps = {\n          startContract:{\n            name:'ETH',\n            token:'ETH',\n            decimals:18,\n            wrapMethod:'deposit',\n          },\n          destContract:{\n            unwrapMethod:'withdraw',\n            ...this.props.tokenConfig\n          },\n        };\n      break;\n      case 'Withdraw':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = this.functionsUtil.fixTokenDecimals(newState.stakedBalance,this.props.tokenConfig.decimals);\n        newState.tokenWrapperProps = {\n          startContract:{\n            name:'ETH',\n            token:'ETH',\n            decimals:18,\n            wrapMethod:'deposit',\n          },\n          destContract:{\n            unwrapMethod:'withdraw',\n            ...this.props.tokenConfig\n          },\n        };\n      break;\n      default:\n      break;\n    }\n\n    if (newState.balanceProp.lte(0)){\n      newState.showTokenWrapperEnabled = true;\n    }\n\n    if (selectedActionChanged){\n      newState.infoBox = null;\n      newState.transactionSucceeded = false;\n    }\n\n    // console.log('updateData',this.state.selectedAction,newState);\n\n    this.setState(newState,() => {\n      this.loadStats();\n    });\n  }\n\n  render() {\n\n    const StatsCard = props => {\n      const cardProps = {\n        p:3,\n        mb:2,\n        width:'49%',\n        ...props.cardProps\n      };\n      return (\n        <DashboardCard\n          title={props.title}\n          cardProps={cardProps}\n          titleProps={{\n            fontSize:1,\n            fontWeight:3,\n          }}\n          titleParentProps={{\n            mt:0,\n            ml:0\n          }}\n          description={props.description}\n        >\n          <Text\n            mt={1}\n            fontSize={[2,3]}\n            color={'statValue'}\n            {...props.textProps}\n          >\n            {props.value}\n          </Text>\n        </DashboardCard>\n      );\n    };\n\n    const isStake = this.state.selectedAction === 'Stake';\n    const isUnstake = this.state.selectedAction === 'Withdraw';\n    const isStats = this.state.selectedAction === 'Stats';\n    const txAction = this.state.selectedAction;\n\n    return (\n      <Box\n        width={1}\n      >\n      {\n        this.props.tokenConfig && this.props.tokenConfig.poolLink && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Pool link:\n            </Text>\n            <ExtLink\n              mt={1}\n              color={'link'}\n              hoverColor={'link'}\n              href={this.props.tokenConfig.poolLink}\n            >\n              <Text\n                color={'link'}\n                style={{\n                  maxWidth:'100%',\n                  overflow:'hidden',\n                  whiteSpace:'nowrap',\n                  textOverflow:'ellipsis'\n                }}\n              >\n                {this.props.tokenConfig.poolLink}\n              </Text>\n            </ExtLink>\n          </Box>\n        )\n      }\n      {\n        this.state.stakedBalance && this.functionsUtil.BNify(this.state.stakedBalance).gt(0) && this.state.globalStats.length>0 && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Your Stats:\n            </Text>\n            <Flex\n              mt={1}\n              width={1}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.globalStats.map( (statInfo,index) =>\n                  <StatsCard\n                    key={`globalStats_${index}`}\n                    cardProps={{\n                      mb:[2,0],\n                      mr:[0,index<this.state.globalStats.length-1 ? 1 : 0],\n                      width:[1,'100%']\n                    }}\n                    textProps={{\n                      fontSize:[1,2]\n                    }}\n                    {...statInfo}\n                  />\n                )\n              }\n            </Flex>\n          </Box>\n        )\n      }\n      {\n        this.props.selectedToken && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text mb={1}>\n              Select Action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isStake ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Stake'}\n                imageSrc={'images/mint.svg'}\n                isMobile={this.props.isMobile}\n                // subcaption={'stake LP Tokens'}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isStake}\n                handleClick={ e => this.setAction('Stake') }\n              />\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isUnstake ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Withdraw'}\n                imageSrc={'images/upload.svg'}\n                isMobile={this.props.isMobile}\n                // subcaption={'withdraw LP tokens'}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isUnstake}\n                handleClick={ e => this.setAction('Withdraw') }\n              />\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isStats ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Stats'}\n                imageSrc={'images/stats.svg'}\n                // subcaption={'view some stats'}\n                isMobile={this.props.isMobile}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isStats}\n                handleClick={ e => this.setAction('Stats') }\n              />\n            </Flex>\n            {\n              (isStake || isUnstake) ?\n                (this.props.tokenConfig && this.state.balanceProp && this.state.statsLoaded && this.props.contractInfo ? (\n                  <Box\n                    mt={1}\n                    width={1}\n                    mb={[4,3]}\n                  >\n                    <SendTxWithBalance\n                      error={null}\n                      {...this.props}\n                      action={txAction}\n                      steps={this.state.steps}\n                      infoBox={this.state.infoBox}\n                      tokenConfig={this.props.tokenConfig}\n                      tokenBalance={this.state.balanceProp}\n                      contractInfo={this.props.contractInfo}\n                      permitEnabled={this.state.permitEnabled}\n                      approveEnabled={this.state.approveEnabled}\n                      callback={this.transactionSucceeded.bind(this)}\n                      approveDescription={this.state.approveDescription}\n                      contractApproved={this.contractApproved.bind(this)}\n                      balanceSelectorInfo={this.state.balanceSelectorInfo}\n                      changeInputCallback={this.changeInputCallback.bind(this)}\n                      getTransactionParams={this.getTransactionParams.bind(this)}\n                      getPermitTransactionParams={this.getPermitTransactionParams.bind(this)}\n                    >\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            name={'MoneyOff'}\n                            color={'cellText'}\n                            size={this.props.isMobile ? '1.8em' : '2.3em'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            {\n                              isStake ? (\n                                `You don't have any ${this.props.selectedToken} in your wallet.`\n                              ) : isUnstake && (\n                                `You don't have any staked ${this.props.selectedToken} to withdraw.`\n                              )\n                            }\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    </SendTxWithBalance>\n                  </Box>\n                ) : (\n                  <Flex\n                    mt={3}\n                    mb={3}\n                    width={1}\n                  >\n                    <FlexLoader\n                      flexProps={{\n                        flexDirection:'row'\n                      }}\n                      loaderProps={{\n                        size:'30px'\n                      }}\n                      textProps={{\n                        ml:2\n                      }}\n                      text={'Loading info...'}\n                    />\n                  </Flex>\n                )\n              ) : isStats && (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  width={1}\n                  style={{\n                    flexWrap:'wrap'\n                  }}\n                  justifyContent={'space-between'}\n                >\n                  {\n                    (!this.state.stats || !this.state.stats.length) ? (\n                      <Flex\n                        mt={3}\n                        mb={3}\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading stats...'}\n                        />\n                      </Flex>\n                    ) : this.state.stats.map( (statInfo,index) =>\n                      <StatsCard\n                        key={`stats_${index}`}\n                        cardProps={{\n                          width:[1,'49%']\n                        }}\n                        {...statInfo}\n                      />\n                    )\n                  }\n                </Flex>\n              )\n            }\n          </Box>\n        )\n      }\n      </Box>\n    );\n  }\n}\n\nexport default LpStaking;","import ExtLink from '../ExtLink/ExtLink';\nimport IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport { Flex, Box, Text, Icon, Input, Button } from \"rimble-ui\";\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\n\nclass IdleStaking extends Component {\n\n  state = {\n    stats:[],\n    steps:null,\n    maxApr:null,\n    infoBox:null,\n    globalStats:[],\n    lockPeriods:[\n      {\n        value:14,\n        type:'day',\n        label:'2 weeks'\n      },\n      {\n        value:1,\n        type:'month',\n        label:'1 month'\n      },\n      {\n        value:1,\n        type:'year',\n        label:'1 year'\n      },\n      {\n        value:4,\n        type:'year',\n        label:'4 years'\n      },\n    ],\n    lockedEnd:null,\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    balanceProp:null,\n    lockExpired:false,\n    statsLoaded:false,\n    tokenBalance:null,\n    contractInfo:null,\n    stakedBalance:null,\n    selectedToken:null,\n    rewardMultiplier:1,\n    claimedRewards:null,\n    accountingData:null,\n    increaseAction:null,\n    selectedAction:null,\n    selectedOption:null,\n    successMessage:null,\n    permitEnabled:false,\n    poolTokenPrice:null,\n    lockPeriodInput:null,\n    buttonDisabled:false,\n    internalInfoBox:null,\n    availableTokens:null,\n    approveEnabled:false,\n    rewardTokenPrice:null,\n    contractApproved:false,\n    tokenWrapperProps:null,\n    distributionSpeed:null,\n    distributedRewards:null,\n    selectedLockPeriod:null,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    lockPeriodTimestamp:null,\n    transactionSucceeded:false,\n    showTokenWrapperEnabled:false,\n    lockEndDateIsMaxEndDate:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.setState({\n      selectedAction:'Lock'\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async componentDidMount(){\n    const feeDistributorConfig = this.props.tokenConfig.feeDistributor;\n    await this.props.initContract(feeDistributorConfig.name,feeDistributorConfig.address,feeDistributorConfig.abi);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    const contractInfoChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    if (selectedActionChanged || accountChanged || contractApprovedChanged || tokenConfigChanged){\n      const increaseAction = selectedActionChanged ? null : this.state.increaseAction;\n      this.setState({\n        increaseAction,\n        tokenWrapperProps:null,\n        showTokenWrapperEnabled:false,\n      },() => {\n        this.updateData(selectedActionChanged);\n      });\n    }\n\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n\n    const lockPeriodChanged = prevState.lockPeriodTimestamp !== this.state.lockPeriodTimestamp;\n    const increaseActionChanged = prevState.increaseAction !== this.state.increaseAction;\n    if (lockPeriodChanged || increaseActionChanged || selectedActionChanged){\n      if (increaseActionChanged){\n        this.setState({\n          internalInfoBox:null\n        });\n      } else if (lockPeriodChanged){\n        this.calculateStkIDLEAmount();\n      }\n      this.checkButtonDisabled();\n    }\n  }\n\n  checkButtonDisabled(){\n    let buttonDisabled = false;\n    const minLockPeriod = this.state.lockPeriods[0];\n    const maxLockPeriod = Object.assign([],this.state.lockPeriods).pop();\n    const minDate = this.state.lockedEnd ? this.functionsUtil.strToMoment(this.state.lockedEnd*1000).add(minLockPeriod.value,minLockPeriod.type) : this.functionsUtil.strToMoment().add(minLockPeriod.value,minLockPeriod.type);\n    const mDate = this.functionsUtil.strToMoment(this.state.lockPeriodTimestamp*1000);\n    const maxDate = this.functionsUtil.strToMoment().add(maxLockPeriod.value,maxLockPeriod.type);\n    switch (this.state.selectedAction){\n      default:\n      case 'Lock':\n        buttonDisabled = mDate.isAfter(maxDate) || mDate.isSameOrBefore(minDate);\n      break;\n      case 'Increase Lock':\n        if (this.state.increaseAction === 'time'){\n          buttonDisabled = mDate.isAfter(maxDate) || mDate.isSameOrBefore(minDate);\n        }\n      break;\n    }\n\n    // console.log('checkButtonDisabled',this.state.selectedAction,this.state.increaseAction,buttonDisabled);\n\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  async changeInputCallback(inputValue=null){\n    inputValue = this.functionsUtil.BNify(inputValue);\n    this.setState({\n      inputValue\n    },() => {\n      this.calculateStkIDLEAmount();\n    });\n  }\n\n  calculateStkIDLEAmount(){\n    let internalInfoBox = null;\n    if (this.state.inputValue && this.functionsUtil.BNify(this.state.inputValue).gt(0) && this.state.lockPeriodTimestamp !== null){\n      switch (this.state.selectedAction){\n        case 'Lock':\n          const currTime = parseInt(Date.now()/1000);\n          const maxDate = this.functionsUtil.strToMoment().add(4,'year');\n          let endDate = this.functionsUtil.strToMoment(this.state.lockPeriodTimestamp*1000);\n          if (endDate.isAfter(maxDate)){\n            endDate = maxDate;\n          }\n          const endDateTime = parseInt(endDate._d.getTime()/1000)-currTime;\n          const maxDateTime = parseInt(maxDate._d.getTime()/1000)-currTime;\n          const stkIDLEAmount = this.state.inputValue.times(endDateTime).div(maxDateTime);\n\n          const percentage = stkIDLEAmount.div(this.state.inputValue).times(100);\n\n          // console.log(this.state.inputValue.toString(),endDate.format('YYYY-MM-DD HH:mm:ss'),maxDate.format('YYYY-MM-DD HH:mm:ss'),endDateTime,maxDateTime,stkIDLEAmount.toFixed());\n\n          let text = `By staking <strong>${this.state.inputValue.toFixed(4)} ${this.props.selectedToken}</strong> until <strong>${endDate.utc().format('YYYY-MM-DD HH:mm')} UTC</strong> you will get back <strong>${stkIDLEAmount.toFixed(4)} ${this.props.tokenConfig.contract.name}</strong> (${Math.ceil(percentage)}% of staking power).`;\n          if (Math.ceil(percentage)<100){\n            text += `<br />Stake your tokens for <strong>4 years</strong> to reach the maximum staking power.`;\n          }\n          text += `<br /><span style=\"color:${this.props.theme.colors.alert};font-size:14px\">Keep in mind that once you lock ${this.props.selectedToken} you cannot reverse the operation until the lock end date has been reached.</span>`;\n          internalInfoBox = {\n            text,\n            icon:'LockOutline',\n            iconProps:{\n              color:'cellText'\n            },\n          };\n        break;\n        default:\n        break;\n      }\n    }\n    this.setState({\n      internalInfoBox\n    });\n  }\n\n  getIncreaseTimeParams(){\n    const _unlock_time = parseInt(this.state.lockPeriodTimestamp);\n    // console.log('getIncreaseTimeParams',_unlock_time);\n    return [_unlock_time];\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = [];\n    const _value = this.functionsUtil.toBN(amount);\n    const _unlock_time = parseInt(this.state.lockPeriodTimestamp);\n    switch (this.state.selectedAction){\n      case 'Lock':\n        methodName = 'create_lock';\n        methodParams = [_value,_unlock_time];\n        // console.log('getTransactionParams',methodName,methodParams);\n      break;\n      case 'Increase Lock':\n        methodName = 'increase_amount';\n        methodParams = [_value];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async loadStats(){\n\n    const stats = [];\n    const globalStats = [];\n    const statsLoaded = true;\n\n    let [\n      etherscanRewardsTxs,\n      totalSupply,\n      tokenTotalSupply,\n      claimableRewards,\n      lockedInfo,\n      tokenUserBalance,\n      claimable,\n      claimEvents,\n      // checkpointEvents,\n      depositEvents\n    ] = await Promise.all([\n      this.functionsUtil.getIdleStakingRewardsTxs(),\n      this.functionsUtil.genericContractCallCached(this.props.contractInfo.name,'supply'),\n      this.functionsUtil.genericContractCallCached(this.props.contractInfo.name, 'totalSupply'),\n      this.functionsUtil.getTokenBalance(this.props.contractInfo.rewardToken,this.props.tokenConfig.feeDistributor.address),\n      this.props.account ? this.functionsUtil.genericContractCall(this.props.contractInfo.name,'locked',[this.props.account]) : null,\n      this.props.account ? this.functionsUtil.getContractBalance(this.props.contractInfo.name,this.props.account) : this.functionsUtil.BNify(0),\n      this.props.account ? this.functionsUtil.genericContractCall(this.props.tokenConfig.feeDistributor.name,'claim',[this.props.account]) : this.functionsUtil.BNify(0),\n      this.functionsUtil.getContractEvents(this.props.tokenConfig.feeDistributor.name,'Claimed',{fromBlock: this.props.tokenConfig.feeDistributor.fromBlock, toBlock:'latest'}),\n      // this.functionsUtil.getContractEvents(this.props.tokenConfig.feeDistributor.name,'CheckpointToken',{fromBlock: this.props.tokenConfig.feeDistributor.fromBlock, toBlock:'latest'}),\n      this.props.account ? this.functionsUtil.getContractEvents(this.props.contractInfo.name,'Deposit',{fromBlock: this.props.contractInfo.fromBlock, toBlock:'latest',filter:{provider:this.props.account}}) : []\n    ]);\n\n    // console.log('etherscanRewardsTxs',etherscanRewardsTxs);\n\n    const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.props.contractInfo.rewardToken]);\n\n    let distributedRewards = [];\n    let totalRewards = this.functionsUtil.BNify(0);\n    let totalRewardsDays = this.functionsUtil.BNify(0);\n\n    if (etherscanRewardsTxs && etherscanRewardsTxs.length){\n      totalRewardsDays = Math.abs(etherscanRewardsTxs[0].timeStamp-etherscanRewardsTxs[etherscanRewardsTxs.length-1].timeStamp)/86400;\n      distributedRewards = etherscanRewardsTxs.map( tx => {\n        const amount = this.functionsUtil.fixTokenDecimals(tx.value,rewardTokenConfig.decimals);\n        totalRewards = totalRewards.plus(amount);\n        return {\n          amount,\n          hash:tx.hash,\n          timeStamp:tx.timeStamp,\n          tokenName:tx.tokenSymbol,\n          date:this.functionsUtil.strToMoment(parseInt(tx.timeStamp)*1000).utc().format('YYYY-MM-DD HH:mm')+' UTC'\n        };\n      });\n    }\n\n    const claimedRewards = [];\n    let totalClaimedUser = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(claimEvents, async (e) => {\n      if (this.props.account && e.returnValues && e.returnValues.recipient && e.returnValues.recipient.toLowerCase() === this.props.account.toLowerCase()){\n        const blockInfo = await this.functionsUtil.getBlockInfo(e.blockNumber);\n        if (blockInfo){\n          const claimedAmount = this.functionsUtil.fixTokenDecimals(e.returnValues.amount,rewardTokenConfig.decimals);\n          totalClaimedUser = totalClaimedUser.plus(claimedAmount);\n          claimedRewards.push({\n            amount:claimedAmount,\n            hash:e.transactionHash,\n            tokenName:this.props.contractInfo.rewardToken,\n            date:this.functionsUtil.strToMoment(parseInt(blockInfo.timestamp)*1000).utc().format('YYYY-MM-DD HH:mm')+' UTC'\n          });\n        }\n      }\n    });\n\n    tokenUserBalance = this.functionsUtil.fixTokenDecimals(tokenUserBalance,this.props.contractInfo.decimals);\n\n    const totalDeposited = totalSupply ? this.functionsUtil.fixTokenDecimals(totalSupply,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const totalLockedFunds = totalSupply ? this.functionsUtil.formatMoney(totalDeposited,4)+' '+this.props.selectedToken : (this.state.stats.length ? this.state.stats[0] : this.functionsUtil.formatMoney(totalDeposited,4)+' '+this.props.selectedToken);\n    stats.push({\n      title:'Total Locked Funds',\n      value:totalLockedFunds\n    });\n\n    tokenTotalSupply = tokenTotalSupply ? this.functionsUtil.fixTokenDecimals(tokenTotalSupply,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const stkTokenTotalSupply = tokenTotalSupply ? this.functionsUtil.formatMoney(tokenTotalSupply,4)+' '+this.props.contractInfo.name : (this.state.stats.length ? this.state.stats[1] : this.functionsUtil.formatMoney(tokenTotalSupply,4)+' '+this.props.contractInfo.name);\n    stats.push({\n      title:`${this.props.contractInfo.name} Total Supply`,\n      value:stkTokenTotalSupply\n    });\n\n    const claimableRewardsFormatted = claimableRewards ? this.functionsUtil.formatMoney(claimableRewards,4)+' '+this.props.contractInfo.rewardToken : (this.state.stats.length ? this.state.stats[2] : this.functionsUtil.formatMoney(claimableRewards,4)+' '+this.props.contractInfo.rewardToken);\n    stats.push({\n      title:'Claimable Rewards',\n      value:claimableRewardsFormatted\n    });\n\n    // const totalClaimed = claimEvents.reduce( (totalClaimed,event) => {\n    //   const claimedAmount = this.functionsUtil.fixTokenDecimals(event.returnValues.amount,rewardTokenConfig.decimals);\n    //   totalClaimed = totalClaimed.plus(claimedAmount);\n    //   return totalClaimed;\n    // },this.functionsUtil.BNify(0));\n\n    const totalRewardsFormatted = this.functionsUtil.formatMoney(totalRewards,4)+' '+this.props.contractInfo.rewardToken;\n    stats.push({\n      title:'Total Rewards',\n      value:totalRewardsFormatted\n    });\n\n    const maxApr = totalRewards.div(tokenTotalSupply).times(365.2425).div(totalRewardsDays);\n    stats.push({\n      title:'APR (1 year staking)',\n      value:maxApr.div(4).times(100).toFixed(2)+'%'\n    });\n    stats.push({\n      title:'APR (4 years staking)',\n      value:maxApr.times(100).toFixed(2)+'%'\n    });\n\n    const stakedBalance = lockedInfo && lockedInfo.amount ? this.functionsUtil.fixTokenDecimals(lockedInfo.amount,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const userDeposited = this.functionsUtil.formatMoney(stakedBalance,4);\n    globalStats.push({\n      title:'Total Deposited',\n      description:'Your total deposited amount',\n      value:userDeposited+' '+this.props.contractInfo.rewardToken,\n    });\n\n    const stakingShare = tokenUserBalance.div(tokenTotalSupply);\n    globalStats.push({\n      title:'Share',\n      value:`${stakingShare.times(100).toFixed(2)}%`,\n      description:'Your share of the total deposits',\n    });\n\n    globalStats.push({\n      title:`${this.props.contractInfo.name} balance`,\n      value:`${this.functionsUtil.formatMoney(tokenUserBalance,4)} ${this.props.contractInfo.name}`,\n    });\n    \n    claimable = claimable ? this.functionsUtil.fixTokenDecimals(claimable,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const currentRewards = this.functionsUtil.formatMoney(claimable,4);\n    globalStats.push({\n      title:'Claimable Rewards',\n      value:`${currentRewards} ${this.props.contractInfo.rewardToken}`,\n      // description:'Your claimable rewards'\n    });\n\n    const totalCollectedRewards = claimable.plus(totalClaimedUser);\n\n    let stakeStartTime = depositEvents.reduce( (stakedTime,event) => {\n      const depositTimestamp = this.functionsUtil.BNify(event.returnValues.ts);\n      const depositValue = this.functionsUtil.fixTokenDecimals(event.returnValues.value,this.props.tokenConfig.decimals);\n      if (depositValue.gt(0)){\n        stakedTime = stakedTime.plus(depositValue.times(depositTimestamp));\n        // console.log(depositTimestamp.toString(),depositValue.toFixed(),stakedTime.toString());\n      }\n      return stakedTime;\n    },this.functionsUtil.BNify(0));\n\n    // console.log('stakeStartTime',stakeStartTime,stakedBalance.toFixed());\n\n    stakeStartTime = stakedBalance.gt(0) ? Math.ceil(stakeStartTime.div(stakedBalance)) : 0;\n    // const latestCheckpoint = checkpointEvents.length ? checkpointEvents[checkpointEvents.length-1] : null;\n    // const latestDistribution = etherscanRewardsTxs[0];\n    // const latestDistributionTime = latestDistribution ? this.functionsUtil.BNify(latestDistribution.timeStamp) : this.functionsUtil.BNify(parseInt(Date.now()/1000));\n    // const latestDistributionTime = latestCheckpoint ? this.functionsUtil.BNify(latestCheckpoint.returnValues.time) : this.functionsUtil.BNify(parseInt(Date.now()/1000));\n    const currTime = parseInt(Date.now()/1000);\n    const stakePeriod = this.functionsUtil.BNify(currTime).minus(stakeStartTime);\n    const currentProfit = stakedBalance.gt(0) ? totalCollectedRewards.div(stakedBalance) : this.functionsUtil.BNify(0);\n    const weeksPerYear = 52.14;\n    const secondsPerWeek = 604800;\n    const stakePeriodWeeks = Math.max(1,Math.floor(stakePeriod.div(secondsPerWeek)));\n    const apr = stakePeriod.gt(0) ? currentProfit.times(weeksPerYear).div(stakePeriodWeeks).times(100) : this.functionsUtil.BNify(0);\n    \n    // console.log('APR',currTime,stakeStartTime,apr.toFixed(),currentProfit.toFixed(),stakePeriod.toFixed(),stakePeriodWeeks,totalCollectedRewards.toFixed(),stakedBalance.toFixed());\n\n    globalStats.push({\n      title:'APR',\n      value:`${apr.toFixed(2)}%`,\n      description:'APR is based on your Claimable Rewards and Total Deposited'\n    });\n\n    const lockEndDate = this.state.lockedEnd ? this.functionsUtil.strToMoment(this.state.lockedEnd*1000).utc().format('YYYY/MM/DD HH:mm') : '';\n    globalStats.push({\n      value:lockEndDate,\n      title:'Lock End Date (UTC)',\n      description:'Ending date of your Lock'\n    });\n\n    this.setState({\n      stats,\n      maxApr,\n      claimable,\n      globalStats,\n      statsLoaded,\n      stakedBalance,\n      claimedRewards,\n      distributedRewards\n    });\n  }\n\n  async contractApprovedCallback(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  setIncreaseAction(increaseAction){\n    this.setState({\n      increaseAction\n    });\n  }\n\n  changelockPeriodInput(e){\n    const selectedLockPeriod = null;\n    const lockPeriodInput = e.target.value;\n    const currDate = this.functionsUtil.strToMoment();\n    const mDate = this.functionsUtil.strToMoment(lockPeriodInput+' '+currDate.format('HH:mm:ss'),'YYYY-MM-DD HH:mm:ss').add(1,'second');\n    if (mDate.isValid()){\n      const lockPeriodTimestamp = parseInt(mDate._d.getTime()/1000);\n      // console.log('changelockPeriodInput',lockPeriodTimestamp);\n      this.setState({\n        lockPeriodInput,\n        selectedLockPeriod,\n        lockPeriodTimestamp\n      });\n    }\n  }\n\n  selectLockPeriod(selectedLockPeriod){\n    const minDate = this.state.lockedEnd ? this.functionsUtil.strToMoment(this.state.lockedEnd*1000) : this.functionsUtil.strToMoment();\n    const maxDate = this.functionsUtil.strToMoment().add(4,'year');\n    let mDate = minDate.add(selectedLockPeriod.value,selectedLockPeriod.type).add(1,'second');\n\n    // Check if after 4 years from now\n    if (mDate.isAfter(maxDate)){\n      mDate = maxDate;\n    }\n\n    const lockPeriodInput = mDate.format('YYYY-MM-DD');\n    const lockPeriodTimestamp = parseInt(mDate._d.getTime()/1000);\n\n    // console.log('selectLockPeriod',lockPeriodInput,lockPeriodTimestamp);\n\n    this.setState({\n      lockPeriodInput,\n      selectedLockPeriod,\n      lockPeriodTimestamp\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    // console.log('transactionSucceeded',tx);\n    let infoBox = null;\n    let internalInfoBox = null;\n    switch (this.state.selectedAction){\n      case 'Lock':\n        const lockedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const lockedTokens = lockedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(lockedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        internalInfoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully locked <strong>${lockedTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n        }\n      break;\n      case 'Increase Lock':\n        switch (this.state.increaseAction){\n          case 'time':\n            internalInfoBox = {\n              icon:'DoneAll',\n              iconProps:{\n                color:this.props.theme.colors.transactions.status.completed\n              },\n              text:`You have successfully increased the lock until <strong>${this.functionsUtil.strToMoment(this.state.lockPeriodTimestamp*1000).utc().format('YYYY/MM/DD HH:mm')} UTC</strong>`\n            }\n          break;\n          case 'amount':\n            const increaseAmountTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n            const increaseTokens = increaseAmountTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(increaseAmountTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n            internalInfoBox = {\n              icon:'DoneAll',\n              iconProps:{\n                color:this.props.theme.colors.transactions.status.completed\n              },\n              text:`You have successfully increased the lock by <strong>${increaseTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n            }\n          break;\n          default:\n          break;\n        }\n      break;\n      case 'Withdraw':\n        const unstakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() ) : null;\n        const unstakedTokens = unstakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(unstakedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        internalInfoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully withdrawn <strong>${unstakedTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n        }\n      break;\n      case 'Claim':\n        const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.props.contractInfo.rewardToken]);\n        const receivedRewardsLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => (log.address.toLowerCase() === rewardTokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) )) ) : null;\n        const receivedRewards = receivedRewardsLog ? this.functionsUtil.fixTokenDecimals(parseInt(receivedRewardsLog.data,16),rewardTokenConfig.decimals) : this.functionsUtil.BNify(0);\n        internalInfoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully claimed <strong>${receivedRewards.toFixed(4)} ${this.props.contractInfo.rewardToken}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    const transactionSucceeded = true;\n\n    this.setState({\n      infoBox,\n      internalInfoBox,\n      transactionSucceeded\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async updateData(selectedActionChanged=false){\n    const newState = {};\n\n    // const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.contractInfo.rewardToken]);\n\n    const [\n      tokenBalance,\n      lockedEnd,\n    ] = await Promise.all([\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'locked__end',[this.props.account])\n    ]);\n\n    newState.lockedEnd = lockedEnd && parseInt(lockedEnd)>0 ? parseInt(lockedEnd) : null;\n    newState.lockExpired = newState.lockedEnd && newState.lockedEnd<=parseInt(Date.now()/1000);\n    newState.tokenBalance = !this.functionsUtil.BNify(tokenBalance).isNaN() ? this.functionsUtil.BNify(tokenBalance) : this.functionsUtil.BNify(0);\n\n    let selectedAction = this.state.selectedAction;\n\n    if (selectedAction==='Withdraw' && !newState.lockExpired){\n      selectedAction = 'Lock';\n      newState.selectedAction = selectedAction;\n    }\n\n    // Select Increase if already created a lock\n    if (newState.lockedEnd && selectedAction==='Lock'){\n      selectedAction = 'Increase Lock';\n      newState.increaseAction = 'time';\n      newState.selectedAction = selectedAction;\n    } else if (selectedAction==='Increase Lock' && !newState.increaseAction && !this.state.increaseAction){\n      newState.increaseAction = 'time';\n    }\n\n    // Select Withdraw if the lock has expired\n    if (selectedAction==='Increase Lock' && newState.lockExpired){\n      selectedAction = 'Withdraw';\n      newState.selectedAction = selectedAction;\n    }\n\n    switch (selectedAction){\n      case 'Lock':\n        newState.permitEnabled = false;\n        newState.approveEnabled = true;\n        newState.balanceProp = newState.tokenBalance;\n        newState.approveDescription = `Approve the Staking contract to stake your ${this.props.selectedToken} tokens`;\n      break;\n      case 'Increase Lock':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = newState.tokenBalance;\n        newState.lockPeriodInput = this.functionsUtil.strToMoment(newState.lockedEnd*1000).format('YYYY-MM-DD');\n      break;\n      case 'Withdraw':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = this.functionsUtil.fixTokenDecimals(newState.stakedBalance,this.props.tokenConfig.decimals);\n      break;\n      default:\n      break;\n    }\n\n    if (selectedActionChanged){\n      newState.infoBox = null;\n      newState.internalInfoBox = null;\n      newState.transactionSucceeded = false;\n    }\n\n    const maxDate = this.functionsUtil.strToMoment().add(4,'year').format('YYYY-MM-DD');\n    newState.lockEndDateIsMaxEndDate = newState.lockedEnd ? this.functionsUtil.strToMoment(newState.lockedEnd*1000).format('YYYY-MM-DD')===maxDate : false;\n\n    // console.log('lockEndDateIsMaxEndDate',newState.lockEndDateIsMaxEndDate,maxDate,this.functionsUtil.strToMoment(newState.lockedEnd*1000).format('YYYY-MM-DD'));\n\n    this.setState(newState,() => {\n      this.loadStats();\n    });\n  }\n\n  render() {\n\n    const StatsCard = props => {\n      const cardProps = {\n        p:3,\n        mb:2,\n        width:'49%',\n        ...props.cardProps\n      };\n      return (\n        <DashboardCard\n          title={props.title}\n          cardProps={cardProps}\n          titleProps={{\n            fontSize:1,\n            fontWeight:3,\n          }}\n          titleParentProps={{\n            mt:0,\n            ml:0\n          }}\n          description={props.description}\n        >\n          <Text\n            mt={1}\n            fontSize={[2,3]}\n            color={'statValue'}\n            {...props.textProps}\n          >\n            {props.value}\n          </Text>\n        </DashboardCard>\n      );\n    };\n\n    const isLock = this.state.selectedAction === 'Lock';\n    const isStats = this.state.selectedAction === 'Stats';\n    const isClaim = this.state.selectedAction === 'Claim';\n    const isUnstake = this.state.selectedAction === 'Withdraw';\n    const isIncrease = this.state.selectedAction === 'Increase Lock';\n    const txAction = this.state.selectedAction;\n    const canIncrease = !this.state.lockExpired;\n\n    return (\n      <Box\n        width={1}\n      >\n      {\n        this.props.tokenConfig && this.props.tokenConfig.poolLink && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Token link:\n            </Text>\n            <ExtLink\n              mt={1}\n              color={'link'}\n              hoverColor={'link'}\n              href={this.props.tokenConfig.poolLink}\n            >\n              <Text\n                color={'link'}\n                style={{\n                  maxWidth:'100%',\n                  overflow:'hidden',\n                  whiteSpace:'nowrap',\n                  textOverflow:'ellipsis'\n                }}\n              >\n                {this.props.tokenConfig.poolLink}\n              </Text>\n            </ExtLink>\n          </Box>\n        )\n      }\n      {\n        this.state.stakedBalance && this.functionsUtil.BNify(this.state.stakedBalance).gt(0) && this.state.globalStats.length>0 && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Your Stats:\n            </Text>\n            <Flex\n              mt={1}\n              mb={1}\n              width={1}\n              style={{\n                flexBasis:'0',\n                flex:'1 1 0px',\n                flexWrap:'wrap'\n              }}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.globalStats.map( (statInfo,index) =>\n                  <StatsCard\n                    key={`globalStats_${index}`}\n                    cardProps={{\n                      mb:2,\n                      width:['49%','33%'],\n                      // mr:[0,index<this.state.globalStats.length-1 ? 1 : 0]\n                    }}\n                    textProps={{\n                      fontSize:[1,2]\n                    }}\n                    {...statInfo}\n                  />\n                )\n              }\n            </Flex>\n          </Box>\n        )\n      }\n      {\n        this.props.selectedToken && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text mb={1}>\n              Select Action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.lockedEnd === null ? (\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isLock ? 2 : 0\n                    }}\n                    caption={'Lock'}\n                    width={[1,'32%']}\n                    imageSrc={'images/lock.svg'}\n                    isMobile={this.props.isMobile}\n                    // subcaption={'stake LP Tokens'}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isLock}\n                    handleClick={ e => this.setAction('Lock') }\n                  />\n                ) : !this.state.lockExpired ? (\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isIncrease ? 2 : 0\n                    }}\n                    width={[1,'32%']}\n                    isActive={isIncrease}\n                    caption={'Increase Lock'}\n                    imageSrc={'images/lock.svg'}\n                    isMobile={this.props.isMobile}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '54px'\n                    }}\n                    handleClick={ e => this.setAction('Increase Lock') }\n                  />\n                ) : (\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isUnstake ? 2 : 0\n                    }}\n                    width={[1,'32%']}\n                    caption={'Withdraw'}\n                    imageSrc={'images/upload.svg'}\n                    isMobile={this.props.isMobile}\n                    // subcaption={'withdraw LP tokens'}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isUnstake}\n                    handleClick={ e => this.setAction('Withdraw') }\n                  />\n                )\n              }\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isClaim ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Claim'}\n                imageSrc={'images/reward.png'}\n                isMobile={this.props.isMobile}\n                // subcaption={'withdraw LP tokens'}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isClaim}\n                handleClick={ e => this.setAction('Claim') }\n              />\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isStats ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Stats'}\n                imageSrc={'images/stats.svg'}\n                isMobile={this.props.isMobile}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isStats}\n                handleClick={ e => this.setAction('Stats') }\n              />\n            </Flex>\n            {\n              this.state.internalInfoBox && (\n                <IconBox\n                  cardProps={{\n                    mt:1,\n                    mb:3\n                  }}\n                  {...this.state.internalInfoBox}\n                />\n              )\n            }\n            {\n              isStats ? (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  width={1}\n                  style={{\n                    flexWrap:'wrap'\n                  }}\n                  justifyContent={'space-between'}\n                >\n                  {\n                    (!this.state.stats || !this.state.stats.length) ? (\n                      <Flex\n                        mt={3}\n                        mb={3}\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading stats...'}\n                        />\n                      </Flex>\n                    ) : this.state.stats.map( (statInfo,index) =>\n                      <StatsCard\n                        key={`stats_${index}`}\n                        cardProps={{\n                          width:[1,'49%']\n                        }}\n                        {...statInfo}\n                      />\n                    )\n                  }\n                  <Text\n                    mb={1}\n                  >\n                    Distributed Rewards:\n                  </Text>\n                  <Flex\n                    mb={3}\n                    width={1}\n                    alignItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        pt:2,\n                        pb:3,\n                        px:3,\n                        width:1,\n                        display:'flex',\n                        alignItems:'center',\n                        justifyContent:'center'\n                      }}\n                      isActive={false}\n                      isInteractive={false}\n                    >\n                      {\n                        this.state.distributedRewards && this.state.distributedRewards.length ? (\n                          <Flex\n                            width={1}\n                            flexDirection={'column'}\n                          >\n                            <Flex\n                              pt={0}\n                              pb={1}\n                              width={1}\n                              flexDirection={'row'}\n                              borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                            >\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                width={this.props.isMobile ? 0.5 : 0.4}\n                              >\n                                Date\n                              </Text>\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                width={this.props.isMobile ? 0.5 : 0.3}\n                                textAlign={this.props.isMobile ? 'right' : 'left'}\n                              >\n                                Amount\n                              </Text>\n                              {\n                                !this.props.isMobile && (\n                                  <Text\n                                    width={0.3}\n                                    fontSize={1}\n                                    fontWeight={3}\n                                  >\n                                    Hash\n                                  </Text>\n                                )\n                              }\n                            </Flex>\n                            {\n                              this.state.distributedRewards.map( (reward,index) => (\n                                <Flex\n                                  py={1}\n                                  width={1}\n                                  flexDirection={'row'}\n                                  key={`rewards_${index}`}\n                                  borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                                >\n                                  <Text\n                                    fontWeight={2}\n                                    color={'statValue'}\n                                    fontSize={this.props.isMobile ? 1 : 2}\n                                    width={this.props.isMobile ? 0.5 : 0.4}\n                                  >\n                                    {reward.date}\n                                  </Text>\n                                  <Text\n                                    fontWeight={2}\n                                    color={'statValue'}\n                                    fontSize={this.props.isMobile ? 1 : 2}\n                                    width={this.props.isMobile ? 0.5 : 0.3}\n                                    textAlign={this.props.isMobile ? 'right' : 'left'}\n                                  >\n                                    {reward.amount.toFixed(4)} {reward.tokenName}\n                                  </Text>\n                                  {\n                                    !this.props.isMobile && (\n                                      <ExtLink\n                                        width={0.3}\n                                        color={'link'}\n                                        hoverColor={'link'}\n                                        href={this.functionsUtil.getEtherscanTransactionUrl(reward.hash)}\n                                      >\n                                        <Flex\n                                          alignItems={'center'}\n                                          flexDirection={'row'}\n                                        >\n                                          <Text\n                                            fontSize={2}\n                                            fontWeight={2}\n                                            color={'link'}\n                                          >\n                                            {this.functionsUtil.shortenHash(reward.hash)}\n                                          </Text>\n                                          <Icon\n                                            ml={1}\n                                            size={'1.2em'}\n                                            color={'link'}\n                                            name={'OpenInNew'}\n                                          />\n                                        </Flex>\n                                      </ExtLink>\n                                    )\n                                  }\n                                </Flex>\n                              ))\n                            }\n                          </Flex>\n                        ) : (\n                          <Text\n                            fontSize={2}\n                            color={'statValue'}\n                          >\n                            No reward distributed yet.\n                          </Text>\n                        )\n                      }\n                    </DashboardCard>\n                  </Flex>\n                </Flex>\n              ) : (this.props.account && this.props.tokenConfig && this.state.balanceProp && this.state.statsLoaded && this.props.contractInfo) ? (\n                <Box\n                  mt={1}\n                  width={1}\n                  mb={[4,3]}\n                >\n                  {\n                    (isIncrease && canIncrease) && (\n                      <Box\n                        mb={2}\n                        width={1}\n                      >\n                        <Text mb={1}>\n                          Choose increase value:\n                        </Text>\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'space-between'}\n                        >\n                          <CardIconButton\n                            {...this.props}\n                            textProps={{\n                              fontSize:[1,2]\n                            }}\n                            cardProps={{\n                              px:3,\n                              py:2,\n                              width:0.49\n                            }}\n                            icon={'AccessTime'}\n                            iconColor={'deposit'}\n                            iconBgColor={'#ced6ff'}\n                            isActive={ this.state.increaseAction === 'time' }\n                            handleClick={ e => this.setIncreaseAction('time') }\n                            text={this.props.isMobile ? 'Time' : 'Increase Time'}\n                          />\n                          <CardIconButton\n                            {...this.props}\n                            textProps={{\n                              fontSize:[1,2]\n                            }}\n                            cardProps={{\n                              px:3,\n                              py:2,\n                              width:0.49\n                            }}\n                            icon={'AttachMoney'}\n                            iconColor={'redeem'}\n                            iconBgColor={'#ceeff6'}\n                            isActive={ this.state.increaseAction === 'amount' }\n                            handleClick={ e => this.setIncreaseAction('amount') }\n                            text={this.props.isMobile ? 'Amount' : 'Increase Amount'}\n                          />\n                        </Flex>\n                      </Box>\n                    )\n                  }\n                  {\n                    ((isLock && this.state.balanceProp && this.state.contractApproved && this.state.balanceProp.gt(0)) || (isIncrease && canIncrease)) && (\n                      <Box\n                        width={1}\n                      > \n                        {\n                          (isLock || this.state.increaseAction === 'time') && (\n                            <Box\n                              width={1}\n                            >\n                              <Text mb={1}>\n                                Choose lock period:\n                              </Text>\n                              {\n                                !this.state.lockEndDateIsMaxEndDate ? (\n                                  <Flex\n                                    width={1}\n                                    alignItems={'center'}\n                                    justifyContent={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Input\n                                      mb={2}\n                                      width={1}\n                                      type={\"date\"}\n                                      required={true}\n                                      height={'3.4em'}\n                                      borderRadius={2}\n                                      fontWeight={500}\n                                      borderColor={'cardBorder'}\n                                      backgroundColor={'cardBg'}\n                                      boxShadow={'none !important'}\n                                      value={this.state.lockPeriodInput || ''}\n                                      onChange={this.changelockPeriodInput.bind(this)}\n                                      border={`1px solid ${this.props.theme.colors.divider}`}\n                                    />\n                                    <Flex\n                                      mb={3}\n                                      width={1}\n                                      alignItems={'center'}\n                                      flexDirection={'row'}\n                                      justifyContent={'space-between'}\n                                    >\n                                      {\n                                        this.state.lockPeriods.map( (p,index) => {\n                                          const isActive = this.state.selectedLockPeriod ? this.state.selectedLockPeriod.value===p.value && this.state.selectedLockPeriod.type === p.type : false;\n                                          return (\n                                            <DashboardCard\n                                              cardProps={{\n                                                p:2,\n                                                width:0.24,\n                                              }}\n                                              isActive={isActive}\n                                              isInteractive={true}\n                                              key={`lockPeriod_${index}`}\n                                              handleClick={e => this.selectLockPeriod(p)}\n                                            >\n                                              <Text \n                                                fontWeight={3}\n                                                fontSize={[1,2]}\n                                                textAlign={'center'}\n                                                color={isActive ? 'copyColor' : 'cellText'}\n                                              >\n                                                {p.label}\n                                              </Text>\n                                            </DashboardCard>\n                                          );\n                                        })\n                                      }\n                                    </Flex>\n                                    {\n                                      isIncrease && (\n                                        <ExecuteTransaction\n                                          params={[]}\n                                          {...this.props}\n                                          parentProps={{\n                                            width:1,\n                                            alignItems:'center',\n                                            justifyContent:'center'\n                                          }}\n                                          Component={Button}\n                                          componentProps={{\n                                            fontSize:3,\n                                            fontWeight:3,\n                                            size:'medium',\n                                            width:[1,1/2],\n                                            borderRadius:4,\n                                            mainColor:'deposit',\n                                            value:'Increase Time',\n                                            disabled:this.state.buttonDisabled\n                                          }}\n                                          action={'Increase Time'}\n                                          methodName={'increase_unlock_time'}\n                                          contractName={this.props.contractInfo.name}\n                                          callback={this.transactionSucceeded.bind(this)}\n                                          getTransactionParams={this.getIncreaseTimeParams.bind(this)}\n                                        />\n                                      )\n                                    }\n                                  </Flex>\n                                ) : (\n                                  <IconBox\n                                    cardProps={{\n                                      mt:1,\n                                      mb:3\n                                    }}\n                                    icon={'Warning'}\n                                    iconProps={{\n                                      color:'cellText'\n                                    }}\n                                    text={`Your tokens are locked for the maxumum allowed period.`}\n                                  />\n                                )\n                              }\n                            </Box>\n                          )\n                        }\n                      </Box>\n                    )\n                  }\n                  {\n                    (isLock || this.state.increaseAction==='amount') ? (\n                      <SendTxWithBalance\n                        error={null}\n                        {...this.props}\n                        action={txAction}\n                        steps={this.state.steps}\n                        infoBox={this.state.infoBox}\n                        tokenConfig={this.props.tokenConfig}\n                        tokenBalance={this.state.balanceProp}\n                        contractInfo={this.props.contractInfo}\n                        permitEnabled={this.state.permitEnabled}\n                        buttonDisabled={this.state.buttonDisabled}\n                        approveEnabled={this.state.approveEnabled}\n                        callback={this.transactionSucceeded.bind(this)}\n                        approveDescription={this.state.approveDescription}\n                        balanceSelectorInfo={this.state.balanceSelectorInfo}\n                        changeInputCallback={this.changeInputCallback.bind(this)}\n                        contractApproved={this.contractApprovedCallback.bind(this)}\n                        getTransactionParams={this.getTransactionParams.bind(this)}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              {\n                                (isLock || isIncrease) ? (\n                                  `You don't have any ${this.props.selectedToken} in your wallet.`\n                                ) : isUnstake && (\n                                  `You don't have any staked ${this.props.selectedToken} to withdraw.`\n                                )\n                              }\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </SendTxWithBalance>\n                    ) : (isIncrease && !canIncrease) ? (\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            name={'LockOpen'}\n                            color={'cellText'}\n                            size={this.props.isMobile ? '1.8em' : '2.3em'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            You cannot increase an expired lock, please Withdraw.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    ) : isUnstake ? (\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        {\n                          this.state.lockExpired ? (\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                            >\n                              <Icon\n                                name={'LockOpen'}\n                                color={'cellText'}\n                                size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              />\n                              <Text\n                                mt={1}\n                                mb={3}\n                                fontSize={2}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                The lock has expired, you can withdraw your {this.props.selectedToken}.\n                              </Text>\n                              <ExecuteTransaction\n                                params={[]}\n                                {...this.props}\n                                Component={Button}\n                                parentProps={{\n                                  width:1,\n                                  alignItems:'center',\n                                  justifyContent:'center'\n                                }}\n                                componentProps={{\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  size:'medium',\n                                  width:[1,1/2],\n                                  borderRadius:4,\n                                  mainColor:'redeem',\n                                  value:'Withdraw',\n                                }}\n                                action={'Withdraw'}\n                                methodName={'withdraw'}\n                                contractName={this.props.contractInfo.name}\n                                callback={this.transactionSucceeded.bind(this)}\n                              />\n                            </Flex>\n                          ) : (\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                            >\n                              <Icon\n                                name={'LockOpen'}\n                                color={'cellText'}\n                                size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              />\n                              <Text\n                                mt={1}\n                                fontSize={2}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                The lock is not expired yet, please wait until {this.functionsUtil.strToMoment(this.state.lockedEnd*1000).utc().format('YYYY/MM/DD HH:mm')} UTC to withdraw your {this.props.selectedToken}.\n                              </Text>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    ) : isClaim && (\n                      <Flex\n                        width={1}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mb:1\n                          }}\n                        >\n                          {\n                            (this.state.claimable && this.state.claimable.gt(0)) ? (\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  color={'cellText'}\n                                  name={'MonetizationOn'}\n                                  size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                />\n                                <Text\n                                  mt={1}\n                                  mb={3}\n                                  fontSize={[2,3]}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You can claim <strong>{this.state.claimable.toFixed(8)} {this.props.contractInfo.rewardToken}</strong>.\n                                </Text>\n                                <ExecuteTransaction\n                                  params={[]}\n                                  {...this.props}\n                                  Component={Button}\n                                  parentProps={{\n                                    width:1,\n                                    alignItems:'center',\n                                    justifyContent:'center'\n                                  }}\n                                  componentProps={{\n                                    fontSize:3,\n                                    fontWeight:3,\n                                    size:'medium',\n                                    width:[1,1/3],\n                                    value:'Claim',\n                                    borderRadius:4,\n                                    mainColor:'redeem',\n                                  }}\n                                  action={'Claim'}\n                                  methodName={'claim'}\n                                  callback={this.transactionSucceeded.bind(this)}\n                                  contractName={this.props.tokenConfig.feeDistributor.name}\n                                />\n                              </Flex>\n                            ) : (\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  name={'MoneyOff'}\n                                  color={'cellText'}\n                                  size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                />\n                                <Text\n                                  mt={1}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You don't have rewards to Claim yet.\n                                </Text>\n                              </Flex>\n                            )\n                          }\n                        </DashboardCard>\n                        <Text\n                          mb={1}\n                        >\n                          Claimed Rewards:\n                        </Text>\n                        <Flex\n                          mb={3}\n                          width={1}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                        >\n                          <DashboardCard\n                            cardProps={{\n                              pt:2,\n                              pb:3,\n                              px:3,\n                              width:1,\n                              display:'flex',\n                              alignItems:'center',\n                              justifyContent:'center'\n                            }}\n                            isActive={false}\n                            isInteractive={false}\n                          >\n                            {\n                              this.state.claimedRewards && this.state.claimedRewards.length ? (\n                                <Flex\n                                  width={1}\n                                  flexDirection={'column'}\n                                >\n                                  <Flex\n                                    pt={0}\n                                    pb={1}\n                                    width={1}\n                                    flexDirection={'row'}\n                                    borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                                  >\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      width={this.props.isMobile ? 0.5 : 0.4}\n                                    >\n                                      Date\n                                    </Text>\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      width={this.props.isMobile ? 0.5 : 0.3}\n                                      textAlign={this.props.isMobile ? 'right' : 'left'}\n                                    >\n                                      Amount\n                                    </Text>\n                                    {\n                                      !this.props.isMobile && (\n                                        <Text\n                                          width={0.3}\n                                          fontSize={1}\n                                          fontWeight={3}\n                                        >\n                                          Hash\n                                        </Text>\n                                      )\n                                    }\n                                  </Flex>\n                                  {\n                                    this.state.claimedRewards.map( (claim,index) => (\n                                      <Flex\n                                        py={1}\n                                        width={1}\n                                        flexDirection={'row'}\n                                        key={`claim_${index}`}\n                                        borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                                      >\n                                        <Text\n                                          fontWeight={2}\n                                          color={'statValue'}\n                                          fontSize={this.props.isMobile ? 1 : 2}\n                                          width={this.props.isMobile ? 0.5 : 0.4}\n                                        >\n                                          {claim.date}\n                                        </Text>\n                                        <Text\n                                          fontWeight={2}\n                                          color={'statValue'}\n                                          fontSize={this.props.isMobile ? 1 : 2}\n                                          width={this.props.isMobile ? 0.5 : 0.3}\n                                          textAlign={this.props.isMobile ? 'right' : 'left'}\n                                        >\n                                          {claim.amount.toFixed(4)} {claim.tokenName}\n                                        </Text>\n                                        {\n                                          !this.props.isMobile && (\n                                            <ExtLink\n                                              width={0.3}\n                                              color={'link'}\n                                              hoverColor={'link'}\n                                              href={this.functionsUtil.getEtherscanTransactionUrl(claim.hash)}\n                                            >\n                                              <Flex\n                                                alignItems={'center'}\n                                                flexDirection={'row'}\n                                              >\n                                                <Text\n                                                  fontSize={2}\n                                                  fontWeight={2}\n                                                  color={'link'}\n                                                >\n                                                  {this.functionsUtil.shortenHash(claim.hash)}\n                                                </Text>\n                                                <Icon\n                                                  ml={1}\n                                                  size={'1.2em'}\n                                                  color={'link'}\n                                                  name={'OpenInNew'}\n                                                />\n                                              </Flex>\n                                            </ExtLink>\n                                          )\n                                        }\n                                      </Flex>\n                                    ))\n                                  }\n                                </Flex>\n                              ) : (\n                                <Text\n                                  fontSize={2}\n                                  color={'statValue'}\n                                >\n                                  No reward claimed yet.\n                                </Text>\n                              )\n                            }\n                          </DashboardCard>\n                        </Flex>\n                      </Flex>\n                    )\n                  }\n                </Box>\n              ) : !this.props.account ? (\n                <ConnectBox\n                  cardProps={{\n                    mt:2\n                  }}\n                  {...this.props}\n                />\n              ) : (\n                <Flex\n                  mt={3}\n                  mb={3}\n                  width={1}\n                >\n                  <FlexLoader\n                    flexProps={{\n                      flexDirection:'row'\n                    }}\n                    loaderProps={{\n                      size:'30px'\n                    }}\n                    textProps={{\n                      ml:2\n                    }}\n                    text={'Loading info...'}\n                  />\n                </Flex>\n              )\n            }\n          </Box>\n        )\n      }\n      </Box>\n    );\n  }\n}\n\nexport default IdleStaking;","import ExtLink from '../ExtLink/ExtLink';\nimport IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\n// import NXMaster from '../abis/nexus/NXMaster.json';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ButtonLoader from '../ButtonLoader/ButtonLoader';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\nimport { Flex, Box, Text, Input, Link, Progress, Button, Icon, Tooltip } from \"rimble-ui\";\n\nclass NexusMutual extends Component {\n\n  state = {\n    step:1,\n    quote:null,\n    steps:{\n      1:'Get Quote',\n      2:'Buy Cover'\n    },\n    periodOptions:{\n      30:{\n        label:'30d'\n      },\n      60:{\n        label:'60d'\n      },\n      90:{\n        label:'90d'\n      },\n      365:{\n        label:'1y'\n      }\n    },\n    coverId:null,\n    claimId:null,\n    capacity:null,\n    loading:false,\n    coverCost:null,\n    amountValue:'',\n    periodValue:'',\n    yearlyCost:null,\n    maxCapacity:null,\n    amountValid:true,\n    periodValid:true,\n    tokenConfig:null,\n    tokenBalance:null,\n    selectedToken:null,\n    claimableCovers:[],\n    tokenApproved:false,\n    selectedPeriod:null,\n    maxPriceWithFee:null,\n    transactionParams:[],\n    transactionValue:null,\n    yieldTokenBalance:null,\n    selectedUnderlying:null,\n    selectedAction:'deposit',\n    yieldTokenApproved:false,\n    claimButtonDisabled:false,\n    selectedCoverToClaim:null,\n    defaultClaimableCover:null,\n    selectedUnderlyingConfig:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadContracts();\n  }\n\n  async loadContracts(){\n    const claimableCovers = [];\n    const nexusMutualCoverages = await this.functionsUtil.getNexusMutualCoverages(this.props.account);\n    nexusMutualCoverages.forEach( coverage => {\n      if (coverage.incident){\n        claimableCovers.push(coverage);\n      }\n    });\n\n    const validClaimableCoverFromParam = this.props.urlParams.param3 ? claimableCovers.find( cover => parseInt(cover.value) === parseInt(this.props.urlParams.param3) ) : null;\n\n    const defaultClaimableCover = claimableCovers.length>0 ? claimableCovers[0] : null;\n    const selectedCoverToClaim = validClaimableCoverFromParam ? validClaimableCoverFromParam : defaultClaimableCover || null;\n\n    this.setState({\n      claimableCovers,\n      selectedCoverToClaim,\n      defaultClaimableCover\n    });\n\n    const selectedAction = ['deposit','claim'].includes(this.props.urlParams.param2) ? this.props.urlParams.param2 : this.state.selectedAction;\n    const paramIsValidToken = this.props.urlParams.param3 && Object.keys(this.props.toolProps.availableTokens).includes(this.props.urlParams.param3);\n    const selectedToken = paramIsValidToken ? this.props.urlParams.param3 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    this.setSelectedAction(selectedAction);\n    this.changeSelectedToken(selectedToken);\n    // console.log('coverBoughtEvents',coverBoughtEvents,'claimSubmittedEvents',claimSubmittedEvents,'claimableCovers',claimableCovers);\n  }\n\n  async getPoolCapacity(selectedUnderlying,tokenConfig){\n    const requiredNetwork = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    const baseEndpoint = this.functionsUtil.getGlobalConfig(['network','providers','nexus','endpoints',requiredNetwork]);\n    const response = await this.functionsUtil.makeRequest(`${baseEndpoint}contracts/${tokenConfig.address}/capacity`);\n    if (response && response.data){\n      const capacity = response.data;\n      // console.log('getPoolCapacity',capacity);\n      const maxCapacity = capacity && capacity[`capacity${selectedUnderlying}`] ? this.functionsUtil.fixTokenDecimals(capacity[`capacity${selectedUnderlying}`],tokenConfig.decimals) : this.functionsUtil.BNify(0);\n      return maxCapacity;\n    }\n    return false;\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const selectedUnderlyingChanged = prevState.selectedUnderlying !== this.state.selectedUnderlying;\n    if (selectedTokenChanged || selectedUnderlyingChanged){\n      this.loadTokenData();\n    }\n  }\n\n  async loadTokenData(){\n\n    const isETH = this.state.selectedToken === 'ETH';\n    const selectedUnderlyingConfig = this.state.tokenConfig.underlying[this.state.selectedUnderlying];\n\n    // Init Underlying Contract\n    await Promise.all([\n      this.props.initContract(this.state.tokenConfig.token, this.state.tokenConfig.realAddress, this.state.tokenConfig.abi),\n      this.props.initContract(selectedUnderlyingConfig.name, selectedUnderlyingConfig.address, selectedUnderlyingConfig.abi)\n    ]);\n\n    let [\n      maxCapacity,\n      yieldTokenBalance,\n      yieldTokenApproved,\n      tokenApproved,\n      tokenBalance\n    ] = await Promise.all([\n      this.getPoolCapacity(this.state.selectedUnderlying,this.state.tokenConfig),\n      this.functionsUtil.getTokenBalance(this.state.tokenConfig.token,this.props.account),\n      this.functionsUtil.checkTokenApproved(this.state.selectedToken,this.props.contractInfo.address,this.props.account),\n      this.functionsUtil.checkTokenApproved(selectedUnderlyingConfig.name,this.props.contractInfo.address,this.props.account),\n      isETH ? this.functionsUtil.getETHBalance(this.props.account,false) : this.functionsUtil.getTokenBalance(selectedUnderlyingConfig.name,this.props.account,false),\n    ]);\n\n    tokenBalance = tokenBalance || this.functionsUtil.BNify(0);\n    yieldTokenBalance = yieldTokenBalance || this.functionsUtil.BNify(0);\n\n    this.setState({\n      maxCapacity,\n      tokenBalance,\n      tokenApproved,\n      yieldTokenBalance,\n      yieldTokenApproved,\n      selectedUnderlyingConfig\n    });\n  }\n\n  async changeSelectedToken(selectedToken){\n    const periodValue = '';\n    const amountValue = '';\n    const tokenConfig = this.props.toolProps.availableTokens[selectedToken];\n    const selectedUnderlying = Object.keys(tokenConfig.underlying)[0];\n\n    this.setState({\n      amountValue,\n      periodValue,\n      tokenConfig,\n      selectedToken,\n      selectedUnderlying\n    });\n  }\n\n  changeSelectedUnderlying(selectedUnderlying){\n    this.setState({\n      selectedUnderlying\n    });\n  }\n\n  setMaxCoverAmount(){\n    const amountValue = this.state.maxCapacity.toFixed();\n    this.changeAmount({\n      target:{\n        value:amountValue\n      }\n    });\n  }\n\n  changeAmount = (e) => {\n    const amountValue = e.target.value.length && !isNaN(e.target.value) ? Math.floor(e.target.value) : '';\n    const amountValid = this.functionsUtil.BNify(amountValue).gt(0) && this.functionsUtil.BNify(amountValue).lte(this.state.maxCapacity);\n    this.setState({\n      amountValue,\n      amountValid\n    });\n  }\n\n  changePeriod = (e) => {\n    const periodValue = e.target.value.length && !isNaN(e.target.value) ? e.target.value : '';\n    const periodValid = parseInt(periodValue)>=30 && parseInt(periodValue)<=365;\n    this.setState({\n      periodValue,\n      periodValid,\n      selectedPeriod:null\n    });\n  }\n\n  selectPeriod = (selectedPeriod) => {\n    this.changePeriod({\n      target:{\n        value:selectedPeriod\n      }\n    });\n  }\n\n  async getQuote() {\n\n    this.setState({\n      loading:true\n    });\n\n    // Setup your cover data.\n    const coverData = {\n      period: this.state.periodValue, // days\n      coverAmount: this.state.amountValue, // ETH in units not wei\n      currency: this.state.selectedUnderlying,\n      contractAddress: this.state.tokenConfig.address, // the contract you will be buying cover for\n      asset: this.state.tokenConfig.underlying[this.state.selectedUnderlying].address\n    };\n\n    // URL to request a quote for.\n    // const quoteURL = 'https://api.nexusmutual.io/v1/quote?' +\n    const requiredNetwork = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    const baseEndpoint = this.functionsUtil.getGlobalConfig(['network','providers','nexus','endpoints',requiredNetwork]);\n    const quoteURL = `${baseEndpoint}quote?coverAmount=${coverData.coverAmount}&currency=${coverData.currency}&period=${coverData.period}&contractAddress=${coverData.contractAddress}`;\n\n    const response = await this.functionsUtil.makeRequest(quoteURL);\n\n    const quote = response && response.data ? response.data : null;\n\n    if (!quote){\n      this.setState({\n        loading:false\n      });\n      return false;\n    }\n\n    // encode the signature result in the data field\n    const data = this.props.web3.eth.abi.encodeParameters(\n      ['uint', 'uint', 'uint', 'uint', 'uint8', 'bytes32', 'bytes32'],\n      [quote.price, quote.priceInNXM, quote.expiresAt, quote.generatedAt, quote.v, quote.r, quote.s],\n    );\n\n    const COVER_TYPE = this.functionsUtil.toBN(0);\n    const feePercentage = await this.functionsUtil.genericContractCall(this.props.contractInfo.name,'feePercentage');\n    const basePrice = this.functionsUtil.toBN(quote.price);\n    const priceWithFee = basePrice.mul(this.functionsUtil.toBN(feePercentage)).divn(10000).add(basePrice);\n    const amountInWei = this.functionsUtil.toWei(coverData.coverAmount.toString());\n    const maxPriceWithFee = priceWithFee;\n    const coverCost = this.functionsUtil.fixTokenDecimals(maxPriceWithFee,this.state.tokenConfig.decimals);\n    const yearlyCost = coverCost.div(this.state.amountValue).times(365).div(this.state.periodValue).times(100);\n\n    // console.log('coverCost',maxPriceWithFee,coverCost.toFixed(),this.state.amountValue.toFixed(),this.state.periodValue,yearlyCost.toFixed());\n\n    const transactionParams = [\n      coverData.contractAddress,\n      coverData.asset,\n      amountInWei,\n      coverData.period,\n      COVER_TYPE,\n      maxPriceWithFee,\n      data\n    ];\n\n    const transactionValue = this.state.selectedUnderlying === 'ETH' ? priceWithFee : null;\n\n    // console.log(feePercentage,transactionParams,transactionValue,quote);\n\n    // debugger;\n\n    const step = 2;\n    const loading = false;\n\n    this.setState({\n      step,\n      quote,\n      loading,\n      coverCost,\n      yearlyCost,\n      maxPriceWithFee,\n      transactionValue,\n      transactionParams\n    });\n  }\n\n  approveSucceeded = (tx) => {\n    const tokenApproved = true;\n    this.setState({\n      tokenApproved\n    });\n  }\n\n  yieldTokenApproveSucceeded = (tx) => {\n    const yieldTokenApproved = true;\n    this.setState({\n      yieldTokenApproved\n    });\n  }\n\n  claimInputChange = (amount) => {\n    const normalizedAmount = this.functionsUtil.normalizeTokenAmount(amount,this.state.tokenConfig.decimals);\n    const claimButtonDisabled = this.functionsUtil.BNify(amount).lte(0) || this.functionsUtil.BNify(normalizedAmount).gt(this.state.selectedCoverToClaim.coveredTokenAmount);\n    this.setState({\n      claimButtonDisabled\n    });\n  }\n\n  getClaimTransactionParams = (coveredTokenAmount) => {\n    return {\n      methodName:'claimTokens',\n      methodParams:[this.state.selectedCoverToClaim.value,this.state.selectedCoverToClaim.incident.id,coveredTokenAmount,this.state.tokenConfig.realAddress]\n    };\n  }\n\n  claimTransactionSucceeded = (tx) => {\n    // const claimId = this.functionsUtil.getGlobalConfig(['txReceipt','events','ClaimSubmitted','returnValues','claimId'],tx);\n    // this.setState({\n    //   claimId\n    // });\n    this.loadContracts();\n  }\n\n  buyCoverTransactionSucceeded = (tx) => {\n    const coverId = this.functionsUtil.getGlobalConfig(['txReceipt','events','CoverBought','returnValues','coverId'],tx);\n    this.setState({\n      coverId\n    });\n  }\n\n  setSelectedAction(selectedAction){\n    if (selectedAction !== this.state.selectedAction){\n      this.setState({\n        selectedAction\n      });\n    }\n  }\n\n  selectCoverToClaim(coverId){\n    const selectedCoverToClaim = this.state.selectedCoverToClaim ? this.state.claimableCovers.find( cover => parseInt(cover.value) === coverId ) : null;\n    // console.log('selectCoverToClaim',selectedCoverToClaim);\n    this.setState({\n      selectedCoverToClaim\n    });\n  }\n\n  reset(){\n    const step = 1;\n    const quote = null;\n    const coverId = null;\n    const periodValue = '';\n    const amountValue = '';\n    const transactionParams = [];\n    this.setState({\n      step,\n      quote,\n      coverId,\n      periodValue,\n      amountValue,\n      transactionParams\n    });\n  }\n\n  render() {\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          mb={3}\n          width={[1,0.36]}\n          flexDirection={'column'}\n        >\n          <Box\n            mb={2}\n            width={1}\n          >\n            <Text mb={1}>\n              Choose action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'space-between'}\n            >\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:2,\n                  width:0.49\n                }}\n                textProps={{\n                  fontSize:[1,2]\n                }}\n                icon={'Security'}\n                iconColor={'deposit'}\n                text={'Buy Coverage'}\n                iconBgColor={'#ced6ff'}\n                isActive={ this.state.selectedAction === 'deposit' }\n                handleClick={ e => this.setSelectedAction('deposit') }\n              />\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:2,\n                  width:0.49\n                }}\n                textProps={{\n                  fontSize:[1,2]\n                }}\n                icon={'FileUpload'}\n                iconColor={'redeem'}\n                text={'Claim Tokens'}\n                iconBgColor={'#ceeff6'}\n                isActive={ this.state.selectedAction === 'claim' }\n                handleClick={ e => this.setSelectedAction('claim') }\n              />\n            </Flex>\n          </Box>\n          {\n            this.state.selectedAction === 'deposit' &&\n              <IconBox\n                cardProps={{\n                  py:2,\n                  px:3,\n                  my:2,\n                  width:1,\n                }}\n                isActive={true}\n                isInteractive={false}\n                icon={'LightbulbOutline'}\n                iconProps={{\n                  color:'flashColor'\n                }}\n                textProps={{\n                  color:'flashColor'\n                }}\n                text={`If your yield bearing token de-pegs in value by more than 10%, claim up to 90% of your loss by swapping your yield bearing token for a claim payment.`}\n              >\n                <ExtLink\n                  ml={1}\n                  fontWeight={500}\n                  color={'primary'}\n                  fontSize={'15px'}\n                  hoverColor={'primary'}\n                  href={'https://nexusmutual.io/pages/YieldTokenCoverv1.0.pdf'}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    Read More\n                    <Icon\n                      ml={1}\n                      size={'0.9em'}\n                      color={'primary'}\n                      name={'OpenInNew'}\n                    />\n                    .\n                  </Flex>\n                </ExtLink>\n              </IconBox>\n          }\n          {\n            this.state.selectedAction === 'deposit' ? (\n              <Flex\n                width={1}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Flex\n                  mb={1}\n                  width={1}\n                  flexDirection={'row'}\n                  justifyContent={'space-between'}\n                >\n                  {\n                    Object.keys(this.state.steps).map( stepIndex => (\n                      <Link\n                        style={{\n                          flexBasis:'0',\n                          flex:'1 1 0px',\n                          textDecoration:'none',\n                          cursor:this.state.step>=stepIndex ? 'pointer' : 'default'\n                        }}\n                        fontSize={2}\n                        textAlign={'center'}\n                        key={`step_${stepIndex}`}\n                        color={ this.state.step>=stepIndex ? 'primary' : 'cellText' }\n                        hoverColor={ this.state.step>=stepIndex ? 'primary' : 'cellText' }\n                        activeColor={ this.state.step>=stepIndex ? 'primary' : 'cellText' }\n                      >\n                        {this.state.steps[stepIndex]}\n                      </Link>\n                    ) )\n                  }\n                </Flex>\n                <Flex\n                  mb={2}\n                  width={1}\n                  flexDirection={'column'}\n                >\n                  <Progress\n                    style={{\n                      width:'100%',\n                      height:'15px'\n                    }}\n                    value={(1/Object.keys(this.state.steps).length)*this.state.step}\n                  />\n                </Flex>\n                {\n                  !this.state.selectedToken || !this.state.tokenBalance ? (\n                    <FlexLoader\n                      flexProps={{\n                        mt:2,\n                        flexDirection:'row'\n                      }}\n                      loaderProps={{\n                        size:'25px',\n                      }}\n                      textProps={{\n                        ml:2\n                      }}\n                      text={'Loading assets...'}\n                    />\n                  ) : this.state.coverId ? (\n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <IconBox\n                        cardProps={{\n                          mt:1,\n                        }}\n                        icon={'DoneAll'}\n                        iconProps={{\n                          color:this.props.theme.colors.transactions.status.completed\n                        }}\n                        text={`You have successfully bought your Cover! Your Cover ID is <strong>${this.state.coverId}</strong>`}\n                      />\n                      <Link\n                        mt={2}\n                        color={'link'}\n                        hoverColor={'primary'}\n                        onClick={this.reset.bind(this)}\n                      >\n                        Get New Quote\n                      </Link>\n                    </Flex>\n                  ) : !this.state.quote ? (\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Box\n                        width={1}\n                      >\n                        <Text mb={1}>\n                          Select Token to Cover:\n                        </Text>\n                        <AssetSelector\n                          {...this.props}\n                          id={'token-from'}\n                          showBalance={false}\n                          isSearchable={false}\n                          selectedToken={this.state.selectedToken}\n                          onChange={this.changeSelectedToken.bind(this)}\n                          availableTokens={this.props.toolProps.availableTokens}\n                        />\n                      </Box>\n                      <Box\n                        mt={2}\n                        width={1}\n                      >\n                        <Flex\n                          mb={1}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                        >\n                          <Text>\n                            Select Payment Asset:\n                          </Text>\n                          <Tooltip\n                            placement={'top'}\n                            message={`This is the asset that you will use as payment method for the coverage premium`}\n                          >\n                            <Icon\n                              ml={1}\n                              size={'1em'}\n                              name={\"Info\"}\n                              color={'cellTitle'}\n                            />\n                          </Tooltip>\n                        </Flex>\n                        <AssetSelector\n                          {...this.props}\n                          showBalance={false}\n                          selectedToken={this.state.selectedUnderlying}\n                          onChange={this.changeSelectedUnderlying.bind(this)}\n                          availableTokens={this.state.tokenConfig.underlying}\n                        />\n                      </Box>\n                      {\n                        this.functionsUtil.BNify(this.state.maxCapacity).gt(0) ? (\n                          <Box\n                            width={1}\n                          >\n                            <Box\n                              mt={2}\n                              width={1}\n                            >\n                              <Text\n                                mb={1}\n                              >\n                                How much do you want to cover?\n                              </Text>\n                              <Input\n                                min={0}\n                                step={1}\n                                width={'100%'}\n                                type={\"number\"}\n                                required={true}\n                                height={'3.4em'}\n                                borderRadius={2}\n                                fontWeight={500}\n                                borderColor={'cardBorder'}\n                                backgroundColor={'cardBg'}\n                                boxShadow={'none !important'}\n                                value={this.state.amountValue}\n                                onChange={this.changeAmount.bind(this)}\n                                border={`1px solid ${this.props.theme.colors.divider}`}\n                                placeholder={`Insert ${this.state.selectedUnderlying.toUpperCase()} amount`}\n                              />\n                              <Flex\n                                width={1}\n                                maxWidth={'100%'}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'flex-end'}\n                              >\n                                <Link\n                                  mt={1}\n                                  fontSize={1}\n                                  fontWeight={3}\n                                  color={'dark-gray'}\n                                  textAlign={'right'}\n                                  hoverColor={'copyColor'}\n                                  onClick={ (e) => this.setMaxCoverAmount() }\n                                  style={{\n                                    maxWidth:'100%',\n                                    overflow:'hidden',\n                                    whiteSpace:'nowrap',\n                                    textOverflow:'ellipsis'\n                                  }}\n                                >\n                                  Max Available: {this.state.maxCapacity.toFixed(this.props.isMobile ? 2 : 4)} {this.state.selectedUnderlying}\n                                </Link>\n                              </Flex>\n                            </Box>\n                            <Box\n                              mt={2}\n                              width={1}\n                            >\n                              <Text\n                                mb={1}\n                              >\n                                For how many days?\n                              </Text>\n                              <Input\n                                min={0}\n                                width={'100%'}\n                                type={\"number\"}\n                                required={true}\n                                height={'3.4em'}\n                                borderRadius={2}\n                                fontWeight={500}\n                                borderWidth={'1px'}\n                                borderStyle={'solid'}\n                                backgroundColor={'cardBg'}\n                                boxShadow={'none !important'}\n                                value={this.state.periodValue}\n                                placeholder={'Insert days of coverage'}\n                                onChange={this.changePeriod.bind(this)}\n                                borderColor={this.state.periodValid ? 'cardBorder' : 'red'}\n                              />\n                              {\n                                !this.state.periodValid && (\n                                  <Text\n                                    my={1}\n                                    fontSize={2}\n                                    color={'red'}\n                                  >\n                                    Enter a period between 30 and 365 days!\n                                  </Text>\n                                )\n                              }\n                              <Flex\n                                mt={2}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'space-between'}\n                              >\n                                {\n                                  Object.keys(this.state.periodOptions).map( period => {\n                                    const periodInfo = this.state.periodOptions[period];\n                                    const isActive = this.state.selectedPeriod===period;\n                                    const width = (1/Object.keys(this.state.periodOptions).length)-0.01;\n                                    return (\n                                      <DashboardCard\n                                        cardProps={{\n                                          p:2,\n                                          width:width,\n                                        }}\n                                        isActive={isActive}\n                                        isInteractive={true}\n                                        key={`coverPeriod_${period}`}\n                                        handleClick={e => this.selectPeriod(period)}\n                                      >\n                                        <Text\n                                          fontSize={2}\n                                          fontWeight={3}\n                                          textAlign={'center'}\n                                          color={this.props.isActive ? 'copyColor' : 'legend'}\n                                        >\n                                          {periodInfo.label}\n                                        </Text>\n                                      </DashboardCard>\n                                    );\n                                  })\n                                }\n                              </Flex>\n                            </Box>\n                            <Flex\n                              mt={2}\n                              width={1}\n                              justifyContent={'center'}\n                            >\n                              <ButtonLoader\n                                buttonProps={{\n                                  my:2,\n                                  mx:[0, 2],\n                                  size:'medium',\n                                  borderRadius:4,\n                                  mainColor:'blue',\n                                  disabled:(!this.state.amountValid || !this.state.selectedUnderlying || !this.state.periodValue || !this.state.periodValid)\n                                }}\n                                buttonText={'GET QUOTE'}\n                                isLoading={this.state.loading}\n                                handleClick={ e => this.getQuote(e) }\n                              />\n                            </Flex>\n                          </Box>\n                        ) : (\n                          <IconBox\n                            cardProps={{\n                              mt:3\n                            }}\n                            icon={'MoneyOff'}\n                            iconProps={{\n                              color:'cellText'\n                            }}\n                            text={`Coverage for ${this.state.selectedToken} is not available at the moment.`}\n                          />\n                        )\n                      }\n                    </Flex>\n                  ) : (\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Text\n                        mb={2}\n                        fontSize={3}\n                        fontWeight={3}\n                        color={'primary'}\n                      >\n                        Cover Summary:\n                      </Text>\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          mb:2,\n                          px:3\n                        }}\n                        isActive={false}\n                        isInteractive={false}\n                      >\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Protocol:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          Idle Finance\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Yield Token:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.selectedToken}\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Cover Amount:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.amountValue} {this.state.selectedUnderlying}\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Cover Period:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.periodValue} days\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Cover Price:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.coverCost.toFixed(6)} {this.state.selectedUnderlying}\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Yearly Cost:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.yearlyCost.toFixed(2)}%\n                        </Text>\n                      </DashboardCard>\n                      <Flex\n                        mt={2}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        {\n                          this.functionsUtil.BNify(this.state.tokenBalance).lt(this.functionsUtil.BNify(this.state.quote.price)) ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mb:3\n                              }}\n                            >\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Icon\n                                  size={'2em'}\n                                  name={'MoneyOff'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mt={1}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You don't have enough {this.state.selectedUnderlying} in your wallet.\n                                </Text>\n                                <Link\n                                  mt={1}\n                                  color={'link'}\n                                  hoverColor={'primary'}\n                                  onClick={this.reset.bind(this)}\n                                >\n                                  Get New Quote\n                                </Link>\n                              </Flex>\n                            </DashboardCard>\n                          ) : !this.state.tokenApproved ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mb:3\n                              }}\n                            >\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Icon\n                                  size={'2em'}\n                                  name={'MoneyOff'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mb={2}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  To buy the coverage you need to approve the Smart-Contract.\n                                </Text>\n                                <ExecuteTransaction\n                                  {...this.props}\n                                  parentProps={{\n                                    width:1,\n                                    alignItems:'center',\n                                    justifyContent:'center'\n                                  }}\n                                  Component={Button}\n                                  componentProps={{\n                                    fontSize:3,\n                                    fontWeight:3,\n                                    size:'medium',\n                                    width:[1,1/2],\n                                    borderRadius:4,\n                                    value:'Approve',\n                                    mainColor:'deposit'\n                                  }}\n                                  action={'Approve'}\n                                  methodName={'approve'}\n                                  callback={this.approveSucceeded.bind(this)}\n                                  contractName={this.state.selectedUnderlyingConfig.name}\n                                  params={[this.props.contractInfo.address,this.props.web3.utils.toTwosComplement('-1')]}\n                                />\n                                <Link\n                                  mt={1}\n                                  color={'link'}\n                                  hoverColor={'primary'}\n                                  onClick={this.reset.bind(this)}\n                                >\n                                  Get New Quote\n                                </Link>\n                              </Flex>\n                            </DashboardCard>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <ExecuteTransaction\n                                {...this.props}\n                                parentProps={{\n                                  width:1,\n                                  alignItems:'center',\n                                  justifyContent:'center'\n                                }}\n                                Component={Button}\n                                componentProps={{\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  size:'medium',\n                                  width:[1,1/2],\n                                  borderRadius:4,\n                                  mainColor:'deposit',\n                                  value:'Buy Coverage',\n                                  disabled:this.state.buttonDisabled\n                                }}\n                                action={'Buy Coverage'}\n                                methodName={'buyCover'}\n                                value={this.state.transactionValue}\n                                params={this.state.transactionParams}\n                                contractName={this.props.contractInfo.name}\n                                callback={this.buyCoverTransactionSucceeded.bind(this)}\n                              />\n                              <Link\n                                mt={1}\n                                color={'link'}\n                                hoverColor={'primary'}\n                                onClick={this.reset.bind(this)}\n                              >\n                                Get New Quote\n                              </Link>\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                    </Flex>\n                  )\n                }\n              </Flex>\n            ) : this.state.selectedAction === 'claim' && (\n              <Box\n                width={1}\n              >\n                {\n                  this.state.claimableCovers.length>0 ? (\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Text mb={1}>\n                        Select Cover:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        isSearchable={false}\n                        name={'claimable_covers'}\n                        options={this.state.claimableCovers}\n                        onChange={this.selectCoverToClaim.bind(this)}\n                        defaultValue={this.state.defaultClaimableCover}\n                      />\n                      {\n                        this.state.selectedCoverToClaim.claimId ? (\n                          <IconBox\n                            cardProps={{\n                              mt:2,\n                            }}\n                            icon={'DoneAll'}\n                            iconProps={{\n                              color:this.props.theme.colors.transactions.status.completed\n                            }}\n                            text={`You've successfully claimed <strong>${this.state.selectedCoverToClaim.claimedAmount.toFixed(4)} ${this.state.selectedCoverToClaim.coverAsset}</strong> for this Cover!`}\n                          />\n                        ) : (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mt:3,\n                                mb:1\n                              }}\n                            >\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Icon\n                                  size={'2em'}\n                                  color={'cellText'}\n                                  name={'FileUpload'}\n                                />\n                                <Text\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You can Claim up to <strong>{this.state.selectedCoverToClaim.claimableAmount.toFixed(4)} {this.state.selectedCoverToClaim.coverAsset}</strong> for this Cover!\n                                </Text>\n                                <Text\n                                  fontSize={1}\n                                  color={'alert'}\n                                  textAlign={'center'}\n                                >\n                                  Keep in mind that the cover becomes inactive once any amount of tokens are claimed.\n                                </Text>\n                              </Flex>\n                            </DashboardCard>\n                            <SendTxWithBalance\n                              error={null}\n                              {...this.props}\n                              permitEnabled={false}\n                              approveEnabled={true}\n                              action={'Claim Token'}\n                              tokenConfig={this.state.tokenConfig}\n                              contractInfo={this.props.contractInfo}\n                              buttonDisabled={this.state.claimButtonDisabled}\n                              callback={this.claimTransactionSucceeded.bind(this)}\n                              changeInputCallback={this.claimInputChange.bind(this)}\n                              contractApproved={this.yieldTokenApproveSucceeded.bind(this)}\n                              getTransactionParams={this.getClaimTransactionParams.bind(this)}\n                              approveDescription={'To claim your tokens you need to approve the Smart-Contract.'}\n                              tokenBalance={this.functionsUtil.BNify(this.state.yieldTokenBalance).gt(this.state.selectedCoverToClaim.maxCoveredAmount) ? this.state.selectedCoverToClaim.maxCoveredAmount : this.state.yieldTokenBalance }\n                            >\n                              <DashboardCard\n                                cardProps={{\n                                  p:3,\n                                  mt:2\n                                }}\n                              >\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                >\n                                  <Icon\n                                    name={'MoneyOff'}\n                                    color={'cellText'}\n                                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                  />\n                                  <Text\n                                    mt={1}\n                                    fontSize={2}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    You don't have any {this.state.selectedToken} in your wallet.\n                                  </Text>\n                                </Flex>\n                              </DashboardCard>\n                            </SendTxWithBalance>\n                          </Flex>\n                        )\n                      }\n                    </Flex>\n                  ) : (\n                    <IconBox\n                      cardProps={{\n                        mt:1,\n                      }}\n                      icon={'Warning'}\n                      iconProps={{\n                        color:'cellText'\n                      }}\n                      text={`You cannot submit any Claim for your Covers.`}\n                    />\n                  )\n                }\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default NexusMutual;\n","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Box, Flex, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass TokenWrapper extends Component {\n\n  state = {\n    action:null,\n    infoBox:null,\n    balanceDest:null,\n    tokenConfig:null,\n    balanceStart:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    approveEnabled:true,\n    approveDescription:null,\n    showTokenWrapperEnabled:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const actionChanged = (prevState.action !== this.state.action) || (this.props.action !== prevProps.action);\n    const startContractChanged = JSON.stringify(this.props.startContract) !== JSON.stringify(prevProps.startContract);\n    const destContractChanged = JSON.stringify(this.props.destContract) !== JSON.stringify(prevProps.destContract);\n    if (actionChanged || startContractChanged || destContractChanged){\n      this.loadData();\n    }\n  }\n\n  async loadData(){\n    const action = this.props.action || this.state.action || 'wrap';\n    this.setState({\n      action\n    },() => {\n      this.loadBalance();\n      this.updateActionData();\n    });\n  }\n\n  async getTokenBalance(contractInfo){\n\n    if (!contractInfo){\n      return false;\n    }\n\n    let tokenBalance = null;\n    switch (contractInfo.name){\n      case 'ETH':\n        tokenBalance = await this.functionsUtil.getETHBalance(this.props.account);\n      break;\n      default:\n        // Init Contract\n        await this.props.initContract(contractInfo.name,contractInfo.address,contractInfo.abi);\n        tokenBalance = await this.functionsUtil.getTokenBalance(contractInfo.name,this.props.account);\n      break;\n    }\n\n    tokenBalance = tokenBalance || this.functionsUtil.BNify(0);\n\n    return tokenBalance;\n  }\n\n  async loadBalance(){\n\n    if (!this.props.toolProps.startContract || !this.props.toolProps.destContract){\n      return false;\n    }\n\n    // Load Balances\n    const [\n      balanceDest,\n      balanceStart\n    ] = await Promise.all([\n      this.getTokenBalance(this.props.toolProps.destContract),\n      this.getTokenBalance(this.props.toolProps.startContract)\n    ]);\n\n    const tokenBalance = this.state.action === 'wrap' ? balanceStart : balanceDest;\n    // console.log('loadBalance',this.props.toolProps.startContract,parseFloat(balanceStart),this.props.toolProps.destContract,parseFloat(balanceDest));\n\n    this.setState({\n      balanceDest,\n      balanceStart,\n      tokenBalance\n    });\n  }\n\n  updateActionData(){\n    let infoBox = null;\n    let tokenConfig = null;\n    let tokenBalance = null;\n    let selectedToken = null;\n    let approveEnabled = true;\n    let approveDescription = null;\n\n    switch (this.state.action){\n      case 'wrap':\n        approveEnabled = true;\n        tokenBalance = this.state.balanceStart;\n        tokenConfig = this.props.toolProps.startContract;\n        selectedToken = this.props.toolProps.startContract.name;\n        approveDescription = `To Mint new ${this.props.toolProps.destContract.name} you need to approve the Smart-Contract first`;\n        infoBox = {\n          icon:'FileDownload',\n          // iconProps:{\n          //   color:this.props.theme.colors.transactions.action.deposit\n          // },\n          text:`Wrap your ${this.props.toolProps.startContract.name} and get ${this.props.toolProps.destContract.name}`\n        };\n      break;\n      case 'unwrap':\n        selectedToken = this.props.toolProps.destContract.name;\n        approveEnabled = false;\n        tokenBalance = this.state.balanceDest;\n        tokenConfig = this.props.toolProps.destContract;\n        approveDescription = `To withdraw your ${this.props.toolProps.startContract.name} you need to approve the Smart-Contract first`;\n        infoBox = {\n          icon:'FileUpload',\n          // iconProps:{\n          //   color:this.props.theme.colors.transactions.action.redeem\n          // },\n          text:`Unwrap your ${this.props.toolProps.destContract.name} and get back ${this.props.toolProps.startContract.name}`\n        };\n      break;\n      default:\n      break;\n    }\n\n    this.setState({\n      infoBox,\n      tokenConfig,\n      tokenBalance,\n      selectedToken,\n      approveEnabled,\n      approveDescription\n    },() => {\n      this.loadBalance();\n    });\n  }\n\n  setAction(action){\n    this.setState({\n      action\n    });\n  }\n\n  transactionSucceeded(tx,amount,params){\n    let infoBox = null;\n\n    switch (this.state.action){\n      case 'wrap':\n        const mintLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.destContract.address.toLowerCase() ) : null;\n        let mintedAmount = mintLog ? parseInt(mintLog.data,16) : amount;\n        mintedAmount = this.functionsUtil.fixTokenDecimals(mintedAmount,this.state.tokenConfig.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have received <strong>${mintedAmount.toFixed(4)} ${this.props.toolProps.destContract.name}</strong>`\n        }\n      break;\n      case 'unwrap':\n        const withdrawLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.destContract.address.toLowerCase() ) : null;\n        let withdrawnAmount = withdrawLog ? parseInt(withdrawLog.data,16) : amount;\n        withdrawnAmount = this.functionsUtil.fixTokenDecimals(withdrawnAmount,this.state.tokenConfig.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have received <strong>${withdrawnAmount.toFixed(4)} ${this.props.toolProps.startContract.name}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    // Update balances\n    this.loadBalance();\n\n    this.setState({\n      infoBox\n    });\n  }\n\n  getTransactionParams(amount){\n    const params = {};\n    switch (this.state.action){\n      case 'wrap':\n        params.value = amount;\n        params.methodParams = [];\n        params.methodName = this.props.toolProps.startContract.wrapMethod;\n      break;\n      case 'unwrap':\n        params.value = null;\n        params.methodParams = [amount];\n        params.methodName = this.props.toolProps.destContract.unwrapMethod;\n      break;\n      default:\n      break;\n    }\n    return params;\n  }\n\n  render() {\n\n    const fullWidth = !!this.props.fullWidth;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        mt={[2,fullWidth ? 2 : 3]}\n      >\n        <Flex\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n          width={[1,fullWidth ? 1 : 0.36]}\n        >\n          {\n            !this.props.account ? (\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mt:3\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                    name={'Input'}\n                    color={'cellText'}\n                  />\n                  <Text\n                    mt={[1,2]}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Please connect with your wallet interact with Idle.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:2,\n                      width:[1,1/2]\n                    }}\n                    handleClick={this.props.connectAndValidateAccount}\n                  >\n                    Connect\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            ) : (\n              <Box\n                width={1}\n              >\n                {\n                  !this.props.action && (\n                    <Flex\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        mb={2}\n                      >\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <CardIconButton\n                          {...this.props}\n                          cardProps={{\n                            px:3,\n                            py:3,\n                            width:0.48\n                          }}\n                          text={'Wrap'}\n                          iconColor={'deposit'}\n                          icon={'ArrowDownward'}\n                          iconBgColor={'#ced6ff'}\n                          isActive={ this.state.action === 'wrap' }\n                          handleClick={ e => this.setAction('wrap') }\n                        />\n                        <CardIconButton\n                          {...this.props}\n                          cardProps={{\n                            px:3,\n                            py:3,\n                            width:0.48\n                          }}\n                          text={'Unwrap'}\n                          iconColor={'redeem'}\n                          icon={'ArrowUpward'}\n                          iconBgColor={'#ceeff6'}\n                          isActive={ this.state.action === 'unwrap' }\n                          handleClick={ e => this.setAction('unwrap') }\n                        />\n                      </Flex>\n                    </Flex>\n\n                  )\n                }\n                <Box\n                  width={1}\n                  my={fullWidth ? 2 : 3}\n                >\n                  {\n                    this.state.tokenBalance!==null ? (\n                      <SendTxWithBalance\n                        {...this.props}\n                        approveEnabled={false}\n                        action={this.state.action}\n                        infoBox={this.state.infoBox}\n                        tokenConfig={this.state.tokenConfig}\n                        tokenBalance={this.state.tokenBalance}\n                        contractInfo={this.props.toolProps.destContract}\n                        callback={this.transactionSucceeded.bind(this)}\n                        approveDescription={this.state.approveDescription}\n                        // changeInputCallback={this.changeInputCallback.bind(this)}\n                        getTransactionParams={this.getTransactionParams.bind(this)}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedToken} to {this.state.action} in your wallet.\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </SendTxWithBalance>\n                    ) : (\n                      <Flex\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading Balance...'}\n                        />\n                      </Flex>\n                    )\n                  }\n                </Box>\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenWrapper;","import theme from '../theme';\nimport { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport AssetField from '../AssetField/AssetField';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass PortfolioDonut extends Component {\n  state = {\n    chartData:null,\n    totalFunds:null,\n    parentWidth:null,\n    selectedToken:null,\n    selectedTokenConfig:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentWillUnmount() {\n    \n  }\n\n  async componentDidMount(){\n    this.loadPortfolio();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  async loadPortfolio() {\n\n    const portfolio = {};\n    let totalFunds = this.functionsUtil.BNify(0);\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.availableTokens),async (token) => {\n      const tokenConfig = this.props.availableTokens[token];\n      const idleTokenBalance = await this.functionsUtil.getTokenBalance(tokenConfig.idle.token,this.props.account);\n\n      if (idleTokenBalance){\n        const tokenPrice = await this.functionsUtil.getIdleTokenPrice(tokenConfig);\n        const tokenBalance = await this.functionsUtil.convertTokenBalance(idleTokenBalance.times(tokenPrice),token,tokenConfig,isRisk);\n\n        if (tokenBalance.gt(0)){\n          portfolio[token] = tokenBalance;\n\n          // Increment total balance\n          totalFunds = totalFunds.plus(tokenBalance);\n        }\n      }\n    });\n\n    // Add Gov Tokens\n    const govTokensUserBalances = await this.functionsUtil.getGovTokensUserBalances(this.props.account,this.props.availableTokens,'DAI',null,true);\n    if (govTokensUserBalances){\n      Object.keys(govTokensUserBalances).forEach( govToken => {\n        const govTokenBalance = this.functionsUtil.BNify(govTokensUserBalances[govToken]);\n        portfolio[govToken] = govTokenBalance;\n        totalFunds = totalFunds.plus(govTokenBalance);\n      });\n    }\n\n    const chartData = [];\n\n    Object.keys(portfolio).forEach(token => {\n      const tokenBalance = portfolio[token];\n      if (tokenBalance.gt(0)){\n        const tokenPercentage = tokenBalance.div(totalFunds).times(100);\n        let tokenColorHsl = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'color','hsl']);\n        tokenColorHsl = tokenColorHsl ? tokenColorHsl.join(',') : '0,0%,0%';\n        chartData.push({\n          id:token,\n          label:token.substr(0,1).toUpperCase()+token.substr(1),\n          value:Math.round(tokenPercentage),\n          color:'hsl('+tokenColorHsl+')'\n        });\n      }\n    });\n\n    this.setState({\n      portfolio,\n      chartData,\n      totalFunds\n    });\n  }\n\n  render() {\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth:0,\n      cornerRadius:0,\n      innerRadius:0.65,\n      motionDamping:15,\n      motionStiffness:90,\n      colors:d => d.color,\n      tooltipFormat: v => v+'%',\n      sliceLabel: d => {\n        if (parseFloat(d.value)>=5){\n          return d.value+'%';\n        } else {\n          return null;\n        }\n      },\n      radialLabel: d => {\n        return null;//Object.keys(this.props.availableTokens).indexOf(d.label.toUpperCase());\n      },\n      theme:{\n        tooltip: {\n          container: {\n            display: 'none'\n          },\n        },\n        labels:{\n          text:{\n            fontSize:16,\n            fontWeight:500,\n            fontFamily: theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      radialLabelsLinkColor:{ from: 'color' },\n      radialLabelsLinkOffset:-parseInt(this.state.parentWidth*0.2),\n      margin: this.props.isMobile ? { top: 15, right: 25, bottom: 30, left: 25 } : { top: 30, right: 50, bottom: 60, left: 50 },\n      onMouseEnter:(data, e) => {\n        const selectedToken = data.id;\n        const selectedTokenConfig = selectedToken ? this.props.availableTokens[selectedToken] || this.functionsUtil.getGlobalConfig(['stats','tokens',selectedToken]) : null;\n        this.setState({\n          selectedToken,\n          selectedTokenConfig\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setState({\n          selectedToken:null,\n          selectedTokenConfig:null\n        });\n      },\n      legends:[\n        {\n          itemWidth: 60,\n          itemHeight: 18,\n          translateY: this.props.isMobile ? 25 : 50,\n          symbolSize: 10,\n          anchor: 'bottom',\n          direction: 'row',\n          itemTextColor: theme.colors.legend,\n          symbolShape: 'circle',\n          effects: [\n            {\n              on: 'hover',\n              style: {\n                itemTextColor: '#000'\n              }\n            }\n          ]\n        }\n      ]\n    };\n\n    const selectedToken = this.state.selectedToken !== null && this.state.portfolio[this.state.selectedToken] ? this.state.portfolio[this.state.selectedToken] : false;\n    const strategyIcon = this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'icon']);\n    const convertToken = this.state.selectedToken ? this.functionsUtil.getGlobalConfig(['stats','tokens',this.state.selectedToken,'conversionRateField']) : false;\n\n    return (\n      <Flex\n        width={1}\n      >\n        { \n          (this.state.totalFunds || selectedToken) && \n            <Flex\n              zIndex={0}\n              top={['32%','35%']}\n              left={['23%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              width={['55%','46%']}\n              position={'absolute'}\n              height={['40%','35%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                selectedToken ? (\n                  <>\n                    <AssetField\n                      fieldInfo={{\n                        name:'icon',\n                        props:{\n                          mb:1,\n                          height:'2.2em'\n                        }\n                      }}\n                      token={this.state.selectedToken}\n                      tokenConfig={this.state.selectedTokenConfig}\n                    />\n                    <SmartNumber\n                      unitProps={{\n                        ml:2,\n                        fontSize:4,\n                        fontWeight:3\n                      }}\n                      decimals={2}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      fontWeight={[3,4]}\n                      unit={ convertToken ? '$' : null}\n                      number={this.state.portfolio[this.state.selectedToken]}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      {this.state.selectedToken}\n                    </Text>\n                  </>\n                ) : (\n                  <>\n                    <Image\n                      mb={1}\n                      height={'2.2em'}\n                      src={strategyIcon}\n                    />\n                    <SmartNumber\n                      unit={'$'}\n                      unitProps={{\n                        ml:2,\n                        fontSize:4,\n                        fontWeight:3\n                      }}\n                      decimals={2}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      fontWeight={[3,4]}\n                      number={this.state.totalFunds}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      Total funds\n                    </Text>\n                  </>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          {...chartProps}\n          showLoader={true}\n          data={this.state.chartData}\n          parentId={this.props.parentId}\n          parentIdHeight={this.props.parentId}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default PortfolioDonut;\n","import CountUp from 'react-countup';\nimport { Flex, Loader } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TotalEarningsCounter extends Component {\n\n  state = {\n    earningsEnd:null,\n    earningsStart:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalEarnings();\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const styleChanged = JSON.stringify(prevProps.counterStyle) !== JSON.stringify(this.props.counterStyle);\n    if (styleChanged || themeModeChanged || mobileChanged){\n      const oldState = Object.assign({},this.state);\n      this.setState({\n        earningsEnd:null,\n        earningsStart:null\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  async loadTotalEarnings(){\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized){\n      return true;\n    }\n\n    const availableTokens = this.props.availableTokens || {};\n    const portfolio = this.props.portfolio || await this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account);\n\n    const earningsStart = portfolio.totalEarnings;\n    const earningsEnd = earningsStart.plus(portfolio.totalAmountLent.times(portfolio.avgAPY.div(100)));\n\n    this.setState({\n      earningsEnd,\n      earningsStart\n    });\n  }\n\n  render() {\n\n    const counterStyle = {\n      lineHeight:1,\n      color:this.props.theme.colors.copyColor,\n      fontFamily:this.props.theme.fonts.counter,\n      fontWeight: this.props.isMobile ? 600 : 700,\n      fontSize:this.props.isMobile ? '21px' : '1.7em',\n    };\n\n    // Replace props\n    if (this.props.counterStyle && Object.keys(this.props.counterStyle).length){\n      Object.keys(this.props.counterStyle).forEach(p => {\n        counterStyle[p] = this.props.counterStyle[p];\n      });\n    }\n\n    const unit = this.props.unit || '$ ';\n    const decimals = this.props.decimals || 8;\n\n    return this.state.earningsStart && this.state.earningsEnd ? (\n      <Flex\n      >\n        <CountUp\n          delay={0}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          decimals={decimals}\n          duration={31536000}\n          end={parseFloat(this.state.earningsEnd)}\n          start={parseFloat(this.state.earningsStart)}\n          formattingFn={ n => unit+this.functionsUtil.formatMoney(n,decimals) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              ref={countUpRef}\n              style={counterStyle}\n            />\n          )}\n        </CountUp>\n      </Flex>\n    ) : (\n      <Loader size={\"20px\"} />\n    );\n  }\n}\n\nexport default TotalEarningsCounter;\n","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport { Card, Flex, Image, Text } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\n\nclass EarningsEstimation extends Component {\n  state = {\n    tokensEarnings:null,\n    estimationStepsPerc:null,\n    estimationStepsOptions:null,\n    estimationStepsDefaultOption:null,\n    estimationSteps:{\n      0:{\n        'Month':{\n          perc:1/12,\n          width:1/3\n        },\n        '2 months':{\n          perc:1/6,\n          width:1/3\n        },\n        '3 months':{\n          perc:1/4,\n          width:1/3,\n          optionName:'3M'\n        }\n      },\n      25:{\n        '3 months':{\n          perc:3/12,\n          width:3/12\n        },\n        '8 months':{\n          perc:8/12,\n          width:5/12\n        },\n        'Year':{\n          perc:1,\n          width:4/12,\n          optionName:'1Y'\n        }\n      },\n      90:{\n        'Year':{\n          perc:1,\n          width:1/3,\n        },\n        '2 Years':{\n          perc:2,\n          width:1/3,\n        },\n        '5 Years':{\n          perc:5,\n          width:3/5,\n          optionName:'5Y'\n        }\n      }\n    }\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  setEstimationStepsPerc(estimationStepsPerc){\n    this.setState({\n      estimationStepsPerc\n    });\n  }\n\n  async loadEarnings(){\n    let stepsCount = {};\n    let tokensEarnings = {};\n    // let estimationStepsPerc = 0;\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const aggregatedEarnings = {\n      earnings:this.functionsUtil.BNify(0),\n      amountLent:this.functionsUtil.BNify(0),\n      earningsYear:this.functionsUtil.BNify(0),\n    };\n\n    await this.functionsUtil.asyncForEach(this.props.enabledTokens,async (token) => {\n      const tokenConfig = this.props.availableTokens[token];\n      const amountDeposited = await this.functionsUtil.getAmountDeposited(tokenConfig,this.props.account);\n\n      const [amountLent,avgBuyPrice,idleTokenPrice] = await Promise.all([\n        this.functionsUtil.convertTokenBalance(amountDeposited,token,tokenConfig,isRisk),\n        this.functionsUtil.getAvgBuyPrice([token],this.props.account),\n        this.functionsUtil.getIdleTokenPrice(tokenConfig)\n      ]);\n\n      const earningsPerc = idleTokenPrice.div(avgBuyPrice[token]).minus(1);\n      const earnings = amountLent.times(earningsPerc);\n\n      let earningsYear = 0;\n      let tokenAPY = 0;\n      const tokenAprs = await this.functionsUtil.getTokenAprs(tokenConfig);\n      if (tokenAprs && tokenAprs.avgApr !== null){\n        tokenAPY = tokenAprs.avgApy;\n        earningsYear = amountLent.times(tokenAPY.div(100));\n      }\n\n      const earningsPercStep = Math.floor(earnings.div(earningsYear).times(100));\n      \n      const possibleSteps = Object.keys(this.state.estimationSteps).filter(perc => perc<=earningsPercStep);\n      const maxPossibleStep = parseInt(possibleSteps.pop());\n\n      stepsCount[maxPossibleStep] = stepsCount[maxPossibleStep] ? stepsCount[maxPossibleStep]+1 : 1;\n\n      if (!this.functionsUtil.BNify(amountLent).isNaN() && !this.functionsUtil.BNify(idleTokenPrice).isNaN() && !this.functionsUtil.BNify(earnings).isNaN() && !this.functionsUtil.BNify(earningsYear).isNaN()){\n        tokensEarnings[token] = {\n          earnings,\n          amountLent,\n          earningsYear,\n          idleTokenPrice\n        };\n\n        // const earningsUSD = await this.functionsUtil.convertTokenBalance(earningsYearings,token,tokenConfig,isRisk);\n        // const amountLentUSD = await this.functionsUtil.convertTokenBalance(amountLent,token,tokenConfig,isRisk);\n        // const earningsYearUSD = await this.functionsUtil.convertTokenBalance(earningsYear,token,tokenConfig,isRisk);\n\n        aggregatedEarnings.earnings = aggregatedEarnings.earnings.plus(earnings);\n        aggregatedEarnings.amountLent = aggregatedEarnings.amountLent.plus(amountLent);\n        aggregatedEarnings.earningsYear = aggregatedEarnings.earningsYear.plus(earningsYear);\n      }\n    });\n\n    const maxCountStep = Object.keys(stepsCount).reduce( (maxCountStep,step) => {\n      const count = stepsCount[step];\n      if (count>maxCountStep.count){\n        maxCountStep.step = parseInt(step);\n        maxCountStep.count = parseInt(count);\n      }\n      return maxCountStep;\n    },{\n      step:0,\n      count:0\n    });\n\n    const estimationStepsPerc = maxCountStep.step || parseInt(Object.keys(this.state.estimationSteps)[1]);\n\n    const orderedTokensEarnings = {};\n    this.props.enabledTokens.forEach( token => {\n      if (tokensEarnings[token]){\n        orderedTokensEarnings[token] = tokensEarnings[token];\n      }\n    });\n\n    tokensEarnings = orderedTokensEarnings;\n\n    // Add USD aggregated earnings\n    if (Object.keys(tokensEarnings).length>1){\n      tokensEarnings['USD'] = aggregatedEarnings;\n    }\n\n    let estimationStepsDefaultOption = null;\n    const estimationStepsOptions = Object.keys(this.state.estimationSteps).map( step => {\n      const estimationStep = Object.values(this.state.estimationSteps[step]).pop();\n      const label = estimationStep.optionName ? estimationStep.optionName : Object.keys(this.state.estimationSteps[step]).pop();\n      const value = parseInt(step);\n      const option = { value, label };\n\n      if (value === estimationStepsPerc){\n        estimationStepsDefaultOption = option;\n      }\n      return option;\n    });\n\n    this.setState({\n      tokensEarnings,\n      estimationStepsPerc,\n      estimationStepsOptions,\n      estimationStepsDefaultOption,\n    });\n  }\n\n  render() {\n\n    if (!this.state.tokensEarnings){\n      return (\n        <FlexLoader\n          flexProps={{\n            flexDirection:'row',\n            minHeight:this.props.height\n          }}\n          loaderProps={{\n            size:'30px'\n          }}\n          textProps={{\n            ml:2\n          }}\n          text={'Loading estimations...'}\n        />\n      );\n    }\n\n    const estimationSteps = this.state.estimationSteps[this.state.estimationStepsPerc] ? this.state.estimationSteps[this.state.estimationStepsPerc] : this.state.estimationSteps[0];\n\n    return (\n      <Card\n        pr={0}\n        my={1}\n        width={1}\n        px={[3,4]}\n        py={[2,3]}\n        boxShadow={1}\n        borderRadius={2}\n        borderColor={'cardBorder'}\n        backgroundColor={'cardBg'}\n      >\n        <Flex\n          mt={2}\n          mb={3}\n          zIndex={9999}\n          justifyContent={'flex-end'}\n        >\n          <Flex\n            zIndex={9999}\n            width={[1,0.2]}\n            flexDirection={'column'}\n          >\n            <GenericSelector\n              innerProps={{\n                p:0,\n                px:1\n              }}\n              name={'estimation-step'}\n              options={this.state.estimationStepsOptions}\n              onChange={ v => this.setEstimationStepsPerc(v) }\n              defaultValue={this.state.estimationStepsDefaultOption}\n            />\n          </Flex>\n        </Flex>\n        {\n          Object.keys(this.state.tokensEarnings).map((token,tokenIndex) => {\n            const tokenConfig = this.props.availableTokens[token];\n            const tokenEarnings = this.state.tokensEarnings[token];\n            const estimationStepPerc = this.functionsUtil.BNify(Object.values(estimationSteps).pop().perc);\n            const finalEarnings = tokenEarnings.earningsYear.times(estimationStepPerc);\n            const cursorPerc = Math.min(1,parseFloat(tokenEarnings.earnings.div(finalEarnings)));\n            const tokenIcon = tokenConfig && tokenConfig.icon ? tokenConfig.icon :`images/tokens/${token}.svg`;\n            const tokenRGBColor = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'color','rgb']).join(',');\n            // console.log(tokenEarnings.earnings.toFixed(10),tokenEarnings.earningsYear.toFixed(10),finalEarnings.toFixed(10),cursorPerc.toFixed(10),estimationStepPerc.toFixed(10));\n            return (\n              <Flex\n                id={`asset-${token}`}\n                flexDirection={'row'}\n                key={`asset-${token}`}\n                borderTop={ token === 'USD' ? `1px solid ${this.props.theme.colors.divider}` : null }\n              >\n                <Flex\n                  width={[1,0.93]}\n                  position={'relative'}\n                >\n                  <Flex\n                    width={1}\n                    height={'100%'}\n                    position={'absolute'}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    <Flex\n                      width={[0.15,0.1]}\n                    >\n                    </Flex>\n                    <Flex\n                      width={[0.85,0.9]}\n                      height={'100%'}\n                      flexDirection={'row'}\n                    >\n                      {\n                        Object.keys(estimationSteps).map((label,estimateIndex) => {\n                          const estimationStep = estimationSteps[label];\n                          const estimationStepEarnings = tokenEarnings.earningsYear.times(this.functionsUtil.BNify(estimationStep.perc));\n                          let estimationStepEarningsFormatted = this.functionsUtil.formatMoney(estimationStepEarnings,this.props.isMobile ? 2 : estimationStepEarnings.lt(1) ? 3 : 2);\n                          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'conversionRateField']);\n                          if (conversionRateField){\n                            estimationStepEarningsFormatted = '$ '+estimationStepEarningsFormatted;\n                          }\n                          return (\n                            <Flex\n                              pr={2}\n                              justifyContent={'flex-end'}\n                              width={estimationStep.width}\n                              pt={ token === 'USD' ? 2 : null }\n                              key={`asset-estimate-${token}-${estimateIndex}`}\n                              borderRight={`1px solid ${this.props.theme.colors.divider}`}\n                            >\n                              {\n                                (token === 'USD' || (estimateIndex === Object.keys(estimationSteps).length-1)) && \n                                  <Text\n                                    fontWeight={3}\n                                    fontSize={[0,'1em']}\n                                    style={{\n                                      wordBreak:'break-all'\n                                    }}\n                                    color={tokenEarnings.earnings.gte(estimationStepEarnings) ? 'copyColor' : 'legend'}\n                                  >\n                                    {estimationStepEarningsFormatted}\n                                  </Text>\n                              }\n                            </Flex>\n                          );\n                        })\n                      }\n                    </Flex>\n                  </Flex>\n                  <Flex\n                    width={1}\n                    zIndex={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                    pt={ token === 'USD' ? ['2em','2.8em'] : '1.4em' }\n                    pb={ tokenIndex<Object.keys(this.state.tokensEarnings).length-1 ? '1em' : 0 }\n                  >\n                    <Flex\n                      width={[0.15,0.1]}\n                      justifyContent={['flex-start','flex-end']}\n                    >\n                      <Text\n                        pr={[0,2]}\n                        fontSize={[0,3]}\n                        fontWeight={[3,4]}\n                      >\n                        {token}\n                      </Text>\n                    </Flex>\n                    <Flex\n                      width={[0.85,0.9]}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      height={['20px','35px']}\n                      justifyContent={'flex-start'}\n                    >\n                      <Flex\n                        height={'100%'}\n                        width={cursorPerc}\n                        backgroundColor={'cardBg'}\n                      >\n                        <Flex\n                          height={'100%'}\n                          width={'100%'}\n                          borderRadius={['0 20px 20px 0','0 35px 35px 0']}\n                          style={{background:`linear-gradient(90deg, rgba(${tokenRGBColor},0) 0%, rgba(${tokenRGBColor},0.1) 30%, rgba(${tokenRGBColor},1) 100%)`}}\n                        ></Flex>\n                      </Flex>\n                      <Flex\n                        pl={2}\n                        width={'auto'}\n                        height={'100%'}\n                        alignItems={'center'}\n                        justifyContent={'flex-start'}\n                      >\n                        <Image src={tokenIcon} height={['1.4em','2.2em']} />\n                      </Flex>\n                      {\n                        <Flex\n                          pl={2}\n                          alignItems={'center'}\n                        >\n                          {\n                            token !== 'USD' ? (\n                              <AssetField\n                                {...this.props}\n                                token={token}\n                                tokenConfig={tokenConfig}\n                                fieldInfo={{\n                                  name:'earningsCounter',\n                                  props:{\n                                    decimals:this.props.isMobile ? 6 : 7,\n                                    maxPrecision:this.props.isMobile ? 9 : 10,\n                                    style:{\n                                      color:this.props.theme.colors.copyColor,\n                                      fontWeight:this.props.isMobile ? 500 : 700,\n                                      fontSize:this.props.isMobile ? '14px' : '22px',\n                                    }\n                                  }\n                                }}\n                              />\n                            ) : (\n                              <TotalEarningsCounter\n                                {...this.props}\n                                decimals={this.props.isMobile ? 6 : 7}\n                                maxPrecision={this.props.isMobile ? 9 : 10}\n                                counterStyle={{\n                                  color:this.props.theme.colors.copyColor,\n                                  fontWeight:this.props.isMobile ? 500 : 700,\n                                  fontFamily:this.props.theme.fonts.sansSerif,\n                                  fontSize:this.props.isMobile ? '14px' : '22px',\n                                }}\n                              />\n                            )\n                          }\n                        </Flex>\n                      }\n                    </Flex>\n                  </Flex>\n                </Flex>\n                {\n                  !this.props.isMobile && \n                    <Flex width={0.07} alignItems={'flex-start'} justifyContent={'flex-end'}>\n                    </Flex>\n                }\n              </Flex>\n            )\n          })\n        }\n        <Flex\n          flexDirection={'row'}\n        >\n          <Flex\n            width={[1,0.93]}\n            position={'relative'}\n          >\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'center'}\n            >\n              <Flex width={[0.15,0.1]}></Flex>\n              <Flex\n                width={[0.85,0.9]}\n                flexDirection={'row'}\n              >\n                {\n                  Object.keys(estimationSteps).map((estimationLabel,estimateIndex) => {\n                    const estimationStep = estimationSteps[estimationLabel];\n                    return (\n                      <Flex\n                        pt={2}\n                        pr={[1,2]}\n                        justifyContent={'flex-end'}\n                        width={estimationStep.width}\n                        key={`estimate-label-${estimateIndex}`}\n                        borderRight={`1px solid ${this.props.theme.colors.divider}`}\n                      >\n                        <Text\n                          fontWeight={3}\n                          fontSize={[0,2]}\n                          color={'legend'}\n                        >\n                          {estimationLabel}\n                        </Text>\n                      </Flex>\n                    );\n                  })\n                }\n              </Flex>\n            </Flex>\n          </Flex>\n          {\n            !this.props.isMobile && \n              <Flex width={0.07} alignItems={'flex-start'} justifyContent={'center'}>\n                <Text fontWeight={4} fontSize={3}></Text>\n              </Flex>\n          }\n        </Flex>\n      </Card>\n    );\n  }\n}\n\nexport default EarningsEstimation;\n","import React, { Component } from 'react';\nimport { Flex, Icon, Text, Image } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass DashboardIconButton extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          pr:2,\n          py:[2,3],\n          pl:[2,3],\n        }}\n        isActive={false}\n        isInteractive={true}\n        handleClick={this.props.handleClick}\n      >\n        <Flex\n          height={'100%'}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'center'}\n        > \n          <Flex\n            px={[1,0]}\n          >\n            {\n              this.props.icon ? (\n                <Icon\n                  name={this.props.icon}\n                  size={this.props.isMobile ? '1.8em' : '3em'}\n                  color={this.props.iconColor ? this.props.iconColor : 'redeem'}\n                />\n              ) : this.props.image && (\n                <Image\n                  src={this.props.image}\n                  width={this.props.isMobile ? '1.8em' : '2.7em'}\n                  height={this.props.isMobile ? '1.8em' : '2.7em'}\n                />\n              )\n            }\n          </Flex>\n          <Flex\n            ml={[2,3]}\n            flexDirection={'column'}\n            alignItems={'flex-start'}\n            justifyContent={'center'}\n          >\n            <Text\n              fontWeight={3}\n              fontSize={[1,3]}\n            >\n              {this.props.title}\n            </Text>\n            <Text\n              fontWeight={2}\n              fontSize={[0,2]}\n              color={'cellText'}\n            >\n              {this.props.text}\n            </Text>\n          </Flex>\n          <Icon\n            align={'center'}\n            color={'cellText'}\n            name={'KeyboardArrowRight'}\n            size={this.props.isMobile ? '1.8em' : '2.5em'}\n          />\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default DashboardIconButton;\n","import CountUp from 'react-countup';\nimport { Box, Loader } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TotalBalanceCounter extends Component {\n\n  state = {\n    counterEnd:null,\n    counterStart:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalEarnings();\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const styleChanged = JSON.stringify(prevProps.counterStyle) !== JSON.stringify(this.props.counterStyle);\n    if (styleChanged || themeModeChanged || mobileChanged){\n      const oldState = Object.assign({},this.state);\n      this.setState({\n        counterEnd:null,\n        counterStart:null\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  async loadTotalEarnings(){\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized){\n      return true;\n    }\n\n    const availableTokens = this.props.availableTokens || {};\n    const portfolio = this.props.portfolio || await this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account);\n\n    const counterStart = portfolio.totalAmountLent.plus(portfolio.totalEarnings);\n    const counterEnd = counterStart.plus(counterStart.times(portfolio.avgAPY.div(100)));\n\n    this.setState({\n      counterEnd,\n      counterStart\n    });\n  }\n\n  render() {\n\n    const counterStyle = {\n      lineHeight:1,\n      color:this.props.theme.colors.copyColor,\n      fontFamily:this.props.theme.fonts.counter,\n      fontWeight: this.props.isMobile ? 600 : 700,\n      fontSize:this.props.isMobile ? '21px' : '1.7em',\n    };\n\n    // Replace props\n    if (this.props.counterStyle && Object.keys(this.props.counterStyle).length){\n      Object.keys(this.props.counterStyle).forEach(p => {\n        counterStyle[p] = this.props.counterStyle[p];\n      });\n    }\n\n    const decimals = this.props.decimals || 8;\n\n    return this.state.counterStart && this.state.counterEnd ? (\n      <Box\n        width={1}\n      >\n        <CountUp\n          delay={0}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          decimals={decimals}\n          duration={31536000}\n          end={parseFloat(this.state.counterEnd)}\n          start={parseFloat(this.state.counterStart)}\n          formattingFn={ n => '$ '+this.functionsUtil.formatMoney(n,decimals) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              ref={countUpRef}\n              style={counterStyle}\n            />\n          )}\n        </CountUp>\n      </Box>\n    ) : (\n      <Loader size={\"20px\"} />\n    );\n  }\n}\n\nexport default TotalBalanceCounter;\n","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetsList from '../AssetsList/AssetsList';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport PortfolioDonut from '../PortfolioDonut/PortfolioDonut';\nimport ActiveCoverages from '../ActiveCoverages/ActiveCoverages';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport PortfolioEquity from '../PortfolioEquity/PortfolioEquity';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport EarningsEstimation from '../EarningsEstimation/EarningsEstimation';\nimport { Flex, Box, Heading, Text, Tooltip, Icon, Loader } from \"rimble-ui\";\nimport DashboardIconButton from '../DashboardIconButton/DashboardIconButton';\nimport TotalBalanceCounter from '../TotalBalanceCounter/TotalBalanceCounter';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\n\n// const env = process.env;\n\nclass StrategyPage extends Component {\n\n  state = {\n    portfolio:null,\n    depositedTokens:[],\n    tokensToMigrate:{},\n    aggregatedValues:[],\n    remainingTokens:null,\n    batchedDeposits:null,\n    portfolioLoaded:false,\n    availableGovTokens:null,\n    portfolioEquityStartDate:null,\n    batchedDepositsAvailableTokens:null,\n    portfolioEquityQuickSelection:'week'\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    await this.loadPortfolio();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const availableTokensChanged = JSON.stringify(prevProps.availableTokens) !== JSON.stringify(this.props.availableTokens);\n    if (accountChanged || availableTokensChanged){\n      // console.log('StrategyPage - availableTokensChanged',availableTokensChanged);\n      this.setState({\n        portfolioLoaded:false\n      },() => {\n        this.loadPortfolio();\n      });\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  setPortfolioEquityQuickSelection(portfolioEquityQuickSelection){\n    this.setStateSafe({\n      portfolioEquityQuickSelection\n    });\n  }\n\n  async loadPortfolio(){\n    const availableTokens = this.props.availableTokens || {};\n\n    if (this.state.portfolioLoaded){\n      return false;\n    }\n\n    // Load portfolio if account is set\n    if (this.props.account){\n      const newState = {};\n      const firstBlockNumber = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n\n      // Load data\n      const [\n        batchedDeposits,\n        tokensToMigrate,\n        portfolio\n      ] = await Promise.all([\n        // Load claimable batches\n        [],//this.functionsUtil.getBatchedDeposits(this.props.account),\n        // Load tokens to be migrated\n        this.functionsUtil.getTokensToMigrate(this.props.selectedStrategy),\n        // Load portfolio\n        this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account),\n        // Load and process Etherscan Txs\n        this.functionsUtil.getEtherscanTxs(this.props.account,firstBlockNumber,'latest',Object.keys(availableTokens))\n      ]);\n\n      newState.portfolio = portfolio;\n\n      newState.batchedDeposits = batchedDeposits && Object.keys(batchedDeposits).length>0 ? batchedDeposits : null;\n\n      if (newState.batchedDeposits){\n        newState.batchedDepositsAvailableTokens = Object.keys(newState.batchedDeposits).reduce( (batchedDepositsAvailableTokens,token) => {\n          const batchInfo = newState.batchedDeposits[token];\n          const tokenConfig = this.functionsUtil.getGlobalConfig(['tools','batchDeposit','props','availableTokens',token]);\n          if (tokenConfig.strategy === this.props.selectedStrategy){\n            switch (batchInfo.status){\n              case 'pending':\n                tokenConfig.statusIcon = 'Timelapse';\n                tokenConfig.statusIconProps = {\n                  color:this.props.theme.colors.transactions.status.pending\n                };\n              break;\n              case 'executed':\n                tokenConfig.statusIcon = 'Done';\n                tokenConfig.statusIconProps = {\n                  color:this.props.theme.colors.transactions.status.completed\n                };\n              break;\n              default:\n              break;\n            }\n            tokenConfig.token = token;\n            tokenConfig.status = batchInfo.status;\n            tokenConfig.deposited = batchInfo.batchDeposits;\n            tokenConfig.redeemable = batchInfo.batchRedeems;\n            batchedDepositsAvailableTokens[tokenConfig.baseToken] = tokenConfig;\n          }\n          return batchedDepositsAvailableTokens;\n        },{});\n      }\n\n\n      if (portfolio){\n        const depositedTokens = Object.keys(portfolio.tokensBalance).filter(token => ( this.functionsUtil.BNify(portfolio.tokensBalance[token].idleTokenBalance).gt(0) ));\n\n        newState.depositedTokens = depositedTokens;\n\n        const isRisk = this.props.selectedStrategy === 'risk';\n\n        let avgAPY = this.functionsUtil.BNify(0);\n        let avgScore = this.functionsUtil.BNify(0);\n        let totalAmountLent = this.functionsUtil.BNify(0);\n        let totalBalanceWithScore = this.functionsUtil.BNify(0);\n\n        await this.functionsUtil.asyncForEach(depositedTokens,async (token) => {\n          const tokenConfig = availableTokens[token];\n\n          const [\n            tokenAprs,\n            tokenScore,\n            amountLent,\n          ] = await Promise.all([\n            this.functionsUtil.getTokenAprs(tokenConfig),\n            this.functionsUtil.getTokenScore(tokenConfig,isRisk),\n            this.functionsUtil.getAmountDeposited(tokenConfig,this.props.account)\n          ]);\n\n          const amountLentToken = await this.functionsUtil.convertTokenBalance(amountLent,token,tokenConfig,isRisk);\n\n          const tokenBalance = portfolio.tokensBalance[token].tokenBalance;\n          const tokenWeight = tokenBalance.div(portfolio.totalBalance);\n          const tokenAPY = tokenAprs.avgApy && !this.functionsUtil.BNify(tokenAprs.avgApy).isNaN() ? this.functionsUtil.BNify(tokenAprs.avgApy) : this.functionsUtil.BNify(0);\n\n          if (!tokenAPY.isNaN()){\n            avgAPY = avgAPY.plus(tokenAPY.times(tokenWeight));\n          }\n\n          if (!tokenScore.isNaN() && tokenScore.gt(0)){\n            avgScore = avgScore.plus(tokenScore.times(tokenBalance));\n            totalBalanceWithScore = totalBalanceWithScore.plus(tokenBalance);\n          }\n\n          if (amountLentToken){\n            totalAmountLent = totalAmountLent.plus(amountLentToken);\n          }\n        });\n\n        if (!totalBalanceWithScore.isNaN() && totalBalanceWithScore.gt(0)){\n          avgScore = avgScore.div(totalBalanceWithScore);\n        }\n\n        // console.log('avgAPY',avgAPY.toFixed());\n\n        // Add gov tokens to earnings\n        const govTokensTotalBalance = await this.functionsUtil.getGovTokensUserTotalBalance(this.props.account,availableTokens,'DAI');\n        const govTokensUserBalance = await this.functionsUtil.getGovTokensUserBalances(this.props.account,availableTokens,null);\n        const govTokensTotalBalanceTooltip = govTokensUserBalance ? Object.keys(govTokensUserBalance).map( govToken => {\n          const balance = govTokensUserBalance[govToken];\n          if (balance.gt(0)){\n            return `+${balance.toFixed(2)} ${govToken}`;\n          } else {\n            return null;\n          }\n        }).filter(v => (v !== null)) : null;\n\n        newState.avgAPY = avgAPY;\n        newState.avgScore = avgScore;\n        newState.govTokensTotalBalance = govTokensTotalBalance;\n        newState.govTokensTotalBalanceTooltip = govTokensTotalBalanceTooltip;\n      }\n\n      newState.tokensToMigrate = tokensToMigrate;\n      newState.portfolioLoaded = true;\n\n      const remainingTokens = Object.keys(availableTokens).filter(token => (!newState.depositedTokens.includes(token) && !Object.keys(newState.tokensToMigrate).includes(token)) );\n      newState.remainingTokens = remainingTokens;\n\n      // Portfolio loaded\n      this.setStateSafe(newState);\n    // Show available assets for not logged users\n    } else {\n      this.setStateSafe({\n        tokensToMigrate:{},\n        depositedTokens:[],\n        portfolioLoaded:true,\n        remainingTokens:Object.keys(availableTokens),\n      });\n    }\n  }\n\n  render(){\n    const viewOnly = this.props.connectorName === 'custom';\n    const govTokens = this.functionsUtil.getGlobalConfig(['govTokens']);\n    const apyLong = this.functionsUtil.getGlobalConfig(['messages','apyLong']);\n    const riskScore = this.functionsUtil.getGlobalConfig(['messages','riskScore']);\n    const yieldFarming = this.functionsUtil.getGlobalConfig(['messages','yieldFarming']);\n    const nexusMutualConfig = this.functionsUtil.getGlobalConfig(['tools','nexusMutual']);\n    const batchDepositConfig = this.functionsUtil.getGlobalConfig(['tools','batchDeposit']);\n\n    return (\n      <Box\n        width={1}\n      >\n        <Title\n          mb={3}\n        >\n          {this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'title'])} strategy\n        </Title>\n        {\n          !this.state.portfolioLoaded ? (\n            <FlexLoader\n              textProps={{\n                textSize:4,\n                fontWeight:2\n              }}\n              loaderProps={{\n                mb:3,\n                size:'40px'\n              }}\n              flexProps={{\n                minHeight:'50vh',\n                flexDirection:'column'\n              }}\n              text={'Loading portfolio...'}\n            />\n          ) : (\n            <Box\n              width={1}\n            >\n              {\n                this.props.account && this.state.depositedTokens.length>0 ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      mb={3}\n                      width={1}\n                      mt={[2,0]}\n                      alignItems={'center'}\n                      justifyContent={'center'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.avgAPY ? (\n                                <Text\n                                  lineHeight={1}\n                                  fontWeight={[3,4]}\n                                  color={'copyColor'}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: this.state.avgAPY.toFixed(2)+'<small>%</small>' }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Avg APY\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','apyLong'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio ? (\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <TotalBalanceCounter\n                                    decimals={5}\n                                    {...this.props}\n                                    portfolio={this.state.portfolio}\n                                  />\n                                  <Flex\n                                    width={1}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'center'}\n                                  >\n                                    <Flex\n                                      width={0.45}\n                                      alignItems={'center'}\n                                      justifyContent={'flex-end'}\n                                    >\n                                      <Text\n                                        fontSize={1}\n                                        fontWeight={3}\n                                        fontFamily={this.props.theme.fonts.counter}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >\n                                        +{this.state.portfolio.totalEarningsPerc.toFixed(2)}%\n                                      </Text>\n                                    </Flex>\n                                    <Text\n                                      mx={1}\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      fontFamily={this.props.theme.fonts.counter}\n                                      color={this.props.theme.colors.transactions.status.completed}\n                                    >|</Text>\n                                    <Flex\n                                      width={0.45}\n                                      alignItems={'center'}\n                                      justifyContent={'flex-start'}\n                                    >\n                                      <TotalEarningsCounter\n                                        {...this.props}\n                                        unit={'+$'}\n                                        decimals={4}\n                                        counterStyle={{\n                                          fontSize:14,\n                                          fontWeight:600,\n                                          color:this.props.theme.colors.transactions.status.completed\n                                        }}\n                                        portfolio={this.state.portfolio}\n                                      />\n                                    </Flex>\n                                  </Flex>\n                                </Flex>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Total Balance\n                              </Text>\n                              {\n                                this.state.govTokensTotalBalance && (\n                                  <Tooltip\n                                    placement={'bottom'}\n                                    message={'Total Balance does not include accrued governance tokens: '+(this.state.govTokensTotalBalance && this.state.govTokensTotalBalance.gt(0) ? ` (${this.state.govTokensTotalBalanceTooltip.join(' / ')})` : '')}\n                                  >\n                                    <Icon\n                                      ml={2}\n                                      name={\"Info\"}\n                                      size={'1em'}\n                                      color={'cellTitle'}\n                                    />\n                                  </Tooltip>\n                                )\n                              }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.avgScore ? (\n                                <Text\n                                  lineHeight={1}\n                                  fontWeight={[3,4]}\n                                  color={'copyColor'}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: this.state.avgScore.toFixed(2) }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Avg Risk Score\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','riskScoreShort'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      width={1}\n                      id={\"portfolio-charts\"}\n                      justifyContent={'space-between'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        mb={[3,0]}\n                        width={[1,0.328]}\n                        flexDirection={'column'}\n                        id={\"portfolio-composition\"}\n                      >\n                        <DashboardCard\n                          title={'Composition'}\n                          titleProps={ !this.props.isMobile ? {\n                            style:{\n                              minHeight:'39px'\n                            }\n                          } : null}\n                        >\n                          <PortfolioDonut\n                            {...this.props}\n                            parentId={'portfolio-composition'}\n                          />\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,0.666]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard>\n                          <Flex\n                            pt={[3,4]}\n                            px={[3,4]}\n                            aligItems={'center'}\n                            flexDirection={['column','row']}\n                          >\n                            <Flex\n                              width={[1,0.7]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-start'}\n                            >\n                              <Title\n                                fontWeight={4}\n                                fontSize={[2,3]}\n                                textAlign={'left'}\n                              >\n                                Performance\n                              </Title>\n                            </Flex>\n                            <Flex\n                              mt={[2,0]}\n                              width={[1,0.3]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-end'}\n                            >\n                              <GenericSelector\n                                innerProps={{\n                                  p:0,\n                                  px:1\n                                }}\n                                defaultValue={\n                                  {value:'week',label:'1W'}\n                                }\n                                name={'performance-time'}\n                                options={[\n                                  {value:'week',label:'1W'},\n                                  {value:'month',label:'1M'},\n                                  {value:'month3',label:'3M'},\n                                  {value:'month6',label:'6M'},\n                                  {value:'all',label:'MAX'},\n                                ]}\n                                onChange={ v => this.setPortfolioEquityQuickSelection(v) }\n                              />\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            ml={[0,3]}\n                            aligItems={'center'}\n                            justifyContent={'center'}\n                            id={\"portfolio-performance\"}\n                          >\n                            <PortfolioEquity\n                              {...this.props}\n                              enabledTokens={[]}\n                              parentId={'portfolio-performance'}\n                              parentIdHeight={'portfolio-composition'}\n                              quickDateSelection={this.state.portfolioEquityQuickSelection}\n                              frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n                            />\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Flex\n                    mb={3}\n                    mx={'auto'}\n                    width={[1,0.8]}\n                    aligItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      fontWeight={2}\n                      fontSize={[1,2]}\n                      textAlign={'center'}\n                    >\n                      {\n                        this.props.isMobile ?\n                          this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'descShort'])\n                        :\n                          this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'descLong'])\n                      }\n                    </Text>\n                  </Flex>\n                )\n              }\n              {\n                !viewOnly && this.state.depositedTokens.length>0 && this.props.account && nexusMutualConfig.enabled && (\n                  <Flex\n                    mt={3}\n                    width={1}\n                    id={\"tools\"}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      pb={2}\n                      width={1}\n                      mb={[2,3]}\n                      borderColor={'divider'}\n                      borderBottom={'1px solid transparent'}\n                    >\n                      <Heading.h4\n                        fontSize={[2,4]}\n                        fontWeight={[3,4]}\n                      >\n                        Tools\n                      </Heading.h4>\n                    </Flex>\n                    <Flex\n                      flexDirection={['column','row']}\n                    >\n                      {\n                        ['addFunds','nexusMutual','tokenSwap'].map( (toolName,toolIndex) => {\n                          const toolConfig = this.functionsUtil.getGlobalConfig(['tools',toolName]);\n                          return (\n                            <Flex\n                              width={[1,1/3]}\n                              key={`tool_${toolIndex}`}\n                              mb={toolIndex<2 ? [2,0] : 0}\n                              pr={toolIndex<2 ? [0,3] : 0}\n                            >\n                              <DashboardIconButton\n                                {...this.props}  \n                                icon={toolConfig.icon}\n                                text={toolConfig.desc}\n                                image={toolConfig.image}\n                                title={toolConfig.label}\n                                handleClick={ e => this.props.goToSection(`tools/${toolConfig.route}`) }\n                              />\n                            </Flex>\n                          );\n                        })\n                      }\n                    </Flex>\n                  </Flex>\n                )\n              }\n              {\n                nexusMutualConfig.enabled && this.state.portfolio && this.state.portfolio.totalBalance.gt(0) && (\n                  <Flex\n                    width={1}\n                    id={'active-coverages'}\n                    flexDirection={'column'}\n                  >\n                    <ActiveCoverages\n                      {...this.props}\n                      title={'Coverage'}\n                      titleProps={{\n                        my:4\n                      }}\n                    />\n                  </Flex>\n                )\n              }\n              {\n                this.state.batchedDeposits && (\n                  <Flex\n                    width={1}\n                    mb={[0,3]}\n                    id={'batched-deposits'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Batched Deposits</Title>\n                    <Flex\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <AssetsList\n                        enabledTokens={Object.keys(this.state.batchedDepositsAvailableTokens)}\n                        cols={[\n                          {\n                            title:'TOKEN',\n                            props:{\n                              width:[0.3,0.2]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'DEPOSITED',\n                            props:{\n                              width:[0.33, 0.21],\n                            },\n                            fields:[\n                              {\n                                name:'custom',\n                                type:'number',\n                                path:['deposited'],\n                                props:{\n                                  decimals: 4\n                                }\n                              },\n                              {\n                                name:'tokenName',\n                                props:{\n                                  ml:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'REDEEMABLE',\n                            props:{\n                              width:[0.44,0.23],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                name:'custom',\n                                type:'number',\n                                path:['redeemable'],\n                                props:{\n                                  decimals: 4\n                                }\n                              },\n                              {\n                                type:'text',\n                                name:'custom',\n                                path:['token'],\n                                props:{\n                                  ml:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'STATUS',\n                            props:{\n                              width:[0.26,0.19],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                type:'icon',\n                                mobile:false,\n                                name:'custom',\n                                path:['statusIcon'],\n                                props:{\n                                  mr:2,\n                                  size:this.props.isMobile ? '1.2em' : '1.8em'\n                                }\n                              },\n                              {\n                                name:'custom',\n                                path:['status'],\n                                props:{\n                                  style:{\n                                    textTransform:'capitalize'\n                                  }\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[0.35,0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label:'Claim',\n                                funcProps:{\n                                  disabled:(props) => (props.tokenConfig.status === 'pending')\n                                },\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'migrate',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.goToSection(`tools/${batchDepositConfig.route}/${props.tokenConfig.token}`)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                        availableTokens={this.state.batchedDepositsAvailableTokens}\n                      />\n                    </Flex>\n                  </Flex>\n                )\n              }\n              <Flex\n                width={1}\n                id={'available-assets'}\n                flexDirection={'column'}\n                mb={!this.state.depositedTokens.length ? 4 : 0}\n              >\n                {\n                  (this.state.depositedTokens.length>0 || Object.keys(this.state.tokensToMigrate).length>0 || this.state.remainingTokens.length>0 ) &&\n                    <Title my={[3,4]}>Available assets</Title>\n                }\n                <Flex width={1} flexDirection={'column'}>\n                  {\n                    Object.keys(this.state.tokensToMigrate).length>0 &&\n                    <Flex\n                      width={1}\n                      mb={[3,4]}\n                      id={\"migrate-assets\"}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Assets to migrate\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={Object.keys(this.state.tokensToMigrate)}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.15]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account !== null,\n                            props:{\n                              width:[0.21, 0.12],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.29,0.15],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                }\n                              },\n                            ]\n                          },\n                          {\n                            title:'SCORE',\n                            desc:riskScore,\n                            props:{\n                              width:[0.21,0.12],\n                            },\n                            fields:[\n                              {\n                                name:'score'\n                              }\n                            ]\n                          },\n                          {\n                            title:'BALANCE',\n                            mobile:false,\n                            props:{\n                              width:[0.16,0.14],\n                            },\n                            parentProps:{\n                              width:1,\n                              pr:[2,4]\n                            },\n                            fields:[\n                              {\n                                name:'amountToMigrate',\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.15],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens'\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[ this.props.account === null ? 0.29 : 0 ,0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label: 'Migrate',\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'migrate',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                  {\n                  this.state.depositedTokens.length>0 &&\n                    <Flex\n                      mb={ this.state.remainingTokens.length>0 ? [3,4] : 0 }\n                      width={1}\n                      id={\"deposited-assets\"}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Deposited assets\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={this.state.depositedTokens}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.13]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            mobile:false,\n                            props:{\n                              width:[0.12,0.09],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.30,0.14],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                }\n                              },\n                            ]\n                          },\n                          {\n                            title:'SCORE',\n                            desc:riskScore,\n                            props:{\n                              width:[0.21,0.10],\n                            },\n                            parentProps:{\n                              alignItems:['center','flex-start'],\n                            },\n                            fields:[\n                              {\n                                name:'score',\n                              }\n                            ]\n                          },\n                          {\n                            title:'DEPOSITED',\n                            props:{\n                              width:[0.22,0.13],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                name:'amountLent'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.11],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'EARNINGS',\n                            props:{\n                              width:[0.15,0.13],\n                              textAlign:'center'\n                            },\n                            parentProps:{\n                              alignItems:'center',\n                              flexDirection:'column',\n                            },\n                            fields:[\n                              {\n                                name:'earnings',\n                                props:{\n                                  decimals:3\n                                }\n                              },\n                              {\n                                name:'earningsPerc',\n                                showLoader:false,\n                                showDirection:false,\n                                props:{\n                                  fontSize:0,\n                                  decimals:3\n                                }\n                              }\n                            ]\n                          },\n                          /*\n                          {\n                            title:'EARNINGS %',\n                            props:{\n                              width:[0.27,0.14],\n                            },\n                            fields:[\n                              {\n                                name:'earningsPerc'\n                              }\n                            ]\n                          },\n                          */\n                          {\n                            title:'',\n                            mobile:false,\n                            props:{\n                              width:0.17,\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label:'Manage',\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'redeem',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                  {\n                    this.state.remainingTokens.length>0 &&\n                    <Flex id=\"remaining-assets\" width={1} flexDirection={'column'}>\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Available assets\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={this.state.remainingTokens}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.13]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account !== null,\n                            props:{\n                              width:[0.21, 0.10],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.31,this.state.depositedTokens.length>0 ? 0.14 : 0.14],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                }\n                              },\n                            ]\n                          },\n                          {\n                            title:'SCORE',\n                            desc:riskScore,\n                            props:{\n                              width:[0.22,0.10],\n                            },\n                            fields:[\n                              {\n                                name:'score'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.11],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APR LAST WEEK',\n                            mobile:false,\n                            props:{\n                              width:0.25,\n                            },\n                            parentProps:{\n                              width:1,\n                              pr:[2,4]\n                            },\n                            fields:[\n                              {\n                                name:'aprChart',\n                                style:{\n                                  overflow:'visible',\n                                },\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[ this.props.account === null ? 0.26 : 0 , 0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label: (props) => {\n                                  return Object.keys(this.state.tokensToMigrate).includes(props.token) ? 'Migrate' : 'Deposit';\n                                },\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                },\n                                funcProps:{\n                                  mainColor: (props) => {\n                                    return Object.keys(this.state.tokensToMigrate).includes(props.token) ? 'migrate' : 'deposit'\n                                  }\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                </Flex>\n              </Flex>\n              {\n                this.state.depositedTokens.length>0 &&\n                  <Flex\n                    width={1}\n                    id={\"yield-farming\"}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Yield Farming</Title>\n                    <AssetsList\n                      enabledTokens={Object.keys(govTokens).filter( govToken => govTokens[govToken].enabled )}\n                      cols={[\n                        {\n                          title:'TOKEN',\n                          props:{\n                            width:[0.3,0.15]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:2,\n                                height:['1.4em','2.3em']\n                              }\n                            },\n                            {\n                              name:'tokenName'\n                            }\n                          ]\n                        },\n                        {\n                          mobile:false,\n                          title:'BALANCE',\n                          props:{\n                            width:[0.33, 0.25],\n                          },\n                          fields:[\n                            {\n                              name:'tokenBalance',\n                              props:{\n                                decimals: this.props.isMobile ? 6 : 8\n                              }\n                            }\n                          ]\n                        },\n                        {\n                          title:'REDEEMABLE',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','govTokenRedeemableBalance']),\n                          props:{\n                            width:[0.35,0.30],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'redeemableBalance',\n                              props:{\n                                decimals: this.props.isMobile ? 6 : 8\n                              }\n                            },\n                          ]\n                        },\n                        {\n                          title:'DISTRIBUTION',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','userDistributionSpeed']),\n                          props:{\n                            width:[0.35,0.30],\n                          },\n                          fields:[\n                            {\n                              name:'userDistributionSpeed',\n                              props:{\n                                decimals:6\n                              }\n                            }\n                          ]\n                        },\n                        /*\n                        {\n                          mobile:false,\n                          title:'APR',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','govTokenApr']),\n                          props:{\n                            width:[0.2,0.15],\n                          },\n                          fields:[\n                            {\n                              name:'apr',\n                            }\n                          ]\n                        },\n                        {\n                          title:'TOKEN PRICE',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','tokenPrice']),\n                          mobile:false,\n                          props:{\n                            width: 0.17,\n                          },\n                          parentProps:{\n                            width:1,\n                            pr:[2,4]\n                          },\n                          fields:[\n                            {\n                              name:'tokenPrice',\n                              props:{\n                                unit:'$',\n                                unitPos:'left',\n                                unitProps:{\n                                  mr:1,\n                                  fontWeight:3,\n                                  fontSize:[0,2],\n                                  color:'cellText'\n                                }\n                              }\n                            }\n                          ]\n                        },\n                        */\n                      ]}\n                      {...this.props}\n                      availableTokens={govTokens}\n                    />\n                  </Flex>\n              }\n              {\n                this.state.depositedTokens.length>0 &&\n                  <Flex\n                    width={1}\n                    id=\"earnings-estimation\"\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Estimated earnings</Title>\n                    <EarningsEstimation\n                      {...this.props}\n                      enabledTokens={this.state.depositedTokens}\n                    />\n                  </Flex>\n              }\n              {\n                this.props.account && this.state.depositedTokens.length>0 && \n                  <Flex\n                    mb={[3,4]}\n                    width={1}\n                    id={'transactions'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Transactions</Title>\n                    <TransactionsList\n                      {...this.props}\n                      enabledTokens={[]}\n                      cols={[\n                        {\n                          title: this.props.isMobile ? '' : 'HASH',\n                          props:{\n                            width:[0.15,0.24]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              name:'hash',\n                              mobile:false\n                            }\n                          ]\n                        },\n                        {\n                          title:'ACTION',\n                          mobile:false,\n                          props:{\n                            width:0.15,\n                          },\n                          fields:[\n                            {\n                              name:'action'\n                            }\n                          ]\n                        },\n                        {\n                          title:'DATE',\n                          props:{\n                            width:[0.32,0.23],\n                          },\n                          fields:[\n                            {\n                              name:'date'\n                            }\n                          ]\n                        },\n                        {\n                          title:'STATUS',\n                          props:{\n                            width:[0.18,0.22],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'statusIcon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'status'\n                            }\n                          ]\n                        },\n                        {\n                          title:'AMOUNT',\n                          props:{\n                            width:0.19,\n                          },\n                          fields:[\n                            {\n                              name:'amount'\n                            },\n                          ]\n                        },\n                        {\n                          title:'ASSET',\n                          props:{\n                            width:[0.15,0.20],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'tokenIcon',\n                              props:{\n                                mr:[0,2],\n                                height:['1.4em','1.6em']\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'tokenName'\n                            },\n                          ]\n                        },\n                      ]}\n                    />\n                  </Flex>\n              }\n            </Box>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default StrategyPage;","/*\n// batchDeposits[user][batchId] = amount\nmapping (address => mapping (uint256 => uint256)) public batchDeposits;\nmapping (uint256 => uint256) batchTotals; // in idleToken\nmapping (uint256 => uint256) batchRedeemedTotals; // in newIdleToken\n\nuint256 public currBatch;\naddress public idleToken;\naddress public newIdleToken;\naddress public underlying;\n\nfunction deposit() external\nfunction withdraw(uint256 batchId) external\n*/\n\nimport Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TransactionField from '../TransactionField/TransactionField';\nimport { Flex, Box, Text, Icon, Link, Checkbox, Tooltip } from \"rimble-ui\";\n\nclass BatchDeposit extends Component {\n\n  state = {\n    canClaim:false,\n    batchTotals:{},\n    canDeposit:true,\n    action:'deposit',\n    batchDeposits:{},\n    tokenConfig:null,\n    processing:{\n      execute:{\n        txHash:null,\n        loading:false\n      },\n      claim:{\n        txHash:null,\n        loading:false\n      },\n    },\n    usePermit:false,\n    batchRedeems:{},\n    lastExecution:null,\n    permitEnabled:true,\n    hasDeposited:false,\n    permitSigned:false,\n    selectedToken:null,\n    showPermitBox:false,\n    currBatchIndex:null,\n    batchCompleted:false,\n    claimSucceeded:false,\n    availableTokens:null,\n    selectedStrategy:null,\n    componentLoaded:false,\n    executeSucceeded:false,\n    migrationEnabled:false,\n    migrationSucceeded:false,\n    selectedTokenConfig:null,\n    availableStrategies:null,\n    batchDepositEnabled:false,\n    migrationContractApproved:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadStrategies();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      this.setState({\n        componentLoaded:false\n      },async () => {\n        await this.loadTokens();\n      });\n    }\n\n    const selectedStrategyChanged = prevState.selectedStrategy !== this.state.selectedStrategy;\n    if (selectedStrategyChanged){\n      const selectedToken = Object.keys(this.state.availableTokens)[0];\n      this.selectToken(selectedToken);\n    }\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const executeSucceededChanged = prevState.executeSucceeded !== this.state.executeSucceeded;\n    const contractApprovedChanged = prevState.migrationContractApproved !== this.state.migrationContractApproved;\n    if (selectedTokenChanged || contractApprovedChanged || executeSucceededChanged){\n      this.checkBatchs();\n    }\n\n  }\n\n  async execute () {\n\n    const loading = true;\n\n    const callbackExecute = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'Execute',\n        eventCategory: 'BatchDeposit',\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        executeSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          execute:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptExecute = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          execute:{\n            ...prevState.processing.execute,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'executeBatch', [true], null, callbackExecute, callbackReceiptExecute);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        execute:{\n          ...prevState.processing.execute,\n          loading\n        }\n      }\n    }));\n  }\n\n  async checkBatchs(migrationSucceeded=false){\n\n    const migrationContractInfo = this.state.selectedTokenConfig.migrationContract;\n\n    await Promise.all([\n      this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi),\n      this.props.initContract(this.state.tokenConfig.name,this.state.tokenConfig.address,this.state.tokenConfig.abi)\n    ]);\n\n    let [\n      batchExecutions,\n      currBatchIndex,\n      migrationContractApproved\n    ] = await Promise.all([\n      this.functionsUtil.getBatchedDepositExecutions(migrationContractInfo.address),\n      this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'currBatch'),\n      this.functionsUtil.checkTokenApproved(this.state.tokenConfig.name,migrationContractInfo.address,this.props.account)\n    ]);\n\n    // If use Permit don't ask for Approve\n    let usePermit = false;\n    if (!migrationContractApproved && migrationContractInfo.functions && migrationContractInfo.functions.length === 1){\n      const functionInfo = migrationContractInfo.functions[0];\n      usePermit = typeof functionInfo.usePermit !== 'undefined' ? functionInfo.usePermit : false;\n      const nonceMethod = this.functionsUtil.getGlobalConfig(['permit',this.state.tokenConfig.name,'nonceMethod']);\n      const permitContract = this.functionsUtil.getContractByName(this.state.tokenConfig.name);\n      usePermit = usePermit && permitContract && (!nonceMethod || permitContract.methods[nonceMethod] !== undefined);\n    }\n\n    const newState = {};\n    const batchTotals = {};\n    const batchRedeems = {};\n    const batchDeposits = {};\n    let batchCompleted = false;\n\n    currBatchIndex = currBatchIndex || 0;\n    for (let batchIndex = 0; batchIndex <= parseInt(currBatchIndex) ; batchIndex++){\n      let [\n        batchTotal,\n        batchRedeem,\n        batchDeposit\n      ] = await Promise.all([\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchTotals',[batchIndex]),\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchRedeemedTotals',[batchIndex]),\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n      ]);\n      if (batchTotal && batchTotal !== null){\n        batchTotals[batchIndex] = this.functionsUtil.fixTokenDecimals(batchTotal,this.state.tokenConfig.decimals);\n      }\n      if (batchDeposit !== null){\n        batchRedeem = this.functionsUtil.fixTokenDecimals(batchRedeem,18);\n        batchDeposit = this.functionsUtil.fixTokenDecimals(batchDeposit,this.state.tokenConfig.decimals);\n        if (batchDeposit.gt(0)){\n          batchDeposits[batchIndex] = batchDeposit;\n          // Calculate redeemable idleTokens\n          batchRedeems[batchIndex] = batchDeposit.times(batchRedeem).div(batchTotals[batchIndex]);\n          if (batchRedeems[batchIndex].gt(batchRedeem)){\n            batchRedeems[batchIndex] = batchRedeem;\n          }\n          // Check claimable\n          if (batchIndex < currBatchIndex){\n            batchCompleted = true;\n          }\n        }\n      }\n    }\n\n    newState.batchDeposits = batchDeposits;\n\n    const hasDeposited = (batchDeposits && Object.keys(batchDeposits).length>0);\n\n    const lastExecution = batchExecutions && batchExecutions.length ? batchExecutions[0] : null;\n    const batchDepositInfo = this.functionsUtil.getGlobalConfig(['tools','batchDeposit']);\n    const batchDepositEnabled = batchDepositInfo.depositEnabled;\n\n    newState.usePermit = usePermit;\n    newState.showPermitBox = false;\n    newState.claimSucceeded = false;\n    newState.componentLoaded = true;\n    newState.executeSucceeded = false;\n    newState.batchTotals = batchTotals;\n    newState.hasDeposited = hasDeposited;\n    newState.batchRedeems = batchRedeems;\n    newState.lastExecution = lastExecution;\n    newState.currBatchIndex = currBatchIndex;\n    newState.batchCompleted = batchCompleted;\n    newState.migrationSucceeded = migrationSucceeded;\n    newState.batchDepositEnabled = batchDepositEnabled;\n    newState.canClaim = batchCompleted || hasDeposited;\n    // Prevent user to deposit if the batch has been completed\n    newState.canDeposit = batchDepositEnabled && !batchCompleted;\n    newState.migrationContractApproved = migrationContractApproved;\n    newState.action = hasDeposited || newState.canClaim ? 'redeem' : 'deposit';\n\n    this.setState(newState);\n  }\n\n  async loadStrategies(){\n\n    // Init tokens contracts\n    const availableStrategiesKeys = {};\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n      availableStrategiesKeys[tokenConfig.strategy] = true;\n    });\n\n    const availableStrategies = Object.keys(availableStrategiesKeys).map( strategy => {\n      const strategyConfig = this.functionsUtil.getGlobalConfig(['strategies',strategy]);\n      return {\n        value:strategy,\n        icon:strategyConfig.icon,\n        label:strategyConfig.title\n      };\n    });\n\n    // console.log('availableStrategies',availableStrategies);\n\n    if (availableStrategies && availableStrategies.length>0){\n      let selectedStrategy = availableStrategies[0].value;\n      let selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : null;\n      if (selectedToken){\n        const selectedTokenConfig = this.props.toolProps.availableTokens[selectedToken];\n        selectedToken = selectedTokenConfig.baseToken;\n        selectedStrategy = selectedTokenConfig.strategy;\n      }\n\n      this.setState({\n        availableStrategies\n      },() => {\n        this.selectStrategy(selectedStrategy,selectedToken);\n      });\n    }\n  }\n\n  /*\n  async loadTokens(){\n    const selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : null;\n    if (selectedToken){\n      this.selectToken(selectedToken);\n    }\n  }\n  */\n\n  async selectStrategy (selectedStrategy,selectedToken=null) {\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens)\n      .filter(key => this.props.toolProps.availableTokens[key].strategy === selectedStrategy )\n      .reduce((obj, key) => {\n        const tokenConfig = this.props.toolProps.availableTokens[key];\n        const baseTokenConfig = this.props.availableStrategies[selectedStrategy][tokenConfig.baseToken];\n\n        tokenConfig.abi = baseTokenConfig.abi;\n        tokenConfig.token = baseTokenConfig.token;\n        tokenConfig.address = baseTokenConfig.address;\n        tokenConfig.decimals = baseTokenConfig.decimals;\n        obj[tokenConfig.baseToken] = tokenConfig;\n        return obj;\n      }, {});\n\n    this.setState({\n      availableTokens,\n      selectedStrategy\n    },() => {\n      if (selectedToken){\n        this.selectToken(selectedToken);\n      }\n    });\n  }\n\n  async selectToken (selectedToken) {\n    const selectedTokenConfig = this.state.availableTokens[selectedToken];\n    const strategyAvailableTokens = this.props.availableStrategies[selectedTokenConfig.strategy];\n\n    const baseTokenConfig = strategyAvailableTokens[selectedTokenConfig.token];\n\n    const tokenConfig = {\n      name:baseTokenConfig.token,\n      token:baseTokenConfig.token,\n      address:baseTokenConfig.address,\n      decimals:baseTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = baseTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:baseTokenConfig.abi,\n      name:baseTokenConfig.token,\n      token:baseTokenConfig.token,\n      address:baseTokenConfig.address\n    };\n    \n    const migrationContract = selectedTokenConfig.migrationContract;\n\n    // Add migration function\n    if (baseTokenConfig.migrateFunction){\n      migrationContract.functions[0].name = baseTokenConfig.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(selectedTokenConfig.strategy,baseTokenConfig.token);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedTokenConfig\n    },() => {\n      // Select strategy and available tokens\n      if (selectedTokenConfig.strategy !== this.state.selectedStrategy){\n        const selectedStrategy = selectedTokenConfig.strategy;\n        this.selectStrategy(selectedStrategy);\n      }\n    });\n  }\n\n  async claim () {\n    if (!this.state.batchCompleted){\n      return null;\n    }\n\n    const loading = true;\n    const claimableValue = 0;\n    const batchId = Object.keys(this.state.batchDeposits)[0];\n\n    const callbackClaim = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'Claim',\n        eventCategory: `BatchDeposit`,\n        eventValue: parseInt(claimableValue),\n        eventLabel: this.props.selectedToken,\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        claimSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          claim:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptClaim = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          claim:{\n            ...prevState.processing.claim,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'withdraw', [batchId], null, callbackClaim, callbackReceiptClaim);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        claim:{\n          ...prevState.processing.claim,\n          loading\n        }\n      }\n    }));\n  }\n\n  async callbackPermit(){\n    this.setState({\n      permitSigned:true\n    });\n  }\n\n  showPermitBox(){\n    this.setState({\n      showPermitBox:true\n    });\n  }\n\n  async callbackApprove(migrationContractApproved){\n    // console.log('callbackApprove',this.state.migrationContractApproved,migrationContractApproved);\n    if (migrationContractApproved !== this.state.migrationContractApproved){\n      this.setState({\n        migrationContractApproved\n      });\n    }\n  }\n\n  setAction = (action) => {\n    if (action !== null && ['deposit','redeem'].includes(action.toLowerCase())){\n      const migrationSucceeded = false;\n      this.setState({\n        action,\n        migrationSucceeded\n      });\n    }\n  }\n\n  togglePermitEnabled(permitEnabled){\n    this.setState({\n      permitEnabled\n    });\n  }\n\n  migrationEnabledCallback = (migrationEnabled) => {\n    this.setState({\n      migrationEnabled\n    });\n  }\n\n  migrationCallback = (tx) => {\n    this.checkBatchs(true);\n  }\n\n  render() {\n\n    if (!this.state.selectedStrategy){\n      return null;\n    }\n\n    const usePermit = this.state.permitEnabled && this.state.usePermit;\n    // const batchId = this.state.batchDeposits && Object.keys(this.state.batchDeposits).length>0 ? Object.keys(this.state.batchDeposits)[0] : null;\n    const batchRedeem = this.state.batchRedeems && Object.values(this.state.batchRedeems).length>0 ? Object.values(this.state.batchRedeems)[0] : null;\n    const batchDeposit = this.state.batchDeposits && Object.values(this.state.batchDeposits).length>0 ? Object.values(this.state.batchDeposits)[0] : null;\n    const contractApproved = (usePermit && this.state.permitSigned) || (!usePermit && this.state.migrationContractApproved);\n    const canExecuteBatch = this.state.batchTotals && this.state.batchTotals[this.state.currBatchIndex] && this.state.batchTotals[this.state.currBatchIndex].gt(0);\n    const strategyDefaultValue = this.state.selectedStrategy ? this.state.availableStrategies.find( s => s.value === this.state.selectedStrategy ) : this.state.availableStrategies[0];\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Choose the strategy:\n            </Text>\n            <GenericSelector\n              {...this.props}\n              name={'strategy'}\n              isSearchable={false}\n              defaultValue={strategyDefaultValue}\n              CustomOptionValue={CustomOptionValue}\n              options={this.state.availableStrategies}\n              onChange={this.selectStrategy.bind(this)}\n              CustomValueContainer={CustomValueContainer}\n            />\n          </Box>\n          {\n            this.state.availableTokens && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Select asset to deposit:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  id={'token-from'}\n                  showBalance={true}\n                  isSearchable={false}\n                  onChange={this.selectToken.bind(this)}\n                  selectedToken={this.state.selectedToken}\n                  availableTokens={this.state.availableTokens}\n                />\n              </Box>\n          }\n          {\n            !this.state.componentLoaded && (\n              <Flex\n                mt={4}\n                flexDirection={'column'}\n              >\n                <FlexLoader\n                  flexProps={{\n                    flexDirection:'row'\n                  }}\n                  loaderProps={{\n                    size:'30px'\n                  }}\n                  textProps={{\n                    ml:2\n                  }}\n                  text={'Loading asset info...'}\n                />\n              </Flex>\n            )\n          }\n          {\n            !this.props.account ? (\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mt:3\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                    name={'Input'}\n                    color={'cellText'}\n                  />\n                  <Text\n                    mt={[1,2]}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Please connect with your wallet interact with Idle.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:2,\n                      width:[1,1/2]\n                    }}\n                    handleClick={this.props.connectAndValidateAccount}\n                  >\n                    Connect\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            ) : this.state.componentLoaded &&  this.state.selectedTokenConfig && (this.state.canDeposit || this.state.canClaim) && (\n              <Box\n                width={1}\n              >\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                    px:4,\n                    mt:3,\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  > \n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ contractApproved ? 'CheckBox' : 'LooksOne'}\n                        color={ contractApproved ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        {\n                          usePermit ? 'Sign Approve message' : 'Approve the batch deposit contract'\n                        }\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ (this.state.hasDeposited || this.state.batchCompleted) ? 'CheckBox' : 'LooksTwo'}\n                        color={ (this.state.hasDeposited || this.state.batchCompleted) ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        Deposit your {this.state.selectedToken}\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ this.state.batchCompleted ? 'CheckBox' : 'Looks3'}\n                        color={ this.state.batchCompleted ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        Wait for batch execution\n                        <Link\n                          ml={1}\n                          fontWeight={2}\n                          color={'primary'}\n                          display={'inline'}\n                          hoverColor={'primary'}\n                          onClick={ e => this.props.openTooltipModal('Batch Execution Schedule',this.functionsUtil.getGlobalConfig(['messages','batchDepositExecutionSchedule'])) }\n                        >\n                          (Read More)\n                        </Link>\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ this.state.claimSucceeded ? 'CheckBox' : 'Looks4'}\n                        color={ this.state.claimSucceeded ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'flex-start'}\n                      >\n                        <Text\n                          ml={1}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'left'}\n                        >\n                          Claim your {this.state.tokenConfig.idle.token}\n                        </Text>\n                        <Tooltip\n                          placement={'top'}\n                          message={`You will start earning gov tokens after the batch is executed and you claim your ${this.state.tokenConfig.idle.token}`}\n                        >\n                          <Icon\n                            ml={1}\n                            size={'1.2em'}\n                            name={'Warning'}\n                            color={'#ffe000'}\n                            style={{\n                              cursor:'pointer'\n                            }}\n                          />\n                        </Tooltip>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                </DashboardCard>\n              </Box>\n            )\n          }\n          {\n            this.state.componentLoaded && this.props.account && this.state.availableTokens && this.state.selectedToken && (\n              <Box width={1}>\n                {\n                  (contractApproved || this.state.canClaim) && \n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text mb={2}>\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canDeposit ? this.setAction('deposit') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canDeposit }\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canClaim ? this.setAction('redeem') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canClaim }\n                          isActive={ this.state.action === 'redeem' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Claim\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                }\n                {\n                  this.state.showPermitBox && this.state.action === 'deposit' && this.state.usePermit && this.state.migrationEnabled && !this.state.migrationSucceeded ? (\n                    <DashboardCard\n                      cardProps={{\n                        py:3,\n                        px:2,\n                        mt:3,\n                        display:'flex',\n                        alignItems:'center',\n                        flexDirection:'column',\n                        justifyContent:'center',\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          color={'cellText'}\n                          name={'LightbulbOutline'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={1}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          {this.state.selectedToken} supports Approve and Deposit in a single transaction, disable this feature and try again if you can't deposit in the batch.\n                        </Text>\n                      </Flex>\n                      <Checkbox\n                        mt={1}\n                        required={false}\n                        checked={this.state.permitEnabled}\n                        label={`Approve and Deposit in a single transaction`}\n                        onChange={ e => this.togglePermitEnabled(e.target.checked) }\n                      />\n                    </DashboardCard>\n                  ) : !this.state.showPermitBox && this.state.action === 'deposit' && this.state.usePermit && this.state.migrationEnabled && !this.state.migrationSucceeded && (\n                    <Flex\n                      p={0}\n                      mt={3}\n                      width={1}\n                      borderRadius={2}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'center'}\n                    >\n                      <Link\n                        textAlign={'center'}\n                        hoverColor={'primary'}\n                        onClick={this.showPermitBox.bind(this)}\n                      >\n                        Having trouble with the Batch Deposit?\n                      </Link>\n                    </Flex>\n                  )\n                }\n                {\n                  this.state.action === 'deposit' ? \n                    this.state.batchDepositEnabled ? (\n                      <Migrate\n                        {...this.props}\n                        useMetaTx={false}\n                        showActions={false}\n                        usePermit={usePermit}\n                        getTokenPrice={false}\n                        isMigrationTool={true}\n                        showBalanceSelector={true}\n                        migrationIcon={'FileDownload'}\n                        waitText={'Deposit estimated in'}\n                        tokenConfig={this.state.tokenConfig}\n                        selectedToken={this.state.selectedToken}\n                        migrationParams={toMigrate => [toMigrate]}\n                        selectedStrategy={this.props.selectedStrategy}\n                        callbackPermit={this.callbackPermit.bind(this)}\n                        callbackApprove={this.callbackApprove.bind(this)}\n                        migrationCallback={this.migrationCallback.bind(this)}\n                        migrationEnabledCallback={this.migrationEnabledCallback.bind(this)}\n                        migrationText={`Deposit your ${this.state.selectedToken} and wait until it is converted to the new ${this.state.tokenConfig.idle.token}.`}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:3\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedToken} in your wallet.\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Migrate>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          my:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Text\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            Batch Deposit is disabled for this asset.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      {\n                        this.state.processing.claim.loading ? (\n                          <Flex\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar {...this.props} web3={this.props.web3} waitText={`Claim estimated in`} endMessage={`Finalizing approve request...`} hash={this.state.processing.claim.txHash} />\n                          </Flex>\n                        ) : this.state.claimSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'DoneAll'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You have successfully withdrawn your {this.state.tokenConfig.idle.token}!\n                            </Text>\n                            <Link\n                              mt={2}\n                              textAlign={'center'}\n                              hoverColor={'primary'}\n                              onClick={ e => this.props.goToSection(this.state.selectedTokenConfig.strategy+'/'+this.state.selectedTokenConfig.baseToken) }\n                            >\n                              Go to the Dashboard\n                            </Link>\n                          </Flex>\n                        ) : this.state.batchCompleted ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              color={'cellText'}\n                              name={'FileUpload'}\n                            />\n                            <Text\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The Batch has been executed!<br />You can now claim your {batchRedeem.toFixed(4)} {this.state.tokenConfig.idle.token}\n                            </Text>\n                            <Text\n                              fontSize={1}\n                              color={'#ff9900'}\n                              textAlign={'center'}\n                            >\n                              (You need to claim your {this.state.tokenConfig.idle.token} to start earning Gov Tokens)\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                              <RoundButton\n                                buttonProps={{\n                                  mt:2,\n                                  width:[1,0.5],\n                                  mainColor:this.props.theme.colors.redeem\n                                }}\n                                handleClick={ e => this.claim() }\n                              >\n                                Claim\n                              </RoundButton>\n                            </Flex>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'1.8em'}\n                              color={'cellText'}\n                              name={'HourglassEmpty'}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              <Text.span\n                                color={'cellText'}\n                              >\n                                You have successfully deposited <strong>{batchDeposit.toFixed(4)} {this.state.selectedToken}</strong>, please wait until the batch is executed to claim your {this.state.tokenConfig.idle.token}.\n                              </Text.span>\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n                {\n                  this.state.batchTotals[this.state.currBatchIndex] && \n                    <DashboardCard\n                      cardProps={{\n                        p:2,\n                        my:3\n                      }}\n                    >\n                      {\n                        this.state.processing.execute.loading ? (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <TxProgressBar {...this.props} waitText={`Batch execution estimated in`} endMessage={`Finalizing batch execution request...`} hash={this.state.processing.execute.txHash} />\n                          </Flex>\n                        ) : this.state.executeSucceeded ? (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Icon\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The Batch has been executed!\n                            </Text>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Text\n                              fontWeight={500}\n                              color={'copyColor'}\n                              textAlign={'center'}\n                            >\n                              Batch Pool: {this.state.batchTotals[this.state.currBatchIndex].toFixed(4)} {this.state.selectedToken}\n                            </Text>\n                            {\n                              canExecuteBatch && \n                                <Link\n                                  textAlign={'center'}\n                                  hoverColor={'primary'}\n                                  onClick={this.execute.bind(this)}\n                                >\n                                  Execute Batch\n                                </Link>\n                            }\n                            {\n                              this.state.batchTotals[this.state.currBatchIndex].lt(this.state.selectedTokenConfig.minPoolSize) && (\n                                <Text\n                                  mb={1}\n                                  fontSize={1}\n                                  color={'alert'}\n                                  textAlign={'center'}\n                                >\n                                  (The pool size has to reach at least {this.functionsUtil.formatMoney(this.state.selectedTokenConfig.minPoolSize,0)} {this.state.selectedToken} to be executed)\n                                </Text>\n                              )\n                            }\n                            {\n                              this.state.lastExecution && (\n                                <Text\n                                  fontSize={0}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  Last Batch Execution: {this.functionsUtil.strToMoment(this.state.lastExecution.timeStamp*1000).utc().format('YYYY-MM-DD HH:mm UTC')}\n                                </Text>\n                              )\n                            }\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                }\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default BatchDeposit;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass CoverProtocol extends Component {\n\n  state = {\n    steps:null,\n    infoBox:null,\n    swapInfo:null,\n    portfolio:null,\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    selectedAction:null,\n    successMessage:null,\n    activeCoverages:null,\n    defaultCoverage:null,\n    selectedCoverage:null,\n    contractApproved:false,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    transactionSucceeded:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n    // window.transactionSucceeded = this.transactionSucceeded.bind(this);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedCoverageChanged = prevState.selectedCoverage !== this.state.selectedCoverage;\n    if (selectedCoverageChanged){\n      const selectedToken = this.state.selectedCoverage.collateral;\n      const tokenConfig = Object.values(this.props.availableStrategies)[0][selectedToken];\n      const tokenBalance = await this.functionsUtil.getTokenBalance(selectedToken,this.props.account);\n      const selectedAction = !this.state.selectedAction ? (this.props.urlParams.param2 || 'Claim') : this.state.selectedAction;\n      this.setState({\n        tokenConfig,\n        tokenBalance,\n        selectedToken,\n        selectedAction\n      });\n    }\n\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue && this.state.inputValue.gt(0);\n    const swapInfoChanged = JSON.stringify(prevState.swapInfo) !== JSON.stringify(this.state.swapInfo) && this.state.inputValue && this.state.inputValue.gt(0);\n    if (selectedActionChanged || inputValueChanged || swapInfoChanged || contractApprovedChanged){\n      this.updateData();\n    }\n\n    const contractInfoChanged = JSON.stringify(prevState.contractInfo) !== JSON.stringify(this.state.contractInfo);\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async getSwapInfo(amount){\n    amount = this.functionsUtil.BNify(amount);\n    if (!amount.isNaN() && amount.gt(0)){\n      // console.log('getSwapInfo',this.state.contractInfo.name,this.state.tokenConfig.address,balancerTokenConfig.address,swapFee,covTokens,tokenPrice);\n\n      if (this.state.tokenPrice && this.state.swapFee && this.state.covTokens){\n\n        const swapFee = this.state.swapFee;\n        const tokenPrice = this.state.tokenPrice;\n        let tokenAmountOut = amount.div(tokenPrice);\n        tokenAmountOut = tokenAmountOut.minus(tokenAmountOut.times(swapFee));\n\n        return {\n          amount,\n          tokenAmountOut\n        };\n      }\n    }\n\n    return null;\n  }\n\n  async changeInputCallback(inputValue=null){\n    let swapInfo = null;\n    let balanceSelectorInfo = null;\n    inputValue = inputValue || this.state.inputValue;\n\n    if (inputValue && this.functionsUtil.BNify(inputValue).gt(0)){\n      switch (this.state.selectedAction){\n        case 'Mint':\n          balanceSelectorInfo = {\n            color:this.props.theme.colors.transactions.status.completed,\n            text:`You will Mint: ${inputValue.toFixed(4)} CLAIM and NOCLAIM`\n          };\n        break;\n        case 'Claim':\n        case 'NoClaim':\n          const amount = this.functionsUtil.normalizeTokenAmount(inputValue,this.state.tokenConfig.decimals);\n          swapInfo = await this.getSwapInfo(amount);\n          if (swapInfo){\n            if (swapInfo.tokenAmountOut.lte(this.state.covTokens)){\n              balanceSelectorInfo = {\n                color:this.props.theme.colors.transactions.status.completed,\n                text:`You will Buy: ~${this.functionsUtil.fixTokenDecimals(swapInfo.tokenAmountOut,18).toFixed(4)} ${this.state.selectedAction}`\n              };\n            } else {\n              balanceSelectorInfo = {\n                text:`Not enough liquidity`,\n                color:this.props.theme.colors.transactions.status.failed,\n              };\n            }\n          }\n        break;\n        default:\n        break;\n      }\n    }\n\n    this.setState({\n      swapInfo,\n      inputValue,\n      balanceSelectorInfo\n    });\n  }\n\n  async getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = null;\n    amount = this.functionsUtil.BNify(amount);\n    const MAX_UINT256 = this.functionsUtil.BNify(2).pow(256).minus(1).toFixed(0);\n    switch (this.state.selectedAction){\n      case 'Mint':\n        methodName = 'addCover';\n        methodParams = [this.state.tokenConfig.address,parseInt(this.state.selectedCoverage.expirationTimestamp),this.functionsUtil.integerValue(amount)];\n      break;\n      case 'Claim':\n      case 'NoClaim':\n        methodName = 'swapExactAmountOut';\n        const balancerTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const swapInfo = await this.getSwapInfo(amount);\n        if (swapInfo){\n          if (swapInfo.tokenAmountOut.lte(this.state.covTokens)){\n            methodParams = [this.state.tokenConfig.address,this.functionsUtil.integerValue(amount),balancerTokenConfig.address, this.functionsUtil.integerValue(swapInfo.tokenAmountOut), MAX_UINT256];\n          } else {\n            return null;\n          }\n        }\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    let infoBox = null;\n    const dashboardUrl = `#${this.functionsUtil.getGlobalConfig(['dashboard','baseRoute'])}/best`;\n    const fixedAmount = this.functionsUtil.fixTokenDecimals(amount,this.state.tokenConfig.decimals);\n    switch (this.state.selectedAction){\n      case 'Mint':\n        const mintedClaimLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.selectedCoverage.tokens['Claim'].address ) : null;\n        const mintedNoClaimLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.selectedCoverage.tokens['NoClaim'].address ) : null;\n        const mintedClaimAmount = mintedClaimLog ? this.functionsUtil.fixTokenDecimals(parseInt(mintedClaimLog.data,16),this.state.contractInfo.decimals) : fixedAmount;\n        const mintedNoClaimAmount = mintedNoClaimLog ? this.functionsUtil.fixTokenDecimals(parseInt(mintedNoClaimLog.data,16),this.state.contractInfo.decimals) : fixedAmount;\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully minted <strong>${mintedClaimAmount.toFixed(4)} CLAIM</strong> and <strong>${mintedNoClaimAmount.toFixed(4)} NOCLAIM</strong> tokens<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      case 'Claim':\n        const claimTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const claimTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === claimTokenConfig.address ) : null;\n        const receivedClaimAmount = claimTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(claimTokensLog.data,16),claimTokenConfig.balancerPool.decimals) : this.functionsUtil.fixTokenDecimals(params[3],claimTokenConfig.balancerPool.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully bought <strong>${receivedClaimAmount.toFixed(4)} ${this.state.selectedAction}</strong> tokens, you are now covered in the event that there is a successful attack on the protocol<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      case 'NoClaim':\n        debugger;\n        const noClaimTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const noClaimTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === noClaimTokenConfig.address ) : null;\n        const receivedNoClaimAmount = noClaimTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(noClaimTokensLog.data,16),noClaimTokenConfig.balancerPool.decimals) : this.functionsUtil.fixTokenDecimals(params[3],noClaimTokenConfig.balancerPool.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully bought <strong>${receivedNoClaimAmount.toFixed(4)} ${this.state.selectedAction}</strong> tokens, you will be rewarded if there is no successful attack on the protocol by the expiry date<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    // Set second step completed\n    let steps = this.state.steps;\n    steps[1].completed = true;\n\n    const transactionSucceeded = true;\n    const tokenBalance = await this.functionsUtil.getTokenBalance(this.state.selectedToken,this.props.account);\n\n    // console.log('transactionSucceeded',infoBox);\n\n    this.setState({\n      steps,\n      infoBox,\n      tokenBalance,\n      transactionSucceeded\n    });\n  }\n\n  async updateData(){\n    let apy = null;\n    const steps = [];\n    let infoBox = null;\n    let swapFee = null;\n    let covTokens = null;\n    let tokenPrice = null;\n    let tokenAmount = null;\n    let contractInfo = null;\n    let collateralAmount = null;\n    let approveDescription = null;\n\n    const claimTokenConfig = this.state.selectedCoverage.tokens['Claim'];\n    const noClaimTokenConfig = this.state.selectedCoverage.tokens['NoClaim'];\n    const balancerClaimConfig = claimTokenConfig.balancerPool;\n    const balancerNoClaimConfig = noClaimTokenConfig.balancerPool;\n\n    await Promise.all([\n      this.props.initContract(claimTokenConfig.name,claimTokenConfig.address,claimTokenConfig.abi),\n      this.props.initContract(noClaimTokenConfig.name,noClaimTokenConfig.address,noClaimTokenConfig.abi),\n      this.props.initContract(balancerClaimConfig.name,balancerClaimConfig.address,balancerClaimConfig.abi),\n      this.props.initContract(balancerNoClaimConfig.name,balancerNoClaimConfig.address,balancerNoClaimConfig.abi)\n    ]);\n\n    const [\n      claimTokenBalance,\n      noClaimTokenBalance,\n      balancerPoolClaimBalance,\n      balancerPoolNoClaimBalance\n    ] = await Promise.all([\n      // Get Claim token balance\n      this.functionsUtil.getTokenBalance(claimTokenConfig.name,this.props.account),\n      // Get NOCLAIM token balance\n      this.functionsUtil.getTokenBalance(noClaimTokenConfig.name,this.props.account),\n      // Get Balancer Claim token Pool balance\n      this.functionsUtil.getTokenBalance(balancerClaimConfig.name,this.props.account),\n      // Get Balancer NOCLAIM token Pool balance\n      this.functionsUtil.getTokenBalance(balancerNoClaimConfig.name,this.props.account)\n    ]);\n\n    // Check if user has both Claim and NOCLAIM tokens\n    const hasMintedTokens = claimTokenBalance && noClaimTokenBalance && claimTokenBalance.gt(0) && noClaimTokenBalance.gt(0);\n\n    // Set Contract Info\n    switch (this.state.selectedAction){\n      case 'Mint':\n        contractInfo = this.props.toolProps.contract;\n      break;\n      case 'NoClaim':\n        contractInfo = noClaimTokenConfig.balancerPool;\n      break;\n      case 'Claim':\n        contractInfo = claimTokenConfig.balancerPool;\n      break;\n      default:\n      break;\n    }\n\n    const balancerTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n\n    if (contractInfo){\n      if (balancerTokenConfig){\n        [\n          swapFee,\n          covTokens,\n          tokenPrice\n        ] = await Promise.all([\n          this.functionsUtil.genericContractCall(contractInfo.name,'getSwapFee'),\n          this.functionsUtil.genericContractCall(contractInfo.name,'getBalance',[balancerTokenConfig.address]),\n          this.functionsUtil.genericContractCall(contractInfo.name,'getSpotPrice',[this.state.tokenConfig.address,balancerTokenConfig.address])\n        ]);\n\n        // Calculate yearly returns\n        if (tokenPrice){\n          const isClaim = this.state.selectedAction === 'Claim';\n          const expirationTimestamp = this.state.selectedCoverage.expirationTimestamp;\n          const days =  (expirationTimestamp*1000 - Date.now())/(60 * 60 * 24 * 1000);\n          tokenPrice = this.functionsUtil.fixTokenDecimals(tokenPrice,this.state.tokenConfig.decimals);\n          const apyPrice = isClaim ? tokenPrice : this.functionsUtil.BNify(1).minus(tokenPrice).div(tokenPrice);\n          apy = this.functionsUtil.BNify(100).times(apyPrice).times(365).div(days);\n        }\n\n        // Fix swap Fees\n        if (swapFee){\n          swapFee = this.functionsUtil.fixTokenDecimals(swapFee,18);\n        }\n      }\n\n      switch (this.state.selectedAction){\n        case 'Mint':\n          approveDescription = `Approve the Cover Protocol contract`;\n          infoBox = {\n            icon:'MonetizationOn',\n            text:`Stake ${this.state.selectedToken} to mint both CLAIM and NOCLAIM tokens in a 1:1 ratio then add them to the respective Balancer Pool to earn trading fees.<br /><small>Prior to expiry or an accepted claim, users can redeem back their collateral with both their CLAIM and NOCLAIM tokens. <a href=\"https://docs.coverprotocol.com/user-guide/redemption\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a></small>`\n          };\n          // Add Approve Step\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:hasMintedTokens,\n            description:`Mint CLAIM and NOCLAIM tokens`\n          });\n          // Add Liquidity to Balancer Step\n          steps.push({\n            icon:'Looks3',\n            description:`Add your CLAIM tokens to the Balancer Pool`,\n            completed:balancerPoolClaimBalance && balancerPoolClaimBalance.gt(0),\n            link:`https://pools.balancer.exchange/#/pool/${this.state.selectedCoverage.tokens['Claim'].balancerPool.address}/`,\n          });\n          // Add Liquidity to Balancer Step\n          steps.push({\n            icon:'Looks4',\n            description:`Add your NOCLAIM tokens to the Balancer Pool`,\n            completed:balancerPoolNoClaimBalance && balancerPoolNoClaimBalance.gt(0),\n            link:`https://pools.balancer.exchange/#/pool/${this.state.selectedCoverage.tokens['NoClaim'].balancerPool.address}/`,\n          });\n        break;\n        case 'NoClaim':\n          if (this.state.swapInfo){\n            collateralAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.amount,this.state.tokenConfig.decimals);\n            tokenAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.tokenAmountOut,contractInfo.decimals);\n            infoBox = {\n              icon:'VerifiedUser',\n              text:`By providing <strong>${collateralAmount.toFixed(4)} ${this.state.selectedToken}</strong> your NOCLAIM tokens will pay out <strong>~${tokenAmount.toFixed(4)} ${this.state.selectedToken}</strong> if there is no successful attack on the protocol by the expiry date.`\n            };\n          } else {\n            infoBox = {\n              icon:'VerifiedUser',\n              text:`NOCLAIM tokens will pay out 1 ${this.state.selectedToken} for each token you hold if there is no successful attack on the protocol by the expiry date.`\n            };\n          }\n\n          // Add Yearly cost and read more\n          infoBox.text+=`${apy ? `<br /><span style=\"color:${this.props.theme.colors.primary}\">The yearly return of buying and holding NOCLAIM until expiration is <strong>${apy.toFixed(2)}%</strong>` : null}</span><br /><small><a href=\"https://docs.coverprotocol.com/product/claims-guidelines\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a> to understand how claims are assessed and paid out by Cover Protocol.</small>`;\n\n          // Add Approve Step\n          approveDescription = `Approve the NOCLAIM Balancer Pool contract`;\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:noClaimTokenBalance && noClaimTokenBalance.gt(0),\n            description:`Buy NOCLAIM tokens with your ${this.state.selectedToken}`\n          });\n        break;\n        case 'Claim':\n          if (this.state.swapInfo){\n            collateralAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.amount,this.state.tokenConfig.decimals);\n            tokenAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.tokenAmountOut,contractInfo.decimals);\n            const portfolioCoveredPerc = 32;//this.state.portfolio && this.state.portfolio.totalBalance.gt(0) ? tokenAmount.div(this.state.portfolio.totalBalance).times(100) : null;\n            infoBox = {\n              icon:'BeachAccess',\n              text:`By providing <strong>${collateralAmount.toFixed(4)} ${this.state.selectedToken}</strong> your CLAIM tokens will pay out <strong>~${tokenAmount.toFixed(4)} ${this.state.selectedToken}</strong>${ portfolioCoveredPerc ? ` <strong>(${portfolioCoveredPerc}% of your portfolio)</strong>` : '' } in the event that there is a successful attack on the protocol before the expiry date.`\n            };\n          } else {\n            infoBox = {\n              icon:'BeachAccess',\n              text:`CLAIM tokens will pay out 1 ${this.state.selectedToken} for each token you hold in the event that there is a successful attack on the protocol before the expiry date.`\n            };\n          }\n\n          infoBox.text+=`${apy ? `<br /><span style=\"color:${this.props.theme.colors.primary}\">The yearly cost of buying and holding CLAIM until expiration is <strong>${apy.toFixed(2)}%` : null}</strong></span><br /><small><a href=\"https://docs.coverprotocol.com/product/claims-guidelines\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a> to understand how claims are assessed and paid out by Cover Protocol.</small>`;\n\n          // Add Approve Step\n          approveDescription = `Approve the CLAIM Balancer Pool contract`;\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:claimTokenBalance && claimTokenBalance.gt(0),\n            description:`Buy CLAIM tokens with your ${this.state.selectedToken}`\n          });\n        break;\n        default:\n        break;\n      }\n\n      const transactionSucceeded = false;\n      this.setState({\n        apy,\n        steps,\n        infoBox,\n        swapFee,\n        covTokens,\n        tokenPrice,\n        contractInfo,\n        approveDescription,\n        transactionSucceeded\n      });\n    }\n  }\n\n  async loadData(){\n    const currTime = parseInt(Date.now()/1000);\n    const activeCoverages = this.props.toolProps.coverages.reduce( (output,c,index) => {\n      if (c.expirationTimestamp>currTime){\n        const expirationDate = this.functionsUtil.strToMoment(c.expirationTimestamp*1000).utc().format('YYYY-MM-DD HH:mm:ss')+' UTC';\n        const icon = `images/tokens/${c.collateral}.svg`;\n        const label = `Collateral: ${c.collateral} - Expiration: ${expirationDate}`;\n        output.push({\n          icon,\n          label,\n          data:c,\n          value:expirationDate,\n        });\n      }\n      return output;\n    },[]);\n\n    const portfolio = await this.functionsUtil.getAccountPortfolio();\n    const defaultCoverage = activeCoverages.length ? activeCoverages[0] : null;\n\n    this.setState({\n      portfolio,\n      defaultCoverage,\n      activeCoverages\n    },() => {\n      if (defaultCoverage){\n        this.selectCoverage(defaultCoverage);\n      }\n    });\n  }\n\n  async selectCoverage(coverage){\n    const selectedCoverage = coverage.data;\n    this.setState({\n      selectedCoverage\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  render() {\n\n    const isMint = this.state.selectedAction === 'Mint';\n    const isBuyClaim = this.state.selectedAction === 'Claim';\n    const isBuyNoClaim = this.state.selectedAction === 'NoClaim';\n    const txAction = isMint ? this.state.selectedAction : `Buy ${this.state.selectedAction}`;\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.activeCoverages ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading active coverages...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.activeCoverages.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active coverages.\n                  </Text>\n                ) : (\n                  <Flex\n                    width={[1,0.46]}\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Box\n                      width={1}\n                    >\n                      <Text mb={1}>\n                        Select Coverage:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        name={'strategy'}\n                        isSearchable={false}\n                        options={this.state.activeCoverages}\n                        CustomOptionValue={CustomOptionValue}\n                        defaultValue={this.state.defaultCoverage}\n                        onChange={this.selectCoverage.bind(this)}\n                        CustomValueContainer={CustomValueContainer}\n                      />\n                    </Box>\n                    {\n                      this.state.selectedCoverage && (\n                        <Box\n                          mt={3}\n                          width={1}\n                        >\n                          <Text mb={1}>\n                            Select Action:\n                          </Text>\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={['column','row']}\n                            justifyContent={'space-between'}\n                          >\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isMint ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Add Liquidity'}\n                              imageSrc={'images/mint.svg'}\n                              isMobile={this.props.isMobile}\n                              subcaption={'mint CLAIM and NOCLAIM\\nand stake in Balancer Pool'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isMint}\n                              handleClick={ e => this.setAction('Mint') }\n                            />\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isBuyClaim ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Buy CLAIM'}\n                              imageSrc={'images/claim.svg'}\n                              isMobile={this.props.isMobile}\n                              subcaption={'protect in case of attacks\\nagainst the Idle protocol'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isBuyClaim}\n                              handleClick={ e => this.setAction('Claim') }\n                            />\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isBuyNoClaim ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Buy NOCLAIM'}\n                              isMobile={this.props.isMobile}\n                              imageSrc={'images/noclaim.svg'}\n                              subcaption={'get rewarded if no attack\\noccurs on the Idle protocol'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isBuyNoClaim}\n                              handleClick={ e => this.setAction('NoClaim') }\n                            />\n                          </Flex>\n                          {\n                            this.state.tokenConfig && this.state.tokenBalance && this.state.contractInfo &&\n                              <Box\n                                mt={2}\n                                mb={3}\n                                width={1}\n                              >\n                                <SendTxWithBalance\n                                  {...this.props}\n                                  action={txAction}\n                                  error={this.state.error}\n                                  steps={this.state.steps}\n                                  infoBox={this.state.infoBox}\n                                  tokenConfig={this.state.tokenConfig}\n                                  tokenBalance={this.state.tokenBalance}\n                                  contractInfo={this.state.contractInfo}\n                                  callback={this.transactionSucceeded.bind(this)}\n                                  contractApproved={this.contractApproved.bind(this)}\n                                  approveDescription={this.state.approveDescription}\n                                  balanceSelectorInfo={this.state.balanceSelectorInfo}\n                                  changeInputCallback={this.changeInputCallback.bind(this)}\n                                  getTransactionParams={this.getTransactionParams.bind(this)}\n                                >\n                                  <BuyModal\n                                    {...this.props}\n                                    showInline={true}\n                                    availableMethods={[]}\n                                    buyToken={this.state.selectedToken}\n                                  />\n                                </SendTxWithBalance>\n                              </Box>\n                          }\n                        </Box>\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default CoverProtocol;\n","import Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass TokenMigration extends Component {\n\n  state = {\n    tokenConfig:null,\n    selectedFromToken:null,\n    selectedDestToken:null,\n    migrationSucceeded:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async loadTokens(){\n    const selectedFromToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    if (selectedFromToken && selectedFromToken !== this.props.urlParams.param2){\n      this.changeFromToken(selectedFromToken);\n    }\n\n    this.selectFromToken(selectedFromToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      await this.loadTokens();\n    }\n  }\n\n  changeFromToken = (selectedToken) => {\n    const convertTool = this.functionsUtil.getGlobalConfig(['tools','tokenMigration']);\n    this.props.goToSection(`tools/${convertTool.route}/${selectedToken}`);\n  }\n\n  selectFromToken = async (selectedFromToken) => {\n    const tokenInfo = this.props.toolProps.availableTokens[selectedFromToken];\n\n    let selectedDestToken = null;\n    const availableDestinationTokens = {};\n\n    const availableStrategies = typeof this.props.toolProps.availableStrategies !== 'undefined' ? this.props.toolProps.availableStrategies : Object.keys(this.props.availableStrategies);\n\n    availableStrategies.forEach( strategy => {\n      const strategyAvailableTokens =  this.props.availableStrategies[strategy];\n      const baseTokenConfig = strategyAvailableTokens[tokenInfo.baseToken];\n      if (!baseTokenConfig){\n        return false;\n      }\n\n      // Remove icon\n      delete baseTokenConfig.icon;\n\n      if (!selectedDestToken){\n        selectedDestToken = baseTokenConfig.idle.token;\n      }\n      baseTokenConfig.strategy = strategy;\n      baseTokenConfig.baseToken = tokenInfo.baseToken;\n      availableDestinationTokens[baseTokenConfig.idle.token] = baseTokenConfig;\n    });\n\n    this.setState({\n      tokenConfig:null,\n      selectedFromToken,\n      availableDestinationTokens\n    },() => {\n      this.selectDestToken(selectedDestToken);\n    });\n  }\n\n  selectDestToken = async (selectedDestToken) => {\n\n    const destTokenConfig = this.state.availableDestinationTokens[selectedDestToken];\n    const tokenInfo = this.props.toolProps.availableTokens[this.state.selectedFromToken];\n\n    const tokenConfig = {\n      token:destTokenConfig.baseToken,\n      address:destTokenConfig.address,\n      decimals:destTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = destTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:tokenInfo.abi,\n      name:tokenInfo.token,\n      token:tokenInfo.token,\n      address:tokenInfo.address\n    };\n    \n    const migrationContract = this.props.toolProps.migrationContract;\n\n    // Add migration function\n    if (tokenInfo.migrateFunction){\n      migrationContract.functions[0].name = tokenInfo.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(destTokenConfig.strategy,tokenInfo.baseToken);\n\n    this.setState({\n      tokenConfig,\n      selectedDestToken\n    });\n  }\n\n  migrationCallback = () => {\n    this.setState({\n      migrationSucceeded:true\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedFromToken){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to migrate:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              id={'token-from'}\n              showBalance={true}\n              isSearchable={true}\n              onChange={this.changeFromToken}\n              selectedToken={this.state.selectedFromToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            this.state.availableDestinationTokens && this.state.selectedDestToken && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text mb={1}>\n                  Select destination asset:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  id={'token-dest'}\n                  showBalance={false}\n                  onChange={this.selectDestToken}\n                  selectedToken={this.state.selectedDestToken}\n                  availableTokens={this.state.availableDestinationTokens}\n                />\n              </Box>\n          }\n          {\n            this.state.selectedFromToken && this.state.selectedDestToken ? (\n              <Migrate\n                {...this.props}\n                showActions={false}\n                getTokenPrice={false}\n                isMigrationTool={true}\n                tokenConfig={this.state.tokenConfig}\n                migrationCallback={this.migrationCallback}\n                selectedToken={this.state.selectedFromToken}\n                selectedStrategy={this.props.selectedStrategy}\n              >\n                {\n                  !this.props.account ? (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'2.3em'}\n                          name={'Input'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={2}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Please connect with your wallet interact with Idle.\n                        </Text>\n                        <RoundButton\n                          buttonProps={{\n                            mt:2,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.props.connectAndValidateAccount}\n                        >\n                          Connect\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      {\n                        this.state.migrationSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              Your {this.state.selectedFromToken} have been successfully migrated!\n                            </Text>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedFromToken} in your wallet.\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n              </Migrate>\n            ) : null\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenMigration;\n","/*\n// batchDeposits[user][batchId] = amount\nmapping (address => mapping (uint256 => uint256)) public batchDeposits;\nmapping (uint256 => uint256) batchTotals; // in idleToken\nmapping (uint256 => uint256) batchRedeemedTotals; // in newIdleToken\n\nuint256 public currBatch;\naddress public idleToken;\naddress public newIdleToken;\naddress public underlying;\n\nfunction deposit() external\nfunction withdraw(uint256 batchId) external\n*/\n\nimport Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Box, Text, Icon, Link } from \"rimble-ui\";\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport TransactionField from '../TransactionField/TransactionField';\n\nclass BatchMigration extends Component {\n\n  state = {\n    canClaim:false,\n    batchTotals:{},\n    canDeposit:true,\n    action:'deposit',\n    batchDeposits:{},\n    tokenConfig:null,\n    processing:{\n      claim:{\n        txHash:null,\n        loading:false\n      },\n    },\n    hasDeposited:false,\n    selectedToken:null,\n    batchCompleted:false,\n    claimSucceeded:false,\n    migrationSucceeded:false,\n    selectedTokenConfig:null,\n    migrationContractApproved:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async checkBatchs(){\n\n    const migrationContractInfo = this.state.selectedTokenConfig.migrationContract;\n\n    await Promise.all([\n      this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi),\n      this.props.initContract(this.state.selectedTokenConfig.name,this.state.selectedTokenConfig.address,this.state.selectedTokenConfig.abi)\n    ]);\n\n    const [currBatchIndex,migrationContractApproved] = await Promise.all([\n      this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'currBatch'),\n      this.functionsUtil.checkTokenApproved(this.state.selectedTokenConfig.name,migrationContractInfo.address,this.props.account)\n    ]);\n\n    const newState = {};\n    const batchDeposits = {};\n    const batchTotals = {};\n    let batchCompleted = false;\n\n    if (currBatchIndex !== null){\n      for (let batchIndex = 0; batchIndex <= currBatchIndex ; batchIndex++){\n        let [batchTotal,batchDeposit] = await Promise.all([\n          this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchTotals',[batchIndex]),\n          this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n        ]);\n        if (batchTotal && batchTotal !== null){\n          batchTotals[batchIndex] = this.functionsUtil.fixTokenDecimals(batchTotal,this.state.selectedTokenConfig.decimals);\n        }\n        if (batchDeposit !== null){\n          batchDeposit = this.functionsUtil.fixTokenDecimals(batchDeposit,this.state.selectedTokenConfig.decimals);\n          if (batchDeposit.gt(0)){\n\n            batchDeposits[batchIndex] = batchDeposit;\n            // Check claimable\n            if (batchIndex < currBatchIndex){\n              batchCompleted = true;\n            }\n          }\n        }\n      }\n\n      newState.batchDeposits = batchDeposits;\n    }\n\n    const hasDeposited = (batchDeposits && Object.keys(batchDeposits).length>0);\n\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    newState.claimSucceeded = false;\n    newState.batchTotals = batchTotals;\n    newState.batchCompleted = batchCompleted;\n    newState.hasDeposited = hasDeposited;\n    newState.canDeposit = !hasDeposited && batchMigrationDepositEnabled;\n    newState.canClaim = batchCompleted || hasDeposited;\n    newState.action = hasDeposited ? 'redeem' : 'deposit';\n    newState.migrationContractApproved = migrationContractApproved;\n\n    this.setState(newState);\n  }\n\n  async loadTokens(){\n    const selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    this.selectFromToken(selectedToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      await this.loadTokens();\n    }\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      this.checkBatchs();\n    }\n  }\n\n  selectFromToken = async (selectedToken) => {\n\n    const selectedTokenConfig = this.props.toolProps.availableTokens[selectedToken];\n    const strategyAvailableTokens =  this.props.availableStrategies[selectedTokenConfig.strategy];\n\n    const baseTokenConfig = strategyAvailableTokens[selectedTokenConfig.baseToken];\n\n    const tokenConfig = {\n      token:selectedTokenConfig.baseToken,\n      address:selectedTokenConfig.address,\n      decimals:selectedTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = baseTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:selectedTokenConfig.abi,\n      name:selectedTokenConfig.name,\n      token:selectedTokenConfig.token,\n      address:selectedTokenConfig.address\n    };\n    \n    const migrationContract = selectedTokenConfig.migrationContract;\n\n    // Add migration function\n    if (baseTokenConfig.migrateFunction){\n      migrationContract.functions[0].name = baseTokenConfig.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(selectedTokenConfig.strategy,baseTokenConfig.baseToken);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedTokenConfig\n    });\n  }\n\n  claim = async () => {\n    if (!this.state.batchCompleted){\n      return null;\n    }\n\n    const loading = true;\n    const claimableValue = 0;\n    const batchId = Object.keys(this.state.batchDeposits)[0];\n\n    const callbackClaim = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: `BatchMigration`,\n        eventAction: 'Claim',\n        eventLabel: this.props.selectedToken,\n        eventValue: parseInt(claimableValue)\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        claimSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          claim:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptClaim = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          claim:{\n            ...prevState.processing.claim,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'withdraw', [batchId], null, callbackClaim, callbackReceiptClaim);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        claim:{\n          ...prevState.processing.claim,\n          loading\n        }\n      }\n    }));\n  }\n\n  setAction = (action) => {\n    if (action !== null && ['deposit','redeem'].includes(action.toLowerCase())){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  migrationCallback = () => {\n    this.checkBatchs();\n    this.setState({\n      migrationSucceeded:true\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedToken){\n      return null;\n    }\n\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    const batchId = this.state.batchDeposits && Object.keys(this.state.batchDeposits).length>0 ? Object.keys(this.state.batchDeposits)[0] : null;\n    const batchDeposit = this.state.batchDeposits && Object.values(this.state.batchDeposits).length>0 ? Object.values(this.state.batchDeposits)[0] : null;\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to migrate:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              id={'token-from'}\n              showBalance={true}\n              isSearchable={false}\n              onChange={this.selectFromToken}\n              selectedToken={this.state.selectedToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            (this.state.canDeposit || this.state.canClaim) && \n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  px:4,\n                  mt:3,\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                > \n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.migrationContractApproved ? 'CheckBox' : 'LooksOne'}\n                      color={ this.state.migrationContractApproved ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Approve the batch migration contract\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.hasDeposited ? 'CheckBox' : 'LooksTwo'}\n                      color={ this.state.hasDeposited ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Deposit your {this.state.selectedTokenConfig.token}\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.batchCompleted ? 'CheckBox' : 'Looks3'}\n                      color={ this.state.batchCompleted ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Wait for the batch to be migrated\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.claimSucceeded ? 'CheckBox' : 'Looks4'}\n                      color={ this.state.claimSucceeded ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Claim your {this.state.selectedToken}V4\n                    </Text>\n                  </Flex>\n                </Flex>\n              </DashboardCard>\n          }\n          {\n            this.state.selectedToken ? (\n              <Box width={1}>\n                {\n                  this.state.migrationContractApproved && (this.state.canDeposit || this.state.canClaim) && \n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text mb={2}>\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canDeposit ? this.setAction('deposit') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canDeposit }\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canClaim ? this.setAction('redeem') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canClaim }\n                          isActive={ this.state.action === 'redeem' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Claim\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                }\n                {\n                  this.state.action === 'deposit' ? \n                    batchMigrationDepositEnabled ? (\n                      <Migrate\n                        {...this.props}\n                        showActions={false}\n                        migrationParams={[]}\n                        getTokenPrice={false}\n                        isMigrationTool={true}\n                        migrationIcon={'FileDownload'}\n                        waitText={'Deposit estimated in'}\n                        tokenConfig={this.state.tokenConfig}\n                        selectedToken={this.state.selectedToken}\n                        callbackApprove={this.checkBatchs.bind(this)}\n                        selectedStrategy={this.props.selectedStrategy}\n                        migrationCallback={this.migrationCallback.bind(this)}\n                        migrationText={`Deposit your ${this.state.selectedTokenConfig.token} and wait until it is converted to the new ${this.state.tokenConfig.idle.token}.`}\n                      >\n                        {\n                          !this.props.account ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mt:3\n                              }}\n                            >\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  size={'2.3em'}\n                                  name={'Input'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mt={2}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  Please connect with your wallet interact with Idle.\n                                </Text>\n                                <RoundButton\n                                  buttonProps={{\n                                    mt:2,\n                                    width:[1,1/2]\n                                  }}\n                                  handleClick={this.props.connectAndValidateAccount}\n                                >\n                                  Connect\n                                </RoundButton>\n                              </Flex>\n                            </DashboardCard>\n                          ) : (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                my:3\n                              }}\n                            >\n                              {\n                                batchId ? (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      color={'cellText'}\n                                      name={'HourglassEmpty'}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      {\n                                        this.state.batchCompleted ? (\n                                          <Text.span\n                                            color={'cellText'}\n                                          >The batch has been migrated, click on the \"Claim\" button to withdraw your tokens.</Text.span>\n                                        ) : (\n                                          <Text.span\n                                            color={'cellText'}\n                                          >\n                                            You have successfully deposited {batchDeposit.toFixed(4)} {this.state.selectedTokenConfig.token}, please wait until the batch is migrated to claim your tokens.\n                                            {\n                                              typeof this.state.batchTotals[batchId] !== 'undefined' && \n                                              <Text.span\n                                                color={'cellText'}\n                                              >\n                                                <br />Batch pool: {this.state.batchTotals[batchId].toFixed(4)} {this.state.selectedTokenConfig.token}\n                                              </Text.span>\n                                            }\n                                          </Text.span>\n                                        )\n                                      }\n                                    </Text>\n                                  </Flex>\n                                ) : this.state.migrationSucceeded ? (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      name={'DoneAll'}\n                                      color={this.props.theme.colors.transactions.status.completed}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      You have successfully deposited your {this.state.selectedTokenConfig.token} into the batch!\n                                    </Text>\n                                  </Flex>\n                                ) : (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      name={'MoneyOff'}\n                                      color={'cellText'}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      You don't have any {this.state.selectedTokenConfig.token} in your wallet.\n                                    </Text>\n                                  </Flex>\n                                )\n                              }\n                            </DashboardCard>\n                          )\n                        }\n                      </Migrate>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          my:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Text\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            Batch migration is disabled for this asset.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        my:3\n                      }}\n                    >\n                      {\n                        this.state.processing.claim.loading ? (\n                          <Flex\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar {...this.props} waitText={`Claim estimated in`} endMessage={`Finalizing approve request...`} hash={this.state.processing.claim.txHash} />\n                          </Flex>\n                        ) : this.state.claimSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You have successfully withdrawn your {this.state.selectedToken} V4!\n                            </Text>\n                            <Link\n                              mt={2}\n                              textAlign={'center'}\n                              hoverColor={'primary'}\n                              onClick={ e => this.props.goToSection(this.state.selectedTokenConfig.strategy+'/'+this.state.selectedTokenConfig.baseToken) }\n                            >\n                              Go to the Dashboard\n                            </Link>\n                          </Flex>\n                        ) : this.state.batchCompleted ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              color={'cellText'}\n                              name={'FileUpload'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The batch has been migrated!<br />You can now claim your {this.state.tokenConfig.idle.token} V4.\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                              <RoundButton\n                                buttonProps={{\n                                  mt:3,\n                                  width:[1,0.5],\n                                  mainColor:this.props.theme.colors.redeem\n                                }}\n                                handleClick={ e => this.claim() }\n                              >\n                                Claim\n                              </RoundButton>\n                            </Flex>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              color={'cellText'}\n                              name={'HourglassEmpty'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              <Text.span\n                                color={'cellText'}\n                              >\n                                You have successfully deposited {batchDeposit.toFixed(4)} {this.state.selectedTokenConfig.token}, please wait until the batch is migrated to claim your V4 tokens.\n                                {\n                                  typeof this.state.batchTotals[batchId] !== 'undefined' && \n                                  <Text.span\n                                    color={'cellText'}\n                                  >\n                                    <br />Batch pool: {this.state.batchTotals[batchId].toFixed(4)} {this.state.selectedTokenConfig.token}\n                                  </Text.span>\n                                }\n                              </Text.span>\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n              </Box>\n            ) : null\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default BatchMigration;","import ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\nimport { Flex, Text, Heading, Input, Form, Field, Icon, Link, Loader, Button } from \"rimble-ui\";\n\nclass DeployB2BVesting extends Component {\n\n  state = {\n    actions:[],\n    processing: {\n      txHash:null,\n      loading:false,\n      actionIndex:[]\n    },\n    action:'deploy',\n    validated:false,\n    viewAction:null,\n    editAction:null,\n    newAction:false,\n    maxContracts:10,\n    tokenConfig:null,\n    tokenBalance:null,\n    contractInfo:null,\n    actionValid:false,\n    actionInputs:null,\n    claimedTokens:null,\n    deployedContracts:[],\n    contractDeployed:false,\n    inputs:[\n      {\n        name:'owner',\n        type:'address'\n      },\n      {\n        name:'recipient',\n        type:'address'\n      },\n      {\n        name:'vestingPeriod',\n        type:'uint256'\n      }\n    ]\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  setAction(action){\n    this.setState({\n      action,\n      editAction:null,\n      viewAction:null,\n      claimedTokens:null,\n      contractDeployed:null\n    });\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false,\n        actionIndex:[]\n      }\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadContracts();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    this.validateForm();\n    this.checkInputs();\n\n    const contractDeployed = prevState.contractDeployed !== this.state.contractDeployed && this.state.contractDeployed;\n    if (contractDeployed){\n      this.loadContracts();\n    }\n  }\n\n  async loadContracts(){\n    const tokenConfig = this.functionsUtil.getGlobalConfig(['govTokens','IDLE']);\n    const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n    const fromBlock = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n    const proxyCreated = await this.functionsUtil.getContractPastEvents('ProxyFactory', 'ProxyCreated', {fromBlock, toBlock: 'latest'});\n    const deployedContractsAddresses = proxyCreated.filter( p => p.returnValues.implementation.toLowerCase() === vesterImplementation.address.toLowerCase() ).map( p => p.returnValues.proxy );\n    // console.log('proxyCreated',proxyCreated,'deployedContractsAddresses',deployedContractsAddresses);\n\n    const deployedContracts = [];\n    await this.functionsUtil.asyncForEach(deployedContractsAddresses, async (contractAddress) => {\n      const contractName = `b2bVesting_${contractAddress}`;\n      await this.props.initContract(contractName,contractAddress,vesterImplementation.abi);\n      const [\n        // initialized,\n        owner,\n        recipient,\n        vestingPeriod,\n        availableBalance,\n        depositAmounts,\n      ] = await Promise.all([\n          // this.functionsUtil.genericContractCall(contractName,'initialized'),\n          this.functionsUtil.genericContractCall(contractName,'owner'),\n          this.functionsUtil.genericContractCall(contractName,'recipient'),\n          this.functionsUtil.genericContractCall(contractName,'vestingPeriod'),\n          this.functionsUtil.getTokenBalance(tokenConfig.token,contractAddress),\n          this.functionsUtil.genericContractCall(contractName,'getDepositAmounts')\n      ]);\n\n      let totalDeposited = this.functionsUtil.BNify(0);\n      if (depositAmounts) {\n        totalDeposited = depositAmounts.reduce( (total,amount) => {\n          total = total.plus(amount);\n          return total;\n        },this.functionsUtil.BNify(0));\n\n        totalDeposited = this.functionsUtil.fixTokenDecimals(totalDeposited,tokenConfig.decimals);\n      }\n\n      // console.log(contractName,initialized,owner,recipient,vestingPeriod,depositAmounts,parseFloat(totalDeposited));\n\n      deployedContracts.push({\n        owner,\n        recipient,\n        contractName,\n        vestingPeriod,\n        totalDeposited,\n        contractAddress,\n        availableBalance\n      });\n    });\n    const tokenBalance = await this.functionsUtil.getTokenBalance('IDLE',this.props.account);\n\n    // console.log(deployedContracts);\n\n    this.setState({\n      tokenConfig,\n      tokenBalance,\n      deployedContracts\n    });\n  }\n\n  validateForm(){\n    const validated = Object.values(this.state.actions).length>0;\n    if (validated !== this.state.validated){\n      this.setState({\n        validated\n      });\n    }\n  }\n\n  getTransactionParams(amount){\n    const params = {\n      value:null,\n      methodName:'deposit',\n      methodParams:[amount]\n    };\n    return params;\n  }\n\n  claimCallback(tx){\n    // console.log('claimCallback',tx);\n    if (tx.status === 'success'){\n      this.loadContracts();\n\n      const claimedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.address.toLowerCase() ) : null;\n      if (claimedTokensLog){\n        const claimedTokens = this.functionsUtil.fixTokenDecimals(parseInt(claimedTokensLog.data,16),this.state.tokenConfig.decimals);\n        this.setState({\n          claimedTokens\n        });\n      }\n    }\n  }\n\n  depositCallback(tx,amount,params){\n    // console.log('depositCallback',tx,amount,params);\n    if (tx.status === 'success'){\n      this.loadContracts();\n    }\n  }\n\n  getPatternByFieldType(type,returnString=false){\n    let fieldPattern = null;\n    switch (type){\n      case 'address':\n        fieldPattern = '^0x[a-fA-F0-9]{40}$';\n      break;\n      case 'address[]':\n        fieldPattern = '^((0x[a-fA-F0-9]{40})[,]?)+$';\n      break;\n      case 'string':\n        fieldPattern = '[\\\\w]+';\n      break;\n      case 'bool':\n        fieldPattern = '(0|1)';\n      break;\n      case 'uint256':\n      case 'uint8':\n        fieldPattern = '[\\\\d]+';\n      break;\n      default:\n        fieldPattern = null;\n      break;\n    }\n\n    if (!returnString && fieldPattern){\n      fieldPattern = new RegExp(fieldPattern);\n    }\n\n    return fieldPattern;\n  }\n\n  checkInputs(){\n\n    if (!this.state.actionInputs){\n      return false;\n    }\n\n    const inputs = this.state.inputs;\n    let actionValid = Object.values(this.state.actionInputs).length === inputs.length;\n\n    if (actionValid){\n      Object.values(this.state.actionInputs).forEach( (inputValue,inputIndex) => {\n        const inputInfo = inputs[inputIndex];\n        const fieldPattern = this.getPatternByFieldType(inputInfo.type);\n        const inputValid = fieldPattern ? inputValue.match(fieldPattern) !== null : true;\n        actionValid = actionValid && inputValid;\n        // console.log('checkInputs',inputInfo.name,inputInfo.type,inputValue,inputValid,actionValid);\n      });\n    }\n\n    if (actionValid !== this.state.actionValid){\n      this.setState({\n        actionValid\n      });\n    }\n  }\n\n  valueChange(e,inputIndex){\n    let actionValue = e.target.value;\n    this.setState({\n      actionValue\n    });\n  }\n\n  inputChange(e,inputIndex){\n    let inputValue = e.target.value;\n\n    this.setState((prevState) => ({\n      actionInputs:{\n        ...prevState.actionInputs,\n        [inputIndex]:inputValue\n      }\n    }));\n  }\n\n  deleteAction(){\n    if (this.state.editAction !== null){\n      let actions = this.state.actions;\n      if (actions[this.state.editAction]){\n        delete actions[this.state.editAction];\n        actions = Object.values(actions);\n        const editAction = null;\n        const actionInputs = null;\n\n        this.setState({\n          actions,\n          editAction,\n          actionInputs\n        });\n      }\n    }\n  }\n\n  addAction(){\n\n    // Check inputs number\n    const inputs = Object\n                    .values(this.state.actionInputs).filter( v => v.length>0 )\n                    .map( (inputValue,inputIndex) => {\n                      const inputInfo = this.state.inputs[inputIndex];\n                      switch (inputInfo.type){\n                        case 'address[]':\n                          inputValue = inputValue.split(',');\n                        break;\n                        case 'uint256[]':\n                          inputValue = inputValue.split(',').map( n => this.functionsUtil.toBN(n) );\n                        break;\n                        case 'uint256':\n                          inputValue = this.functionsUtil.toBN(inputValue);\n                        break;\n                        default:\n                          if (inputInfo.type.substr(-2) === '[]'){\n                            inputValue = inputValue.split(',');\n                          }\n                        break;\n                      }\n\n                      return inputValue;\n                    });\n\n    if (inputs.length<this.state.inputs.length){\n      return false;\n    }\n\n    const action = {\n      txError:null,\n      contractAddress:null,\n      inputs:this.state.actionInputs,\n    };\n\n    const newAction = false;\n    const actions = Object.values(this.state.actions);\n\n    if (this.state.editAction === null){\n      actions.push(action);\n    } else {\n      actions[this.state.editAction] = action;\n    }\n\n    const editAction = null;\n    const actionInputs = null;\n\n    this.setState({\n      actions,\n      newAction,\n      editAction,\n      actionInputs\n    });\n  }\n\n  setEditAction(editAction){\n\n    if (!this.state.actions[editAction]){\n      return false;\n    }\n\n    if (editAction === this.state.editAction){\n      return false;\n    }\n\n    const action = this.state.actions[editAction];\n\n    const newAction = false;\n    const actionInputs = action.inputs;\n\n    this.setState({\n      newAction,\n      editAction,\n      actionInputs\n    });\n  }\n\n  setViewAction(viewAction){\n\n    if (viewAction !== this.state.viewAction){\n      const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n      const deployedContract = this.state.deployedContracts[viewAction];\n      const contractInfo = {\n        abi:vesterImplementation.abi,\n        name:deployedContract.contractName,\n        address:deployedContract.contractAddress\n      };\n      this.setState({\n        viewAction,\n        contractInfo,\n        claimedTokens:null\n      });\n    }\n  }\n\n  setNewAction(newAction){\n    if (newAction === this.state.newAction){\n      return false;\n    }\n\n    const editAction = null;\n\n    this.setState({\n      newAction,\n      editAction,\n    });\n  }\n\n  async handleSubmit(e){\n    e.preventDefault();\n\n    const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n    const idleAddress = this.functionsUtil.getGlobalConfig(['govTokens','IDLE','address']);\n\n    const callback = (tx,error,actionIndex) => {\n      const txSucceeded = tx.status === 'success';\n      const actions = Object.values(this.state.actions);\n      const isLastAction = parseInt(actionIndex)===parseInt(this.state.actions.length)-1;\n      const contractDeployed = txSucceeded && isLastAction;\n      // console.log('callback_1 -',actionIndex,txSucceeded,contractDeployed,tx);\n      if (txSucceeded){\n        const clonedVesterAddress = tx.txReceipt.events && tx.txReceipt.events.ProxyCreated ? tx.txReceipt.events.ProxyCreated.returnValues[1] : `0x${tx.txReceipt.logs[0].data.substr(-40)}`;\n        actions[actionIndex].contractAddress = clonedVesterAddress;\n        // console.log('callback_2 -',actionIndex,actions[actionIndex].contractAddress);\n      } else {\n        actions[actionIndex].txError = true;\n      }\n\n      // console.log('callback_3 -',actionIndex,actions);\n\n      this.setState({\n        actions,\n        contractDeployed\n      },()=>{\n        if (isLastAction){\n          this.cancelTransaction();\n        }\n      });\n    };\n\n    const callbackReceipt = (tx,actionIndex) => {\n      const txHash = tx.transactionHash;\n      // console.log('callbackReceipt',actionIndex,tx);\n      const processing = Object.assign({},this.state.processing);\n      processing.txHash = txHash;\n      processing.actionIndex.push(actionIndex);\n      this.setState({\n        processing\n      });\n    };\n\n    this.state.actions.forEach((action,actionIndex) => {\n      const ownerAddress = action.inputs[0];\n      const recipientAddress = action.inputs[1];\n      const vestingPeriod = action.inputs[2];\n      const initSig = \"initialize(address,address,address,uint256)\";\n      const initData = this.props.web3.eth.abi.encodeParameters(\n        ['address','address','address','uint256'],\n        [ownerAddress,idleAddress,recipientAddress,vestingPeriod]\n      );\n      const methodParams = [vesterImplementation.address,initSig,initData];\n      this.functionsUtil.contractMethodSendWrapper('ProxyFactory', 'createAndCall', methodParams, (tx,error) => callback(tx,error,actionIndex), (tx) => callbackReceipt(tx,actionIndex) );\n    });\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n\n    return false;\n  }\n\n  render() {\n\n    const depositContracts = this.props.account ? this.state.deployedContracts.filter( c => c.owner.toLowerCase() === this.props.account.toLowerCase() ) : [];\n    const claimContracts = this.props.account ? this.state.deployedContracts.filter( c => c.recipient.toLowerCase() === this.props.account.toLowerCase() ) : [];\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.42]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Flex\n            width={1}\n            flexDirection={'column'}\n          >\n            <Text\n              mb={2}\n            >\n              Choose the action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'space-between'}\n            >\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Deploy'}\n                icon={'CloudUpload'}\n                iconColor={'deposit'}\n                iconBgColor={'#ced6ff'}\n                isActive={ this.state.action === 'deploy' }\n                handleClick={ e => this.setAction('deploy') }\n              />\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Deposit'}\n                iconColor={'deposit'}\n                icon={'ArrowDownward'}\n                iconBgColor={'#ced6ff'}\n                isActive={ this.state.action === 'deposit' }\n                handleClick={ e => this.setAction('deposit') }\n              />\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Claim'}\n                iconColor={'redeem'}\n                icon={'ArrowUpward'}\n                iconBgColor={'#ceeff6'}\n                isActive={ this.state.action === 'claim' }\n                handleClick={ e => this.setAction('claim') }\n              />\n            </Flex>\n          </Flex>\n          <Flex\n            pb={2}\n            width={1}\n            my={[2,3]}\n            borderColor={'divider'}\n            borderBottom={'1px solid transparent'}\n          >\n            <Heading.h4\n              fontSize={[2,3]}\n              fontWeight={[2,3]}\n              style={{\n                textTransform:'capitalize'\n              }}\n            >\n              {this.state.action}\n            </Heading.h4>\n          </Flex>\n          <Flex\n            flexDirection={'column'}\n          >\n            {\n              this.state.action === 'deploy' ? (\n                <Form\n                  width={1}\n                  validated={this.state.validated}\n                  onSubmit={this.handleSubmit.bind(this)}\n                >\n                  {\n                    Object.values(this.state.actions).map( (action,actionIndex) => {\n                      return (\n                        <DashboardCard\n                          cardProps={{\n                            py:2,\n                            px:3,\n                            mb:3,\n                            width:1\n                          }}\n                          titleParentProps={{\n                            ml:0,\n                            my:1,\n                            justifyContent:'center'\n                          }}\n                          titleProps={{\n                            fontSize:2,\n                            fontWeight:3\n                          }}\n                          isInteractive={true}\n                          key={`action_${actionIndex}`}\n                          title={ this.state.editAction === actionIndex ? 'Edit Contract' : null }\n                          handleClick={ e => /*action.contractAddress ? this.functionsUtil.openWindow(this.functionsUtil.getEtherscanAddressUrl(action.contractAddress)) : */this.setEditAction(actionIndex) }\n                        >\n                          {\n                            this.state.editAction === actionIndex ? (\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                {\n                                  this.state.inputs.map( (input,inputIndex) => {\n                                    const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                    const fieldPattern = this.getPatternByFieldType(input.type,true);\n                                    return (\n                                      <Field\n                                        style={{\n                                          width:'100%',\n                                          display:'flex',\n                                          alignItems:'stretch',\n                                          flexDirection:'column'\n                                        }}\n                                        key={`input_${inputIndex}`}\n                                        label={`${input.name} (${input.type})`}\n                                      >\n                                        <Input\n                                          required\n                                          width={1}\n                                          type={fieldType}\n                                          pattern={fieldPattern}\n                                          borderColor={'cardBorder'}\n                                          backgroundColor={'cardBg'}\n                                          placeholder={`${input.name} (${input.type})`}\n                                          onChange={ e => this.inputChange(e,inputIndex) }\n                                          value={this.state.actionInputs && this.state.actionInputs[inputIndex] ? this.state.actionInputs[inputIndex] : ''}\n                                        />\n                                      </Field>\n                                    )\n                                  })\n                                }\n                                <Flex\n                                  mb={2}\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  {\n                                    action.contractAddress ? (\n                                      <ExtLink\n                                        fontSize={1}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                        hoverColor={this.props.theme.colors.transactions.status.completed}\n                                        href={this.functionsUtil.getEtherscanAddressUrl(action.contractAddress)}\n                                      >\n                                        Deployed at {action.contractAddress}\n                                      </ExtLink>\n                                    ) : !this.state.processing.loading && (\n                                      <Flex\n                                        width={1}\n                                        alignItems={'center'}\n                                        flexDirection={'column'}\n                                        justifyContent={'center'}\n                                      >\n                                        <RoundButton\n                                          buttonProps={{\n                                            px:[0,4],\n                                            type:'button',\n                                            width:[1,'auto'],\n                                            disabled:!this.state.actionValid\n                                          }}\n                                          handleClick={this.addAction.bind(this)}\n                                        >\n                                          Save Contract\n                                        </RoundButton>\n                                        <Link\n                                          mt={2}\n                                          color={'red'}\n                                          hoverColor={'red'}\n                                          onClick={this.deleteAction.bind(this)}\n                                        >\n                                          Delete Contract\n                                        </Link>\n                                      </Flex>\n                                    )\n                                  }\n                                </Flex>\n                              </Flex>\n                            ) : (\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'space-between'}\n                              >\n                                <Text>\n                                  {this.functionsUtil.shortenHash(action.inputs[0])} - {this.functionsUtil.shortenHash(action.inputs[1])} - {action.inputs[2]} { action.contractAddress ? '- DEPLOYED' : '' }\n                                </Text>\n                                { \n                                  action.contractAddress ? (\n                                    <Flex\n                                      p={'3px'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                    >\n                                      <Icon\n                                        name={'Done'}\n                                        align={'center'}\n                                        size={this.props.isMobile ? '1.2em' : '1.8em'}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      />\n                                    </Flex>\n                                  ) : this.state.processing.loading && this.state.processing.actionIndex && this.state.processing.actionIndex.includes(parseInt(actionIndex)) ? (\n                                    <Loader size=\"28px\" />\n                                  ) : action.txError ? (\n                                    <Flex\n                                      p={'3px'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                    >\n                                      <Icon\n                                        color={'red'}\n                                        name={'Error'}\n                                        align={'center'}\n                                        size={ this.props.isMobile ? '1.2em' : '1.8em' }\n                                      />\n                                    </Flex>\n                                  ) : (\n                                    <Flex\n                                      p={['4px','7px']}\n                                      borderRadius={'50%'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                      backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                                    >\n                                      <Icon\n                                        name={'Edit'}\n                                        align={'center'}\n                                        color={'redeem'}\n                                        size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                      />\n                                    </Flex>\n                                  )\n                                }\n                              </Flex>\n                            )\n                          }\n                        </DashboardCard>\n                      );\n                    })\n                  }\n                  {\n                    (!this.state.contractDeployed && !this.state.processing.loading && (!this.state.actions || Object.values(this.state.actions).length<this.state.maxContracts)) && (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        handleClick={ e => this.setNewAction(true) }\n                        title={ this.state.newAction ? 'Add Contract' : null }\n                      >\n                        {\n                          this.state.newAction ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  const fieldPattern = this.getPatternByFieldType(input.type,true);\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        width={1}\n                                        type={fieldType}\n                                        pattern={fieldPattern}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        placeholder={`${input.name} (${input.type})`}\n                                        onChange={ e => this.inputChange(e,inputIndex) }\n                                        value={this.state.actionInputs && this.state.actionInputs[inputIndex] ? this.state.actionInputs[inputIndex] : ''}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                              >\n                                <RoundButton\n                                  buttonProps={{\n                                    px:[0,4],\n                                    type:'button',\n                                    width:[1,'auto'],\n                                    disabled:!this.state.actionValid\n                                  }}\n                                  handleClick={this.addAction.bind(this)}\n                                >\n                                  Add Contract\n                                </RoundButton>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                Add Contract\n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'Add'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    )\n                  }\n                  <Flex\n                    mb={3}\n                    width={1}\n                    alignItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    {\n                      this.state.contractDeployed ? (\n                        <DashboardCard\n                          cardProps={{\n                            py:3,\n                            px:4,\n                            width:[1,'100%']\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Icon\n                              name={'DoneAll'}\n                              align={'center'}\n                              size={ this.props.isMobile ? '1.4em' : '2.2em' }\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={1}\n                              fontWeight={3}\n                              fontSize={[2,3]}\n                              color={'dark-gray'}\n                              textAlign={'center'}\n                            >\n                              B2B Vesting contracts have been deployed\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      ) : this.state.processing && this.state.processing.loading ? (\n                        <TxProgressBar\n                          {...this.props}\n                          hash={this.state.processing.txHash}\n                          waitText={`Deployment estimated in`}\n                          endMessage={`Finalizing deployment request...`}\n                          cancelTransaction={this.cancelTransaction.bind(this)}\n                        />\n                      ) : (\n                        <RoundButton\n                          buttonProps={{\n                            type:'submit',\n                            width:[1,'15em'],\n                            disabled:!this.state.validated\n                          }}\n                        >\n                          Deploy Contracts\n                        </RoundButton>\n                      )\n                    }\n                  </Flex>\n                </Form>\n              ) : this.state.action === 'deposit' ?\n                depositContracts.length>0 ?\n                  depositContracts.map( (contractInfo,actionIndex) => {\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        key={`action_${actionIndex}`}\n                        handleClick={ e => this.setViewAction(actionIndex) }\n                        title={ this.state.viewAction === actionIndex ? 'View Contract' : null }\n                      >\n                        {\n                          this.state.viewAction === actionIndex ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Contract Address`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.contractAddress}\n                                />\n                              </Field>\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        readOnly\n                                        width={1}\n                                        type={fieldType}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        value={contractInfo[input.name]}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Total Deposited`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.totalDeposited.toFixed(6)}\n                                />\n                              </Field>\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Available Balance`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.availableBalance.toFixed(6)}\n                                />\n                              </Field>\n                              <Flex\n                                mb={2}\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                                borderTop={'1px solid transparent'}\n                              >\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <SendTxWithBalance\n                                    {...this.props}\n                                    action={this.state.action}\n                                    tokenConfig={this.state.tokenConfig}\n                                    tokenBalance={this.state.tokenBalance}\n                                    contractInfo={this.state.contractInfo}\n                                    callback={this.depositCallback.bind(this)}\n                                    getTransactionParams={this.getTransactionParams.bind(this)}\n                                    approveDescription={'You need to approve the Smart-Contract first'}\n                                  >\n                                    <DashboardCard\n                                      cardProps={{\n                                        p:3,\n                                      }}\n                                    >\n                                      <Flex\n                                        alignItems={'center'}\n                                        flexDirection={'column'}\n                                      >\n                                        <Icon\n                                          size={'2.3em'}\n                                          name={'MoneyOff'}\n                                          color={'cellText'}\n                                        />\n                                        <Text\n                                          mt={2}\n                                          fontSize={2}\n                                          color={'cellText'}\n                                          textAlign={'center'}\n                                        >\n                                          You don't have any $IDLE in your wallet.\n                                        </Text>\n                                      </Flex>\n                                    </DashboardCard>\n                                  </SendTxWithBalance>\n                                </Flex>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                {this.functionsUtil.shortenHash(contractInfo.owner)} - {this.functionsUtil.shortenHash(contractInfo.recipient)} - {contractInfo.vestingPeriod} \n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'ZoomIn'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    );\n                  })\n                : (\n                  <Text\n                    textAlign={'center'}\n                  >\n                    You can't deposit in any contract yet.\n                  </Text>\n                )\n              : this.state.action === 'claim' &&\n                claimContracts.length>0 ?\n                  claimContracts.map( (contractInfo,actionIndex) => {\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        key={`action_${actionIndex}`}\n                        handleClick={ e => this.setViewAction(actionIndex) }\n                        title={ this.state.viewAction === actionIndex ? 'View Contract' : null }\n                      >\n                        {\n                          this.state.viewAction === actionIndex ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Contract Address`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.contractAddress}\n                                />\n                              </Field>\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        readOnly\n                                        width={1}\n                                        type={fieldType}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        value={contractInfo[input.name]}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Total Deposited`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.totalDeposited.toFixed(6)}\n                                />\n                              </Field>\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Available Balance`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.availableBalance.toFixed(6)}\n                                />\n                              </Field>\n                              <Flex\n                                mb={2}\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                                borderTop={'1px solid transparent'}\n                              >\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  {\n                                    this.state.claimedTokens && (\n                                      <Text\n                                        mb={2}\n                                        fontSize={2}\n                                        fontWeight={3}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >\n                                        You have successfully claimed {this.state.claimedTokens.toFixed(4)} {this.state.tokenConfig.token}\n                                      </Text>\n                                    )\n                                  }\n                                  {\n                                    contractInfo.availableBalance && contractInfo.availableBalance.gt(0.00000001) ? (\n                                      <ExecuteTransaction\n                                        params={[]}\n                                        {...this.props}\n                                        Component={Button}\n                                        componentProps={{\n                                          size:'medium',\n                                          value:'Claim',\n                                          mainColor:'redeem',\n                                        }}\n                                        methodName={'claim'}\n                                        action={this.state.action}\n                                        callback={this.claimCallback.bind(this)}\n                                        contractName={contractInfo.contractName}\n                                      />\n                                    ) : (\n                                      <Text\n                                        mb={2}\n                                        fontSize={2}\n                                        fontWeight={3}\n                                        color={'cellText'}\n                                      >\n                                        No balance available.\n                                      </Text>\n                                    )\n                                  }\n                                </Flex>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                {this.functionsUtil.shortenHash(contractInfo.owner)} - {this.functionsUtil.shortenHash(contractInfo.recipient)} - {contractInfo.vestingPeriod} \n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'ZoomIn'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    );\n                  })\n                : (\n                  <Text\n                    textAlign={'center'}\n                  >\n                    You can't claim from any contract yet.\n                  </Text>\n                )\n            }\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default DeployB2BVesting;\n","import Staking from '../Staking/Staking';\nimport IDLE from '../contracts/IDLE.json';\nimport WETH from '../abis/tokens/WETH.json';\nimport ERC20 from '../contracts/ERC20.json';\n// import Tranches from '../Tranches/Tranches';\nimport COMP from '../abis/compound/COMP.json';\nimport aToken from '../abis/aave/AToken.json';\nimport TokenSwap from '../TokenSwap/TokenSwap';\nimport yDAIv3 from '../abis/iearn/yDAIv3.json';\nimport LpStaking from '../LpStaking/LpStaking';\nimport stkIDLE from '../contracts/stkIDLE.json';\nimport yUSDCv3 from '../abis/iearn/yUSDCv3.json';\nimport yUSDTv3 from '../abis/iearn/yUSDTv3.json';\nimport ySUSDv3 from '../abis/iearn/ySUSDv3.json';\nimport yTUSDv3 from '../abis/iearn/yTUSDv3.json';\nimport Timelock from '../contracts/Timelock.json';\nimport CurveZap from '../abis/curve/CurveZap.json';\nimport CovToken from '../abis/cover/CovToken.json';\nimport B2BVester from '../contracts/B2BVester.json';\nimport IdleStaking from '../IdleStaking/IdleStaking';\n// import CurveSwap from '../abis/curve/CurveSwap.json';\nimport CurvePool from '../abis/curve/CurvePool.json';\nimport NexusMutual from '../NexusMutual/NexusMutual';\nimport CoverMint from '../abis/cover/CoverMint.json';\nimport LockedIDLE from '../contracts/LockedIDLE.json';\nimport LpStakingAbi from '../contracts/LpStaking.json';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TokenWrapper from '../TokenWrapper/TokenWrapper';\nimport PriceOracle from '../contracts/PriceOracle.json';\nimport FeeTreasury from '../contracts/FeeTreasury.json';\nimport IdleTokenV2 from '../contracts/IdleTokenV2.json';\nimport StrategyPage from '../StrategyPage/StrategyPage';\nimport BuyModal from '../utilities/components/BuyModal';\nimport IdleTokenV3 from '../contracts/IdleTokenV3.json';\nimport IdleTokenV4 from '../contracts/IdleTokenV4.json';\nimport BatchDeposit from '../BatchDeposit/BatchDeposit';\nimport EarlyRewards from '../contracts/EarlyRewards.json';\nimport CoverProtocol from '../CoverProtocol/CoverProtocol';\nimport CurveDeposit from '../abis/curve/CurveDeposit.json';\nimport VesterFactory from '../contracts/VesterFactory.json';\nimport GovernorAlpha from '../contracts/GovernorAlpha.json';\nimport EcosystemFund from '../contracts/EcosystemFund.json';\nimport Comptroller from '../abis/compound/Comptroller.json';\nimport erc20Forwarder from '../contracts/erc20Forwarder.json';\nimport BalancerPool from '../abis/balancer/BalancerPool.json';\nimport IdleController from '../contracts/IdleController.json';\nimport TokenMigration from '../TokenMigration/TokenMigration';\nimport BatchMigration from '../BatchMigration/BatchMigration';\nimport IdleBatchedMint from '../contracts/IdleBatchedMint.json';\nimport { RampInstantSDK } from '@ramp-network/ramp-instant-sdk';\nimport IdleProxyMinter from '../contracts/IdleProxyMinter.json';\nimport IdleRebalancerV3 from '../contracts/IdleRebalancerV3.json';\nimport LiquidityGaugeV2 from '../abis/curve/LiquidityGaugeV2.json';\nimport DeployB2BVesting from '../DeployB2BVesting/DeployB2BVesting';\nimport SushiV2Router02 from '../abis/sushiswap/SushiV2Router02.json';\nimport IdleBatchConverter from '../contracts/IdleBatchConverter.json';\nimport UniswapV2Router02 from '../abis/uniswap/UniswapV2Router02.json';\nimport IdleDepositForwarder from '../contracts/IdleDepositForwarder.json';\nimport SushiLiquidityPool from '../abis/sushiswap/SushiLiquidityPool.json';\nimport NexusMutualIncidents from '../abis/nexus/NexusMutualIncidents.json';\nimport StakingFeeDistributor from '../contracts/StakingFeeDistributor.json';\nimport NexusMutualDistributor from '../abis/nexus/NexusMutualDistributor.json';\nimport BalancerExchangeProxy from '../abis/balancer/BalancerExchangeProxy.json';\nimport IdleConverterPersonalSignV4 from '../contracts/IdleConverterPersonalSignV4.json';\nimport MinimalInitializableProxyFactory from '../contracts/MinimalInitializableProxyFactory.json';\n\nconst env = process.env;\n\nconst globalConfigs = {\n  appName: 'Idle',\n  version: 'v5.9',\n  baseToken: 'ETH',\n  baseURL: 'https://idle.finance',\n  forumURL:'https://gov.idle.finance',\n  theme:{\n    darkModeEnabled:true\n  },\n  betaURL: 'https://beta.idle.finance',\n  countries:{\n    'USA':'United States of America',\n    'GBR':'United Kingdom',\n    'AUS':'Australia',\n    'BRA':'Brazil',\n    'CHN':'China',\n    'CAN':'Canada',\n    'EUR':'Europe',\n    'HKG':'Hong Kong',\n    'IND':'India',\n    'MEX':'Mexico',\n    'RUS':'Russia',\n    'ZAF':'South Africa',\n    'KOR':'South Korea'\n  },\n  logs:{ // Enable logs levels\n    errorsEnabled:false,\n    messagesEnabled:false,\n  },\n  connectors:{ // Connectors props\n    metamask:{\n      enabled:true,\n      subcaption:'Browser extension'\n    },\n    opera:{\n      enabled:true,\n      subcaption:'Opera injected wallet'\n    },\n    dapper:{\n      enabled:true,\n      icon:'dapper.png',\n      subcaption:'Browser extension',\n    },\n    coinbase:{\n      enabled:true,\n      icon:'coinbase.png',\n      subcaption:'Connect with Coinbase wallet'\n    },\n    trustwallet:{\n      enabled:true,\n      subcaption:'Connect with Trust Wallet'\n    },\n    walletconnect:{\n      enabled:true,\n      iconModal:'walletconnect.png',\n      subcaption:'Connect with QR code'\n    },\n    walletlink:{\n      enabled:true,\n      icon:'coinbase.png',\n      name:'Coinbase Wallet',\n      subcaption:'Connect with QR code'\n    },\n    gnosis:{\n      enabled:true,\n      // icon:'coinbase.png',\n      name:'Gnosis Safe App',\n      subcaption:'Connect with Gnosis Safe App'\n    },\n    fortmatic:{\n      enabled:true,\n      subcaption:'Login with phone-number'\n    },\n    portis:{\n      enabled:true,\n      subcaption:'Login with e-mail'\n    },\n    authereum:{\n      enabled:true,\n      subcaption:'Cross-device wallet'\n    },\n    torus:{\n      enabled:true,\n      icon:'torus.png',\n      subcaption:'One-Click login for Web 3.0'\n    },\n    trezor:{\n      enabled:true,\n      subcaption:'Hardware wallet'\n    },\n    ledger:{\n      enabled:true,\n      subcaption:'Hardware wallet'\n    },\n    ledgerlive:{\n      enabled:true,\n      subcaption:'Ledger Live Browser'\n    },\n    custom:{\n      enabled:true,\n      subcaption:'Custom address'\n    }\n  },\n  newsletterSubscription:{\n    endpoint:'https://dev.lapisgroup.it/idle/newsletter.php'\n  },\n  messages:{\n    scoreShort:'Protocol Risk Score',\n    apyShort:'Annual Percentage Yield',\n    tokenPrice:'The token price is calculated using Uniswap spot prices.',\n    cheapRedeem:'Amount of unlent funds available for low gas fees redeem',\n    curveBonusSlippage:'Slippage or bonus depending on if the coin is low or high in the Curve Pool',\n    distributionSpeed:'The distribution indicates the amount of tokens distributed for the entire pool.',\n    directMint:'Pay an additional gas fee to rebalance the pool and help all users gain an additional APR',\n    performanceFee:'This fee is charged on positive returns generated by Idle including accrued gov tokens except IDLE',\n    userDistributionSpeed:'The distribution indicates the amount of tokens distributed for your account based on your current pool share.',\n    govTokenApr:'Governance Token APR is calculated using the spot price from Uniswap and the current distribution speed for the specific pool.',\n    govTokenRedeemableBalance:'The redeemable balance is re-calculated on every interaction with the smart-contract so, the shown balance may be lower than the real one.',\n    riskScoreShort:'It\\'s a single, consistently, comparable value for measuring protocol risk, based on factors including smart contract risk, collateralization and liquidity.',\n    redeemSkipGov:'This feature allows you to save some gas by skipping the redeem of all or some of your accrued governance tokens, the skipped governance tokens will be given away to the entire pool',\n    batchDepositExecutionSchedule:'Batches are executed twice a week, usually on Sunday and Wednesday, and only when the pool size reaches at least 20,000$. The time of each execution will vary depending on the gas price of the Ethereum network.',\n    apyLong:'APY is based on (I) the current yield advertised by the underlying protocol, (II) the current distribution rate of governance tokens provided by underlying lending protocols (III) the current estimated price of governance tokens from Uniswap spot prices. (IV) IDLE token distribution is referred to the entire pool.',\n    yieldFarming:'Strategies in Idle now will be able to support and distribute a vast range of yield opportunities across multiple protocols. Users will be able to receive their equivalent share of governance token that the protocol is receiving while allocating liquidity to yield farming opportunities. <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://idlefinance.medium.com/idle-yield-farming-upgrade-18e4bc483c8f\">Read more here</a>.',\n    riskScore:`It's a single, consistently, comparable value for measuring protocol risk, based on factors including smart contract risk, collateralization and liquidity.<br /><br />The model outputs a 0-10 score, where <strong>0 is the most risky and 10 is the most safe.</strong> Visit <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://defiscore.io/overview\">https://defiscore.io/overview</a> for further information.`,\n    curveInstructions:`<strong>Depositing into the pool:</strong><br />By depositing your funds into the Curve Pool you may incur in slippage or bonus depending on if the coin is low or high in the pool.<br /><br /><strong>Withdrawing share from the pool:</strong><br />When you redeem your tokens previously deposited in the Curve Pool you get back an uneven amounts of tokens, that can give slippage or bonus depending on if the coin is low or high in the pool.`\n  },\n  analytics:{\n    google:{\n      events:{\n        enabled:true, // Enable Google Analytics events\n        debugEnabled:false, // Enable sending for test environments\n        addPostfixForTestnet:true // Append testnet to eventCategory\n      },\n      pageView:{\n        enabled:true\n      }\n    }\n  },\n  modals:{ // Enable modals\n    first_deposit_referral:false, // Referral share modal\n    first_deposit_share:true, // First deposit share modal\n    migrate:{\n      enabled:true\n    },\n    welcome:{ // Welcome modal\n      enabled:true,\n      frequency:604800 // One week\n    }\n  },\n  dashboard:{\n    baseRoute:'/dashboard',\n    theme:{\n      mode:'light',\n      darkModeEnabled:true\n    },\n  },\n  governance:{\n    test:false,\n    enabled:true,\n    startBlock:11333729,\n    baseRoute:'/governance',\n    props:{\n      tokenName:'IDLE',\n      availableContracts:{\n        IDLE,\n        FeeTreasury,\n        PriceOracle,\n        GovernorAlpha,\n        EcosystemFund,\n        IdleController\n      }\n    },\n    proposals:{\n      7:{\n        description:`Upgrade of IdleTokenGovernance contract to include the following changes:<br />\n        <ul>\n          <li>support for EIP 3165 flashLoans (fee is set to 0.08% of the flash loaned amount redistributed to LP)</li>\n          <li>support for stkAAVE distribution</li>\n          <li>support for new cWBCT distribution</li>\n          <li>other minor updates for gas and redeems</li>\n        </ul>\n        See more in the gov forum post: <a class=\"link\" href=\"https://gov.idle.finance/t/iip-7-idletoken-upgrade-stkaave-distribution/466\">https://gov.idle.finance/t/iip-7-idletoken-upgrade-stkaave-distribution/466</a>`\n      }\n    },\n    contracts:{\n      delegates:'IDLE',\n      governance:'GovernorAlpha',\n    }\n  },\n  curve:{\n    enabled:false,\n    params:{\n      n_coins:3,\n      label:'Curve',\n      route:'/dashboard/curve',\n      image:'images/protocols/curve.svg',\n      imageInactive:'images/protocols/curve-off.svg',\n    },\n    rates:{\n      path:['apy','day','idle'],\n      endpoint:'https://www.curve.fi/raw-stats/apys.json'\n    },\n    poolContract:{\n      decimals:18,\n      abi:CurvePool,\n      name:'idleDAI+idleUSDC+idleUSDT',\n      token:'idleDAI+idleUSDC+idleUSDT',\n      address:'0x09f4b84a87fc81fc84220fd7287b613b8a9d4c05'\n    },\n    depositContract:{\n      abi:CurveDeposit,\n      name:'idleCurveDeposit',\n      address:'0x83f252f036761a1e3d10daca8e16d7b21e3744d7'\n    },\n    gaugeContract:{\n      abi:LiquidityGaugeV2,\n      name:'LiquidityGaugeV2',\n      address:'0xd69ac8d9D25e99446171B5D0B3E4234dAd294890'\n    },\n    zapContract:{\n      abi:CurveZap,\n      name:'idleCurveZap',\n      address:'0x456974df1042ba7a46fd49512a8778ac3b840a21'\n    },\n    migrationContract:{\n      abi:CurveDeposit,\n      name:'idleCurveDeposit',\n      address:'0x83f252f036761a1e3d10daca8e16d7b21e3744d7',\n      functions:[\n        {\n          label:'Deposit',\n          name:'add_liquidity'\n        },\n      ]\n    },\n    availableTokens:{\n      idleDAIYield:{\n        decimals:18,\n        enabled:true,\n        baseToken:'DAI',\n        token:'idleDAIYield',\n        address:'0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        migrationParams:{\n          n_coins:3,\n          coinIndex:0\n        },\n      },\n      idleUSDCYield:{\n        decimals:18,\n        enabled:true,\n        baseToken:'USDC',\n        token:'idleUSDCYield',\n        address:'0x5274891bEC421B39D23760c04A6755eCB444797C',\n        migrationParams:{\n          n_coins:3,\n          coinIndex:1\n        },\n      },\n      idleUSDTYield:{\n        decimals:18,\n        enabled:true,\n        baseToken:'USDT',\n        token:'idleUSDTYield',\n        address:'0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        migrationParams:{\n          n_coins:3,\n          coinIndex:2\n        },\n      },\n    }\n  },\n  permit:{\n    DAI:{\n      version:1,\n      EIPVersion:null,\n      nonceMethod:'nonces',\n      name:'Dai Stablecoin',\n      type:[\n        { name: \"holder\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"expiry\", type: \"uint256\" },\n        { name: \"allowed\", type: \"bool\" },\n      ]\n    },\n    USDC:{\n      version:2,\n      name:'USD Coin',\n      EIPVersion:2612,\n      nonceMethod:'nonces',\n      type:[\n        { name: \"owner\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"value\", type: \"uint256\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"deadline\", type: \"uint256\" },\n      ]\n    },\n    SLP:{\n      version:1,\n      EIPVersion:2612,\n      nonceMethod:'nonces',\n      name:'SushiSwap LP Token',\n      type:[\n        { name: \"owner\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"value\", type: \"uint256\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"deadline\", type: \"uint256\" },\n      ]\n    }\n  },\n  govTokens:{\n    IDLE:{\n      abi:IDLE,\n      decimals:18,\n      token:'IDLE',\n      enabled:true,\n      showAUM:false, // Include IDLE balance in AUM\n      showAPR:false, // Include IDLE Apr\n      protocol:'idle',\n      showPrice:false, // Show price in Yield Farming section\n      showBalance:false, // Include IDLE balance in Portfolio Donut\n      aprTooltipMode:false,\n      distributionMode:'block',\n      distributionFrequency:'day', // Multiply distribution per block\n      color:'hsl(162, 100%, 41%)',\n      icon:'images/tokens/IDLE.png',\n      disabledTokens:['idleRAIYield','idleFEIYield'], // Disable IDLE distribution for idleToken\n      address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e' // MAIN\n      // address:'0xAB6Bdb5CCF38ECDa7A92d04E86f7c53Eb72833dF', // KOVAN\n      // address:'0xa85233C63b9Ee964Add6F2cffe00Fd84eb32338f' // Fork\n    },\n    COMP:{\n      abi:COMP,\n      decimals:18,\n      token:'COMP',\n      enabled:true,\n      showAUM:true, // Include IDLE balance in AUM\n      showAPR:true, // Include COMP Apr\n      showPrice:true,\n      showBalance:true, // Include COMP balance in Portfolio Donut\n      disabledTokens:[],\n      protocol:'compound',\n      aprTooltipMode:false,\n      distributionMode:'block',\n      distributionFrequency:'day',\n      color:'hsl(162, 100%, 41%)',\n      address:'0xc00e94cb662c3520282e6f5717214004a7f26888', // MAIN\n      // address:'0x61460874a7196d6a22d1ee4922473664b3e95270' // KOVAN\n    },\n    stkAAVE:{\n      abi:aToken,\n      decimals:18,\n      showAUM:true, // Include stkAAVE balance in AUM\n      showAPR:true, // Include stkAAVE Apr\n      enabled:true,\n      showPrice:true,\n      token:'stkAAVE',\n      showBalance:true, // Include stkAAVE balance in Portfolio Donut\n      protocol:'aavev2',\n      aprTooltipMode:false,\n      distributionMode:'second',\n      color:'hsl(314, 41%, 51%)',\n      distributionFrequency:'day',\n      address:'0x4da27a545c0c5b758a6ba100e3a049001de870f5', // MAIN\n      addressForPrice:'0x7Fc66500c84A76Ad7e9c93437bFc5Ac33E2DDaE9', // MAIN\n      disabledTokens:['idleTUSDYield','idleSUSDYield','idleRAIYield']\n    }\n  },\n  contracts:{\n    ProxyFactory:{\n      abi:MinimalInitializableProxyFactory,\n      address:'0x91baced76e3e327ba7850ef82a7a8251f6e43fb8'\n    },\n    LockedIDLE:{\n      abi:LockedIDLE,\n      address:'0xF241a0151841AE2E6ea750D50C5794b5EDC31D99'\n    },\n    FeeTreasury:{\n      abi:FeeTreasury,\n      address:'0x69a62c24f16d4914a48919613e8ee330641bcb94' // MAIN\n    },\n    PriceOracle:{\n      abi:PriceOracle,\n      address:'0x972A64d108e250dF98dbeac8170678501f5EF181' // MAIN\n      // address:'0xCab5760688db837Bb453FE1DFBC5eDeE6fa8F0FF' // KOVAN\n    },\n    Timelock:{\n      abi:Timelock,\n      address:'0xD6dABBc2b275114a2366555d6C481EF08FDC2556' // MAIN\n      // address:'0xfD88D7E737a06Aa9c62B950C1cB5eE63DA379AFd' // KOVAN\n    },\n    EcosystemFund:{\n      abi:EcosystemFund,\n      address:'0xb0aA1f98523Ec15932dd5fAAC5d86e57115571C7' // MAIN\n      // address:'0x125d3D6A8e546BD13802c309429CBB4db5737d57' // KOVAN\n    },\n    VesterFactory:{\n      abi:VesterFactory,\n      address:'0xbF875f2C6e4Cc1688dfe4ECf79583193B6089972' // MAIN\n      // address:'0x9b52f91578c8AfA8e2DF07d4D7726bB6b73Ec1FE' // KOVAN\n    },\n    IdleController:{\n      abi:IdleController,\n      address:'0x275DA8e61ea8E02d51EDd8d0DC5c0E62b4CDB0BE' // MAIN\n      // address:'0x8Ad5F0644b17208c81bA5BDBe689c9bcc7143d87' // KOVAN\n    },\n    EarlyRewards:{\n        abi:EarlyRewards,\n        address:'0xa1F71ED24ABA6c8Da8ca8C046bBc9804625d88Fc' // MAIN\n        // address:'0x07A94A60B54c6b2Da19e23D6E9123180Bf92ED40' // KOVAN\n    },\n    GovernorAlpha:{\n      abi:GovernorAlpha,\n      address:'0x2256b25CFC8E35c3135664FD03E77595042fe31B' // MAIN\n      // address:'0x782cB1dbd0bD4df95c2497819be3984EeA5c2c25' // KOVAN\n    },\n    Comptroller:{\n      abi:Comptroller,\n      address:'0x3d9819210a31b4961b30ef54be2aed79b9c9cd3b', // Main\n      // address:'0x5eae89dc1c671724a672ff0630122ee834098657' // Kovan\n    },\n    SushiswapRouter:{\n      abi:SushiV2Router02,\n      address:'0xd9e1cE17f2641f24aE83637ab66a2cca9C378B9F'\n    },\n    UniswapRouter:{\n      abi:UniswapV2Router02,\n      address:'0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D'\n    },\n    BalancerExchangeProxy:{\n      abi:BalancerExchangeProxy,\n      address:'0x3E66B66Fd1d0b02fDa6C811Da9E0547970DB2f21'\n    }\n  },\n  tokens:{\n    DAI:{\n      zeroExInstant:{\n        orderSource: 'https://api.0x.org/sra/',\n        assetData:'0xf47261b00000000000000000000000006b175474e89094c44da98b954eedeac495271d0f',\n        affiliateInfo: {\n            feeRecipient: '0x4215606a720477178AdFCd5A59775C63138711e8',\n            feePercentage: 0.0025\n        },\n      },\n    },\n    USDC:{\n      zeroExInstant:{\n        orderSource: 'https://api.0x.org/sra/',\n        assetData:'0xf47261b0000000000000000000000000a0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        affiliateInfo: {\n            feeRecipient: '0x4215606a720477178AdFCd5A59775C63138711e8',\n            feePercentage: 0.0025\n        },\n      },\n    },\n  },\n  tranches:{\n    AA:{\n      color:{\n        // hex:'#00ff06',\n        hex:'#00a9fe',\n        rgb:[0, 169, 254],\n        hsl:['200', '100%', '50%']\n      },\n      type:'AA',\n      route:'senior',\n      icon:'Security',\n      baseName:'senior',\n      name:'Senior Tranche',\n      features:[\n        'Covered by Junior tranches funds',\n        'Minimized risk exposure',\n        'No locking period or epochs',\n        'Auto-Reinvest accrued tokens',\n        'Stake to receive $IDLE tokens'\n      ],\n      description:{\n        long:'Senior Tranches provide a shielded access to optimized DeFi yields, thanks to an integrated funds\\' coverage given by Junior Tranches',\n        deposit:'By depositing in the Senior Tranche in case of Smart-Contract breach your funds are covered by the funds deposited in the Junior Tranche.',\n        stake:'Stake your tranche tokens to earn additional rewards and boost the APY.',\n        unstake:'By unstaking your tranche tokens you will no more get additional rewards.',\n        withdraw:'You can withdraw your funds at any time from the tranche.',\n        cantUnstake:'To unstake your funds you just need to wait 10 blocks after your last stake transaction.',\n        cantWithdraw:'To withdraw your funds you just need to wait at least 1 block from the latest harvest transaction.'\n      }\n    },\n    BB:{\n      color:{\n        hex:'#ff9900',\n        rgb:[255, 153, 0],\n        hsl:['36', '100%', '50%']\n      },\n      type:'BB',\n      route:'junior',\n      icon:'TrendingUp',\n      baseName:'junior',\n      name:'Junior Tranche',\n      features:[\n        'Leverage yield using Senior tranches funds',\n        'Higher risk exposure by protecting senior tranches',\n        'No locking period or epochs',\n        'Auto-Reinvest accrued tokens',\n        'Stake to receive $IDLE tokens'\n      ],\n      description:{\n        long:'The Junior Tranches provide amplified optimized DeFi yields by carrying a higher grade of risks and protecting Senior Tranches',\n        deposit:'By depositing in the Junior Tranche in case of Smart-Contract breach your funds will be used to cover eventual losses on the Senior Tranche.',\n        stake:'Stake your tranche tokens to earn additional rewards and boost the APY.',\n        unstake:'By unstaking your tranche tokens you will no more get additional rewards.',\n        withdraw:'You can withdraw your funds at any time from the tranche.',\n        cantUnstake:'To unstake your funds you just need to wait 10 blocks after your last stake transaction.',\n        cantWithdraw:'To withdraw your funds you just need to wait at least 1 block from the latest harvest transaction.'\n      }\n    }\n  },\n  strategies:{\n    /*\n    tranches:{\n      token:'DAI',\n      visible:true,\n      type:'tranche',\n      protocol:'idle',\n      color:'#f32121',\n      comingSoon:false,\n      title:'Tranches',\n      addGovTokens:true,\n      titlePostfix:null,\n      iconName:'Whatshot',\n      component: Tranches,\n      govTokensEnabled:true,\n      chartColor:'hsl(40,95%,59%)',\n      icon:'images/strategies/tranches-on.png',\n      iconInactive:'images/strategies/tranches-off.png',\n      iconInactiveDark:'images/strategies/tranches-white.png',\n      desc:'Diversify your risk profile with dynamic tranched yield derivatives',\n      descShort:'Tranches deposit assets (eg DAI) into yield sources (eg Idle Finance) and split the accrued interest between 2 classes of products with different risk profiles.',\n      descLong:'Tranches deposit assets (eg DAI) into yield sources (eg Idle Finance) and split the accrued interest between 2 classes of products with different risk profiles. A Junior tranche receives a larger portion of the yield generated by the underlying pool, and therefore a Senior tranche has a lower yield. This is because the senior tranches have first lien on the underlying assets – they are in line to be repaid first, in case of default (hack, loss of funds). Junior tranches have a second lien or no lien at all. These products allow to tranche a spectrum of risks related to underlying assets and smart contract failures. In this way, risk-tolerant users can get higher returns for taking an higher risk, while risk-averse users will receive protection in exchange of a share of their profits with their risk-tolerant equivalents.',\n    },\n    */\n    best:{\n      token:'DAI',\n      visible:true,\n      color:'#f32121',\n      type:'strategy',\n      comingSoon:false,\n      addGovTokens:true,\n      titlePostfix:null,\n      title:'Best-Yield',\n      iconName:'Whatshot',\n      govTokensEnabled:true,\n      component: StrategyPage,\n      chartColor:'hsl(40,95%,59%)',\n      icon:'images/strategies/best-on.svg',\n      iconInactive:'images/strategies/best-off.svg',\n      iconInactiveDark:'images/strategies/best-white.svg',\n      desc:'Maximize your returns across DeFi protocols',\n      descLong:'The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols. Idle’s monitoring system automatically triggers a rebalance if it spots a better-performing allocation: this includes taking account of the total liquidity within the pool, incorporating underlying protocol rate functions and levels of supply and demand. As a user, you will end up with an higher return without constantly checking rates and burning gas on every transfer. Unlock your funds from a single protocol performance with this strategy.',\n      descShort:'The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols.'\n    },\n    risk:{\n      token:'DAI',\n      visible:true,\n      color:'#2196F3',\n      type:'strategy',\n      comingSoon:false,\n      titlePostfix:null,\n      addGovTokens:true,\n      iconName:'Security',\n      title:'Risk-Adjusted',\n      govTokensEnabled:true,\n      component: StrategyPage,\n      chartColor:'hsl(211,67%,47%)',\n      icon:'images/strategies/risk-on.svg',\n      iconInactive:'images/strategies/risk-off.svg',\n      iconInactiveDark:'images/strategies/risk-white.svg',\n      desc:'Optimize your risk exposure across DeFi protocols',\n      descLong:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level. The risk-management algorithm takes account of the total assets within a pool, incorporates underlying protocol rate functions and levels of supply and demand, skimming protocols with a bad score/rate mix, and finally determining an allocation that achieves the highest risk-return score possible after the rebalance happens.',\n      descShort:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level.'\n    },\n    /*\n    new:{\n      token:'DAI',\n      color:'#2196F3',\n      comingSoon:true,\n      addGovTokens:true,\n      iconName:'Adjust',\n      title:'Coming Soon',\n      chartColor:'hsl(211,67%,47%)',\n      icon:'images/strategies/solr-on.svg',\n      desc:'More strategies are coming soon!',\n      iconInactive:'images/strategies/solr-off.svg',\n      descLong:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level. The risk-management algorithm takes account of the total assets within a pool, incorporates underlying protocol rate functions and levels of supply and demand, skimming protocols with a bad score/rate mix, and finally determining an allocation that achieves the highest risk-return score possible after the rebalance happens.',\n      descShort:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level.'\n    }\n    */\n  },\n  stats:{\n    enabled:true, // Enable endpoint\n    rates:{\n      TTL:300, // 5 minutes\n      endpoint:'https://api.idle.finance/rates/'\n    },\n    tvls:{\n      TTL:120,\n      endpoint:'https://api.idle.finance/tvls/'\n    },\n    substack:{\n      TTL:1800,\n      endpoint:'https://api.idle.finance/substack/'\n    },\n    scores:{\n      TTL:300, // 5 minutes\n      endpoint:'https://api.idle.finance/scores/'\n    },\n    config:{\n      headers: env.REACT_APP_IDLE_KEY ? { Authorization: `Bearer ${env.REACT_APP_IDLE_KEY}` } : {}\n    },\n    versions:{\n      /*\n      v2:{\n        label:'Idle V2',\n        startTimestamp:null,\n        additionalProtocols:[],\n        endTimestamp:1589752999,\n        enabledStrategies:['best'],\n        showPerformanceTooltip:false,\n        enabledTokens:['DAI','USDC'],\n      },\n      */\n      v3:{\n        label:'Idle V3',\n        additionalProtocols:[],\n        endTimestamp:1597237542,\n        startTimestamp:1589801874,\n        showPerformanceTooltip:false,\n        strategiesParams:{\n          risk:{\n            endTimestamp:1597233922,\n          }\n        },\n        enabledStrategies:['best','risk'],\n        enabledTokens:['DAI','USDC','USDT','TUSD','SUSD','WBTC'],\n      },\n      v4:{\n        label:'Idle V4',\n        endTimestamp:null,\n        startTimestamp:1597442400, // 1598220000\n        enabledStrategies:['best','risk'],\n        showPerformanceTooltip:true,\n        strategiesParams:{\n          risk:{\n            startTimestamp:1599183170,\n          }\n        },\n        enabledTokens:['DAI','USDC','USDT','TUSD','SUSD','WBTC','WETH','RAI'],\n        additionalProtocols:[\n          {\n            decimals:16,\n            protocol:'compound',\n            name:'compoundWithCOMP',\n            enabledTokens:['DAI','USDC','USDT','TUSD','SUSD','WBTC','WETH'],\n          },\n          {\n            decimals:18,\n            protocol:'aavev2',\n            name:'aavev2WithStkAAVE',\n            enabledTokens:['DAI','USDC','USDT','TUSD','SUSD','WBTC','WETH'],\n          }\n        ]\n      }\n    },\n    tokens:{\n      DAI:{\n        decimals:18,\n        enabled:true,\n        color:{\n          rgb:[250,184,51],\n          hex:'#F7B24A',\n          hsl:['40', '95%', '59%']\n        },\n        chart:{\n          labelTextColorModifiers:['darker', 2]\n        },\n        startTimestamp:'2020-02-11',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      USD:{\n        enabled:true,\n        color:{\n          hex:'#85bb65',\n          rgb:[133, 187, 101],\n          hsl:['98', '39%', '56%']\n        },\n        chart:{\n          labelTextColorModifiers:['brighter', 2]\n        },\n        address:null,\n        startTimestamp:'2020-02-04',\n      },\n      USDC:{\n        decimals:6,\n        enabled:true,\n        color:{\n          hex:'#2875C8',\n          rgb:[40,117,200],\n          hsl:['211', '67%', '47%']\n        },\n        chart:{\n          labelTextColorModifiers:['brighter', 2]\n        },\n        startTimestamp:'2020-02-04',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      USDT:{\n        decimals:6,\n        enabled:true,\n        color:{\n          hex:'#22a079',\n          rgb:[34, 160, 121],\n          hsl:['161', '65%', '38%']\n        },\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        startTimestamp:'2020-02-04',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      TUSD:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'0340a1',\n          rgb:[3, 64, 161],\n          hsl:['217', '96%', '32%']\n        },\n        chart:{\n          labelTextColorModifiers:['brighter', 5]\n        },\n        startTimestamp:'2020-06-22',\n        address:'0x0000000000085d4780b73119b644ae5ecd22b376',\n      },\n      SUSD:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#1e1a31',\n          rgb:[30, 26, 49],\n          hsl:['250', '31%', '15%']\n        },\n        chart:{\n          labelTextColorModifiers:['brighter', 5]\n        },\n        startTimestamp:'2020-06-22',\n        address:'0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n      },\n      WBTC:{\n        decimals:8,\n        enabled:true,\n        color:{\n          hex:'#eb9444',\n          rgb:[235, 148, 68],\n          hsl:['29', '81%', '59%']\n        },\n        startTimestamp:'2020-06-15',\n        conversionRateField:'wbtcDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4],\n        },\n        address:'0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      WETH:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#ee1f79',\n          rgb:[238, 31, 121],\n          hsl:['334', '86%', '53%']\n        },\n        startTimestamp:'2021-02-16',\n        conversionRateField:'wethDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4],\n        },\n        address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      COMP:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#00d395',\n          rgb:[0, 211, 149],\n          hsl:['162', '100%', '41%']\n        },\n        startTimestamp:'2020-06-15',\n        conversionRateField:'compDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        address:'0xc00e94cb662c3520282e6f5717214004a7f26888',\n      },\n      stkAAVE:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#B6509E',\n          rgb:[182, 80, 158],\n          hsl:['314', '41%', '51%']\n        },\n        startTimestamp:'2021-04-30',\n        conversionRateField:'compDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        address:'0x4da27a545c0c5b758a6ba100e3a049001de870f5',\n      },\n      IDLE:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#0d55bb',\n          rgb:[13, 85, 187],\n          hsl:['215', '87%', '39%']\n        },\n        startTimestamp:'2020-11-10',\n        icon:'images/tokens/IDLE.png',\n        conversionRateField:'idleDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e',\n      },\n      RAI:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#378879',\n          rgb:[55, 136, 121],\n          hsl:['169', '42%', '37%']\n        },\n        disabledCharts:['score'],\n        startTimestamp:'2021-05-25',\n        icon:'images/tokens/RAI.png',\n        conversionRateField:'raiDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        address:'0x03ab458634910aad20ef5f1c8ee96f1d6ac54919',\n      },\n      FEI:{\n        decimals:18,\n        enabled:false,\n        color:{\n          hex:'#229b6e',\n          rgb:[34, 155, 110],\n          hsl:['158', '64%', '37%']\n        },\n        disabledCharts:['score'],\n        startTimestamp:'2021-07-30',\n        conversionRateField:'feiDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        address:'0x956f47f50a910163d8bf957cf5846d573e7f87ca',\n      },\n      'idleDAI+idleUSDC+idleUSDT':{\n        decimals:18,\n        enabled:false,\n        name:'Curve.fi',\n        color:{\n          hex:'#ff0000',\n          rgb:[255, 0, 0],\n          hsl:['0', '100%', '50%']\n        },\n        startTimestamp:'2020-06-15',\n      },\n    },\n    protocols:{\n      compound:{\n        legend:true,\n        enabled:true,\n        label:'Compound',\n        color:{\n          rgb:[0, 209, 146],\n          hsl:['162', '100%', '41%']\n        }\n      },\n      aavev2WithStkAAVE:{\n        enabled:true,\n        label:'Aave V2 + stkAAVE',\n        startTimestamp:'2021-05-08 14:30:00',\n        // tokensProps:{\n        //   WETH:{\n        //     startTimestamp:'2021-05-19 12:20:00',\n        //   }\n        // },\n        color:{\n          hex:'#B6509E',\n          rgb:[182, 80, 158],\n          hsl:['314', '41%', '51%']\n        },\n        rateField:['rate','aaveAdditionalAPR']\n      },\n      compoundWithCOMP:{\n        enabled:true,\n        label:'Compound + COMP',\n        color:{\n          rgb:[0, 153, 107],\n          hsl:['162', '100%', '30%']\n        },\n        rateField:['rate','compoundAdditionalAPR']\n      },\n      fulcrum:{\n        legend:false,\n        enabled:false,\n        label:'Fulcrum',\n        color:{\n          rgb:[2, 138, 192],\n          hsl:['197', '98%', '38%']\n        }\n      },\n      dsr:{\n        label:'DSR',\n        enabled:false,\n        icon:'CHAI.png',\n        color:{\n          rgb:[222, 52, 67],\n          hsl:['355', '72%', '54%']\n        }\n      },\n      dydx:{\n        legend:true,\n        label:'DyDx',\n        enabled:true,\n        color:{\n          rgb:[87, 87, 90],\n          hsl:['240', '2%', '35%']\n        }\n      },\n      iearn:{\n        label:'Yearn',\n        enabled:true,\n      },\n      aave:{\n        label:'Aave V1',\n        legend:false,\n        enabled:false,\n        color:{\n          rgb:[230, 131, 206],\n          hsl:['315', '66%', '71%']\n        }\n      },\n      aavev2:{\n        legend:true,\n        enabled:true,\n        icon:'aave.svg',\n        label:'Aave V2',\n        color:{\n          rgb:[151, 79, 141],\n          hsl:['308', '31%', '45%']\n        }\n      },\n      cream:{\n        legend:true,\n        enabled:true,\n        label:'Cream',\n        icon:'cream.svg',\n        color:{\n          rgb:[105, 226, 220],\n          hsl:['177', '68%', '65%']\n        }\n      },\n      fuse:{\n        legend:true,\n        enabled:true,\n        label:'Fuse',\n        icon:'fuse.png',\n        color:{\n          rgb:[0, 0, 0],\n          hsl:['0', '0%', '0%']\n        }\n      },\n      curve:{\n        label:'',\n        enabled:true,\n        color:{\n          rgb:[0, 55, 255],\n          hsl:['227', '100%', '50%']\n        }\n      },\n      idle:{\n        label:'Idle',\n        enabled:true,\n        color:{\n          rgb:[0, 55, 255],\n          hsl:['227', '100%', '50%']\n        }\n      }\n    }\n  },\n  contract:{\n    methods:{\n      redeem:{\n        skipRebalance:true,\n        metaTransactionsEnabled:false\n      },\n      deposit:{\n        skipMint:true,\n        minAmountForMint:100000,\n        erc20ForwarderEnabled:true,\n        skipMintCheckboxEnabled:true,\n        metaTransactionsEnabled:false,\n        // Proxy contract for Meta Tx or ERC20 Forwarder\n        erc20ForwarderProxyContract:{\n          forwarder:{\n            enabled:true,\n            abi:erc20Forwarder,\n            name:'erc20Forwarder',\n            function:'emitMessage',\n            address:'0xfaadbe5f0a19f0ebf92aeb73534cbc96b96e2bda', // Main\n            // address:'0xCB3F801C91DEcaaE9b08b1eDb915F9677D8fdB4A' // Kovan\n          },\n          tokens:{\n            DAI:{\n              enabled:true,\n              permitType:'DAI_Permit',\n              abi:IdleDepositForwarder,\n              function:'permitAndDeposit', // foo\n              name:'IdleDepositForwarderDAI',\n              address:'0xDe3c769cCD1878372864375e9f89956806B86daA', // Main\n              // address:'0x1E32F1E96B9735E5D31a23e12fe8e6D9845a9072', // Kovan\n            },\n            USDC:{\n              enabled:true,\n              abi:IdleDepositForwarder,\n              permitType:'EIP2612_Permit',\n              name:'IdleDepositForwarderUSDC',\n              function:'permitEIP2612AndDeposit', // 'foo'\n              address:'0x43bD6a78b37b50E3f52CAcec53F1202dbDe6a761', // Main\n              // address:'0x8f9048CFAa27b1A1b77c32a0b87D2DcF5D016cb5', // Kovan\n            },\n          }\n        },\n        proxyContract:{\n          enabled:false,\n          abi:IdleProxyMinter,\n          name:'IdleProxyMinter',\n          function:'mintIdleTokensProxy',\n          address:'0x7C4414aA6B0c6CB1Bc7e5BFb7433138426AC637a',\n        }\n      },\n      migrate:{\n        skipRebalance:true,\n        minAmountForRebalance:10000,\n        minAmountForRebalanceMetaTx:10000\n      },\n      redeemGovTokens:{\n        enabled:true\n      },\n      redeemSkipGov:{\n        enabled:true,\n        disabledTokens:['idleDAISafe','idleUSDCSafe','idleUSDTSafe']\n      },\n      rebalance:{\n        enabled:true,\n        abi:IdleRebalancerV3\n      }\n    }\n  },\n  network:{ // Network configurations\n    availableNetworks:{\n      1:'Mainnet',\n      3:'Ropsten',\n      4:'Rinkeby',\n      42:'Kovan',\n      1337:'Hardhat'\n    },\n    isForked:false, // If TRUE the tx confirmation callback is fired on the receipt\n    requiredNetwork:1, // { 1: Mainnet, 3: Ropsten, 42: Kovan }\n    blocksPerYear:2371428,\n    secondsPerYear:31536000,\n    firstBlockNumber:8119247,\n    requiredConfirmations: 1,\n    enabledNetworks:[1,42,1337],\n    accountBalanceMinimum: 0, // in ETH for gas fees\n    providers:{\n      infura:{\n        42: 'https://kovan.infura.io/v3/',\n        1: 'https://mainnet.infura.io/v3/',\n        1337: 'https://mainnet.infura.io/v3/'\n      },\n      ens:{\n        enabled:true,\n        supportedNetworks:[1]\n      },\n      nexus:{\n        endpoints:{\n          1:'https://api.nexusmutual.io/v1/',\n          42:'https://api.staging.nexusmutual.io/v1/',\n        }\n      },\n      etherscan:{\n        enabled:true, // False for empty txs list (try new wallet)\n        keys:[\n          env.REACT_APP_ETHERSCAN_KEY,\n          env.REACT_APP_ETHERSCAN_KEY2,\n          env.REACT_APP_ETHERSCAN_KEY3,\n          env.REACT_APP_ETHERSCAN_KEY4\n        ],\n        endpoints:{\n          1: 'https://api.etherscan.io/api',\n          1337: 'https://api.etherscan.io/api',\n          42: 'https://api-kovan.etherscan.io/api'\n        },\n        baseUrl:{\n          1: 'https://etherscan.io',\n          1337: 'https://etherscan.io',\n          42: 'https://kovan.etherscan.io',\n        }\n      },\n      snapshot:{\n        whitelist:[\n          '0x9993ADB62085AcB05Fc493f7A1D10C11227A78fa',\n          '0xf12ce5807e3d3128B876aa1Cec0632D63547E22E'\n        ],\n        endpoints:{\n          proposals:'https://hub.snapshot.page/api/idlefinance.eth/proposals'\n        },\n        urls:{\n          proposals:'https://signal.idle.finance/#/idlefinance.eth/proposal/'\n        }\n      },\n      biconomy:{\n        enabled:true,\n        enableLogin:false,\n        supportedNetworks:[1,42],\n        disabledWallets:['authereum'],\n        endpoints:{\n          limits:'https://api.biconomy.io/api/v1/dapp/checkLimits'\n        },\n        params:{\n          debug: false,\n          apiKey: env.REACT_APP_BICONOMY_KEY, // Mainnet\n          dappId: env.REACT_APP_BICONOMY_APPID,\n          apiId: '36572ec9-ae5c-4c4a-9530-f3ae7c7ac829',\n          // apiKey: env.REACT_APP_BICONOMY_KEY_KOVAN, // Kovan\n        }\n      },\n      simpleID:{\n        enabled:false,\n        supportedNetworks:[1],\n        getNetwork:(networkId,availableNetworks) => {\n          let networkName = null;\n          switch (networkId){\n            case 1:\n              networkName = 'mainnet';\n            break;\n            default:\n              networkName = availableNetworks[networkId] ? availableNetworks[networkId].toLowerCase() : 'mainnet';\n            break;\n          }\n          return networkName;\n        },\n        params:{\n          appOrigin: window.location.origin,\n          appName: \"Idle\",\n          appId: \"eb4d1754-a76e-4c58-8422-54b5ca2395e7\",\n          renderNotifications: false,\n          network: 'mainnet'\n        }\n      }\n    }\n  },\n  events:{\n    DAI:{\n      fields:{\n        to:'dst',\n        from:'src',\n        value:'wad'\n      }\n    }\n  },\n  notifications:[\n    {\n      enabled:false,\n      end:1612282726374,\n      start:1611677841027,\n      date:'Jan 26, 2021 16:18 UTC',\n      title:'Cover Protocol Available',\n      hash:'/dashboard/tools/cover-protocol',\n      image:'/images/protocols/cover-logo.svg',\n      text:'Protect your portfolio with Cover Protocol',\n    }\n  ],\n  tools:{\n    stake:{\n      enabled:true,\n      icon:'Layers',\n      label:'Staking',\n      route:'staking',\n      subComponent:Staking,\n      desc:'Stake your IDLE / Sushi Swap LP tokens and earn $IDLE rewards',\n      props:{\n        availableTokens:{\n          IDLE:{\n            component:IdleStaking,\n            contract:{\n              abi:stkIDLE,\n              decimals:18,\n              name:'stkIDLE',\n              fromBlock:12561464,\n              rewardToken:'IDLE',\n              address:'0xaac13a116ea7016689993193fce4badc8038136f' // Mainnet\n            },\n            feeDistributor:{\n              fromBlock:12649361,\n              abi:StakingFeeDistributor,\n              name:'StakingFeeDistributor',\n              address:'0xbabb82456c013fd7e3f25857e0729de8207f80e2' // Mainnet\n            },\n            abi:IDLE,\n            name:'IDLE',\n            token:'IDLE',\n            decimals:18,\n            enabled:true,\n            label:'IDLE Token',\n            icon:'images/tokens/IDLE.png',\n            address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e', // Mainnet\n            poolLink:'https://etherscan.com/address/0x875773784Af8135eA0ef43b5a374AaD105c5D39e',\n          },\n          SLP:{\n            component:LpStaking,\n            contract:{\n              decimals:24,\n              name:'LpStaking',\n              maxMultiplier:3,\n              abi:LpStakingAbi,\n              maxBonusDays:120,\n              rewardToken:'IDLE',\n              address:'0xcc0b9f7ed0e6bc7c2e69dbd247e8420f29aeb48d' // Mainnet\n            },\n            name:'SLP',\n            token:'SLP',\n            decimals:18,\n            enabled:true,\n            abi:SushiLiquidityPool,\n            label:'SushiSwap IDLE/ETH LP Token',\n            icon:'images/protocols/sushiswap.png',\n            address:'0xa7f11e026a0af768d285360a855f2bded3047530', // Mainnet\n            poolLink:'https://analytics.sushi.com/pairs/0xa7f11e026a0af768d285360a855f2bded3047530',\n          }\n        }\n      }\n    },\n    nexusMutual:{\n      enabled:true,\n      icon:'Security',\n      route:'coverage',\n      label:'Coverage',\n      desc:'Buy Nexus Mutual coverage without KYC for your deposits',\n      subComponent:NexusMutual,\n      props:{\n        availableTokens:{\n          idleDAIYield:{\n            decimals:18,\n            abi:IdleTokenV4,\n            name:'idleDAIYield',\n            token:'idleDAIYield', // Mainnet\n            // token:'idleDAIYieldMock', // Kovan\n            address:'0x0000000000000000000000000000000000000011',\n            realAddress:'0x3fe7940616e5bc47b0775a0dccf6237893353bb4', // Mainnet\n            // realAddress:'0xbd0b0205408509544815d377214d8f2cbe3e5381', // Kovan\n            underlying:{\n              DAI:{\n                abi:ERC20,\n                name:'DAI', // Mainnet\n                token:'DAI',\n                decimals:18,\n                // name:'DAIMock', // Kovan\n                address:'0x6b175474e89094c44da98b954eedeac495271d0f' // Mainnet\n                // address:'0x5C422252C6a47CdacF667521566Bf7bD5b0d769B' // Kovan\n              },\n            }\n          },\n          idleUSDTYield:{\n            decimals:18,\n            abi:IdleTokenV4,\n            name:'idleUSDTYield',\n            token:'idleUSDTYield', // Mainnet\n            // token:'idleUSDTYieldMock', // Kovan\n            address:'0x0000000000000000000000000000000000000012',\n            realAddress:'0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n            underlying:{\n              DAI:{\n                abi:ERC20,\n                name:'DAI', // Mainnet\n                token:'DAI',\n                decimals:18,\n                // name:'DAIMock', // Kovan\n                address:'0x6b175474e89094c44da98b954eedeac495271d0f' // Mainnet\n                // address:'0x5C422252C6a47CdacF667521566Bf7bD5b0d769B' // Kovan\n              },\n            }\n          }\n        },\n      },\n      directProps:{\n        // startBlock:25858186, // Kovan\n        startBlock:12783137, // Mainnet\n        // Yield token covers have a 14 days grace period\n        yieldTokenCoverGracePeriod: 14 * 24 * 60 * 60 * 1000,\n        contractInfo:{\n          abi:NexusMutualDistributor,\n          name:'NexusMutualDistributor',\n          // address:'0xe2d569dc064b3b91f514e775c6026e04d2c887a9' // Kovan\n          address:'0xf2b36f823eae36e53a5408d8bd452748b24fbf76' // Mainnet\n        },\n        incidentsInfo:{\n          abi:NexusMutualIncidents,\n          name:'NexusMutualIncidents',\n          // address:'0x322f9a880189E3FFFf59b74644e13e5763C5AdB9' // Kovan\n          address:'0x8ceba69a8e96a4ce71aa65859dbdb180b489a719' // Mainnet\n        }\n      }\n    },\n    b2bVesting:{\n      enabled:true,\n      visible:true,\n      icon:'CloudUpload',\n      label:'B2B Vesting',\n      route:'b2b-vesting-contract',\n      subComponent:DeployB2BVesting,\n      desc:'Deploy/Deposit/Claim for B2B Vesting Contracts<br /><small style=\"color:#ff9900\">(only for partners that joined the B2B Affiliate program)</small>',\n      props:{\n        contracts:{\n          vesterImplementation:{\n            abi:B2BVester,\n            address:'0x3024656ae91d7bf724f613c314bc56030ba2344c'\n          }\n        }\n      }\n    },\n    ethWrapper:{\n      enabled:true,\n      label:'ETH Wrapper',\n      route:'eth-wrapper',\n      subComponent:TokenWrapper,\n      image:'images/tokens/WETH.svg',\n      desc:'Wrap your ETH and get WETH. Unwrap your WETH and get back ETH.',\n      props:{\n        startContract:{\n          name:'ETH',\n          token:'ETH',\n          decimals:18,\n          wrapMethod:'deposit',\n        },\n        destContract:{\n          abi:WETH,\n          name:'WETH',\n          decimals:18,\n          token:'WETH',\n          unwrapMethod:'withdraw',\n          address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2'\n        },\n      }\n    },\n    coverProtocol:{\n      enabled:false,\n      label:'Cover Protocol',\n      route:'cover-protocol',\n      subComponent:CoverProtocol,\n      image:'images/protocols/cover-logo.svg',\n      desc:'Get your Idle Portfolio covered against Smart Contract risk',\n      fileClaimUrl:'https://app.coverprotocol.com/app/claims/new?protocol=IDLE',\n      props:{\n        contract:{\n          decimals:18,\n          abi:CoverMint,\n          name:'CoverMint',\n          address:'0x46f2f34742c1d9b9b220aabf0ff26bf59ec9f8a0'\n        },\n        coverages:[\n          {\n            collateral:'DAI',\n            expirationTimestamp:1714470400,\n            tokens:{\n              Claim:{\n                abi:CovToken,\n                name:'COVER_IDLE_2021_02_28_DAI_0_CLAIM',\n                address:'0xa7dac6774e5e40f56a0bf06af6cf9b1f3d037bcc',\n                balancerPool:{\n                  decimals:18,\n                  abi:BalancerPool,\n                  name:'BAL_COVER_IDLE_2021_02_28_DAI_0_CLAIM',\n                  address:'0xeb2b9959c7943eb3c0bdb69ede25247bab4d1c6c',\n                }\n              },\n              NoClaim:{\n                abi:CovToken,\n                name:'COVER_IDLE_2021_02_28_DAI_0_NOCLAIM',\n                address:'0x53df0bfa014b7522299c129c5a7b318f02adb469',\n                balancerPool:{\n                  decimals:18,\n                  abi:BalancerPool,\n                  name:'BAL_COVER_IDLE_2021_02_28_DAI_0_NOCLAIM',\n                  address:'0xce0e9e7a1163badb7ee79cfe96b5148e178cab73',\n                }\n              }\n            }\n          },\n        ],\n      }\n    },\n    batchDeposit:{\n      enabled:true,\n      icon:'Storage',\n      claimEnabled:true,\n      depositEnabled:true,\n      route:'batch-deposit',\n      label:'Batch Deposit',\n      subComponent:BatchDeposit,\n      desc:'Deposit your tokens in the batch and wait until its execution to claim your Idle Tokens V4',\n      props:{\n        availableTokens:{\n          idleDAIYield:{\n            decimals:18,\n            strategy:'best',\n            baseToken:'DAI',\n            minPoolSize:20000,\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintDAI',\n              address:'0x633fb4d38B24dC890b11Db2AE2B248D13F996A79', // Main\n              // address:'0x1B7bA0361A15CCF62521cF7d2Cbb2Ba90b1521a7', // Kovan\n              functions:[\n                {\n                  name:'deposit',\n                  usePermit:true,\n                  label:'Deposit',\n                  permitName:'permitAndDeposit'\n                },\n              ]\n            },\n          },\n          idleUSDCYield:{\n            decimals:6,\n            strategy:'best',\n            baseToken:'USDC',\n            minPoolSize:20000,\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintUSDC',\n              address:'0x562C4fd96F0652F5Fcfa96b0a33088B5a6eAeE9B', // Main\n              // address:'0x3F35eB839f91b614195a47A593dB46b14cd7EaF8', // Kovan\n              functions:[\n                {\n                  name:'deposit',\n                  label:'Deposit',\n                  usePermit:true,\n                  permitName:'permitEIP2612AndDepositUnlimited'\n                },\n              ]\n            },\n          },\n          /*\n          idleUSDTYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'USDT',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintUSDT',\n              address:'0xee5c50c7c49dec47dde2f9b0233b9e14a8f00cf2',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleSUSDYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'SUSD',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintSUSD',\n              address:'0xE2eE519399a49f1A2004a25DA61e82867A69b9b1',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleTUSDYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'TUSD',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintTUSD',\n              address:'0x174a273f0ea28e55b6dd13259aa43d262b863a86',\n              functions:[\n                {\n                  usePermit:true,\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleWBTCYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'WBTC',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintWBTC',\n              address:'0xbfDC7d97559173B52EF2A2f1bC9BeCf97B0D401D',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleDAISafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'DAI',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintDAISafe',\n              address:'0x08db226d63cE724A6091Ba82D28dFc76ceCa23d8',\n              functions:[\n                {\n                  name:'deposit',\n                  label:'Deposit',\n                  usePermit:true,\n                },\n              ]\n            },\n          },\n          idleUSDCSafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'USDC',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintUSDCSafe',\n              address:'0xA6C89A31D59f9C68D9Cba28d690C5E52058fb472',\n              functions:[\n                {\n                  name:'deposit',\n                  label:'Deposit',\n                  usePermit:true,\n                },\n              ]\n            },\n          },\n          idleUSDTSafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'USDT',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintUSDTSafe',\n              address:'0xd47B96Fb33b79a4Dd81a2bfa676eBB669166f619',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          }\n          */\n        }\n      }\n    },\n    batchMigration:{\n      enabled:true,\n      claimEnabled:true,\n      depositEnabled:false,\n      icon:'FileDownload',\n      route:'batch-migration',\n      label:'Batch Migration',\n      subComponent:BatchMigration,\n      desc:'Deposit your Idle Tokens V3 into a batch and wait until its conversion to the Idle Token V4',\n      props:{\n        availableTokens:{\n          idleDAIYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'DAI',\n            name:'idleDAIYieldV3',\n            token:'idleDAIYieldV3',\n            address:'0x78751b12da02728f467a44eac40f5cbc16bd7934',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterDAI',\n              address:'0xe0BfD08dA4DAf8f8BA11d1c3802009E75f963497',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleUSDCYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'USDC',\n            name:'idleUSDCYieldV3',\n            token:'idleUSDCYieldV3',\n            address:'0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterUSDC',\n              address:'0x86c8b56d124c2a8e7ea8a9e6a7f8ed99dde5cca8',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleUSDTYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'USDT',\n            name:'idleUSDTYieldV3',\n            token:'idleUSDTYieldV3',\n            address:'0x63D27B3DA94A9E871222CB0A32232674B02D2f2D',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterUSDT',\n              address:'0xee5c50c7c49dec47dde2f9b0233b9e14a8f00cf2',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleSUSDYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'SUSD',\n            name:'idleSUSDYieldV3',\n            token:'idleSUSDYieldV3',\n            address:'0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterSUSD',\n              address:'0xE2eE519399a49f1A2004a25DA61e82867A69b9b1',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleTUSDYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'TUSD',\n            name:'idleTUSDYieldV3',\n            token:'idleTUSDYieldV3',\n            address:'0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterTUSD',\n              address:'0x174a273f0ea28e55b6dd13259aa43d262b863a86',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleWBTCYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'WBTC',\n            name:'idleWBTCYieldV3',\n            token:'idleWBTCYieldV3',\n            address:'0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterWBTC',\n              address:'0xbfDC7d97559173B52EF2A2f1bC9BeCf97B0D401D',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleDAISafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'DAI',\n            name:'idleDAISafeV3',\n            token:'idleDAISafeV3',\n            address:'0x1846bdfDB6A0f5c473dEc610144513bd071999fB',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterDAISafe',\n              address:'0x08db226d63cE724A6091Ba82D28dFc76ceCa23d8',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleUSDCSafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'USDC',\n            name:'idleUSDCSafeV3',\n            token:'idleUSDCSafeV3',\n            address:'0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterUSDCSafe',\n              address:'0xA6C89A31D59f9C68D9Cba28d690C5E52058fb472',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleUSDTSafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'USDT',\n            name:'idleUSDTSafeV3',\n            token:'idleUSDTSafeV3',\n            address:'0x42740698959761baf1b06baa51efbd88cb1d862b',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterUSDTSafe',\n              address:'0xd47B96Fb33b79a4Dd81a2bfa676eBB669166f619',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          }\n        }\n      }\n    },\n    tokenMigration:{\n      enabled:true,\n      icon:'SwapHoriz',\n      route:'convert',\n      label:'Token Migration',\n      desc:'Easily convert your Compound, Fulcrum, Aave and iEarn tokens into Idle',\n      subComponent:TokenMigration,\n      props:{\n        migrationContract:{\n          name:'IdleConverterV4',\n          abi:IdleConverterPersonalSignV4,\n          address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n          oldAddresses:[],\n          functions:[\n            {\n              label:'Migrate',\n              name:'migrateFromToIdle'\n            },\n          ]\n        },\n        availableStrategies:['best','risk'],\n        availableTokens:{\n          idleDAIv2:{\n            decimals:18,\n            enabled:true,\n            protocol:'idle',\n            baseToken:'DAI',\n            abi:IdleTokenV2,\n            token:'idleDAIOld',\n            icon:'images/tokens/idleDAI.svg',\n            migrateFunction:'migrateFromToIdle',\n            address:'0x10eC0D497824e342bCB0EDcE00959142aAa766dD',\n          },\n          cDAI:{\n            decimals:8,\n            enabled:true,\n            token:\"cDAI\",\n            baseToken:'DAI',\n            protocol:\"compound\",\n            migrateFunction:'migrateFromCompoundToIdle',\n            address:\"0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643\",\n          },\n          iDAI:{\n            decimals:18,\n            enabled:false,\n            token:\"iDAI\",\n            baseToken:'DAI',\n            protocol:\"fulcrum\",\n            migrateFunction:'migrateFromFulcrumToIdle',\n            address:\"0x493c57c4763932315a328269e1adad09653b9081\",\n          },\n          aDAI:{\n            decimals:18,\n            enabled:true,\n            token:\"aDAI\",\n            protocol:\"aave\",\n            baseToken:'DAI',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d\",\n          },\n          yDAIv3:{\n            decimals:18,\n            enabled:true,\n            token:\"yDAIv3\",\n            abi:yDAIv3.abi,\n            baseToken:'DAI',\n            protocol:\"iearn\",\n            icon:'images/tokens/yDAI.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0xC2cB1040220768554cf699b0d863A3cd4324ce32\",\n          },\n          yDAIv2:{\n            decimals:18,\n            enabled:true,\n            token:\"yDAIv2\",\n            baseToken:'DAI',\n            abi:yDAIv3.abi,\n            protocol:\"iearn\",\n            icon:'images/tokens/yDAI.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0x16de59092dAE5CcF4A1E6439D611fd0653f0Bd01\",\n          },\n          idleUSDCv2:{\n            decimals:18,\n            enabled:true,\n            protocol:'idle',\n            abi:IdleTokenV2,\n            baseToken:'USDC',\n            token:'idleUSDCOld',\n            icon:'images/tokens/idleUSDC.svg',\n            migrateFunction:'migrateFromToIdle',\n            address:'0xeB66ACc3d011056B00ea521F8203580C2E5d3991',\n          },\n          cUSDC:{\n            decimals:8,\n            enabled:true,\n            token:\"cUSDC\",\n            baseToken:'USDC',\n            protocol:\"compound\",\n            migrateFunction:'migrateFromCompoundToIdle',\n            address:\"0x39aa39c021dfbae8fac545936693ac917d5e7563\",\n          },\n          iUSDC:{\n            decimals:6,\n            enabled:false,\n            token:\"iUSDC\",\n            baseToken:'USDC',\n            protocol:\"fulcrum\",\n            migrateFunction:'migrateFromFulcrumToIdle',\n            address:\"0xf013406a0b1d544238083df0b93ad0d2cbe0f65f\",\n          },\n          aUSDC:{\n            decimals:6,\n            enabled:true,\n            token:\"aUSDC\",\n            protocol:\"aave\",\n            baseToken:'USDC',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0x9bA00D6856a4eDF4665BcA2C2309936572473B7E\",\n          },\n          yUSDCv3:{\n            decimals:6,\n            enabled:true,\n            token:\"yUSDCv3\",\n            protocol:\"iearn\",\n            abi:yUSDCv3.abi,\n            baseToken:'USDC',\n            icon:'images/tokens/yUSDC.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0x26EA744E5B887E5205727f55dFBE8685e3b21951\",\n          },\n          yUSDCv2:{\n            decimals:6,\n            enabled:true,\n            token:\"yUSDCv2\",\n            protocol:\"iearn\",\n            abi:yUSDCv3.abi,\n            baseToken:'USDC',\n            icon:'images/tokens/yUSDC.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0xd6aD7a6750A7593E092a9B218d66C0A814a3436e\",\n          },\n          cUSDT:{\n            decimals:8,\n            enabled:true,\n            token:\"cUSDT\",\n            baseToken:'USDT',\n            protocol:\"compound\",\n            migrateFunction:'migrateFromCompoundToIdle',\n            address:\"0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9\",\n          },\n          iUSDT:{\n            decimals:6,\n            enabled:false,\n            token:\"iUSDT\",\n            baseToken:'USDT',\n            protocol:\"fulcrum\",\n            migrateFunction:'migrateFromFulcrumToIdle',\n            address:\"0x8326645f3aa6de6420102fdb7da9e3a91855045b\",\n          },\n          aUSDT:{\n            decimals:6,\n            enabled:true,\n            token:\"aUSDT\",\n            protocol:\"aave\",\n            baseToken:'USDT',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0x71fc860F7D3A592A4a98740e39dB31d25db65ae8\",\n          },\n          yUSDTv3:{\n            decimals:6,\n            enabled:true,\n            token:\"yUSDTv3\",\n            abi:yUSDTv3.abi,\n            protocol:\"iearn\",\n            baseToken:'USDT',\n            icon:'images/tokens/yUSDT.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0xE6354ed5bC4b393a5Aad09f21c46E101e692d447\",\n          },\n          yUSDTv2:{\n            decimals:6,\n            enabled:true,\n            token:\"yUSDTv2\",\n            abi:yUSDTv3.abi,\n            protocol:\"iearn\",\n            baseToken:'USDT',\n            icon:'images/tokens/yUSDT.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0x83f798e925BcD4017Eb265844FDDAbb448f1707D\",\n          },\n          idleSUSDv2:{\n            decimals:18,\n            enabled:true,\n            abi:IdleTokenV2,\n            protocol:'idle',\n            baseToken:'SUSD',\n            token:'idleSUSDYieldOld',\n            availableStrategies:['best'],\n            migrateFunction:'migrateFromToIdle',\n            icon:'images/tokens/idleSUSDYield.svg',\n            address:'0xb39ca0261a1b2986a6a9Fe38d344B56374963dE5',\n          },\n          aSUSD:{\n            decimals:6,\n            enabled:true,\n            token:\"aSUSD\",\n            protocol:\"aave\",\n            baseToken:'SUSD',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0x625aE63000f46200499120B906716420bd059240\",\n          },\n          ySUSDv3:{\n            decimals:18,\n            enabled:true,\n            token:\"ySUSDv3\",\n            abi:ySUSDv3,\n            baseToken:'SUSD',\n            protocol:\"iearn\",\n            availableStrategies:['best'],\n            icon:'images/tokens/ySUSDv3.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0xf61718057901f84c4eec4339ef8f0d86d2b45600\",\n          },\n          idleTUSDv2:{\n            decimals:18,\n            enabled:true,\n            abi:IdleTokenV2,\n            protocol:'idle',\n            baseToken:'TUSD',\n            token:'idleTUSDYieldOld',\n            availableStrategies:['best'],\n            migrateFunction:'migrateFromToIdle',\n            icon:'images/tokens/idleTUSDYield.svg',\n            address:'0x7DB7A4a50b26602E56536189Aa94678C80F8E5b6',\n          },\n          aTUSD:{\n            decimals:6,\n            enabled:true,\n            token:\"aTUSD\",\n            protocol:\"aave\",\n            baseToken:'TUSD',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0x4DA9b813057D04BAef4e5800E36083717b4a0341\",\n          },\n          yTUSDv3:{\n            decimals:18,\n            enabled:true,\n            abi:yTUSDv3,\n            token:\"yTUSDv3\",\n            baseToken:'TUSD',\n            protocol:\"iearn\",\n            icon:'images/tokens/yTUSDv3.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0x73a052500105205d34daf004eab301916da8190f\",\n          },\n          cWBTC:{\n            decimals:8,\n            enabled:true,\n            token:\"cWBTC\",\n            baseToken:'WBTC',\n            protocol:\"compound\",\n            migrateFunction:'migrateFromCompoundToIdle',\n            address:\"0xc11b1268c1a384e55c48c2391d8d480264a3a7f4\",\n          },\n          iWBTC:{\n            decimals:8,\n            enabled:false,\n            token:\"iWBTC\",\n            baseToken:'WBTC',\n            protocol:\"fulcrum\",\n            migrateFunction:'migrateFromFulcrumToIdle',\n            address:\"0xba9262578efef8b3aff7f60cd629d6cc8859c8b5\",\n          },\n          aWBTC:{\n            decimals:8,\n            enabled:true,\n            token:\"aWBTC\",\n            protocol:\"aave\",\n            baseToken:'WBTC',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0xfc4b8ed459e00e5400be803a9bb3954234fd50e3\",\n          },\n        }\n      }\n    },\n    addFunds:{\n      enabled:true,\n      icon:'AddCircleOutline',\n      route:'add-funds',\n      label:'Add Funds',\n      desc:'Buy tokens with your Bank account, Credit card or Ethereum Wallet',\n      subComponent:BuyModal,\n      directProps:{\n        showInline:true,\n        showAllTokens:true\n      }\n    },\n    tokenSwap:{\n      enabled:true,\n      icon:'Sync',\n      route:'token-swap',\n      label:'Token Swap',\n      desc:'Easily swap your tokens using Kyber Swap widget',\n      subComponent:TokenSwap,\n      props:{\n        availableTokens:{\n          \"ETH\":{\"token\":\"ETH\"},\n          \"DAI\":{\"token\":\"DAI\"},\n          \"SUSD\":{\"token\":\"SUSD\"},\n          \"TUSD\":{\"token\":\"TUSD\"},\n          \"USDC\":{\"token\":\"USDC\"},\n          \"USDS\":{\"token\":\"USDS\"},\n          \"USDT\":{\"token\":\"USDT\"},\n          \"WBTC\":{\"token\":\"WBTC\"},\n          \"WETH\":{\"token\":\"WETH\"},\n          \"BUSD\":{\"token\":\"BUSD\"},\n          \"EURS\":{\"token\":\"EURS\"},\n          \"2KEY\":{\"token\":\"2KEY\"},\n          \"ABT\":{\"token\":\"ABT\"},\n          \"ABYSS\":{\"token\":\"ABYSS\"},\n          \"AMPL\":{\"token\":\"AMPL\"},\n          \"ANT\":{\"token\":\"ANT\"},\n          \"BAM\":{\"token\":\"BAM\"},\n          \"BAND\":{\"token\":\"BAND\"},\n          \"BAT\":{\"token\":\"BAT\"},\n          \"BLZ\":{\"token\":\"BLZ\"},\n          \"BNT\":{\"token\":\"BNT\"},\n          \"BQX\":{\"token\":\"BQX\"},\n          \"BTU\":{\"token\":\"BTU\"},\n          \"CDT\":{\"token\":\"CDT\"},\n          \"CVC\":{\"token\":\"CVC\"},\n          \"DAT\":{\"token\":\"DAT\"},\n          \"DGX\":{\"token\":\"DGX\"},\n          \"EKG\":{\"token\":\"EKG\"},\n          \"ELF\":{\"token\":\"ELF\"},\n          \"ENJ\":{\"token\":\"ENJ\"},\n          \"EQUAD\":{\"token\":\"EQUAD\"},\n          \"FXC\":{\"token\":\"FXC\"},\n          \"GDC\":{\"token\":\"GDC\"},\n          \"GEN\":{\"token\":\"GEN\"},\n          \"GHT\":{\"token\":\"GHT\"},\n          \"GNO\":{\"token\":\"GNO\"},\n          \"IOST\":{\"token\":\"IOST\"},\n          \"KEY\":{\"token\":\"KEY\"},\n          \"KNC\":{\"token\":\"KNC\"},\n          \"LEND\":{\"token\":\"LEND\"},\n          \"LINK\":{\"token\":\"LINK\"},\n          \"LOOM\":{\"token\":\"LOOM\"},\n          \"LRC\":{\"token\":\"LRC\"},\n          \"MANA\":{\"token\":\"MANA\"},\n          \"MCO\":{\"token\":\"MCO\"},\n          \"MET\":{\"token\":\"MET\"},\n          \"MFG\":{\"token\":\"MFG\"},\n          \"MKR\":{\"token\":\"MKR\"},\n          \"MLN\":{\"token\":\"MLN\"},\n          \"MTL\":{\"token\":\"MTL\"},\n          \"MYB\":{\"token\":\"MYB\"},\n          \"NEXXO\":{\"token\":\"NEXXO\"},\n          \"NPXS\":{\"token\":\"NPXS\"},\n          \"OGN\":{\"token\":\"OGN\"},\n          \"OMG\":{\"token\":\"OMG\"},\n          \"OST\":{\"token\":\"OST\"},\n          \"PAX\":{\"token\":\"PAX\"},\n          \"PBTC\":{\"token\":\"PBTC\"},\n          \"PLR\":{\"token\":\"PLR\"},\n          \"PNK\":{\"token\":\"PNK\"},\n          \"POLY\":{\"token\":\"POLY\"},\n          \"POWR\":{\"token\":\"POWR\"},\n          \"PT\":{\"token\":\"PT\"},\n          \"QKC\":{\"token\":\"QKC\"},\n          \"QNT\":{\"token\":\"QNT\"},\n          \"RAE\":{\"token\":\"RAE\"},\n          \"REN\":{\"token\":\"REN\"},\n          \"REP\":{\"token\":\"REP\"},\n          \"REQ\":{\"token\":\"REQ\"},\n          \"RLC\":{\"token\":\"RLC\"},\n          \"RSR\":{\"token\":\"RSR\"},\n          \"RSV\":{\"token\":\"RSV\"},\n          \"SAN\":{\"token\":\"SAN\"},\n          \"SNT\":{\"token\":\"SNT\"},\n          \"SNX\":{\"token\":\"SNX\"},\n          \"SPIKE\":{\"token\":\"SPIKE\"},\n          \"SPN\":{\"token\":\"SPN\"},\n          \"TKN\":{\"token\":\"TKN\"},\n          \"TKX\":{\"token\":\"TKX\"},\n          \"TRYB\":{\"token\":\"TRYB\"},\n          \"UBT\":{\"token\":\"UBT\"},\n          \"UPP\":{\"token\":\"UPP\"},\n          \"ZRX\":{\"token\":\"ZRX\"}\n        }\n      },\n      directProps:{\n      }\n    }\n  },\n  insurance:{\n    nexusMutual:{\n      label:'Nexus Mutual',\n      image:'images/protocols/nexus-mutual.png',\n      imageDark:'images/protocols/nexus-mutual-white.png'\n    },\n    coverProtocol:{\n      label:'Cover Protocol',\n      image:'images/protocols/cover-logo.svg',\n      imageDark:'images/protocols/cover-logo.svg',\n    }\n  },\n  payments: { // Payment methods & providers\n    methods:{\n      bank:{\n        defaultProvider:null,\n        showDefaultOnly:false,\n        props:{\n          imageSrc:'images/bank.png',\n          caption:'Bank Account'\n        }\n      },\n      card:{\n        defaultProvider:null,\n        showDefaultOnly:false,\n        props:{\n          imageSrc:'images/debit-card.png',\n          caption:'Credit Card'\n        }\n      },\n      wallet:{\n        defaultProvider:'zeroExInstant',\n        showDefaultOnly:false,\n        props:{\n          imageSrc:'images/ethereum-wallet.svg',\n          caption:'Ethereum Wallet',\n          imageProps:{\n            padding:['0','5px']\n          }\n        }\n      },\n    },\n    providers: {\n      wyre: {\n        enabled: true,\n        imageSrc: 'images/payments/wyre.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 0.75% fee ~',\n        supportedMethods:['card'],\n        supportedCountries:['USA','GBR','AUS','BRA','CHN','MEX','EUR'],\n        supportedTokens:['USDC','DAI','ETH'],\n        remoteResources:{},\n        env:'prod',\n        envParams:{\n          test:{\n            accountId:'AC_Q2Y4AARC3TP'\n          },\n          prod:{\n            accountId:'AC_PQQBX33XVEQ'\n          }\n        },\n        getInfo: (props) => {\n          const info = {};\n          if (props.selectedMethod && props.selectedMethod){\n            switch (props.selectedMethod){\n              case 'bank':\n                info.subcaption = `~ 0.75% fee ~\\nKYC REQUIRED`;\n              break;\n              case 'card':\n                info.subcaption = `~ 3.2% fee ~\\n$250.00/day`;\n              break;\n              default:\n              break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props,globalConfigs,buyParams) => {\n          const env = globalConfigs.payments.providers.wyre.env;\n          const envParams = globalConfigs.payments.providers.wyre.envParams[env];\n          const referrerAccountId = envParams.accountId;\n          const url = 'https://pay.sendwyre.com/purchase';\n\n          const params = {\n            dest: `ethereum:${props.account}`,\n            destCurrency: buyParams.selectedToken ? buyParams.selectedToken : ( props.tokenConfig.wyre && props.tokenConfig.wyre.destCurrency ? props.tokenConfig.wyre.destCurrency : props.selectedToken ),\n            referrerAccountId,\n            redirectUrl:globalConfigs.baseURL\n            // failureRedirectUrl:globalConfigs.baseURL\n          };\n\n          return `${url}?`+Object.keys(params)\n              .map(k => encodeURIComponent(k) + '=' + encodeURIComponent(params[k]))\n              .join('&');\n        },\n        render: (initParams,amount,props,globalConfigs) => {\n          const wyreWidget = document.getElementById('wyre-widget');\n          if (!wyreWidget){\n            const iframeBox = document.createElement(\"div\");\n            iframeBox.innerHTML = `\n              <div id=\"wyre-widget\" class=\"wyre-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                <div id=\"wyre-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\"></div>\n                <a class=\"wyre-close-button\" href=\"javascript:void(0);\" onclick=\"document.getElementById('wyre-widget').remove();\" style=\"position:absolute;width:30px;height:30px;top:10px;right:10px;font-size:22px;line-height:30px;text-align:center;color:#fff;font-weight:bold;z-index:10;text-decoration:none\">✕</a>\n                <div id=\"wyre-widget-container\" style=\"position:relative;z-index:2;width:400px;height:650px\">\n                  <iframe\n                    style=\"position:relative;z-index:2;\"\n                    frameborder=\"0\"\n                    height=\"100%\"\n                    src=\"${initParams}\"\n                    width=\"100%\"\n                  >\n                    <p>Your browser does not support iframes.</p>\n                  </iframe>\n                  <div id=\"wyre-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                    <div style=\"display:flex;flex-direction:row;align-items:center\">\n                      <img src=\"${globalConfigs.payments.providers.wyre.imageSrc}\" style=\"height:50px;\" />\n                      <h3 style=\"font-weight:600;font-style:italic;color:#000;padding-left:10px\">is loading...</h3>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            `;\n            document.body.appendChild(iframeBox);\n\n            // Add wyre Widget style (mobile)\n            if (!document.getElementById('wyreWidget_style')){\n              const wyreStyle = document.createElement('style');\n              wyreStyle.id = 'wyreWidget_style';\n              wyreStyle.innerHTML = `\n              @media (max-width: 40em){\n                #wyre-widget {\n                  align-items: flex-start !important;\n                }\n                #wyre-widget-overlay{\n                  background:#fff !important;\n                }\n                #wyre-widget-container{\n                  width:100vw;\n                  min-height: calc( 100vh - 60px ) !important;\n                }\n              }`;\n              document.body.appendChild(wyreStyle);\n            }\n          }\n        },\n      },\n      ramp: {\n        enabled:true,\n        imageSrc: 'images/payments/ramp.png',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption:`~ 2.5% fee ~\\nEUR / GBP`,\n        supportedMethods:['bank','card'],\n        badge: {\n          text:'NO ID REQUIRED',\n          color:'#fff',\n          bgColor:'#0cade4'\n        },\n        supportedTokens:['ETH','DAI','USDC'],\n        supportedCountries:['USA','GBR','AUS','BRA','CAN','EUR','HKG','IND','MEX','RUS','ZAF','KOR'],\n        getInfo: (props) => {\n          const info = {};\n            switch (props.selectedMethod){\n              case 'bank':\n                info.supportedCountries = ['GBR','EUR'];\n                info.subcaption = `~ 1.49-1.99% fee ~`;\n              break;\n              case 'card':\n                info.supportedCountries = ['USA','GBR','AUS','BRA','CAN','EUR','HKG','IND','MEX','RUS','ZAF','KOR'];\n                info.subcaption = `~ 2.90% fee ~`;\n              break;\n              default:\n              break;\n            }\n          return info;\n        },\n        getInitParams: (props,globalConfigs,buyParams) => {\n        \treturn {\n\t          hostAppName: 'Idle',\n            userAddress: props.account,\n            hostApiKey: env.REACT_APP_RAMP_KEY,\n            variant: props.isMobile ? 'mobile' : 'desktop',\n            hostLogoUrl: `${globalConfigs.baseURL}/images/idle-round.png`,\n            swapAsset: buyParams.selectedToken ? buyParams.selectedToken : ( props.tokenConfig.ramp && props.tokenConfig.ramp.swapAsset ? props.tokenConfig.ramp.swapAsset : props.selectedToken )\n        \t};\n        },\n        render: (initParams,amount,props,globalConfigs) => {\n          new RampInstantSDK(initParams)\n            .on('*', async (event) => {\n              const functionsUtil = new FunctionsUtil(props);\n              let tokenDecimals = null;\n              let tokenAmount = null;\n\n              switch (event.type){\n                case 'PURCHASE_SUCCESSFUL':\n                  // Update balance\n                  props.getAccountBalance();\n\n                  tokenDecimals = await props.getTokenDecimals();\n\n                  tokenAmount = event.payload.purchase.tokenAmount;\n                  tokenAmount = functionsUtil.BNify(tokenAmount.toString()).div(functionsUtil.BNify(Math.pow(10,parseInt(tokenDecimals)).toString())).toString();\n\n                  // Toast message\n                  window.toastProvider.addMessage(`Payment completed`, {\n                    secondaryMessage: `${tokenAmount} ${props.selectedToken} are now in your wallet`,\n                    colorTheme: 'light',\n                    actionHref: \"\",\n                    actionText: \"\",\n                    variant: \"success\",\n                  });\n\n                break;\n                default:\n                break;\n              }\n            })\n            .show();\n        }\n      },\n      transak: {\n        enabled:true,\n        imageSrc: 'images/payments/transak.png',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption:`~ 1.5% fee ~\\nALL CURRENCIES`,\n        supportedMethods:['bank','card'],\n        supportedCountries:['USA','GBR','AUS','BRA','CHN','MEX','EUR','IND'],\n        supportedTokens:['ETH','DAI','USDC','USDT','TUSD','SUSD','WBTC'],\n        remoteResources:{'https://global.transak.com/v1/widget.js':{}},\n        env:'prod',\n        badge:{\n          text:'INSTANT',\n          bgColor:'#0069ee'\n        },\n        envParams:{\n          test:{\n            apiKey:env.REACT_APP_TRANSAK_KEY_TEST,\n            url:'https://global.transak.com'\n          },\n          prod:{\n            apiKey:env.REACT_APP_TRANSAK_KEY_PROD,\n            url:'https://global.transak.com'\n          }\n        },\n        getInfo: (props) => {\n          const info = {};\n\n          const selectedMethod = props.selectedMethod && props.selectedMethod;\n          let fee = selectedMethod === 'bank' ? '1.5%' : '4.5%';\n\n          if (props.selectedCountry && props.selectedCountry.value){\n            switch (props.selectedCountry.value.toUpperCase()){\n              case 'GBR':\n                info.badge = {\n                  text:'INSTANT',\n                  bgColor:'#0069ee'\n                };\n                info.subcaption = `~ ${fee} fee ~\\nGBP ONLY`;\n              break;\n              case 'IND':\n                fee = '1.0%';\n                info.badge = {\n                  text:'INSTANT',\n                  bgColor:'#0069ee'\n                };\n                info.subcaption = `~ ${fee} fee ~\\nINR ONLY`;\n              break;\n              case 'EUR':\n                if (selectedMethod === 'bank'){\n                  info.badge = {\n                    text:'SEPA',\n                    color:'#f7cb05 ',\n                    bgColor:'#10288a'\n                  };\n                } else {\n                  info.badge = {\n                    text:'INSTANT',\n                    bgColor:'#0069ee'\n                  };\n                }\n                info.subcaption = `~ ${fee} fee ~\\nEUR ONLY`;\n              break;\n              default:\n              break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props,globalConfigs,buyParams) => {\n          const env = globalConfigs.payments.providers.transak.env;\n          const envParams = globalConfigs.payments.providers.transak.envParams[env];\n\n          let fiatCurrency = null;\n\n          if (buyParams.selectedCountry && buyParams.selectedCountry.value){\n            switch (buyParams.selectedCountry.value.toUpperCase()){\n              case 'IND':\n                fiatCurrency = 'INR';\n              break;\n              case 'GBR':\n                fiatCurrency = 'GBP';\n              break;\n              case 'EUR':\n                fiatCurrency = 'EUR';\n              break;\n              case 'USA':\n                fiatCurrency = 'USD';\n              break;\n              default:\n                fiatCurrency = 'GBP';\n              break;\n            }\n          }\n\n          let cryptoCurrencyCode = buyParams.selectedToken ? buyParams.selectedToken.toLowerCase() : ( props.tokenConfig.transak && props.tokenConfig.transak.currencyCode ? props.tokenConfig.transak.currencyCode : props.selectedToken);\n          cryptoCurrencyCode = cryptoCurrencyCode.toUpperCase();\n\n          const apiKey = envParams.apiKey;\n          const walletAddress = props.account;\n          const partnerCustomerId = props.account;\n          const disableWalletAddressForm = false;\n\n          return {\n            apiKey,\n            cryptoCurrencyCode,\n            walletAddress,\n            fiatCurrency,\n            partnerCustomerId,\n            disableWalletAddressForm,\n            width:'100%',\n            height:'100%'\n            // email,\n          };\n        },\n        render: (initParams,amount,props,globalConfigs) => {\n          if (window.transakGlobal){\n\n            const transakWidget = document.getElementById('transak-widget');\n            if (!transakWidget){\n              const iframeBox = document.createElement(\"div\");\n              iframeBox.innerHTML = `\n                <div id=\"transak-widget\" class=\"transak-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                  <div id=\"transak-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\" onclick=\"document.getElementById('transak-widget').remove();\"></div>\n                  <a class=\"transak-close-button\" href=\"javascript:void(0);\" onclick=\"document.getElementById('transak-widget').remove();\" style=\"position:absolute;width:30px;height:30px;top:10px;right:10px;font-size:22px;line-height:30px;text-align:center;color:#fff;font-weight:bold;z-index:10;text-decoration:none\">✕</a>\n                  <div class=\"transak-widget-container\" style=\"position:relative;z-index:2;width:500px;height:550px\">\n                    <div id=\"transak-widget-container\" style=\"position:relative;z-index:2;width:500px;height:550px\"></div>\n                    <div id=\"transak-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                      <div style=\"display:flex;flex-direction:row;align-items:center\">\n                        <img src=\"${globalConfigs.payments.providers.transak.imageSrc}\" style=\"height:50px;\" />\n                        <h3 style=\"font-weight:600;font-style:italic;color:#0040ca\">is loading...</h3>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              `;\n              document.body.appendChild(iframeBox);\n\n              // Add transak Widget style (mobile)\n              if (!document.getElementById('transakWidget_style')){\n                const transakStyle = document.createElement('style');\n                transakStyle.id = 'transakWidget_style';\n                transakStyle.innerHTML = `\n                @media (max-width: 40em){\n                  #transak-widget {\n                    align-items: flex-start !important;\n                  }\n                  #transak-widget-overlay{\n                    background:#fff !important;\n                  }\n                  #transak-widget-container{\n                    width:100vw;\n                    min-height: calc( 100vh - 60px ) !important;\n                  }\n                }`;\n                document.body.appendChild(transakStyle);\n              }\n            }\n\n            window.transakGlobal.render(initParams, 'transak-widget-container');\n          }\n        }\n      },\n      moonpay: {\n        enabled:true,\n        imageSrc: 'images/payments/moonpay.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 4.5% fee ~',\n        supportedMethods:['card','bank'],\n        supportedCountries:['GBR','EUR','AUS','BRA','CHN','MEX','CAN','HKG','RUS','ZAF','KOR'],\n        supportedTokens:['USDC','DAI','ETH'],\n        env:'prod',\n        envParams:{\n          test:{\n            url:'https://buy-staging.moonpay.io',\n            apiKey:env.REACT_APP_MOONPAY_KEY_TEST\n          },\n          prod:{\n            url:'https://buy.moonpay.io',\n            apiKey:env.REACT_APP_MOONPAY_KEY_PROD\n          }\n        },\n        getInfo: (props) => {\n          const info = {};\n          if (props.selectedMethod && props.selectedMethod){\n            switch (props.selectedMethod){\n              case 'bank':\n                if (props.selectedCountry && props.selectedCountry.value){\n                  switch (props.selectedCountry.value.toUpperCase()){\n                    case 'EUR':\n                      info.badge = {\n                        text:'SEPA',\n                        color:'#f7cb05 ',\n                        bgColor:'#10288a'\n                      }\n                      info.subcaption = `~ 1.5% fee ~\\nEUR ONLY`;\n                    break;\n                    case 'GBR':\n                      info.badge = {\n                        text:'GBP',\n                      }\n                      info.subcaption = `~ 1.5% fee ~\\nGBP ONLY`;\n                    break;\n                    default:\n                      info.badge = null;\n                      info.subcaption = `~ 1.5% fee ~\\nEUR/GBP ONLY`;\n                    break;\n                  }\n                }\n              break;\n              case 'card':\n                info.badge = null;\n                info.subcaption = `~ 5% fee ~`;\n              break;\n              default:\n              break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props,globalConfigs,buyParams) => {\n          const env = globalConfigs.payments.providers.moonpay.env;\n          const envParams = globalConfigs.payments.providers.moonpay.envParams[env];\n          const apiKey = envParams.apiKey;\n          const params = {\n            apiKey,\n            currencyCode: buyParams.selectedToken ? buyParams.selectedToken.toLowerCase() : ( props.tokenConfig.moonpay && props.tokenConfig.moonpay.currencyCode ? props.tokenConfig.moonpay.currencyCode : props.selectedToken.toLowerCase()),\n            walletAddress:props.account,\n            baseCurrencyCode:'USD',\n            showWalletAddressForm: true\n          };\n\n          const methods = {\n            'bank':{\n              'GBR':'gbp_bank_transfer',\n              'EUR':'sepa_bank_transfer'\n            },\n            'card':'credit_debit_card'\n          };\n\n          const selectedCountry = buyParams.selectedCountry && buyParams.selectedCountry.value ? buyParams.selectedCountry.value.toUpperCase() : null;\n\n          // Set payment method\n          if (buyParams.selectedMethod){\n            switch (buyParams.selectedMethod){\n              case 'bank':\n                params.enabledPaymentMethods = methods[buyParams.selectedMethod]['EUR'];\n                switch (selectedCountry){\n                  case 'GBR':\n                  case 'EUR':\n                    params.enabledPaymentMethods = methods[buyParams.selectedMethod][selectedCountry];\n                  break;\n                  default:\n                    params.enabledPaymentMethods = Object.values(methods[buyParams.selectedMethod]).join(',');\n                  break;\n                }\n              break;\n              case 'card':\n              default:\n                params.enabledPaymentMethods = methods[buyParams.selectedMethod];\n              break;\n            }\n          }\n\n          // Set baseCurrencyCode\n          switch (selectedCountry){\n            case 'GBR':\n              params.baseCurrencyCode = 'GBP';\n            break;\n            case 'EUR':\n              params.baseCurrencyCode = 'EUR';\n            break;\n            default:\n              params.baseCurrencyCode = 'USD';\n            break;\n          }\n\n          let url = envParams.url;\n\n          // Safari Fix\n          var isSafari = navigator.userAgent.indexOf(\"Safari\") > -1;\n          if (isSafari) {\n            if (!document.cookie.match(/^(.*;)?\\s*moonpay-fixed\\s*=\\s*[^;]+(.*)?$/)) {\n              document.cookie = \"moonpay-fixed=fixed; expires=Tue, 19 Jan 2038 03:14:07 UTC; path=/\";\n              url += \"/safari_fix\";\n            }\n          }\n\n          return `${url}?`+Object.keys(params)\n              .map(k => encodeURIComponent(k) + '=' + encodeURIComponent(params[k]))\n              .join('&');\n        },\n        render: (initParams,amount,props,globalConfigs) => {\n          const moonpayWidget = document.getElementById('moonpay-widget');\n          if (!moonpayWidget){\n            const iframeBox = document.createElement(\"div\");\n            iframeBox.innerHTML = `\n              <div id=\"moonpay-widget\" class=\"moonpay-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                <div id=\"moonpay-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\"></div>\n                  <div id=\"moonpay-widget-container\" style=\"position:relative;z-index:2;width:500px;height:490px\">\n                    <iframe\n                      style=\"position:relative;z-index:2;\"\n                      frameborder=\"0\"\n                      height=\"100%\"\n                      src=\"${initParams}\"\n                      width=\"100%\"\n                    >\n                      <p>Your browser does not support iframes.</p>\n                    </iframe>\n                    <div id=\"moonpay-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                      <div style=\"display:flex;flex-direction:row;align-items:end\">\n                        <img src=\"${globalConfigs.payments.providers.moonpay.imageSrc}\" style=\"height:50px;\" />\n                        <h3 style=\"padding-left:5px;font-weight:600;font-style:italic;\">is loading...</h3>\n                      </div>\n                    </div>\n                    <div id=\"moonpay-widget-footer\" style=\"position:relative;display:flex;justify-content:center;align-items:center;padding:8px 16px;width:100%;background:#fff;top:-20px;z-index:3\">\n                      <button style=\"background:#000;color:#fff;text-align:center;border-radius:5px;width:100%;height:51px;line-height:51px;font-weight:500;border:0;cursor:pointer\" onclick=\"document.getElementById('moonpay-widget').remove();\">Close</button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            `;\n            document.body.appendChild(iframeBox);\n\n            // Add Moonpay Widget style (mobile)\n            if (!document.getElementById('moonpayWidget_style')){\n              const moonpayStyle = document.createElement('style');\n              moonpayStyle.id = 'moonpayWidget_style';\n              moonpayStyle.innerHTML = `\n              @media (max-width: 40em){\n                #moonpay-widget {\n                  align-items: flex-start !important;\n                }\n                #moonpay-widget-overlay{\n                  background:#fff !important;\n                }\n                #moonpay-widget-container{\n                  width:100vw;\n                  min-height: calc( 100vh - 60px ) !important;\n                }\n              }`;\n              document.body.appendChild(moonpayStyle);\n            }\n          }\n        }\n      },\n      zeroExInstant: {\n        enabled: true,\n        imageSrc: 'images/payments/zeroexinstant.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 0.25% fee ~',\n        supportedMethods:['wallet'],\n        supportedTokens:['USDC','DAI'],\n        remoteResources:{'https://instant.0x.org/v3/instant.js':{}},\n        getInitParams: (props,globalConfigs,buyParams,onSuccess,onClose) => {\n\n          const tokenParams = globalConfigs.tokens[buyParams.selectedToken];\n          const connectorName = window.RimbleWeb3_context ? window.RimbleWeb3_context.connectorName : null;\n\n          if (!tokenParams.zeroExInstant){\n            return null;\n          }\n\n          return {\n            networkId: globalConfigs.network.requiredNetwork,\n            chainId: globalConfigs.network.requiredNetwork,\n            provider: connectorName && connectorName!=='Injected' && window.RimbleWeb3_context.connector[connectorName.toLowerCase()] ? window.RimbleWeb3_context.connector[window.RimbleWeb3_context.connectorName.toLowerCase()].provider : window.ethereum,\n            orderSource: tokenParams.zeroExInstant.orderSource,\n            affiliateInfo: tokenParams.zeroExInstant.affiliateInfo,\n            defaultSelectedAssetData: tokenParams.zeroExInstant.assetData,\n            availableAssetDatas: [tokenParams.zeroExInstant.assetData],\n            shouldDisableAnalyticsTracking: true,\n            onSuccess: onSuccess ? onSuccess : () => {},\n            onClose: onClose ? onClose : () => {}\n          };\n        },\n        render: (initParams,amount) => {\n          if (window.zeroExInstant && initParams){\n            if (amount){\n              initParams.defaultAssetBuyAmount = parseFloat(amount);\n            }\n            window.zeroExInstant.render(initParams, 'body');\n          }\n        }\n      },\n      kyberSwap: {\n        enabled: true,\n        imageSrc: 'images/payments/kyber.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Swap with',\n        captionPos: 'top',\n        subcaption: '~ 0.25% fee ~',\n        supportedMethods:['wallet'],\n        supportedTokens:['WETH','USDC','DAI','USDT','TUSD','SUSD','WBTC','RAI','FEI'],\n        web3Subscription:{ // Data for web3 subscription\n          enabled: true,\n          contractAddress: '0x818e6fecd516ecc3849daf6845e3ec868087b755',\n          decodeLogsData: [\n            {\n              \"internalType\": \"address\",\n              \"name\": \"_startAddress\",\n              \"type\": \"address\"\n            },\n            {\n              \"internalType\": \"address\",\n              \"name\": \"_tokenAddress\",\n              \"type\": \"address\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"_startAmount\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"_tokenAmount\",\n              \"type\": \"uint256\"\n            },\n          ],\n        },\n        remoteResources:{\n          'https://widget.kyber.network/v0.7.5/widget.css':{},\n          'https://widget.kyber.network/v0.7.5/widget.js':{\n            parentElement:document.body,\n            precall: (props,globalConfigs,providerInfo) => {\n\n              // Remove previous elements\n              const buttons = document.querySelectorAll('.kyber-widget-button');\n              for (let i=0;i<buttons.length;i++){\n                buttons[i].remove();\n              }\n\n              // const kyberWidgetScript = document.getElementById('kyber-widget-script');\n              // if (kyberWidgetScript){\n              //   kyberWidgetScript.remove();\n              // }\n\n              const scripts = document.querySelectorAll('.script_kyberSwap');\n              for (let i=0;i<scripts.length;i++){\n                scripts[i].remove();\n              }\n\n              const buttonId = props.buttonId ? props.buttonId : `kyber-swapper-${props.selectedToken}`;\n              if (!document.getElementById(buttonId)){\n                const a = document.createElement('a');\n                a.id = buttonId;\n                a.href = providerInfo.getInitParams(props,globalConfigs);\n                a.target = '_blank';\n                a.rel = 'nofollow noopener noreferrer';\n                a.className = 'kyber-widget-button theme-ocean theme-supported';\n                a.title = 'Swap with Kyber';\n                a.style = 'display:none;';\n                document.body.appendChild(a);\n              }\n            }\n          }\n        },\n        getInitParams: (props,globalConfigs,buyParams=null) => {\n          const baseToken = props.baseToken ? props.baseToken : 'ETH';\n          const params = {\n            lang:'en',\n            type:'swap',\n            mode:'iframe',\n            theme:'theme-ocean',\n            paramForwarding:true,\n            // callback:globalConfigs.baseURL,\n            pinnedTokens:`${baseToken}_${props.selectedToken}`,\n            title:`Swap ${baseToken} for ${props.selectedToken}`,\n            defaultPair:`${baseToken}_${props.selectedToken}`,\n            commissionId:'0x4215606a720477178AdFCd5A59775C63138711e8',\n            network: globalConfigs.network.requiredNetwork === 1 ? 'mainnet' : 'test',\n          };\n\n          const url  = 'https://widget.kyber.network/v0.7.5/';\n\n          return `${url}?`+Object.keys(params)\n              .map(k => encodeURIComponent(k) + '=' + encodeURIComponent(params[k]))\n              .join('&');\n        },\n        render: (initParams,amount,props) => {\n          const buttonId = props.buttonId ? props.buttonId :`kyber-swapper-${props.selectedToken}`;\n          const a = document.getElementById(buttonId);\n          if (a){\n            a.click();\n\n            // Observe for pending transaction\n            /*\n            if (window.MutationObserver){\n              setTimeout(() => {\n\n                const observer = new window.MutationObserver(function(mutations) {\n                  mutations.forEach((m,i) => {\n                    if (m.addedNodes.length && m.target.className === 'kyber_widget-broadcast'){\n\n                      // Show persistent toast message\n                      window.showToastMessage({\n                        variant:'processing',\n                        message:'Pending deposit',\n                        secondaryMessage:'kyberSwap is processing your request'\n                      });\n\n                      observer.disconnect();\n                    } else if (m.target.id === 'kyber-widget' && m.removedNodes.length && m.removedNodes[0].firstChild.className.includes('kyber_widget-widget-container')) {\n                      observer.disconnect();\n                    }\n                  });\n                });\n                const target = document.querySelector('#kyber-widget');\n                observer.observe(target, { childList: true, subtree: true });\n              },1000);\n            }\n            */\n          }\n        }\n      },\n      airSwap: {\n        enabled: false,\n        imageSrc: 'images/payments/airswap.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 0% fee ~',\n        supportedMethods:['wallet'],\n        supportedTokens:['USDC','DAI'],\n        env:'production',\n        remoteResources:{'https://cdn.airswap.io/airswap-instant-widget.js':{}},\n        getInitParams: (props,globalConfigs,buyParams,onComplete,onClose) => {\n          return {\n            env: 'production',\n            mode: 'buy',\n            token: props.tokenConfig.address,\n            baseToken: 'ETH',\n            onComplete: onComplete ? onComplete : () => {},\n            onClose: onClose ? onClose : () => {}\n          };\n        },\n        render: (initParams,amount,props) => {\n          if (window.AirSwapInstant){\n            if (amount){\n              initParams.amount = amount.toString();\n            }\n            window.AirSwapInstant.render(initParams,'body');\n          }\n        }\n      },\n      totle: {\n        enabled: false,\n        imageSrc: 'images/payments/totle.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 0% fee ~',\n        supportedMethods:['wallet'],\n        supportedTokens:['USDC','DAI'],\n        env:'production',\n        remoteResources:{'https://widget.totle.com/latest/dist.js':{}},\n        getInitParams: (props,globalConfigs,buyParams,onComplete,onClose) => {\n          return {\n            sourceAssetAddress: null,\n            sourceAmountDecimal: null,\n            destinationAssetAddress: null,\n            destinationAmountDecimal: null,\n            apiKey: null,\n            partnerContractAddress: null,\n          };\n        },\n        render: (initParams,amount,props) => {\n          if (window.TotleWidget){\n            const nodeId = 'totle-widget';\n            if (!document.getElementById(nodeId)){\n              const totleWidgetContainer = document.createElement(\"div\");\n              totleWidgetContainer.id = nodeId;\n              document.body.appendChild(totleWidgetContainer);\n            }\n\n            window.TotleWidget.default.run(initParams,document.getElementById(nodeId));\n          }\n        }\n      }\n    }\n  }\n};\n\nexport default globalConfigs;\n","import FunctionsUtil from './FunctionsUtil';\n\nclass IdleGovToken{\n  // Attributes\n  props = {};\n  tokenName = null;\n  tokenConfig = null;\n  functionsUtil = null;\n\n  // Constructor\n  constructor(props){\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    this.tokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n    this.tokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.tokenName]);\n  }\n\n  getBalance = async () => {\n    let balance = await this.functionsUtil.getTokenBalance(this.tokenName,this.props.account);\n    if (!balance || this.functionsUtil.BNify(balance).isNaN()){\n      balance = this.functionsUtil.BNify(0);\n    }\n    return balance;\n  }\n\n  claimRewards = async (callback,callbackReceipt) => {\n    return this.functionsUtil.contractMethodSendWrapper('EarlyRewards', 'claim', [], callback, callbackReceipt);\n  }\n\n  getPriorVotes = async (account=null) => {\n    account = account ? account : this.props.account;\n    let priorVotes = await this.functionsUtil.genericContractCall(this.tokenName,'getPriorVotes',[account]);\n    if (priorVotes){\n      return this.functionsUtil.BNify(priorVotes);\n    }\n    return null;\n  }\n\n  refreshIdleSpeed = async () => {\n    return this.functionsUtil.genericContractCall('IdleController','refreshIdleSpeeds');\n  }\n\n  getUnclaimedTokens = async () => {\n    /*\n    let rewards =  await this.functionsUtil.genericContractCall('EarlyRewards','rewards',[this.props.account]);\n    if (rewards){\n      return this.functionsUtil.fixTokenDecimals(rewards,this.tokenConfig.decimals);\n    }\n    */\n    return this.functionsUtil.BNify(0);\n  }\n\n  getAPR = async (token,tokenConfig,conversionRate=null) => {\n    const IDLETokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.tokenName]);\n    if (!IDLETokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getIdleAPR_${tokenConfig.idle.token}_${conversionRate}`;\n    /*\n    const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n    */\n\n    let APR = this.functionsUtil.BNify(0);\n\n    const [\n      idleDistribution,\n      tokenAllocation\n    ] = await Promise.all([\n      this.getDistribution(tokenConfig),\n      this.functionsUtil.getTokenAllocation(tokenConfig,false,false)\n    ]);\n\n    if (idleDistribution && tokenAllocation){\n\n      const DAITokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens','DAI']);\n        \n      // Get IDLE oconversion rate\n      if (!conversionRate){\n        try {\n          conversionRate = await this.functionsUtil.getUniswapConversionRate(DAITokenConfig,IDLETokenConfig);\n        } catch (error) {\n\n        }\n        if (!conversionRate || conversionRate.isNaN()){\n          conversionRate = this.functionsUtil.BNify(0);\n        }\n      }\n\n      if (!conversionRate || this.functionsUtil.BNify(conversionRate).lte(0)){\n        return this.functionsUtil.BNify(0);\n      }\n\n      const tokenPool = await this.functionsUtil.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent,token,tokenConfig);\n\n      const idleDistributedPerYearUSD = this.functionsUtil.BNify(conversionRate).times(idleDistribution);\n      APR = idleDistributedPerYearUSD.div(tokenPool).times(100);\n\n      // console.log(tokenConfig.idle.token,idleDistributedPerYearUSD.toFixed(5),conversionRate.toFixed(5),tokenPool.toFixed(5),APR.toFixed(5));\n\n      return this.functionsUtil.setCachedData(cachedDataKey,APR);\n    }\n\n    return APR;\n  }\n\n  // Get IDLE distribution speed\n  getSpeed = async (idleTokenAddress) => {\n\n    const cachedDataKey = `getIdleSpeed_${idleTokenAddress}`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return this.functionsUtil.BNify(cachedData);\n    }\n\n    let idleSpeeds = await this.functionsUtil.genericContractCall('IdleController','idleSpeeds',[idleTokenAddress]);\n\n    if (idleSpeeds && !this.functionsUtil.BNify(idleSpeeds).isNaN()){\n      idleSpeeds = this.functionsUtil.BNify(idleSpeeds);\n      return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,idleSpeeds,1800);\n    }\n    return null;\n  }\n\n  getDistribution = async (tokenConfig) => {\n\n    const cachedDataKey = `getIdleDistribution_${tokenConfig.idle.token}`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return this.functionsUtil.BNify(cachedData);\n    }\n\n    // Get IDLE distribution speed and Total Supply\n    const idleSpeeds = await this.getSpeed(tokenConfig.idle.address);\n\n    if (idleSpeeds){\n\n      // Get IDLE distribution for Idle in a Year\n      const blocksPerYear = this.functionsUtil.getGlobalConfig(['network','blocksPerYear']);\n\n      // Take 50% of distrubution for lenders side\n      const distribution = this.functionsUtil.BNify(idleSpeeds).times(this.functionsUtil.BNify(blocksPerYear)).div(1e18);\n\n      if (!this.functionsUtil.BNify(distribution).isNaN()){\n        return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,distribution);\n      }\n    }\n\n    return null;\n  }\n\n  getUserDistribution = async (account=null,availableTokens=null,fixByFrequency=false) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens){\n      return false;\n    }\n\n    let totalSpeed = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n\n      if (this.tokenConfig && this.tokenConfig.disabledTokens.includes(tokenConfig.idle.token)){\n        return;\n      }\n\n      const [\n        idleSpeed,\n        userPoolShare\n      ] = await Promise.all([\n        this.getSpeed(tokenConfig.idle.address),\n        this.functionsUtil.getUserPoolShare(account,tokenConfig)\n      ]);\n\n      if (idleSpeed && userPoolShare){\n        const tokenSpeed = idleSpeed.times(userPoolShare);\n        totalSpeed = totalSpeed.plus(tokenSpeed);\n      }\n    });\n\n    if (fixByFrequency){\n      totalSpeed = this.functionsUtil.fixTokenDecimals(totalSpeed,this.tokenConfig.decimals);\n      totalSpeed = this.functionsUtil.fixDistributionSpeed(totalSpeed,this.tokenConfig.distributionFrequency)\n    }\n\n    return totalSpeed;\n  }\n\n  getAvgApr = async (availableTokens=null) => {\n    if (!availableTokens){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n    let output = this.functionsUtil.BNify(0);\n    let totalAllocation = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [idleApr,tokenAllocation] = await Promise.all([\n        this.getAPR(token,tokenConfig),\n        this.functionsUtil.getTokenAllocation(tokenConfig,false,false)\n      ]);\n      \n      if (idleApr && tokenAllocation){\n        output = output.plus(idleApr.times(tokenAllocation.totalAllocation));\n        totalAllocation = totalAllocation.plus(tokenAllocation.totalAllocation);\n      }\n    });\n\n    output = output.div(totalAllocation);\n\n    return output;\n  }\n\n}\n\nexport default IdleGovToken;","import React from \"react\";\nimport axios from 'axios';\nimport moment from 'moment';\nimport { Text } from \"rimble-ui\";\nimport BigNumber from 'bignumber.js';\nimport IdleGovToken from './IdleGovToken';\nimport { toBuffer } from \"ethereumjs-util\";\nimport globalConfigs from '../configs/globalConfigs';\nimport ENS, { getEnsAddress } from '@ensdomains/ensjs';\n\nconst ethereumjsABI = require('ethereumjs-abi');\nconst env = process.env;\n\nwindow.profiler = {};\n\nclass FunctionsUtil {\n\n  // Attributes\n  props = {};\n  idleGovToken = null;\n\n  // Constructor\n  constructor(props){\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n  }\n  trimEth = eth => {\n    return this.BNify(eth).toFixed(6);\n  }\n  toBN = n => new this.props.web3.utils.BN(n)\n  toEth = wei => {\n    if (!this.props.web3){\n      return null;\n    }\n    return this.props.web3.utils.fromWei(\n      (wei || 0).toString(),\n      \"ether\"\n    );\n  }\n  toWei = eth => {\n    if (!this.props.web3){\n      return null;\n    }\n    return this.props.web3.utils.toWei(\n      (eth || 0).toString(),\n      \"ether\"\n    );\n  }\n  htmlDecode = input => {\n    var e = document.createElement('textarea');\n    e.innerHTML = input;\n    return e.childNodes.length === 0 ? '' : e.childNodes[0].nodeValue;\n  }\n  BNify_obj = s => new BigNumber(s)\n  BNify = s => new BigNumber( typeof s === 'object' ? s : String(s) )\n  customLog = (...props) => { if (globalConfigs.logs.messagesEnabled) this.customLog(moment().format('HH:mm:ss'),...props); }\n  customLogError = (...props) => { if (globalConfigs.logs.errorsEnabled) console.error(moment().format('HH:mm:ss'),...props); }\n  getContractByName = (contractName) => {\n    const contract = this.props.contracts.find(c => c.name === contractName);\n    if (!contract) {\n      return false;\n    }\n    return contract.contract;\n  }\n  normalizeSimpleIDNotification = (n) => {\n    return n.replace(/<\\/p><p>/g,\"\\n\")\n            .replace(/<p>/g,\"\")\n            .replace(/<br>/g,\"\")\n            .replace(/&nbsp;/g,\" \")\n            .replace(/<\\/p>/g,\"\");\n  }\n  capitalize = (str) => {\n    return str ? str.substr(0,1).toUpperCase()+str.substr(1) : '';\n  }\n  strToMoment = (date,format=null) => {\n    return moment(date,format);\n  }\n  replaceArrayProps = (arr1,arr2) => {\n    if (arr2 && Object.keys(arr2).length){\n      Object.keys(arr2).forEach(p => {\n        arr1[p] = arr2[p];\n      });\n    }\n\n    return arr1;\n  }\n  stripHtml = (html) => {\n     var tmp = document.createElement(\"DIV\");\n     tmp.innerHTML = html;\n     return tmp.textContent || tmp.innerText || \"\";\n  }\n  // VanillaJS function for smooth scroll\n  scrollTo = (to, duration) => {\n    const start = window.scrollY;\n    const change = to - start;\n    const increment = 20;\n    let currentTime = 0;\n\n    Math.easeInOutQuad = function (t, b, c, d) {\n      t /= d/2;\n      if (t < 1) return c/2*t*t + b;\n      t--;\n      return -c/2 * (t*(t-2) - 1) + b;\n    };\n\n    const animateScroll = () => {\n        currentTime += increment;\n        var val = Math.easeInOutQuad(currentTime, start, change, duration);\n        window.scrollTo(0,val);\n        if(currentTime < duration) {\n          window.setTimeout(animateScroll, increment);\n        }\n    };\n\n    animateScroll();\n  }\n  getQueryStringParameterByName = (name, url = window.location.href) => {\n    // eslint-disable-next-line\n    name = name.replace(/[\\[\\]]/g, '\\\\$&');\n    var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)'),\n        results = regex.exec(url);\n    if (!results) return null;\n    if (!results[2]) return '';\n    return decodeURIComponent(results[2].replace(/\\+/g, ' '));\n  }\n  getTxAction = (tx,tokenConfig) => {\n\n    if (!tokenConfig.idle){\n      return null;\n    }\n\n    const idleTokenAddress = tokenConfig.idle.address;\n    const depositProxyContractInfo = this.getGlobalConfig(['contract','methods','deposit','proxyContract']);\n    const migrationContractAddr = tokenConfig.migration && tokenConfig.migration.migrationContract ? tokenConfig.migration.migrationContract.address : null;\n    const migrationContractOldAddrs = tokenConfig.migration && tokenConfig.migration.migrationContract && tokenConfig.migration.migrationContract.oldAddresses ? tokenConfig.migration.migrationContract.oldAddresses : [];\n    const batchMigration = this.getGlobalConfig(['tools','batchMigration','props','availableTokens',tokenConfig.idle.token]);\n    const batchMigrationContractAddr = batchMigration && batchMigration.migrationContract ? batchMigration.migrationContract.address : null;\n\n    const isBatchMigrationTx = batchMigrationContractAddr && tx.from.toLowerCase() === batchMigrationContractAddr.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase();    \n    const isMigrationTx = isBatchMigrationTx || (migrationContractAddr && (tx.from.toLowerCase() === migrationContractAddr.toLowerCase() || migrationContractOldAddrs.map((v) => { return v.toLowerCase(); }).indexOf(tx.from.toLowerCase()) !== -1 ) && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase());\n    const isSendTransferTx = !isMigrationTx && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n    const isReceiveTransferTx = !isMigrationTx && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n    const isDepositTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && (tx.to.toLowerCase() === idleTokenAddress.toLowerCase() || (depositProxyContractInfo && tx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase()));\n    const isRedeemTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && tx.to.toLowerCase() === this.props.account.toLowerCase();\n    const isSwapTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && !isDepositTx && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n\n    let action = null;\n\n    if (isDepositTx){\n      action = 'Deposit';\n    } else if (isRedeemTx){\n      action = 'Redeem';\n    } else if (isMigrationTx){\n      action = 'Migrate';\n    } else if (isSendTransferTx){\n      action = 'Send';\n    } else if (isReceiveTransferTx){\n      action = 'Receive';\n    } else if (isSwapTx){\n      action = 'Swap';\n    } else if (isSwapTx){\n      action = 'SwapOut';\n    }\n\n    return action;\n  }\n  shortenHash = hash => {\n    let shortHash = hash;\n    const txStart = shortHash.substr(0, 7);\n    const txEnd = shortHash.substr(shortHash.length - 4);\n    shortHash = txStart + \"...\" + txEnd;\n    return shortHash;\n  }\n  getENSName = async (address) => {\n\n    const networkId = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n    const ensConfig = this.getGlobalConfig(['network','providers','ens']);\n\n    if (!ensConfig.enabled || !ensConfig.supportedNetworks.includes(networkId)){\n      return null;\n    }\n\n    if (!this.checkAddress(address) || !this.props.web3){\n      return null;\n    }\n\n    const cachedDataKey = `getENSName_${address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const TTL = 3600;\n    const provider = this.props.web3.currentProvider;\n    if (networkId === 1){\n      const ens = new ENS({ provider, ensAddress: getEnsAddress(networkId.toString()) });\n      const ensName = await ens.getName(address);\n      if (ensName && ensName.name){\n        const addressCheck = await ens.name(ensName.name).getAddress();\n        if (addressCheck && address.toLowerCase() === addressCheck.toLowerCase()){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,ensName.name,TTL);\n        }\n      }\n    }\n\n    return null;\n  }\n  getAccountPortfolioTranches = async (availableTranches=null,account=null) => {\n    const portfolio = {\n      transactions:[],\n      tranchesBalance:[],\n      avgAPY:this.BNify(0),\n      totalBalance:this.BNify(0),\n      totalEarnings:this.BNify(0),\n      totalAmountLent:this.BNify(0),\n      totalEarningsPerc:this.BNify(0),\n    };\n\n    availableTranches = availableTranches ? availableTranches : this.props.availableTranches;\n    account = account ? account : this.props.account;\n\n    if (!account || !availableTranches){\n      return portfolio;\n    }\n\n    const tranches = this.getGlobalConfig(['tranches']);\n\n    await this.asyncForEach(Object.keys(availableTranches),async (protocol) => {\n      const protocolConfig = availableTranches[protocol];\n      await this.asyncForEach(Object.keys(protocolConfig),async (token) => {\n        const tokenConfig = protocolConfig[token];\n        await this.asyncForEach(Object.keys(tranches),async (tranche) => {\n          const trancheConfig = tokenConfig[tranche];\n          const trancheTokenBalance = await this.loadTrancheFieldRaw('trancheDeposited',{},protocol,token,tranche,tokenConfig,trancheConfig,account);\n          if (trancheTokenBalance){\n            const [\n              tranchePool,\n              tranchePrice\n            ] = await Promise.all([\n              this.loadTrancheFieldRaw('tranchePool',{},protocol,token,tranche,tokenConfig,trancheConfig,account),\n              this.loadTrancheFieldRaw('tranchePrice',{},protocol,token,tranche,tokenConfig,trancheConfig,account)\n            ]);\n            const tokenBalance = trancheTokenBalance.times(tranchePrice);\n\n            if (!this.BNify(tranchePrice).isNaN() && !this.BNify(tokenBalance).isNaN()){\n              const [\n                trancheUserInfo,\n                trancheApy,\n              ] = await Promise.all([\n                this.getTrancheUserInfo(tokenConfig,trancheConfig,account),\n                this.loadTrancheFieldRaw('trancheApy',{},protocol,token,tranche,tokenConfig,trancheConfig,account),\n              ]);\n\n              const poolShare = tokenBalance.div(tranchePool);\n              const amountDeposited = trancheUserInfo.amountDeposited;\n              const trancheEarnings = tokenBalance.minus(amountDeposited);\n\n              // console.log('trancheBalance',protocol,token,tranche,'trancheTokenBalance',trancheTokenBalance.toFixed(),'tranchePrice',tranchePrice.toFixed(),'tokenBalance',tokenBalance.toFixed(),'trancheApy',trancheApy.toFixed(),'amountDeposited',amountDeposited.toFixed());\n              portfolio.transactions = [...portfolio.transactions,...trancheUserInfo.transactions];\n\n              portfolio.tranchesBalance.push({\n                token,\n                tranche,\n                protocol,\n                poolShare,\n                trancheApy,\n                tranchePrice,\n                tokenBalance,\n                trancheEarnings,\n                amountDeposited, \n                trancheTokenBalance\n              });\n\n              // console.log(protocol,token,tranche,amountDeposited.toFixed(),tokenBalance.toFixed(),trancheEarnings.toFixed());\n\n              // Increment total balance\n              portfolio.totalBalance = portfolio.totalBalance.plus(tokenBalance);\n            }\n          }\n        });\n      });\n    });\n\n    let avgAPY = this.BNify(0);\n    let totalEarnings = this.BNify(0);\n    let totalAmountLent = this.BNify(0);\n    let totalEarningsPerc = this.BNify(0);\n\n    // Calculate aggregated data\n    portfolio.tranchesBalance.forEach( trancheInfo => {\n      const trancheApy = this.BNify(trancheInfo.trancheApy);\n      const trancheWeight = trancheInfo.tokenBalance.div(portfolio.totalBalance);\n\n      // Add tranche weight\n      trancheInfo.trancheWeight = trancheWeight;\n\n      if (trancheInfo.trancheEarnings){\n        totalEarnings = totalEarnings.plus(trancheInfo.trancheEarnings);\n      }\n\n      if (trancheApy){\n        avgAPY = avgAPY.plus(trancheApy.times(trancheWeight));\n      }\n\n      if (trancheInfo.amountDeposited){\n        totalAmountLent = totalAmountLent.plus(trancheInfo.amountDeposited);\n      }\n    });\n\n    if (totalAmountLent.gt(0)){\n      totalEarningsPerc = totalEarnings.div(totalAmountLent).times(100);\n    }\n\n    portfolio.avgAPY = avgAPY;\n    portfolio.totalEarnings = totalEarnings;\n    portfolio.totalAmountLent = totalAmountLent;\n    portfolio.totalEarningsPerc = totalEarningsPerc;\n\n    return portfolio;\n  }\n  getAccountPortfolio = async (availableTokens=null,account=null) => {\n    const portfolio = {\n      tokensBalance:{},\n      avgAPY:this.BNify(0),\n      totalBalance:this.BNify(0),\n      totalEarnings:this.BNify(0),\n      totalAmountLent:this.BNify(0),\n      totalEarningsPerc:this.BNify(0),\n      totalBalanceConverted:this.BNify(0)\n    };\n\n    availableTokens = availableTokens ? availableTokens : this.props.availableTokens;\n    account = account ? account : this.props.account;\n\n    if (!account || !availableTokens){\n      return portfolio;\n    }\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const idleTokenBalance = await this.getTokenBalance(tokenConfig.idle.token,account);\n\n      if (idleTokenBalance){\n        const tokenPrice = await this.getIdleTokenPrice(tokenConfig);\n        const tokenBalance = idleTokenBalance.times(tokenPrice);\n        const tokenBalanceConverted = await this.convertTokenBalance(tokenBalance,token,tokenConfig,isRisk);\n\n        if (!tokenPrice.isNaN() && !tokenBalance.isNaN()){\n          portfolio.tokensBalance[token] = {\n            tokenPrice,\n            tokenBalance,\n            idleTokenBalance,\n            tokenBalanceConverted\n          };\n\n          // Increment total balance\n          portfolio.totalBalance = portfolio.totalBalance.plus(tokenBalance);\n          portfolio.totalBalanceConverted = portfolio.totalBalanceConverted.plus(tokenBalanceConverted);\n        }\n      }\n    });\n\n    const orderedTokensBalance = {};\n    Object.keys(availableTokens).forEach( token => {\n      if (portfolio.tokensBalance[token]){\n        orderedTokensBalance[token] = portfolio.tokensBalance[token];\n      }\n    });\n\n    portfolio.tokensBalance = orderedTokensBalance;\n\n    const depositedTokens = Object.keys(portfolio.tokensBalance).filter(token => ( this.BNify(portfolio.tokensBalance[token].idleTokenBalance).gt(0) ));\n\n    let avgAPY = this.BNify(0);\n    let totalEarnings = this.BNify(0);\n    let totalAmountLent = this.BNify(0);\n    let totalEarningsPerc = this.BNify(0);\n    // const amountLents = await this.getAmountLent(depositedTokens,this.props.account);\n\n    await this.asyncForEach(depositedTokens,async (token) => {\n      const tokenConfig = availableTokens[token];\n      const amountDeposited = await this.getAmountDeposited(tokenConfig,account);\n\n      // console.log(token,'amountDeposited',amountDeposited.toString(),'amountLent',amountLents[token].toString());\n\n      const tokenBalanceConverted = portfolio.tokensBalance[token].tokenBalanceConverted;\n      const [\n        tokenAprs\n        // tokenEarnings\n      ] = await Promise.all([\n        this.getTokenAprs(tokenConfig)\n        // this.loadAssetField('earnings',token,tokenConfig,this.props.account,false),\n      ]);\n\n      const tokenAPY = this.BNify(tokenAprs.avgApy);\n      const tokenWeight = tokenBalanceConverted.div(portfolio.totalBalanceConverted);\n      const amountLentToken = await this.convertTokenBalance(amountDeposited,token,tokenConfig,isRisk);\n      const tokenEarnings = tokenBalanceConverted.minus(amountLentToken);\n\n      if (tokenEarnings){\n        totalEarnings = totalEarnings.plus(tokenEarnings);\n      }\n\n      if (tokenAPY){\n        avgAPY = avgAPY.plus(tokenAPY.times(tokenWeight));\n      }\n\n      if (amountLentToken){\n        totalAmountLent = totalAmountLent.plus(amountLentToken);\n      }\n\n      // console.log(token,amountLentToken.toFixed(),tokenEarnings.toFixed(),tokenBalanceConverted.toFixed());\n    });\n\n    if (totalAmountLent.gt(0)){\n      totalEarningsPerc = totalEarnings.div(totalAmountLent).times(100);\n    }\n\n    portfolio.avgAPY = avgAPY;\n    portfolio.totalEarnings = totalEarnings;\n    portfolio.totalAmountLent = totalAmountLent;\n    portfolio.totalEarningsPerc = totalEarningsPerc;\n\n    // debugger;\n\n    return portfolio;\n  }\n  getCurveAvgSlippage = async (enabledTokens=[],account=null,fixDecimals=true) => {\n    account = account ? account : this.props.account;\n\n    if (!account){\n      return [];\n    }\n\n    const availableTokens = this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    let processedTxs = {};\n    const processedHashes = {};\n    let curveTokensBalance = this.BNify(0);\n    const curveTxs = await this.getCurveTxs(account,0,'latest',enabledTokens);\n\n    if (curveTxs && curveTxs.length){\n\n      curveTxs.forEach((tx,index) => {\n\n        // Skip transactions with no hash\n        if (!tx.hash || !tx.curveTokens || !tx.curveTokenPrice){\n          return false;\n        }\n\n        const tokenAmount = this.BNify(tx.tokenAmount);\n        let curveTokens = this.BNify(tx.curveTokens);\n        const curveTokenPrice = this.BNify(tx.curveTokenPrice);\n\n        switch (tx.action){\n          case 'CurveIn':\n          case 'CurveZapIn':\n          case 'CurveDepositIn':\n          case 'CurveTransferIn':\n            if (tx.action === 'CurveTransferIn'){\n              if (index>0 && curveTokensBalance.gt(0)){\n                return;\n              }\n            }\n\n            if (!processedTxs[tx.hash]){\n              processedTxs[tx.hash] = {\n                price:null,\n                received:null,\n                slippage:null,\n                deposited:this.BNify(0),\n              };\n            }\n\n            processedTxs[tx.hash].deposited = processedTxs[tx.hash].deposited.plus(tokenAmount);\n            if (processedTxs[tx.hash].received === null){\n              processedTxs[tx.hash].price = curveTokenPrice;\n              processedTxs[tx.hash].received = curveTokens.times(curveTokenPrice);\n            }\n\n            // this.customLog('getCurveAvgSlippage',tx.action,tx.hash,tx.blockNumber,curveTokens.toFixed(6),curveTokenPrice.toFixed(6),processedTxs[tx.hash].deposited.toFixed(6),processedTxs[tx.hash].received.toFixed(6));\n          break;\n          case 'CurveOut':\n          case 'CurveZapOut':\n          case 'CurveDepositOut':\n            curveTokens = curveTokens.times(this.BNify(-1));\n          break;\n          default:\n          break;\n        }\n\n        // Update curveTokens balance\n        if (!processedHashes[tx.hash]){\n          curveTokensBalance = curveTokensBalance.plus(curveTokens);\n          if (curveTokensBalance.lte(0)){\n            curveTokensBalance = this.BNify(0);\n\n            // Reset processed transactions\n            // processedTxs = {};\n          }\n          processedHashes[tx.hash] = true;\n        }\n      });\n    }\n\n    // this.customLog('processedTxs',processedTxs);\n\n    let avgSlippage = this.BNify(0);\n    let totalDeposited = this.BNify(0);\n    Object.values(processedTxs).forEach( tx => {\n      const slippage = tx.received.div(tx.deposited).minus(1);\n      avgSlippage = avgSlippage.plus(slippage.times(tx.deposited));\n      totalDeposited = totalDeposited.plus(tx.deposited);\n    });\n\n    avgSlippage = avgSlippage.div(totalDeposited).times(-1);\n\n    // debugger;\n    // this.customLog('avgSlippage',avgSlippage.toString());\n\n    return avgSlippage;\n  }\n  getCurveAvgBuyPrice = async (enabledTokens=[],account=null) => {\n    account = account ? account : this.props.account;\n\n    if (!account){\n      return [];\n    }\n\n    const availableTokens = this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    const processedTxs = {};\n    let avgBuyPrice = this.BNify(0);\n    let curveTokensBalance = this.BNify(0);\n    const curveTxs = await this.getCurveTxs(account,0,'latest',enabledTokens);\n\n    // this.customLog('curveTxs',curveTxs);\n\n    if (curveTxs && curveTxs.length){\n\n      curveTxs.forEach((tx,index) => {\n\n        if (!processedTxs[tx.hash]){\n          processedTxs[tx.hash] = [];\n        }\n\n        if (processedTxs[tx.hash].includes(tx.action)){\n          return;\n        }\n\n        // Skip transactions with no hash\n        if (!tx.hash || !tx.curveTokens || !tx.curveTokenPrice){\n          return false;\n        }\n\n        const prevAvgBuyPrice = avgBuyPrice;\n        let curveTokens = this.BNify(tx.curveTokens);\n        const curveTokenPrice = this.BNify(tx.curveTokenPrice);\n\n        // Deposited\n        switch (tx.action){\n          case 'CurveIn':\n          case 'CurveZapIn':\n          case 'CurveDepositIn':\n          case 'CurveTransferIn':\n            if (tx.action === 'CurveTransferIn'){\n              if (index>0 && curveTokensBalance.gt(0)){\n                return;\n              }\n            }\n            avgBuyPrice = curveTokens.times(curveTokenPrice).plus(prevAvgBuyPrice.times(curveTokensBalance)).div(curveTokensBalance.plus(curveTokens));\n          break;\n          case 'CurveOut':\n          case 'CurveZapOut':\n          case 'CurveDepositOut':\n          // case 'CurveTransferOut':\n            curveTokens = curveTokens.times(this.BNify(-1));\n          break;\n          default:\n          break;\n        }\n        \n        // Update curveTokens balance\n        curveTokensBalance = curveTokensBalance.plus(curveTokens);\n        if (curveTokensBalance.lte(0)){\n          avgBuyPrice = this.BNify(0);\n          curveTokensBalance = this.BNify(0);\n        }\n\n        processedTxs[tx.hash].push(tx.action);\n\n        // this.customLog('getCurveAvgBuyPrice',tx.action,tx.hash,tx.blockNumber,curveTokens.toString(),curveTokenPrice.toString(),curveTokensBalance.toString(),avgBuyPrice.toString());\n      });\n    }\n\n    // this.customLog('avgCurveBuyPrice',avgBuyPrice.toString());\n\n    return avgBuyPrice;\n  }\n  getAvgBuyPrice = async (enabledTokens=[],account) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens){\n      return [];\n    }\n\n    const output = {};\n    const etherscanTxs = await this.getEtherscanTxs(account,0,'latest',enabledTokens);\n\n    enabledTokens.forEach( selectedToken => {\n\n      output[selectedToken] = [];\n      let avgBuyPrice = this.BNify(0);\n\n      let idleTokensBalance= this.BNify(0);\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n\n      if (filteredTxs && filteredTxs.length){\n\n        filteredTxs.forEach((tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.idleTokens || !tx.tokenPrice){\n            return false;\n          }\n\n          const prevAvgBuyPrice = avgBuyPrice;\n          let idleTokens = this.BNify(tx.idleTokens);\n          const tokenPrice = this.BNify(tx.tokenPrice);\n\n          // Deposited\n          switch (tx.action){\n            case 'Deposit':\n            case 'Receive':\n            case 'Swap':\n            case 'Migrate':\n            case 'CurveOut':\n              avgBuyPrice = idleTokens.times(tokenPrice).plus(prevAvgBuyPrice.times(idleTokensBalance)).div(idleTokensBalance.plus(idleTokens));\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              idleTokens = idleTokens.times(this.BNify(-1));\n            break;\n            default:\n            break;\n          }\n\n          // Update idleTokens balance\n          idleTokensBalance = idleTokensBalance.plus(idleTokens);\n          if (idleTokensBalance.lte(0)){\n            avgBuyPrice = this.BNify(0);\n            idleTokensBalance = this.BNify(0);\n          }\n\n        });\n      }\n\n      // Add token Data\n      output[selectedToken] = avgBuyPrice;\n    });\n\n    return output;\n  }\n  getFirstDepositTx = async (enabledTokens=[],account) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens){\n      return [];\n    }\n\n    const etherscanTxs = await this.getEtherscanTxs(account,0,'latest',enabledTokens);\n\n    const deposits = {};\n\n    enabledTokens.forEach((selectedToken) => {\n      let amountLent = this.BNify(0);\n      let firstDepositTx = null;\n      deposits[selectedToken] = firstDepositTx;\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        filteredTxs.forEach((tx,index) => {\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.tokenAmount){\n            return false;\n          }\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n              amountLent = amountLent.plus(tx.tokenAmount);\n              if (!firstDepositTx){\n                firstDepositTx = tx;\n              }\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tx.tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.BNify(0);\n            firstDepositTx = null;\n          }\n        });\n      }\n\n      // Add token Data\n      deposits[selectedToken] = firstDepositTx;\n    });\n\n    return deposits;\n  }\n  getDashboardSectionUrl = (section) => {\n    return `${window.location.origin}/#${this.getGlobalConfig(['dashboard','baseRoute'])}/${section}`;\n  }\n  asyncTimeout = (ms) => {\n    return new Promise(resolve => setTimeout(resolve, ms));\n  }\n  getDepositTimestamp = async (enabledTokens=[],account) => {\n    const firstDepositTxs = await this.getFirstDepositTx(enabledTokens,account);\n    if (firstDepositTxs){\n      return Object.keys(firstDepositTxs).reduce( (acc,token) => {\n        if (firstDepositTxs[token]){\n          acc[token] = firstDepositTxs[token].timeStamp;\n        }\n        return acc;\n      },{});\n    }\n    return null;\n  }\n  getTrancheRewardTokensInfo = async (tokenConfig,trancheConfig) => {\n    const stakingRewards = await this.loadTrancheFieldRaw('stakingRewards',{},tokenConfig.protocol,tokenConfig.token,trancheConfig.tranche,tokenConfig,trancheConfig);\n    // console.log('getTrancheTokensDistribution',stakingRewards);\n    const tokensDistribution = {};\n    await this.asyncForEach(Object.keys(stakingRewards),async (token) => {\n      const eventFilters = {\n        from:tokenConfig.CDO.address,\n        to:trancheConfig.CDORewards.address\n      }\n      const transfers = await this.getContractEvents(token,'Transfer',{fromBlock: tokenConfig.blockNumber,toBlock:'latest',filter:eventFilters});\n\n      if (transfers && transfers.length>0){\n        const firstHarvest = transfers.length ? transfers[0] : null;\n        const latestHarvest = transfers[transfers.length-1];\n        const firstBlock = firstHarvest ? firstHarvest.blockNumber : tokenConfig.blockNumber;\n\n        const govTokenConfig = this.getGlobalConfig(['govTokens',token]);\n        const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n        const [\n          prevBlockInfo,\n          lastBlockInfo,\n          conversionRate,\n          lastBlockPoolSize\n        ] = await Promise.all([\n          this.getBlockInfo(firstBlock),\n          this.getBlockInfo(latestHarvest.blockNumber),\n          this.getUniswapConversionRate(DAITokenConfig,govTokenConfig),\n          this.genericContractCallCached(tokenConfig.CDO.name,'getContractValue',[],{},latestHarvest.blockNumber)\n        ]);\n        if (prevBlockInfo && lastBlockInfo){\n          const poolSize = this.fixTokenDecimals(lastBlockPoolSize,tokenConfig.CDO.decimals);\n          const elapsedBlocks = latestHarvest.blockNumber-firstBlock;\n          const elapsedSeconds = lastBlockInfo.timestamp-prevBlockInfo.timestamp;\n\n          const lastAmount = this.fixTokenDecimals(latestHarvest.returnValues.value,govTokenConfig.decimals);\n          const totalAmount = transfers.reduce( (total,t) => {\n            total = total.plus(this.fixTokenDecimals(t.returnValues.value,govTokenConfig.decimals));\n            return total;\n          },this.BNify(0));\n\n          const tokensPerBlock = totalAmount.div(elapsedBlocks);\n          const tokensPerSecond = totalAmount.div(elapsedSeconds);\n          const tokensPerDay = tokensPerSecond.times(86400);\n          const tokensPerYear = tokensPerSecond.times(this.getGlobalConfig(['network','secondsPerYear']));\n          const convertedTokensPerYear = tokensPerYear.times(conversionRate);\n          const tokenApr = convertedTokensPerYear.div(poolSize);\n          const tokenApy = this.apr2apy(tokenApr);\n\n          tokensDistribution[token] = {\n            lastAmount,\n            totalAmount,\n            apr:tokenApr,\n            apy:tokenApy,\n            tokensPerDay,\n            tokensPerYear,\n            tokensPerBlock,\n            tokensPerSecond,\n            convertedTokensPerYear\n          };\n        }\n      }\n    });\n\n    // console.log('tokensDistribution',tokensDistribution);\n\n    return tokensDistribution;\n  }\n  getTrancheUserInfo = async (tokenConfig,trancheConfig,account) => {\n    account = account || this.props.account;\n    const cachedDataKey = `amountDepositedTranche_${tokenConfig.token}_${trancheConfig.token}_${account}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const defaultEventsConfig = {to:'to',from:'from',value:'value'};\n    const underlyingEventsConfig = this.getGlobalConfig(['events',tokenConfig.token,'fields']) || defaultEventsConfig;\n\n    const underlyingEventsFilters = {};\n    underlyingEventsFilters[underlyingEventsConfig.to] = [this.props.account,tokenConfig.CDO.address];\n    underlyingEventsFilters[underlyingEventsConfig.from] = [this.props.account,tokenConfig.CDO.address];\n\n    const [\n      underlying_transfers,\n      trancheToken_transfers\n    ] = await Promise.all([\n      this.getContractEvents(tokenConfig.token,'Transfer',{fromBlock: trancheConfig.blockNumber, toBlock:'latest',filter:underlyingEventsFilters}),\n      this.getContractEvents(trancheConfig.name,'Transfer',{fromBlock: trancheConfig.blockNumber, toBlock:'latest',filter:{from:['0x0000000000000000000000000000000000000000',this.props.account],to:['0x0000000000000000000000000000000000000000',this.props.account]}})\n    ]);\n\n    // console.log('getAmountDepositedTranche',trancheConfig.name,'underlying_transfers',underlying_transfers,'trancheToken_transfers',trancheToken_transfers);\n\n    const transactions = [];\n    let firstDepositTx = null;\n    let avgBuyPrice = this.BNify(0);\n    let amountDeposited = this.BNify(0);\n    let totalAmountDeposited = this.BNify(0);\n\n    await this.asyncForEach(trancheToken_transfers, async (trancheTokenTransferEvent) => {\n      const tokenTransferEvent = underlying_transfers.find( t => t.transactionHash.toLowerCase() === trancheTokenTransferEvent.transactionHash.toLowerCase() );\n\n      // Skip if no tranche token transfer event found\n      if (!tokenTransferEvent){\n        return;\n      }\n\n      const tokenAmount = this.fixTokenDecimals(tokenTransferEvent.returnValues[underlyingEventsConfig.value],tokenConfig.decimals);\n      const trancheTokenAmount = this.fixTokenDecimals(trancheTokenTransferEvent.returnValues.value,trancheConfig.decimals);\n\n      // console.log('tranchePrice',trancheConfig.token,tokenAmount.toFixed(),trancheTokenAmount.toFixed(),tranchePrice.toFixed());\n      const tranchePrice = tokenAmount.div(trancheTokenAmount);\n      const blockInfo = await this.getBlockInfo(tokenTransferEvent.blockNumber);\n      const hashKey = `${trancheConfig.token}_${tokenTransferEvent.transactionHash}`;\n      const protocolConfig = this.getGlobalConfig(['stats','protocols',tokenConfig.protocol]);\n      const protocolIcon = `images/protocols/${protocolConfig.icon || `${tokenConfig.protocol}.svg`}`;\n\n      const tx = {\n        hashKey,\n        action:null,\n        tokenAmount,\n        tranchePrice,\n        protocolIcon,\n        value:tokenAmount,\n        status:'Completed',\n        token:tokenConfig.token,\n        tranche:trancheConfig.tranche,\n        protocol:protocolConfig.label,\n        tokenSymbol:tokenConfig.token,\n        trancheTokens:trancheTokenAmount,\n        hash:tokenTransferEvent.transactionHash,\n        blockNumber:tokenTransferEvent.blockNumber,\n        timeStamp:blockInfo ? blockInfo.timestamp : null,\n      };\n\n      // Deposit\n      if (trancheTokenTransferEvent.returnValues.from.toLowerCase() === '0x0000000000000000000000000000000000000000'){\n        // Set first deposit tx\n        if (!firstDepositTx){\n          firstDepositTx = tx;\n        }\n        avgBuyPrice = avgBuyPrice.plus(tranchePrice.times(tokenAmount));\n        amountDeposited = amountDeposited.plus(tokenAmount);\n        totalAmountDeposited = totalAmountDeposited.plus(tokenAmount);\n\n        tx.action = 'Deposit';\n        // console.log('Deposit',trancheConfig.token,tokenAmount.toFixed(),amountDeposited.toFixed(),tranchePrice.toFixed(),avgBuyPrice.toFixed());\n      // Withdraw\n      } else if (trancheTokenTransferEvent.returnValues.to.toLowerCase() === '0x0000000000000000000000000000000000000000'){\n        tx.action = 'Withdraw';\n        amountDeposited = amountDeposited.minus(tokenAmount);\n        if (amountDeposited.lt(0)){\n          firstDepositTx = null;\n          avgBuyPrice = this.BNify(0);\n          amountDeposited = this.BNify(0);\n          totalAmountDeposited = this.BNify(0);\n        }\n        // console.log('Redeem',trancheConfig.token,tokenAmount.toFixed(),amountDeposited.toFixed(),avgBuyPrice.toFixed());\n      }\n\n      transactions.push(tx);\n    });\n\n    avgBuyPrice = avgBuyPrice.div(totalAmountDeposited);\n\n    // console.log(trancheConfig.token,'amountDeposited',amountDeposited.toFixed(),'avgBuyPrice',avgBuyPrice.toFixed(),'transactions',transactions);\n\n    return {\n      avgBuyPrice,\n      transactions,\n      firstDepositTx,\n      amountDeposited\n    }\n  }\n  getTrancheUserTransactions = async (tokenConfig,trancheConfig,account) => {\n    const trancheUserInfo = await this.getTrancheUserInfo(tokenConfig,trancheConfig,account);\n    if (trancheUserInfo){\n      return trancheUserInfo.transactions;\n    }\n    return null;\n  }\n  getTrancheFirstDepositTx = async (tokenConfig,trancheConfig,account) => {\n      const trancheUserInfo = await this.getTrancheUserInfo(tokenConfig,trancheConfig,account);\n      if (trancheUserInfo){\n        return trancheUserInfo.firstDepositTx;\n      }\n      return null;\n  }\n  getAmountDepositedTranche = async (tokenConfig,trancheConfig,account) => {\n    const trancheUserInfo = await this.getTrancheUserInfo(tokenConfig,trancheConfig,account);\n    if (trancheUserInfo){\n      return trancheUserInfo.amountDeposited;\n    }\n    return null;\n  }\n  getAmountDeposited = async (tokenConfig,account) => {\n    const cachedDataKey = `amountDeposited_${tokenConfig.idle.token}_${account}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let [tokenBalance,userAvgPrice] = await Promise.all([\n      this.getTokenBalance(tokenConfig.idle.token,account),\n      this.genericContractCallCached(tokenConfig.idle.token, 'userAvgPrices', [account])\n    ]);\n\n    if (tokenBalance && userAvgPrice){\n      userAvgPrice = this.fixTokenDecimals(userAvgPrice,tokenConfig.decimals);\n      const amountDeposited = tokenBalance.times(userAvgPrice);\n      return this.setCachedDataWithLocalStorage(cachedDataKey,amountDeposited);\n    }\n\n    return null;\n  }\n  getAmountLent = async (enabledTokens=[],account) => {\n\n    account = account || this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens){\n      return [];\n    }\n\n    const etherscanTxs = await this.getEtherscanTxs(account,0,'latest',enabledTokens,false);\n\n    const amountLents = {};\n\n    enabledTokens.forEach((selectedToken) => {\n      let amountLent = this.BNify(0);\n      amountLents[selectedToken] = amountLent;\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        filteredTxs.forEach((tx,index) => {\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.tokenAmount){\n            return false;\n          }\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n            case 'CurveOut':\n              amountLent = amountLent.plus(tx.tokenAmount);\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tx.tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.BNify(0);\n          }\n        });\n      }\n\n      // Add token Data\n      amountLents[selectedToken] = amountLent;\n    });\n\n    // debugger;\n\n    return amountLents;\n  }\n  getEtherscanBaseTxs = async (account=false,firstBlockNumber=0,endBlockNumber='latest',enabledTokens=[],debug=false) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length){\n      return [];\n    }\n\n    account = account.toLowerCase();\n\n    const selectedStrategy = this.props.selectedStrategy;\n\n    // Check if firstBlockNumber is less that firstIdleBlockNumber\n    const firstIdleBlockNumber = this.getGlobalConfig(['network','firstBlockNumber']);\n    firstBlockNumber = Math.max(firstIdleBlockNumber,firstBlockNumber);\n\n    const requiredNetwork = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n    const etherscanInfo = this.getGlobalConfig(['network','providers','etherscan']);\n\n    let results = [];\n    let etherscanBaseTxs = null;\n    let etherscanBaseEndpoint = null;\n\n    // Check if etherscan is enabled for the required network\n    if (etherscanInfo.enabled && etherscanInfo.endpoints[requiredNetwork]){\n      const etherscanApiUrl = etherscanInfo.endpoints[requiredNetwork];\n\n      // Get base endpoint cached transactions\n      etherscanBaseEndpoint = `${etherscanApiUrl}?strategy=${selectedStrategy}&apikey=${env.REACT_APP_ETHERSCAN_KEY}&module=account&action=tokentx&address=${account}&startblock=${firstIdleBlockNumber}&endblock=${endBlockNumber}&sort=asc`;\n      etherscanBaseTxs = this.getCachedRequest(etherscanBaseEndpoint);\n\n      if (debug){\n        console.log('DEBUG - CACHED - etherscanBaseTxs',etherscanBaseTxs);\n      }\n\n      // Check if the latest blockNumber is actually the latest one\n      if (etherscanBaseTxs && etherscanBaseTxs.data.result && Object.values(etherscanBaseTxs.data.result).length){\n\n        const lastCachedTx = Object.values(etherscanBaseTxs.data.result).pop();\n        const lastCachedBlockNumber = lastCachedTx && lastCachedTx.blockNumber ? parseInt(lastCachedTx.blockNumber)+1 : firstBlockNumber;\n\n        const etherscanEndpointLastBlock = `${etherscanApiUrl}?strategy=${selectedStrategy}&apikey=${env.REACT_APP_ETHERSCAN_KEY}&module=account&action=tokentx&address=${account}&startblock=${lastCachedBlockNumber}&endblock=${endBlockNumber}&sort=asc`;\n        let latestTxs = await this.makeCachedRequest(etherscanEndpointLastBlock,15);\n\n        if (latestTxs && latestTxs.data.result && latestTxs.data.result.length){\n          \n          latestTxs = await this.filterEtherscanTxs(latestTxs.data.result,enabledTokens,true,false);\n\n          if (latestTxs && Object.values(latestTxs).length){\n\n            const latestBlockNumbers = Object.values(latestTxs).map( lastTx => (parseInt(lastTx.blockNumber)) );\n            const lastRealBlockNumber = Math.max(...latestBlockNumbers);\n\n            // If real tx blockNumber differs from last blockNumber\n            if (lastRealBlockNumber>=lastCachedBlockNumber){\n              // Merge latest Txs with etherscanBaseTxs\n              Object.values(latestTxs).forEach((tx) => {\n                const txFound = Object.keys(etherscanBaseTxs.data.result).includes(tx.hashKey);\n                if (!txFound){\n                  etherscanBaseTxs.data.result[tx.hashKey] = tx;\n                }\n              });\n\n              // Save etherscan txs\n              this.saveEtherscanTxs(etherscanBaseEndpoint,etherscanBaseTxs.data.result);\n            }\n          }\n        }\n      } else {\n        etherscanBaseTxs = null;\n      }\n\n      let txs = etherscanBaseTxs;\n\n      if (debug){\n        console.log('DEBUG - txs',txs);\n      }\n\n      if (!txs){\n        // Make request\n        txs = await this.makeRequest(etherscanBaseEndpoint);\n\n        // console.log('makeRequest 1',account,etherscanBaseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n\n        if (!txs || !txs.data || parseInt(txs.data.status)===0){\n          let requestCount = 0;\n          let requestStatus = false;\n          do {\n            await this.asyncTimeout(500);\n            txs = await this.makeRequest(etherscanBaseEndpoint);\n            requestCount++;\n            requestStatus = txs && txs.data ? parseInt(txs.data.status) : false;\n            // console.log('makeRequest '+(requestCount+1),account,etherscanBaseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n          } while (requestCount<5 && !requestStatus);\n        }\n\n        // Cache request\n        if (txs && txs.data && parseInt(txs.data.status)>0){\n          const timestamp = parseInt(Date.now()/1000);\n          const cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n          cachedRequests[etherscanBaseEndpoint] = {\n            data:txs,\n            timestamp\n          };\n          this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n        }\n      }\n\n      if (txs && txs.data && txs.data.result){\n        results = txs.data.result;\n      } else {\n        return [];\n      }\n    }\n\n    return {\n      results,\n      etherscanBaseTxs,\n      etherscanBaseEndpoint\n    };\n  }\n  getCurveTxs = async (account=false,firstBlockNumber=0,endBlockNumber='latest',enabledTokens=[]) => {\n    const results = await this.getEtherscanTxs(account,firstBlockNumber,endBlockNumber,enabledTokens);\n    // results = results ? Object.values(results) : [];\n    return this.filterCurveTxs(results,enabledTokens);\n  }\n  saveEtherscanTxs = (endpoint,txs) => {\n    const txsToStore = {};\n    Object.keys(txs).forEach(txHash => {\n      const tx = txs[txHash];\n      if (tx.blockNumber && (!tx.status || tx.status.toLowerCase() !== 'pending')){\n        txsToStore[txHash] = tx;\n      }\n    });\n\n    // Save new cached data\n    const cachedRequest = {\n      data:{\n        result:txsToStore\n      }\n    };\n    this.saveCachedRequest(endpoint,false,cachedRequest);\n  }\n  getEtherscanTxs = async (account=false,firstBlockNumber=0,endBlockNumber='latest',enabledTokens=[],debug=false) => {\n    const {\n      results,\n      etherscanBaseTxs,\n      etherscanBaseEndpoint\n    } = await this.getEtherscanBaseTxs(account,firstBlockNumber,endBlockNumber,enabledTokens,debug);\n\n    // Initialize prevTxs\n    let etherscanTxs = {};\n    if (etherscanBaseTxs){\n      // Filter txs for token\n      etherscanTxs = await this.processStoredTxs(results,enabledTokens);\n    } else {\n      const allAvailableTokens = Object.keys(this.props.availableTokens);\n      // Save base endpoint with all available tokens\n      etherscanTxs = await this.filterEtherscanTxs(results,allAvailableTokens);\n\n      // Store filtered txs\n      if (etherscanTxs && Object.keys(etherscanTxs).length){\n        this.saveEtherscanTxs(etherscanBaseEndpoint,etherscanTxs);\n      }\n    }\n\n    if (debug){\n      console.log('DEBUG - getEtherscanTxs -',etherscanTxs);\n    }\n\n    return Object\n            .values(etherscanTxs)\n            .filter(tx => (tx.token && enabledTokens.includes(tx.token.toUpperCase())))\n            .sort((a,b) => (a.timeStamp < b.timeStamp ? -1 : 1));\n  }\n  filterCurveTxs = async (results,enabledTokens=[]) => {\n\n    if (!results || !results.length || typeof results.forEach !== 'function'){\n      return [];\n    }\n\n    const availableTokens = this.props.availableTokens ? this.props.availableTokens : this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    const curveTxs = results.filter( tx => (enabledTokens.includes(tx.token) && ['CurveIn','CurveOut','CurveZapIn','CurveZapOut','CurveTransferIn','CurveTransferOut','CurveDepositIn','CurveDepositOut'].includes(tx.action)) );\n\n    if (curveTxs.length){\n      curveTxs.sort((a,b) => (a.timeStamp < b.timeStamp ? -1 : 1));\n    }\n\n    return curveTxs;\n  }\n  filterEtherscanTxs = async (results,enabledTokens=[],processTxs=true,processStoredTxs=true) => {\n    if (!this.props.account || !results || !results.length || typeof results.forEach !== 'function'){\n      return [];\n    }\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let etherscanTxs = {};\n    let curveTransfersTxs = [];\n    let curveTransfersTxsToDelete = [];\n\n    // const idleTokensAddresses = Object.values(this.props.availableTokens).map( tokenConfig => (tokenConfig.idle.address) );\n    const curveZapContract = this.getGlobalConfig(['curve','zapContract']);\n    const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n    const curveSwapContract = this.getGlobalConfig(['curve','migrationContract']);\n    const curveDepositContract = this.getGlobalConfig(['curve','depositContract']);\n\n    // this.customLog('filterEtherscanTxs',enabledTokens,results);\n\n    enabledTokens.forEach(token => {\n      const tokenConfig = this.props.availableTokens[token];\n      const depositProxyContractInfo = this.getGlobalConfig(['contract','methods','deposit','proxyContract']);\n      const migrationContractAddr = tokenConfig.migration && tokenConfig.migration.migrationContract ? tokenConfig.migration.migrationContract.address : null;\n      const migrationContractOldAddrs = tokenConfig.migration && tokenConfig.migration.migrationContract && tokenConfig.migration.migrationContract.oldAddresses ? tokenConfig.migration.migrationContract.oldAddresses : [];\n      const tokenMigrationToolParams = this.getGlobalConfig(['tools','tokenMigration','props','migrationContract']);\n\n      const batchMigration = this.getGlobalConfig(['tools','batchMigration','props','availableTokens',tokenConfig.idle.token]);\n      const batchMigrationContractAddr = batchMigration && batchMigration.migrationContract ? batchMigration.migrationContract.address : null;\n\n      // const curveEnabled = this.getGlobalConfig(['curve','enabled']);\n      const curveTokenConfig = this.getGlobalConfig(['curve','availableTokens',tokenConfig.idle.token]);\n\n      results.forEach( tx => {\n        let tokenDecimals = tokenConfig.decimals;\n        const idleToken = tokenConfig.idle.token;\n        const internalTxs = results.filter(r => r.hash === tx.hash);\n        const isRightToken = internalTxs.length>1 && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase()).length>0;\n        const isSendTransferTx = internalTxs.length === 1 && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isReceiveTransferTx = internalTxs.length === 1 && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isBatchMigrationTx = batchMigrationContractAddr && tx.from.toLowerCase() === batchMigrationContractAddr.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase();\n\n        const isDepositInternalTx = isRightToken && internalTxs.find( iTx => iTx.from.toLowerCase() === this.props.account.toLowerCase() && (iTx.to.toLowerCase() === tokenConfig.idle.address.toLowerCase() || (depositProxyContractInfo && iTx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase() && internalTxs.filter(iTx2 => iTx2.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length>0 )) );\n        const isRedeemInternalTx = isRightToken && internalTxs.find( iTx => iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && internalTxs.filter(iTx2 => iTx2.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length && iTx.to.toLowerCase() === this.props.account.toLowerCase() );\n\n        const isMigrationTx = isBatchMigrationTx || (migrationContractAddr && (tx.from.toLowerCase() === migrationContractAddr.toLowerCase() || migrationContractOldAddrs.map((v) => { return v.toLowerCase(); }).includes(tx.from.toLowerCase()) ) && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase());\n        const isConversionTx = tokenMigrationToolParams && (tx.from.toLowerCase() === tokenMigrationToolParams.address.toLowerCase() || tokenMigrationToolParams.oldAddresses.map((v) => { return v.toLowerCase(); }).includes(tx.from.toLowerCase())) && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isDepositTx = isRightToken && !isMigrationTx && tx.from.toLowerCase() === this.props.account.toLowerCase() && (tx.to.toLowerCase() === tokenConfig.idle.address.toLowerCase() || (depositProxyContractInfo && tx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase() && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length>0 ));\n        const isRedeemTx = isRightToken && !isMigrationTx && !isDepositInternalTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length && tx.to.toLowerCase() === this.props.account.toLowerCase();\n        const isWithdrawTx = internalTxs.length>1 && internalTxs.filter(iTx => tokenConfig.protocols.map(p => p.address.toLowerCase()).includes(iTx.contractAddress.toLowerCase()) ).length>0 && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n\n        // const curveDepositTx = internalTxs.find( iTx => (iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && iTx.from.toLowerCase() === this.props.account.toLowerCase()) );\n        const idleTokenAddress = curveTokenConfig && curveTokenConfig.address ? curveTokenConfig.address : tokenConfig.idle.address;\n\n        // Check Curve\n        const curveTx = internalTxs.find( tx => (tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && (tx.to.toLowerCase() === this.props.account.toLowerCase() || tx.from.toLowerCase() === this.props.account.toLowerCase()) ) );\n        const isCurveTx = curveTx !== undefined;\n\n        const isCurveDepositTx = isCurveTx && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase() && tx.to.toLowerCase() === curveSwapContract.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveRedeemTx = isCurveTx && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveSwapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveDepositIn = isCurveTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.to.toLowerCase() === curveDepositContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveDepositOut = isCurveTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveDepositContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveZapIn = isCurveTx && tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveZapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveZapOut = isCurveTx && tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.to.toLowerCase() === curveZapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveTransferOut = tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && !isCurveZapOut && !isCurveRedeemTx && /*internalTxs[internalTxs.length-1] === tx &&*/ tx.from.toLowerCase() === this.props.account.toLowerCase();\n        const isCurveTransferIn = tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && !isCurveZapIn && !isCurveDepositTx && /*internalTxs[internalTxs.length-1] === tx &&*/ tx.to.toLowerCase() === this.props.account.toLowerCase();\n\n        const isSwapOutTx = !isCurveTx && !isSendTransferTx && !isWithdrawTx && !isRedeemInternalTx && !etherscanTxs[tx.hash] && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isSwapTx = !isCurveTx && !isReceiveTransferTx && !isConversionTx && !isDepositInternalTx && !etherscanTxs[tx.hash] && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n\n        // if (tx.hash.toLowerCase() === '0x599a2e7b0094b0a943ffb1d520cb47598dcf3764145c33824e3b032d91ccc489'.toLowerCase()){\n        //   debugger;\n        // }\n\n        if (isSendTransferTx || isReceiveTransferTx || isMigrationTx || isDepositTx || isRedeemTx || isSwapTx || isSwapOutTx || isWithdrawTx || isConversionTx || isCurveDepositTx || isCurveRedeemTx || isCurveZapIn || isCurveZapOut || isCurveTransferOut || isCurveTransferIn || isCurveDepositIn || isCurveDepositOut){\n\n          let action = null;\n          let hashKey = tx.hash;\n\n          if (isDepositTx){\n            action = 'Deposit';\n          } else if (isRedeemTx){\n            action = 'Redeem';\n          } else if (isMigrationTx || isConversionTx){\n            action = 'Migrate';\n          } else if (isSendTransferTx){\n            action = 'Send';\n          } else if (isReceiveTransferTx){\n            action = 'Receive';\n          } else if (isSwapTx){\n            action = 'Swap';\n          } else if (isSwapOutTx){\n            action = 'SwapOut';\n          } else if (isWithdrawTx){\n            action = 'Withdraw';\n          } else if (isCurveDepositTx){\n            action = 'CurveIn';\n          } else if (isCurveRedeemTx){\n            action = 'CurveOut';\n          } else if (isCurveZapIn){\n            action = 'CurveZapIn';\n          } else if (isCurveZapOut){\n            action = 'CurveZapOut';\n          } else if (isCurveDepositIn){\n            action = 'CurveDepositIn';\n          } else if (isCurveDepositOut){\n            action = 'CurveDepositOut';\n          } else if (isCurveTransferIn){\n            action = 'CurveTransferIn';\n          } else if (isCurveTransferOut){\n            action = 'CurveTransferOut';\n          }\n\n          let curveTokens = null;\n          if (isCurveTx){\n            hashKey += '_'+tx.tokenSymbol;\n            curveTokens = this.fixTokenDecimals(curveTx.value,curvePoolContract.decimals);\n\n            // Add action for curve tokens transfers\n            if ((isCurveTransferIn || isCurveTransferOut)){\n              hashKey+='_'+action;\n            }\n          }\n\n          // this.customLog('SAVE!',action);\n\n          if (tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()){\n            tokenDecimals = 18;\n          } else if (isCurveTx){\n            tokenDecimals = parseInt(tx.tokenDecimal);\n          }\n\n          // Sum the value if already processed\n          if (etherscanTxs[hashKey]){\n            // Prevent second internal tx to sum SwapOut original value\n            switch (etherscanTxs[hashKey].action){\n              case 'SwapOut':\n                if (etherscanTxs[hashKey].action !== action && isRedeemTx){\n                  etherscanTxs[hashKey].tokenValue = this.fixTokenDecimals(tx.value,tokenDecimals);\n                }\n              break;\n              default:\n                if (!curveTx){\n                  const newValue = etherscanTxs[hashKey].value.plus(this.fixTokenDecimals(tx.value,tokenDecimals));\n                  etherscanTxs[hashKey].value = newValue;\n                }\n              break;\n            }\n          } else {\n            // Insert tx in curve transfers buffer\n            if (isCurveTransferIn || isCurveTransferOut){\n              if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())){\n                curveTokens = this.fixTokenDecimals(tx.value,curvePoolContract.decimals);\n                curveTransfersTxs.push({...tx, hashKey, token, idleToken, curveTokens, action, value: this.fixTokenDecimals(tx.value,tokenDecimals)});\n              }\n            } else {\n              etherscanTxs[hashKey] = ({...tx, hashKey, token, idleToken, curveTokens, action, value: this.fixTokenDecimals(tx.value,tokenDecimals)});\n\n              // Delete curveTransfers\n              if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())){\n                curveTransfersTxsToDelete.push(tx.hash.toLowerCase());\n              }\n\n              // Take right tokenSymbol\n              switch (action){\n                case 'Withdraw':\n                  const iTxs = internalTxs.filter(iTx => (iTx !== tx));\n                  if (iTxs.length>0){\n                    const iTx = iTxs[0];\n                    etherscanTxs[hashKey].withdrawnValue = this.fixTokenDecimals(iTx.value,iTx.tokenDecimal);\n                    etherscanTxs[hashKey].tokenSymbol = iTx.tokenSymbol;\n                  }\n                break;\n                case 'CurveIn':\n                case 'CurveOut':\n                case 'CurveZapIn':\n                case 'CurveZapOut':\n                case 'CurveDepositIn':\n                case 'CurveDepositOut':\n                  etherscanTxs[hashKey].tokenSymbol = token;\n                break;\n                default:\n                break;\n              }\n            }   \n          }\n        }\n      });\n    });\n    \n    curveTransfersTxs.forEach( tx => {\n      if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())){\n        etherscanTxs[tx.hashKey] = tx;\n      }\n    });\n  \n    if (processTxs){\n      etherscanTxs = await this.processEtherscanTransactions(etherscanTxs,enabledTokens,processStoredTxs);\n    }\n\n    // console.log('etherscanTxs',etherscanTxs);\n\n    return etherscanTxs;\n  }\n  addStoredTransaction = (txKey,transaction) => {\n\n    const account = this.props && this.props.account ? this.props.account : null;\n    const selectedToken = this.props && this.props.selectedToken ? this.props.selectedToken : null;\n\n    if (!account || !selectedToken || !this.props.availableTokens || !this.props.availableTokens[selectedToken]){\n      return false;\n    }\n\n    const tokenConfig = this.props.availableTokens[selectedToken];\n    const tokenKey = tokenConfig.idle.token;\n\n    let storedTxs = this.getStoredTransactions();\n    if (!storedTxs[account]){\n      storedTxs[account] = {};\n    }\n\n    if (!storedTxs[account][tokenKey]){\n      storedTxs[account][tokenKey] = {};\n    }\n\n    storedTxs[account][tokenKey][txKey] = transaction;\n    this.updateStoredTransactions(storedTxs);\n  }\n  updateStoredTransactions = transactions => {\n    this.setLocalStorage('transactions',JSON.stringify(transactions));\n  }\n  /*\n  Merge storedTxs with this.props.transactions\n  */\n  getStoredTransactions = (account=null,tokenKey=null,selectedToken=null) => {\n    const storedTxs = this.getStoredItem('transactions',true,{});\n    const transactions = this.props.transactions ? { ...this.props.transactions } : {};\n    let output = storedTxs;\n\n    if (account){\n      if (storedTxs[account]){\n        output = storedTxs[account];\n        if (tokenKey){\n          output = output[tokenKey] ? output[tokenKey] : {};\n\n          if (selectedToken){\n            Object.keys(transactions).forEach(txKey => {\n              const tx = transactions[txKey];\n              if (!output[txKey] && tx.token && tx.token.toUpperCase() === selectedToken.toUpperCase()){\n                output[txKey] = transactions[txKey];\n              }\n            });\n          }\n        }\n      } else {\n        output = {};\n      }\n    }\n\n    return output;\n  }\n  processEtherscanTransactions = async (etherscanTxs,enabledTokens=[],processStoredTxs=true) => {\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let txReceipts = {};\n    let storedTxs = this.getStoredTransactions();\n\n    // Init storedTxs for pair account-token if empty\n    if (typeof storedTxs[this.props.account] !== 'object'){\n      storedTxs[this.props.account] = {};\n    }\n\n    // Take base tokens addresses and configs\n    const baseTokensConfigs = {};\n    const baseTokensAddresses = [];\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n    Object.keys(curveAvailableTokens).forEach( token => {\n      const curveTokenConfig = curveAvailableTokens[token];\n      const baseTokenConfig = this.getGlobalConfig(['stats','tokens',curveTokenConfig.baseToken]);\n      const baseTokenAddress = baseTokenConfig.address.toLowerCase();\n      baseTokensConfigs[baseTokenAddress] = baseTokenConfig;\n      baseTokensConfigs[baseTokenAddress].token = curveTokenConfig.baseToken;\n      baseTokensAddresses.push(baseTokenAddress);\n    });\n\n    const curveZapContract = this.getGlobalConfig(['curve','zapContract']);\n    // const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n    // const curveSwapContract = this.getGlobalConfig(['curve','migrationContract']);\n    // const curveDepositContract = this.getGlobalConfig(['curve','depositContract']);\n\n    await this.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const tokenKey = tokenConfig.idle.token;\n      const idleToken = tokenConfig.idle.token;\n\n      // Init storedTxs for pair account-token if empty\n      if (typeof storedTxs[this.props.account][tokenKey] !== 'object'){\n        storedTxs[this.props.account][tokenKey] = {};\n      }\n\n      const minedTxs = {...storedTxs[this.props.account][tokenKey]};\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        await this.asyncForEach(filteredTxs,async (tx,index) => {\n          const txKey = `tx${tx.timeStamp}000`;\n          const storedTx = storedTxs[this.props.account][tokenKey][txKey] ? storedTxs[this.props.account][tokenKey][txKey] : tx;\n\n          let tokenPrice = null;\n          \n          if (storedTx.tokenPrice && !this.BNify(storedTx.tokenPrice).isNaN()){\n            tokenPrice = this.BNify(storedTx.tokenPrice);\n          } else {\n            tokenPrice = await this.getIdleTokenPrice(tokenConfig,tx.blockNumber,tx.timeStamp);\n            storedTx.tokenPrice = tokenPrice;\n          }\n\n          let idleTokens = this.BNify(tx.value);\n          let tokensTransfered = tokenPrice.times(idleTokens);\n\n          // Add transactionHash to storedTx\n          if (!storedTx.transactionHash){\n            storedTx.transactionHash = tx.hash;\n          }\n\n          // Deposited\n          switch (tx.action){\n            case 'Send':\n            case 'Receive':\n            case 'Swap':\n            case 'SwapOut':\n            case 'Migrate':\n              if (!storedTx.tokenAmount){\n                storedTx.idleTokens = idleTokens;\n                storedTx.value = tokensTransfered;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.tokenSymbol = selectedToken;\n              }\n            break;\n            case 'Deposit':\n            case 'Redeem':\n              if (!storedTx.tokenAmount){\n                storedTx.value = idleTokens;\n                storedTx.tokenAmount = idleTokens;\n                storedTx.idleTokens = idleTokens.div(tokenPrice);\n              }\n            break;\n            case 'Withdraw':\n              if (!storedTx.tokenAmount){\n                storedTx.idleTokens = idleTokens;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.value = storedTx.withdrawnValue;\n              }\n            break;\n            case 'CurveIn':\n            case 'CurveOut':\n              if (!storedTx.tokenAmount){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.idleTokens = idleTokens;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n            break;\n            case 'CurveTransferIn':\n            case 'CurveTransferOut':\n              if (!storedTx.curveTokenPrice){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n                storedTx.tokenAmount = this.BNify(storedTx.curveTokens).times(storedTx.curveTokenPrice);\n              }\n\n              storedTx.idleTokens = this.BNify(0);\n            break;\n            case 'CurveZapIn':\n            case 'CurveZapOut':\n              if (!storedTx.curveTokenPrice){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n\n              if (!storedTx.tokenAmount){\n\n                storedTx.tokenAmount = this.BNify(0);\n                storedTx.idleTokens = this.BNify(0);\n\n                const curveTxReceipt = txReceipts[tx.hashKey] ? txReceipts[tx.hashKey] : await (new Promise( async (resolve, reject) => {\n                  this.props.web3.eth.getTransactionReceipt(tx.hash,(err,tx)=>{\n                    if (err){\n                      reject(err);\n                    }\n                    resolve(tx);\n                  });\n                }));\n\n                if (curveTxReceipt){\n\n                  // Save receipt\n                  if (!txReceipts[tx.hashKey]){\n                    txReceipts[tx.hashKey] = curveTxReceipt;\n                  }\n\n                  const filteredLogs = curveTxReceipt.logs.filter( log => (baseTokensAddresses.includes(log.address.toLowerCase()) && log.topics[log.topics.length-1].toLowerCase() === `0x00000000000000000000000${curveZapContract.address.replace('x','').toLowerCase()}` ) );\n\n                  this.customLog('filteredLogs',filteredLogs);\n\n                  if (filteredLogs && filteredLogs.length){\n                    filteredLogs.forEach( log => {\n                      let tokenAmount = parseInt(log.data,16);\n                      const baseTokensConfig = baseTokensConfigs[log.address.toLowerCase()];\n                      const tokenDecimals = baseTokensConfig.decimals;\n                      tokenAmount = this.fixTokenDecimals(tokenAmount,tokenDecimals);\n                      storedTx.tokenAmount = storedTx.tokenAmount.plus(tokenAmount);\n                      this.customLog('Add tokenAmount ('+tx.hash+')',baseTokensConfig.token,tokenAmount.toFixed(5),storedTx.tokenAmount.toFixed(5));\n                    });\n                  }\n                }\n              }\n            break;\n            case 'CurveDepositIn':\n            case 'CurveDepositOut':\n              if (!storedTx.curveTokenPrice){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n\n              storedTx.tokenAmount = this.BNify(storedTx.value);\n\n              if (!storedTx.idleTokens){\n\n                const curveTxReceipt = txReceipts[tx.hashKey] ? txReceipts[tx.hashKey] : await (new Promise( async (resolve, reject) => {\n                  this.props.web3.eth.getTransactionReceipt(tx.hash,(err,tx)=>{\n                    if (err){\n                      reject(err);\n                    }\n                    resolve(tx);\n                  });\n                }));\n\n                if (curveTxReceipt){\n                  const curveTokenConfig = this.getGlobalConfig(['curve','availableTokens',idleToken]);\n                  const idleTokenDecimals = curveTokenConfig && curveTokenConfig.decimals ? curveTokenConfig.decimals : 18;\n                  const idleTokenAddress = curveTokenConfig && curveTokenConfig.address ? curveTokenConfig.address : tokenConfig.idle.address;\n\n                  // Save receipt\n                  if (!txReceipts[tx.hashKey]){\n                    txReceipts[tx.hashKey] = curveTxReceipt;\n                  }\n\n                  const filteredLogs = curveTxReceipt.logs.filter( log => (log.address.toLowerCase()===idleTokenAddress ) );\n                  if (filteredLogs && filteredLogs.length){\n                    idleTokens = parseInt(filteredLogs[0].data,16);\n                    idleTokens = this.fixTokenDecimals(idleTokens,idleTokenDecimals);\n                    storedTx.idleTokens = idleTokens;\n                  }\n                }\n              }\n            break;\n            default:\n            break;\n          }\n            \n          // Save token for future filtering\n          storedTx.token = selectedToken;\n\n          // Save processed tx\n          etherscanTxs[tx.hashKey] = storedTx;\n\n          // Store processed Tx\n          storedTxs[this.props.account][tokenKey][txKey] = storedTx;\n\n          // Remove from minted Txs\n          delete minedTxs[txKey];\n        });\n      }\n\n      // Process Stored txs\n      if (processStoredTxs){\n        etherscanTxs = await this.processStoredTxs(etherscanTxs,[selectedToken],this.props.transactions);\n      }\n    });\n\n    // Update Stored txs\n    if (storedTxs){\n      this.updateStoredTransactions(storedTxs);\n    }\n\n    return etherscanTxs;\n  }\n  processStoredTxs = async (etherscanTxs,enabledTokens=[],txsToProcess=null) => {\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let storedTxs = this.getStoredItem('transactions',true,{})\n\n    // Init storedTxs\n    if (!storedTxs[this.props.account]){\n      storedTxs[this.props.account] = {};\n    }\n\n    etherscanTxs = Object.assign({},etherscanTxs);\n\n    const networkId = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n\n    // this.customLog('Processing stored txs',enabledTokens);\n\n    await this.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const tokenKey = tokenConfig.idle.token;\n\n      // Init storedTxs\n      if (!storedTxs[this.props.account][tokenKey]){\n        storedTxs[this.props.account][tokenKey] = {};\n      }\n\n      txsToProcess = txsToProcess && Object.values(txsToProcess).length ? txsToProcess : this.getStoredTransactions(this.props.account,tokenKey,selectedToken);\n      \n      // this.customLog('txsToProcess',selectedToken,txsToProcess);\n\n      // if (!Object.values(txsToProcess).length && selectedToken==='DAI' && Object.values(this.props.transactions).length>0){\n      //   debugger;\n      // }\n\n      // Debug transactions\n      /*\n      txsToProcess['xxxxx'] = {\n        status:'success',\n        created:Date.now(),\n        method:'executeMetaTransaction',\n        token:selectedToken.toUpperCase(),\n        transactionHash:'0x000000000000000000000000000'\n      };\n      */\n\n      await this.asyncForEach(Object.keys(txsToProcess),async (txKey,i) => {\n        const tx = txsToProcess[txKey];\n\n        // Skip wrong token\n        if (!tx || !tx.token || tx.token.toUpperCase() !== selectedToken.toUpperCase() || (tx.networkId && parseInt(tx.networkId) !== parseInt(networkId))){\n          return false;\n        }\n\n        const isStoredTx = storedTxs && storedTxs[this.props.account] && storedTxs[this.props.account][tokenKey] && storedTxs[this.props.account][tokenKey][txKey];\n\n        const allowedMethods = {\n          mintIdleToken:'Deposit',\n          redeemIdleToken:'Redeem',\n          migrateFromToIdle:'Migrate',\n          mintIdleTokensProxy:'Deposit',\n          migrateFromAaveToIdle:'Migrate',\n          migrateFromIearnToIdle:'Migrate',\n          executeMetaTransaction:'Migrate',\n          migrateFromFulcrumToIdle:'Migrate',\n          migrateFromCompoundToIdle:'Migrate',\n        };\n        const pendingStatus = ['pending','started'];\n        const txSucceeded = tx.status === 'success';\n        const txPending = pendingStatus.includes(tx.status);\n        const isMetaTx = tx.method === 'executeMetaTransaction';\n        const txHash = tx.transactionHash ? tx.transactionHash : null;\n        const methodIsAllowed = Object.keys(allowedMethods).includes(tx.method);\n\n        // Skip transaction if already present in etherscanTxs with same status\n        if (txHash && etherscanTxs[txHash] && etherscanTxs[txHash].tokenPrice){\n          return false;\n        }\n\n        if (txPending && txHash && !etherscanTxs[txHash] && methodIsAllowed && tx.params.length){\n          // this.customLog('processStoredTxs',tx.method,tx.status,tx.params);\n          const isMigrationTx = allowedMethods[tx.method] === 'Migrate';\n          const decimals = isMigrationTx ? 18 : tokenConfig.decimals;\n          etherscanTxs[`t${tx.created}`] = {\n            status:'Pending',\n            token:selectedToken,\n            action:allowedMethods[tx.method],\n            timeStamp:parseInt(tx.created/1000),\n            hash:txHash ? tx.transactionHash : null,\n            tokenSymbol:isMigrationTx ? tokenConfig.idle.token : selectedToken,\n            value: tx.value ? tx.value : this.fixTokenDecimals(tx.params[0],decimals).toString()\n          };\n\n          return false;\n        }\n\n        // Skip invalid txs\n        if (!txSucceeded || !txHash || !methodIsAllowed){\n          return false;\n        }\n\n        let realTx = tx.realTx ? tx.realTx : null;\n\n        if (!realTx){\n          // this.customLog('loadTxs - getTransaction',tx.transactionHash);\n          realTx = await (new Promise( async (resolve, reject) => {\n            this.props.web3.eth.getTransaction(tx.transactionHash,(err,txReceipt)=>{\n              if (err){\n                reject(err);\n              }\n              resolve(txReceipt);\n            });\n          }));\n        }\n\n        // this.customLog('realTx (localStorage)',realTx);\n\n        // Skip txs from other wallets if not meta-txs\n        if (!realTx || (!isMetaTx && realTx.from.toLowerCase() !== this.props.account.toLowerCase())){\n          return false;\n        }\n\n        const tokenPrice = await this.getIdleTokenPrice(tokenConfig,realTx.blockNumber,realTx.timeStamp);\n\n        realTx.status = 'Completed';\n        realTx.action = allowedMethods[tx.method];\n        realTx.contractAddress = tokenConfig.address;\n        realTx.timeStamp = parseInt(tx.created/1000);\n\n        let txValue = null;\n        switch (tx.method){\n          case 'mintIdleToken':\n          case 'mintIdleTokensProxy':\n            if (!tx.params){\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n              return false;\n            }\n\n            if (realTx.to.toLowerCase() !== tokenConfig.idle.address.toLowerCase()){\n              // Remove wrong contract tx\n              if (isStoredTx){\n                delete storedTxs[this.props.account][tokenKey][txKey];\n              }\n              // this.customLog('Skipped deposit tx '+tx.transactionHash+' - wrong contract');\n              return false;\n            }\n\n            txValue = tx.params ? this.fixTokenDecimals(tx.params[0],tokenConfig.decimals).toString() : 0;\n            if (!txValue){\n              // this.customLog('Skipped deposit tx '+tx.transactionHash+' - value is zero ('+txValue+')');\n              return false;\n            }\n\n            realTx.value = txValue;\n            realTx.tokenAmount = txValue;\n          break;\n          case 'redeemIdleToken':\n            if (!tx.params){\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n              return false;\n            }\n\n            if (!realTx.tokenPrice){\n              const redeemedValueFixed = this.fixTokenDecimals(tx.params[0],18).times(tokenPrice);\n              realTx.tokenPrice = tokenPrice;\n              realTx.value = redeemedValueFixed;\n              realTx.tokenAmount = redeemedValueFixed;\n            }\n          break;\n          case 'executeMetaTransaction':\n            let executeMetaTransactionReceipt = tx.txReceipt ? tx.txReceipt : null;\n\n            if (!executeMetaTransactionReceipt){\n              executeMetaTransactionReceipt = await (new Promise( async (resolve, reject) => {\n                this.props.web3.eth.getTransactionReceipt(tx.transactionHash,(err,tx)=>{\n                  if (err){\n                    reject(err);\n                  }\n                  resolve(tx);\n                });\n              }));\n            }\n\n            if (!executeMetaTransactionReceipt){\n              return false;\n            }\n\n            // Save txReceipt into the tx\n            if (!tx.txReceipt){\n              tx.txReceipt = executeMetaTransactionReceipt;\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n            }\n\n            let action = null;\n            let executeMetaTransactionContractAddr = null;\n            let executeMetaTransactionInternalTransfers = [];\n            const IdleProxyMinterInfo = this.getGlobalConfig(['contract','deposit','proxyContract']);\n\n            // Handle migration tx\n            if (tokenConfig.migration && tokenConfig.migration.oldContract){\n              if (executeMetaTransactionReceipt.logs){\n                executeMetaTransactionContractAddr = tokenConfig.migration.oldContract.address.replace('x','').toLowerCase();\n                executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n              } else if (executeMetaTransactionReceipt.events){\n                executeMetaTransactionInternalTransfers = Object.values(executeMetaTransactionReceipt.events).filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase(); });\n              }\n\n              if (executeMetaTransactionInternalTransfers.length){\n                action = 'Migrate';\n              }\n            }\n\n            // Handle deposit tx\n            if (!executeMetaTransactionInternalTransfers.length){\n              if (executeMetaTransactionReceipt.logs){\n                executeMetaTransactionContractAddr = tokenConfig.idle.address.replace('x','').toLowerCase();\n                executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n\n                // Handle deposit made with proxy contract\n                if (!executeMetaTransactionInternalTransfers.length && IdleProxyMinterInfo){\n                  executeMetaTransactionContractAddr = IdleProxyMinterInfo.address.replace('x','').toLowerCase();\n                  executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n                }\n              } else if (executeMetaTransactionReceipt.events){\n                executeMetaTransactionInternalTransfers = Object.values(executeMetaTransactionReceipt.events).filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase(); });\n              }\n\n              if (executeMetaTransactionInternalTransfers.length){\n                action = 'Deposit';\n              }\n            }\n\n            if (!executeMetaTransactionInternalTransfers.length){\n              return false;\n            }\n\n            const internalTransfer = executeMetaTransactionInternalTransfers[0];\n\n            const metaTxValue = internalTransfer.data ? parseInt(internalTransfer.data,16) : (internalTransfer.raw && internalTransfer.raw.data) ? parseInt(internalTransfer.raw.data,16) : null;\n\n            if (!metaTxValue){\n              return false;\n            }\n\n            const metaTxValueFixed = this.fixTokenDecimals(metaTxValue,tokenConfig.decimals);\n            realTx.action = action;\n            realTx.value = metaTxValueFixed;\n            realTx.tokenAmount = metaTxValueFixed;\n            // this.customLog(metaTxValueFixed.toString());\n          break;\n          case 'migrateFromCompoundToIdle':\n          case 'migrateFromFulcrumToIdle':\n          case 'migrateFromAaveToIdle':\n          case 'migrateFromIearnToIdle':\n          case 'migrateFromToIdle':\n            if (!tokenConfig.migration || !tokenConfig.migration.oldContract){\n              return false;\n            }\n\n            let migrationTxReceipt = tx.txReceipt ? tx.txReceipt : null;\n\n            if (!migrationTxReceipt){\n              migrationTxReceipt = await (new Promise( async (resolve, reject) => {\n                this.props.web3.eth.getTransactionReceipt(tx.transactionHash,(err,tx)=>{\n                  if (err){\n                    reject(err);\n                  }\n                  resolve(tx);\n                });\n              }));\n            }\n\n            if (!migrationTxReceipt){\n              return false;\n            }\n\n            // Save txReceipt into the tx\n            if (!tx.txReceipt){\n              tx.txReceipt = migrationTxReceipt;\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n            }\n\n            const migrationContractAddr = tokenConfig.migration.migrationContract.address.toLowerCase().replace('x','');\n            const contractAddress = tokenConfig.idle.address.toLowerCase().replace('x','');\n            const migrationTxInternalTransfers = migrationTxReceipt.logs.filter((tx) => { return tx.topics.length>=3 && tx.topics[tx.topics.length-2].toLowerCase() === `0x00000000000000000000000${migrationContractAddr}` && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${contractAddress}`; });\n\n            if (!migrationTxInternalTransfers.length){\n              return false;\n            }\n\n            const migrationInternalTransfer = migrationTxInternalTransfers.pop();\n\n            const decodedLogs = this.props.web3.eth.abi.decodeLog([\n              {\n                internalType: \"uint256\",\n                name: \"_token\",\n                type: \"uint256\"\n              },\n            ],migrationInternalTransfer.data,migrationInternalTransfer.topics);\n\n            if (!decodedLogs || !decodedLogs._token){\n              return false;\n            }\n\n            const migrationValue = decodedLogs._token;\n            const migrationValueFixed = this.fixTokenDecimals(migrationValue,tokenConfig.decimals);\n            realTx.value = migrationValueFixed.toString();\n          break;\n          default:\n          break;\n        }\n\n        realTx.tokenPrice = tokenPrice;\n        realTx.token = selectedToken;\n        realTx.tokenSymbol = selectedToken;\n        realTx.idleTokens = tokenPrice.times(this.BNify(realTx.value));\n\n        // Save processed tx\n        etherscanTxs[txHash] = realTx;\n        // etherscanTxs.push(realTx);\n\n        // Store processed Tx\n        if (!tx.realTx){\n          tx.realTx = realTx;\n          storedTxs[this.props.account][tokenKey][txKey] = tx;\n        }\n      });\n    });\n\n    // Update Stored Txs\n    if (storedTxs){\n      this.updateStoredTransactions(storedTxs);\n    }\n\n    return etherscanTxs;\n  }\n  saveCachedRequest = (endpoint,alias=false,data) => {\n    const key = alias ? alias : endpoint;\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    const timestamp = parseInt(Date.now()/1000);\n    cachedRequests[key] = {\n      data,\n      timestamp\n    };\n    return this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n  }\n  getCustomAddress = () => {\n    return this.getStoredItem('customAddress',false);\n  }\n  setCustomAddress = (customAddress) => {\n    return this.setLocalStorage('customAddress',customAddress);\n  }\n  getCachedRequest = (endpoint,alias=false) => {\n    const key = alias ? alias : endpoint;\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key]){\n      return cachedRequests[key].data;\n    }\n    return null;\n  }\n  makeRequest = async(endpoint,error_callback=false,config=null) => {\n    const data = await axios\n                  .get(endpoint,config)\n                  .catch(err => {\n                    if (typeof error_callback === 'function'){\n                      error_callback(err);\n                    }\n                  });\n    return data;\n  }\n  makeEtherscanApiRequest = async (endpoint,keys=[],TTL=120,apiKeyIndex=0) => {\n    const timestamp = parseInt(Date.now()/1000);\n    \n    // Check if already exists\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[endpoint] && cachedRequests[endpoint].timestamp && timestamp-cachedRequests[endpoint].timestamp<TTL){\n      return cachedRequests[endpoint].data;\n    }\n\n    const apiKey = keys[apiKeyIndex];\n    const data = await this.makeRequest(endpoint+'&apikey='+apiKey);\n\n    // console.log('makeEtherscanApiRequest',endpoint+'&apikey='+apiKey,apiKeyIndex+'/'+keys.length,data,(data.data ? data.data.message : null),apiKeyIndex<keys.length-1);\n\n    if (data && data.data && data.data.message === 'OK'){\n      cachedRequests[endpoint] = {\n        data,\n        timestamp\n      };\n      this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n      return data;\n    } else if (apiKeyIndex<keys.length-1) {\n      return await this.makeEtherscanApiRequest(endpoint,keys,TTL,apiKeyIndex+1);\n    }\n    return null;\n  }\n  makeCachedRequest = async (endpoint,TTL=60,return_data=false,alias=false,config=null) => {\n    const key = alias ? alias : endpoint;\n    const timestamp = parseInt(Date.now()/1000);\n    \n    // Check if already exists\n    const cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key] && cachedRequests[key].timestamp && timestamp-cachedRequests[key].timestamp<TTL){\n      return (cachedRequests[key].data && return_data ? cachedRequests[key].data.data : cachedRequests[key].data);\n    }\n\n    const data = await this.makeRequest(endpoint,false,config);\n\n    cachedRequests[key] = {\n      data,\n      timestamp\n    };\n    this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n    return (data && return_data ? data.data : data);\n  }\n  getTransactionError = error => {\n    let output = 'error';\n    if (parseInt(error.code)){\n      const errorCode = parseInt(error.code);\n      switch (errorCode){\n        case 4001:\n          output = 'denied';\n        break;\n        default:\n          output = `error_${errorCode}`;\n        break;\n      }\n    } else if (error.message){\n      output = error.message.split(\"\\n\")[0]; // Take just the first line of the error\n    }\n\n    return output;\n  }\n  getGlobalConfigs = () => {\n    return globalConfigs;\n  }\n  getArrayPath = (path,array) => {\n    if (!array){\n      return null;\n    }\n    path = Object.assign([],path);\n    if (path.length>0){\n      const prop = path.shift();\n      if (!path.length){\n        return array[prop] ? array[prop] : null;\n      } else if (array[prop]) {\n        return this.getArrayPath(path,array[prop]);\n      }\n    }\n    return null;\n  }\n  getGlobalConfig = (path,configs=false) => {\n    configs = configs ? configs : globalConfigs;\n    if (path.length>0){\n      const prop = path.shift();\n      if (!path.length){\n        return configs[prop] ? configs[prop] : null;\n      } else if (configs[prop]) {\n        return this.getGlobalConfig(path,configs[prop]);\n      }\n    }\n    return null;\n  }\n  checkUrlOrigin = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n  }\n  checkUrlBeta = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.betaURL.toLowerCase());\n  }\n  sendGoogleAnalyticsPageview = async (page=null) => {\n    page = page || window.location.hash.substr(1);\n    const googlePageviewInfo = this.getGlobalConfig(['analytics','google','pageView']);\n    const isOrigin = this.checkUrlOrigin();\n    if (googlePageviewInfo.enabled && isOrigin && window.ga){\n      window.ga('set', 'page', page);\n      window.ga('send', 'pageview');\n    }\n  }\n  sendGoogleAnalyticsEvent = async (eventData,callback=null) => {\n\n    const googleEventsInfo = globalConfigs.analytics.google.events;\n    const debugEnabled = googleEventsInfo.debugEnabled;\n    const originOk = window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n\n    if (googleEventsInfo.enabled && window.ga && ( debugEnabled || originOk)){\n\n      // Check if testnet postfix required\n      if (googleEventsInfo.addPostfixForTestnet){\n        // Postfix network name if not mainnet\n        if (globalConfigs.network.requiredNetwork !== 1){\n          const currentNetwork = globalConfigs.network.availableNetworks[globalConfigs.network.requiredNetwork];\n          eventData.eventCategory += `_${currentNetwork}`;\n        // Postfix test for debug\n        } else if (debugEnabled && !originOk) {\n          eventData.eventCategory += '_test';\n        }\n      }\n\n      await (new Promise( async (resolve, reject) => {\n        eventData.hitCallback = () => {\n          resolve(true);\n        };\n        eventData.hitCallbackFail = () => {\n          reject();\n        };\n\n        window.ga('send', 'event', eventData);\n      }));\n\n      if (typeof callback === 'function'){\n        callback();\n      }\n    }\n\n    if (typeof callback === 'function'){\n      callback();\n    }\n\n    return false;\n  }\n  createContract = async (name, address, abi) => {\n    try {\n      const contract = new this.props.web3.eth.Contract(abi, address);\n      return {name, contract};\n    } catch (error) {\n      this.customLogError(\"Could not create contract.\",name,address,error);\n    }\n    return null;\n  }\n  getWalletProvider = (defaultProvider=null) => {\n    return this.getStoredItem('walletProvider',false,defaultProvider);\n  }\n  simpleIDPassUserInfo = (userInfo,simpleID) => {\n    if (!userInfo.address && this.props.account){\n      userInfo.address = this.props.account;\n    }\n    if (!userInfo.provider){\n      userInfo.provider = this.getWalletProvider();\n    }\n    if (typeof userInfo.email !== 'undefined' && !userInfo.email){\n      delete userInfo.email;\n    }\n    if (!userInfo.address){\n      return false;\n    }\n    simpleID = simpleID ? simpleID : (this.props.simpleID ? this.props.simpleID : (typeof this.props.initSimpleID === 'function' ? this.props.initSimpleID() : null));\n    if (simpleID){\n      return simpleID.passUserInfo(userInfo);\n    }\n    return false;\n  }\n  getEtherscanTransactionUrl = (txHash) => {\n    const requiredNetwork = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n    const baseurl = this.getGlobalConfig(['network','providers','etherscan','baseUrl',requiredNetwork]);\n    return txHash ? `${baseurl}/tx/${txHash}` : null;\n  }\n  getEtherscanAddressUrl = (address) => {\n    const requiredNetwork = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n    const baseurl = this.getGlobalConfig(['network','providers','etherscan','baseUrl',requiredNetwork]);\n    return address ? `${baseurl}/address/${address}` : null;\n  }\n  formatMoney = (amount, decimalCount = 2, decimal = \".\", thousands = \",\") => {\n    try {\n      decimalCount = Math.abs(decimalCount);\n      decimalCount = isNaN(decimalCount) ? 2 : decimalCount;\n\n      const negativeSign = amount < 0 ? \"-\" : \"\";\n\n      let i = parseInt(amount = Math.abs(Number(amount) || 0).toFixed(decimalCount)).toString();\n      let j = (i.length > 3) ? i.length % 3 : 0;\n\n      return negativeSign + (j ? i.substr(0, j) + thousands : '') + i.substr(j).replace(/(\\d{3})(?=\\d)/g, \"$1\" + thousands) + (decimalCount ? decimal + Math.abs(amount - i).toFixed(decimalCount).slice(2) : \"\");\n    } catch (e) {\n      return null;\n    }\n  }\n  getSnapshotProposals = async (activeOnly=false) => {\n\n    const cachedDataKey = `snapshotProposals_${activeOnly}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const whitelist = this.getGlobalConfig(['network','providers','snapshot','whitelist']).map( addr => addr.toLowerCase() );\n    const endpoint = this.getGlobalConfig(['network','providers','snapshot','endpoints','proposals']);\n    let proposals = await this.makeCachedRequest(endpoint,1440,true);\n\n    // console.log('getSnapshotProposals',proposals);\n\n    if (proposals && !proposals.error){\n      proposals = Object.values(proposals);\n\n      const currTime = parseInt(Date.now()/1000);\n      if (activeOnly){\n        proposals =  proposals.filter( p => (p.msg.payload.start<=currTime && p.msg.payload.end>currTime) );\n      }\n\n      // console.log(proposals);\n\n      const validProposals = [];\n      await this.asyncForEach(proposals, async (p) => {\n        // Add proposal if ended\n        if (p.msg.payload.end<=currTime || whitelist.includes(p.address.toLowerCase())){\n          validProposals.push(p);\n        } else {\n          const blockNumber = p.msg.payload.snapshot;\n\n          let checkedStrategies = false;\n          await this.asyncForEach( p.msg.payload.metadata.strategies, async (s) => {\n            if (checkedStrategies){\n              return;\n            }\n            if (s.name==='erc20-balance-of'){\n              const tokenName = s.params.symbol;\n              const tokenContract = this.getContractByName(tokenName);\n              if (tokenContract){\n                const tokenBalance = await this.getTokenBalance(tokenName,p.address,true,blockNumber);\n                // console.log(p.relayerIpfsHash,p.address,s.name,tokenBalance ? tokenBalance.toFixed() : null);\n                if (tokenBalance && this.BNify(tokenBalance).gt(100)){\n                  checkedStrategies = true;\n                }\n              }\n            } else {\n              // checkedStrategies = true;\n            }\n\n            // console.log(p.relayerIpfsHash,p.address,s.name,checkedStrategies);\n          });\n          \n          // Add proposal is passed token balances check\n          if (checkedStrategies){\n            validProposals.push(p);\n          }\n        }\n      });\n\n      return this.setCachedData(cachedDataKey,validProposals);\n    }\n\n  }\n  getTokenApiData = async (address,isRisk=null,startTimestamp=null,endTimestamp=null,forceStartTimestamp=false,frequency=null,order=null,limit=null) => {\n    if (globalConfigs.network.requiredNetwork!==1 || !globalConfigs.stats.enabled){\n      return [];\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenApiData_${address}_${isRisk}_${frequency}_${order}_${limit}`;\n    let cachedData = this.getCachedData(cachedDataKey);\n\n    if (cachedData){\n      // Check for fittable start and end time\n      const filteredCachedData = cachedData.filter( c => ( (c.startTimestamp===null || (startTimestamp && c.startTimestamp<=startTimestamp)) && (c.endTimestamp===null || (endTimestamp && c.endTimestamp>=endTimestamp)) ) )\n\n      if (filteredCachedData && filteredCachedData.length>0){\n        const filteredData = filteredCachedData.pop().data;\n        if (filteredData){\n          return filteredData.filter( d => ((!startTimestamp || d.timestamp>=startTimestamp) && (!endTimestamp || d.timestamp<=endTimestamp)) );\n        }\n        return null;\n      }\n    // Initialize cachedData\n    } else {\n      cachedData = [];\n    }\n\n    const apiInfo = globalConfigs.stats.rates;\n    let endpoint = `${apiInfo.endpoint}${address}`;\n\n    if (startTimestamp || endTimestamp || isRisk !== null || frequency !== null){\n      const params = [];\n\n      if (startTimestamp && parseInt(startTimestamp)){\n        if (forceStartTimestamp){\n          params.push(`start=${startTimestamp}`);\n        } else {\n          const start = startTimestamp-(60*60*24*2); // Minus 1 day for Volume graph\n          params.push(`start=${start}`);\n        }\n      }\n\n      if (endTimestamp && parseInt(endTimestamp)){\n        params.push(`end=${endTimestamp}`);\n      }\n\n      if (isRisk !== null){\n        params.push(`isRisk=${isRisk}`);\n      }\n\n      if (frequency !== null && parseInt(frequency)){\n        params.push(`frequency=${frequency}`);\n      }\n\n      if (order !== null){\n        params.push(`order=${order}`);\n      }\n\n      if (limit !== null && parseInt(limit)){\n        params.push(`limit=${limit}`);\n      }\n\n      if (params.length){\n        endpoint += '?'+params.join('&');\n      }\n    }\n\n    const config = this.getGlobalConfig(['stats','config']);\n    let output = await this.makeRequest(endpoint,false,config);\n    if (!output){\n      return [];\n    }\n\n    const data = output.data;\n\n    let filteredData = null;\n    if (isRisk !== null){\n      filteredData = data.filter( d => ( d.isRisk === isRisk ) );\n    }\n\n    cachedData.push({\n      isRisk,\n      endTimestamp,\n      startTimestamp,\n      data:filteredData,\n    });\n\n    this.setCachedData(cachedDataKey,cachedData);\n\n    return data;\n  }\n  getTokenExchangeRate = async (contractName,exchangeRateParams) => {\n    const cachedDataKey = `exchangeRate_${contractName}_${exchangeRateParams.name}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const exchangeRate = await this.genericContractCall(contractName,exchangeRateParams.name,exchangeRateParams.params);\n    return this.setCachedDataWithLocalStorage(cachedDataKey,exchangeRate,null);\n  }\n  getTokenDecimals = async (contractName) => {\n    contractName = contractName || this.props.selectedToken;\n\n    if (!contractName){\n      return false;\n    }\n\n    const cachedDataKey = `contractDecimals_${contractName}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const tokenConfig = this.getGlobalConfig(['stats','tokens',contractName]);\n    const decimals = tokenConfig && tokenConfig.decimals ? tokenConfig.decimals : await this.genericContractCall(contractName,'decimals');\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey,decimals,null);\n  }\n  getAvgApr = (aprs,allocations,totalAllocation) => {\n    if (aprs && allocations && totalAllocation){\n      let avgApr = Object.keys(aprs).reduce((aprWeighted,protocolAddr) => {\n        const allocation = this.BNify(allocations[protocolAddr]);\n        const apr = this.BNify(aprs[protocolAddr]);\n        return this.BNify(aprWeighted).plus(allocation.times(apr));\n      },0);\n\n      if (avgApr){\n        return this.BNify(avgApr).div(totalAllocation);\n      }\n    }\n    return null;\n  }\n  getFrequencySeconds = (frequency,quantity=1) => {\n    const frequency_seconds = {\n      hour:3600,\n      day:86400,\n      week:604800\n    };\n    return frequency_seconds[frequency]*quantity;\n  }\n  getIdleStakingRewardsTxs = async () => {\n    const idleTokenConfig = this.getGlobalConfig(['govTokens','IDLE']);\n    const feeDistributorConfig = this.getGlobalConfig(['tools','stake','props','availableTokens','IDLE','feeDistributor']);\n    const etherscanInfo = this.getGlobalConfig(['network','providers','etherscan']);\n    const etherscanApiUrl = etherscanInfo.endpoints[1];\n    const etherscanEndpoint = `${etherscanApiUrl}?module=account&action=tokentx&address=${feeDistributorConfig.address}&sort=desc`;\n    const etherscanTxlist = await this.makeEtherscanApiRequest(etherscanEndpoint,etherscanInfo.keys,3600);\n    // console.log('getIdleStakingRewardsTxs',etherscanEndpoint,etherscanTxlist);\n    if (etherscanTxlist && etherscanTxlist.data && etherscanTxlist.data.result && typeof etherscanTxlist.data.result.filter === 'function'){\n      return etherscanTxlist.data.result.filter( tx => (tx.contractAddress.toLowerCase() === idleTokenConfig.address.toLowerCase() && tx.to.toLowerCase() === feeDistributorConfig.address.toLowerCase() && this.BNify(tx.value).gt(0) ));\n    }\n    return [];\n  }\n  getProtocolInfoByAddress = (addr) => {\n    return this.props.tokenConfig.protocols.find(c => c.address.toLowerCase() === addr.toLowerCase());\n  }\n  integerValue = value => {\n    return this.BNify(value).integerValue(BigNumber.ROUND_FLOOR).toFixed();\n  }\n  normalizeTokenDecimals = tokenDecimals => {\n    return this.BNify(`1e${tokenDecimals}`);\n  }\n  normalizeTokenAmount = (tokenBalance,tokenDecimals,round=true) => {\n    const normalizedTokenDecimals = this.normalizeTokenDecimals(tokenDecimals);\n    return this.BNify(tokenBalance).times(normalizedTokenDecimals).integerValue(BigNumber.ROUND_FLOOR).toFixed();\n  }\n  fixTokenDecimals = (tokenBalance,tokenDecimals,exchangeRate=null) => {\n    if (!tokenDecimals){\n      return this.BNify(tokenBalance);\n    }\n    const normalizedTokenDecimals = this.normalizeTokenDecimals(tokenDecimals);\n    let balance = this.BNify(tokenBalance).div(normalizedTokenDecimals);\n    if (exchangeRate && !exchangeRate.isNaN()){\n      balance = balance.times(exchangeRate);\n    }\n    return balance;\n  }\n  checkContractPaused = async (contractName=null) => {\n    contractName = contractName ? contractName : this.props.tokenConfig.idle.token;\n    const contractPaused = await this.genericContractCallCached(contractName, 'paused').catch(err => {\n      this.customLogError('Generic Idle call err:', err);\n    });\n    // this.customLog('checkContractPaused',this.props.tokenConfig.idle.token,contractPaused);\n    return contractPaused;\n  }\n  getStoredItem = (key,parse_json=true,return_default=null) => {\n    let output = return_default;\n    if (window.localStorage){\n      const item = localStorage.getItem(key);\n      if (item){\n        output = item;\n        if (parse_json){\n          output = JSON.parse(item);\n        }\n      }\n    }\n    if (!output){\n      return return_default;\n    }\n    return output;\n  }\n  clearStoredData = (excludeKeys=[]) => {\n    if (window.localStorage){\n\n      if (!excludeKeys || !excludeKeys.length){\n        return window.localStorage.clear();\n      }\n\n      const storedKeysToRemove = [];\n      for (let i=0;i<window.localStorage.length;i++){\n        const storedKey = window.localStorage.key(i);\n        if (!excludeKeys.includes(storedKey)){\n          storedKeysToRemove.push(storedKey);\n        }\n      }\n      storedKeysToRemove.forEach((storedKey) => {\n        this.removeStoredItem(storedKey)\n      });\n    }\n  }\n  removeStoredItem = (key) => {\n    if (window.localStorage){\n      window.localStorage.removeItem(key);\n      return true;\n    }\n    return false;\n  }\n  setLocalStorage = (key,value,stringify=false) => {\n    if (window.localStorage){\n      try {\n        value = stringify ? JSON.stringify(value) : value;\n        window.localStorage.setItem(key,value);\n        return true;\n      } catch (error) {\n        // this.customLog('setLocalStorage',error);\n        window.localStorage.removeItem(key);\n      }\n    }\n    return false;\n  }\n  checkRebalance = async (tokenConfig) => {\n    if (!tokenConfig && this.props.tokenConfig){\n      tokenConfig = this.props.tokenConfig;\n    }\n    if (!tokenConfig){\n      return false;\n    }\n\n    const lastAllocationsPromises = [];\n    const allocations = await this.genericContractCall(tokenConfig.idle.token, 'getAllocations');\n\n    if (!allocations || !allocations.length){\n      return false;\n    }\n\n    for (let protocolIndex=0;protocolIndex<allocations.length;protocolIndex++){\n      const lastAllocationsPromise = new Promise( async (resolve, reject) => {\n        try {\n          const lastAllocations = await this.genericContractCall(tokenConfig.idle.token, 'lastAllocations',[protocolIndex]);\n          resolve(lastAllocations);\n        } catch (error) {\n          console.log(error);\n          resolve(null);\n        }\n      });\n      lastAllocationsPromises.push(lastAllocationsPromise);\n    }\n\n    const newAllocations = await Promise.all(lastAllocationsPromises);\n\n    if (!allocations || !newAllocations){\n      return true;\n    }\n\n    const diff = allocations.filter( (alloc,index) => alloc !== newAllocations[index] );\n\n    return diff.length>0;\n  }\n  checkMigration = async (tokenConfig,account) => {\n\n    if (!tokenConfig || !account){\n      return false;\n    }\n\n    let migrationEnabled = false;\n    let oldContractBalance = null;\n    let oldContractTokenDecimals = null;\n    // let migrationContractApproved = false;\n    let oldContractBalanceFormatted = null;\n\n    // Check migration contract enabled and balance\n    if (tokenConfig.migration && tokenConfig.migration.enabled){\n      const oldContractName = tokenConfig.migration.oldContract.name;\n      const oldContract = this.getContractByName(oldContractName);\n      const migrationContract = this.getContractByName(tokenConfig.migration.migrationContract.name);\n\n      // this.customLog(oldContractName,tokenConfig.migration.migrationContract.name);\n\n      if (oldContract && migrationContract){\n        // Get old contract token decimals\n        oldContractTokenDecimals = await this.getTokenDecimals(oldContractName);\n\n        // this.customLog('Migration - token decimals',oldContractTokenDecimals ? oldContractTokenDecimals.toString() : null);\n\n        // Check migration contract approval\n        // migrationContractApproved = await this.checkMigrationContractApproved();\n\n        // this.customLog('Migration - approved',migrationContractApproved ? migrationContractApproved.toString() : null);\n\n        // Check old contractBalance\n        oldContractBalance = await this.getContractBalance(oldContractName,account);\n\n        if (oldContractBalance){\n          oldContractBalanceFormatted = this.fixTokenDecimals(oldContractBalance,oldContractTokenDecimals);\n          // Enable migration if old contract balance if greater than 0\n          migrationEnabled = this.BNify(oldContractBalance).gt(0);\n        }\n\n        // this.customLog('Migration - oldContractBalance',oldContractName,account,oldContractBalance,oldContractBalanceFormatted);\n      }\n    }\n\n    // Set migration contract balance\n    return {\n      migrationEnabled,\n      oldContractBalance,\n      oldContractTokenDecimals,\n      oldContractBalanceFormatted,\n    };\n  }\n\n  getContractEvents = async (contractName, eventName, params = {}) => {\n    return await this.getContractPastEvents(contractName, eventName, params);\n  }\n\n  estimateMethodGasUsage = async (contractName, methodName, methodParams = [], account = null) => {\n    account = account || this.props.account;\n    if (!account){\n      return null;\n    }\n    const contract = this.getContractByName(contractName);\n    if (contract && contract.methods[methodName]){\n      const functionCall = contract.methods[methodName](...methodParams);\n\n      let gasPrice = null;\n      let gasLimit = null;\n      \n      try {\n        [\n          gasPrice,\n          gasLimit\n        ] = await Promise.all([\n          this.props.web3.eth.getGasPrice(),\n          functionCall.estimateGas({from: account})\n        ]);\n      } catch (error) {\n\n      }\n\n      if (gasPrice && gasLimit){\n        return this.fixTokenDecimals(this.fixTokenDecimals(gasPrice,9).times(gasLimit),9);\n      }\n    }\n\n    return this.BNify(0);\n  }\n\n  executeMetaTransaction = async (contract, userAddress, signedParameters, callback, callback_receipt) => {\n    try {\n\n      // const gasLimit = await contract.methods\n      //   .executeMetaTransaction(userAddress, ...signedParameters)\n      //   .estimateGas({ from: userAddress });\n\n      // this.customLog(gasLimit);\n\n      const gasPrice = await this.props.web3.eth.getGasPrice();\n\n      const tx = contract.methods\n        .executeMetaTransaction(userAddress, ...signedParameters)\n        .send({\n          from: userAddress,\n          gasPrice\n          // gasLimit\n        });\n\n      tx.on(\"transactionHash\", function(hash) {\n        this.customLog(`Transaction sent by relayer with hash ${hash}`);\n        callback_receipt()\n      }).once(\"confirmation\", function(confirmationNumber, receipt) {\n        this.customLog(\"Transaction confirmed on chain\",receipt);\n        callback_receipt(receipt);\n      });\n    } catch (error) {\n      this.customLog(error);\n      callback(null,error);\n    }\n  }\n\n  getSignatureParameters_v4 = signature => {\n    if (!this.props.web3.utils.isHexStrict(signature)) {\n      throw new Error(\n        'Given value \"'.concat(signature, '\" is not a valid hex string.')\n      );\n    }\n    var r = signature.slice(0, 66);\n    var s = \"0x\".concat(signature.slice(66, 130));\n    var v = \"0x\".concat(signature.slice(130, 132));\n    v = this.props.web3.utils.hexToNumber(v);\n    if (![27, 28].includes(v)) v += 27;\n    return {\n      r: r,\n      s: s,\n      v: v\n    };\n  };\n\n  constructMetaTransactionMessage = (nonce, chainId, functionSignature, contractAddress) => {\n    return ethereumjsABI.soliditySHA3(\n      [\"uint256\",\"address\",\"uint256\",\"bytes\"],\n      [nonce, contractAddress, chainId, toBuffer(functionSignature)]\n    );\n  }\n\n  checkBiconomyLimits = async (userAddress) => {\n    const biconomyInfo = this.getGlobalConfig(['network','providers','biconomy']);\n    const res = await this.makeRequest(`${biconomyInfo.endpoints.limits}?userAddress=${userAddress}&apiId=${biconomyInfo.params.apiId}`,null,{\n      headers:{\n        'x-api-key':biconomyInfo.params.apiKey\n      }\n    });\n\n    if (res && res.data){\n      return res.data;\n    }\n\n    return null;\n  }\n\n  sendTxWithPermit = async (contractName,methodName,methodParams,nonce,callback,callback_receipt) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      callback(null,'Contract not found');\n      return false;\n    }\n\n    if (!contract.methods[methodName]){\n      callback(null,'Method not found');\n      return false;\n    }\n\n    const functionSignature = contract.methods[methodName](...methodParams).encodeABI();\n\n    try{\n      const userAddress = this.props.account;\n      const chainId = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n      const messageToSign = this.constructMetaTransactionMessage(nonce, chainId, functionSignature, contract._address);\n\n      const signature = await this.props.web3.eth.personal.sign(\n        \"0x\" + messageToSign.toString(\"hex\"),\n        userAddress\n      );\n\n      const { r, s, v } = this.getSignatureParameters_v4(signature);\n\n      this.contractMethodSendWrapper(contractName, methodName, methodParams.concat([nonce, r, s, v]), callback, callback_receipt);\n\n      return true;\n    } catch (error) {\n      callback(null,error);\n      return false;\n    }\n  }\n\n  buildBiconomyErc20ForwarderTx = async (contractName,tokenAddress,permitType,callData,gasLimit) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      return false;\n    }\n\n    // console.log('Build Tx ',contract._address,tokenAddress,Number(gasLimit),callData);\n\n    const buildParams = {\n      permitType,\n      data:callData,\n      token:tokenAddress,\n      to:contract._address,\n      txGas:parseInt(gasLimit)\n    };\n\n    // console.log('buildBiconomyErc20ForwarderTx',buildParams);\n\n    //Create the call data that the recipient contract will receive\n    const tx = await this.props.erc20ForwarderClient.buildTx(buildParams);\n\n    return tx;\n  }\n\n  getTransactionReceipt = async (hash) => {\n    return await (new Promise( async (resolve, reject) => {\n      this.props.web3.eth.getTransactionReceipt(hash,(err,tx)=>{\n        if (err){\n          reject(err);\n        }\n        resolve(tx);\n      });\n    }));\n  }\n\n  sendBiconomyTxWithErc20Forwarder = async (req,metaInfo,callback,callback_receipt) => {\n\n    let transactionHash = null;\n\n    try {\n      const txResponse = await this.props.erc20ForwarderClient.permitAndSendTxEIP712({req,metaInfo});\n      transactionHash = txResponse.txHash;\n      // console.log('permitAndSendTxEIP712',transactionHash);\n    } catch (error) {\n      // console.log('permitAndSendTxEIP712 ERROR',error);\n      callback(null,true);\n      return false;\n    }\n\n    if (!transactionHash){\n      // console.log('!transactionHash ERROR');\n      callback(null,true);\n      return false;\n    }\n    \n    const tx = {\n      method:'mintIdleToken',\n      transactionHash\n    };\n    // console.log('sendBiconomyTxWithErc20Forwarder - TX',tx);\n    callback_receipt(tx);\n\n    // fetch mined transaction receipt \n    const fetchReceiptIntervalId = window.setInterval(()=> {\n      this.props.web3.eth.getTransactionReceipt(transactionHash, (err, receipt)=> {\n        // console.log('sendBiconomyTxWithErc20Forwarder - RECEIPT',transactionHash,err,receipt);\n        if(!err && receipt){\n          window.clearInterval(fetchReceiptIntervalId);\n          tx.txReceipt = receipt;\n          tx.status = !err && receipt.status ? 'success' : 'error';\n\n          callback(tx,err);\n\n          if (typeof window.updateTransaction === 'function'){\n            window.updateTransaction(tx,transactionHash,tx.status,null);\n          }\n        }\n      });\n    }, 3000);\n\n    return true;\n  }\n\n  sendBiconomyTxWithPersonalSign = async (contractName,functionSignature,callback,callback_receipt) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      callback(null,'Contract not found');\n      return false;\n    }\n\n    try{\n      const userAddress = this.props.account;\n      const nonce = await contract.methods.getNonce(userAddress).call();\n      const chainId = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n      const messageToSign = this.constructMetaTransactionMessage(nonce, chainId, functionSignature, contract._address);\n\n      const signature = await this.props.web3.eth.personal.sign(\n        \"0x\" + messageToSign.toString(\"hex\"),\n        userAddress\n      );\n\n      const { r, s, v } = this.getSignatureParameters_v4(signature);\n\n      this.contractMethodSendWrapper(contractName, 'executeMetaTransaction', [userAddress, functionSignature, r, s, v], callback, callback_receipt);\n\n      return true;\n    } catch (error) {\n      console.error(error);\n      callback(null,error);\n      return false;\n    }\n  }\n\n  signPermitEIP2612 = async (contractAddress, erc20Name, owner, spender, value, nonce, deadline, chainId) => {\n    if (chainId === undefined) {\n      const result = await this.props.web3.eth.getChainId();\n      chainId = parseInt(result);\n    }\n\n    const domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const permit = [\n      { name: \"owner\", type: \"address\" },\n      { name: \"spender\", type: \"address\" },\n      { name: \"value\", type: \"uint256\" },\n      { name: \"nonce\", type: \"uint256\" },\n      { name: \"deadline\", type: \"uint256\" },\n    ];\n\n    const domainData = {\n      version: \"2\",\n      name: erc20Name,\n      chainId: chainId,\n      verifyingContract: contractAddress\n    };\n\n    const message = {\n      owner,\n      spender,\n      value,\n      nonce,\n      deadline,\n    };\n\n    const data = JSON.stringify({\n      types: {\n        EIP712Domain: domain,\n        Permit: permit,\n      },\n      primaryType: \"Permit\",\n      domain: domainData,\n      message: message\n    });\n\n    return new Promise((resolve, reject) => {\n      this.props.web3.currentProvider.send({\n        jsonrpc: '2.0',\n        id: Date.now().toString().substring(9),\n        method: \"eth_signTypedData_v4\",\n        params: [owner, data],\n        from: owner\n      }, (error, res) => {\n        if (error) {\n          return reject(error);\n        }\n\n        resolve(res.result);\n      });\n    });\n  }\n\n  signPermit = async (baseContractName, holder, spenderContractName, addToNonce=0, value=null) => {\n    const baseContract = this.getContractByName(baseContractName);\n    const spenderContract = this.getContractByName(spenderContractName);\n\n    if (!baseContract || !spenderContract){\n      return false;\n    }\n\n    const result = await this.props.web3.eth.net.getId();\n    let chainId = parseInt(result);\n\n    const EIP712Domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const permitConfig = this.getGlobalConfig(['permit',baseContractName]);\n\n    // console.log('permitConfig',permitConfig);\n\n    const expiry = Math.round(new Date().getTime() / 1000 + 3600);\n    let nonce = permitConfig.nonceMethod ? await baseContract.methods[permitConfig.nonceMethod](holder).call() : null;\n    if (addToNonce>0){\n      nonce = parseInt(nonce)+parseInt(addToNonce);\n    }\n    nonce = nonce.toString();\n\n    const Permit = permitConfig.type;\n    const EIPVersion = permitConfig.EIPVersion;\n\n    const spender = spenderContract._address;\n    const verifyingContract = baseContract._address;\n\n    const permitName = permitConfig.name || baseContractName;\n\n    const domain = {\n      chainId,\n      name: permitName,\n      verifyingContract,\n      version: permitConfig.version.toString() || '1',\n    };\n\n    let message = {};\n\n    switch (EIPVersion){\n      case 2612:\n        const owner = holder;\n        const deadline = expiry;\n        // Unlimited allowance\n        value = value || this.integerValue(this.BNify(2).pow(256).minus(1));\n        message = {\n          value,\n          nonce,\n          owner,\n          spender,\n          deadline\n        };\n      break;\n      default:\n        message = {\n          holder,\n          nonce,\n          expiry,\n          spender,\n          allowed: true,\n        };\n      break;\n    }\n\n    const data = JSON.stringify({\n      domain,\n      message,\n      types: {\n        Permit,\n        EIP712Domain\n      },\n      primaryType: 'Permit',\n    });\n\n    // console.log('Permit',JSON.parse(data));\n\n    return new Promise((resolve, reject) => {\n      this.props.web3.currentProvider.send({\n        from: holder,\n        jsonrpc: '2.0',\n        params: [holder, data],\n        method: 'eth_signTypedData_v4',\n        id: Date.now().toString().substring(9),\n      }, (error, response) => {\n        if (error || (response && response.error)) {\n          return resolve(null);\n        } else if (response && response.result) {\n          const signedParameters = this.getSignatureParameters_v4(response.result);\n          signedParameters.nonce = nonce;\n          signedParameters.expiry = expiry;\n          return resolve(signedParameters);\n        }\n      });\n    });\n  }\n\n  sendTxWithPermit = async (baseContractName, holder, spenderContractName, methodName, methodParams, callback, callback_receipt, callback_permit=null) => {\n\n    const baseContract = this.getContractByName(baseContractName);\n    const spenderContract = this.getContractByName(spenderContractName);\n\n    if (!baseContract || !spenderContract){\n      callback(null,'Contract not found');\n      return false;\n    }\n\n    const signedParameters = await this.signPermit(baseContractName, holder, spenderContractName);\n\n    if (signedParameters){\n      const { expiry, nonce, r, s, v } = signedParameters;\n      const permitParams = [expiry, v, r, s];\n\n      const methodAbi = spenderContract._jsonInterface.find( f => f.name === methodName );\n      const useNonce = methodAbi ? methodAbi.inputs.find( i => i.name === 'nonce' ) : true;\n      if (!isNaN(parseInt(nonce)) && useNonce){\n        permitParams.unshift(nonce);\n      }\n      const params = methodParams.concat(permitParams);\n      this.contractMethodSendWrapper(spenderContractName, methodName, params, callback, callback_receipt);\n    } else {\n      callback(null,'Permit cancelled');\n    }\n  }\n\n  sendSignedTx = async (contractName,contractAddress,functionSignature,callback,callback_receipt) => {\n\n    const EIP712Domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const MetaTransaction = [\n      { name: \"nonce\", type: \"uint256\" },\n      { name: \"from\", type: \"address\" },\n      { name: \"functionSignature\", type: \"bytes\" }\n    ];\n\n    const chainId = await this.props.web3.eth.getChainId();\n\n    const domainData = {\n      chainId,\n      version: '1',\n      name: contractName,\n      verifyingContract: contractAddress\n    };\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      callback(null,'Contract not found');\n      return false\n    }\n\n    let userAddress = this.props.account;\n    let nonce = await contract.methods.getNonce(userAddress).call();\n    let message = {};\n    message.nonce = nonce;\n    message.from = userAddress;\n    message.functionSignature = functionSignature;\n\n    const dataToSign = JSON.stringify({\n      types: {\n        EIP712Domain,\n        MetaTransaction\n      },\n      domain: domainData,\n      primaryType: \"MetaTransaction\",\n      message\n    });\n\n    // this.customLog('dataToSign',dataToSign);\n\n    this.props.web3.currentProvider.send(\n      {\n        jsonrpc: \"2.0\",\n        id: 999999999999,\n        from: userAddress,\n        method: \"eth_signTypedData_v4\",\n        params: [userAddress, dataToSign]\n      },\n      (error, response) => {\n        if (error || (response && response.error)) {\n          return callback(null,error);\n        } else if (response && response.result) {\n          const signedParameters = this.getSignatureParameters_v4(response.result);\n          const { r, s, v } = signedParameters;\n            \n          this.contractMethodSendWrapper(contractName, 'executeMetaTransaction', [userAddress, functionSignature, r, s, v], callback, callback_receipt);\n        }\n      }\n    );\n  }\n\n  checkTokenApproved = async (contractName,contractAddr,walletAddr) => {\n    const [\n      balance,\n      allowance\n    ] = await Promise.all([\n      this.getTokenBalance(contractName,walletAddr,false),\n      this.getAllowance(contractName,contractAddr,walletAddr)\n    ]);\n    this.customLog('checkTokenApproved',contractName,this.BNify(allowance).toFixed(),this.BNify(balance).toFixed(),(allowance && this.BNify(allowance).gte(this.BNify(balance))));\n    return allowance && this.BNify(allowance).gte(this.BNify(balance));\n  }\n  getAllowance = async (contractName,contractAddr,walletAddr) => {\n    if (!contractName || !contractAddr || !walletAddr){\n      return false;\n    }\n    this.customLog('getAllowance',contractName,contractAddr,walletAddr);\n    return await this.genericContractCall(\n      contractName, 'allowance', [walletAddr, contractAddr]\n    );\n  }\n  contractMethodSendWrapperWithValue = (contractName,methodName,params,value,callback,callback_receipt,txData) => {\n    this.props.contractMethodSendWrapper(contractName, methodName, params, value, (tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    }, null, txData);\n  }\n  contractMethodSendWrapper = (contractName,methodName,params,callback,callback_receipt,txData) => {\n    this.props.contractMethodSendWrapper(contractName, methodName, params, null, (tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    }, null, txData);\n  }\n  disableERC20 = (contractName,address,callback,callback_receipt) => {\n    this.props.contractMethodSendWrapper(contractName, 'approve', [\n      address,\n      this.props.web3.utils.toTwosComplement('0') // max uint solidity\n    ],null,(tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    });\n  }\n  enableERC20 = (contractName,address,callback,callback_receipt) => {\n    this.props.contractMethodSendWrapper(contractName, 'approve', [\n      address,\n      this.props.web3.utils.toTwosComplement('-1') // max uint solidity\n    ],null,(tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    });\n  }\n  getTrancheStakedBalance = async (contractName,walletAddr,decimals=null) => {\n    // Check for cached data\n    const cachedDataKey = `trancheStakedBalance_${contractName}_${walletAddr}_${decimals}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let stakedBalance = await this.genericContractCall(contractName,'usersStakes',[walletAddr]);\n    if (stakedBalance){\n      if (decimals){\n        stakedBalance = this.fixTokenDecimals(stakedBalance,decimals);\n      }\n      stakedBalance = this.BNify(stakedBalance);\n\n      if (!stakedBalance.isNaN()){\n        return this.setCachedDataWithLocalStorage(cachedDataKey,stakedBalance,30);\n      }\n    }\n    return this.BNify(0);\n  }\n  getTrancheStakingRewards = async (account,trancheConfig) => {\n    const stakingRewards = {};\n    await this.asyncForEach(trancheConfig.CDORewards.stakingRewards, async (tokenConfig) => {\n      const tokenGlobalConfig = this.getGlobalConfig(['stats','tokens',tokenConfig.token]);\n      tokenConfig = {...tokenConfig,...tokenGlobalConfig};\n      const tokenAmount = await this.genericContractCallCached(trancheConfig.CDORewards.name,'expectedUserReward',[account,tokenConfig.address]);\n      stakingRewards[tokenConfig.token] = this.fixTokenDecimals(tokenAmount,tokenConfig.decimals);\n    });\n\n    // console.log('getTrancheStakingRewards',stakingRewards);\n\n    return stakingRewards;\n  }\n  loadTrancheFieldRaw = async (field,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens=true) => {\n    return await this.loadTrancheField(field,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens,false);\n  }\n  loadTrancheField = async (field,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account=null,addGovTokens=true,formatValue=true,addTokenName=true) => {\n    let output = null;\n    const maxPrecision = (fieldProps && fieldProps.maxPrecision) || 5;\n    const decimals = (fieldProps && fieldProps.decimals) || (this.props.isMobile ? 2 : 3);\n    const minPrecision = (fieldProps && fieldProps.minPrecision) || (this.props.isMobile ? 3 : 4);\n    const tokenName = this.getGlobalConfig(['stats','tokens',token,'label']) || this.capitalize(token);\n\n    const strategyConfig = tokenConfig.Strategy;\n    const idleStrategyAddress = await this.genericContractCallCached(tokenConfig.CDO.name,'strategy'); \n    if (idleStrategyAddress){\n      await this.props.initContract(strategyConfig.name,idleStrategyAddress,strategyConfig.abi);\n    }\n\n    const idleGovTokenConfig = this.getGlobalConfig(['govTokens','IDLE']);\n    switch (field){\n      case 'protocolName':\n        output = (this.getGlobalConfig(['stats','protocols',protocol,'label']) || this.capitalize(protocol)).toUpperCase();\n      break;\n      case 'tokenName':\n        output = tokenName;\n      break;\n      case 'trancheType':\n        output = (this.getGlobalConfig(['tranches',tranche,'baseName']) || '').toUpperCase();\n        // console.log('trancheType',tranche,trancheConfig,output);\n      break;\n      case 'pool':\n        let poolSize = await this.genericContractCallCached(tokenConfig.CDO.name,'getContractValue');\n        if (!this.BNify(poolSize).isNaN()){\n          output = this.fixTokenDecimals(poolSize,tokenConfig.CDO.decimals);\n          if (formatValue){\n            output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision);\n          }\n        }\n      break;\n      case 'seniorPool':\n        output = await this.loadTrancheField('tranchePool',fieldProps,protocol,token,tranche,tokenConfig,tokenConfig.AA,account,addGovTokens);\n      break;\n      case 'juniorPool':\n        output = await this.loadTrancheField('tranchePool',fieldProps,protocol,token,tranche,tokenConfig,tokenConfig.BB,account,addGovTokens);\n      break;\n      case 'seniorApy':\n        output = await this.loadTrancheField('trancheApy',fieldProps,protocol,token,tranche,tokenConfig,tokenConfig.AA,account,addGovTokens);\n      break;\n      case 'juniorApy':\n        output = await this.loadTrancheField('trancheApy',fieldProps,protocol,token,tranche,tokenConfig,tokenConfig.BB,account,addGovTokens);\n      break;\n      case 'tranchePool':\n        let [\n          totalSupply,\n          virtualPrice\n        ] = await Promise.all([\n          this.getTokenTotalSupply(trancheConfig.name,'latest',180),\n          this.loadTrancheField('tranchePrice',fieldProps,protocol,token,tranche,tokenConfig,tokenConfig.BB,account,addGovTokens)\n        ]);\n\n\n        output = this.BNify(0);\n        if (!this.BNify(virtualPrice).isNaN() && !this.BNify(totalSupply).isNaN()){\n          output = this.fixTokenDecimals(totalSupply,tokenConfig.CDO.decimals).times(virtualPrice);\n        }\n        if (formatValue){\n          output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision)+(addTokenName ? ` ${tokenName}` : '');\n        }\n        // console.log('tranchePool',tokenConfig.CDO.name,totalSupply,virtualPrice,output);\n      break;\n      case 'trancheDeposited':\n        const deposited = await this.getAmountDepositedTranche(tokenConfig,trancheConfig,account);\n\n        output = output || this.BNify(0);\n\n        output = this.BNify(deposited);\n        if (output.gt(0)){\n          if (formatValue){\n            output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision)+(addTokenName ? ` ${tokenName}` : '');\n          }\n        } else {\n          output = formatValue ? '-' : null;\n        }\n      break;\n      case 'trancheFee':\n        output = await this.genericContractCallCached(tokenConfig.CDO.name,'fee');\n        if (output){\n          output = this.BNify(output).div(this.BNify(100000));\n        }\n      break;\n      case 'tranchePrice':\n        output = await this.genericContractCall(tokenConfig.CDO.name,'virtualPrice',[trancheConfig.address]);\n        if (output){\n          output = this.fixTokenDecimals(output,trancheConfig.decimals);\n        }\n      break;\n      case 'trancheStaked':\n        let [\n          staked1,\n          lastPrice1\n        ] = await Promise.all([\n          this.getTrancheStakedBalance(trancheConfig.CDORewards.name,account,trancheConfig.CDORewards.decimals),\n          this.loadTrancheField(`tranchePrice`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens)\n        ]);\n\n\n        output = formatValue ? '-' : null;\n        if (staked1 && lastPrice1){\n          output = this.BNify(staked1).times(lastPrice1);\n          // console.log('trancheStaked',staked1.toString(),lastPrice1.toString(),output.toString());\n          if (formatValue){\n            output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision)+(addTokenName ? ` ${tokenName}` : '');\n          }\n        }\n      break;\n      case 'trancheRedeemable':\n        let [\n          deposited1,\n          lastPrice\n        ] = await Promise.all([\n          this.getTokenBalance(trancheConfig.name,account),\n          this.loadTrancheFieldRaw(`tranchePrice`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens)\n        ]);\n\n        output = formatValue ? '-' : null;\n        if (deposited1 && lastPrice){\n          output = this.BNify(deposited1).times(lastPrice);\n          if (formatValue){\n            output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision)+(addTokenName ? ` ${tokenName}` : '');\n          }\n        }\n      break;\n      case 'trancheRedeemableWithStaked':\n        let [\n          redeemable1,\n          staked2\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheRedeemable`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens),\n          this.loadTrancheFieldRaw(`trancheStaked`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens)\n        ]);\n\n        output = formatValue ? '-' : null;\n        if (redeemable1 && staked2){\n          output = this.BNify(redeemable1).plus(staked2);\n          if (formatValue){\n            output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision)+(addTokenName ? ` ${tokenName}` : '');\n          }\n        }\n      break;\n      case 'earningsCounter':\n        let [\n          earningsStart,\n          trancheApy2,\n          deposited3\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`earnings`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens),\n          this.loadTrancheFieldRaw(`trancheApy`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens),\n          this.loadTrancheFieldRaw(`trancheDeposited`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens),\n        ]);\n\n\n        if (deposited3 && earningsStart && trancheApy2){\n          const earningsEnd = deposited3.gt(0) ? deposited3.times(trancheApy2.div(100)).plus(earningsStart) : 0;\n\n          output = {\n            earningsEnd,\n            earningsStart\n          };\n        }\n      break;\n      case 'feesCounter':\n        let [\n          trancheFee,\n          earningsCounter\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheFee`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens),\n          this.loadTrancheFieldRaw(`earningsCounter`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens),\n        ]);\n\n        if (trancheFee && earningsCounter){\n          const feesStart = earningsCounter.earningsStart.times(trancheFee);\n          const feesEnd =  earningsCounter.earningsEnd.times(trancheFee);\n\n          // console.log('feesCounter',feesStart.toString(),feesEnd.toString());\n\n          output = {\n            feesEnd,\n            feesStart\n          };\n        }\n      break;\n      case 'earnings':\n        const [\n          deposited4,\n          redeemable3\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheDeposited`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens),\n          this.loadTrancheFieldRaw(`trancheRedeemableWithStaked`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens)\n        ]);\n\n        if (deposited4 && redeemable3){\n          output = this.BNify(redeemable3).minus(deposited4);\n          if (formatValue){\n            output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision)+(addTokenName ? ` ${tokenName}` : '');\n          }\n        }\n      break;\n      case 'earningsPerc':\n        const [\n          deposited2,\n          redeemable2\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheDeposited`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens),\n          this.loadTrancheFieldRaw(`trancheRedeemableWithStaked`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens)\n        ]);\n        output = redeemable2.div(deposited2).minus(1).times(100);\n        if (formatValue){\n          output = output.toFixed(decimals)+'%';\n        }\n      break;\n      case 'trancheApy':\n        let trancheApy = await this.genericContractCallCached(tokenConfig.CDO.name,'getApr',[trancheConfig.address]);\n        // console.log('trancheApy',tokenConfig,trancheConfig,output);\n        if (trancheApy){\n          output = this.fixTokenDecimals(trancheApy,tokenConfig.CDO.decimals);\n          output = this.apr2apy(output.div(100)).times(100);\n          if (formatValue){\n            output = output.toFixed(2)+'%';\n          }\n        }\n      break;\n      case 'realizedApy':\n        const [\n          firstDepositTx,\n          earningsPerc\n        ] = await Promise.all([\n          this.getTrancheFirstDepositTx(tokenConfig,trancheConfig,account),\n          this.loadTrancheFieldRaw(`earningsPerc`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens)\n        ]);\n\n        // console.log('realizedApy',earningsPerc.toString(),firstDepositTx);\n\n        if (earningsPerc && firstDepositTx){\n          const secondsFromFirstTx = parseInt(Date.now()/1000)-parseInt(firstDepositTx.timeStamp);\n          output = this.BNify(earningsPerc).times(31536000).div(secondsFromFirstTx);\n\n          // console.log('realizedApy2',firstDepositTx,earningsPerc.toString(),output.toString());\n\n          if (formatValue){\n            output = output.toFixed(2)+'%';\n          }\n        }\n      break;\n      case 'trancheIDLELastHarvest':\n      case 'trancheIDLEDistribution':\n        const rewardsTokensInfo = await this.getTrancheRewardTokensInfo(tokenConfig,trancheConfig);\n        if (rewardsTokensInfo && rewardsTokensInfo.IDLE){\n          if (field === 'trancheIDLEDistribution'){\n            output = this.fixDistributionSpeed(rewardsTokensInfo.IDLE.tokensPerSecond,idleGovTokenConfig.distributionFrequency);\n            if (formatValue){\n              output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision)+` IDLE/${idleGovTokenConfig.distributionFrequency}`\n            }\n          } else {\n            output = rewardsTokensInfo.IDLE.lastAmount;\n            if (formatValue){\n              output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision)+` IDLE (last harvest)`\n            }\n          }\n        }\n      break;\n      case 'AAIDLEDistribution':\n        output = this.abbreviateNumber('1234',decimals,maxPrecision,minPrecision)+` IDLE/day`;\n      break;\n      case 'BBIDLEDistribution':\n        output = this.abbreviateNumber('4321',decimals,maxPrecision,minPrecision)+` IDLE/day`;\n      break;\n      case 'govTokens':\n      case 'autoFarming':\n      case 'stakingRewards':\n        output = {};\n        const [\n          rewardsTokens,\n          incentiveTokens\n        ] = await Promise.all([\n          this.genericContractCall(strategyConfig.name,'getRewardTokens'),\n          this.genericContractCall(tokenConfig.CDO.name,'getIncentiveTokens')\n        ]);\n\n        const govTokens = field === 'govTokens' ? rewardsTokens : (field === 'autoFarming' && rewardsTokens ? rewardsTokens.filter( rewardTokenAddr => incentiveTokens && !incentiveTokens.map( addr => addr.toLowerCase() ).includes(rewardTokenAddr.toLowerCase()) ) : incentiveTokens);\n\n        // console.log(field,tokenConfig,rewardsTokens,incentiveTokens,govTokens);\n\n        if (govTokens){\n          govTokens.forEach( govTokenAddress => {\n            const govTokenConfig = this.getGovTokenConfigByAddress(govTokenAddress);\n            if (govTokenConfig && !govTokenConfig.enabled){\n              return;\n            }\n            output[govTokenConfig.token] = govTokenConfig;\n          });\n        }\n      break;\n      default:\n      break;\n    }\n\n    // console.log('loadTrancheField',field,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens,formatValue);\n\n    return output;\n  }\n  loadAssetField = async (field,token,tokenConfig,account,addGovTokens=true,addCurveApy=false) => {\n\n    let output = null;\n    const govTokens = this.getGlobalConfig(['govTokens']);\n\n    // Remove gov tokens for risk adjusted strategy\n    const strategyInfo = this.getGlobalConfig(['strategies',this.props.selectedStrategy]);\n    if (addGovTokens && strategyInfo && typeof strategyInfo.addGovTokens !== 'undefined'){\n      addGovTokens = strategyInfo.addGovTokens;\n    }\n\n    // Take available tokens for gov tokens fields\n    let govTokenAvailableTokens = null;\n    if (this.props.selectedStrategy && this.props.selectedToken){\n      const newTokenConfig = this.props.availableStrategies[this.props.selectedStrategy][this.props.selectedToken];\n      if (newTokenConfig){\n        govTokenAvailableTokens = {};\n        govTokenAvailableTokens[newTokenConfig.token] = newTokenConfig;\n      }\n    } else if (!Object.keys(govTokens).includes(token)){\n      govTokenAvailableTokens = {};\n      govTokenAvailableTokens[token] = tokenConfig;\n    }\n\n    switch (field){\n      case 'amountLentCurve':\n        const [\n          curveAvgSlippage,\n          curveAvgBuyPrice,\n          curveTokenBalance,\n        ] = await Promise.all([\n          this.getCurveAvgSlippage(),\n          this.getCurveAvgBuyPrice([],account),\n          this.getCurveTokenBalance(account,true),\n        ]);\n\n        if (curveAvgBuyPrice && curveTokenBalance){\n          output = this.BNify(curveTokenBalance).times(curveAvgBuyPrice);\n          if (curveAvgSlippage){\n            output = output.minus(output.times(curveAvgSlippage));\n          }\n          // this.customLog('amountLentCurve',curveTokenBalance.toFixed(6),curveAvgBuyPrice.toFixed(6),curveAvgSlippage.toString(),output.toFixed(6));\n        }\n      break;\n      case 'earningsPercCurve':\n        let [amountLentCurve1,redeemableBalanceCurve] = await Promise.all([\n          this.loadAssetField('amountLentCurve',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalanceCurve',token,tokenConfig,account)\n        ]);\n\n        if (amountLentCurve1 && redeemableBalanceCurve && amountLentCurve1.gt(0) && redeemableBalanceCurve.gt(0)){\n          output = redeemableBalanceCurve.div(amountLentCurve1).minus(1).times(100);\n          // this.customLog('earningsPercCurve',redeemableBalanceCurve.toFixed(6),amountLentCurve1.toFixed(6),output.toFixed(6));\n        }\n      break;\n      case 'curveApy':\n        output = await this.getCurveAPY();\n      break;\n      case 'curveAvgSlippage':\n        output = await this.getCurveAvgSlippage();\n      break;\n      case 'redeemableBalanceCurve':\n        output = await this.getCurveRedeemableIdleTokens(account);\n        // this.customLog('earningsPercCurve',output.toFixed(6));\n      break;\n      case 'redeemableBalanceCounterCurve':\n        let [\n          curveApy,\n          amountLentCurve,\n          redeemableBalanceCurveStart\n        ] = await Promise.all([\n          this.loadAssetField('curveApy',token,tokenConfig,account),\n          this.loadAssetField('amountLentCurve',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalanceCurve',token,tokenConfig,account),\n        ]);\n\n        let redeemableBalanceCurveEnd = null;\n\n        if (redeemableBalanceCurveStart && curveApy && amountLentCurve){\n          const earningPerYear = amountLentCurve.times(curveApy.div(100));\n          redeemableBalanceCurveEnd = redeemableBalanceCurveStart.plus(earningPerYear);\n          // this.customLog('redeemableBalanceCounterCurve',amountLentCurve.toFixed(6),redeemableBalanceCurveStart.toFixed(6),redeemableBalanceCurveEnd.toFixed(6));\n        }\n\n        output = {\n          redeemableBalanceCurveEnd,\n          redeemableBalanceCurveStart\n        };\n      break;\n      case 'earningsPerc':\n        let [amountLent1,redeemableBalance1] = await Promise.all([\n          this.loadAssetField('amountLent',token,tokenConfig,account,false),\n          this.loadAssetField('redeemableBalance',token,tokenConfig,account,false)\n        ]);\n\n        if (amountLent1 && redeemableBalance1 && amountLent1.gt(0)){\n          output = redeemableBalance1.div(amountLent1).minus(1).times(100);\n        }\n      break;\n      case 'daysFirstDeposit':\n        const depositTimestamp = await this.loadAssetField('depositTimestamp',token,tokenConfig,account);\n        if (depositTimestamp){\n          const currTimestamp = parseInt(Date.now()/1000);\n          output = (currTimestamp-depositTimestamp)/86400;\n        }\n      break;\n      case 'pool':\n        if (Object.keys(govTokens).includes(token)){\n          output = await this.getGovTokenPool(token, govTokenAvailableTokens);\n        } else {\n          output = await this.getTokenPool(tokenConfig,addGovTokens);\n        }\n      break;\n      case 'userDistributionSpeed':\n        switch (token){\n          case 'COMP':\n            output = await this.getCompUserDistribution(account,govTokenAvailableTokens);\n          break;\n          case 'stkAAVE':\n            output = await this.getStkAaveUserDistribution(account,govTokenAvailableTokens);\n          break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getUserDistribution(account,govTokenAvailableTokens);\n          break;\n          default:\n          break;\n        }\n        if (output && !this.BNify(output).isNaN()){\n          output = this.BNify(output).div(1e18);\n          if (output){\n            output = this.fixDistributionSpeed(output,tokenConfig.distributionFrequency,tokenConfig.distributionMode);\n          }\n        }\n      break;\n      case 'idleDistribution':\n        const idleGovToken = this.getIdleGovToken();\n        const tokenName = this.getGlobalConfig(['governance','props','tokenName']);\n        const govTokenConfig = this.getGlobalConfig(['govTokens',tokenName]);\n        output = await idleGovToken.getSpeed(tokenConfig.idle.address);\n\n        if (output){\n\n          output = this.fixTokenDecimals(output,govTokenConfig.decimals);\n\n          const blocksPerYear = this.BNify(this.getGlobalConfig(['network','blocksPerYear']));\n          switch (govTokenConfig.distributionFrequency){\n            case 'day':\n              const blocksPerDay = blocksPerYear.div(365.242199);\n              output = output.times(blocksPerDay);\n            break;\n            case 'week':\n              const blocksPerWeek = blocksPerYear.div(52.1429);\n              output = output.times(blocksPerWeek);\n            break;\n            case 'month':\n              const blocksPerMonth = blocksPerYear.div(12);\n              output = output.times(blocksPerMonth);\n            break;\n            case 'year':\n              output = output.times(blocksPerYear);\n            break;\n            default:\n            break;\n          }\n        }\n      break;\n      case 'distributionSpeed':\n        const selectedTokenConfig = govTokenAvailableTokens[this.props.selectedToken];\n        switch (token){\n          case 'COMP':\n            output = await this.getCompDistribution(selectedTokenConfig);\n          break;\n          case 'stkAAVE':\n            output = await this.getStkAaveDistribution(selectedTokenConfig);\n          break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getSpeed(selectedTokenConfig.idle.address);\n          break;\n          default:\n          break;\n        }\n        if (output && !this.BNify(output).isNaN()){\n          output = this.BNify(output).div(1e18);\n        }\n      break;\n      case 'apr':\n        switch (token){\n          case 'COMP':\n            output = await this.getCompAvgApr(govTokenAvailableTokens);\n          break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getAvgApr(govTokenAvailableTokens);\n          break;\n          default:\n            const tokenAprs = await this.getTokenAprs(tokenConfig,false,addGovTokens);\n            if (tokenAprs && tokenAprs.avgApr !== null){\n              output = tokenAprs.avgApr;\n            }\n          break;\n        }\n      break;\n      case 'apy':\n        const tokenApys = await this.getTokenAprs(tokenConfig,false,addGovTokens);\n\n        // console.log('apr',token,tokenApys.avgApr ? tokenApys.avgApr.toFixed() : null,tokenApys.avgApy ? tokenApys.avgApy.toFixed() : null);\n\n        output = this.BNify(0);\n\n        if (tokenApys && !this.BNify(tokenApys.avgApy).isNaN()){\n          output = this.BNify(tokenApys.avgApy);\n\n          if (addCurveApy){\n            const curveAPY = await this.getCurveAPY();\n            if (curveAPY){\n              output = output.plus(curveAPY);\n            }\n          }\n        } else {\n\n        }\n\n        // console.log('apy - OUTPUT - ',output);\n      break;\n      case 'avgAPY':\n        const [\n          tokenPrice,\n          firstDepositTx,\n          days\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.getFirstDepositTx([token],account),\n          this.loadAssetField('daysFirstDeposit',token,tokenConfig,account)\n        ]);\n\n        if (tokenPrice && firstDepositTx && firstDepositTx[token]){\n          const tokenPriceFirstDeposit = await this.getIdleTokenPrice(tokenConfig,firstDepositTx[token].blockNumber);\n          output = this.BNify(tokenPrice).div(tokenPriceFirstDeposit).minus(1).times(365).div(days).times(100);\n        }\n      break;\n      case 'avgAPY_old':\n        const [\n          daysFirstDeposit,\n          earningsPerc\n        ] = await Promise.all([\n          this.loadAssetField('daysFirstDeposit',token,tokenConfig,account),\n          this.loadAssetField('earningsPerc',token,tokenConfig,account), // Take earnings perc instead of earnings\n        ]);\n\n        if (daysFirstDeposit && earningsPerc){\n          output = earningsPerc.times(365).div(daysFirstDeposit);\n        }\n      break;\n      case 'depositTimestamp':\n        const depositTimestamps = account ? await this.getDepositTimestamp([token],account) : false;\n        if (depositTimestamps && depositTimestamps[token]){\n          output = depositTimestamps[token];\n        }\n      break;\n      case 'amountLent':\n        output = account ? await this.getAmountDeposited(tokenConfig,account) : false;\n        // console.log('amountLent - OUTPUT - ',output);\n        // const amountLents = account ? await this.getAmountLent([token],account) : false;\n        // if (amountLents && amountLents[token]){\n        //   output = amountLents[token];\n        // }\n      break;\n      case 'tokenPrice':\n        if (Object.keys(govTokens).includes(token)){\n          const govTokenConfig = govTokens[token];\n          const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n          try {\n            output = await this.getUniswapConversionRate(DAITokenConfig,govTokenConfig);\n          } catch (error) {\n\n          }\n          if (!output || this.BNify(output).isNaN()){\n            output = '-';\n          }\n        } else {\n          output = await this.getTokenPrice(tokenConfig.idle.token);\n        }\n      break;\n      case 'fee':\n        output = await this.getUserTokenFees(tokenConfig,account);\n      break;\n      case 'tokenBalance':\n        if (Object.keys(govTokens).includes(token)){\n          output = await this.getTokenBalance(token,account);\n          if (!output || output.isNaN()){\n            output = '-';\n          }\n        } else {\n          let tokenBalance = account ? await this.getTokenBalance(tokenConfig.token,account) : false;\n          if (!tokenBalance || tokenBalance.isNaN()){\n            tokenBalance = '-';\n          }\n          output = tokenBalance;\n        }\n      break;\n      case 'idleTokenBalance':\n        const idleTokenBalance = account ? await this.getTokenBalance(tokenConfig.idle.token,account) : false;\n        if (idleTokenBalance){\n          output = idleTokenBalance;\n        }\n      break;\n      case 'redeemableBalanceCounter':\n\n        // console.log('redeemableBalanceCounter - BEFORE',token,tokenConfig,account);\n\n        let [tokenAPY1,amountLent2,redeemableBalanceStart] = await Promise.all([\n          this.loadAssetField('apy',token,tokenConfig,account,false),\n          this.loadAssetField('amountLent',token,tokenConfig,account,false),\n          this.loadAssetField('redeemableBalance',token,tokenConfig,account,false),\n        ]);\n\n        // console.log('redeemableBalanceCounter - CALL - ',tokenAPY1,amountLent2,redeemableBalanceStart);\n\n        // debugger;\n\n        let redeemableBalanceEnd = redeemableBalanceStart;\n\n        if (redeemableBalanceStart && tokenAPY1 && amountLent2){\n          const earningPerYear = amountLent2.times(tokenAPY1.div(100));\n          redeemableBalanceEnd = redeemableBalanceStart.plus(earningPerYear);\n        }\n\n        output = {\n          redeemableBalanceEnd,\n          redeemableBalanceStart\n        };\n\n        // console.log('redeemableBalanceCounter - OUTPUT',token,parseFloat(redeemableBalanceStart),parseFloat(redeemableBalanceEnd),output);\n      break;\n      case 'redeemableBalance':\n        if (Object.keys(govTokens).includes(token)){\n          const govTokenConfig = govTokens[token];\n          output = await this.getGovTokenUserBalance(govTokenConfig,account,govTokenAvailableTokens);\n        } else {\n          let [\n            idleTokenPrice1,\n            idleTokenBalance2,\n            govTokensBalance\n          ] = await Promise.all([\n            this.getIdleTokenPrice(tokenConfig),\n            this.loadAssetField('idleTokenBalance',token,tokenConfig,account),\n            addGovTokens ? this.getGovTokensUserTotalBalance(account,govTokenAvailableTokens,token) : null,\n          ]);\n\n          // console.log('redeemableBalance - BEFORE - ',idleTokenBalance2,idleTokenPrice1);\n\n          if (idleTokenBalance2 && idleTokenPrice1){\n            const tokenBalance = idleTokenBalance2.times(idleTokenPrice1);\n            let redeemableBalance = tokenBalance;\n            if (govTokensBalance && !this.BNify(govTokensBalance).isNaN()){\n              redeemableBalance = redeemableBalance.plus(this.BNify(govTokensBalance));\n            }\n            output = redeemableBalance;\n            // console.log('redeemableBalance',token,idleTokenBalance2.toFixed(4),idleTokenPrice1.toFixed(4),tokenBalance.toFixed(4),govTokensBalance ? govTokensBalance.toFixed(4) : null,output.toFixed(4));\n          }\n          // console.log('redeemableBalance - OUTPUT - ',output);\n        }\n      break;\n      case 'earningsCurve':\n        let [amountLentCurve2,redeemableBalanceCurve1] = await Promise.all([\n          this.loadAssetField('amountLentCurve',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalanceCurve',token,tokenConfig,account)\n        ]);\n\n        if (!amountLentCurve2){\n          amountLentCurve2 = this.BNify(0);\n        }\n\n        if (!redeemableBalanceCurve1){\n          redeemableBalanceCurve1 = this.BNify(0);\n        }\n\n        output = redeemableBalanceCurve1.minus(amountLentCurve2);\n      break;\n      case 'earnings':\n        let [amountLent,redeemableBalance2] = await Promise.all([\n          this.loadAssetField('amountLent',token,tokenConfig,account,false),\n          this.loadAssetField('redeemableBalance',token,tokenConfig,account,false)\n        ]);\n\n        if (!amountLent){\n          amountLent = this.BNify(0);\n        }\n        if (!redeemableBalance2){\n          redeemableBalance2 = this.BNify(0);\n        }\n\n        output = redeemableBalance2.minus(amountLent);\n\n        // console.log('earnings',token,amountLent.toFixed(5),redeemableBalance2.toFixed(5),output.toFixed(5));\n\n        if (output.lt(this.BNify(0))){\n          output = this.BNify(0);\n        }\n      break;\n      default:\n      break;\n    }\n\n    return output;\n  }\n  getIdleTokenSupply = async (idleToken,blockNumber='latest') => {\n    const cachedDataKey = `idleTokenSupply_${idleToken}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let idleTokenSupply = await this.getTokenTotalSupply(idleToken,blockNumber);\n    if (idleTokenSupply){\n      idleTokenSupply = this.BNify(idleTokenSupply);\n      return this.setCachedDataWithLocalStorage(cachedDataKey,idleTokenSupply);\n    }\n\n    return null;\n  }\n  getIdleTokenPriceWithFee = async (tokenConfig,account,blockNumber='latest') => {\n    account = account || this.props.account;\n    if (!account){\n      return null;\n    }\n\n    let [\n      fee,\n      tokenPrice,\n      userAvgPrice\n    ] = await Promise.all([\n      this.genericContractCallCached(tokenConfig.idle.token, 'fee', [], {}, blockNumber),\n      this.genericContractCallCached(tokenConfig.idle.token, 'tokenPrice', [], {}, blockNumber),\n      this.genericContractCallCached(tokenConfig.idle.token, 'userAvgPrices', [account], {}, blockNumber)\n    ]);\n    \n    fee = this.BNify(fee);\n    tokenPrice = this.BNify(tokenPrice);\n    userAvgPrice = this.BNify(userAvgPrice);\n\n    if (!tokenPrice.isNaN() && !userAvgPrice.isNaN() && !fee.isNaN() && !this.BNify(userAvgPrice).eq(0) && this.BNify(tokenPrice).gt(this.BNify(userAvgPrice))){\n      const priceWFee = this.integerValue(this.BNify(tokenPrice).minus(parseInt(fee.div(1e5).times(tokenPrice.minus(userAvgPrice)))));\n      return priceWFee;\n    }\n\n    return tokenPrice;\n  }\n  getIdleTokenPrice = async (tokenConfig,blockNumber='latest',timestamp=false) => {\n\n    const cachedDataKey = `idleTokenPrice_${tokenConfig.idle.token}_${blockNumber}`;\n    // if (blockNumber !== 'latest'){\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n    // }\n\n    let decimals = tokenConfig.decimals;\n\n    let tokenPrice = await this.genericContractCallCached(tokenConfig.idle.token,'tokenPrice',[],{},blockNumber);\n\n    // If price is NaN try to take it from APIs\n    if (!tokenPrice && timestamp){\n      const isRisk = this.props.selectedStrategy === 'risk';\n      const startTimestamp = parseInt(timestamp)-(60*60);\n      const endTimestamp = parseInt(timestamp)+(60*60);\n      const tokenData = await this.getTokenApiData(tokenConfig.address,isRisk,startTimestamp,endTimestamp,true);\n\n      let beforePrice = {\n        data:null,\n        timeDiff:null\n      };\n\n      let afterPrice = {\n        data:null,\n        timeDiff:null\n      };\n\n      tokenData.forEach( d => {\n        const timeDiff = Math.abs(parseInt(d.timestamp)-parseInt(timestamp));\n        if (parseInt(d.timestamp)<parseInt(timestamp) && (!beforePrice.timeDiff || timeDiff<beforePrice.timeDiff)){\n          beforePrice.timeDiff = timeDiff;\n          beforePrice.data = d;\n        }\n\n        if (parseInt(d.timestamp)>parseInt(timestamp) && !afterPrice.timeDiff){\n          afterPrice.timeDiff = timeDiff;\n          afterPrice.data = d;\n        }\n      });\n\n      // Take before and after and calculate correct tokenPrice based from price acceleration\n      if (beforePrice.data && afterPrice.data){\n        const tokenPriceBefore = this.BNify(beforePrice.data.idlePrice);\n        const tokenPriceAfter = this.BNify(afterPrice.data.idlePrice);\n        const timeBefore = this.BNify(beforePrice.data.timestamp);\n        const timeAfter = this.BNify(afterPrice.data.timestamp);\n        const timeDiff = timeAfter.minus(timeBefore);\n        const priceDiff = tokenPriceAfter.minus(tokenPriceBefore);\n        const priceAcceleration = priceDiff.div(timeDiff);\n        const timeDiffFromBeforePrice = this.BNify(timestamp).minus(timeBefore);\n        tokenPrice = tokenPriceBefore.plus(priceAcceleration.times(timeDiffFromBeforePrice));\n      }\n    }\n\n    // Fix token price decimals\n    if (tokenPrice && !this.BNify(tokenPrice).isNaN()){\n      tokenPrice = this.fixTokenDecimals(tokenPrice,decimals);\n    }\n\n    // If price is NaN then return 1\n    if (!tokenPrice || this.BNify(tokenPrice).isNaN() || this.BNify(tokenPrice).lt(1)){\n      tokenPrice = this.BNify(1);\n    }\n\n    // if (blockNumber !== 'latest'){\n      this.setCachedDataWithLocalStorage(cachedDataKey,tokenPrice);\n    // }\n\n    // this.customLog('getIdleTokenPrice',tokenPrice.toString());\n\n    return tokenPrice;\n  }\n  clearCachedData = () => {\n    if (this.props.clearCachedData && typeof this.props.clearCachedData === 'function'){\n      // this.customLog('clearCachedData',this.props.clearCachedData,typeof this.props.clearCachedData === 'function');\n      this.props.clearCachedData();\n    } else {\n      // this.customLog('clearCachedData - Function not found!');\n    }\n    return false;\n  }\n  /*\n  Cache data locally for 3 minutes\n  */\n  setCachedData = (key,data,TTL=180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function'){\n      this.props.setCachedData(key,data,TTL);\n    }\n    return data;\n  }\n  setCachedDataWithLocalStorage = (key,data,TTL=180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function'){\n      this.props.setCachedData(key,data,TTL,true);\n    }\n    return data;\n  }\n  getCachedDataWithLocalStorage = (key,defaultValue=null) => {\n    return this.getCachedData(key,defaultValue,true);\n  }\n  getCachedData = (key,defaultValue=null,useLocalStorage=false) => {\n    let cachedData = null;\n    key = key.toLowerCase();\n    // Get cache from current session\n    if (this.props.cachedData && this.props.cachedData[key]){\n      cachedData = this.props.cachedData[key];\n    // Get cache from local storage\n    } else if (useLocalStorage) {\n      cachedData = this.getStoredItem('cachedData');\n      if (cachedData && cachedData[key]){\n        cachedData = cachedData[key];\n      } else {\n        cachedData = null;\n      }\n    }\n\n    const cachedDataValid = cachedData && cachedData.data && (cachedData.expirationDate === null || cachedData.expirationDate>=parseInt(Date.now()/1000));\n\n    // if (!cachedDataValid){\n    //   console.log('getCachedData - NOT VALID - ',key,(cachedData ? cachedData.expirationDate-parseInt(Date.now()/1000) : null));\n    // }\n\n    if (cachedDataValid){\n      return cachedData.data;\n    }\n    return defaultValue;\n  }\n  getUserPoolShare = async (walletAddr,tokenConfig) => {\n    const [\n      idleTokensBalance,\n      idleTokensTotalSupply\n    ] = await Promise.all([\n      this.getTokenBalance(tokenConfig.idle.token,walletAddr,false),\n      this.getTokenTotalSupply(tokenConfig.idle.token)\n    ]);\n\n    let userShare = this.BNify(0);\n    if (this.BNify(idleTokensBalance).gt(0) && this.BNify(idleTokensTotalSupply).gt(0)){\n      userShare = this.BNify(idleTokensBalance).div(this.BNify(idleTokensTotalSupply));\n    }\n\n    return userShare;\n  }\n  openWindow = (url) => {\n    return window.open(url,'_blank','noopener');\n  }\n  getActiveCoverages = async (account=null) => {\n    const activeCoverages = [];\n    account = account || this.props.account;\n\n    if (!account){\n      return activeCoverages;\n    }\n\n    const currTimestamp = parseInt(Date.now()/1000);\n\n    const coverProtocolConfig = this.getGlobalConfig(['tools','coverProtocol']);\n    if (coverProtocolConfig.enabled){\n      await this.asyncForEach(coverProtocolConfig.props.coverages, async (coverage) => {\n        const token = 'Claim';\n        const coverageTokens = coverage.tokens;\n        const tokenConfig = coverageTokens[token];\n        // Initialize coverage contract\n        await this.props.initContract(tokenConfig.name,tokenConfig.address,tokenConfig.abi);\n        // Take balance\n        const balance = await this.getTokenBalance(tokenConfig.name,account);\n        if (balance && balance.gt(0)){\n          const actionLabel = 'File Claim';\n          const collateral = coverage.collateral;\n          const protocolName = coverProtocolConfig.label;\n          const protocolImage = coverProtocolConfig.image;\n          const actionUrl = coverProtocolConfig.fileClaimUrl;\n          const status = coverage.expirationTimestamp<=currTimestamp ? 'Expired' : 'Active';\n          const actionDisabled = status === 'Expired';\n          const expirationDate = moment(coverage.expirationTimestamp*1000).utc().format('YYYY-MM-DD HH:mm:ss')+' UTC';\n          activeCoverages.push({\n            token,\n            status,\n            balance,\n            actionUrl,\n            collateral,\n            actionLabel,\n            protocolName,\n            protocolImage,\n            expirationDate,\n            actionDisabled\n          });\n        }\n      });\n    }\n    const nexusMutualConfig = this.getGlobalConfig(['tools','nexusMutual']);\n    if (nexusMutualConfig.enabled){\n      const nexusMutualCoverages = await this.getNexusMutualCoverages(account);\n      nexusMutualCoverages.forEach( coverage => {\n        const actionLabel = 'Claim';\n        const balance = coverage.sumAssured;\n        const token = coverage.coverAssetConfig.token;\n        const collateral = coverage.yieldTokenConfig.token;\n        const portfolioCoverage = coverage.portfolioCoverage;\n        const collateralIcon = `images/tokens/${collateral}.svg`;\n        const actionDisabled = !coverage.incident && !coverage.claimId;\n        const protocolName = this.getGlobalConfig(['insurance','nexusMutual','label']);\n        const protocolImage = this.getGlobalConfig(['insurance','nexusMutual','image']);\n        const protocolImageDark = this.getGlobalConfig(['insurance','nexusMutual','imageDark']);\n        const expirationDate = moment(coverage.coverDetails.validUntil*1000).utc().format('YYYY-MM-DD HH:mm:ss')+' UTC';\n        const status = coverage.claimId ? 'Claimed' : parseInt(coverage.coverDetails.validUntil)<=currTimestamp ? 'Expired' : 'Active';\n        const actionUrl = `${window.location.origin}/#${this.getGlobalConfig(['dashboard','baseRoute'])}/tools/${nexusMutualConfig.route}/${coverage.yieldTokenConfig.token}/claim`;\n        activeCoverages.push({\n          token,\n          status,\n          balance,\n          actionUrl,\n          collateral,\n          actionLabel,\n          protocolName,\n          protocolImage,\n          expirationDate,\n          actionDisabled,\n          collateralIcon,\n          portfolioCoverage,\n          protocolImageDark\n        });\n      });\n    }\n\n    return activeCoverages;\n  }\n  getNexusMutualCoverages = async (account) => {\n    const nexusMutualConfig = this.getGlobalConfig(['tools','nexusMutual']);\n\n    const fromBlock = nexusMutualConfig.directProps.startBlock;\n    const feeDistributorConfig = nexusMutualConfig.directProps.contractInfo;\n    const incidentsInfo = nexusMutualConfig.directProps.incidentsInfo;\n    \n    await Promise.all([\n      this.props.initContract(incidentsInfo.name,incidentsInfo.address,incidentsInfo.abi),\n      this.props.initContract(feeDistributorConfig.name,feeDistributorConfig.address,feeDistributorConfig.abi),\n    ]);\n\n    const [\n      coverBoughtEvents,\n      claimSubmittedEvents,\n    ] = await Promise.all([\n       this.getContractEvents(feeDistributorConfig.name,'CoverBought',{fromBlock, toBlock:'latest',filter:{buyer:account}}),\n       this.getContractEvents(feeDistributorConfig.name,'ClaimSubmitted',{fromBlock, toBlock:'latest',filter:{buyer:account}})\n    ]);\n\n    const nexusMutualCoverages = [];\n\n    await this.asyncForEach(coverBoughtEvents,async (cover) => {\n    // coverBoughtEvents.forEach( cover => {\n      const coverId = parseInt(cover.returnValues.coverId);\n      const claimSubmittedEvent = claimSubmittedEvents.find( claim => parseInt(claim.returnValues.coverId)===coverId );\n      const [\n        coverDetails,\n        incidentEvents\n      ] = await Promise.all([\n        this.genericContractCall(feeDistributorConfig.name,'getCover',[coverId]),\n        this.getContractEvents(incidentsInfo.name,'IncidentAdded',{fromBlock:cover.blockNumber, toBlock:'latest',filter:{productId:cover.contractAddress}})\n      ]);\n\n      if (!coverDetails){\n        return false;\n      }\n\n      // Check if the cover matches any incidents\n      const matchedIncidents = incidentEvents.filter(incident => {\n        return incident.returnValues.productId === coverDetails.contractAddress &&\n        this.BNify(incident.blockNumber).gt(cover.blockNumber)  &&\n        this.BNify(incident.returnValues.incidentDate).lt(coverDetails.validUntil) &&\n        parseInt(coverDetails.validUntil) + nexusMutualConfig.directProps.yieldTokenCoverGracePeriod >= Date.now() / 1000\n      });\n\n      // If multiple incidents match, return the one with the highest priceBefore\n      const matchedIncident = matchedIncidents.reduce((prev, curr) => {\n        if (!prev) {\n          return curr;\n        }\n\n        if (this.BNify(curr.returnValues.priceBefore).gt(prev.returnValues.priceBefore)) {\n          return curr;\n        }\n        return prev;\n      }, null);\n\n      const yieldTokenConfig = Object.values(nexusMutualConfig.props.availableTokens).find( tokenConfig => tokenConfig.address.toLowerCase() === coverDetails.contractAddress.toLowerCase() );\n      const sumAssured = this.fixTokenDecimals(coverDetails.sumAssured,yieldTokenConfig.decimals);\n      const coverAssetConfig = Object.values(yieldTokenConfig.underlying).find( underlyingConfig => underlyingConfig.address.toLowerCase() === coverDetails.coverAsset.toLowerCase() );\n      const expiryDate = this.strToMoment(coverDetails.validUntil*1000).format('YYYY-MM-DD');\n\n      const claimId = claimSubmittedEvent ? claimSubmittedEvent.returnValues.claimId : null;\n      const payoutOutcome = await this.genericContractCall(feeDistributorConfig.name,'getPayoutOutcome',[claimId]);\n      const label = `${yieldTokenConfig.name} - ${sumAssured.toFixed(4)} ${coverAssetConfig.token} - Exp. ${expiryDate}`;\n      const value = coverId;\n\n      let claimedAmount = null;\n      if (claimSubmittedEvent){\n        const claimTxReceipt = await this.getTransactionReceipt(claimSubmittedEvent.transactionHash);\n        const claimedAmountLog = claimTxReceipt ? claimTxReceipt.logs.find( log => log.address.toLowerCase() === coverAssetConfig.address.toLowerCase() ) : null;\n        claimedAmount = claimedAmountLog ? this.fixTokenDecimals(parseInt(claimedAmountLog.data,16),coverAssetConfig.decimals) : this.BNify(0);\n      }\n\n      const claimableAmount = this.fixTokenDecimals(coverDetails.sumAssured,coverAssetConfig.decimals);\n\n      const claimablePrice = matchedIncident ? this.BNify(matchedIncident.returnValues.priceBefore).times(0.9) : this.BNify(0);\n      const maxCoveredAmount = claimablePrice.gt(0) ? this.BNify(coverDetails.sumAssured).div(claimablePrice) : this.BNify(0);\n      const coveredTokenAmount = this.normalizeTokenAmount(maxCoveredAmount,coverAssetConfig.decimals);\n\n      let [\n        tokenPrice,\n        idleTokenBalance\n      ] = await Promise.all([\n        this.getTokenPrice(yieldTokenConfig.token),\n        this.getTokenBalance(yieldTokenConfig.token,account,false)\n      ]);\n\n      tokenPrice = this.fixTokenDecimals(tokenPrice,yieldTokenConfig.decimals);\n      idleTokenBalance = this.fixTokenDecimals(idleTokenBalance,yieldTokenConfig.decimals);\n      const tokenBalance = idleTokenBalance.times(tokenPrice);\n      const portfolioCoverage = tokenBalance.gt(0) ? sumAssured.div(tokenBalance).times(100).toFixed(2)+'%' : 'N/A';\n\n      // console.log('portfolioCoverage',sumAssured.toFixed(),idleTokenBalance.toFixed(),tokenPrice.toFixed(),portfolioCoverage.toFixed());\n\n      nexusMutualCoverages.push({\n        label,\n        value,\n        claimId,\n        sumAssured,\n        coverDetails,\n        claimedAmount,\n        payoutOutcome,\n        claimableAmount,\n        maxCoveredAmount,\n        yieldTokenConfig,\n        coverAssetConfig,\n        portfolioCoverage,\n        coveredTokenAmount,\n        incident: matchedIncident ? {...matchedIncident, id: incidentEvents.findIndex(x => x.date === matchedIncident.date)} : null\n      });\n    });\n\n    return nexusMutualCoverages;\n  }\n  getBatchedDepositExecutions = async (contractAddress) => {\n    const requiredNetwork = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n    const etherscanInfo = this.getGlobalConfig(['network','providers','etherscan']);\n    if (etherscanInfo.enabled && etherscanInfo.endpoints[requiredNetwork]){\n      const etherscanApiUrl = etherscanInfo.endpoints[requiredNetwork];\n      const etherscanEndpoint = `${etherscanApiUrl}?&apikey=${env.REACT_APP_ETHERSCAN_KEY}&module=account&action=tokentx&address=${contractAddress}&sort=desc`;\n      const transactions = await this.makeCachedRequest(etherscanEndpoint,1800,true);\n      if (transactions && typeof transactions.result === 'object'){\n        return transactions.result.filter( tx => tx.from === '0x0000000000000000000000000000000000000000' && tx.to.toLowerCase() === contractAddress.toLowerCase() );\n      }\n    }\n    return null;\n  }\n  getBatchedDeposits = async (account=null,filter_by_status=null) => {\n    account = account || this.props.account;\n    if (!account){\n      return null;\n    }\n\n    const batchDepositConfig = this.getGlobalConfig(['tools','batchDeposit']);\n    if (!batchDepositConfig.enabled){\n      return null;\n    }\n\n    const cachedDataKey = `batchedDeposits_${account}_${filter_by_status}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    const batchedDeposits = {};\n    const availableTokens = batchDepositConfig.props.availableTokens;\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const migrationContract = tokenConfig.migrationContract;\n      await this.props.initContract(migrationContract.name,migrationContract.address,migrationContract.abi);\n      const currBatchIndex = await this.genericContractCall(migrationContract.name,'currBatch');\n      for (let batchIndex = 0; batchIndex <= parseInt(currBatchIndex) ; batchIndex++){\n        let [\n          batchExecutions,\n          batchTotal,\n          batchRedeem,\n          batchDeposit\n        ] = await Promise.all([\n          this.getBatchedDepositExecutions(migrationContract.address),\n          this.genericContractCall(migrationContract.name,'batchTotals',[batchIndex]),\n          this.genericContractCall(migrationContract.name,'batchRedeemedTotals',[batchIndex]),\n          this.genericContractCall(migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n        ]);\n\n        console.log(`Batch #${batchIndex} - ${batchTotal} - ${batchRedeem} - ${batchDeposit}`);\n\n        let batchTotals = null;\n        let batchRedeems = null;\n        let batchDeposits = null;\n        if (batchTotal && batchTotal !== null){\n          batchTotals = this.fixTokenDecimals(batchTotal,tokenConfig.decimals);\n        }\n        if (batchDeposit !== null){\n          batchRedeem = this.fixTokenDecimals(batchRedeem,18);\n          batchDeposit = this.fixTokenDecimals(batchDeposit,tokenConfig.decimals);\n          if (batchDeposit.gt(0)){\n            batchDeposits = batchDeposit;\n\n            // Calculate redeemable idleTokens\n            batchRedeems = batchDeposit.times(batchRedeem).div(batchTotals);\n            if (batchRedeems.gt(batchRedeem)){\n              batchRedeems = batchRedeem;\n            }\n\n            const status = batchIndex < currBatchIndex && batchRedeems.gt(0) ? 'executed' : 'pending';\n\n            if (filter_by_status !== null && filter_by_status.toLowerCase() !== status){\n              return;\n            }\n\n            const lastExecution = batchExecutions && batchExecutions.length ? batchExecutions[0] : null;\n\n            batchedDeposits[token] = {\n              status,\n              batchTotals,\n              batchRedeems,\n              batchDeposits,\n              lastExecution\n            };\n          }\n        }\n      }\n    });\n\n    return this.setCachedData(cachedDataKey,batchedDeposits);\n  }\n  getETHBalance = async (walletAddr,fixDecimals=true,blockNumber='latest') => {\n    if (!walletAddr){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `ethBalance_${walletAddr}_${fixDecimals}_${blockNumber}`;\n    if (blockNumber !== 'latest'){\n      const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.BNify(cachedData).isNaN()){\n        return this.BNify(cachedData);\n      }\n    }\n\n    let tokenBalance = await this.props.web3.eth.getBalance(walletAddr);\n\n    if (tokenBalance){\n      if (fixDecimals){\n        tokenBalance = this.fixTokenDecimals(tokenBalance,18);\n      }\n\n      tokenBalance = this.BNify(tokenBalance);\n\n      // Set cached data\n      if (!tokenBalance.isNaN()){\n        if (blockNumber !== 'latest'){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,tokenBalance);\n        } else {\n          return tokenBalance;\n        }\n      }\n    }\n    return null;\n  }\n  getTokenBalance = async (contractName,walletAddr,fixDecimals=true,blockNumber='latest') => {\n    if (!walletAddr){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenBalance_${contractName}_${walletAddr}_${fixDecimals}_${blockNumber}`;\n    if (blockNumber !== 'latest'){\n      const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.BNify(cachedData).isNaN()){\n        return this.BNify(cachedData);\n      }\n    }\n\n    let [\n      tokenDecimals,\n      tokenBalance\n    ] = await Promise.all([\n      this.getTokenDecimals(contractName),\n      this.getContractBalance(contractName,walletAddr,blockNumber)\n    ]);\n\n    if (tokenBalance){\n      if (fixDecimals){\n        tokenBalance = this.fixTokenDecimals(tokenBalance,tokenDecimals);\n      }\n\n      tokenBalance = this.BNify(tokenBalance);\n\n      // Set cached data\n      if (!tokenBalance.isNaN()){\n        if (blockNumber !== 'latest'){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,tokenBalance,30);\n        } else {\n          return tokenBalance;\n        }\n      }\n    } else {\n      this.customLogError('Error on getting balance for ',contractName);\n    }\n    return null;\n  }\n  copyToClipboard = (copyText) => {\n    if (typeof copyText.select === 'function'){\n      copyText.select();\n      copyText.setSelectionRange(0, 99999); // Select\n      const res = document.execCommand(\"copy\");\n      copyText.setSelectionRange(0, 0); // Deselect\n      return res;\n    }\n    return false;\n  }\n  loadScript = (url,props,callback) => {\n    const script = document.createElement(\"script\");\n    script.src = url;\n\n    // Append props\n    if (props){\n      Object.keys(props).forEach((attr,i) => {\n        script[attr] = props[attr];\n      });\n    }\n\n    if (typeof callback === 'function'){\n      if (script.readyState) {  // only required for IE <9\n        script.onreadystatechange = function() {\n          if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n            script.onreadystatechange = null;\n            callback();\n          }\n        };\n      } else {  //Others\n        script.onload = callback;\n      }\n    }\n\n    if (!script.id || !document.getElementById(script.id)){\n      document.body.appendChild(script);\n    }\n  }\n  isValidJSON = str => {\n    try {\n      JSON.parse(str);\n    } catch (e) {\n      return false;\n    }\n    return true;\n  }\n  checkAddress = (address) => {\n    return address ? address.match(/^0x[a-fA-F0-9]{40}$/) !== null : false;\n  }\n  getTokenTotalSupply = async (contractName,blockNumber='latest',TTL=null) => {\n    const cachedDataKey = `totalSupply_${contractName}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const totalSupply = await this.genericContractCall(contractName, 'totalSupply', [], {}, blockNumber);\n    return this.setCachedDataWithLocalStorage(cachedDataKey,totalSupply,TTL);\n  }\n  getTokenPrice = async (contractName,blockNumber='latest') => {\n    const cachedDataKey = `tokenPrice_${contractName}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const tokenPrice = await this.genericContractCall(contractName,'tokenPrice',[],{},blockNumber);\n    return this.setCachedDataWithLocalStorage(cachedDataKey,tokenPrice,60);\n  }\n  getContractBalance = async (contractName,address,blockNumber='latest') => {\n    address = address ? address : this.props.tokenConfig.idle.address;\n    const cachedDataKey = `balanceOf_${contractName}_${address}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const balance = await this.genericContractCall(contractName, 'balanceOf', [address], {}, blockNumber);\n    return this.setCachedDataWithLocalStorage(cachedDataKey,balance,30);\n  }\n  getProtocolBalance = async (contractName,address) => {\n    return await this.getContractBalance(contractName,address);\n  }\n  getAprs = async (contractName) => {\n    const cachedDataKey = `getAprs_${contractName}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      // console.log('getAprs - CACHED - ',cachedData);\n      return typeof cachedData === 'object' ? cachedData : JSON.parse(cachedData);\n    }\n\n    contractName = contractName ? contractName : this.props.tokenConfig.idle.token;\n    const aprs = await this.genericContractCall(contractName, 'getAPRs');\n    if (aprs){\n      const result = {\n        aprs:aprs[1],\n        addresses:aprs[0]\n      };\n      return this.setCachedDataWithLocalStorage(cachedDataKey,result);\n    }\n    return null;\n  }\n  genericIdleCall = async (methodName, params = [], callParams = {}) => {\n    return await this.genericContractCall(this.props.tokenConfig.idle.token, methodName, params, callParams).catch(err => {\n      this.customLogError('Generic Idle call err:', err);\n    });\n  }\n  estimateGas = async (contractName, methodName, params = [], callParams = {}) => {\n    let contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLogError('Wrong contract name', contractName);\n      return null;\n    }\n\n    return await contract.methods[methodName](...params).estimateGas(callParams);\n  }\n  getTxDecodedLogs = async (tx,logAddr,decodeLogs,storedTx) => {\n\n    let txReceipt = storedTx && storedTx.txReceipt ? storedTx.txReceipt : null;\n\n    if (!txReceipt){\n      txReceipt = await (new Promise( async (resolve, reject) => {\n        this.props.web3.eth.getTransactionReceipt(tx.hash,(err,tx)=>{\n          if (err){\n            reject(err);\n          }\n          resolve(tx);\n        });\n      }));\n\n    }\n\n    if (!txReceipt){\n      return null;\n    }\n\n    const internalTransfers = txReceipt.logs.filter((tx) => { return tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${logAddr}`; });\n\n    if (!internalTransfers.length){\n      return null;\n    }\n\n    try {\n      return [\n        txReceipt,\n        this.props.web3.eth.abi.decodeLog(decodeLogs,internalTransfers[0].data,internalTransfers[0].topics)\n      ];\n    } catch (error) {\n      return null;\n    }\n  }\n  blocksToSeconds = (blocks) => {\n    const blocksPerSeconds = this.BNify(this.getGlobalConfig(['network','blocksPerYear'])).div(365.2422).div(86400);\n    return this.BNify(blocks).div(blocksPerSeconds);\n  }\n  getBlockNumber = async () => {\n    return await this.props.web3.eth.getBlockNumber();\n  }\n  getBlockInfo = async (blockNumber) => {\n    const cachedDataKey = `getBlockInfo_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n    const blockInfo = await this.props.web3.eth.getBlock(blockNumber);\n    return blockInfo ? this.setCachedDataWithLocalStorage(cachedDataKey,blockInfo,null) : null;\n  }\n  getContractPastEvents = async (contractName,methodName,params = {}) => {\n    if (!contractName){\n      return null;\n    }\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLogError('Wrong contract name', contractName);\n      return null;\n    }\n\n    return await contract.getPastEvents(methodName, params);\n  }\n  genericContractCallCached = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest', TTL=180) => {\n    const cachedDataKey = `genericContractCall_${contractName}_${methodName}_${JSON.stringify(params)}_${JSON.stringify(callParams)}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    // Store forever for past block\n    if (blockNumber !== 'latest'){\n      TTL = null;\n    }\n\n    const result = await this.genericContractCall(contractName, methodName, params, callParams, blockNumber);\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey,result,TTL);\n  }\n  genericContractCall = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest') => {\n\n    if (!contractName){\n      return null;\n    }\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLog('Wrong contract name', contractName);\n      return null;\n    }\n\n    if (!contract.methods[methodName]) {\n      this.customLog('Wrong method name', methodName);\n      return null;\n    }\n\n    blockNumber = blockNumber !== 'latest' && blockNumber && !isNaN(blockNumber) ? parseInt(blockNumber) : blockNumber;\n\n    try{\n      // this.customLog(`genericContractCall - ${contractName} - ${methodName}`);\n      const value = await contract.methods[methodName](...params).call(callParams,blockNumber).catch(error => {\n        this.customLog(`${contractName} contract method ${methodName} error: `, error);\n      });\n      // console.log(`${moment().format('HH:mm:ss')} - genericContractCall (${blockNumber}) - ${contractName} - ${methodName} (${JSON.stringify(params)}) : ${value}`);\n      return value;\n    } catch (error) {\n      this.customLog(\"genericContractCall error\", error);\n    }\n  }\n  asyncForEach = async (array, callback, async=true) => {\n    if (async){\n      await Promise.all(array.map( (c,index) => {\n        return callback(c, index, array);\n      }));\n    } else {\n      for (let index = 0; index < array.length; index++) {\n        await callback(array[index], index, array);\n      }\n    }\n  }\n  apr2apy = (apr) => {\n    return (this.BNify(1).plus(this.BNify(apr).div(365))).pow(365).minus(1);\n  }\n  getUnlentBalance = async (tokenConfig) => {\n    let unlentBalance = await this.getProtocolBalance(tokenConfig.token,tokenConfig.idle.address);\n    if (unlentBalance){\n      unlentBalance = this.fixTokenDecimals(unlentBalance,tokenConfig.decimals);\n    }\n    return unlentBalance;\n  }\n  getTokenPool = async (tokenConfig,addGovTokens=true) => {\n    // Check for cached data\n    const cachedDataKey = `tokenPool_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN() ) {\n      return this.BNify(cachedData);\n    }\n\n    const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,addGovTokens);\n    if (tokenAllocation && tokenAllocation.totalAllocationWithUnlent){\n      const tokenPool = tokenAllocation.totalAllocationWithUnlent;\n      if (!this.BNify(tokenPool).isNaN()){\n        return this.setCachedDataWithLocalStorage(cachedDataKey,tokenPool);\n      }\n    }\n\n    return null;\n  }\n  /*\n  Get idleToken allocation between protocols\n  */\n  getTokenAllocation = async (tokenConfig,protocolsAprs=false,addGovTokens=true) => {\n\n    if (!tokenConfig.idle){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenAllocation_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    let totalAllocation = this.BNify(0);\n\n    const tokenAllocation = {\n      avgApr: null,\n      unlentBalance:null,\n      totalAllocation:null,\n      protocolsBalances:{},\n      protocolsAllocations:null,\n      protocolsAllocationsPerc:null,\n      totalAllocationConverted:null,\n      totalAllocationWithUnlent:null,\n      totalAllocationWithUnlentConverted:null,\n    };\n\n    const exchangeRates = {};\n    const protocolsBalances = {};\n    const protocolsAllocations = {};\n    const protocolsAllocationsPerc = {};\n\n    await this.asyncForEach(tokenConfig.protocols,async (protocolInfo,i) => {\n\n      if (!protocolInfo.enabled){\n        return;\n      }\n\n      const contractName = protocolInfo.token;\n      const protocolAddr = protocolInfo.address.toLowerCase();\n\n      let [\n        tokenDecimals,\n        protocolBalance,\n        exchangeRate\n      ] = await Promise.all([\n        this.getTokenDecimals(contractName),\n        this.getProtocolBalance(contractName,tokenConfig.idle.address),\n        ( protocolInfo.functions.exchangeRate ? this.getTokenExchangeRate(contractName,protocolInfo.functions.exchangeRate) : null )\n      ]);\n\n      if (!protocolBalance){\n        return;\n      }\n\n      if (exchangeRate && protocolInfo.decimals){\n        exchangeRates[protocolAddr] = exchangeRate;\n        exchangeRate = this.fixTokenDecimals(exchangeRate,protocolInfo.decimals);\n      }\n\n      let protocolAllocation = this.fixTokenDecimals(protocolBalance,tokenDecimals,exchangeRate);\n\n      if (protocolAllocation.lt(this.BNify(0.00000001))){\n        protocolBalance = this.BNify(0);\n        protocolAllocation = this.BNify(0);\n      }\n\n      protocolsBalances[protocolAddr] = protocolBalance;\n      protocolsAllocations[protocolAddr] = protocolAllocation;\n      totalAllocation = totalAllocation.plus(protocolAllocation);\n\n      // console.log('getTokenAllocation',contractName,protocolAddr,protocolAllocation.toFixed(5),exchangeRate ? exchangeRate.toFixed(5) : null,totalAllocation.toFixed(5));\n    });\n\n    tokenAllocation.unlentBalance = this.BNify(0);\n    tokenAllocation.totalAllocationWithUnlent = this.BNify(totalAllocation);\n\n    // Add unlent balance to the pool\n    let unlentBalance = await this.getUnlentBalance(tokenConfig);\n    if (unlentBalance){\n      tokenAllocation.unlentBalance = unlentBalance;\n      tokenAllocation.totalAllocationWithUnlent = tokenAllocation.totalAllocationWithUnlent.plus(unlentBalance);\n    }\n\n    // console.log('totalAllocationWithUnlent 1',addGovTokens,tokenAllocation.totalAllocationWithUnlent.toFixed(5));\n\n    Object.keys(protocolsAllocations).forEach((protocolAddr,i) => {\n      const protocolAllocation = protocolsAllocations[protocolAddr];\n      const protocolAllocationPerc = protocolAllocation.div(totalAllocation);\n      protocolsAllocationsPerc[protocolAddr] = protocolAllocationPerc;\n    });\n\n    tokenAllocation.totalAllocation = totalAllocation;\n    tokenAllocation.protocolsAllocations = protocolsAllocations;\n    tokenAllocation.protocolsAllocationsPerc = protocolsAllocationsPerc;\n\n    if (addGovTokens){\n      const govTokensBalances = await this.getGovTokensBalances(tokenConfig.idle.address);\n\n      // Sum gov tokens balances\n      if (govTokensBalances.total){\n        const tokenUsdConversionRate = await this.getTokenConversionRate(tokenConfig,false);\n        if (tokenUsdConversionRate){\n          govTokensBalances.total = govTokensBalances.total.div(tokenUsdConversionRate);\n        }\n\n        tokenAllocation.totalAllocationWithUnlent = tokenAllocation.totalAllocationWithUnlent.plus(govTokensBalances.total);\n\n        // console.log('totalAllocationWithUnlent 2',govTokensBalances.total.toFixed(5),tokenAllocation.totalAllocationWithUnlent.toFixed(5));\n      }\n    }\n\n    [\n      tokenAllocation.totalAllocationConverted,\n      tokenAllocation.totalAllocationWithUnlentConverted\n    ] = await Promise.all([\n      this.convertTokenBalance(tokenAllocation.totalAllocation,tokenConfig.token,tokenConfig),\n      this.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent,tokenConfig.token,tokenConfig)\n    ]);\n\n    if (protocolsAprs){\n      tokenAllocation.avgApr = this.getAvgApr(protocolsAprs,protocolsAllocations,totalAllocation);\n    }\n\n    return this.setCachedData(cachedDataKey,tokenAllocation);\n  }\n  getSushiswapPoolTokenPrice = async (contractName,pairAddresses) => {\n    const [\n      token0_address,\n      token1_address,\n      poolReserves,\n      totalSupply\n    ] = await Promise.all([\n      this.genericContractCallCached(contractName,'token0'),\n      this.genericContractCallCached(contractName,'token1'),\n      this.genericContractCallCached(contractName,'getReserves'),\n      this.getTokenTotalSupply(contractName)\n    ]);\n\n    if (token0_address && token1_address && poolReserves && totalSupply){\n      const token0_config = {\n        address:token0_address\n      };\n      const token1_config = {\n        address:token1_address\n      };\n      const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n\n      let [\n        token0_price,\n        token1_price\n      ] = await Promise.all([\n        this.getSushiswapConversionRate(DAITokenConfig,token0_config),\n        this.getSushiswapConversionRate(DAITokenConfig,token1_config)\n      ]);\n\n      if (token0_price && token1_price){\n        // token0_price = this.BNify(1).div(this.BNify(token0_price));\n        // token1_price = this.BNify(1).div(this.BNify(token1_price));\n\n        const token0_pool = token0_price.times(this.fixTokenDecimals(poolReserves[0],18));\n        const token1_pool = token1_price.times(this.fixTokenDecimals(poolReserves[1],18));\n\n        const totalPoolSize = token0_pool.plus(token1_pool);\n        const poolTokenPrice = totalPoolSize.div(this.fixTokenDecimals(totalSupply,18));\n\n        // console.log(parseFloat(token0_price),parseFloat(token1_price),parseFloat(poolTokenPrice));\n\n        return poolTokenPrice;\n      }\n    }\n\n    return null;\n  }\n  getSushiswapConversionRate = async (tokenConfigFrom,tokenConfigDest) => {\n\n    // Check for cached data\n    const cachedDataKey = `sushiswapConversionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    try {\n      const WETHAddr = this.getGlobalConfig(['stats','tokens','WETH','address']);\n      const one = this.normalizeTokenDecimals(18);\n\n      const path = [];\n      path.push(tokenConfigFrom.address);\n\n      // Don't pass through weth if i'm converting weth\n      if (WETHAddr.toLowerCase() !== tokenConfigFrom.address.toLowerCase() && WETHAddr.toLowerCase() !== tokenConfigDest.address.toLowerCase()){\n        path.push(WETHAddr);\n      }\n      path.push(tokenConfigDest.address);\n\n      const res = await this.genericContractCall('SushiswapRouter','getAmountsIn',[one.toFixed(),path]);\n\n      if (res){\n        const price = this.BNify(res[0]).div(one);\n        return this.setCachedDataWithLocalStorage(cachedDataKey,price);\n      }\n      return null;\n    } catch (error) {\n      return null;\n    }\n  }\n  getUniswapConversionRate = async (tokenConfigFrom,tokenConfigDest) => {\n\n    if (tokenConfigDest.addressForPrice){\n      tokenConfigDest = Object.assign({},tokenConfigDest);\n      tokenConfigDest.address = tokenConfigDest.addressForPrice;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `uniswapConversionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    // console.log('getUniswapConversionRate - CACHED',cachedDataKey,cachedData);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    try {\n      const WETHAddr = this.getGlobalConfig(['stats','tokens','WETH','address']);\n      const one = this.normalizeTokenDecimals(18);\n\n      const path = [];\n      path.push(tokenConfigFrom.address);\n      // Don't pass through weth if i'm converting weth\n      if (WETHAddr.toLowerCase() !== tokenConfigFrom.address.toLowerCase() && WETHAddr.toLowerCase() !== tokenConfigDest.address.toLowerCase()){\n        path.push(WETHAddr);\n      }\n      path.push(tokenConfigDest.address);\n\n      const unires = await this.genericContractCall('UniswapRouter','getAmountsIn',[one.toFixed(),path]);\n\n      if (unires){\n        const price = this.BNify(unires[0]).div(one);\n        // console.log('getUniswapConversionRate',path,price.toFixed());\n        return this.setCachedDataWithLocalStorage(cachedDataKey,price);\n      }\n      return null;\n    } catch (error) {\n      return null;\n    }\n  }\n  /*\n  getUniswapConversionRate_old = async (tokenConfigFrom,tokenConfigDest) => {\n    const cachedDataKey = `compUniswapConverstionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n\n    const tokenFrom = new Token(ChainId.MAINNET, tokenConfigFrom.address, tokenConfigFrom.decimals);\n    const tokenTo = new Token(ChainId.MAINNET, tokenConfigDest.address, tokenConfigDest.decimals);\n\n    const pair = await Fetcher.fetchPairData(tokenFrom, tokenTo);\n    const route = new Route([pair], tokenTo);\n\n    let output = null;\n    if (route && route.midPrice){\n      output = this.BNify(route.midPrice.toSignificant(tokenConfigDest.decimals));\n      this.setCachedData(cachedDataKey,output);\n    }\n    return output;\n  }\n  */\n  getCurveDepositedTokens = async (account,enabledTokens=[]) => {\n    account = account ? account : this.props.account;\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    if (!account || !enabledTokens || !enabledTokens.length){\n      return [];\n    }\n\n    const curveTxs = await this.getCurveTxs(account,0,'latest',enabledTokens);\n\n    const idleTokensBalances = {};\n    let remainingCurveTokens = this.BNify(0);\n\n    // this.customLog('getCurveDepositedTokens',curveTxs);\n\n    curveTxs.forEach( tx => {\n\n      const idleToken = tx.idleToken;\n      const idleTokens = this.BNify(tx.idleTokens);\n\n      if (!idleTokensBalances[idleToken]){\n        idleTokensBalances[idleToken] = this.BNify(0);\n      }\n\n      switch (tx.action){\n        case 'CurveIn':\n        case 'CurveZapIn':\n          idleTokensBalances[idleToken] = idleTokensBalances[idleToken].plus(idleTokens);\n        break;\n        case 'CurveOut':\n        case 'CurveZapOut':\n          if (idleTokens.gt(idleTokensBalances[idleToken])){\n            remainingCurveTokens = remainingCurveTokens.plus(idleTokens.minus(idleTokensBalances[idleToken]));\n          }\n          idleTokensBalances[idleToken] = idleTokensBalances[idleToken].minus(idleTokens);\n          if (idleTokensBalances[idleToken].lt(0)){\n            idleTokensBalances[idleToken] = this.BNify(0);\n          }\n        break;\n        default:\n        break;\n      }\n\n      // this.customLog(this.strToMoment(tx.timeStamp*1000).format('DD-MM-YYYY HH:mm:ss'),tx.blockNumber,idleToken,tx.action,idleTokens.toFixed(6),idleTokensBalances[idleToken].toFixed(6),remainingCurveTokens.toFixed(6));\n\n      // Scalo il remaining tokens\n      if (remainingCurveTokens.gt(0)){\n        Object.keys(idleTokensBalances).forEach( token => {\n          const tokenBalance = idleTokensBalances[token];\n          if (tokenBalance && tokenBalance.gt(0)){\n            if (tokenBalance.gt(remainingCurveTokens)){\n              idleTokensBalances[token] = idleTokensBalances[token].minus(remainingCurveTokens);\n            } else {\n              remainingCurveTokens = remainingCurveTokens.minus(idleTokensBalances[token]);\n              idleTokensBalances[token] = 0;\n            }\n          }\n        });\n      }\n    });\n\n    // this.customLog('idleTokensBalances',idleTokensBalances);\n  }\n  getCurveUnevenTokenAmounts = async (amounts,max_burn_amount) => {\n    const curveSwapContract = await this.getCurveDepositContract();\n    if (curveSwapContract){\n      const unevenAmounts = await this.genericContractCall(curveSwapContract.name, 'remove_liquidity_imbalance', [amounts, max_burn_amount]);\n      // this.customLog('getCurveUnevenTokenAmounts',amounts,max_burn_amount,unevenAmounts);\n      return unevenAmounts;\n    }\n    return null;\n  }\n  getCurveAPY = async () => {\n\n    // Check for cached data\n    const cachedDataKey = `getCurveAPY`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const curveRatesInfo = this.getGlobalConfig(['curve','rates']);\n    if (curveRatesInfo){\n      const results = await this.makeRequest(curveRatesInfo.endpoint);\n      if (results && results.data){\n        const path = Object.values(curveRatesInfo.path);\n        let curveApy = this.getArrayPath(path,results.data);\n        if (curveApy){\n          curveApy = this.BNify(curveApy).times(100);\n          if (!this.BNify(curveApy).isNaN()){\n            return this.setCachedDataWithLocalStorage(cachedDataKey,curveApy);\n          }\n        }\n      }\n    }\n    return null;\n  }\n  getCurveAvailableTokens = () => {\n    if (!this.props.availableStrategies){\n      return false;\n    }\n    const curveTokens = this.getGlobalConfig(['curve','availableTokens']);\n    const strategyTokens = this.props.availableStrategies['best'];\n    const availableTokens = Object.keys(strategyTokens).reduce( (availableTokens,token) => {\n      const tokenConfig = strategyTokens[token];\n      if (Object.keys(curveTokens).includes(tokenConfig.idle.token) && curveTokens[tokenConfig.idle.token].enabled){\n        availableTokens[token] = tokenConfig;\n      }\n      return availableTokens;\n    },{});\n\n    return availableTokens;\n  }\n  getCurveAPYContract = async () => {\n    const curveSwapContract = await this.getCurveDepositContract();\n    if (curveSwapContract){\n      const blockNumber = await this.getBlockNumber();\n      if (blockNumber){\n        const blocksForPrevTokenPrice = 10;\n        let [tokenPrice,prevTokenPrice] = await Promise.all([\n          this.genericContractCall(curveSwapContract.name,'get_virtual_price'),\n          this.genericContractCallCached(curveSwapContract.name,'get_virtual_price',[],{},blockNumber-blocksForPrevTokenPrice)\n        ]);\n\n        if (tokenPrice && prevTokenPrice){\n\n          const blocksMultiplier = this.BNify(this.getGlobalConfig(['network','blocksPerYear'])).div(blocksForPrevTokenPrice);\n          const curveAPR = this.BNify(tokenPrice).div(prevTokenPrice).minus(1).times(blocksMultiplier);\n          return this.apr2apy(curveAPR).times(100);\n        }\n      }\n    }\n    return null;\n  }\n  getCurveTokenSupply = async () => {\n    const curvePoolContract = await this.getCurvePoolContract();\n    if (curvePoolContract){\n      return await this.getTokenTotalSupply(curvePoolContract.name);\n    }\n    return null;\n  }\n  getCurveTokenBalance = async (account=null,fixDecimals=true) => {\n    const curvePoolContract = await this.getCurvePoolContract();\n    if (curvePoolContract){\n      account = account ? account : this.props.account;\n      return await this.getTokenBalance(curvePoolContract.name,account,fixDecimals);\n    }\n    return null;\n  }\n  getCurveTokenPrice = async (blockNumber='latest',fixDecimals=true) => {\n    const migrationContract = await this.getCurveDepositContract();\n    let curveTokenPrice = await this.genericContractCallCached(migrationContract.name,'get_virtual_price',[],{},blockNumber);\n    if (curveTokenPrice){\n      curveTokenPrice = this.BNify(curveTokenPrice);\n      if (fixDecimals){\n        const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n        curveTokenPrice = this.fixTokenDecimals(curveTokenPrice,curvePoolContract.decimals);\n      }\n      return curveTokenPrice;\n    }\n    return null;\n  }\n  getCurveRedeemableIdleTokens = async (account) => {\n    let [curveTokenPrice,curveTokenBalance] = await Promise.all([\n      this.getCurveTokenPrice('latest'),\n      this.getCurveTokenBalance(account),\n    ]);\n    if (curveTokenBalance && curveTokenPrice){\n      return this.BNify(curveTokenBalance).times(curveTokenPrice);\n    }\n    return null;\n  }\n  getCurveDepositContract = async () => {\n    const depositContractInfo = this.getGlobalConfig(['curve','depositContract']);\n    if (depositContractInfo){\n      let curveDepositContract = this.getContractByName(depositContractInfo.name);\n      if (!curveDepositContract && depositContractInfo.abi){\n        curveDepositContract = await this.props.initContract(depositContractInfo.name,depositContractInfo.address,depositContractInfo.abi);\n      }\n    }\n    return depositContractInfo;\n  }\n  getCurveZapContract = async () => {\n    const zapContractInfo = this.getGlobalConfig(['curve','zapContract']);\n    if (zapContractInfo){\n      let curveZapContract = this.getContractByName(zapContractInfo.name);\n      if (!curveZapContract && zapContractInfo.abi){\n        curveZapContract = await this.props.initContract(zapContractInfo.name,zapContractInfo.address,zapContractInfo.abi);\n      }\n    }\n    return zapContractInfo;\n  }\n  getCurvePoolContract = async () => {\n    const poolContractInfo = this.getGlobalConfig(['curve','poolContract']);\n    if (poolContractInfo){\n      let curvePoolContract = this.getContractByName(poolContractInfo.name);\n      if (!curvePoolContract && poolContractInfo.abi){\n        curvePoolContract = await this.props.initContract(poolContractInfo.name,poolContractInfo.address,poolContractInfo.abi);\n      }\n    }\n    return poolContractInfo;\n  }\n  getCurveSwapContract = async () => {\n    const migrationContractInfo = this.getGlobalConfig(['curve','migrationContract']);\n    if (migrationContractInfo){\n      let migrationContract = this.getContractByName(migrationContractInfo.name);\n      if (!migrationContract && migrationContractInfo.abi){\n        migrationContract = await this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi);\n      }\n    }\n    return migrationContractInfo;\n  }\n  getCurveIdleTokensAmounts = async (account=null,curveTokenBalance=null,max_slippage=null) => {\n    if (!account && this.props.account){\n      account = this.props.account;\n    }\n\n    if (!account){\n      return null;\n    }\n\n    const tokensBalances = {};\n    const curveSwapContract = await this.getCurveSwapContract();\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n\n    const curveTokenSupply = await this.getCurveTokenSupply();\n    if (!curveTokenBalance){\n      curveTokenBalance = await this.getCurveTokenBalance(account,false);\n    }\n\n    if (curveTokenBalance && curveTokenSupply){\n      const curveTokenShare = this.BNify(curveTokenBalance).div(this.BNify(curveTokenSupply));\n      const n_coins = Object.keys(curveAvailableTokens).length;\n\n      if (max_slippage){\n        max_slippage = this.BNify(max_slippage).div(n_coins);\n      }\n\n      // this.customLog('curveTokenShare',this.BNify(curveTokenBalance).toString(),this.BNify(curveTokenSupply).toString(),curveTokenShare.toString());\n\n      await this.asyncForEach(Object.keys(curveAvailableTokens), async (token) => {\n        const curveTokenConfig = curveAvailableTokens[token];\n        const coinIndex = curveTokenConfig.migrationParams.coinIndex;\n        const curveIdleTokens = await this.genericContractCall(curveSwapContract.name,'balances',[coinIndex]);\n        if (curveIdleTokens){\n          let idleTokenBalance = this.BNify(curveIdleTokens).times(curveTokenShare);\n          if (max_slippage){\n            // this.customLog('getCurveIdleTokensAmounts',idleTokenBalance.toFixed());\n            idleTokenBalance = idleTokenBalance.minus(idleTokenBalance.times(max_slippage));\n          }\n          tokensBalances[coinIndex] = this.integerValue(idleTokenBalance);\n        }\n      });\n    }\n\n    return Object.values(tokensBalances);\n  }\n\n  // Get amounts of underlying tokens in the curve pool\n  getCurveTokensAmounts = async (account=null,curveTokenBalance=null,fixDecimals=false,useCoinIndex=false) => {\n\n    if (!account && this.props.account){\n      account = this.props.account;\n    }\n\n    if (!account){\n      return null;\n    }\n\n    const tokensBalances = {};\n    const availableTokens = this.getCurveAvailableTokens();\n    const curveSwapContract = await this.getCurveSwapContract();\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n\n    const curveTokenSupply = await this.getCurveTokenSupply();\n    if (!curveTokenBalance){\n      curveTokenBalance = await this.getCurveTokenBalance(account,false);\n    }\n\n    if (curveTokenBalance && curveTokenSupply){\n      const curveTokenShare = this.BNify(curveTokenBalance).div(this.BNify(curveTokenSupply));\n\n      await this.asyncForEach(Object.keys(curveAvailableTokens), async (token) => {\n        const curveTokenConfig = curveAvailableTokens[token];\n        const coinIndex = curveTokenConfig.migrationParams.coinIndex;\n        const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n        const [\n          idleTokenPrice,\n          idleTokenBalance\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.genericContractCall(curveSwapContract.name,'balances',[coinIndex]),\n        ]);\n\n        const totalTokenSupply = this.BNify(idleTokenBalance).times(this.BNify(idleTokenPrice));\n        let tokenBalance = totalTokenSupply.times(curveTokenShare);\n        if (fixDecimals){\n          tokenBalance = this.fixTokenDecimals(tokenBalance,18);\n        }\n\n        tokensBalances[curveTokenConfig.baseToken] = useCoinIndex ? this.integerValue(tokenBalance) : tokenBalance;\n      });\n    }\n\n    return useCoinIndex ? Object.values(tokensBalances) : tokensBalances;\n  }\n\n  // Compile amounts array for Curve\n  getCurveAmounts = async (token,amount,deposit=false) => {\n    const amounts = {};\n    const availableTokens = this.getCurveAvailableTokens();\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n\n    await this.asyncForEach(Object.keys(curveAvailableTokens), async (idleToken) => {\n      const curveTokenConfig = curveAvailableTokens[idleToken];\n      const migrationParams = curveTokenConfig.migrationParams;\n      const coinIndex = migrationParams.coinIndex;\n      if (idleToken === token && parseFloat(amount)>0){\n        const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n        amount = this.fixTokenDecimals(amount,18);\n        if (!deposit){\n          const idleTokenPrice = await this.getIdleTokenPrice(tokenConfig);\n          amount = amount.div(idleTokenPrice);\n        }\n        amount = this.normalizeTokenAmount(amount,curveTokenConfig.decimals);\n        amounts[coinIndex] = amount;\n      } else {\n        amounts[coinIndex] = 0;\n      }\n    });\n\n    return Object.values(amounts);\n  }\n  getCurveTokenAmount = async (amounts,deposit=true) => {\n    const migrationContract = await this.getCurveSwapContract();\n    if (migrationContract){\n      return await this.genericContractCall(migrationContract.name,'calc_token_amount',[amounts,deposit]);\n    }\n    return null;\n  }\n  getCurveSlippage = async (token,amount,deposit=true,uneven_amounts=null) => {\n    let slippage = null;\n    const depositContract = await this.getCurveDepositContract();\n    if (depositContract){\n\n      const n_coins = this.getGlobalConfig(['curve','params','n_coins']);\n\n      amount = this.BNify(amount)\n      if (!amount || amount.isNaN() || amount.lte(0)){\n        return null;\n      }\n\n      let amounts = uneven_amounts;\n      if (!amounts || amounts.length !== n_coins){\n        amounts = await this.getCurveAmounts(token,amount);\n      }\n\n      let [\n        virtualPrice,\n        tokenAmount\n      ] = await Promise.all([\n        this.genericContractCall(depositContract.name,'get_virtual_price'),\n        this.genericContractCall(depositContract.name,'calc_token_amount',[amounts,deposit]),\n      ]);\n\n      if (virtualPrice && tokenAmount){\n        amount = this.fixTokenDecimals(amount,18);\n        virtualPrice = this.fixTokenDecimals(virtualPrice,18);\n        tokenAmount = this.fixTokenDecimals(tokenAmount,18);\n        const Sv = tokenAmount.times(virtualPrice);\n\n        // Handle redeem in uneven amounts (Slippage 0%)\n        if (uneven_amounts && !deposit){\n          amount = amount.times(virtualPrice);\n        }\n\n        if (deposit){\n          slippage = Sv.div(amount).minus(1).times(-1);\n        } else {\n          slippage = amount.div(Sv).minus(1).times(-1);\n        }\n\n        // console.log('getCurveSlippage',token,deposit,amounts,tokenAmount.toFixed(6),virtualPrice.toFixed(6),Sv.toFixed(6),amount.toFixed(6),slippage.toFixed(6));\n\n        return slippage;\n      }\n    }\n    return null;\n  }\n  getStkAaveDistribution = async (tokenConfig,aTokenIdleSupply=null,annualize=true) => {\n\n    const cachedDataKey = `getStkAaveDistribution_${tokenConfig.idle.token}_${aTokenIdleSupply}_${annualize}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let aaveDistribution = this.BNify(0);\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens','stkAAVE']);\n    const aTokenConfig = tokenConfig.protocols.find( p => p.name === stkAAVETokenConfig.protocol );\n\n    if (!aTokenConfig || stkAAVETokenConfig.disabledTokens.includes(tokenConfig.idle.token)){\n      return aaveDistribution;\n    }\n\n    const aaveIncentivesController_address = await this.genericContractCallCached(aTokenConfig.token,'getIncentivesController',[],{},'latest',null);\n\n    // console.log('getStkAaveDistribution',tokenConfig.idle.token,aTokenConfig.token,aaveIncentivesController_address);\n\n    if (!aaveIncentivesController_address){\n      return aaveDistribution;\n    }\n\n    const IAaveIncentivesController_name = `IAaveIncentivesController_${aTokenConfig.token}`;\n    await this.props.initContract(IAaveIncentivesController_name,aaveIncentivesController_address,stkAAVETokenConfig.abi);\n\n    let [\n      aTokenTotalSupply,\n      tokenAllocation,\n      assetData,\n    ] = await Promise.all([\n      this.getTokenTotalSupply(aTokenConfig.token),\n      this.getTokenAllocation(tokenConfig,false,false),\n      this.genericContractCallCached(IAaveIncentivesController_name,'getAssetData',[aTokenConfig.address]),\n    ]);\n\n    if (assetData && tokenAllocation){\n\n      const aaveAllocationPerc = tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()];\n\n      if (aaveAllocationPerc && aaveAllocationPerc.gte(0.001)){\n        if (!aTokenIdleSupply){\n          aTokenIdleSupply = await this.getContractBalance(aTokenConfig.token,tokenConfig.idle.address);\n        }\n\n        const aaveSpeed = this.BNify(assetData[1]);\n        aTokenIdleSupply = this.BNify(aTokenIdleSupply);\n        aTokenTotalSupply = this.BNify(aTokenTotalSupply);\n        const secondsPerYear = this.getGlobalConfig(['network','secondsPerYear']);\n\n        const aavePoolShare = aTokenIdleSupply.div(aTokenTotalSupply);\n        aaveDistribution = aaveSpeed.times(aavePoolShare);\n\n        if (annualize){\n          aaveDistribution = aaveDistribution.div(1e18).times(secondsPerYear);\n        }\n\n        // console.log('getStkAaveDistribution',tokenConfig.idle.token,aTokenIdleSupply.toFixed(),aTokenTotalSupply.toFixed(),aavePoolShare.toFixed(),aaveSpeed.toFixed(),aaveDistribution.toFixed());\n\n        if (!this.BNify(aaveDistribution).isNaN()){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,aaveDistribution);\n        }\n      }\n    }\n\n    return aaveDistribution;\n  }\n  getStkAaveUserDistribution = async (account=null,availableTokens=null) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens){\n      return false;\n    }\n\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens','stkAAVE']);\n\n    let output = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const aTokenInfo = tokenConfig.protocols.find( p => (p.name === stkAAVETokenConfig.protocol) );\n      if (aTokenInfo){\n        const [\n          userPoolShare,\n          aaveDistribution,\n        ] = await Promise.all([\n          this.getUserPoolShare(account,tokenConfig,false),\n          this.getStkAaveDistribution(tokenConfig,null,false),\n        ]);\n\n        if (aaveDistribution && userPoolShare){\n          output = output.plus(aaveDistribution.times(userPoolShare));\n        }\n      }\n    });\n\n    return output;\n  }\n  getStkAaveApr = async (token,tokenConfig,aaveConversionRate=null) => {\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens','stkAAVE']);\n    if (!stkAAVETokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getStkAaveApr_${tokenConfig.idle.token}_${aaveConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let stkAaveAPR = this.BNify(0);\n    const aaveDistribution = await this.getStkAaveDistribution(tokenConfig);\n\n    if (aaveDistribution && this.BNify(aaveDistribution).gt(0)){\n\n      // Get COMP conversion rate\n      if (!aaveConversionRate){\n        const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n        try {\n          const destTokenConfig = {\n            address:stkAAVETokenConfig.addressForPrice || stkAAVETokenConfig.address\n          };\n          aaveConversionRate = await this.getUniswapConversionRate(DAITokenConfig,destTokenConfig);\n        } catch (error) {\n\n        }\n        if (!aaveConversionRate || aaveConversionRate.isNaN()){\n          aaveConversionRate = this.BNify(1);\n        }\n      }\n\n      const stkAaveValue = this.BNify(aaveConversionRate).times(aaveDistribution);\n\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,false);\n\n      if (tokenAllocation){\n        stkAaveAPR = stkAaveValue.div(tokenAllocation.totalAllocationConverted).times(100);\n\n        // console.log('getStkAaveApr',tokenConfig.idle.token,aaveDistribution.toFixed(),this.BNify(aaveConversionRate).toFixed(),stkAaveValue.toFixed(),tokenAllocation.totalAllocationConverted.toFixed(),stkAaveAPR.toFixed());\n\n        if (!this.BNify(stkAaveAPR).isNaN()){\n          this.setCachedDataWithLocalStorage(cachedDataKey,stkAaveAPR);\n        }\n      }\n    }\n\n    return stkAaveAPR;\n  }\n  getCompAPR = async (token,tokenConfig,cTokenIdleSupply=null,compConversionRate=null) => {\n    const COMPTokenConfig = this.getGlobalConfig(['govTokens','COMP']);\n    if (!COMPTokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getCompAPR_${tokenConfig.idle.token}_${cTokenIdleSupply}_${compConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let compAPR = this.BNify(0);\n    const compDistribution = await this.getCompDistribution(tokenConfig,cTokenIdleSupply);\n\n    if (compDistribution){\n\n      const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n        \n      // Get COMP conversion rate\n      if (!compConversionRate){\n        try {\n          compConversionRate = await this.getUniswapConversionRate(DAITokenConfig,COMPTokenConfig);\n        } catch (error) {\n\n        }\n        if (!compConversionRate || compConversionRate.isNaN()){\n          compConversionRate = this.BNify(1);\n        }\n      }\n\n      const compValue = this.BNify(compConversionRate).times(compDistribution);\n\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,false);\n\n      if (tokenAllocation){\n        compAPR = compValue.div(tokenAllocation.totalAllocationConverted).times(100);\n        if (!this.BNify(compAPR).isNaN()){\n          this.setCachedDataWithLocalStorage(cachedDataKey,compAPR);\n        }\n      }\n    }\n\n    return compAPR;\n  }\n  getCompSpeed = async (cTokenAddress) => {\n    let compSpeed = await this.genericContractCallCached('Comptroller','compSpeeds',[cTokenAddress]);\n    if (compSpeed){\n      return this.BNify(compSpeed);\n    }\n    return null;\n  }\n  getCompDistribution = async (tokenConfig,cTokenIdleSupply=null,annualize=true) => {\n\n    const cachedDataKey = `getCompDistribution_${tokenConfig.idle.token}_${cTokenIdleSupply}_${annualize}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const cTokenInfo = tokenConfig.protocols.find( p => (p.name === 'compound') );\n    if (cTokenInfo){\n\n      // Get IdleToken allocation in compound\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,false);\n      const compoundAllocationPerc = tokenAllocation.protocolsAllocationsPerc[cTokenInfo.address.toLowerCase()];\n\n      // Calculate distribution if compound allocation >= 0.1%\n      if (compoundAllocationPerc && compoundAllocationPerc.gte(0.001)){\n\n        // Get COMP distribution speed and Total Supply\n        const [\n          compSpeed,\n          cTokenTotalSupply\n        ] = await Promise.all([\n          this.getCompSpeed(cTokenInfo.address),\n          this.getTokenTotalSupply(cTokenInfo.token)\n        ]);\n\n        if (compSpeed && cTokenTotalSupply){\n\n          // Get Idle liquidity supply\n          if (!cTokenIdleSupply){\n            cTokenIdleSupply = await this.getContractBalance(cTokenInfo.token,tokenConfig.idle.address);\n          }\n\n          if (cTokenIdleSupply){\n\n            // Get COMP distribution for Idle in a Year\n            const blocksPerYear = this.getGlobalConfig(['network','blocksPerYear']);\n\n            // Take 50% of distrubution for lenders side\n            const compoundPoolShare = this.BNify(cTokenIdleSupply).div(this.BNify(cTokenTotalSupply));\n            let compDistribution = this.BNify(compSpeed).times(compoundPoolShare);\n\n            if (annualize){\n              compDistribution = compDistribution.div(1e18).times(this.BNify(blocksPerYear));\n            }\n\n            if (!this.BNify(compDistribution).isNaN()){\n              return this.setCachedDataWithLocalStorage(cachedDataKey,compDistribution);\n            }\n          }\n        }\n      }\n    }\n\n    return null;\n  }\n  getCompUserDistribution = async (account=null,availableTokens=null) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens){\n      return false;\n    }\n\n    let output = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const cTokenInfo = tokenConfig.protocols.find( p => (p.name === 'compound') );\n      if (cTokenInfo){\n        const [\n          userPoolShare,\n          compDistribution,\n        ] = await Promise.all([\n          this.getUserPoolShare(account,tokenConfig,false),\n          this.getCompDistribution(tokenConfig,null,false),\n        ]);\n\n        if (compDistribution && userPoolShare){\n          output = output.plus(compDistribution.times(userPoolShare));\n        }\n      }\n    });\n\n    return output;\n  }\n  getCompAvgApr = async (availableTokens=null) => {\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n    let output = this.BNify(0);\n    let totalAllocation = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [compApr,tokenAllocation] = await Promise.all([\n        this.getCompAPR(token,tokenConfig),\n        this.getTokenAllocation(tokenConfig,false,false)\n      ]);\n      \n      if (compApr && tokenAllocation){\n        output = output.plus(compApr.times(tokenAllocation.totalAllocation));\n        totalAllocation = totalAllocation.plus(tokenAllocation.totalAllocation);\n        // this.customLog(token,compApr.toString(),tokenAllocation.totalAllocation.toString(),output.toString(),totalAllocation.toString());\n      }\n    });\n\n    output = output.div(totalAllocation);\n\n    return output;\n  }\n  getTokensCsv = async () => {\n\n    // eslint-disable-next-line\n    Array.prototype.sum = function() {\n      return this.reduce(function(pv, cv) { return pv + cv; }, 0);\n    };\n    // eslint-disable-next-line\n    Array.prototype.max = function() {\n      return Math.max.apply(null, this);\n    };\n    // eslint-disable-next-line\n    Array.prototype.avg = function() {\n      return this.sum()/this.length;\n    };\n\n    const csv = [];\n    const availableStrategies = this.props.availableStrategies;\n    await this.asyncForEach(Object.keys(availableStrategies), async (strategy) => {\n      const availableTokens = availableStrategies[strategy];\n      const isRisk = strategy === 'risk';\n      await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n        const tokenConfig = availableTokens[token];\n        const rates = await this.getTokenApiData(tokenConfig.address,isRisk,null,null,false,7200,'ASC');\n        const header = [];\n        let protocols = null;\n        const rows = [];\n        const aprAvg = {};\n        const scoreAvg = {};\n\n        const lastRow = rates[rates.length-1];\n\n        rates.forEach( r => {\n          if (!protocols){\n            header.push('Token');\n            header.push('Date');\n\n            // Get protocols\n            protocols = [];\n            lastRow.protocolsData.forEach( p1 => {\n              const foundProtocol = tokenConfig.protocols.find( p2 => ( p2.address.toLowerCase() === p1.protocolAddr.toLowerCase() ) );\n              if (foundProtocol){\n                protocols.push(foundProtocol);\n              }\n            });\n\n            // Add APR columns\n            header.push('APR Idle');\n            header.push('SCORE Idle');\n\n            aprAvg['idle'] = [];\n            scoreAvg['idle'] = [];\n\n            protocols.forEach( p => {\n              header.push('APR '+p.name);\n              header.push('SCORE '+p.name);\n\n              aprAvg[p.name] = [];\n              scoreAvg[p.name] = [];\n            });\n\n            rows.push(header.join(','));\n          }\n\n          const date = moment(r.timestamp*1000).format('YYYY-MM-DD');\n          const rate = this.BNify(r.idleRate).div(1e18).toFixed(5);\n          const score = parseFloat(r.idleScore);\n\n          const row = [];\n          row.push(`${token}-${strategy}`);\n          row.push(date);\n          row.push(rate);\n          row.push(score);\n\n          if (date>='2020-09-15'/* && date<='2020-11-09'*/){\n            aprAvg['idle'].push(parseFloat(rate));\n            scoreAvg['idle'].push(parseFloat(score));\n          }\n\n          protocols.forEach( pInfo => {\n            const pData = r.protocolsData.find( p => (p.protocolAddr.toLowerCase() === pInfo.address.toLowerCase()) );\n            let pRate = '';\n            let pScore = '';\n            if (pData){\n              pScore = !this.BNify(pData.defiScore).isNaN() ? parseFloat(pData.defiScore) : '0.00000';\n              pRate = !this.BNify(pData.rate).isNaN() ? this.BNify(pData.rate).div(1e18) : '0.00000';\n              if (typeof pData[`${pInfo.name}AdditionalAPR`] !== 'undefined'){\n                const additionalRate = this.BNify(pData[`${pInfo.name}AdditionalAPR`]).div(1e18);\n                if (!additionalRate.isNaN()){\n                  pRate = pRate.plus(additionalRate);\n                }\n              }\n\n              if (date>='2020-09-15'/* && date<='2020-11-09'*/){\n                if (!isNaN(parseFloat(pRate))){\n                  aprAvg[pInfo.name].push(parseFloat(pRate));\n                }\n                if (!isNaN(parseFloat(pScore))){\n                  scoreAvg[pInfo.name].push(parseFloat(pScore));\n                }\n              }\n            }\n\n            row.push(pRate);\n            row.push(pScore);\n          });\n\n          rows.push(row.join(','));\n        });\n\n        Object.keys(aprAvg).forEach( p => {\n          const avgRate = aprAvg[p].sum()/aprAvg[p].length;\n          this.customLog(`${token}-${strategy}-${p} - Avg Rate: ${avgRate}`);\n        });\n\n        Object.keys(scoreAvg).forEach( p => {\n          const avgScore = scoreAvg[p].sum()/scoreAvg[p].length;\n          this.customLog(`${token}-${strategy}-${p} - Avg Score: ${avgScore}`);\n        });\n\n        // if (token==='DAI' && isRisk){\n        //   debugger;\n        // }\n\n        csv.push(rows.join('\\n'));\n      });\n    });\n\n    this.customLog(csv.join('\\n'));\n  }\n  getGovTokenPool = async (govToken=null,availableTokens=null,convertToken=null) => {\n    let output = this.BNify(0);\n\n    if (!availableTokens){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const enabledTokens = govToken ? [govToken] : null;\n      const compTokenBalance = await this.getGovTokensBalances(tokenConfig.idle.address,convertToken,enabledTokens);\n      if (compTokenBalance && compTokenBalance.total){\n        output = output.plus(compTokenBalance.total);\n      }\n    });\n    return output;\n  }\n  getIdleGovToken = () => {\n    if (!this.idleGovToken){\n      this.idleGovToken = new IdleGovToken(this.props);\n    }\n    return this.idleGovToken;\n  }\n  getTokenGovTokens = (tokenConfig) => {\n    const output = {};\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    Object.keys(govTokens).forEach( govToken => {\n      const govTokenConfig = govTokens[govToken];\n      if (!govTokenConfig.enabled || govTokenConfig.disabledTokens.includes(tokenConfig.idle.token)){\n        return;\n      }\n      if (govTokenConfig.protocol === 'idle'){\n        output[govToken] = govTokenConfig;\n      } else {\n        const foundProtocol = tokenConfig.protocols.find( p => (p.enabled && p.name.toLowerCase() === govTokenConfig.protocol.toLowerCase()) )\n        if (foundProtocol){\n          output[govToken] = govTokenConfig;\n        }\n      }\n    });\n    return output;\n  }\n  fixDistributionSpeed = (speed,frequency='day',mode='block') => {\n    const blocksPerYear = this.BNify(this.getGlobalConfig(['network','blocksPerYear']));\n    const secondsPerYear = this.BNify(this.getGlobalConfig(['network','secondsPerYear']));\n    const multipliers = {\n      'day':{\n        'block':blocksPerYear.div(365.242199),\n        'second':secondsPerYear.div(365.242199)\n      },\n      'week':{\n        'block':blocksPerYear.div(52.1429),\n        'second':secondsPerYear.div(52.1429)\n      },\n      'month':{\n        'block':blocksPerYear.div(12),\n        'second':secondsPerYear.div(12)\n      },\n      'year':{\n        'block':blocksPerYear.div(1),\n        'second':secondsPerYear.div(1)\n      }\n    };\n    speed = this.BNify(speed);\n    if (speed && !speed.isNaN()){\n      return speed.times(multipliers[frequency][mode]);\n    }\n    return null;\n  }\n  getGovTokensUserDistributionSpeed = async (account,tokenConfig=null,enabledTokens=null) => {\n    const govTokensUserDistribution = {};\n    const govTokens = this.getGlobalConfig(['govTokens']);\n\n    await this.asyncForEach(Object.keys(govTokens),async (govToken) => {\n      if (enabledTokens && !enabledTokens.includes(govToken)){\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled){\n        return;\n      }\n\n      const availableTokens = {};\n      availableTokens[tokenConfig.token] = tokenConfig;\n\n      let output = null;\n      switch (govToken){\n        case 'COMP':\n          output = await this.getCompUserDistribution(account,availableTokens);\n        break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          output = await idleGovToken.getUserDistribution(account,availableTokens);\n        break;\n        default:\n        break;\n      }\n\n      if (output){\n        output = output.div(1e18);\n        if (govTokenConfig.distributionFrequency){\n          output = this.fixDistributionSpeed(output,govTokenConfig.distributionFrequency,govTokenConfig.distributionMode);\n        }\n        govTokensUserDistribution[govToken] = output;\n      }\n    });\n\n    return govTokensUserDistribution;\n  }\n  getGovTokensDistributionSpeed = async (tokenConfig,enabledTokens=null) => {\n    const govTokensDistribution = {};\n    const tokenGovTokens = this.getTokenGovTokens(tokenConfig);\n    \n    await this.asyncForEach(Object.keys(tokenGovTokens), async (govToken) => {\n      let govSpeed = null;\n      const govTokenConfig = tokenGovTokens[govToken];\n\n      switch (govToken){\n        case 'COMP':\n          govSpeed = await this.getCompDistribution(tokenConfig,null,false);\n        break;\n        case 'stkAAVE':\n          govSpeed = await this.getStkAaveDistribution(tokenConfig,null,false);\n        break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          govSpeed = await idleGovToken.getSpeed(tokenConfig.idle.address);\n        break;\n        default:\n        break;\n      }\n\n      if (govSpeed){\n        govSpeed = govSpeed.div(1e18);\n        if (govTokenConfig.distributionFrequency && govTokenConfig.distributionMode){\n          govSpeed = this.fixDistributionSpeed(govSpeed,govTokenConfig.distributionFrequency,govTokenConfig.distributionMode);\n        }\n        govTokensDistribution[govToken] = govSpeed;\n      }\n    });\n\n    return govTokensDistribution;\n  }\n  getGovTokensAprs = async (token,tokenConfig,enabledTokens=null) => {\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const govTokensAprs = {}\n\n    await this.asyncForEach(Object.keys(govTokens),async (govToken) => {\n\n      if (enabledTokens && !enabledTokens.includes(govToken)){\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled || govTokenConfig.aprTooltipMode === false){\n        return;\n      }\n\n      let output = null;\n      let tokenAllocation = null;\n\n      switch (govToken){\n        case 'stkAAVE':\n          switch (govTokenConfig.aprTooltipMode){\n            default:\n            case 'apr':\n              [output,tokenAllocation] = await Promise.all([\n                this.getStkAaveApr(token,tokenConfig),\n                this.getTokenAllocation(tokenConfig,false,false)\n              ]);\n\n              // Cut the AAVE token proportionally on Idle funds allocation in aave\n              if (tokenAllocation){\n                const aTokenConfig = tokenConfig.protocols.find( p => (p.name === govTokenConfig.protocol) );\n                if (aTokenConfig){\n                  if (tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()]){\n                    const aaveAllocationPerc = tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()];\n                    output = output.times(aaveAllocationPerc);\n                  }\n                }\n              }\n            break;\n          }\n        break;\n        case 'COMP':\n          switch (govTokenConfig.aprTooltipMode){\n            default:\n            case 'apr':\n              [output,tokenAllocation] = await Promise.all([\n                this.getCompAPR(token,tokenConfig),\n                this.getTokenAllocation(tokenConfig,false,false)\n              ]);\n\n              // Cut the COMP token proportionally on Idle funds allocation in compound\n              if (tokenAllocation){\n                const cTokenConfig = tokenConfig.protocols.find( p => (p.name === 'compound') );\n                if (cTokenConfig){\n                  if (tokenAllocation.protocolsAllocationsPerc[cTokenConfig.address.toLowerCase()]){\n                    const compoundAllocationPerc = tokenAllocation.protocolsAllocationsPerc[cTokenConfig.address.toLowerCase()];\n                    output = output.times(compoundAllocationPerc);\n                  }\n                }\n              }\n            break;\n          }\n        break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          switch (govTokenConfig.aprTooltipMode){\n            case 'apr':\n              output = await idleGovToken.getAPR(token,tokenConfig);\n            break;\n            case 'distribution':\n              output = await idleGovToken.getSpeed(tokenConfig.idle.address);\n              if (output){\n                output = this.fixTokenDecimals(output,18);\n                output = this.fixDistributionSpeed(output,govTokenConfig.distributionFrequency,govTokenConfig.distributionMode);\n              }\n            break;\n            case 'userDistribution':\n              output = await idleGovToken.getUserDistribution(tokenConfig);\n            break;\n            default:\n            break;\n          }\n        break;\n        default:\n        break;\n      }\n\n      if (output !== null && this.BNify(output).gt(0)){\n        govTokensAprs[govToken] = output;\n      }\n    });\n\n    return govTokensAprs;\n  }\n  getGovTokensBalances = async (address=null,convertToken='DAI',enabledTokens=null) => {\n    if (!address){\n      address = this.props.tokenConfig.idle.address;\n    }\n\n    const cachedDataKey = `getGovTokensBalances_${address}_${convertToken}_${JSON.stringify(enabledTokens)}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const govTokensBalances = {}\n\n    await this.asyncForEach(Object.keys(govTokens),async (token) => {\n\n      if (enabledTokens && !enabledTokens.includes(token)){\n        return;\n      }\n      \n      const govTokenConfig = govTokens[token];\n\n      if (!govTokenConfig.enabled){\n        return;\n      }\n\n      const destTokenConfig = {\n        address:govTokenConfig.addressForPrice || govTokenConfig.address\n      };\n\n      // Get gov token balance\n      let govTokenBalance = await this.getProtocolBalance(token,address);\n\n      if (govTokenBalance){\n        // Get gov token conversion rate\n        let tokenConversionRate = null;\n        if (convertToken){\n          const fromTokenConfig = this.getGlobalConfig(['stats','tokens',convertToken]);\n          try {\n            tokenConversionRate = await this.getUniswapConversionRate(fromTokenConfig,destTokenConfig);\n          } catch (error) {\n            tokenConversionRate = this.BNify(0);\n          }\n        }\n\n        const tokenBalance = this.fixTokenDecimals(govTokenBalance,govTokens[token].decimals,tokenConversionRate);\n\n        // Fix token decimals and convert\n        govTokensBalances[token] = tokenBalance;\n\n        // Initialize Total gov Tokens\n        if (!govTokensBalances.total){\n          govTokensBalances.total = this.BNify(0);\n        }\n\n        // Sum Total gov Tokens\n        govTokensBalances.total = govTokensBalances.total.plus(govTokensBalances[token]);\n      }\n    });\n\n    return this.setCachedData(cachedDataKey,govTokensBalances);\n  }\n  getGovTokenConfigByAddress = (address) => {\n    if (!address){\n      return false;\n    }\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    return Object.values(govTokens).find( tokenConfig => (tokenConfig.enabled && tokenConfig.address.toLowerCase() === address.toLowerCase()) );\n  }\n  getGovTokensUserTotalBalance = async (account=null,availableTokens=null,convertToken=null,checkShowBalance=true) => {\n\n    // Check for cached data\n    const cachedDataKey = `govTokensUserTotalBalance_${account}_${JSON.stringify(Object.keys(availableTokens))}_${convertToken}_${checkShowBalance}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const govTokensUserBalances = await this.getGovTokensUserBalances(account,availableTokens,convertToken,null,checkShowBalance);\n    if (govTokensUserBalances){\n      const govTokensEarnings = Object.values(govTokensUserBalances).reduce( (acc, govTokenAmount) => {\n        acc = acc.plus(this.BNify(govTokenAmount));\n        return acc;\n      }, this.BNify(0));\n\n      return this.setCachedDataWithLocalStorage(cachedDataKey,govTokensEarnings);\n    }\n    return this.BNify(0);\n  }\n  getGovTokensIndexes = async (account,tokenConfig) => {\n    if (!account){\n      account = this.props.account;\n    }\n    const output = {};\n    const govTokensAmounts = await this.getGovTokensUserAmounts(tokenConfig.idle.token,account);\n    if (govTokensAmounts){\n      await this.asyncForEach(govTokensAmounts, async (govTokenAmount,govTokenIndex) => {\n        // Get gov Token config by index\n        const govTokenAddress = await this.getGovTokenAddessByIndex(tokenConfig.idle.token,govTokenIndex);\n\n        if (govTokenAddress){\n          const govTokenConfig = this.getGovTokenConfigByAddress(govTokenAddress);\n          if (govTokenConfig){\n            output[govTokenConfig.token] = govTokenIndex;\n          }\n        }\n      });\n    }\n\n    return output;\n  }\n  getGovTokenAddessByIndex = async (token,govTokenIndex) => {\n    const cachedDataKey = `govTokenAddressByIndex_${token}_${govTokenIndex}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    // console.log(cachedDataKey,cachedData);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const govTokenAddress = await this.genericContractCall(token,'govTokens',[govTokenIndex]);\n    return this.setCachedDataWithLocalStorage(cachedDataKey,govTokenAddress,null);\n  }\n  getGovTokensUserAmounts = async (token,account) => {\n    const cachedDataKey = `govTokenUserAmount_${token}_${account}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const govTokenAddress = await this.genericContractCall(token,'getGovTokensAmounts',[account]);\n    return this.setCachedDataWithLocalStorage(cachedDataKey,govTokenAddress);\n  }\n  getGovTokensUserBalances = async (account=null,availableTokens=null,convertToken=null,govTokenConfigForced=null,checkShowBalance=false) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.availableStrategies && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    const output = {};\n\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const idleTokenConfig = availableTokens[token].idle;\n\n      // Get govTokens amounts\n      const govTokensAmounts = await this.getGovTokensUserAmounts(idleTokenConfig.token,account);\n\n      // console.log('getGovTokensUserBalances_1',idleTokenConfig.token,govTokensAmounts);\n\n      if (govTokensAmounts){\n        await this.asyncForEach(govTokensAmounts, async (govTokenAmount,govTokenIndex) => {\n          govTokenAmount = this.BNify(govTokenAmount);\n          // Get gov Token config by index\n          const govTokenAddress = await this.getGovTokenAddessByIndex(idleTokenConfig.token,govTokenIndex);\n\n          // console.log('getGovTokensUserBalances_2',idleTokenConfig.token,govTokenIndex,govTokenAddress);\n\n          if (govTokenAddress){\n            const govTokenConfig = govTokenConfigForced ? govTokenConfigForced : this.getGovTokenConfigByAddress(govTokenAddress);\n\n            if (govTokenConfig && (!checkShowBalance || govTokenConfig.showBalance) && govTokenConfig.address && govTokenConfig.address.toLowerCase() === govTokenAddress.toLowerCase()){\n\n              // Get gov token conversion rate\n              let tokenConversionRate = null;\n              if (convertToken){\n                const fromTokenConfig = this.getGlobalConfig(['stats','tokens',convertToken]);\n                if (fromTokenConfig){\n                  try {\n                    tokenConversionRate = await this.getUniswapConversionRate(fromTokenConfig,govTokenConfig);\n                  } catch (error) {\n                    \n                  }\n                }\n              }\n\n              govTokenAmount = this.fixTokenDecimals(govTokenAmount,govTokenConfig.decimals,tokenConversionRate);\n\n              // console.log('getGovTokensUserBalances',idleTokenConfig.token,govTokenIndex,govTokenConfig.token,govTokenAddress,parseFloat(tokenConversionRate),parseFloat(govTokenAmount));\n\n              // Initialize govToken balance\n              if (!output[govTokenConfig.token]){\n                output[govTokenConfig.token] = this.BNify(0); // this.BNify(1) for testing\n              }\n\n              // Add govTokens balance\n              output[govTokenConfig.token] = output[govTokenConfig.token].plus(govTokenAmount);\n            }\n          }\n        });\n      }\n    });\n\n    return output;\n  }\n  getTokenFees = async (tokenConfig=null) => {\n    if (!tokenConfig && this.props.tokenConfig){\n      tokenConfig = this.props.tokenConfig;\n    }\n    const fee = await this.genericContractCallCached(tokenConfig.idle.token, 'fee', [], {}, 'latest', null);\n    if (fee){\n      return this.BNify(fee).div(this.BNify(100000));\n    }\n    return null;\n  }\n  getUserTokenFees = async (tokenConfig=null,account=null) => {\n    if (!tokenConfig && this.props.tokenConfig){\n      tokenConfig = this.props.tokenConfig;\n    }\n    if (!account && this.props.account){\n      account = this.props.account;\n    }\n\n    if (!account || !tokenConfig){\n      return null;\n    }\n\n    let [\n      feePercentage,\n      amountLent,\n      redeemableBalance\n    ] = await Promise.all([\n      this.getTokenFees(tokenConfig),\n      this.loadAssetField('amountLent',tokenConfig.token,tokenConfig,account),\n      this.loadAssetField('redeemableBalance',tokenConfig.token,tokenConfig,account)\n    ]);\n\n    if (feePercentage && amountLent && redeemableBalance){\n      const gain = redeemableBalance.minus(amountLent);\n      const fees = gain.times(feePercentage);\n\n      // this.customLog('fees',tokenConfig.token,amountLent.toString(),redeemableBalance.toString(),gain.toString(),fees.toString());\n\n      return fees;\n    }\n\n    return null;\n  }\n  getGovTokenUserBalance = async (govTokenConfig,account=null,availableTokens=null,convertToken=null) => {\n    const govTokensUserBalances = await this.getGovTokensUserBalances(account,availableTokens,convertToken,govTokenConfig);\n    return govTokensUserBalances && govTokensUserBalances[govTokenConfig.token] ? govTokensUserBalances[govTokenConfig.token] : this.BNify(0);\n  }\n  getTotalTVL = async () => {\n    const tokensTVL = await this.getTokensTVL();\n    return Object.values(tokensTVL).reduce( (totalTVL,tokenInfo) => {\n      const tokenTVL = this.BNify(tokenInfo.totalTVL);\n      if (tokenTVL && !tokenTVL.isNaN()){\n        totalTVL = totalTVL.plus(tokenTVL);\n      }\n      return totalTVL;\n    },this.BNify(0));\n  }\n  getTokensTVL = async () => {\n    const output = {};\n    const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n    await this.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n      const isRisk = strategy === 'risk';\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n\n        let tokenTVL = this.BNify(0);\n        let totalTVL = this.BNify(0);\n        let oldTokenTVL = this.BNify(0);\n        const tokenConfig = availableTokens[token];\n        const idleTokenName = tokenConfig.idle.token;\n\n        output[idleTokenName] = {\n          tokenTVL,\n          totalTVL,\n          oldTokenTVL,\n          govTokens:{},\n        };\n\n        const [\n          tokenPrice,\n          totalSupply\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.getIdleTokenSupply(tokenConfig)\n        ]);\n\n        tokenTVL = this.fixTokenDecimals(totalSupply,18).times(tokenPrice);\n        tokenTVL = await this.convertTokenBalance(tokenTVL,token,tokenConfig,isRisk);\n\n        output[idleTokenName].tokenTVL = tokenTVL;\n        totalTVL = totalTVL.plus(tokenTVL);\n\n        // Add Gov Tokens\n        const govTokens = this.getTokenGovTokens(tokenConfig);\n        if (govTokens){\n          await this.asyncForEach(Object.keys(govTokens).filter( govToken => (govTokens[govToken].showAUM) ), async (govToken) => {\n            const govTokenConfig = govTokens[govToken];\n            const [\n              govTokenBalance,\n              govTokenConversionRate\n            ] = await Promise.all([\n              this.getProtocolBalance(govToken,tokenConfig.idle.address),\n              this.getUniswapConversionRate(DAITokenConfig,govTokenConfig)\n            ]);\n            \n            if (govTokenBalance && govTokenConversionRate){\n              const govTokenBalanceConverted = this.fixTokenDecimals(govTokenBalance,govTokenConfig.decimals).times(this.BNify(govTokenConversionRate));\n              if (govTokenBalanceConverted && !govTokenBalanceConverted.isNaN()){\n                totalTVL = totalTVL.plus(govTokenBalanceConverted);\n                output[idleTokenName].govTokens[govToken] = govTokenBalanceConverted;\n              }\n            }\n          });\n        }\n\n        // Get old token allocation\n        if (tokenConfig.migration && tokenConfig.migration.oldContract){\n          const oldTokenConfig = Object.assign({},tokenConfig);\n          oldTokenConfig.protocols = Object.values(tokenConfig.protocols);\n          oldTokenConfig.idle = Object.assign({},tokenConfig.migration.oldContract);\n\n          // Replace protocols with old protocols\n          if (oldTokenConfig.migration.oldProtocols){\n            oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n              const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n              if (foundProtocol){\n                const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                oldTokenConfig.protocols[protocolPos] = oldProtocol;\n              }\n            });\n          }\n\n          const [\n            oldTokenPrice,\n            oldTotalSupply\n          ] = await Promise.all([\n            this.getIdleTokenPrice(oldTokenConfig),\n            this.getIdleTokenSupply(oldTokenConfig.idle.name)\n          ]);\n\n          if (oldTokenPrice && oldTotalSupply){\n            oldTokenTVL = this.fixTokenDecimals(oldTotalSupply,18).times(oldTokenPrice);\n            oldTokenTVL = await this.convertTokenBalance(oldTokenTVL,token,oldTokenConfig,isRisk);\n            if (oldTokenTVL && !oldTokenTVL.isNaN()){\n              output[idleTokenName].oldTokenTVL = oldTokenTVL;\n              totalTVL = totalTVL.plus(oldTokenTVL);\n            }\n          }\n        }\n\n        output[idleTokenName].totalTVL = totalTVL;\n      });\n    });\n\n    return output;\n  }\n  getSubstackLatestFeed = async () => {\n    const cachedDataKey = `substackLatestFeed`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const config = this.getGlobalConfig(['stats','config']);\n    const endpointInfo = this.getGlobalConfig(['stats','substack']);\n    const idleSubstackFeed = await this.makeRequest(endpointInfo.endpoint,false,config);\n\n    if (idleSubstackFeed && idleSubstackFeed.data && idleSubstackFeed.data.items && idleSubstackFeed.data.items.length>0){\n      const latestFeed = idleSubstackFeed.data.items[0];\n      return this.setCachedDataWithLocalStorage(cachedDataKey,latestFeed,endpointInfo.TTL);\n    }\n\n    return null;\n  }\n  getAggregatedStats = async (addGovTokens=true) => {\n    const config = this.getGlobalConfig(['stats','config']);\n    const endpointInfo = this.getGlobalConfig(['stats','tvls']);\n    const tvls = await this.makeCachedRequest(endpointInfo.endpoint,endpointInfo.TTL,true,false,config);\n\n    if (tvls){\n      const avgAPY = this.BNify(tvls.avgAPY);\n      const totalAUM = this.BNify(tvls.totalTVL);\n      return {\n        avgAPY,\n        totalAUM\n      };\n    } else {\n      return await this.getAggregatedStats_chain();\n    }\n  }\n  getAggregatedStats_chain = async (addGovTokens=true) => {\n\n    // Check for cached data\n    const cachedDataKey = `getAggregatedStats_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && (cachedData.avgAPR && !this.BNify(cachedData.avgAPR).isNaN()) && (cachedData.avgAPY && !this.BNify(cachedData.avgAPY).isNaN()) && (cachedData.totalAUM && !this.BNify(cachedData.totalAUM).isNaN())){\n      return {\n        avgAPR:this.BNify(cachedData.avgAPR),\n        avgAPY:this.BNify(cachedData.avgAPY),\n        totalAUM:this.BNify(cachedData.totalAUM)\n      };\n    }\n\n    let avgAPR = this.BNify(0);\n    let avgAPY = this.BNify(0);\n    let totalAUM = this.BNify(0);\n    const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n    await this.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n      const isRisk = strategy === 'risk';\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n        const tokenConfig = availableTokens[token];\n        const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,addGovTokens);\n        const tokenAprs = await this.getTokenAprs(tokenConfig,tokenAllocation,addGovTokens);\n        if (tokenAllocation && tokenAllocation.totalAllocationWithUnlent && !tokenAllocation.totalAllocationWithUnlent.isNaN()){\n          const tokenAUM = await this.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent,token,tokenConfig,isRisk);\n          totalAUM = totalAUM.plus(tokenAUM);\n          // console.log(tokenConfig.idle.token+'V4',tokenAUM.toFixed());\n          if (tokenAprs && tokenAprs.avgApr && !tokenAprs.avgApr.isNaN()){\n            avgAPR = avgAPR.plus(tokenAUM.times(tokenAprs.avgApr));\n            avgAPY = avgAPY.plus(tokenAUM.times(tokenAprs.avgApy));\n          }\n        }\n\n        // Add Gov Tokens\n        const govTokens = this.getTokenGovTokens(tokenConfig);\n        if (govTokens){\n          await this.asyncForEach(Object.keys(govTokens).filter( govToken => (govTokens[govToken].showAUM) ), async (govToken) => {\n            const govTokenConfig = govTokens[govToken];\n            const [\n              tokenBalance,\n              tokenConversionRate\n            ] = await Promise.all([\n              this.getProtocolBalance(govToken,tokenConfig.idle.address),\n              this.getUniswapConversionRate(DAITokenConfig,govTokenConfig)\n            ]);\n            \n            if (tokenBalance && tokenConversionRate){\n              const tokenBalanceConverted = this.fixTokenDecimals(tokenBalance,govTokenConfig.decimals).times(this.BNify(tokenConversionRate));\n              if (tokenBalanceConverted && !tokenBalanceConverted.isNaN()){\n                // console.log(tokenConfig.idle.token+'V4 - COMP',tokenBalanceConverted.toFixed());\n                totalAUM = totalAUM.plus(tokenBalanceConverted);\n              }\n            }\n          });\n        }\n\n        // Get old token allocation\n        if (tokenConfig.migration && tokenConfig.migration.oldContract){\n          const oldTokenConfig = Object.assign({},tokenConfig);\n          oldTokenConfig.protocols = Object.values(tokenConfig.protocols);\n          oldTokenConfig.idle = Object.assign({},tokenConfig.migration.oldContract);\n\n          // Replace protocols with old protocols\n          if (oldTokenConfig.migration.oldProtocols){\n            oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n              const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n              if (foundProtocol){\n                const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                oldTokenConfig.protocols[protocolPos] = oldProtocol;\n              }\n            });\n          }\n\n          const oldTokenAllocation = await this.getTokenAllocation(oldTokenConfig,false,false);\n          if (oldTokenAllocation && oldTokenAllocation.totalAllocation && !oldTokenAllocation.totalAllocation.isNaN()){\n            const oldTokenTotalAllocation = await this.convertTokenBalance(oldTokenAllocation.totalAllocation,token,oldTokenConfig,isRisk);\n            totalAUM = totalAUM.plus(oldTokenTotalAllocation);\n            // console.log(oldTokenConfig.idle.name,oldTokenTotalAllocation.toFixed(5));\n          }\n        }\n      });\n    });\n\n    avgAPR = avgAPR.div(totalAUM);\n    avgAPY = avgAPY.div(totalAUM);\n\n    const output = {\n      avgAPR,\n      avgAPY,\n      totalAUM\n    };\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey,output);\n  }\n  getTokenApy = async (tokenConfig) => {\n    const tokenAprs = await this.getTokenAprs(tokenConfig);\n    if (tokenAprs && tokenAprs.avgApy !== null){\n      return tokenAprs.avgApy;\n    }\n    return null;\n  }\n  getTokensToMigrate = async (selectedStrategy=null) => {\n\n    if (!this.props.availableStrategies || !this.props.account){\n      return false;\n    }\n\n    const tokensToMigrate = {};\n\n    await this.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n      if (selectedStrategy && selectedStrategy !== strategy){\n        return;\n      }\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n        const tokenConfig = availableTokens[token];\n        const {\n          migrationEnabled,\n          oldContractBalanceFormatted\n        } = await this.checkMigration(tokenConfig,this.props.account);\n        \n        if (migrationEnabled){\n          const tokenKey = selectedStrategy ? token : tokenConfig.idle.token;\n          tokensToMigrate[tokenKey] = {\n            token,\n            strategy,\n            tokenConfig,\n            oldContractBalanceFormatted\n          }\n        }\n      });\n    });\n\n    return tokensToMigrate;\n  }\n  /*\n  Get protocols tokens balances\n  */\n  getProtocolsTokensBalances = async (protocol=null) => {\n    if (!this.props.account){\n      return false;\n    }\n    const tokenBalances = {};\n    const minTokenBalance = this.BNify(1).div(1e4);\n    const protocolsTokens = this.getGlobalConfig(['tools','tokenMigration','props','availableTokens']);\n    if (protocolsTokens){\n      await this.asyncForEach(Object.keys(protocolsTokens),async (token) => {\n        const tokenConfig = protocolsTokens[token];\n        if (protocol !== null && tokenConfig.protocol.toLowerCase() !== protocol.toLowerCase() ){\n          return;\n        }\n        let tokenContract = this.getContractByName(tokenConfig.token);\n        if (!tokenContract && tokenConfig.abi){\n          tokenContract = await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n        }\n        if (tokenContract){\n          const tokenBalance = await this.getTokenBalance(tokenConfig.token,this.props.account);\n          if (tokenBalance && tokenBalance.gte(minTokenBalance)){\n            tokenBalances[token] = {\n              tokenConfig,\n              balance:tokenBalance,\n            };\n          }\n        }\n      });\n    }\n\n    return tokenBalances;\n  }\n  /*\n  Convert token Balance\n  */\n  convertTokenBalance = async (tokenBalance,token,tokenConfig,isRisk=false) => {\n    // Check for USD conversion rate\n    tokenBalance = this.BNify(tokenBalance);\n    if (tokenBalance.gt(0)){\n      const tokenUsdConversionRate = await this.getTokenConversionRate(tokenConfig,isRisk);\n      // console.log('convertTokenBalance',token,isRisk,tokenUsdConversionRate);\n      if (tokenUsdConversionRate){\n        tokenBalance = tokenBalance.times(tokenUsdConversionRate);\n      }\n    }\n    return tokenBalance;\n  }\n\n  getAvgAPYStats = async (address,isRisk,startTimestamp=null,endTimestamp=null) => {\n\n    const apiResults = await this.getTokenApiData(address,isRisk,startTimestamp,endTimestamp,true,7200);\n\n    if (apiResults && apiResults.length){\n      const apr = apiResults.reduce( (sum,r) => {\n        const idleRate = this.fixTokenDecimals(r.idleRate,18);\n        return sum.plus(idleRate);\n      },this.BNify(0));\n\n      // Calculate average\n      return apr.div(apiResults.length);\n    }\n\n    return this.BNify(0);\n  }\n\n  /*\n  Get idleToken conversion rate\n  */\n  getTokenConversionRate = async (tokenConfig,isRisk,conversionRateField=null,count=0) => {\n\n    if (!conversionRateField){\n      conversionRateField = this.getGlobalConfig(['stats','tokens',tokenConfig.token,'conversionRateField']);\n      if (!conversionRateField){\n        return null;\n      }\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenConversionRate_${tokenConfig.address}_${isRisk}_${conversionRateField}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let tokenData = await this.getTokenApiData(tokenConfig.address,isRisk,null,null,false,null,'desc',1);\n\n    if (tokenData && tokenData.length){\n      tokenData = tokenData.pop();\n      if (tokenData && !this.BNify(tokenData[conversionRateField]).isNaN()){\n        const conversionRate = this.fixTokenDecimals(tokenData[conversionRateField],18);\n        if (!this.BNify(conversionRate).isNaN()){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,conversionRate);\n        }\n      }\n    }\n\n    const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n    const conversionRate = await this.getUniswapConversionRate(DAITokenConfig,tokenConfig);\n    if (!this.BNify(conversionRate).isNaN()){\n      return this.setCachedDataWithLocalStorage(cachedDataKey,conversionRate);\n    }\n\n    if (count<3){\n      return await this.getTokenConversionRate(tokenConfig,isRisk,conversionRateField,count+1); \n    }\n\n    return null;\n  }\n\n  getTokenScore = async (tokenConfig,isRisk) => {\n    // Check for cached data\n    const cachedDataKey = `tokenScore_${tokenConfig.address}_${isRisk}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const apiInfo = globalConfigs.stats.rates;\n    const config = this.getGlobalConfig(['stats','config']);\n    const endpoint = `${apiInfo.endpoint}${tokenConfig.address}?isRisk=${isRisk}&limit=1&order=DESC`;\n    const [\n      tokenData,\n      tokenAllocation\n    ] = await Promise.all([\n      this.makeCachedRequest(endpoint,apiInfo.TTL,true,false,config),\n      this.getTokenAllocation(tokenConfig,false,false)\n    ]);\n\n    let tokenScore = this.BNify(0);\n\n    if (tokenAllocation){\n      Object.keys(tokenAllocation.protocolsAllocationsPerc).forEach( protocolAddr => {\n        const protocolAllocationPerc = this.BNify(tokenAllocation.protocolsAllocationsPerc[protocolAddr]);\n        if (protocolAllocationPerc.gt(0.001)){\n          let protocolScore = null;\n\n          const protocolInfo = tokenData && tokenData.length>0 ? tokenData[0].protocolsData.find( p => (p.protocolAddr.toLowerCase() === protocolAddr.toLowerCase()) ) : null;\n          if (protocolInfo){\n            protocolScore = this.BNify(protocolInfo.defiScore);\n          }\n\n          // Take protocol score from tokenConfig\n          if (!protocolScore || this.BNify(protocolScore).isNaN() || this.BNify(protocolScore).lte(0)){\n            const protocolConfig = tokenConfig.protocols.find(p => p.address.toLowerCase() === protocolAddr.toLowerCase());\n            if (protocolConfig){\n              protocolScore = this.BNify(protocolConfig.defiScore);\n            }\n          }\n\n          if (!protocolScore.isNaN()){\n            tokenScore = tokenScore.plus(protocolScore.times(protocolAllocationPerc));\n          }\n        }\n      });\n    }\n\n    // Fallback\n    if (!tokenScore || tokenScore.isNaN() || tokenScore.lte(0)){\n      tokenScore = await this.getTokenScoreApi(tokenConfig,isRisk);\n    }\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey,tokenScore);\n  }\n\n  /*\n  Get idleToken score\n  */\n  getTokenScoreApi = async (tokenConfig,isRisk) => {\n    // Check for cached data\n    const cachedDataKey = `tokenScoreApi_${tokenConfig.address}_${isRisk}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const apiInfo = globalConfigs.stats.scores;\n    const config = this.getGlobalConfig(['stats','config']);\n    const endpoint = `${apiInfo.endpoint}${tokenConfig.address}?isRisk=${isRisk}`;\n    let scores = await this.makeCachedRequest(endpoint,apiInfo.TTL,true,false,config);\n\n    if (scores && scores.length>0){\n      let tokenData = scores.find( s => s.address.toLowerCase() === tokenConfig.address.toLowerCase() );\n      if (tokenData){\n        let tokenScore = this.BNify(tokenData.idleScore);\n        if (tokenScore && tokenScore.gt(0)){\n          // Set cached data\n          return this.setCachedData(cachedDataKey,tokenScore);\n        // Take latest historical valid score\n        } else {\n          const timestamp = parseInt(Date.now()/1000);\n          const startTimestamp = parseInt(timestamp)-(60*60*24);\n          tokenData = await this.getTokenApiData(tokenConfig.address,isRisk,startTimestamp,null,true,null,'DESC');\n\n          const filteredTokenData = tokenData.filter( d => (this.BNify(d.idleScore).gt(0)) );\n          if (filteredTokenData.length){\n            tokenScore = this.BNify(filteredTokenData[0].idleScore);\n            if (!this.BNify(tokenScore).isNaN()){\n              return this.setCachedDataWithLocalStorage(cachedDataKey,tokenScore);\n            }\n          }\n        }\n      }\n    }\n\n    return this.BNify(0);\n  }\n  /*\n  Get idleTokens aggregated APR\n  */\n  getTokenAprs = async (tokenConfig,tokenAllocation=false,addGovTokens=true) => {\n\n    const tokenAprs = {\n      avgApr: this.BNify(0),\n      avgApy: this.BNify(0)\n    };\n\n    if (!tokenConfig.idle){\n      // console.log('getTokenAprs - !tokenConfig.idle',tokenConfig);\n      return tokenAprs;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenAprs_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && (cachedData.avgApr && !this.BNify(cachedData.avgApr).isNaN()) && (cachedData.avgApy && !this.BNify(cachedData.avgApy).isNaN()) ){\n      // console.log('getTokenAprs - CACHED',tokenConfig.idle.token,cachedData);\n      return {\n        avgApr:this.BNify(cachedData.avgApr),\n        avgApy:this.BNify(cachedData.avgApy)\n      };\n    }\n\n    const Aprs = await this.getAprs(tokenConfig.idle.token);\n\n    if (!Aprs){\n      // console.log('getTokenAprs - !Aprs',Aprs);\n      return tokenAprs;\n    }\n\n    if (!tokenAllocation){\n      tokenAllocation = await this.getTokenAllocation(tokenConfig);\n    }\n\n    if (!tokenAllocation){\n      // console.log('getTokenAprs - !tokenAllocation',tokenAllocation);\n      return tokenAprs;\n    }\n\n    const addresses = Aprs.addresses.map((addr,i) => { return addr.toString().toLowerCase() });\n    const aprs = Aprs.aprs;\n\n    const govTokensAprs = {};\n    const protocolsAprs = {};\n    const protocolsApys = {};\n\n    await this.asyncForEach(tokenConfig.protocols,async (protocolInfo,i) => {\n      const protocolAddr = protocolInfo.address.toString().toLowerCase();\n      const addrIndex = addresses.indexOf(protocolAddr);\n      if ( addrIndex !== -1 ) {\n        let protocolApr = this.BNify(+this.toEth(aprs[addrIndex]));\n        let protocolApy = this.apr2apy(protocolApr.div(100)).times(100);\n\n        if (addGovTokens){\n          let govTokenAPR = null;\n          const tokenGovTokens = this.getTokenGovTokens(tokenConfig);\n          await this.asyncForEach(Object.keys(tokenGovTokens), async (govToken) => {\n            switch (govToken){\n              case 'COMP':\n                govTokenAPR = await this.getCompAPR(tokenConfig.token,tokenConfig);\n              break;\n              case 'stkAAVE':\n                govTokenAPR = await this.getStkAaveApr(tokenConfig.token,tokenConfig);\n              break;\n              default:\n              break;\n            }\n            if (govTokenAPR){\n              govTokensAprs[govToken] = govTokenAPR;\n            }\n          });\n          \n        }\n\n        protocolsApys[protocolAddr] = protocolApy;\n        protocolsAprs[protocolAddr] = protocolApr;\n      }\n    });\n\n    if (tokenAllocation){\n      tokenAprs.avgApr = this.getAvgApr(protocolsAprs,tokenAllocation.protocolsAllocations,tokenAllocation.totalAllocation);\n      tokenAprs.avgApy = this.apr2apy(tokenAprs.avgApr.div(100)).times(100);\n\n      Object.values(govTokensAprs).forEach( govTokenAPR => {\n        tokenAprs.avgApr = tokenAprs.avgApr.plus(govTokenAPR);\n        tokenAprs.avgApy = tokenAprs.avgApy.plus(govTokenAPR);\n      });\n\n      // Add $IDLE token APR\n      const idleGovTokenShowAPR = this.getGlobalConfig(['govTokens','IDLE','showAPR']);\n      const idleGovTokenEnabled = this.getGlobalConfig(['govTokens','IDLE','enabled']);\n      if (idleGovTokenEnabled && idleGovTokenShowAPR){\n        const idleGovToken = this.getIdleGovToken();\n        const idleAPR = await idleGovToken.getAPR(tokenConfig.token,tokenConfig);\n        if (idleAPR){\n          tokenAprs.avgApr = tokenAprs.avgApr.plus(idleAPR);\n          tokenAprs.avgApy = tokenAprs.avgApy.plus(idleAPR);\n        }\n      }\n\n      if (this.BNify(tokenAprs.avgApy).isNaN()){\n        tokenAprs.avgApy = this.BNify(0);\n      }\n      if (this.BNify(tokenAprs.avgApr).isNaN()){\n        tokenAprs.avgApr = this.BNify(0);\n      }\n\n      return this.setCachedDataWithLocalStorage(cachedDataKey,tokenAprs);\n    }\n\n    return tokenAprs;\n  }\n  abbreviateNumber = (value,decimals=3,maxPrecision=5,minPrecision=0) => {\n\n    const isNegative = parseFloat(value)<0;\n    let newValue = this.BNify(value).abs();\n    const suffixes = [\"\", \"K\", \"M\", \"B\",\"T\"];\n    let suffixNum = 0;\n    while (newValue.gte(1000)) {\n      newValue = newValue.div(1000);\n      suffixNum++;\n    }\n\n    maxPrecision = Math.max(1,maxPrecision);\n\n    // Prevent decimals on integer number\n    if (value>=1000){\n      const decimalPart = decimals ? newValue.mod(1).toFixed(maxPrecision).substr(2,decimals) : null;\n      newValue = parseInt(newValue).toString()+( decimalPart ? '.'+decimalPart : '' );\n    } else {\n      newValue = newValue.toFixed(decimals);\n    }\n\n    // Adjust number precision\n    if (newValue>=1 && (newValue.length-1)>maxPrecision){\n      newValue = parseFloat(newValue).toPrecision(maxPrecision);\n    } else if ((newValue.length-1)<minPrecision) {\n      const difference = minPrecision-(newValue.length-1);\n      const append = this.BNify(value).abs().toString().replace('.','').substr((newValue.length-1),difference);\n      newValue += append;\n    }\n\n    // Add minus if number is negative\n    if (isNegative){\n      newValue = '-'+newValue;\n    }\n\n    newValue += suffixes[suffixNum];\n\n    return newValue;\n  }\n  getFormattedBalance(balance,label,decimals,maxLen,highlightedDecimals){\n    const defaultValue = '-';\n    decimals = !isNaN(decimals) ? decimals : 6;\n    maxLen = !isNaN(maxLen) ? maxLen : 10;\n    highlightedDecimals = !isNaN(highlightedDecimals) ? highlightedDecimals : 0;\n    balance = parseFloat(this.BNify(balance)).toFixed(decimals);\n\n    const numLen = balance.toString().replace('.','').length;\n    if (numLen>maxLen){\n      decimals = Math.max(0,decimals-(numLen-maxLen));\n      balance = parseFloat(this.BNify(balance)).toFixed(decimals);\n    }\n\n    const intPart = Math.floor(balance);\n    let decPart = (balance%1).toPrecision(decimals).substr(2,decimals);;\n    decPart = (decPart+(\"0\".repeat(decimals))).substr(0,decimals);\n\n    if (highlightedDecimals){\n      const highlightedDec = decPart.substr(0,highlightedDecimals);\n      decPart = decPart.substr(highlightedDecimals);\n      const highlightedIntPart = (<Text.span fontSize={'100%'} color={'blue'} fontWeight={'inerith'}>{intPart}.{highlightedDec}</Text.span>);\n      return !isNaN(this.trimEth(balance)) ? ( <>{highlightedIntPart}<small style={{fontSize:'70%'}}>{decPart}</small> <Text.span fontSize={[1,2]}>{label}</Text.span></> ) : defaultValue;\n    } else {\n      return !isNaN(this.trimEth(balance)) ? ( <>{intPart}<small>.{decPart}</small>{ label !== '%' ? ' ' : null }{ label ? <Text.span fontSize={[1,2]}>{label}</Text.span> : null }</> ) : defaultValue;\n    }\n  }\n};\n\nexport default FunctionsUtil;","import React, { Component } from 'react';\nimport styles from './DashboardCard.module.scss';\nimport { Flex, Icon, Heading, Card, Tooltip } from \"rimble-ui\";\n\nclass DashboardCard extends Component {\n\n  state = {\n    mouseOver:false\n  }\n\n  setMouseOver(mouseOver){\n    this.setState({\n      mouseOver\n    });\n  }\n\n  render() {\n    const isDisabled = this.props.isDisabled;\n    const isActive = this.props.isActive && !isDisabled;\n    const isInteractive = this.props.isInteractive && !isDisabled;\n    const isVisible = typeof this.props.isVisible !== 'undefined' ? this.props.isVisible : true;\n    const isRainbow = typeof this.props.isRainbow !== 'undefined' ? this.props.isRainbow : false;\n\n    const cardProps = {\n      p:0,\n      border:1,\n      boxShadow:1,\n      borderRadius:2,\n      borderColor:null,\n      position:'relative',\n      minHeight:'initial',\n      backgroundColor:'cardBg'\n    };\n\n    if (isActive || (isInteractive && this.state.mouseOver)){\n      cardProps.border = 2;\n      cardProps.boxShadow = null;\n      cardProps.backgroundColor = 'cardBgHover';\n    }\n\n    // Replace props\n    if (this.props.cardProps && Object.keys(this.props.cardProps).length){\n      Object.keys(this.props.cardProps).forEach(p => {\n        cardProps[p] = this.props.cardProps[p];\n      });\n    }\n\n    const className = [\n      styles.defaultOpacity,\n      isActive ? styles.active : null,\n      !isVisible ? styles.hidden : null,\n      isRainbow ? styles.rainbow : null,\n      isDisabled ? styles.disabled : null,\n      isInteractive ? styles.interactive : null,\n    ];\n\n    if (this.props.className && styles[this.props.className]){\n      className.push(styles[this.props.className]);\n    }\n\n    return (\n      <Card\n        {...cardProps}\n        className={className}\n        onClick={this.props.handleClick}\n        onMouseOut={(e) => this.setMouseOver(false)}\n        onMouseOver={(e) => this.setMouseOver(true)}\n      >\n        {\n          this.props.title && this.props.title.length>0 &&\n            <Flex\n              mt={[3,4]}\n              ml={[3,4]}\n              alignItems={'center'}\n              flexDirection={'row'}\n              {...this.props.titleParentProps}\n            >\n              <Heading.h4\n                fontWeight={4}\n                fontSize={[2,3]}\n                textAlign={'left'}\n                color={'dark-gray'}\n                lineHeight={'initial'}\n                {...this.props.titleProps}\n              >\n                {this.props.title}\n              </Heading.h4>\n              {\n                this.props.description && this.props.description.length>0 &&\n                  <Tooltip\n                    placement={'top'}\n                    message={this.props.description}\n                  >\n                    <Icon\n                      ml={2}\n                      name={\"Info\"}\n                      size={'1em'}\n                      color={'cellTitle'}\n                    />\n                  </Tooltip>\n              }\n            </Flex>\n        }\n        {this.props.children}\n      </Card>\n    );\n  }\n}\n\nexport default DashboardCard;","import Footer from '../Footer/Footer';\nimport styles from './Tos.module.scss';\nimport React, { Component } from 'react';\nimport { Box, Flex, Text, Heading } from 'rimble-ui'\n\nclass Tos extends Component {\n  state = {};\n\n  render() {\n    return (\n      <Box>\n        <Box className={styles.headerContainer} pb={[3,5]} px={[3,6]} pt={['2em', '3em']}>\n          <Box className={styles.headerBgFiller}></Box>\n          <Box position={'relative'} zIndex={10}>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"60em\"]} mx={'auto'} pb={3} textAlign={'center'} pt={['8vh', '8vh']}>\n              <Heading.h1 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.2em'} fontSize={['2.5em',7]} textAlign={'center'} color={'white'}>\n                Terms of Service\n              </Heading.h1>\n              <Heading.h2 fontWeight={'400'} lineHeight={['1.4em', '2em']} fontSize={[2,3]} textAlign={'center'} color={'white'}>\n                Updated: November 28, 2019\n              </Heading.h2>\n            </Flex>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"70em\"]} mx={'auto'} textAlign={'center'}>\n              <Box className={styles.textContainer} alignItems={'center'} width={'100%'} minHeight={['auto','20em']} backgroundColor={'white'} color={'dark-gray'} p={[3,4]} boxShadow={'0 0 25px 5px rgba(102, 139, 255, 0.7)'} borderRadius={'15px'} style={{position:'relative'}}>\n                <Box id={'first-paragraph'} pb={3}>\n                  <Text pb={3}>\n                    These terms of service, together with any documents and additional terms they expressly incorporate by reference (collectively, these “Terms”), are entered into between Idle Labs Inc. (“Idle,” “we,” “us” and “our”) and you or the company or other legal entity you represent (“you” or “your”), and constitute a binding legal agreement.\n                  </Text>\n                  <Text pb={3}>\n                    Please read these Terms carefully, as these Terms govern your use of our Portal and our Services, and expressly cover your rights and obligations, and our disclaimers and limitations of legal liability, relating to such use. By accessing or using the Interface, you signify that you have read, understand, and agree to be bound by and to comply with these Terms, including the mandatory arbitration provision in Section 12. If you do not agree to these Terms, you must not access or use our Portal or the Services.\n                  </Text>\n                  <Text pb={3}>\n                    You must be able to form a legally binding contract online either on behalf of a company or as an individual. Accordingly, you represent that: (a) if you are agreeing to these Terms on behalf of a company or other legal entity, you have the legal authority to bind the company or other legal entity to these Terms; and (b) you are at least 18 years old (or the age of majority where you reside, whichever is older), can form a legally binding contract online, and have the full, right, power and authority to enter into and to comply with the obligations under these Terms.\n                  </Text>\n                  <Text pb={3}>\n                    In addition to the foregoing, you also represent and warrant that you are not a citizen or resident of a state, country, territory or other jurisdiction that is embargoed by the United States or where your use of the Portal or the Services would be illegal or otherwise violate any applicable law.  Specifically, you represent that you are not located in, organized in, or a resident of New York, Cuba, Iran, Syria, North Korea, the Crimea region, Venezuela, or any other jurisdiction where Applicable law prohibits you from accessing or using the Services; and you represent that you are not be named on the Office of Foreign Asset Control of the U.S. Department of the Treasury’s Specially Designated and Blocked Persons List.\n                   </Text>\n                  <Text>\n                    Please carefully review the disclosures and disclaimers set forth in Section 9 in their entirety before using any software developed by Idle. The information in Section 9 provides important details about the legal obligations associated with your use of the Idle open-source software. By accessing or using our Portal or our Services, you agree that Idle is a provider of open-source software that optimizes the allocation of your digital assets to third-party decentralized web protocols.  Idle is not affiliated with and has no control over these third-party protocols and is not responsible for any losses that occur as a result of interconnection with these third-party protocols. The Protocol is open-source software deployed on the Ethereum Blockchain.  While Idle developed and deployed the Protocol, the software operates in an autonomous fashion on a decentralized network and, as a result, Idle has no control over user transactions. You accordingly acknowledge that you use the Services at your own risk and agree that Idle will not be responsible for any losses that occur as a result of your use of the Services.\n                  </Text>\n                </Box>\n\n                <Box id={'key-definitions'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    1. KEY DEFINITIONS\n                  </Heading.h3>\n\n                  <Text py={2}>\n                    For the purpose of these Terms, the following capitalized terms shall have the following meanings:\n                  </Text>\n\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>1.1. “Affiliate”</strong> means, with respect to a party to these Terms, any legal entity that, directly or indirectly controls, is controlled by, or is under common control with such party.\n                    </li>\n                    <li>\n                      <strong>1.2. “Applicable Law”</strong> means any domestic or foreign law, rule, statute, regulation, by-law, order, protocol, code, decree, or other directive, requirement or guideline, published or in force which applies to or is otherwise intended to govern or regulate any person, property, transaction, activity, event or other matter, including any rule, order, judgment, directive or other requirement or guideline issued by any Governmental Authority having jurisdiction over Idle, you, the Portal or the Services, or as otherwise duly enacted, enforceable by law, the common law or equity.\n                    </li>\n                    <li>\n                      <strong>1.3. “Ether”</strong> means the Ethereum Blockchain utility token that may be used to purchase computational resources to run decentralized applications or perform actions on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.4. “Ethereum Address”</strong> means the unique public key digital asset identifier that points to an Ethereum-compatible wallet to which Ether may be sent or stored.\n                    </li>\n                    <li>\n                      <strong>1.5. “Ethereum Blockchain”</strong> means the underlying blockchain infrastructure which the Portal leverages to perform portions of the Services.\n                    </li>\n                    <li>\n                      <strong>1.6. “Governmental Authority”</strong> includes any domestic or foreign federal, provincial or state, municipal, local or other governmental, regulatory, judicial or administrative authority.\n                    </li>\n                    <li>\n                      <strong>1.7. “Portal”</strong> means the Idle site located at https://idle.finance and all associated sites linked thereto by Idle and its Affiliates, which includes, for certainty, Idle’s decentralized application layer on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.8. “Protocol”</strong> means the Idle decentralized web protocol, which optimizes the allocation of users’ digital assets to third-party decentralized web protocols.\n                    </li>\n                    <li>\n                      <strong>1.9. “Token”</strong> means an “ERC-20” digital asset issued on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.10. “Services”</strong> has the meaning set out in Section 3.1.\n                    </li>\n                    <li>\n                      <strong>1.11. “Third-Parties Services”</strong> means other services (such as fiat-to-token gateway, or token-to-token swap) provided by third parties services running on Ethereum Blockchain.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'modifications-terms'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    2. MODIFICATIONS TO THESE TERMS\n                  </Heading.h3>\n\n                  <Text py={2}>\n                    We reserve the right, in our sole discretion, to modify these Terms from time to time. If we make changes, we will provide you with notice of such changes, such as by sending an email, providing a notice through our Services or updating the date at the top of these Terms. Unless we say otherwise in our notice, any and all such modifications are effective immediately, and your continued use of our Services after we provide such notice will confirm your acceptance of the changes. If you do not agree to the amended Terms, you must stop using our Services.\n                  </Text>\n                </Box>\n\n                <Box id={'services'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    3. SERVICES\n                  </Heading.h3>\n                </Box>\n\n                <ul className={styles.list}>\n                  <li>\n                    <strong>3.1. Services</strong><br />\n                    The primary purpose of the Portal and Protocol is to enable users to interact with smart contracts that allocate their digital assets to third-party decentralized web protocols and enable users to receive an optimized allocation of digital assets from these protocols in return (the “Services”).\n                  </li>\n                  <li>\n                    <strong>3.2. Fees</strong><br />\n                    Use of the Services is provided to you at no charge. Fees are charged on-top of Third-Parties.\n                  </li>\n                  <li>\n                    <strong>3.3. Ethereum Gas Charges</strong><br />\n                    Some Services involve the use of the Ethereum Blockchain, which may require that you pay a fee, commonly known as “Ethereum Gas Charges,” for the computational resources required to perform a transaction on the Ethereum Blockchain. You acknowledge and agree that Idle has no control over: (a) any Ethereum Blockchain transactions; (b) the method of payment of any Ethereum Gas Charges; or (c) any actual payments of Ethereum Gas Charges. Accordingly, you must ensure that you have a sufficient balance of Ether stored at your Ethereum Address to complete any transaction on the Ethereum Blockchain before initiating such Ethereum Blockchain transaction. We will make reasonable efforts to notify you of any Ethereum Gas Charges before initiating any Services that require the use of the Ethereum Blockchain.\n                  </li>\n                  <li>\n                    <strong>3.4. Conditions and Restrictions</strong><br />\n                    We may, at any time and in our sole discretion, restrict your access to, or otherwise impose conditions or restrictions upon your use of, the Services or the Portal, with or without prior notice.\n                  </li>\n                  <li>\n                    <strong>3.5. No Broker, Legal or Fiduciary Relationship</strong><br />\n                    Idle is not your broker, lawyer, intermediary, agent, or advisor and has no fiduciary relationship or obligation to you regarding any other decisions or activities that you effect when using the Portal or the Services. Neither our communications nor any information that we provide to you is intended as, or shall be considered or construed as, advice.\n                  </li>\n                  <li>\n                    <strong>3.6. Your Responsibilities</strong><br />\n                    As a condition to accessing or using the Services or the Portal, you shall:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>only use the Services and the Portal for lawful purposes and in accordance with these Terms;</li>\n                      <li>ensure that, at all times, all information that you provide on the Portal is current, complete and accurate; and maintain the security and confidentiality of your Ethereum Address.</li>\n                      <li>shall be responsible for payment of all applicable taxes, if any, to which the Services might be subject and any and all other taxes which may apply to you.</li>\n                    </ul>\n                  </li>\n                  <li>\n                    <strong>3.7. Unacceptable Use or Conduct</strong><br />\n                    As a condition to accessing or using the Portal or the Services, you will not:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>violate any Applicable Law, including, without limitation, any relevant and applicable anti-money laundering and anti-terrorist financing laws, such as the Bank Secrecy Act, each as may be amended;</li>\n                      <li>infringe on or misappropriate any contract, intellectual property or other third-party right, or commit a tort while using the Portal or the Services;</li>\n                      <li>use the Services in any manner that could interfere with, disrupt, negatively affect, or inhibit other users from fully enjoying the Services, or that could damage, disable, overburden, or impair the functioning of the Services in any manner;</li>\n                      <li>attempt to circumvent any content filtering techniques or security measures that Idle employs on the Portal, or attempt to access any service or area of the Portal or the Services that you are not authorized to access;</li>\n                      <li>use the Services to pay for, support, or otherwise engage in any illegal gambling activities, fraud, money-laundering, or terrorist activities, or other illegal activities;</li>\n                      <li>use any robot, spider, crawler, scraper, or other automated means or interface not provided by us, to access the Services or to extract data;</li>\n                      <li>introduce any malware, virus, Trojan horse, worm, logic bomb, drop-dead device, backdoor, shutdown mechanism or other harmful material into the Portal or the Services;</li>\n                      <li>provide false, inaccurate, or misleading information;</li>\n                      <li>post content or communications on the Portal that are, in our sole discretion, libelous, defamatory, profane, obscene, pornographic, sexually explicit, indecent, lewd, vulgar, suggestive, harassing, hateful, threatening, offensive, discriminatory, bigoted, abusive, inflammatory, fraudulent, deceptive or otherwise objectionable;</li>\n                      <li>post content on the Portal containing unsolicited promotions, political campaigning, or commercial messages or any chain messages or user content designed to deceive or trick the user of the Service;</li>\n                      <li>use the Portal or the Services from a jurisdiction that we have, in our sole discretion, or a relevant Governmental Authority has determined is a jurisdiction where the use of the Portal or the Services is prohibited; or</li>\n                      <li>encourage or induce any third party to engage in any of the activities prohibited under this Section 3.7.</li>\n                    </ul>\n                  </li>\n\n                  <li>\n                    <strong>3.8. Your Assumption of Risks</strong><br />\n                    You represent and warrant that you:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>have the necessary technical expertise and ability to review and evaluate the security, integrity and operation of any transactions that you engage in through the Protocol;</li>\n                      <li>have the knowledge, experience, understanding, professional advice and information to make your own evaluation of the merits, risks and applicable compliance requirements under Applicable Law of engaging in transactions through the Protocol;</li>\n                      <li>acknowledge and understand that the Protocol allocates your digital assets to third-party decentralized web protocols to facilitate your lending and borrowing through these third-party protocols and that Idle is not responsible or liable for these transactions or the operation of these third-party protocols;</li>\n                      <li>know, understand and accept the risks associated with your Ethereum Address, the Ethereum Blockchain, Ether and Tokens; and</li>\n                      <li>accept the risks associated with lending, borrowing and trading Ether and Tokens, and are responsible for conducting your own independent analysis of the risks specific to any Ether and Tokens lent, borrowed or traded by you and your use of the Services.</li>\n                    </ul>\n                    You hereby assume, and agree that Idle will have no responsibility or liability for, such risks. You hereby irrevocably waive, release and discharge all claims, whether known or unknown to you, against Idle, its affiliates and their respective shareholders, members, directors, officers, employees, agents and representatives related to any of the risks set forth herein.\n                  </li>\n                  <li>\n                    <strong>3.9. Additional Representations</strong><br />\n                    You represent and warrant that you:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>are not using the Protocol to engage in the leveraged, margined, or financed purchase of digital assets; and</li>\n                      <li>are using the Protocol for the purpose of accessing third-party decentralized web protocols.</li>\n                    </ul>\n                  </li>\n                  <li>\n                    <strong>3.10. Your Content</strong><br />\n                    You hereby grant to us a royalty-free, fully paid-up, sublicensable, transferable, perpetual, irrevocable, non-exclusive, worldwide license to use, copy, modify, create derivative works of, display, perform, publish and distribute, in any form, medium or manner, any content that is available to other users via the Idle Platform as a result of your use of the Portal (collectively, “Your Content”) through your use of the Services or the Portal, including, without limitation, for promoting Idle (or its Affiliates), the Services or the Portal. You represent and warrant that: (a) you own Your Content or have the right to grant the rights and licenses in these Terms; and (b) Your Content and our use of Your Content, as licensed herein, does not and will not violate, misappropriate or infringe on any third party’s rights.\n                  </li>\n                </ul>\n\n                <Box id={'privacy-policy'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    4. PRIVACY POLICY\n                  </Heading.h3>\n                  <Text py={2}>\n                    Please refer to our privacy policy available at https://idle.finance/privacy-policy for information about how we collect, use, share and otherwise process information about you.\n                  </Text>\n                </Box>\n\n                <Box id={'proprietary-rights'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    5. PROPRIETARY RIGHTS\n                  </Heading.h3>\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>5.1. Ownership of Services; License to Services</strong><br />\n                      Excluding any open source software (as further described in Section 5.2) or third-party software that the Portal or the Services incorporates, as between you and Idle, Idle owns the Portal and the Services, including all technology, content and other materials used, displayed or provided on the Portal or in connection with the Services (including all intellectual property rights subsisting therein), and hereby grants you a limited, revocable, transferable, license to access and use those portions of the Portal and the Services that are proprietary to Idle.\n                    </li>\n                    <li>\n                      <strong>5.2. Idle License; Open Source Software License; Limitations</strong><br />\n                      The Portal and the Services are governed by the most recent version of the open source license commonly known as the Apache 2.0 a copy of which (as it applies to the Portal and the Services) can be found at:  https://apache.org/licenses/LICENSE-2.0 (as of the date these Terms were last updated) and any other applicable licensing terms for the Portal and the Services in these Terms (collectively, the “Idle License”). You acknowledge that the Portal or the Services may use, incorporate or link to certain open-source components and that your use of the Portal or Services is subject to, and you will comply with any, applicable open-source licenses that govern any such open-source components (collectively, “Open-Source Licenses”). Without limiting the generality of the foregoing, you may not: (a) resell, lease, lend, share, distribute or otherwise permit any third party to use the Portal or the Services; (b) use the Portal or the Services for time-sharing or service bureau purposes; or (c) otherwise use the Portal or the Services in a manner that violates the Idle License or any other Open-Source Licenses.\n                    </li>\n                    <li>\n                      <strong>5.3. Trademarks</strong><br />\n                      Any of Idle’s product or service names, logos, and other marks used in the Portal or as a part of the Services, including Idle's name and logo are trademarks owned by Idle, its Affiliates or its applicable licensors. You may not copy, imitate or use them without Idle’s (or the applicable licensor’s) prior written consent.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'changes-suspension-termination'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    6. CHANGES; SUSPENSION; TERMINATION\n                  </Heading.h3>\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>6.1. Changes to Services</strong><br />\n                      We may, at our sole discretion, from time to time and with or without prior notice to you, modify, suspend or disable, temporarily or permanently, the Services, in whole or in part, for any reason whatsoever, including, but not limited to, as a result of a security incident.\n                    </li>\n                    <li>\n                      <strong>6.2. No Liability</strong><br />\n                      We will not be liable for any losses suffered by you resulting from any modification to any Services or from any suspension or termination, for any reason, of your access to all or any portion of the Portal or the Services.\n                    </li>\n                    <li>\n                      <strong>6.3. Survival</strong><br />\n                      The following sections will survive any termination of your access to the Portal or the Services, regardless of the reasons for its expiration or termination, in addition to any other provision which by law or by its nature should survive: Sections 1, 4, 5, 6.3, and 7-14.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'electronic-notices'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    7. ELECTRONIC NOTICES\n                  </Heading.h3>\n                  <Text py={2}>\n                    You consent to receive all communications, agreements, documents, receipts, notices, and disclosures electronically (collectively, our “Communications”) that we provide in connection with these Terms or any Services. You agree that we may provide our Communications to you by posting them on the Portal or by emailing them to you at the email address you provide in connection with using the Services, if any. You should maintain copies of our Communications by printing a paper copy or saving an electronic copy. You may also contact our support team to request additional electronic copies of our Communications by filing a support request at info@idle.finance.\n                  </Text>\n                </Box>\n\n                <Box id={'indemnification'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    8. INDEMNIFICATION\n                  </Heading.h3>\n                  <Text py={2}>\n                    You will defend, indemnify, and hold harmless us, our Affiliates, and our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers and contractors (collectively, “Indemnified Parties”) from any claim, demand, lawsuit, action, proceeding, investigation, liability, damage, loss, cost or expense, including without limitation reasonable attorneys’ fees, arising out of or relating to (a) your use of, or conduct in connection with, the Portal, Services or Margin Tokens; (b) Ethereum Blockchain assets associated with your Ethereum Address; (c) any feedback or user content you provide to the Portal, if any; (d) your violation of these Terms; or (e) your infringement or misappropriation of the rights of any other person or entity. If you are obligated to indemnify any Indemnified Party, Idle (or, at its discretion, the applicable Indemnified Party) will have the right, in its sole discretion, to control any action or proceeding and to determine whether Idle wishes to settle, and if so, on what terms.\n                  </Text>\n                </Box>\n\n                <Box id={'disclosures-disclaimers'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    9. Disclosures; DISCLAIMERS\n                  </Heading.h3>\n                  <Text py={2}>\n                    Idle is a developer of open-source software. Idle does not operate a digital asset exchange platform or execute peer-to-peer transactions through its Protocol and therefore has no oversight, involvement, or control with respect to your transactions, which are executed through third-party protocols and the Ethereum Blockchain.  The Protocol is an autonomous decentralized web protocol deployed to the Ethereum Blockchain that operates in a disintermediated fashion, and, as such, Idle does not participate in any of these transactions.  In each instance, when you interact with the Protocol, you are interacting with a smart contract that transfers your digital assets to a third-party protocol.\n                  </Text>\n                  <Text py={2}>\n                    [Under U.S. federal law, unless you are an “eligible contract participant” as defined in 7 U.S.C. § 1a(18), your transaction must settle within 28 days. Individuals who do not have more than $10 million invested on a discretionary basis (or $5 million if the transaction is for the purpose of managing risk associated with an asset owned or liability incurred, or reasonably likely to be owned or incurred) are not eligible contract participants and may not enter into transactions using the Idle open-source software that do not result in actual delivery of digital assets within 28 days.]\n                  </Text>\n                  <Text py={2}>\n                    You are responsible for complying with all laws and regulations applicable to your transactions, including, but not limited to, the Commodity Exchange Act and the regulations promulgated thereunder by the U.S. Commodity Futures Trading Commission (“CFTC”), and the federal securities laws and the regulations promulgated thereunder by the U.S. Securities and Exchange Commission (“SEC”).\n                  </Text>\n                  <Text py={2}>\n                    You understand that Idle is not registered or licensed by the CFTC, SEC, the Financial Crimes Enforcement Network or any financial regulatory authority. No financial regulatory authority has reviewed or approved the use of the Idle open-source software. This website and the Idle open-source software do not constitute advice or a recommendation concerning any commodity, security or other asset. Idle is not acting as an investment adviser or commodity trading adviser to any person.\n                  </Text>\n                  <Text py={2}>\n                    Idle does not own or control the underlying software protocols that enable the Protocol to function. In general, the underlying protocols are open-source and anyone can use, copy, modify, and distribute them. Idle is not responsible for operation of the underlying protocols, and Idle makes no guarantee of their functionality, security, or availability.\n                  </Text>\n                  <Text py={2}>\n                    To the maximum extent permitted under Applicable Law, the Portal and the Services (and any of their content or functionality) provided by or on behalf of us are provided on an “AS IS” and “AS AVAILABLE” basis, and we expressly disclaim, and you hereby waive, any representations, conditions or warranties of any kind, whether express or implied, legal, statutory or otherwise, or arising from statute, otherwise in law, course of dealing, or usage of trade, including, without limitation, the implied or legal warranties and conditions of merchantability, merchantable quality, quality or fitness for a particular purpose, title, security, availability, reliability, accuracy, quiet enjoyment and non-infringement of third party rights. Without limiting the foregoing, we do not represent or warrant that the Portal or the Services (including any data relating thereto) will be uninterrupted, available at any particular time or error-free. Further, we do not warrant that errors in the Portal or the Service are correctable or will be correctable.\n                  </Text>\n                  <Text py={2}>\n                    You acknowledge that your data on the Portal may become irretrievably lost or corrupted or temporarily unavailable due to a variety of causes, and agree that, to the maximum extent permitted under Applicable Law, we will not be liable for any loss or damage caused by denial-of-service attacks, software failures, viruses or other technologically harmful materials (including those which may infect your computer equipment), protocol changes by third party providers, Internet outages, force majeure events or other disasters, scheduled or unscheduled maintenance, or other causes either within or outside our control.\n                  </Text>\n                  <Text py={2}>\n                    The disclaimer of implied warranties contained herein may not apply if and to the extent such warranties cannot be excluded or limited under the Applicable Law of the jurisdiction in which you reside.\n                  </Text>\n                </Box>\n\n                <Box id={'exclusion-consequential-related-damages'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    10. EXCLUSION OF CONSEQUENTIAL AND RELATED DAMAGES\n                  </Heading.h3>\n                  <Text py={2}>\n                    In no event shall we (together with our Affiliates, including our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers or contractors) be liable for any incidental, indirect, special, punitive, consequential or similar damages or liabilities whatsoever (including, without limitation, damages for loss of data, information, revenue, goodwill, profits or other business or financial benefit) arising out of or in connection with the Portal and the Services (and any of their content and functionality), any execution or settlement of a transaction, any performance or non-performance of the Services, your Ether, Margin Tokens or any other product, service or other item provided by or on behalf of us, whether under contract, tort (including negligence), civil liability, statute, strict liability, breach of warranties, or under any other theory of liability, and whether or not we have been advised of, knew of or should have known of the possibility of such damages and notwithstanding any failure of the essential purpose of these Terms or any limited remedy hereunder nor is Idle in any way responsible for the execution or settlement of transactions between users of Idle open-source software.\n                  </Text>\n                </Box>\n\n                <Box id={'exclusion-consequential-related-damages'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    11. LIMITATION OF LIABILITY\n                  </Heading.h3>\n                  <Text py={2}>\n                    In no event shall our aggregate liability (together with our Affiliates, including our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers or contractors) arising out of or in connection with the Portal and the Services (and any of their content and functionality), any performance or non-performance of the Services, your Ether, Margin Tokens or any other product, service or other item provided by or on behalf of us, whether under contract, tort (including negligence), civil liability, statute, strict liability or other theory of liability exceed the amount of fees paid by you to us under these Terms, if any, in the twelve (12) month period immediately preceding the event giving rise to the claim for liability.\n                  </Text>\n                </Box>\n\n                <Box id={'dispute-resolution-arbitration'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    12. DISPUTE RESOLUTION AND ARBITRATION\n                  </Heading.h3>\n                  <Text py={2}>\n                    Please read the following section carefully because it requires you to arbitrate certain disputes and claims with Idle and limits the manner in which you can seek relief from us, unless you opt out of arbitration by following the instructions set forth below. In addition, arbitration precludes you from suing in court or having a jury trial.\n                    You and Idle agree that any dispute arising out of or related to these Terms or our Services is personal to you and Idle and that any dispute will be resolved solely through individual action, and will not be brought as a class arbitration, class action or any other type of representative proceeding.\n                  </Text>\n                  <Text py={2}>\n                    Except for small claims disputes in which you or Idle seeks to bring an individual action in small claims court located in the county of your billing address or disputes in which you or Idle seeks injunctive or other equitable relief for the alleged unlawful use of intellectual property, you and Idle waive your rights to a jury trial and to have any dispute arising out of or related to these Terms or our Services resolved in court. Instead, for any dispute or claim that you have against Idle or relating in any way to the Services, you agree to first contact Idle and attempt to resolve the claim informally by sending a written notice of your claim (“Notice”) to Idle by email at info@idle.finance or by certified mail addressed to info@idle.finance. The Notice must (a) include your name, residence address, email address, and telephone number; (b) describe the nature and basis of the claim; (c) set forth the specific relief sought. Our notice to you will be similar in form to that described above. If you and Idle cannot reach an agreement to resolve the claim within thirty (30) days after such Notice is received, then either party may submit the dispute to binding arbitration administered by JAMS or, under the limited circumstances set forth above, in court. All disputes submitted to JAMS will be resolved through confidential, binding arbitration before one arbitrator. Arbitration proceedings will be held in New York City, New York, in accordance with the JAMS Streamlined Arbitration Rules and Procedures (“JAMS Rules”). The most recent version of the JAMS Rules are available on the JAMS website and are hereby incorporated by reference. You either acknowledge and agree that you have read and understand the JAMS Rules or waive your opportunity to read the JAMS Rules and waive any claim that the JAMS Rules are unfair or should not apply for any reason.\n                  </Text>\n                  <Text py={2}>\n                    You and Idle agree that these Terms affect interstate commerce and that the enforceability of this Section 12 will be substantively and procedurally governed by the Federal Arbitration Act, 9 U.S.C. § 1, et seq. (the “FAA”), to the maximum extent permitted by applicable law. As limited by the FAA, these Terms and the JAMS Rules, the arbitrator will have exclusive authority to make all procedural and substantive decisions regarding any dispute and to grant any remedy that would otherwise be available in court, including the power to determine the question of arbitrability. The arbitrator may conduct only an individual arbitration and may not consolidate more than one individual’s claims, preside over any type of class or representative proceeding or preside over any proceeding involving more than one individual.\n                  </Text>\n                  <Text py={2}>\n                    The arbitrator, Idle, and you will maintain the confidentiality of any arbitration proceedings, judgments and awards, including, but not limited to, all information gathered, prepared and presented for purposes of the arbitration or related to the dispute(s) therein. The arbitrator will have the authority to make appropriate rulings to safeguard confidentiality, unless the law provides to the contrary. The duty of confidentiality does not apply to the extent that disclosure is necessary to prepare for or conduct the arbitration hearing on the merits, in connection with a court application for a preliminary remedy or in connection with a judicial challenge to an arbitration award or its enforcement, or to the extent that disclosure is otherwise required by law or judicial decision.\n                  </Text>\n                  <Text py={2}>\n                    You and Idle agree that for any arbitration you initiate, you will pay the filing fee and Idle will pay the remaining JAMS fees and costs. For any arbitration initiated by Idle, Idle will pay all JAMS fees and costs. You and Idle agree that the state or federal courts of the State of New York and the United States sitting in New York City, New York have exclusive jurisdiction over any appeals and the enforcement of an arbitration award.\n                  </Text>\n                  <Text py={2}>\n                    Any claim arising out of or related to these Terms or our Services must be filed within one year after such claim arose; otherwise, the claim is permanently barred, which means that you and Idle will not have the right to assert the claim.\n                  </Text>\n                  <Text py={2}>\n                    You have the right to opt out of binding arbitration within 30 days of the date you first accepted the terms of this Section 12 by emailing us at info@idle.finance. In order to be effective, the opt-out notice must include your full name and address and clearly indicate your intent to opt out of binding arbitration. By opting out of binding arbitration, you are agreeing to resolve disputes in accordance with Section 13.\n                  </Text>\n                  <Text py={2}>\n                    If any portion of this Section 12 is found to be unenforceable or unlawful for any reason, (a) the unenforceable or unlawful provision shall be severed from these Terms; (b) severance of the unenforceable or unlawful provision shall have no impact whatsoever on the remainder of this Section 12 or the parties’ ability to compel arbitration of any remaining claims on an individual basis pursuant to this Section 12; and (c) to the extent that any claims must therefore proceed on a class, collective, consolidated, or representative basis, such claims must be litigated in a civil court of competent jurisdiction and not in arbitration, and the parties agree that litigation of those claims shall be stayed pending the outcome of any individual claims in arbitration. Further, if any part of this Section 12 is found to prohibit an individual claim seeking public injunctive relief, that provision will have no effect to the extent such relief is allowed to be sought out of arbitration, and the remainder of this Section 12 will be enforceable.\n                  </Text>\n                </Box>\n\n                <Box id={'governing-law'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    13. GOVERNING LAW\n                  </Heading.h3>\n                  <Text py={2}>\n                    The interpretation and enforcement of these Terms, and any dispute related to these Terms, the Portal or the Services, will be governed by and construed and enforced in accordance with the laws of the State of Delaware, as applicable, without regard to conflict of law rules or principles (whether of the State of Delaware or any other jurisdiction) that would cause the application of the laws of any other jurisdiction. You agree that we may initiate a proceeding related to the enforcement or validity of our intellectual property rights in any court having jurisdiction. With respect to any other proceeding that is not subject to arbitration under these Terms, the state and federal courts located in Wilmington, Delaware, will have exclusive jurisdiction. You waive any objection to venue in any such courts.\n                  </Text>\n                </Box>\n\n                <Box id={'miscellaneous'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    14. MISCELLANEOUS\n                  </Heading.h3>\n                  <Text py={2}>\n                    Any right or remedy of Idle set forth in these Terms is in addition to, and not in lieu of, any other right or remedy whether described in these Terms, under Applicable Law, at law or in equity. Our failure or delay in exercising any right, power, or privilege under these Terms shall not operate as a waiver thereof. The invalidity or unenforceability of any of these Terms shall not affect the validity or enforceability of any other of these Terms, all of which shall remain in full force and effect. We will have no responsibility or liability for any failure or delay in performance of the Portal or any of the Services, or any loss or damage that you may incur, due to any circumstance or event beyond our control, including without limitation any flood, extraordinary weather conditions, earthquake, or other act of God, fire, war, insurrection, riot, labor dispute, accident, action of government, communications, power failure, or equipment or software malfunction. You may not assign or transfer any right to use the Portal or the Services, or any of your rights or obligations under these Terms, without our express prior written consent, including by operation of law or in connection with any change of control. We may assign or transfer any or all of our rights or obligations under these Terms, in whole or in part, without notice or obtaining your consent or approval. Headings of sections are for convenience only and shall not be used to limit or construe such sections. These Terms contain the entire agreement and supersede all prior and contemporaneous understandings between the parties regarding the Portal and the Services. In the event of any conflict between these Terms and any other agreement you may have with us, these Terms will control unless the other agreement specifically identifies these Terms and declares that the other agreement supersedes these Terms.\n                  </Text>\n                </Box>\n\n              </Box>\n            </Flex>\n          </Box>\n        </Box>\n        <Footer />\n      </Box>\n    );\n  }\n}\n\nexport default Tos;\n","import baseColors, { blue, green, yellow, red } from \"./colors\";\nimport { tint, shade } from 'polished';\n\n// theme.js\nexport default {\n  breakpoints: ['52em', '64em'],\n  // breakpoints: ['40em', '52em', '64em', '80em'],\n  fontSizes: [12, 14, 16, 18, 21, 32, 38, 48, 54, 64, 72, 84],\n  fontWeights: [0, 300, 400, 600, 700, 800],\n  letterSpacings: [0, 1, 2, 4, 8],\n  lineHeights: {\n    solid: 1,\n    title: 1.25,\n    copy: 1.5,\n  },\n  fonts: {\n    serif: '\"georgia regular\", athelas, times, serif',\n    sansSerif: '\"Inter\", -apple-system, sans-serif',\n    counter: '\"Roboto Mono\", Arial, -apple-system, sans-serif'\n  },\n  space: [0, 4, 8, 16, 32, 64, 128, 256],\n  radii: ['0', '4px', '8px', '16px', '2rem'],\n  width: [0, 16, 32, 64, 128, 256],\n  minWidths: [0, 16, 32, 64, 128, 256],\n  maxWidths: [0, 16, 32, 64, 128, 256, 512, 768, 1024, 1536],\n  heights: [0, 16, 32, 64, 128, 256],\n  minHeights: [0, 16, 32, 64, 128, 256],\n  maxHeights: [0, 16, 32, 64, 128, 256],\n  borders: [0, '1px solid #0d2034','1px solid #475d7c'],\n  borderWidths: ['0', '1px', '2px', '4px'],\n  shadows: [\n    '0',\n    '0px 2px 4px rgba(0, 0, 0, 0.1)',\n    '0 7px 14px rgba(50,50,93,.1)',\n    '1px 1px 0px rgba(0,0,0,0.2)',\n    '0px 0px 16px 2px rgb(71,93,123,0.6)'\n  ],\n  opacity: {\n    disabled: 0.4,\n  },\n  colors: {\n    primary: '#fcfcfc',\n    'gradient-bg': 'linear-gradient(120deg, #f6d365 0%, #ea0d73 100%)',\n    'primary-light': blue.light[1],\n    'primary-dark': blue.dark[1],\n    bgBlue: '#0030e0',\n    blue: '#0036ff',\n    'dark-blue': '#00219a',\n    skyBlue: '#00abfe',\n    lightBlue: '#79f4e1',\n    copyColor: '#fcfcfc',\n    subColor: '#a7a7a7',\n    black: baseColors.black,\n    'near-black': '#1e3657',\n    'dark-gray': '#fcfcfc',\n    'mid-gray': '#999',\n    gray: ' #e0e0e0',\n    grey: '#CCC',\n    silver: '#999',\n    'light-silver': '#aaa',\n    'moon-gray': '#ccc',\n    'light-gray': '#eee',\n    'near-white': '#a4aec6',\n    white: '#fff',\n    transparent: 'transparent',\n    /*\n    NEW COLORS\n    */\n    alert:'#ff9900',\n    arrowActive:'#d8d8d8',\n    arrowInactive:'#4f4f4f',\n    selectBgFocused:'#1e3657',\n    selectBg:'#162e4d',\n    backButtonBg:'#162e4d',\n    lineChartStroke:'#a4aec6',\n    wrongNetworkBannerBg:'#0e2133',\n    dashboardBg: '#13273f',\n    statValue: '#a4aec6',\n    boxBorder: '#eeeeee',\n    cellTitle: '#a4aec6',\n    cellText: '#a4aec6',\n    divider: '#a4aec6',\n    counter: '#a4aec6',\n    redeem: '#00a9fe',\n    link:'#00a9fe',\n    deposit: '#0239ff',\n    migrate: '#00a9fe',\n    legend: '#c9c9c9',\n    cardBg:'#162e4d',\n    menuBg:'#162e4d',\n    menuHover:'#1e3657',\n    flashColor:'#bac5ff',\n    cardBgHover:'#1e3657',\n    cardBorder:'#0d2034',\n    pageActive:'#d8d8d8',\n    pageInactive:'#4f4f4f',\n    menuRightBorder:'#0d2034',\n    cardHoverShadow:'0px 0px 0px 1px rgb(45 74 114)',\n    transactions:{\n      action:{\n        send:'#10a0dd',\n        swap:'#3d53c0',\n        boost:'#ffff00',\n        redeem:'#10a0dd',\n        swapout:'#10a0dd',\n        deposit:'#3d53c0',\n        curvein:'#10a0dd',\n        receive:'#3d53c0',\n        migrate:'#3d53c0',\n        default:'#4f4f4f',\n        curveout:'#3d53c0',\n        withdraw:'#10a0dd',\n        curvedepositin:'#10a0dd',\n        curvedepositout:'#3d53c0'\n      },\n      actionBg:{\n        send:'#ceeff6',\n        swap:'#ced6ff',\n        boost:'#ff7979',\n        redeem:'#ceeff6',\n        swapout:'#ceeff6',\n        deposit:'#ced6ff',\n        curvein:'#ceeff6',\n        default:'#dadada',\n        receive:'#ced6ff',\n        migrate:'#ced6ff',\n        withdraw:'#ceeff6',\n        curveout:'#ced6ff',\n        curvedepositin:'#ceeff6',\n        curvedepositout:'#ced6ff'\n      },\n      status:{\n        completed:'#00b84a',\n        pending:'#a5a5a5',\n        failed:'#fa0000'\n      }\n    },\n    blacks: [\n      'rgba(0,0,0,.0125)',\n      'rgba(0,0,0,.025)',\n      'rgba(0,0,0,.05)',\n      'rgba(0,0,0,.1)',\n      'rgba(0,0,0,.2)',\n      'rgba(0,0,0,.3)',\n      'rgba(0,0,0,.4)',\n      'rgba(0,0,0,.5)',\n      'rgba(0,0,0,.6)',\n      'rgba(0,0,0,.7)',\n      'rgba(0,0,0,.8)',\n      'rgba(0,0,0,.9)',\n    ],\n    whites: [\n      'rgba(255,255,255,.0125)',\n      'rgba(255,255,255,.025)',\n      'rgba(255,255,255,.05)',\n      'rgba(255,255,255,.1)',\n      'rgba(255,255,255,.2)',\n      'rgba(255,255,255,.3)',\n      'rgba(255,255,255,.4)',\n      'rgba(255,255,255,.5)',\n      'rgba(255,255,255,.6)',\n      'rgba(255,255,255,.7)',\n      'rgba(255,255,255,.8)',\n      'rgba(255,255,255,.9)',\n    ],\n  },\n  zIndices: [0, 9, 99, 999, 9999],\n  messageStyle: {\n    base: {\n      color: '#fcfcfc',\n      borderColor: '#0d2034',\n      backgroundColor: '#162e4d',\n    },\n    success: {\n      color: shade(0.4, green.base),\n      backgroundColor: tint(0.9, green.base),\n      borderColor: green.base,\n    },\n    warning: {\n      color: shade(0.4, yellow.base),\n      backgroundColor: tint(0.9, yellow.base),\n      borderColor: yellow.base,\n    },\n    danger: {\n      color: shade(0.4, red.base),\n      backgroundColor: tint(0.9, red.base),\n      borderColor: red.base,\n    },\n    info: {\n      color: '#fcfcfc',\n      borderColor: '#0d2034',\n      backgroundColor: '#162e4d',\n    },\n  },\n  buttons: {\n    primary: {\n      color: blue.text,\n      backgroundColor: blue.base,\n      // use css custom props\n      '--main-color': blue.base,\n      '--contrast-color': blue.text,\n    },\n    normal: {\n      color: baseColors.black,\n      '--contrast-color': baseColors.black,\n    },\n    success: {\n      '--main-color': green.base,\n      '--contrast-color': green.text,\n    },\n    danger: {\n      '--main-color': red.base,\n      '--contrast-color': red.text,\n    },\n  },\n  buttonSizes: {\n    small: {\n      fontSize: '0.75rem',\n      height: '2rem',\n      minWidth: '2rem',\n      padding: '0 1rem',\n    },\n    medium: {\n      fontSize: '1rem',\n      height: '3rem',\n      minWidth: '3rem',\n    },\n    large: {\n      fontSize: '1.5rem',\n      height: '4rem',\n      minWidth: '4rem',\n      borderRadius: '2rem'\n    },\n  },\n};\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class TorusConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: Torus, initParams, ...rest } = kwargs;\n    super(rest);\n\n    this.torus = null;\n    this.Torus = Torus;\n    this.initParams = initParams;\n  }\n\n  async onActivation() {\n    if (!this.torus) {\n      this.torus = new this.Torus({\n        buttonPosition: \"bottom-right\" // default: bottom-left\n      });\n    }\n    await this.torus.init();\n    await this.torus.login();\n  }\n\n  async getProvider(){\n    return new Promise( async (resolve, reject) => {\n      resolve(this.torus.provider);\n    });\n  }\n\n  async getAccount(provider) {\n    const userInfo = await this.torus.getUserInfo();\n    if (userInfo){\n      return await this.torus.getPublicAddress({\n        verifier:userInfo.verifier,\n        verifierId:userInfo.verifierId\n      });\n    }\n    return null;\n  }\n\n  async onDeactivation() {\n    await this.torus.logout();\n  }\n\n  changeNetwork(network) {\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class AuthereumConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: Authereum, network, ...rest } = kwargs;\n    super(rest);\n\n    this.authereum = null;\n    this.Authereum = Authereum;\n    this.network = network;\n  }\n\n  async onActivation() {\n    if (!this.authereum) {\n      this.authereum = new this.Authereum(this.network);\n    }\n    const provider = await this.getProvider();\n    if (provider){\n      await provider.enable();\n      return provider;\n    }\n  }\n\n  async getProvider(){\n    return new Promise( async (resolve, reject) => {\n      resolve(this.authereum.getProvider());\n    });\n  }\n\n  async getAccount(provider) {\n    if (provider){\n      const accounts = await provider.getAccounts();\n      if (accounts && accounts.length){\n        return accounts[0];\n      }\n    }\n    return null;\n  }\n\n  async disable() {\n    const provider = await this.getProvider();\n    if (provider){\n      await provider.disable();\n      return provider;\n    }\n  }\n\n  changeNetwork(network) {\n    this.constructor({\n      api: this.Authereum,\n      network\n    })\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class GnosisSafeConnector extends Connector {\n\n  constructor(SafeAppConnector) {\n    super(...arguments);\n    this.safeLoaded = false;\n    this.SafeAppConnector = SafeAppConnector;\n    this.provider = new this.SafeAppConnector();\n    this.checkSafeApp();\n  }\n\n  async onActivation() {\n    if (!this.provider) {\n      this.provider = new this.SafeAppConnector();\n    }\n\n    if (this.provider){\n      await this.provider.activate();\n      return this.provider;\n    }\n  }\n\n  async getAccount() {\n    if (this.provider){\n      return await this.provider.getAccount();\n    }\n  }\n\n  async getProvider(){\n    if (this.provider){\n      return await this.provider.getProvider();\n    }\n  }\n\n  async getSafeInfo() {\n    if (this.provider){\n      return await this.provider.getSafeInfo();\n    }\n  }\n\n  async getChainId() {\n    if (this.provider){\n      return await this.provider.getChainId();\n    }\n  }\n\n  async checkSafeApp() {\n    if (this.provider){\n      const isSafeApp = await this.provider.isSafeApp();\n      this.safeLoaded = true;\n      return isSafeApp;\n    }\n  }\n\n  async disable() {\n    if (this.provider){\n      this.provider.deactivate();\n      return this.provider;\n    }\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class WalletLinkConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: WalletLink, appName, infuraUrl, chainId, appLogoUrl, ...rest } = kwargs;\n    super(rest);\n\n    this.provider = null;\n    this.walletLink = null;\n    this.appName = appName;\n    this.chainId = chainId;\n    this.infuraUrl = infuraUrl;\n    this.appLogoUrl = appLogoUrl;\n    this.WalletLink = WalletLink;\n  }\n\n  async onActivation() {\n    if (!this.walletLink){\n      this.walletLink = new this.WalletLink({\n        darkMode: false,\n        appName: this.appName,\n        infuraUrl: this.infuraUrl,\n        appLogoUrl: this.appLogoUrl,\n      });\n    }\n\n    const provider = this.getProvider();\n    if (provider){\n      await provider.enable();\n      return provider;\n    }\n  }\n\n  getProvider(){\n    if (!this.provider){\n      this.provider = this.walletLink.makeWeb3Provider(this.infuraUrl, this.chainId);\n    }\n    return this.provider;\n  }\n\n  async getAccount(provider) {\n    if (provider){\n      // Use eth_RequestAccounts\n      const accounts = await provider.send('eth_requestAccounts');\n      if (accounts && accounts.length){\n        return accounts[0];\n      }\n    }\n    return null;\n  }\n\n  async disable() {\n    const provider = this.getProvider();\n    if (provider){\n      this.walletLink.disconnect();\n      await provider.close();\n      return provider;\n    }\n  }\n\n  changeNetwork(network) {\n    this.constructor({\n      network,\n      api: this.WalletLink,\n      appName: this.appName,\n      chainId: this.chainId,\n      infuraUrl: this.infuraUrl,\n      appLogoUrl: this.appLogoUrl,\n    })\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class WalletConnectConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: WalletConnectProvider, defaultNetwork, infuraId, ...rest } = kwargs;\n    super(rest);\n\n    this.provider = null;\n    this.WalletConnectProvider = WalletConnectProvider;\n    this.infuraId = infuraId;\n  }\n\n  async onActivation() {\n    if (!this.provider) {\n      this.provider = new this.WalletConnectProvider({\n        infuraId:this.infuraId\n      });\n    }\n\n    if (this.provider){\n      await this.provider.enable();\n      return this.provider;\n    }\n  }\n\n  async getProvider(){\n    return this.provider;\n  }\n\n  async disable() {\n    if (this.provider){\n      this.provider.close();\n      return this.provider;\n    }\n  }\n}\n","import WalletLink from 'walletlink';\nimport AuthereumApi from 'authereum';\nimport PortisApi from \"@portis/web3\";\nimport FortmaticApi from \"fortmatic\";\nimport TrezorApi from \"trezor-connect\";\nimport { Connectors } from \"web3-react\";\nimport TorusApi from '@toruslabs/torus-embed';\nimport globalConfigs from '../configs/globalConfigs';\nimport TorusConnector from './connectors/TorusConnector';\nimport AuthereumConnector from './connectors/AuthereumConnector';\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport GnosisSafeConnector from './connectors/GnosisSafeConnector';\nimport WalletLinkConnector from './connectors/WalletLinkConnector';\nimport { SafeAppConnector } from '@gnosis.pm/safe-apps-web3-react';\nimport WalletConnectConnector from './connectors/WalletConnectConnector';\n\nconst {\n  InjectedConnector,\n  NetworkOnlyConnector,\n  TrezorConnector,\n  LedgerConnector,\n  FortmaticConnector,\n  PortisConnector\n} = Connectors;\n\nconst env = process.env;\n\nconst manifestEmail = env.REACT_APP_TREZOR_MANIFEST_EMAIL; // trezor\nconst manifestAppUrl = env.REACT_APP_TREZOR_MANIFEST_URL; // trezor\nconst defaultNetwork = globalConfigs.network.requiredNetwork;\nconst fortmaticApiKey = env.REACT_APP_FORTMATIC_KEY_MAINNET;\nconst portisDAppId = env.REACT_APP_PORTIS_DAPP_ID;\nconst portisNetwork = env.REACT_APP_PORTIS_NETWORK;\n\nconst supportedNetworkURLs = {};\n  \nObject.keys(globalConfigs.network.providers.infura).forEach((networkId,index) => {\n  supportedNetworkURLs[networkId] = globalConfigs.network.providers.infura[networkId]+env.REACT_APP_INFURA_KEY;\n});\n\nconst Injected = new InjectedConnector({\n  supportedNetworks: globalConfigs.network.enabledNetworks\n});\n\nconst Infura = new NetworkOnlyConnector({\n  providerURL: globalConfigs.network.providers.infura[defaultNetwork]+env.REACT_APP_INFURA_KEY\n});\n\n\nconst Trezor = new TrezorConnector({\n  api: TrezorApi,\n  supportedNetworkURLs,\n  defaultNetwork,\n  manifestEmail,\n  manifestAppUrl\n});\n\nconst Ledger = new LedgerConnector({\n  supportedNetworkURLs,\n  defaultNetwork\n});\n\nconst WalletConnect = new WalletConnectConnector({\n  defaultNetwork,\n  supportedNetworkURLs,\n  api: WalletConnectProvider,\n  infuraId:env.REACT_APP_INFURA_KEY,\n  bridge: \"https://bridge.walletconnect.org\",\n});\n\nconst Fortmatic = new FortmaticConnector({\n  api: FortmaticApi,\n  apiKey: fortmaticApiKey,\n  logoutOnDeactivation: false\n});\n\nconst Portis = new PortisConnector({\n  api: PortisApi,\n  dAppId: portisDAppId,\n  network: portisNetwork\n});\n\nconst Authereum = new AuthereumConnector({\n  api: AuthereumApi,\n  network: globalConfigs.network.availableNetworks[defaultNetwork].toLowerCase()\n});\n\nconst walletLink = new WalletLinkConnector({\n  api: WalletLink,\n  darkMode: false,\n  chainId: defaultNetwork,\n  appName: globalConfigs.appName,\n  infuraUrl: supportedNetworkURLs[defaultNetwork],\n  appLogoUrl: 'https://idle.finance/images/idle-mark.png',\n});\n\nconst Torus = new TorusConnector({\n  api: TorusApi,\n  initParams:{\n    buildEnv: 'production', // default: production\n    enableLogging: false, // default: false\n    network: {\n      host: globalConfigs.network.availableNetworks[defaultNetwork].toLowerCase(), // default: mainnet\n      chainId: defaultNetwork, // default: 1\n      networkName: globalConfigs.network.availableNetworks[defaultNetwork].toLowerCase() // default: Main Ethereum Network\n    },\n    showTorusButton: false // default: true\n  }\n});\n\nconst gnosis = new GnosisSafeConnector(SafeAppConnector);\n\nexport default {\n  Injected,\n  Infura,\n  WalletConnect,\n  gnosis,\n  walletLink,\n  Fortmatic,\n  Portis,\n  Authereum,\n  Torus,\n  Trezor,\n  Ledger,\n};","import React from \"react\";\nimport { Box, Flex, Text, Icon } from \"rimble-ui\";\n\nclass WrongNetworkBanner extends React.Component {\n  render() {\n    const bannerStyle = {\n      position: \"fixed\",\n      bottom: 0,\n      left: 0,\n      right: 0,\n      width: \"100%\",\n      zIndex: 9999\n    };\n\n    return (\n      <Box style={bannerStyle} backgroundColor={'wrongNetworkBannerBg'} p={3}>\n        <Flex alignItems={\"center\"}>\n          <Box p={4}>\n            <Icon name=\"Warning\" color=\"gold\" size=\"30\" />\n          </Box>\n          <Flex flexDirection={\"column\"}>\n            <Text fontWeight={\"bold\"}>\n              Looks like you're on the wrong network\n            </Text>\n            <Text>\n              You should be on the {this.props.network.required.name} Ethereum\n              network. You are currently connected to the{\" \"}\n              <Text.span style={{ textTransform: \"capitalize\" }}>\n                {this.props.network.current.name}\n              </Text.span>{\" \"}\n              Network - please switch to the correct network.\n            </Text>\n          </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default WrongNetworkBanner;\n","import React from \"react\";\n\nimport WrongNetworkBanner from \"./components/WrongNetworkBanner\";\n\nclass NetworkUtil extends React.Component {\n  render() {\n    return (\n      <div>\n        { this.props.network.isCorrectNetwork === false && this.props.web3\n          ?\n            <WrongNetworkBanner\n              network={this.props.network}\n            />\n          :\n            null\n        }\n      </div>\n    );\n  }\n}\n\nexport default NetworkUtil;\n","import React from \"react\";\nimport { Box, Heading, Text, Modal, Link } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport RimbleUtil from \"@rimble/utils\";\n\nclass NoWeb3BrowserModal extends React.Component {\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2\n          fontSize={4}\n          fontWeight={3}\n          lineHeight={\"1.375em\"}\n          my={3}\n        >\n          Switch browsers to use the Idle App\n        </Heading.h2>\n\n        {RimbleUtil.isMobileDevice() ? (\n          <Text my={4}>\n            You can't use our blockchain features, like increasing the count\n            value, in this browser. We recommend using{\" \"}\n            <Link\n              href=\"https://status.im/\"\n              title=\"status.im website\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Status\n            </Link>\n            ,{\" \"}\n            <Link\n              href=\"https://www.cipherbrowser.com/\"\n              title=\"Cipher Wallet\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Cipher\n            </Link>{\" \"}\n            or{\" \"}\n            <Link\n              href=\"https://wallet.coinbase.com/\"\n              title=\"Coinbase Wallet\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Coinbase wallet\n            </Link>{\" \"}\n            browsers.\n          </Text>\n        ) : (\n          <Box>\n            <Text my={4}>\n              You can't use our blockchain features, like increasing the\n              count value, in this browser. Switch to{\" \"}\n              <Link\n                href=\"https://brave.com/download/\"\n                title=\"Download Brave browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Brave\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.mozilla.org/\"\n                title=\"Download FireFox browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                FireFox\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.opera.com/download\"\n                title=\"Download Opera Browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Opera\n              </Link>\n              , or{\" \"}\n              <Link\n                href=\"https://www.google.com/chrome/\"\n                title=\"Download Chrome browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Chrome\n              </Link>{\" \"}\n              to continue.\n            </Text>\n\n            <Text>\n              <Text.span bold>Rather use your phone?</Text.span> You can use\n              the Idle App in mobile browser wallets like{\" \"}\n              <Link\n                href=\"https://status.im/\"\n                title=\"status.im website\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Status\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.cipherbrowser.com/\"\n                title=\"Cipher Wallet\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Cipher\n              </Link>{\" \"}\n              or{\" \"}\n              <Link\n                href=\"https://wallet.coinbase.com/\"\n                title=\"Coinbase Wallet\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Coinbase wallet\n              </Link>\n              .\n            </Text>\n          </Box>\n        )}\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default NoWeb3BrowserModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Flex,\n  Icon,\n  Modal,\n  Link,\n  Button\n} from \"rimble-ui\";\n\nclass NoWalletModal extends React.Component {\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card p={5} maxWidth={\"600px\"}>\n          <Button.Text\n            icononly\n            icon={\"Close\"}\n            color={\"moon-gray\"}\n            position={\"absolute\"}\n            top={0}\n            right={0}\n            mt={3}\n            mr={3}\n            onClick={this.props.closeModal}\n          />\n\n          <Flex flexDirection={\"column\"} justifyContent={\"space-between\"}>\n            <Flex justifyContent={\"center\"} my={4}>\n              <Icon name=\"Warning\" color=\"gold\" size=\"40\" />\n            </Flex>\n\n            <Heading.h2 my={3}>No Wallet Available</Heading.h2>\n\n            <Text my={4}>\n              Your current browser does not have a blockchain connected wallet.\n              Try using MetaMask, Fortmatic, Portis.\n            </Text>\n\n            <Link\n              href=\"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              <Button.Outline size=\"small\">Get MetaMask Extension</Button.Outline>\n            </Link>\n          </Flex>\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default NoWalletModal;\n","// Checks for MetaMask\nconst GeneralUtil = {\n  hasMetaMask: () => {\n    let hasMetaMask = false;\n\n    if (typeof window.ethereum !== \"undefined\") {\n      hasMetaMask = typeof window.ethereum.isMetaMask !== \"undefined\";\n    } else if (typeof window.web3 !== 'undefined') {\n      hasMetaMask = typeof window.web3.currentProvider.isMetaMask !== 'undefined' && window.web3.currentProvider.isMetaMask;\n    }\n\n    return hasMetaMask;\n  },\n  isTrustWallet: () => {\n    if (typeof window.web3 !== \"undefined\" && typeof window.web3.currentProvider !== 'undefined'){\n      return typeof window.web3.currentProvider.isTrust !== 'undefined' && window.web3.currentProvider.isTrust;\n    }\n    return false;\n  },\n  isCoinbaseWallet: () => {\n    if (typeof window.web3 !== \"undefined\" && typeof window.web3.currentProvider !== 'undefined'){\n      return typeof window.web3.currentProvider.isCoinbaseWallet !== 'undefined' && window.web3.currentProvider.isCoinbaseWallet;\n    }\n    return false;\n  },\n  hasDapper: () => {\n    let hasDapper = typeof window.DapperEthereum !== 'undefined';\n\n    if (typeof window.ethereum !== \"undefined\") {\n      hasDapper = typeof window.ethereum.isDapper !== \"undefined\" && window.ethereum.isDapper;\n    }\n\n    return hasDapper;\n  },\n  isOpera: () => {\n    return /Opera|OPR\\//.test(navigator.userAgent);\n  },\n  // Current device is Android\n  isAndroid: () => {\n    const isAndroid = /android/i.test(navigator.userAgent) ? true : false;\n\n    return isAndroid;\n  },\n  // Current device is iOS\n  isIos() {\n    const isIos =\n      /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream\n        ? true\n        : false;\n\n    return isIos;\n  }\n};\n\nexport default GeneralUtil;\n","import React from \"react\";\nimport {\n  Heading,\n  Text,\n  Flex,\n  Modal,\n  Button,\n  Box,\n  Loader\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport GeneralUtil from \"../GeneralUtil\";\nimport RimbleUtils from \"@rimble/utils\";\n\nclass WrongNetworkModal extends React.Component {\n  renderContent = () => {\n    return (\n      <ModalCard.Body>\n        <Heading.h2 my={3}>\n          Switch to the {this.props.network.required.name} network in{\" \"}\n          {GeneralUtil.hasMetaMask() ? `MetaMask` : `Settings`}\n        </Heading.h2>\n\n        <Text my={4}>\n          The Idle App only works on the{\" \"}\n          <Text.span style={{ textTransform: \"capitalize\" }}>\n            {this.props.network.required.name}\n          </Text.span>{\" \"}\n          network. You’re currently on the{\" \"}\n          <Text.span style={{ textTransform: \"capitalize\" }}>\n            {\" \"}\n            {this.props.network.current.name}\n          </Text.span>{\" \"}\n          network.\n        </Text>\n\n        {GeneralUtil.hasMetaMask() && !RimbleUtils.isMobileDevice() ? (\n          <Box bg={\"#f6f6fc\"} p={3} display={[\"none\", \"block\"]}>\n            <Flex alignItems={\"center\"}>\n              <Box position={\"relative\"} width={\"4em\"}>\n                <Box>\n                  <Loader size={\"3em\"} />\n                </Box>\n              </Box>\n              <Box>\n                <Text fontWeight={4}>Waiting for the right network...</Text>\n                <Text fontWeight={2}>\n                  Go to your Wallet and to switch\n                </Text>\n              </Box>\n            </Flex>\n          </Box>\n        ) : null}\n\n        <Box display={[\"block\", \"none\"]}>\n          <Button onClick={this.props.closeModal} width={1}>\n            OK\n          </Button>\n        </Box>\n      </ModalCard.Body>\n    )\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <React.Fragment>\n            {this.renderContent()}\n          </React.Fragment>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default WrongNetworkModal;\n","import React from \"react\";\nimport { Heading, Text, Box, Flex, Icon } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\n\nfunction TransactionFeeModal(props) {\n  return (\n    <Box>\n      <ModalCard.Header title={'Transaction fees, what are you paying for?'} subtitle={'You need to pay a fee to use the Ethereum blockchain.'} subtitle2={'This pays for someone to process your transaction and store the data.'}></ModalCard.Header>\n      <ModalCard.Body>\n        <Flex flexDirection={['column', 'row']}\n          justifyContent={\"space-between\"}\n          my={[0, 4]}>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"Fingerprint\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Undeniable proof</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              You get a public record of any funds you send or receive, a bit like\n              a deed for a house.\n            </Text>\n          </Box>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"EnhancedEncryption\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Unbreakable encryption</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              Your funds can only ever go to your intended recipients.\n            </Text>\n          </Box>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"AccountBalance\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n              <Icon\n                name=\"NotInterested\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Unparalleled control</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              You can pay or get paid without using any banks or companies.\n            </Text>\n          </Box>\n        </Flex>\n      </ModalCard.Body>\n    </Box>\n  );\n}\n\nexport default TransactionFeeModal;\n","import React from 'react'\nimport moment from 'moment';\nimport connectors from '../App/connectors';\nimport { useWeb3Context } from 'web3-react';\nimport GeneralUtil from \"../utilities/GeneralUtil\";\nimport ImageButton from '../ImageButton/ImageButton';\nimport globalConfigs from '../configs/globalConfigs';\nimport styles from './Web3ConnectionButtons.module.scss';\nimport { Button, Box, Text, Flex, Link } from 'rimble-ui';\n\nconst LOG_ENABLED = false;\nconst customLog = (...props) => { if (LOG_ENABLED) console.log(moment().format('HH:mm:ss'),...props); };\n\nexport default function Web3ConnectionButtons(props) {\n  const context = useWeb3Context();\n\n  if (!context.active && !context.error) {\n    customLog('context loading', context);\n  } else if (context.error) {\n    customLog('context error', context);\n  } else {\n    customLog('context success', context);\n  }\n\n  const setConnector = async (connectorName,name) => {\n    let walletProvider = connectorName === 'Injected' ? name : connectorName;\n    if (localStorage) {\n      localStorage.setItem('walletProvider', walletProvider);\n      localStorage.setItem('connectorName', connectorName);\n    }\n\n    if (props.setConnector && typeof props.setConnector === 'function'){\n      props.setConnector(connectorName,walletProvider);\n    }\n    \n    // Close modal\n    if (typeof props.connectionCallback === 'function'){\n      props.connectionCallback();\n    }\n\n    return connectorName;\n    // return await context.setConnector(connectorName);\n  };\n\n  const unsetConnector = async () => {\n    context.unsetConnector();\n    if (props.setConnector && typeof props.setConnector === 'function'){\n      props.setConnector('Infura','Infura');\n    }\n  };\n\n  // Show provider fields to detect in-app browser\n  // alert(JSON.stringify(Object.keys(window.web3.currentProvider)));\n    \n  const isOpera = GeneralUtil.isOpera();\n  const isDapper = GeneralUtil.hasDapper();\n  const isMetamask = GeneralUtil.hasMetaMask();\n  const isTrustWallet = GeneralUtil.isTrustWallet();\n  const isGnosisSafe = !!connectors.gnosis.provider.safe;\n  const isCoinbaseWallet = GeneralUtil.isCoinbaseWallet();\n  const browserWalletDetected = isMetamask || isOpera || isDapper || isCoinbaseWallet || isTrustWallet;\n  \n  const allowedConnectors = props.allowedConnectors;\n  const registerPage = props.registerPage;\n\n  if (connectors.Portis) {\n    if (registerPage) {\n      connectors.Portis.options = connectors.Portis.options || {};\n      connectors.Portis.options.registerPageByDefault = true;\n    } else {\n      connectors.Portis.options = connectors.Portis.options || {};\n      connectors.Portis.options.registerPageByDefault = false;\n    }\n  }\n\n  let basicConnectorsName = Object.keys(connectors).filter(c => c !== 'Infura');\n\n  if (allowedConnectors) {\n    basicConnectorsName = basicConnectorsName.filter(n => allowedConnectors.map((v) => { return v.toLowerCase(); }).indexOf(n.toLowerCase()) !== -1 );\n  }\n\n  // Handle Gnosis Safe connector\n  if (isGnosisSafe){\n    const injectedIndex = basicConnectorsName.indexOf('Injected');\n    // Remove Injected\n    basicConnectorsName.splice(injectedIndex,1);\n    // Remove Gnosis\n    const gnosisIndex = basicConnectorsName.indexOf('gnosis');\n    basicConnectorsName.splice(gnosisIndex,1);\n    // Insert Gnosis in first place\n    basicConnectorsName.unshift('gnosis');\n  } else {\n    const gnosisIndex = basicConnectorsName.indexOf('gnosis');\n    // Remove Gnosis\n    basicConnectorsName.splice(gnosisIndex,1);\n  }\n\n  const buttons = basicConnectorsName.map( (connectorName,index) => {\n    switch (connectorName) {\n      case 'Injected':\n        if (browserWalletDetected) {\n          let name = null;\n          if (isMetamask) {\n            name = 'Metamask';\n          } else if (isOpera) {\n            name = 'Opera';\n          } else if (isDapper){\n            name = 'Dapper';\n          } else if (isCoinbaseWallet){\n            name = 'Coinbase';\n          } else if (isTrustWallet){\n            name = 'TrustWallet';\n          }\n\n          const connectorInfo = globalConfigs.connectors[name.toLowerCase()];\n          if (connectorInfo && connectorInfo.enabled){\n            const walletIcon = connectorInfo.icon ? connectorInfo.icon : `${name.toLowerCase()}.svg`;\n            return (\n              <Flex\n                width={1}\n                key={`wallet_${name}`}\n                justifyContent={'space-between'}\n                style={{\n                  flex:'0 100%',\n                }}\n                flexDirection={['column','row']}\n              >\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={name}\n                  isMobile={true}\n                  width={[1,0.48]}\n                  imageProps={{width:'auto',height:'42px'}}\n                  imageSrc={`images/connectors/${walletIcon}`}\n                  handleClick={ async () => await setConnector(connectorName,name)}\n                  subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using ${name}` }\n                />\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  isMobile={true}\n                  width={[1,0.48]}\n                  caption={'Watch Address'}\n                  imageSrc={`images/tokens/ETH.svg`}\n                  subcaption={'Watch an Ethereum address'}\n                  imageProps={{width:'auto',height:'42px'}}\n                  handleClick={ e => props.setCustomAddress(true) }\n                />\n              </Flex>\n            )\n          }\n          return null;\n        } else {\n          const connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n          return (\n            <ImageButton\n              buttonProps={{\n                border:2\n              }}\n              isMobile={true}\n              caption={'Browser Wallet'}\n              key={`wallet_${connectorName}`}\n              imageProps={{width:'auto',height:'42px'}}\n              imageSrc={`images/connectors/browser-wallet.png`}\n              handleClick={ async () => await setConnector(connectorName) }\n              subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using a browser wallet`}\n              buttonStyle={ props.isMobile ? {justifyContent:'flex-start',flex:'0 100%'} : {justifyContent:'flex-start',flex:'0 48%'} }\n            />\n          );\n        }\n      default:\n        const connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n        if (connectorInfo && connectorInfo.enabled){\n          const walletIcon = connectorInfo.iconModal ? connectorInfo.iconModal : (connectorInfo.icon ? connectorInfo.icon : `${connectorName.toLowerCase()}.svg`);\n\n          let caption = connectorInfo.name ? connectorInfo.name : connectorName;\n          return (\n            <ImageButton\n              buttonProps={{\n                border:2\n              }}\n              isMobile={true}\n              caption={caption}\n              key={`wallet_${connectorName}`}\n              imageSrc={`images/connectors/${walletIcon}`}\n              imageProps={{width:'auto',height:'42px'}}\n              handleClick={ async () => await setConnector(connectorName) }\n              subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using ${connectorName}`}\n              buttonStyle={ props.isMobile ? {justifyContent:'flex-start',flex:'0 100%'} : {justifyContent:'flex-start',flex:'0 48%'} }\n            />\n          );\n        }\n        return null;\n    }\n  });\n\n  return (\n    <Box width={[1]}>\n      <Flex flexDirection={'column'} alignItems={\"center\"}>\n        {context.error && (\n          <Text.p textAlign=\"center\">\n            An error occurred, are you using an Ethereum browser such as\n            <Link href=\"https://metamask.io/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">\n              &nbsp; Metamask &nbsp;\n            </Link>\n             or\n            <Link href=\"https://www.meetdapper.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">\n              &nbsp; Dapper\n            </Link>\n            ?\n            If you do not have an Ethereum wallet follow the\n            \"I'm new to Ethereum\" flow when connecting.\n            If you do have a wallet, click Reset and retry one of the wallet listed below,\n            Generic wallet option is used for Ethereum browsers only.\n          </Text.p>\n        )}\n        {(context.active || (context.error && context.connectorName)) && context.connectorName !== 'Infura' && (\n          <Button.Outline\n            width={[1/2]}\n            className={[styles.button]}\n            mb={[1, 3]}\n            size={'large'}\n            key={'reset'}\n            onClick={async () => await unsetConnector()}\n          >\n            {context.active ? \"Deactivate Connector\" : \"Reset\"}\n          </Button.Outline>\n        )}\n      </Flex>\n      <Flex\n        flexWrap={'wrap'}\n        flexDirection={'row'}\n        justifyContent={'space-between'}\n      >\n        {buttons}\n      </Flex>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport {\n  Box,\n  Text,\n  Link,\n  Icon,\n  Flex,\n  Field,\n  Modal,\n  Input,\n  Loader,\n  Button,\n  Heading\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard.js';\nimport styles from './Header.module.scss';\nimport FunctionsUtil from '../FunctionsUtil.js';\nimport ImageButton from '../../ImageButton/ImageButton.js';\nimport TransactionFeeModal from \"./TransactionFeeModal.js\";\nimport Web3ConnectionButtons from \"../../Web3ConnectionButtons/Web3ConnectionButtons.js\";\n\nimport {\n  Link as RouterLink\n} from \"react-router-dom\";\n\nclass ConnectionModal extends React.Component {\n  // TODO save pref in localstorage and do not show 'Before connecting' info every time\n  state = {\n    validated:false,\n    showTxFees:false,\n    customAddress:'',\n    currentSection:null,\n    showInstructions:false,\n    askCustomAddress:false,\n    closeRemainingTime:null,\n    customAddressError:false,\n    newToEthereumChoice:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  toggleShowTxFees = e => {\n    e.preventDefault();\n\n    this.setState({\n      showTxFees: !this.state.showTxFees\n    });\n  }\n\n  setStoredSection = () => {\n    let currentSection = null;\n    if (localStorage){\n      currentSection = localStorage.getItem('currentSection');\n      if (currentSection){\n        this.setState({\n          currentSection\n        });\n      }\n    }\n    return currentSection;\n  }\n\n  componentDidMount = () => {\n    this.loadUtils();\n    this.setStoredSection();\n  }\n\n  componentDidUpdate = () => {\n    this.loadUtils();\n  }\n\n  resetModal = e => {\n    this.setState({\n      showTxFees: false,\n      currentSection:null,\n      askCustomAddress:false,\n      showInstructions: false,\n      newToEthereumChoice:null,\n    });\n  }\n\n  setConnector = async (connectorName,name) => {\n    let walletProvider = connectorName === 'Injected' ? name : connectorName;\n\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory:'Connect',\n      eventLabel:walletProvider,\n      eventAction:'select_wallet'\n    });\n\n    if (this.props.setConnector && typeof this.props.setConnector === 'function'){\n      this.props.setConnector(connectorName,walletProvider);\n    }\n\n    // Set Wallet choice\n    this.setState({\n      newToEthereumChoice: connectorName\n    });\n\n    this.closeCountdown();\n\n    return connectorName;\n\n    // return await window.RimbleWeb3_context.setConnector(connectorName);\n  }\n\n  closeCountdown = () => {\n    const closeRemainingTime = this.state.closeRemainingTime ? this.state.closeRemainingTime-1 : 5;\n    if (!closeRemainingTime){\n      this.closeModal();\n    } else {\n      setTimeout(() => { this.closeCountdown() },1000);\n    }\n    this.setState({\n      closeRemainingTime\n    });\n  }\n\n  setWalletChoice = (e,choice) => {\n    e.preventDefault();\n    this.setState({\n      newToEthereumChoice: choice\n    });\n  }\n\n  closeModal = () => {\n    // Reset modal\n    this.resetModal();\n    // Set latest stored sections\n    this.setStoredSection();\n    // Close modal\n    this.props.closeModal();\n  }\n\n  setCurrentSection = (e,currentSection) => {\n    e.preventDefault();\n    this.setState({\n      currentSection\n    });\n\n    if (currentSection!=='instructions'){\n      // Send Google Analytics event\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Connect',\n        eventAction: 'select_mode',\n        eventLabel: currentSection\n      });\n\n      this.functionsUtil.setLocalStorage('currentSection',currentSection);\n    }\n  }\n\n  connectCustomAddress = () => {\n    const addressValid = this.functionsUtil.checkAddress(this.state.customAddress);\n    if (addressValid){\n      this.setCustomAddress(false);\n      this.functionsUtil.setCustomAddress(this.state.customAddress);\n      this.setConnector('custom','custom');\n      setTimeout(() => { this.closeModal() },1000);\n      return true;\n    } else {\n      return this.setState({\n        customAddressError:true\n      });\n    }\n  }\n\n  updateCustomAddress = (e) => {\n    const customAddressError = false;\n    const customAddress = e.target.value;\n    const validated = this.functionsUtil.checkAddress(customAddress);\n    this.setState({\n      validated,\n      customAddress,\n      customAddressError\n    });\n  }\n\n  setCustomAddress = (askCustomAddress) => {\n    this.setState({\n      askCustomAddress\n    });\n  }\n\n  renderModalContent = () => {\n\n    const TOSacceptance = (\n      <Box>\n        <Text textAlign={'center'} fontSize={1} py={[2,3]}>By connecting, I accept Idle's <RouterLink to=\"/terms-of-service\" color={'primary'} style={{color:this.props.theme.colors.primary,textDecoration:'underline'}} target={'_blank'} rel=\"nofollow noopener noreferrer\">Terms of Service</RouterLink></Text>\n      </Box>\n    );\n\n    const newToEthereum = this.state.currentSection === 'new';\n    const showConnectionButtons = this.state.currentSection === 'wallet';\n    const showInstructions = this.state.currentSection === 'instructions';\n\n    if (showInstructions){\n      return (\n        <React.Fragment>\n          <ModalCard.Header title={'Before you connect'} subtitle={'Connecting lets you use Idle via your Ethereum account.'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              flexDirection={['column', 'row']}\n              justifyContent={\"space-between\"}\n              my={[0, 3]}\n            >\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"Public\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>The blockchain is public</Heading>\n                <Text fontSize={1} textAlign={'center'}>\n                  Your Ethereum account activity is public on the\n                  blockchain. Choose an account you don’t mind being\n                  linked with your activity here.\n                </Text>\n              </Box>\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"AccountBalanceWallet\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>Have some Ether for fees</Heading>\n                <Text fontSize={1} mb={3} textAlign={'center'}>\n                  You’ll need Ether to pay transaction fees. Buy Ether\n                  from exchanges like Coinbase or directly via enabled wallet\n                  such as Portis or Dapper.<br />\n                  <Link\n                    title=\"Learn about Ethereum transaction fees\"\n                    fontWeight={'0'}\n                    color={'blue'}\n                    textAlign={'center'}\n                    hoverColor={'blue'}\n                    href=\"#\"\n                    onClick={this.toggleShowTxFees}\n                  >\n                    What are transaction fees?\n                  </Link>\n                </Text>\n              </Box>\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"People\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>Have the right account ready</Heading>\n                <Text fontSize={1} textAlign={'center'}>\n                  If you have multiple Ethereum accounts, check that the\n                  one you want to use is active in your browser.\n                </Text>\n              </Box>\n            </Flex>\n          </ModalCard.Body>\n        </React.Fragment>\n      );\n    }\n\n    if (this.state.askCustomAddress){\n      return (\n        <Box>\n          <ModalCard.Header\n            title={'Connect ETH wallet'}\n            icon={'images/idle-mark.png'}\n            subtitle={'And get started with Idle.'}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              width={1}\n              minWidth={[1,'30em']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Field\n                width={1}\n                label={'Ethereum address'}\n              >\n                <Input\n                  required\n                  width={1}\n                  type={'text'}\n                  className={styles.input}\n                  borderColor={'cardBorder'}\n                  backgroundColor={'cardBg'}\n                  pattern={'^0x[a-fA-F0-9]{40}$'}\n                  value={this.state.customAddress}\n                  onChange={ e => this.updateCustomAddress(e) }\n                  placeholder={'Insert a valid Ethereum address'}\n                />\n              </Field>\n              {\n                this.state.customAddressError && (\n                  <Text\n                    mb={2}\n                    fontSize={2}\n                    color={'red'}\n                    fontWeight={3}\n                    textAlign={'center'}\n                  >\n                    Insert a valid Ethereum Address\n                  </Text>\n                )\n              }\n              <Button\n                px={[3,4]}\n                mx={'auto'}\n                fontWeight={3}\n                size={'medium'}\n                fontSize={[2,2]}\n                borderRadius={4}\n                contrastColor={'primary'}\n                className={[styles.gradientButton]}\n                onClick={ e => this.connectCustomAddress() }\n              >\n                CONNECT\n              </Button>\n            </Flex>\n            <Flex\n              pt={3}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <Link\n                hoverColor={'blue'}\n                textAlign={'center'}\n                onClick={ e => this.setCustomAddress(false) }\n              >\n                Select another Wallet\n              </Link>\n            </Flex>\n            { TOSacceptance }\n          </ModalCard.Body>\n        </Box>\n      );\n    }\n\n    if (showConnectionButtons) {\n      return (\n        <Box>\n          <ModalCard.Header title={'Select your Wallet'} subtitle={'And get started with Idle.'} icon={'images/idle-mark.png'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex width={1} px={[0,5]} flexDirection={'column'} justifyContent={'center'}>\n              <Web3ConnectionButtons\n                width={1/2}\n                isMobile={this.props.isMobile}\n                setConnector={this.setConnector}\n                connectionCallback={this.closeModal}\n                size={this.props.isMobile ? 'medium' : 'large'}\n                setCustomAddress={this.setCustomAddress.bind(this)}\n              />\n            </Flex>\n            <Flex pt={3} alignItems={'center'} justifyContent={'center'}>\n              <Link textAlign={'center'} hoverColor={'blue'} onClick={ e => this.setCurrentSection(e,'new') }>I don't have a wallet</Link>\n            </Flex>\n            { TOSacceptance }\n          </ModalCard.Body>\n        </Box>\n      );\n    }\n\n    if (newToEthereum) {\n      return (\n        <React.Fragment>\n          <ModalCard.Header title={'Let\\'s create your first Ethereum wallet'} icon={'images/idle-mark.png'}></ModalCard.Header>\n          <ModalCard.Body>\n            {\n              !this.state.newToEthereumChoice ? (\n                <Flex width={1} px={[0,4]} flexDirection={'column'} justifyContent={'center'}>\n                  <Box mb={3}>\n                    <Text fontSize={[2,3]} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                      Connect with e-mail or phone number?\n                    </Text>\n                  </Box>\n                  <Flex mb={3} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                    <ImageButton\n                      buttonProps={{\n                        border:2\n                      }}\n                      caption={'Use e-mail'}\n                      imageSrc={'images/email.svg'}\n                      isMobile={this.props.isMobile}\n                      subcaption={'Powered by Portis'}\n                      handleClick={ e => this.setConnector('Portis','Portis') }\n                      imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {mb:'3px',width:'auto',height:'55px'}}\n                    />\n                    <ImageButton\n                      buttonProps={{\n                        border:2\n                      }}\n                      caption={'Use phone number'}\n                      isMobile={this.props.isMobile}\n                      imageSrc={'images/mobile.svg'}\n                      subcaption={'Powered by Fortmatic'}\n                      handleClick={ e => this.setConnector('Fortmatic','Fortmatic') }\n                      imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {mb:'3px',width:'auto',height:'55px'}}\n                    />\n                  </Flex>\n                  <Flex alignItems={'center'} justifyContent={'center'}>\n                    <Link textAlign={'center'} hoverColor={'blue'} onClick={ e => this.setCurrentSection(e,'wallet') }>I already have a wallet</Link>\n                  </Flex>\n                </Flex>\n              ) : (\n                <Box>\n                  <Text fontSize={3} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                    We are connecting you to {this.state.newToEthereumChoice} wallet provider...\n                  </Text>\n                  <Flex\n                    mt={2}\n                    justifyContent={'center'}\n                    alignItems={'center'}\n                    textAlign={'center'}>\n                    <Loader size=\"40px\" /> <Text ml={2} color={'dark-gray'}>Closing in {this.state.closeRemainingTime} seconds...</Text>\n                  </Flex>\n                </Box>\n              )\n            }\n            { TOSacceptance }\n          </ModalCard.Body>\n        </React.Fragment>\n      );\n    }\n\n    return (\n      <React.Fragment>\n        <ModalCard.Header title={'Connect to Idle'} icon={'images/idle-mark.png'}></ModalCard.Header>\n        <ModalCard.Body>\n          {\n            <Flex\n              width={1}\n              px={[0,4]}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Box mb={3}>\n                <Text\n                  fontWeight={2}\n                  fontSize={[2,3]}\n                  lineHeight={1.5}\n                  textAlign={'center'}\n                >\n                  How do you want to connect to Idle?\n                </Text>\n              </Box>\n              <Flex\n                mb={[2,3]}\n                alignItems={'center'}\n                justifyContent={'center'}\n                flexDirection={['column','row']}\n              >\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={`Ethereum wallet`}\n                  isMobile={this.props.isMobile}\n                  subcaption={'Choose your favourite'}\n                  imageSrc={'images/ethereum-wallet.svg'}\n                  handleClick={ e => this.setCurrentSection(e,'wallet') }\n                  imageProps={this.props.isMobile ? {width:'auto',height:'42px'} : {width:'auto',height:'55px',marginBottom:'5px'}}\n                />\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={`New wallet`}\n                  isMobile={this.props.isMobile}\n                  subcaption={'Use email / phone'}\n                  imageSrc={'images/new-wallet.png'}\n                  handleClick={ e => this.setCurrentSection(e,'new') }\n                  imageProps={this.props.isMobile ? {width:'auto',height:'42px'} : {width:'auto',height:'55px',marginBottom:'5px'}}\n                />\n              </Flex>\n              <Flex\n                alignItems={'center'}\n                justifyContent={'center'}\n              >\n                <Link\n                  color={'primary'}\n                  hoverColor={'primary'}\n                  onClick={ e => this.setCustomAddress(true) }\n                >\n                  Watch Ethereum Address\n                </Link>\n              </Flex>\n            </Flex>\n          }\n          { TOSacceptance }\n        </ModalCard.Body>\n      </React.Fragment>\n    );\n  }\n\n  renderFooter = () => {\n\n    if (this.state.newToEthereumChoice || (this.state.currentSection && this.state.askCustomAddress)){\n      return null;\n    }\n\n    return (\n      <ModalCard.Footer>\n        { !this.state.currentSection ? (\n            <Button\n              className={[styles.gradientButton,styles.empty]}\n              onClick={ e => this.setCurrentSection(e,'instructions') }\n              size={'medium'}\n              borderRadius={4}\n              contrastColor={'blue'}\n              fontWeight={3}\n              fontSize={[2,2]}\n              mx={'auto'}\n              px={[4,5]}\n            >\n              READ INSTRUCTIONS\n            </Button>\n          ) : (!this.state.askCustomAddress || this.state.currentSection==='instructions') && (\n            <Button\n              className={[styles.gradientButton,styles.empty]}\n              onClick={this.resetModal}\n              size={'medium'}\n              borderRadius={4}\n              contrastColor={'blue'}\n              fontWeight={3}\n              fontSize={[2,2]}\n              mx={'auto'}\n              px={[4,5]}\n            >\n              BACK\n            </Button>\n          )\n        }\n      </ModalCard.Footer>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.closeModal}>\n          {this.state.showTxFees === false ? (\n            <React.Fragment>\n              {this.renderModalContent()}\n              {this.renderFooter()}\n            </React.Fragment>\n          ) : (\n            <Box>\n              <TransactionFeeModal />\n              {this.renderFooter()}\n            </Box>\n          )}\n\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionModal;\n","import React from \"react\";\nimport {\n  Heading,\n  Text,\n  Modal,\n  Flex,\n  Box,\n  Loader\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport GeneralUtil from \"../GeneralUtil\";\n\nclass ConnectionPendingModal extends React.Component {\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2 my={3}>Connect Ethereum account</Heading.h2>\n\n        <Text my={4}>\n          Confirm the request that's just appeared. If you can't see a\n          request, open your{\" \"}\n          {GeneralUtil.hasMetaMask()\n            ? `MetaMask extension`\n            : `eth wallet settings`}\n          .\n        </Text>\n\n        <Box bg={\"#f6f6fc\"} p={3} display={[\"none\", \"block\"]}>\n          <Flex alignItems={\"center\"}>\n            <Box position={\"relative\"} width={\"4em\"}>\n              <Box>\n                <Loader size={\"3em\"} />\n              </Box>\n            </Box>\n            <Box>\n              <Text fontWeight={4}>\n                Waiting for connection confirmation...\n              </Text>\n              <Text fontWeight={2}>This won’t cost you any Ether</Text>\n            </Box>\n          </Flex>\n        </Box>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionPendingModal;\n","import React from \"react\";\nimport { Heading, Text, Flex, Button, Modal } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\n\nclass UserRejectedConnectionModal extends React.Component {\n  sendMessageAgain = event => {\n    this.props.closeModal();\n    this.props.initAccount();\n  };\n\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2 my={3}>\n          You can't continue without connecting your account\n        </Heading.h2>\n\n        <Text my={4}>\n          To use our blockchain features you need to confirm the connection\n          request.\n        </Text>\n\n        <Flex flexDirection={['column', 'row']} justifyContent={\"flex-end\"} mt={4}>\n          <Button.Outline onClick={this.props.closeModal} mr={[0, 3]} mb={[3, 0]}>\n            Cancel connection\n          </Button.Outline>\n          <Button onClick={this.sendMessageAgain}>\n            Try again\n          </Button>\n        </Flex>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default UserRejectedConnectionModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Icon,\n  Modal,\n  Flex,\n  Box,\n  Button,\n  EthAddress,\n  QR,\n  Link\n} from \"rimble-ui\";\nimport TransactionFeeModal from \"./TransactionFeeModal\";\n\nclass LowFundsModal extends React.Component {\n  state = {\n    showSecondary: false,\n    showTxFees: false\n  };\n\n  toggleQRVisible = () => {\n    this.setState({\n      showSecondary: !this.state.showSecondary\n    });\n  };\n\n  toggleShowTxFees = e => {\n    console.log(\"showTxFees\", this.state.showTxFees);\n    e.preventDefault();\n\n    this.setState({\n      showTxFees: !this.state.showTxFees\n    });\n  };\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card\n          pr={[0, 5]}\n          pl={[0, 5]}\n          pt={[\"48px\", 5]}\n          pb={[\"97px\", 4]}\n          maxWidth={\"960px\"}\n          overflow={\"hidden\"}\n          position={\"relative\"}\n        >\n          <Box position={\"relative\"}>\n            <Flex\n              justifyContent={\"flex-end\"}\n              mr={[0, -5]}\n              mt={[\"-48px\", -5]}\n              position={\"absolute\"}\n              top={\"0\"}\n              left={\"0\"}\n              right={\"0\"}\n              bg={\"white\"}\n              zIndex={\"1\"}\n            >\n              <Button.Text\n                icononly\n                icon={\"Close\"}\n                color={\"moon-gray\"}\n                onClick={this.props.closeModal}\n              />\n            </Flex>\n          </Box>\n\n          {this.state.showSecondary === false &&\n          this.state.showTxFees === false ? (\n            <Box>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start primary content */}\n\n                  <Box alignContent=\"center\" py={3}>\n                    <Heading.h2>\n                      Not enough Ether for transaction fees\n                    </Heading.h2>\n                  </Box>\n                  <Text mb={4}>\n                    This is a blockchain action so you’ll have to pay a\n                    transaction fee. A few dollars worth of Ether should be\n                    enough but fees do change based on how busy the network is.{\" \"}\n                    <strong>Fund your account and try again.</strong>{\" \"}\n                    <Link\n                      title=\"Learn about Ethereum transaction fees\"\n                      as={\"a\"}\n                      href=\"#\"\n                      onClick={this.toggleShowTxFees}\n                    >\n                      What are transaction fees?\n                    </Link>\n                  </Text>\n\n                  <Heading.h3>How to add funds</Heading.h3>\n\n                  <Flex\n                    alignItems={\"stretch\"}\n                    mx={0}\n                    mb={[4, 5]}\n                    mt={[3, 4]}\n                    flexWrap={[\"wrap\", \"no-wrap\"]}\n                  >\n                    <Box p={[1, 2]} width={[1, 1 / 2]}>\n                      <Flex\n                        flexDirection={\"column\"}\n                        justifyContent={\"space-between\"}\n                        height={\"100%\"}\n                      >\n                        <Box>\n                          <Heading.h5>Buy ETH from an exchange</Heading.h5>\n                          <Text fontSize=\"1\">\n                            You can buy ETH from exchanges like Coinbase and\n                            send it to your account. If you don’t already have\n                            a Coinbase account, it can take a while to get set\n                            up.\n                          </Text>\n                        </Box>\n\n                        <Button.Outline my={3}>\n                          <Flex alignItems={\"center\"}>\n                            <Icon name=\"OpenInNew\" mr={2} />\n                            Go to CoinBase\n                          </Flex>\n                        </Button.Outline>\n                      </Flex>\n                    </Box>\n                    <Box p={[1, 2]} width={[1, 1 / 2]}>\n                      <Flex\n                        flexDirection={\"column\"}\n                        justifyContent={\"space-between\"}\n                        height={\"100%\"}\n                      >\n                        <Box>\n                          <Heading.h5>\n                            Send ETH from another account\n                          </Heading.h5>\n                          <Text fontSize=\"1\">\n                            If you have ETH in another Ethereum account, you\n                            can send it to this account using your public\n                            Ethereum address or QR code.\n                          </Text>\n                        </Box>\n                        <Button.Outline my={3} onClick={this.toggleQRVisible}>\n                          <Flex alignItems={\"center\"}>\n                            <Icon name=\"FilterCenterFocus\" mr={2} />\n                            Show account QR code\n                          </Flex>\n                        </Button.Outline>\n                      </Flex>\n                    </Box>\n                  </Flex>\n                  {/* End primary content */}\n                </Box>\n              </Box>\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start primary footer */}\n                <Flex borderTop={1} borderColor={\"#eee\"} />\n                <Flex pt={4} justifyContent={[\"center\", \"flex-end\"]}>\n                  <Button onClick={this.props.closeModal} width={[1, \"auto\"]}>\n                    Back to Idle\n                  </Button>\n                </Flex>\n                {/* End primary footer */}\n              </Box>\n            </Box>\n          ) : null}\n\n          {this.state.showSecondary ? (\n            <Box mb={3}>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start secondary content */}\n                  <Flex my={3} justifyContent={\"center\"}>\n                    <QR\n                      size={130}\n                      value={\n                        this.props.account ? this.props.account : \"1234512345\"\n                      }\n                    />\n                  </Flex>\n\n                  <EthAddress my={4} address={this.props.account} />\n                  <Flex mb={3} />\n                  {/* End secondary content */}\n                </Box>\n              </Box>\n\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start secondary footer */}\n                <Flex borderTop={1} borderColor={\"#eee\"} />\n                <Flex mt={4} justifyContent={[\"center\", \"flex-end\"]}>\n                  <Button.Outline\n                    width={[1, \"auto\"]}\n                    onClick={this.toggleQRVisible}\n                  >\n                    Go back\n                  </Button.Outline>\n                </Flex>\n                {/* End secondary footer */}\n              </Box>\n            </Box>\n          ) : null}\n\n          {this.state.showTxFees ? (\n            <Box mb={3}>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start tx fee content */}\n                  <TransactionFeeModal />\n                  {/* End tx fee content */}\n                </Box>\n              </Box>\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start primary footer */}\n                <Flex\n                  pt={4}\n                  justifyContent={[\"center\", \"flex-end\"]}\n                  borderTop={1}\n                  borderColor={\"#eee\"}\n                >\n                  <Button.Outline\n                    width={[1, \"auto\"]}\n                    onClick={this.toggleShowTxFees}\n                  >\n                    Go Back\n                  </Button.Outline>\n                </Flex>\n                {/* End primary footer */}\n              </Box>\n            </Box>\n          ) : null}\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default LowFundsModal;\n","import React from \"react\";\n\nimport NoWeb3BrowserModal from \"./components/NoWeb3BrowserModal\";\nimport NoWalletModal from \"./components/NoWalletModal\";\nimport WrongNetworkModal from \"./components/WrongNetworkModal\";\n\nimport ConnectionModal from \"./components/ConnectionModal\";\nimport ConnectionPendingModal from \"./components/ConnectionPendingModal\";\nimport UserRejectedConnectionModal from \"./components/UserRejectedConnectionModal\";\n\nimport LowFundsModal from \"./components/LowFundsModal\";\n\nclass ConnectionModalUtil extends React.Component {\n  render() {\n    return (\n      <div>\n        <NoWeb3BrowserModal\n          closeModal={this.props.modals.methods.closeNoWeb3BrowserModal}\n          isOpen={this.props.modals.data.noWeb3BrowserModalIsOpen}\n          transaction={this.props.transaction}\n        />\n\n        <NoWalletModal\n          closeModal={this.props.modals.methods.closeNoWalletModal}\n          isOpen={this.props.modals.data.noWalletModalIsOpen}\n          transaction={this.props.transaction}\n        />\n\n        <WrongNetworkModal\n          closeModal={this.props.modals.methods.closeWrongNetworkModal}\n          isOpen={this.props.modals.data.wrongNetworkModalIsOpen}\n          network={this.props.network}\n        />\n\n        <ConnectionModal\n          {...this.props}\n          isMobile={this.props.isMobile}\n          setConnector={this.props.setConnector}\n          currentNetwork={this.props.network.current}\n          validateAccount={this.props.validateAccount}\n          closeModal={this.props.modals.methods.closeConnectionModal}\n          isOpen={ this.props.modals.data.connectionModalIsOpen && !this.props.accountValidated }\n        />\n\n        <ConnectionPendingModal\n          closeModal={this.props.modals.methods.closeConnectionPendingModal}\n          isOpen={this.props.modals.data.accountConnectionPending}\n          currentNetwork={this.props.network.current}\n        />\n        <UserRejectedConnectionModal\n          closeModal={\n            this.props.modals.methods.closeUserRejectedConnectionModal\n          }\n          isOpen={this.props.modals.data.userRejectedConnect}\n          initAccount={this.props.initAccount}\n        />\n\n        <LowFundsModal\n          closeModal={this.props.modals.methods.closeLowFundsModal}\n          isOpen={this.props.modals.data.lowFundsModalIsOpen}\n          currentNetwork={this.props.network.current}\n          account={this.props.account}\n        />\n      </div>\n    );\n  }\n}\n\nexport default ConnectionModalUtil;\n","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Flex,\n  Button\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass ConnectionErrorModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  async closeModal(e){\n    e.preventDefault();\n    // Disconnect to Infura only if the wallet is not logged\n    if (!this.props.account){\n      this.props.setConnector('Infura',null);\n      await this.props.context.setFirstValidConnector(['Infura']);\n    }\n    this.props.modals.methods.closeConnectionErrorModal();\n  }\n\n  render() {\n\n    const walletProvider = this.functionsUtil.getWalletProvider();\n    const isLedger = (walletProvider && walletProvider.toLowerCase() === 'ledger') || (typeof this.props.modals.data.connectionError === 'string' && this.props.modals.data.connectionError.toLowerCase().includes('ledger'));\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={ e => this.closeModal(e) }>\n          <ModalCard.Header title={ isLedger ? 'Ledger Error' : `Connection Error` } icon={'images/warning.svg'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={1} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text.p color={'dark-gray'} textAlign={'center'}>\n                The following error occured while trying to connect with your { isLedger ? 'Ledger' : 'account' }:<br />\n                <Text.span color={'red'} fontWeight={3}>\"{this.props.modals.data.connectionError}\"</Text.span><br />\n                {\n                  isLedger ? (\n                    <Text.span>\n                      Make sure that your Ledger is <strong>connected</strong> and <strong>unlocked</strong>. Also check that both <strong>Contract data</strong> and <strong>Browser support</strong> are enabled in the Ledger settings.<br />\n\n                    </Text.span>\n                  ) : 'Make sure that your wallet is unlocked and try again.'\n                }\n              </Text.p>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ async (e) => { await this.closeModal(e); } }\n              >\n              GOT IT\n              </Button>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionErrorModal;","import React from \"react\";\nimport {\n  Text,\n  Link,\n  Flex,\n  Modal,\n  Button\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass TransactionErrorModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  async closeModal(e){\n    e.preventDefault();\n    this.props.modals.methods.closeTransactionErrorModal();\n  }\n\n  render() {\n\n    const isLedgerError = typeof this.props.modals.data.transactionError === 'string' && this.props.modals.data.transactionError.toLowerCase().includes('ledger');\n    const isSlowTxError = typeof this.props.modals.data.transactionError === 'string' && this.props.modals.data.transactionError.toLowerCase().includes('not mined within 50 blocks');\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={ e => this.closeModal(e) }>\n          <ModalCard.Header title={ 'Transaction Error' } icon={'images/warning.svg'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={1} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text.p color={'dark-gray'} textAlign={'center'}>\n                The following error occured while trying to send a transaction:<br />\n                <Text.span color={'red'} fontWeight={3}>\"{this.props.modals.data.transactionError}\"</Text.span><br />\n                {\n                  isLedgerError ? (\n                    <Text.span\n                      fontSize={1}\n                    >\n                      <br />Make sure that your Ledger is <strong>connected</strong> and <strong>unlocked</strong>. Also check that both <strong>Contract data</strong> and <strong>Browser support</strong> are enabled in the Ledger settings.<br />\n                      We also suggest you to connect your Ledger with Metamask, read the <Link fontSize={1} color={'blue'} hoverColor={'blue'} target={'_blank'} rel={\"nofollow noopener noreferrer\"} href={'https://metamask.zendesk.com/hc/en-us/articles/360020394612-How-to-connect-a-Trezor-or-Ledger-Hardware-Wallet'}>instructions here</Link>.\n                    </Text.span>\n                  ) : isSlowTxError ? 'This could happen when the gas price is low, check the transaction status with your Wallet.' : 'Make sure that your have enough funds in your wallet.'\n                }\n              </Text.p>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ async (e) => { await this.closeModal(e); } }\n              >\n              GOT IT\n              </Button>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default TransactionErrorModal;","import Web3 from \"web3\";\nimport React from 'react';\nimport BigNumber from 'bignumber.js';\nimport SimpleID from 'simpleid-js-sdk';\nimport NetworkUtil from \"./NetworkUtil\";\nimport { Biconomy } from \"@biconomy/mexa\";\nimport * as Sentry from '@sentry/browser';\nimport FunctionsUtil from './FunctionsUtil';\nimport globalConfigs from '../configs/globalConfigs';\nimport ConnectionModalUtil from \"./ConnectionModalsUtil\";\nimport detectEthereumProvider from '@metamask/detect-provider';\nimport { IFrameEthereumProvider } from '@ledgerhq/iframe-provider';\nimport ConnectionErrorModal from './components/ConnectionErrorModal';\nimport TransactionErrorModal from './components/TransactionErrorModal';\n\nrequire('dotenv').config();\nconst INFURA_KEY = process.env[\"REACT_APP_INFURA_KEY\"];\n\nconst RimbleTransactionContext = React.createContext({\n  web3: {},\n  account: {},\n  biconomy: {},\n  simpleID: {},\n  contracts: [],\n  web3Infura: {},\n  tokenConfig: {},\n  transactions: {},\n  permitClient: {},\n  accountBalance: {},\n  initWeb3: () => {},\n  accountValidated: {},\n  initAccount: () => {},\n  accountBalanceLow: {},\n  initSimpleID: () => {},\n  initContract: () => {},\n  erc20ForwarderClient: {},\n  accountBalanceToken: {},\n  checkPreflight: () => {},\n  validateAccount: () => {},\n  network: {\n    current: {},\n    required: {},\n    checkNetwork: () => {},\n    isCorrectNetwork: null,\n  },\n  accountInizialized: false,\n  getTokenDecimals: () => {},\n  rejectValidation: () => {},\n  getAccountBalance: () => {},\n  contractsInitialized: false,\n  accountValidationPending: {},\n  initializeContracts: () => {},\n  rejectAccountConnect: () => {},\n  enableUnderlyingWithdraw: false,\n  connectAndValidateAccount: () => {},\n  modals: {\n    data: {\n      connectionError: {},\n      lowFundsModalIsOpen: {},\n      noWalletModalIsOpen: {},\n      userRejectedConnect: {},\n      connectionModalIsOpen: {},\n      userRejectedValidation: {},\n      wrongNetworkModalIsOpen: {},\n      accountValidationPending: {},\n      accountConnectionPending: {},\n      noWeb3BrowserModalIsOpen: {},\n      transactionConnectionModalIsOpen: {},\n    },\n    methods: {\n      openLowFundsModal: () => {},\n      closeLowFundsModal: () => {},\n      openWrongNetworkModal: () => {},\n      closeWrongNetworkModal: () => {},\n      openNoWeb3BrowserModal: () => {},\n      closeNoWeb3BrowserModal: () => {},\n      openConnectionErrorModal: () => {},\n      closeConnectionErrorModal: () => {},\n      openTransactionErrorModal: () => {},\n      closeTransactionErrorModal: () => {},\n      openConnectionPendingModal: () => {},\n      closeConnectionPendingModal: () => {},\n      openUserRejectedConnectionModal: () => {},\n      openUserRejectedValidationModal: () => {},\n      closeUserRejectedConnectionModal: () => {},\n      closeUserRejectedValidationModal: () => {},\n    }\n  },\n  transaction: {\n    data: {\n      transactions: {}\n    },\n    meta: {},\n    methods: {}\n  }\n});\n\nlet setConnectorName = null;\nlet biconomyLoginProcessing = false;\n\nclass RimbleTransaction extends React.Component {\n  static Consumer = RimbleTransactionContext.Consumer;\n\n  componentUnmounted = false;\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    const props = Object.assign({},this.props);\n    props.contracts = this.state.contracts;\n    if (this.functionsUtil){\n      props.account = this.state.account;\n      this.functionsUtil.setProps(props);\n    } else {\n      props.account = this.state.account;\n      this.functionsUtil = new FunctionsUtil(props);\n    }\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n    this.checkNetwork();\n\n    // detect Network account change\n    if (window.ethereum){\n      window.ethereum.on('networkChanged', async (networkId) => {\n        await this.props.clearCachedData(() => {\n          this.checkNetwork();\n        });\n      });\n    }\n\n    window.initWeb3 = this.initWeb3;\n  }\n\n  componentDidMount = async () => {\n    this.initSimpleID();\n\n    // this.functionsUtil.customLog('RimbleWeb3 componentDidMount');\n    this.initWeb3();\n\n    this.connectGnosisSafe();\n\n    // TEST - Manually triggers transaction error\n    // this.openTransactionErrorModal(null,'Your Ledger device is Ineligible');\n\n    window.testTransaction = (method) => {\n      const transaction = this.createTransaction();\n      transaction.method = method;\n      this.addTransaction(transaction);\n      return transaction;\n    }\n\n    window.updateTransaction = (transaction,hash,status,params) => {\n      // Add meta data to transaction\n      transaction.status = status;\n      transaction.params = params;\n      transaction.type = \"contract\";\n      transaction.created = Date.now();\n      transaction.transactionHash = hash;\n\n      // console.log('window.updateTransaction',transaction);\n\n      this.updateTransaction(transaction);\n      return transaction;\n    }\n  }\n\n  connectGnosisSafe = () => {\n    const gnosisSafeLoaded = this.props.connectors.gnosis.safeLoaded;\n    if (gnosisSafeLoaded){\n      const walletProvider = this.functionsUtil.getWalletProvider();\n      const isGnosisSafe = this.props.connectors.gnosis.safeLoaded && !!this.props.connectors.gnosis.provider.safe;\n      // console.log('isGnosisSafe',this.props.connectors.gnosis.provider.safe,isGnosisSafe);\n      if (isGnosisSafe){\n        this.props.setConnector('gnosis','gnosis');\n      } else if (walletProvider === 'gnosis') {\n        this.props.setConnector('Infura',null);\n      }\n    }\n  }\n\n  componentDidUpdate = async (prevProps, prevState) => {\n\n    this.loadUtils();\n\n    // this.functionsUtil.customLog('componentDidUpdate',prevProps.connectorName,this.props.connectorName,this.props.context.connectorName,this.props.context.active,(this.props.context.error ? this.props.context.error.message : null));\n\n    const gnosisSafeLoaded = !this.state.gnosisSafeLoaded && this.props.connectors.gnosis.safeLoaded;\n    // console.log('gnosisSafeLoaded',this.state.gnosisSafeLoaded,this.props.connectors.gnosis.safeLoaded,gnosisSafeLoaded);\n    if (gnosisSafeLoaded){\n      this.setState({\n        gnosisSafeLoaded:true\n      },() => {\n        this.connectGnosisSafe();\n      });\n    }\n\n    if (prevProps.connectorName !== this.props.connectorName && this.props.connectorName){\n      this.initWeb3();\n    } else if ( prevProps.context !== this.props.context ){\n      if (this.props.context.error instanceof Error && this.props.context.error.message.length){\n        const errorMessage = this.props.context.error.message;\n        const isWalletConnectClosedModalError = (errorMessage === 'User closed WalletConnect modal' || errorMessage === 'User closed modal');\n        // this.functionsUtil.customLog('componentDidUpdate',setConnectorName,errorMessage);\n        if (setConnectorName === 'WalletConnect' && isWalletConnectClosedModalError){\n          // this.functionsUtil.customLog('WalletConnect disconnected! Set Infura connector');\n          this.props.setConnector('Infura',null);\n          // this.functionsUtil.removeStoredItem('walletProvider');\n          // this.functionsUtil.removeStoredItem('connectorName');\n          // this.functionsUtil.setLocalStorage('context',JSON.stringify({active:this.props.context.active,connectorName:'Infura'}));\n          setConnectorName = null;\n          // await this.props.context.setConnector('Infura');\n        } else if (!isWalletConnectClosedModalError) {\n          this.openConnectionErrorModal(null,errorMessage);\n        } else {\n          this.initWeb3();\n        }\n      // WalletConnect double trigger initWeb3\n      } else if (this.props.context.active && this.props.context.connectorName!=='WalletConnect' && this.props.connectorName==='WalletConnect') {\n        this.initWeb3();\n      }\n    } else if ( (this.props.context.connectorName && this.props.context.connectorName !== this.props.connectorName) || prevProps.customAddress !== this.props.customAddress){\n      this.initWeb3();\n    }\n\n    const customAddressChanged = prevProps.customAddress !== this.props.customAddress;\n    if (customAddressChanged){\n      this.initAccount();\n    }\n\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    // const availableTokensChanged = prevProps.availableTokens && this.props.availableTokens && JSON.stringify(Object.keys(prevProps.availableTokens)) !== JSON.stringify(Object.keys(this.props.availableTokens));\n    const availableStrategiesChanged = prevProps.availableStrategies && this.props.availableStrategies && JSON.stringify(Object.keys(prevProps.availableStrategies)) !== JSON.stringify(Object.keys(this.props.availableStrategies));\n\n    // Reset tokenDecimals if token is changed\n    if (tokenChanged){\n      this.setState({\n        tokenDecimals: null\n      });\n    }\n\n    // this.functionsUtil.customLog(prevProps.enableUnderlyingWithdraw,this.props.enableUnderlyingWithdraw,this.state.enableUnderlyingWithdraw);\n    if (prevProps.enableUnderlyingWithdraw !== this.props.enableUnderlyingWithdraw){\n      this.setState({\n        enableUnderlyingWithdraw:this.props.enableUnderlyingWithdraw\n      });\n    }\n\n    if (localStorage){\n      const context = JSON.parse(localStorage.getItem('context'));\n      if (!context || (this.props.context.active !== context.active || this.props.context.connectorName !== context.connectorName)){\n        this.functionsUtil.setLocalStorage('context',JSON.stringify({active:this.props.context.active,connectorName:this.props.context.connectorName}));\n      }\n    }\n\n    if (tokenChanged || availableStrategiesChanged){\n      await this.initializeContracts();\n    }\n\n    const networkChanged = JSON.stringify(prevState.network) !== JSON.stringify(this.state.network);\n    // console.log('networkChanged',JSON.stringify(prevState.network),JSON.stringify(this.state.network),networkChanged);\n    if (networkChanged){\n      this.setState({\n        contracts:[],\n        contractsInitialized:false\n      }, () => {\n        this.initWeb3();\n        if (typeof this.props.setNetwork === 'function'){\n          this.props.setNetwork(this.state.network);\n        }\n      });\n    }\n  }\n\n  // Initialize a web3 provider\n  initWeb3 = async (connectorName=null) => {\n\n    // Detect ethereum provider\n    const metamaskProvider = await detectEthereumProvider();\n    if (metamaskProvider && (!window.ethereum || window.ethereum !== metamaskProvider)){\n      window.ethereum = metamaskProvider;\n    }\n\n    const context = this.props.context;\n    const networkId = this.state.network.current.id || this.state.network.required.id;\n\n    if (!networkId){\n      return false;\n    }\n\n    // console.log('initWeb3',this.state.network.current.id,this.state.network.required.id,networkId);\n\n    const web3Infura = new Web3(new Web3.providers.HttpProvider(globalConfigs.network.providers.infura[networkId]+INFURA_KEY));\n\n    let web3 = context.library;\n\n    // 0x Instant Wallet Provider Injection\n    if (!window.RimbleWeb3_context || context.connectorName !== window.RimbleWeb3_context.connectorName){\n      window.RimbleWeb3_context = context;\n    }\n\n    // Reset setConnectorName if force connectorName\n    if (connectorName){\n      setConnectorName = null;\n    } else {\n      connectorName = this.props.connectorName;\n    }\n\n    // const last_context = localStorage ? JSON.parse(localStorage.getItem('context')) : null;\n\n    // this.functionsUtil.customLog('initWeb3',context.active,connectorName,context.connectorName,context.connector,(web3 && web3.currentProvider ? web3.currentProvider.disable : null),(context.connector ? context.connector.disable : null));\n    if (context && connectorName === 'Infura' && connectorName !== context.connectorName){\n      if (web3 && typeof web3.currentProvider.disable === 'function'){\n        web3.currentProvider.disable();\n      } else if (context.connector && typeof context.connector.disable === 'function'){\n        context.connector.disable();\n      }\n      web3 = null;\n      setConnectorName = null;\n    }\n\n    const connectorNameChanged = (context.connectorName && context.connectorName !== connectorName) || (connectorName !== 'Infura' && connectorName !== setConnectorName);\n\n    // this.functionsUtil.customLog('initWeb3',context.active,connectorNameChanged,context.connectorName,connectorName,setConnectorName);\n\n    if (connectorName !== 'ledgerLive'){\n      if (!context.active || connectorNameChanged) {\n        // Select preferred web3 provider\n        if (connectorName && connectorNameChanged){\n\n          if (connectorName === 'gnosis' && !this.state.gnosisSafeLoaded){\n            return false;\n          }\n\n          // this.functionsUtil.customLog('initWeb3 set connector',connectorName);\n          setConnectorName = connectorName;\n          await context.setConnector(connectorName);\n          // await context.setFirstValidConnector([connectorName, 'Infura']);\n          return web3;\n        }\n      }\n    }\n\n    let web3Host = null;\n    let web3Provider = null;\n\n    if (!web3) { // safety web3 implementation\n      if (window.ethereum) {\n        this.functionsUtil.customLog(\"Using modern web3 provider.\");\n        web3Provider = window.ethereum;\n      } else if (window.web3) {\n        this.functionsUtil.customLog(\"Legacy web3 provider. Try updating.\");\n        web3Provider = window.web3;\n      } else {\n        this.functionsUtil.customLog(\"Non-Ethereum browser detected. Using Infura fallback.\");\n        web3Host = globalConfigs.network.providers.infura[networkId]+INFURA_KEY;\n      }\n    } else {\n      web3Provider = web3.currentProvider;\n    }\n\n    let forceCallback = false;\n\n    if ((!connectorName || connectorName === 'Infura') && web3Provider && typeof web3Provider.enable === 'function'){\n      try {\n        await web3Provider.enable();\n      } catch (connectionError){\n        web3Provider = null;\n        web3Host = globalConfigs.network.providers.infura[networkId]+INFURA_KEY;\n        forceCallback = true;\n      }\n    }\n\n    // Ledger Live\n    if (connectorName === 'ledgerLive'){\n      web3Provider = new IFrameEthereumProvider();\n    }\n\n    // Injected web3 provider\n    if (web3Provider){\n      web3 = new Web3(web3Provider);\n    // Infura\n    } else if (web3Host) {\n      web3 = new Web3(new Web3.providers.HttpProvider(web3Host));\n      if (connectorName !== 'Infura'){\n        this.props.setConnector('Infura',null);\n      }\n    }\n\n    const web3Callback = async () => {\n\n      window.web3Injected = this.state.web3;\n      // window.web3InfuraInjected = this.state.web3Infura;\n\n      if (typeof this.props.callbackAfterLogin === 'function'){\n        this.props.callbackAfterLogin();\n        this.props.setCallbackAfterLogin(null);\n      }\n\n      // After setting the web3 provider, check network\n      try {\n        await this.checkNetwork();\n        if (this.state.network.isCorrectNetwork){\n\n          if (!this.state.contractsInitialized){\n            await this.initializeContracts();\n          }\n\n          if (context.account){\n            // Login with biconomy\n            if (this.state.biconomy){\n              const biconomy = this.state.biconomy;\n              const biconomyInfo = globalConfigs.network.providers.biconomy;\n              if (biconomyInfo.enableLogin && !biconomy.isLogin && !biconomyLoginProcessing){\n                biconomyLoginProcessing = true;\n                biconomy.login(context.account, (error, response) => {\n                  // this.functionsUtil.customLog('biconomy login',error,response);\n                  // Failed to login with Biconomy\n                  if (error) {\n                    return this.setState({\n                      biconomy:false,\n                    },() => {\n                      this.initAccount(context.account);\n                    });\n                  }\n\n                  biconomyLoginProcessing = false;\n\n                  if (response.transactionHash) {\n                    this.initAccount(context.account);\n                  } else if(response.userContract) {\n                    this.initAccount(context.account);\n                  }\n                });\n                return false;\n              }\n            }\n\n            await this.initAccount(context.account);\n          } else {\n\n            await this.initAccount();\n            // await this.setState({\n            //   accountInizialized: true,\n            //   account: this.props.customAddress\n            // });\n          }\n        }\n      // Initialize Infura Web3 and display error\n      } catch (error) {\n        this.openConnectionErrorModal(null,error.message);\n      }\n    }\n\n    // Save original web3 connector in case Mexa initialization fails\n    const originalWeb3 = web3;\n    const biconomyInfo = globalConfigs.network.providers.biconomy;\n    const walletProvider = this.functionsUtil.getWalletProvider();\n\n    if (connectorName !== 'Infura' && biconomyInfo && biconomyInfo.enabled && biconomyInfo.supportedNetworks.includes(networkId) && (!walletProvider || !biconomyInfo.disabledWallets.includes(walletProvider.toLowerCase()))){\n\n      if (this.state.biconomy === null){\n        const biconomyWeb3Provider = web3Provider ? web3Provider : web3Host;\n\n        const biconomy = new Biconomy(biconomyWeb3Provider,biconomyInfo.params);\n\n        if (biconomy && typeof biconomy.onEvent === 'function'){\n          web3 = new Web3(biconomy);\n          biconomy.onEvent(biconomy.READY, () => {\n            if (this.componentUnmounted || this.state.biconomy === false || this.state.biconomy === biconomy){\n              return false;\n            }\n            \n            const permitClient = biconomy.permitClient;\n            const erc20ForwarderClient = biconomy.erc20ForwarderClient;\n\n            const newState = {\n              web3,\n              biconomy,\n              web3Infura,\n              permitClient,\n              erc20ForwarderClient\n            };\n            // console.log('biconomy',newState);\n\n            if (web3 !== this.state.web3){\n              this.setState(newState, web3Callback);\n            }\n          }).onEvent(biconomy.ERROR, (error, message) => {\n            // console.error('Biconomy error',error,message,this.state.biconomy);\n            web3 = originalWeb3;\n            // Handle error while initializing mexa\n            if (this.state.biconomy !== false){\n              this.setState({\n                web3,\n                web3Infura,\n                biconomy:false\n              }, web3Callback);\n            }\n          });\n        } else {\n          this.setState({\n            web3,\n            web3Infura,\n            biconomy:false\n          }, web3Callback);\n        }\n      }\n    } else {\n      if (web3 !== this.state.web3){\n        this.setState({\n          web3,\n          web3Infura,\n        }, web3Callback);\n      } else if (context.account || forceCallback){\n        web3Callback();\n      }\n    }\n\n    return web3;\n  }\n\n  initContract = async (name, address, abi, useInfuraProvider=false) => {\n    this.functionsUtil.customLog(`Init contract: ${name}`);\n    return await this.createContract(name, address, abi, useInfuraProvider);\n  }\n\n  createContract = async (name, address, abi, useInfuraProvider=false) => {\n    this.functionsUtil.customLog(`creating contract ${name} - addr: ${address}`);\n\n    const web3Provider = useInfuraProvider && this.state.web3Infura ? this.state.web3Infura : this.state.web3;\n\n    if (!web3Provider){\n      return null;\n    }\n\n    // Create contract on initialized web3 provider with given abi and address\n    try {\n      const contract = new web3Provider.eth.Contract(abi, address);\n      this.setState(state => ({\n        ...state,\n        contracts: [...state.contracts, {name, contract}]\n      }));\n      return {name, contract};\n    } catch (error) {\n      this.functionsUtil.customLogError(\"Could not create contract.\",name,address,error);\n    }\n\n    return null;\n  }\n\n  initSimpleID = () => {\n\n    if (this.state.simpleID){\n      return this.state.simpleID;\n    }\n\n    const simpleIDInfo = globalConfigs.network.providers.simpleID;\n    let simpleID = null;\n    const networkId = this.state.network.current.id || this.state.network.required.id;\n\n    if (simpleIDInfo && simpleIDInfo.enabled && simpleIDInfo.supportedNetworks.indexOf(networkId) !== -1 ){\n      const simpleIDParams = simpleIDInfo.params;\n      simpleIDParams.network = simpleIDInfo.getNetwork(this.state.network.current.id,globalConfigs.network.availableNetworks);\n      simpleID = new SimpleID(simpleIDParams);\n    }\n\n    window.simpleID = simpleID;\n\n    this.setState({\n      simpleID\n    });\n\n    return simpleID;\n  }\n\n  initAccount = async (account=false) => {\n    \n    const customAddress = this.props.customAddress;\n    const walletProvider = this.functionsUtil.getWalletProvider('Infura');\n\n    if (customAddress){\n      // Set custom account\n      this.setState({\n        account:customAddress,\n        accountInizialized:true,\n      });\n\n      // After account is complete, get the balance\n      this.getAccountBalance();\n\n      return false;\n    }\n\n    try {\n      if (!account){\n        const wallets = await Promise.race([\n            this.state.web3.eth.getAccounts(),\n            new Promise((resolve) => setTimeout(resolve, 300))\n        ]);\n        if (wallets && wallets.length){\n          account = wallets[0];\n        }\n      }\n\n      if (!account || this.state.account === account){\n        return this.setState({\n          accountInizialized: true\n        });\n      }\n\n      // Request account access if needed\n      if (account && walletProvider !== 'Infura'){\n\n        if (walletProvider === 'Infura'){\n          this.setState({\n            accountInizialized: true,\n            account:this.props.customAddress\n          });\n          return false;\n        }\n\n        // Send address info to SimpleID\n        const simpleID = this.initSimpleID();\n\n        if (simpleID){\n\n          const notifications = await simpleID.notifications();\n\n          if (notifications && notifications.length && window.$crisp){\n\n            let shownNotifications = [];\n            if (localStorage){\n              shownNotifications = localStorage.getItem('shownNotifications') && JSON.parse(localStorage.getItem('shownNotifications')) ? JSON.parse(localStorage.getItem('shownNotifications')) : [];\n            }\n\n            notifications.forEach((n,i) => {\n\n              const notificationId = n.name;\n\n              // Show notification if not shown already\n              if (shownNotifications.indexOf(notificationId) === -1){\n                window.$crisp.push([\"do\", \"message:show\", [\"text\", this.functionsUtil.normalizeSimpleIDNotification(n.content) ]]);\n\n                // Save notification id\n                shownNotifications.push(notificationId);\n              }\n            });\n\n            // Store shown notification\n            if (localStorage){\n              this.functionsUtil.setLocalStorage('shownNotifications',JSON.stringify(shownNotifications));\n            }\n          }\n        }\n\n        // Send Google Analytics connection event\n        this.functionsUtil.sendGoogleAnalyticsEvent({\n          eventCategory: 'Connect',\n          eventAction: 'connected',\n          eventLabel: walletProvider\n        });\n\n        // this.functionsUtil.customLog('initAccount',account);\n\n        // Set custom account\n        this.setState({\n          account,\n          // web3SocketProvider,\n          accountInizialized: true\n        });\n\n        // After account is complete, get the balance\n        this.getAccountBalance();\n\n        // TODO subscribe for account changes, no polling\n        // set a state flag which indicates if the subscribe handler has been\n        // called at least once\n      } else {\n        return this.setState({\n          accountInizialized: true\n        });\n      }\n    } catch (error) {\n\n      this.setState({\n        accountInizialized: true\n      });\n\n      // User denied account access...\n      this.functionsUtil.customLog(\"User cancelled connect request. Error:\", error);\n\n      // this.functionsUtil.customLog(error);\n\n      // Catch ledger error\n      if (error && error.message && error.message.includes('MULTIPLE_OPEN_CONNECTIONS_DISALLOWED')) {\n        return;\n      }\n\n      // Send Sentry connection error\n      const isError = error instanceof Error;\n      if (this.functionsUtil.checkUrlOrigin() && isError){\n        Sentry.captureException(error);\n      }\n\n      // Reject Connect\n      // this.rejectAccountConnect(error);\n    }\n  }\n\n  // TODO: Can this be moved/combined?\n  rejectAccountConnect = error => {\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    modals.data.userRejectedConnect = true;\n    this.setState({ modals });\n  }\n\n  getAccountBalance = async (increaseAmount) => {\n\n    increaseAmount = increaseAmount ? this.functionsUtil.BNify(increaseAmount) : null;\n\n    try {\n\n      let [accountBalance,accountBalanceToken,tokenDecimals] = await Promise.all([\n        this.state.web3.eth.getBalance(this.state.account), // Get ETH balance\n        this.getTokenBalance(this.state.account), // Get token balance\n        this.getTokenDecimals()\n      ]);\n\n      if (accountBalance) {\n\n        // Convert to wei if decimals found\n        if (accountBalance.toString().includes('.')){\n          accountBalance = this.state.web3.utils.toWei(accountBalance);\n        }\n\n        // Convert to Eth amount\n        accountBalance = this.state.web3.utils.fromWei(\n          accountBalance,\n          'ether'\n        );\n\n        accountBalance = this.functionsUtil.BNify(accountBalance).toString();\n\n        this.setState({\n          accountBalance\n        });\n\n        this.functionsUtil.customLog(\"account balance: \", accountBalance);\n      }\n\n      // this.functionsUtil.customLog('accountBalance',res,(accountBalanceToken ? accountBalanceToken.toString() : null),tokenDecimals,increaseAmount);\n\n      if (accountBalanceToken) {\n\n        accountBalanceToken = this.functionsUtil.BNify(accountBalanceToken);\n\n        // Increase balance amount if passed and balance didn't change\n        if (increaseAmount && this.state.accountBalanceToken && this.functionsUtil.normalizeTokenAmount(this.state.accountBalanceToken,tokenDecimals).toString() === accountBalanceToken.toString()){\n          accountBalanceToken = accountBalanceToken.plus(increaseAmount);\n        }\n        \n        accountBalanceToken = this.functionsUtil.fixTokenDecimals(accountBalanceToken,tokenDecimals).toString();\n\n        // this.functionsUtil.customLog('increaseAmount',(increaseAmount ? increaseAmount.toString() : '0'),(this.state.accountBalanceToken ? this.state.accountBalanceToken.toString() : '0'),(accountBalanceToken ? accountBalanceToken.toString() : 'ERROR'));\n        // this.functionsUtil.customLog(`account balance ${this.props.selectedToken}: `, accountBalanceToken);\n\n        this.setState({\n          accountBalanceToken,\n          [`accountBalance${this.props.selectedToken}`]:accountBalanceToken\n        });\n\n      } else {\n        this.functionsUtil.customLog('accountBalanceToken is not set:',accountBalanceToken);\n      }\n    } catch (error) {\n      this.functionsUtil.customLogError(\"Failed to get account balance.\", error);\n    }\n  }\n\n  initializeContracts = async () => {\n\n    const contracts = this.functionsUtil.getGlobalConfig(['contracts']);\n    await this.functionsUtil.asyncForEach(Object.keys(contracts),async (contractName) => {\n      const contractInfo = contracts[contractName];\n      if (contractInfo.address !== null && contractInfo.abi !== null){\n        this.functionsUtil.customLog('initializeContracts, init contract', contractName, contractInfo.address);\n        await this.initContract(contractName, contractInfo.address, contractInfo.abi);\n      }\n    });\n\n    const govTokens = this.functionsUtil.getGlobalConfig(['govTokens']);\n    await this.functionsUtil.asyncForEach(Object.keys(govTokens),async (token) => {\n      const govTokenConfig = govTokens[token];\n      if (!govTokenConfig.enabled){\n        return;\n      }\n      // Initialize govToken contracts\n      let foundGovTokenContract = this.state.contracts.find(c => c.name === token);\n      if (!foundGovTokenContract) {\n        this.functionsUtil.customLog('initializeContracts, init contract', token, govTokenConfig.address);\n        await this.initContract(token, govTokenConfig.address, govTokenConfig.abi);\n      }\n    });\n\n    if (this.props.availableStrategies){\n      // Initialize Tokens Contracts\n      await this.functionsUtil.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n        \n        const availableTokens = this.props.availableStrategies[strategy];\n\n        await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n          const tokenConfig = availableTokens[token];\n\n          let foundTokenContract = this.state.contracts.find(c => c.name === token);\n          if (!foundTokenContract) {\n            this.functionsUtil.customLog('initializeContracts, init contract',token, tokenConfig.address);\n            await this.initContract(token, tokenConfig.address, tokenConfig.abi);\n          }\n\n          // Initialize idleTokens contracts\n          let foundIdleTokenContract = this.state.contracts.find(c => c.name === tokenConfig.idle.token);\n          if (!foundIdleTokenContract) {\n            this.functionsUtil.customLog('initializeContracts, init contract',tokenConfig.idle.token, tokenConfig.idle.address);\n            await this.initContract(tokenConfig.idle.token, tokenConfig.idle.address, tokenConfig.idle.abi);\n          }\n\n          // Initialize protocols contracts\n          tokenConfig.protocols.forEach(async (p,i) => {\n            let foundProtocolContract = this.state.contracts.find(c => c.name === p.token);\n            if (!foundProtocolContract) {\n              this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n              await this.initContract(p.token, p.address, p.abi);\n            }\n          });\n\n          // Check migration contract\n          if (tokenConfig.migration){\n\n            if (tokenConfig.migration.oldContract){\n              const oldContract = tokenConfig.migration.oldContract;\n              this.functionsUtil.customLog('initializeContracts, init '+oldContract.name+' contract',oldContract);\n              await this.initContract(oldContract.name, oldContract.address, oldContract.abi);\n            }\n\n            // Initialize protocols contracts\n            if (tokenConfig.migration.oldProtocols){\n              tokenConfig.migration.oldProtocols.forEach(async (p,i) => {\n                let foundProtocolContract = this.state.contracts.find(c => c.name === p.token);\n                if (!foundProtocolContract) {\n                  this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n                  await this.initContract(p.token, p.address, p.abi);\n                }\n              });\n            }\n\n            if (tokenConfig.migration.migrationContract){\n              const migrationContract = tokenConfig.migration.migrationContract;\n              this.functionsUtil.customLog('initializeContracts, init '+migrationContract.name+' contract',migrationContract);\n              await this.initContract(migrationContract.name, migrationContract.address, migrationContract.abi);\n            }\n          }\n        })\n      });\n    }\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.availableTranches),async (protocol) => {\n      const tokens = this.props.availableTranches[protocol];\n      await this.functionsUtil.asyncForEach(Object.keys(tokens),async (token) => {\n        const tokenConfig = tokens[token];\n        await Promise.all([\n          this.initContract(tokenConfig.name,tokenConfig.address,tokenConfig.abi),\n          this.initContract(tokenConfig.AA.name,tokenConfig.AA.address,tokenConfig.AA.abi),\n          this.initContract(tokenConfig.BB.name,tokenConfig.BB.address,tokenConfig.BB.abi),\n          this.initContract(tokenConfig.CDO.name,tokenConfig.CDO.address,tokenConfig.CDO.abi),\n          this.initContract(tokenConfig.AA.CDORewards.name,tokenConfig.AA.CDORewards.address,tokenConfig.AA.CDORewards.abi),\n          this.initContract(tokenConfig.BB.CDORewards.name,tokenConfig.BB.CDORewards.address,tokenConfig.BB.CDORewards.abi)\n        ]);\n      });\n    });\n\n    return this.setState({\n      contractsInitialized:true\n    });\n  }\n\n  getContractByName = async (contractName) => {\n    let contract = this.state.contracts.find(c => c.name === contractName);\n\n    if (!contract && this.props.tokenConfig) {\n      const tokenConfig = this.props.tokenConfig;\n      contract = await this.initContract(contractName, tokenConfig.address, tokenConfig.abi);\n    }\n\n    return contract ? contract.contract : null;\n  }\n\n  getTokenDecimals = async () => {\n    let tokenDecimals = null;\n\n    if (!this.state.tokenDecimals){\n\n      tokenDecimals = await this.functionsUtil.getTokenDecimals(this.props.selectedToken);\n\n      this.setState({\n        tokenDecimals\n      });\n    } else {\n      tokenDecimals = await (new Promise( async (resolve, reject) => {\n        resolve(this.state.tokenDecimals);\n      }));\n    }\n\n    return tokenDecimals;\n  }\n\n  getTokenBalance = async (account) => {\n    const contract = await this.getContractByName(this.props.selectedToken);\n\n    if (!contract) {\n      this.functionsUtil.customLogError('Wrong contract name', this.props.selectedToken);\n      return null;\n    }\n\n    if (!contract.methods['balanceOf']){\n      this.customLogError('Wrong method name balanceOf');\n      return null;\n    }\n\n    return await contract.methods.balanceOf(account).call().catch(error => {\n      this.functionsUtil.customLog(`Failed to get ${this.props.selectedToken} balance`, error);\n    });\n  }\n\n  determineAccountLowBalance = () => {\n    // If provided a minimum from config then use it, else default to 1\n    const accountBalanceMinimum =\n      typeof this.props.config !== \"undefined\" &&\n      typeof this.props.config.accountBalanceMinimum !== \"undefined\"\n        ? this.props.config.accountBalanceMinimum\n        : 1;\n    // Determine if the account balance is low\n    const accountBalanceLow =\n      this.state.accountBalance < accountBalanceMinimum;\n\n    this.setState({\n      accountBalanceLow\n    });\n  }\n\n  connectAndValidateAccount = async (callbackAfterLogin) => {\n    // Check for account\n    if (!this.state.account) {\n      this.props.setCallbackAfterLogin(callbackAfterLogin);\n      // Show modal to connect account\n      this.openConnectionModal();\n    }\n  }\n\n  getRequiredNetwork = () => {\n\n    const networkId =\n      typeof this.props.config !== \"undefined\" &&\n      typeof this.props.config.requiredNetwork !== \"undefined\"\n        ? this.props.config.requiredNetwork\n        : globalConfigs.network.requiredNetwork;\n\n    let networkName = globalConfigs.network.availableNetworks[networkId] ? globalConfigs.network.availableNetworks[networkId] : 'unknown';\n\n    let requiredNetwork = {\n      name: networkName,\n      id: networkId\n    };\n\n    let network = Object.assign({},this.state.network);\n    network.required = requiredNetwork;\n\n    this.setState({ network });\n  }\n\n  getNetworkId = async () => {\n    try {\n      return this.state.web3.eth.net.getId((error, networkId) => {\n        let current = { ...this.state.network.current };\n        current.id = networkId;\n        let network = Object.assign({},this.state.network);\n        network.current = current;\n        network.isCorrectNetwork = globalConfigs.network.enabledNetworks.includes(networkId);\n        this.setState({ network });\n      });\n    } catch (error) {\n      this.functionsUtil.customLog(\"Could not get network ID: \", error);\n    }\n  }\n\n  getNetworkName = async () => {\n    try {\n      return this.state.web3.eth.net.getNetworkType((error, networkName) => {\n        let current = { ...this.state.network.current };\n        current.name = networkName;\n        let network = Object.assign({},this.state.network);\n        network.current = current;\n        this.setState({ network });\n      });\n    } catch (error) {\n      this.functionsUtil.customLog(\"Could not get network Name: \", error);\n    }\n  }\n\n  checkNetwork = async () => {\n    this.getRequiredNetwork();\n\n    await Promise.all([\n      this.getNetworkId(),\n      this.getNetworkName()\n    ]);\n\n    let network = Object.assign({},this.state.network);\n    network.isCorrectNetwork = !this.state.network.current.id || globalConfigs.network.enabledNetworks.includes(this.state.network.current.id);\n    // console.log('checkNetwork',this.state.network.current.id,network.isCorrectNetwork);\n\n    this.setState({ network });\n  }\n\n  contractMethodSendWrapper = async (contractName, contractMethod, params = [], value = null, callback = null, callback_receipt = null, gasLimit = null, txData = null) => {\n    // Is it on the correct network?\n    if (!this.state.network.isCorrectNetwork) {\n      // wrong network modal\n      this.state.modals.methods.openWrongNetworkModal();\n      return false;\n    }\n\n    // Is a wallet connected and verified?\n    if (!this.state.account) {\n      this.openConnectionModal();\n      if (typeof callback === 'function') {\n        callback(null,'account_not_connected');\n      }\n      return false;\n    }\n\n    // Are there a minimum amount of funds?\n    if (this.state.accountBalanceLow) {\n      this.openLowFundsModal();\n      if (typeof callback === 'function') {\n        callback(null,'account_balance_low');\n      }\n      return false;\n    }\n\n    // Is the contract loaded?\n\n    // Create new tx and add to collection\n    // Maybe this needs to get moved out of the wrapper?\n    let transaction = this.createTransaction(txData);\n    transaction.method = contractMethod;\n\n    this.addTransaction(transaction);\n\n    // Add meta data to transaction\n    transaction.type = \"contract\";\n    transaction.status = \"started\";\n    transaction.params = params;\n\n    // Show toast for starting transaction\n    this.updateTransaction(transaction);\n\n    const { account, contracts } = this.state;\n    let contract = contracts.find(c => c.name === contractName);\n    if (!contract) {\n      if (typeof callback === 'function') {\n        callback(null,'contract_not_found');\n      }\n      return this.functionsUtil.customLog(`No contract with name ${contractName}`);\n    }\n\n    contract = contract.contract;\n\n    // Does the method exists?\n    // if (typeof contract.methods[contractMethod] === 'undefined'){\n    //   return false;\n    // }\n\n    let manualConfirmationTimeoutId = null;\n\n    try {\n\n      if (!value){\n        value = this.functionsUtil.BNify(0);\n      }\n\n      this.functionsUtil.customLog('contractMethodSendWrapper',contractName,contract._address,account,contractMethod,params,(value ? { from: account, value } : { from: account }));\n\n      // estimate gas price\n      let gas = await contract.methods[contractMethod](...params)\n        .estimateGas(value ? { from: account, value } : { from: account })\n        .catch(e => console.error(e));\n\n      if (gas) {\n\n        gas = this.functionsUtil.BNify(gas);\n        gas = gas.plus(gas.times(this.functionsUtil.BNify('0.2'))); // Increase 20% of enstimation\n\n        // Check if gas is under the gasLimit param\n        if (gasLimit && gas.lt(this.functionsUtil.BNify(gasLimit))){\n          gas = this.functionsUtil.BNify(gasLimit);\n        }\n\n        // Convert gasLimit toBN with web3 utils\n        gas = this.state.web3.utils.toBN(gas.integerValue(BigNumber.ROUND_FLOOR));\n      }\n\n      const confirmationCallback = (confirmationNumber, receipt) => {\n\n        // this.functionsUtil.customLog('confirmationCallback', confirmationNumber, receipt);\n\n        if (manualConfirmationTimeoutId){\n          window.clearTimeout(manualConfirmationTimeoutId);\n        }\n\n        // this.functionsUtil.customLog('txOnConfirmation', receipt);\n        // Update confirmation count on each subsequent confirmation that's received\n        transaction.confirmationCount += 1;\n\n        const call_callback = !globalConfigs.network.isForked && typeof callback === 'function' && transaction.confirmationCount===1;\n\n        // How many confirmations should be received before informing the user\n        const confidenceThreshold = this.props.config.requiredConfirmations || 1;\n\n        if (transaction.confirmationCount === 1) {\n          // Initial confirmation receipt\n          transaction.status = \"confirmed\";\n        } else if (transaction.confirmationCount < confidenceThreshold) {\n          // Not enough confirmations to match threshold\n        }\n\n        if (transaction.confirmationCount === confidenceThreshold) {\n          // Confirmations match threshold\n          // Check the status from result since we are confident in the result\n          if (receipt.status) {\n            transaction.status = \"success\";\n          } else if (!receipt.status) {\n            transaction.status = \"error\";\n          }\n        } else if (transaction.confirmationCount > confidenceThreshold) {\n          // Confidence threshold met\n        }\n\n\n        if (call_callback){\n          // Update transaction with receipt details\n          if (receipt){\n            transaction.txReceipt = receipt;\n          }\n          transaction.recentEvent = \"confirmation\";\n          this.updateTransaction(transaction);\n          \n          callback(transaction);\n\n          this.functionsUtil.customLog('Confirmed', confirmationNumber, receipt, transaction);\n        }\n      };\n\n      const manualConfirmation = (transactionHash,timeout) => {\n        if (!transactionHash){\n          return false;\n        }\n        this.state.web3.eth.getTransactionReceipt(transactionHash,(err,txReceipt) => {\n          if (txReceipt && txReceipt.status){\n            this.functionsUtil.customLog('Tx manualConfirmation', txReceipt);\n            confirmationCallback(1,txReceipt);\n          } else {\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(transactionHash,timeout) , timeout);\n          }\n        });\n      };\n\n      const receiptCallback = receipt => {\n\n        // this.functionsUtil.customLog('txOnReceipt', receipt);\n\n        if (manualConfirmationTimeoutId){\n          window.clearTimeout(manualConfirmationTimeoutId);\n        }\n\n        // Received receipt, met total number of confirmations\n        if (receipt){\n          transaction.txReceipt = receipt;\n        }\n        transaction.recentEvent = \"receipt\";\n\n        // If the network is forked use the receipt for confirmation\n        if (globalConfigs.network.isForked){\n          transaction.status = \"success\";\n          if (typeof callback === 'function') {\n            callback(transaction);\n          }\n        } else {\n          this.updateTransaction(transaction);\n\n          // Transaction mined, wait for manual confirmation\n          if (receipt.status){\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(receipt.transactionHash,4000), 2000);\n          }\n        }\n      };\n\n      // const networkId = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n      // const common = { customChain:{ chainId: 1337, networkId: 1337 } };\n\n      return contract.methods[contractMethod](...params)\n        .send(value ? { from: account, value, gas/*, common*/ } : { from: account, gas/*, common*/ })\n        .on(\"transactionHash\", hash => {\n          this.functionsUtil.customLog('txOnTransactionHash', hash);\n\n          if (!hash){\n            this.functionsUtil.customLog('Skip transactionHash due to hash empty', hash);\n            return false;\n          }\n\n          transaction.transactionHash = hash;\n          transaction.status = \"pending\";\n          transaction.recentEvent = \"transactionHash\";\n          this.updateTransaction(transaction);\n\n          if (callback_receipt){\n            callback_receipt(transaction);\n          }\n\n          // Wait for manual confirmation only for mobile\n          if (this.props.isMobile){\n            if (manualConfirmationTimeoutId){\n              window.clearTimeout(manualConfirmationTimeoutId);\n            }\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(hash,60000), 20000);\n          }\n        })\n        .on(\"receipt\", receiptCallback)\n        .on(\"confirmation\", confirmationCallback)\n        .on(\"error\", error => {\n\n          console.log('Tx error',error);\n          \n          const isDeniedTx = error && error.message && typeof error.message.includes === 'function' ? error.message.includes('User denied transaction signature') : false;\n          \n          // Set error on transaction\n          transaction.status = \"error\";\n          transaction.recentEvent = \"error\";\n          this.updateTransaction(transaction);\n\n\n          // Show ToastProvider\n          if (!isDeniedTx){\n            window.toastProvider.addMessage(\"Something went wrong\", {\n              icon: 'Block',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"failure\",\n              colorTheme: 'light',\n              secondaryMessage: \"Please retry\",\n            });\n\n            const isError = error instanceof Error;\n\n            if (typeof error.message !== 'undefined'){\n              this.openTransactionErrorModal(null,error.message);\n            } else if (this.functionsUtil.checkUrlOrigin() && isError){\n              Sentry.captureException(error);\n            }\n          }\n\n          if (typeof callback === 'function') {\n            callback(transaction,error);\n          }\n        });\n    } catch (error) {\n\n      console.log('Tx catch error',error);\n\n      transaction.status = \"error\";\n      this.updateTransaction(transaction);\n\n      // TODO: should this be a custom error? What is the error here?\n      // TODO: determine how to handle error messages globally\n      window.toastProvider.addMessage(\"Something went really wrong, we are sorry\", {\n        icon: 'Block',\n        actionHref: \"\",\n        actionText: \"\",\n        variant: \"failure\",\n        colorTheme: 'light',\n        secondaryMessage: \"Try refreshing the page :(\",\n      });\n\n      const isDeniedTx = error && error.message ? error.message.includes('User denied transaction signature') : false;\n\n      const isError = error instanceof Error;\n      if ( this.functionsUtil.checkUrlOrigin() && isError && !isDeniedTx){\n        Sentry.captureException(error);\n      }\n\n      if (typeof callback === 'function') {\n        // this.functionsUtil.customLog('Tx Failed',error,transaction,typeof callback);\n        callback(transaction,error);\n      }\n\n      return false;\n    }\n  }\n\n  // Create tx\n  createTransaction = (txData=null) => {\n    let transaction = {\n      ...txData\n    };\n    transaction.txReceipt = {};\n    transaction.created = Date.now();\n    transaction.confirmationCount = 0;\n    transaction.status = \"initialized\";\n    transaction.lastUpdated = Date.now();\n    transaction.token = this.props.selectedToken;\n    transaction.strategy = this.props.selectedStrategy;\n    transaction.networkId = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    return transaction;\n  }\n\n  addTransaction = transaction => {\n    const transactions = { ...this.state.transactions };\n    transactions[`tx${transaction.created}`] = transaction;\n    this.setState({ transactions });\n  }\n\n  // Add/update transaction in state\n  updateTransaction = updatedTransaction => {\n    const transactions = { ...this.state.transactions };\n    const transaction = { ...updatedTransaction };\n    transaction.lastUpdated = Date.now();\n    transactions[`tx${updatedTransaction.created}`] = transaction;\n    this.setState({ transactions });\n\n    // Save transactions in localStorage only if pending or succeeded\n    // console.log('updateTransaction',transaction);\n    if (transaction.transactionHash){\n      // Clear cached data\n      this.functionsUtil.clearCachedData();\n\n      // Store transaction\n      this.functionsUtil.addStoredTransaction(`tx${transaction.created}`,transaction);\n    }\n\n    return transaction;\n  }\n\n  // CONNECTION MODAL METHODS\n  closeConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionModalIsOpen = false;\n    // this.functionsUtil.customLog(\"this.state\", this.state);\n    this.setState({ modals });\n  }\n\n  openConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionModalIsOpen = true;\n    this.setState({ modals: modals });\n  }\n\n  closeConnectionPendingModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    this.setState({ modals });\n  }\n\n  openConnectionPendingModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = true;\n    modals.data.transactionConnectionModalIsOpen = false;\n    modals.data.connectionModalIsOpen = false;\n\n    this.setState({ modals });\n  }\n\n  closeTransactionErrorModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.transactionError = false;\n    this.setState({ modals });\n  }\n\n  openTransactionErrorModal = (e,error) => {\n    if (typeof e !== \"undefined\" && e) {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.transactionError = error;\n\n    this.setState({ modals });\n  }\n\n  closeConnectionErrorModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n\n    if (!this.state.modals.data.connectionError){\n      return false;\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionError = false;\n    this.setState({ modals });\n  }\n\n  openConnectionErrorModal = (e,error) => {\n    if (typeof e !== \"undefined\" && e) {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n\n    // Handle generic error\n    if (error==='[object Object]'){\n      error = 'Unable to access to the wallet.'\n    }\n    \n    if (this.state.modals.data.connectionError !== error){\n      // console.log('openConnectionErrorModal',typeof error,typeof error === 'object' ? JSON.stringify(error) : error);\n      modals.data.connectionError = error;\n      this.setState({ modals });\n    }\n  }\n\n  closeUserRejectedConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedConnect = false;\n    this.setState({ modals });\n  }\n\n  openUserRejectedConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedConnect = true;\n    this.setState({ modals });\n  }\n\n  closeNoWeb3BrowserModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWeb3BrowserModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openNoWeb3BrowserModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWeb3BrowserModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeNoWalletModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openNoWalletModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeWrongNetworkModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.wrongNetworkModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openWrongNetworkModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.wrongNetworkModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeLowFundsModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.lowFundsModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openLowFundsModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.lowFundsModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  state = {\n    web3: null,\n    context:null,\n    account: null,\n    contracts: [],\n    biconomy: null,\n    simpleID: null,\n    web3Infura:null,\n    transactions: {},\n    CrispClient: null,\n    permitClient:null,\n    tokenDecimals:null,\n    accountBalance: null,\n    web3Subscription: null,\n    accountValidated: null,\n    gnosisSafeLoaded:false,\n    accountBalanceDAI: null,\n    initWeb3: this.initWeb3,\n    accountBalanceLow: null,\n    accountInizialized:false,\n    erc20ForwarderClient:null,\n    subscribedTransactions:{},\n    contractsInitialized:false,\n    initAccount: this.initAccount,\n    accountValidationPending: null,\n    initSimpleID: this.initSimpleID,\n    initContract: this.initContract,\n    checkPreflight: this.checkPreflight,\n    validateAccount: this.validateAccount,\n    rejectValidation: this.rejectValidation,\n    getTokenDecimals: this.getTokenDecimals,\n    getAccountBalance: this.getAccountBalance,\n    initializeContracts: this.initializeContracts,\n    rejectAccountConnect: this.rejectAccountConnect,\n    contractMethodSendWrapper: this.contractMethodSendWrapper,\n    connectAndValidateAccount: this.connectAndValidateAccount,\n    enableUnderlyingWithdraw: this.props.enableUnderlyingWithdraw,\n    network: {\n      current: {},\n      required: {},\n      isCorrectNetwork: null,\n      checkNetwork: this.checkNetwork\n    },\n    modals: {\n      data: {\n        connectionError: null,\n        lowFundsModalIsOpen: null,\n        userRejectedConnect: null,\n        connectionModalIsOpen: null,\n        userRejectedValidation: null,\n        wrongNetworkModalIsOpen: null,\n        accountConnectionPending: null,\n        accountValidationPending: null,\n        transactionConnectionModalIsOpen: null,\n        noWalletModalIsOpen: this.noWalletModalIsOpen,\n        noWeb3BrowserModalIsOpen: this.noWeb3BrowserModalIsOpen,\n      },\n      methods: {\n        openLowFundsModal: this.openLowFundsModal,\n        openNoWalletModal: this.openNoWalletModal,\n        closeNoWalletModal: this.closeNoWalletModal,\n        closeLowFundsModal: this.closeLowFundsModal,\n        openConnectionModal: this.openConnectionModal,\n        closeConnectionModal: this.closeConnectionModal,\n        openWrongNetworkModal: this.openWrongNetworkModal,\n        closeWrongNetworkModal: this.closeWrongNetworkModal,\n        openNoWeb3BrowserModal: this.openNoWeb3BrowserModal,\n        closeNoWeb3BrowserModal: this.closeNoWeb3BrowserModal,\n        openConnectionErrorModal: this.openConnectionErrorModal,\n        closeConnectionErrorModal: this.closeConnectionErrorModal,\n        openTransactionErrorModal: this.openTransactionErrorModal,\n        closeTransactionErrorModal: this.closeTransactionErrorModal,\n        openConnectionPendingModal: this.openConnectionPendingModal,\n        closeConnectionPendingModal: this.closeConnectionPendingModal,\n        openUserRejectedValidationModal: this.openUserRejectedValidationModal,\n        openUserRejectedConnectionModal: this.openUserRejectedConnectionModal,\n        closeUserRejectedValidationModal: this.closeUserRejectedValidationModal,\n        closeUserRejectedConnectionModal: this.closeUserRejectedConnectionModal,\n      }\n    },\n    transaction: {\n      data: {\n        transactions: null\n      },\n      meta: {},\n      methods: {}\n    }\n  }\n\n  render() {\n    const connectionErrorModalOpened = typeof this.state.modals.data.connectionError === 'string' && this.state.modals.data.connectionError.length>0;\n    const transactionErrorModalOpened = typeof this.state.modals.data.transactionError === 'string' && this.state.modals.data.transactionError.length>0;\n    return (\n      <div>\n        <RimbleTransactionContext.Provider\n          {...this.props}\n          value={this.state}\n        />\n        <ConnectionModalUtil\n          {...this.props}\n          modals={this.state.modals}\n          network={this.state.network}\n          account={this.state.account}\n          isMobile={this.props.isMobile}\n          initAccount={this.state.initAccount}\n          setConnector={this.props.setConnector}\n          validateAccount={this.state.validateAccount}\n          accountValidated={this.state.accountValidated}\n          accountConnectionPending={this.state.accountConnectionPending}\n          accountValidationPending={this.state.accountValidationPending}\n        />\n        <TransactionErrorModal\n          modals={this.state.modals}\n          account={this.state.account}\n          context={this.props.context}\n          isOpen={transactionErrorModalOpened}\n        />\n        <ConnectionErrorModal\n          modals={this.state.modals}\n          account={this.state.account}\n          context={this.props.context}\n          isOpen={connectionErrorModalOpened}\n          setConnector={this.props.setConnector}\n        />\n        <NetworkUtil\n          web3={this.state.web3}\n          theme={this.props.theme}\n          network={this.state.network}\n        />\n      </div>\n    );\n  }\n}\n\nexport default RimbleTransaction;\n","import React from \"react\";\nimport ExtLink from '../../ExtLink/ExtLink';\nimport FunctionsUtil from '../FunctionsUtil';\nimport { Box, Flex, Image, Text, Link, Icon } from \"rimble-ui\";\n\nimport {\n  Link as RouterLink\n} from \"react-router-dom\";\n\nclass Header extends React.Component {\n  state = {\n\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidMount() {\n\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n\n    this.loadUtils();\n\n    if (this.props.network && !this.props.network.isCorrectNetwork){\n      return false;\n    }\n  }\n\n  render() {\n\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n\n    return (\n      <Box\n        style={{\n          left: '0',\n          right: '0',\n          zIndex: 99,\n          position: 'absolute',\n        }}\n      >\n        <Flex\n          p={2}\n          alignItems={'center'}\n          justifyContent={'center'}\n          backgroundColor={'dark-blue'}\n          flexDirection={['column','row']}\n        >\n          <Text\n            color={'white'}\n            textAlign={'center'}\n          >\n            IDLE Governance Token is now live!\n          </Text>\n          <ExtLink\n            pr={2}\n            py={1}\n            mt={[1,0]}\n            ml={[0,2]}\n            pl={'12px'}\n            color={'white'}\n            style={{\n              display:'flex',\n              borderRadius:'8px',\n              flexDirection:'row',\n              alignItems:'flex-end'\n            }}\n            backgroundColor={'#0037ff'}\n            href={'https://idlefinance.medium.com/idle-governance-is-live-9b55e8f407d7'}\n          >\n            Read More\n            <Icon\n              ml={1}\n              size={'1.3em'}\n              color={'white'}\n              name={'KeyboardArrowRight'}\n            >\n            </Icon>\n          </ExtLink>\n        </Flex>\n        <Flex\n          pt={[3,4]}\n          mx={'auto'}\n          bg={\"transparent\"}\n          width={['98%','100%']}\n          maxWidth={['100%','100em']}\n          alignItems={['center','flex-start']}\n        >\n          <Flex\n            ml={[3, 5]}\n            width={[0.5, 3/12]}\n          >\n            <RouterLink\n              to=\"/\"\n            >\n              <Image\n                position={'relative'}\n                src={'images/logo.svg'}\n                height={['35px','48px']}\n              />\n            </RouterLink>\n          </Flex>\n            <Flex\n              width={[0.5,8/12]}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={\"flex-end\"}\n            >\n              {\n                governanceEnabled && \n                  <Link\n                    mr={4}\n                    fontSize={3}\n                    color={'white'}\n                    hoverColor={'white'}\n                    fontFamily={'sansSerif'}\n                    textAlign={['center','left']}\n                    onClick={ (e) => window.location.hash='#/governance' }\n                  >\n                    Governance\n                  </Link>\n              }\n              {\n                !this.props.isMobile &&\n                  <>\n                    <Link\n                      mr={4}\n                      fontSize={3}\n                      color={'white'}\n                      hoverColor={'white'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                      onClick={(e) => {this.functionsUtil.scrollTo(document.getElementById('contacts').offsetTop,300)}}\n                    >\n                      Contact Us\n                    </Link>\n                    <Link\n                      fontSize={3}\n                      color={'white'}\n                      hoverColor={'white'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                      onClick={(e) => {this.functionsUtil.scrollTo(document.getElementById('faq').offsetTop,300)}}\n                    >\n                      FAQs\n                    </Link>\n                  </>\n              }\n            </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default Header;\n","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nexport default function ScrollToTop() {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return null;\n}","import Footer from '../Footer/Footer';\nimport React, { Component } from 'react';\nimport styles from './PageNotFound.module.scss';\nimport { Box, Flex, Heading, Button } from 'rimble-ui'\nimport Header_styles from '../utilities/components/Header.module.scss';\nimport {\n  Link as RouterLink,\n} from \"react-router-dom\";\n\nclass PageNotFound extends Component {\n  state = {};\n\n  render() {\n    return (\n      <Box>\n        <Box className={styles.headerContainer} px={[3,6]} pt={['2em', '3em']}>\n          <Box className={styles.headerBgFiller}></Box>\n          <Box position={'relative'} zIndex={10}>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"60em\"]} mx={'auto'} textAlign={'center'} pt={['8vh', '8vh']}>\n              <Heading.h1 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.3em'} fontSize={['2.5em',7]} textAlign={'center'} color={'white'}>\n                This page doesn't exist!\n              </Heading.h1>\n              <Heading.h3 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.6em'} fontWeight={2} fontSize={['1.5em',4]} textAlign={'center'} color={'white'}>\n                Sorry, the page you are looking for cannot be found.\n              </Heading.h3>\n              <RouterLink to=\"/\" style={{textDecoration:'none'}}>\n                <Button\n                  className={Header_styles.gradientButton}\n                  borderRadius={4}\n                  size={this.props.isMobile ? 'medium' : 'medium'}\n                  mainColor={'blue'}\n                  contrastColor={'white'}\n                  fontWeight={3}\n                  fontSize={[2,2]}\n                  mx={'auto'}\n                  px={[4,5]}\n                  mt={2}\n                >\n                  GO TO HOMEPAGE\n                </Button>\n              </RouterLink>\n            </Flex>\n          </Box>\n        </Box>\n        <Footer />\n      </Box>\n    );\n  }\n}\n\nexport default PageNotFound;\n","import React from \"react\";\nimport { Box, Flex, Text } from \"rimble-ui\";\n\nclass NetworkOverview extends React.Component {\n  getNetworkCircleColor = () => {\n    let circleColor = \"#333\";\n    if (this.props.network) {\n      switch (this.props.network.id) {\n        case 1:\n          circleColor = \"#56b3ae\";\n          break;\n        case 2:\n          circleColor = \"#000\";\n          break;\n        case 3:\n          circleColor = \"#ed5a8d\";\n          break;\n        case 4:\n          circleColor = \"#efc35c\";\n          break;\n        case 42:\n          circleColor = \"#6a5ff6\";\n          break;\n        default:\n          circleColor = \"#ccc\";\n      }\n    }\n\n    return circleColor;\n  };\n\n  render() {\n    const networkCircle = {\n      borderRadius: \"50%\",\n      backgroundColor: this.getNetworkCircleColor(),\n      height: \"1em\",\n      width: \"1em\"\n    };\n\n    return (\n      <Flex alignItems={\"center\"}>\n        <Box style={networkCircle} mr={2} />\n        <Text style={{ textTransform: \"capitalize\" }}>\n          {this.props.network.name}\n        </Text>\n      </Flex>\n    );\n  }\n}\n\nexport default NetworkOverview;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Icon,\n  Flex,\n  ToastMessage,\n  Box,\n  Button,\n  Link\n} from \"rimble-ui\";\nimport NetworkOverview from \"../utilities/components/NetworkOverview\";\n\nconst DebuggerButtons = props => (\n  <Box mt={4} borderTop={1} borderColor=\"#E8E8E8\" pt={3}>\n    <Heading.h4 textAlign={\"center\"}>Show Modal</Heading.h4>\n    <Button\n      onClick={props.modals.methods.openWrongNetworkModal}\n      size=\"small\"\n      mr={2}\n      mb={2}\n    >\n      Blocking Wrong Network\n    </Button>\n\n    <Button\n      onClick={props.modals.methods.openConnectionModal}\n      size=\"small\"\n      mr={2}\n      mb={2}\n    >\n      Connection\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openConnectionPendingModal}\n      mr={2}\n      mb={2}\n    >\n      Connection Pending\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openUserRejectedConnectionModal}\n      mr={2}\n      mb={2}\n    >\n      Connection Rejected\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={event => {\n        props.modals.methods.openLowFundsModal(event);\n      }}\n      mr={2}\n      mb={2}\n    >\n      Low Funds\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openNoWeb3BrowserModal}\n      mr={2}\n      mb={2}\n    >\n      Not Web3 Browser\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openNoWalletModal}\n      mr={2}\n      mb={2}\n    >\n      No Wallet\n    </Button>\n  </Box>\n);\n\nclass Web3Debugger extends React.Component {\n  render() {\n    return (\n      <Card width={\"600px\"} mx={\"auto\"} px={4}>\n        <Heading.h3 textAlign={\"center\"}>Get Connected</Heading.h3>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            <Icon name=\"Check\" color={\"green\"} mr={2} />\n            <Text>Modern & Web3 Capable Browser</Text>\n          </Flex>\n        </Box>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.web3 ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Browser-connected Wallet</Text>\n          </Flex>\n\n          {!this.props.web3 ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">You do not have a wallet.</Text>\n              </Flex>\n\n              <Link\n                href=\"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                <Button.Outline size=\"small\">\n                  Get MetaMask Extension\n                </Button.Outline>\n              </Link>\n            </Flex>\n          ) : null}\n        </Box>\n\n        {this.props.web3 ? (\n          <Flex\n            py={3}\n            my={3}\n            borderTop={1}\n            borderBottom={1}\n            borderColor={\"#E8E8E8\"}\n            textAlign={\"center\"}\n            justifyContent={\"space-around\"}\n            alignItems={\"center\"}\n          >\n            <Button\n              size=\"small\"\n              onClick={this.props.connectAndValidateAccount}\n              disabled={!this.props.web3}\n            >\n              Connect and verify\n            </Button>\n            <Text>- or -</Text>\n            <Button size=\"small\" disabled>\n              Initiate On-Chain Action\n            </Button>\n          </Flex>\n        ) : null}\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.network.isCorrectNetwork ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Correct Network</Text>\n          </Flex>\n\n          {this.props.web3 && !this.props.network.isCorrectNetwork ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Box>\n                  <Flex alignItems={\"center\"}>\n                    <Text\n                      mr={2}\n                      color=\"#999\"\n                      style={{ textTransform: \"capitalize\" }}\n                    >\n                      Current network:\n                    </Text>\n                    <NetworkOverview network={this.props.network.current} />\n                  </Flex>\n                  <Flex alignItems={\"center\"}>\n                    <Text\n                      mr={2}\n                      color=\"#999\"\n                      style={{ textTransform: \"capitalize\" }}\n                    >\n                      Required network:\n                    </Text>\n                    <NetworkOverview network={this.props.network.required} />\n                  </Flex>\n                </Box>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.checkNetwork}>\n                Check Network\n              </Button.Outline>\n            </Flex>\n          ) : null}\n          {this.props.web3 && this.props.isCorrectNetwork ? (\n            <Flex ml={4} alignItems={\"center\"}>\n              <NetworkOverview network={this.props.network.current} />\n            </Flex>\n          ) : null}\n        </Box>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.account && this.props.accountValidated ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Wallet connected and verified</Text>\n          </Flex>\n\n          {!this.props.account &&\n          this.props.web3 &&\n          !this.props.userRejectedConnect ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">Not connected to this dApp.</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.initAccount}>\n                Connect\n              </Button.Outline>\n            </Flex>\n          ) : null}\n          {this.props.account && this.props.web3 ? (\n            <Flex ml={4} alignItems={\"center\"}>\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n              <Box>\n                <Text color=\"#999\">Connected wallet {this.props.account}</Text>\n                <Text color={this.props.accountBalanceLow ? \"red\" : \"#999\"}>\n                  Account balance {this.props.accountBalance}\n                </Text>\n              </Box>\n            </Flex>\n          ) : null}\n\n          {this.props.userRejectedConnect ? (\n            <Flex ml={4} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Error\" mr={2} color=\"red\" />\n                <Text color=\"red\">User rejected Connect request</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.initAccount}>\n                Connect\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {(this.props.accountValidated === null ||\n            this.props.accountValidated === false) &&\n          this.props.web3 ? (\n            <Flex\n              ml={4}\n              my={1}\n              alignItems={\"center\"}\n              justifyContent={\"space-between\"}\n            >\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">Account not verified</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.validateAccount}>\n                Validate\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {this.props.accountValidated === false ? (\n            <Flex\n              ml={4}\n              my={1}\n              alignItems={\"center\"}\n              justifyContent={\"space-between\"}\n            >\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Error\" mr={2} color=\"red\" />\n                <Text color=\"red\">Account not verified</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.validateAccount}>\n                Validate\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {this.props.userRejectedValidation === false ? (\n            <Flex ml={4}>\n              <Icon name=\"Error\" mr={2} color=\"red\" />\n              <Text color=\"red\">Account not verified</Text>\n            </Flex>\n          ) : null}\n        </Box>\n\n        <DebuggerButtons {...this.props} />\n\n        <ToastMessage.Provider ref={node => (window.toastProvider = node)} />\n      </Card>\n    );\n  }\n}\n\nexport default Web3Debugger;\n","const address = '0xf5dce57282a584d2746faf1593d3121fcac444dc'; // mainnet\nconst abi = [\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"name\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x06fdde03\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"approve\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x095ea7b3\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"reserveFactorMantissa\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x173b9904\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"borrowBalanceCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x17bfdfbc\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalSupply\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x18160ddd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"exchangeRateStored\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x182df0f5\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"src\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"dst\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transferFrom\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x23b872dd\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"pendingAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x26782247\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"decimals\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x313ce567\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOfUnderlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x3af9e669\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"getCash\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x3b1d21a2\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newComptroller\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setComptroller\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x4576b5db\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalBorrows\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x47bd3718\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"comptroller\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x5fe3b567\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"reduceAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"_reduceReserves\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x601a0bf1\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"initialExchangeRateMantissa\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x675d972c\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"accrualBlockNumber\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x6c540baf\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"underlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x6f307dc3\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOf\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x70a08231\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"totalBorrowsCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x73acee98\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalReserves\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x8f840ddd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"symbol\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x95d89b41\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"borrowBalanceStored\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x95dd9193\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"accrueInterest\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa6afed95\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"dst\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transfer\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa9059cbb\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"borrowIndex\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xaa5af0fd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"supplyRatePerBlock\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xae9d70b0\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"liquidator\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"seizeTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"seize\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xb2a02ff1\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newPendingAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setPendingAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xb71d1a0c\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"exchangeRateCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xbd6d894d\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"getAccountSnapshot\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xc37f68e2\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"allowance\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xdd62ed3e\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"_acceptAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xe9c714f2\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newInterestRateModel\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setInterestRateModel\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf2b3abbd\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"interestRateModel\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf3fdb15a\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"admin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf851a440\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"borrowRatePerBlock\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf8f9da28\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"_setReserveFactor\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xfca7820b\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"isCToken\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xfe9c44ae\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"name\": \"underlying_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"comptroller_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"interestRateModel_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"initialExchangeRateMantissa_\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"name_\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"symbol_\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"decimals_\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"constructor\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"constructor\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"interestAccumulated\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrowIndex\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"AccrueInterest\",\n    \"signature\": \"0x875352fb3fadeb8c0be7cbbe8ff761b308fa7033470cd0287f02f3436fd76cb9\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"minter\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"mintAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"mintTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Mint\",\n    \"signature\": \"0x4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"redeemer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"redeemAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"redeemTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Redeem\",\n    \"signature\": \"0xe5b754fb1abb7f01b499791d0b820ae3b6af3424ac1c59768edb53f4ec31a929\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrowAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"accountBorrows\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Borrow\",\n    \"signature\": \"0x13ed6866d4e1ee6da46f845c46d7e54120883d75c5ea9a2dacc1c4ca8984ab80\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"payer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"accountBorrows\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"RepayBorrow\",\n    \"signature\": \"0x1a2a22cb034d26d1854bdc6666a5b91fe25efbbb5dcad3b0355478d6f5c362a1\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"liquidator\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"cTokenCollateral\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"seizeTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"LiquidateBorrow\",\n    \"signature\": \"0x298637f684da70674f26509b10f07ec2fbc77a335ab1e7d6215a4b2484d8bb52\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldPendingAdmin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newPendingAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewPendingAdmin\",\n    \"signature\": \"0xca4f2f25d0898edd99413412fb94012f9e54ec8142f9b093e7720646a95b16a9\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldAdmin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewAdmin\",\n    \"signature\": \"0xf9ffabca9c8276e99321725bcb43fb076a6c66a54b7f21c4e8146d8519b417dc\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldComptroller\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newComptroller\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewComptroller\",\n    \"signature\": \"0x7ac369dbd14fa5ea3f473ed67cc9d598964a77501540ba6751eb0b3decf5870d\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldInterestRateModel\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newInterestRateModel\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewMarketInterestRateModel\",\n    \"signature\": \"0xedffc32e068c7c95dfd4bdfd5c4d939a084d6b11c4199eac8436ed234d72f926\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"NewReserveFactor\",\n    \"signature\": \"0xaaa68312e2ea9d50e16af5068410ab56e1a1fd06037b1a35664812c30f821460\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"admin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"reduceAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newTotalReserves\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"ReservesReduced\",\n    \"signature\": \"0x3bad0c59cf2f06e7314077049f48a93578cd16f5ef92329f1dab1420a99c177e\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"error\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"info\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"detail\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Failure\",\n    \"signature\": \"0x45b96fe442630264581b197e84bbada861235052c5a1aadfff9ea4e40a969aa0\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"name\": \"from\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"name\": \"to\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Transfer\",\n    \"signature\": \"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Approval\",\n    \"signature\": \"0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\",\n    \"type\": \"event\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"mintAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"mint\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa0712d68\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"redeemTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"redeem\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xdb006a75\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"redeemAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"redeemUnderlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x852a12e3\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrowAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"borrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xc5ebeaec\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"repayBorrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x0e752702\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"repayBorrowBehalf\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x2608f818\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"cTokenCollateral\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"liquidateBorrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf5e3c462\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }\n];\nexport default { address, abi };\n","const address = '0x5592EC0cfb4dbc12D3aB100b257153436a1f0FEa'; // rinkeby\nconst abi = [{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"stop\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"owner_\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"name_\",\"type\":\"bytes32\"}],\"name\":\"setName\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"stopped\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"authority_\",\"type\":\"address\"}],\"name\":\"setAuthority\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"push\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"move\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"start\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"authority\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"pull\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"symbol_\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"authority\",\"type\":\"address\"}],\"name\":\"LogSetAuthority\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"LogSetOwner\",\"type\":\"event\"},{\"anonymous\":true,\"inputs\":[{\"indexed\":true,\"name\":\"sig\",\"type\":\"bytes4\"},{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"foo\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"bar\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"fax\",\"type\":\"bytes\"}],\"name\":\"LogNote\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"dst\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}];\nexport default { address, abi };\n","import DAI from '../abis/tokens/DAI.json';\nimport CHAI from '../abis/chai/CHAI.json';\nimport cToken from '../abis/compound/cDAI';\nimport WETH from '../abis/tokens/WETH.json';\nimport USDC from '../abis/tokens/USDC.json';\nimport ERC20 from '../abis/tokens/ERC20.js';\nimport fToken from '../abis/fuse/fToken.json';\nimport aToken from '../abis/aave/AToken.json';\nimport yToken from '../abis/dydx/yToken.json';\nimport iToken from '../abis/fulcrum/iToken.json';\nimport crToken from '../abis/cream/crToken.json';\nimport IdleTokenV3 from '../contracts/IdleTokenV3.json';\nimport IdleTokenV4 from '../contracts/IdleTokenV4.json';\nimport IdleConverterPersonalSignV4 from '../contracts/IdleConverterPersonalSignV4.json';\n\nconst availableTokens = {\n  42:{\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x4f96fe3b7a6cf9725f59d353f723c1bdb64ca6aa',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x295CA5bC5153698162dDbcE5dF50E436a58BA21e',\n        },\n        protocols:[\n          {\n            decimals:28,\n            token:'cDAI',\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0xf0d0eb522cfa50b716b3b1604c4f0fa6f04376ad',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          }\n        ]\n      },\n      USDC:{\n        abi:USDC,\n        token:'USDC',\n        decimals:6,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0xb7a4f3e9097c08da09517b5ab877f7a917224ede',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        ramp:{\n          swapAsset:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x0de23D3bc385a74E2196cfE827C8a640B8774B9f',\n        },\n        protocols:[\n          {\n            decimals:16,\n            enabled:true,\n            token:'cUSDC',\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x4a92e71227d294f041bd82dd8f78591b75140d63',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          }\n        ]\n      },\n    },\n    risk:{\n      \n    }\n  },\n  1337:{\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your DAI with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleDAI',\n            name:'idleDAIYieldV3',\n            address:'0x78751b12da02728f467a44eac40f5cbc16bd7934',\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token:'yxDAIOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            token:'idleDAI',\n            abi:IdleConverterPersonalSignV4,\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token:'cDAI',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:iToken,\n            enabled:false,\n            name:'fulcrum',\n            address:'0x493c57c4763932315a328269e1adad09653b9081',\n            token:'iDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            address:'0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token:'aDAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            address:'0x028171bCA77440897B824Ca71D1c56caC55b68A3',\n            token:'aDAIv2',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:CHAI,\n            name:'dsr',\n            enabled:true,\n            address:'0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token:'CHAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:yToken,\n            name:'dydx',\n            enabled:true,\n            address:'0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token:'yxDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDC:{\n        abi:USDC,\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x5274891bEC421B39D23760c04A6755eCB444797C',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your USDC with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDC',\n            name:'idleUSDCYieldV3',\n            address:'0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6'\n          },\n          oldProtocols:[\n            {\n              abi:yToken,\n              name:'dydx',\n              enabled:true,\n              address:'0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token:'yxUSDCOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token:'cUSDC',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token:'iUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token:'aUSDC',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            decimals:18,\n            enabled:true,\n            name:'aavev2',\n            token:'aUSDCv2',\n            address:'0xBcca60bB61934080951369a648Fb03DF4F96263C',\n            functions:{\n              \n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token:'yxUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDT:{\n        decimals:6,\n        token:'USDT',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre:{\n          destCurrency:'USDT'\n        },\n        defiPrime:{\n          token:'usdt'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDTYield',\n          address:'0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your USDT with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDT',\n            name:'idleUSDTYieldV3',\n            address:'0x63D27B3DA94A9E871222CB0A32232674B02D2f2D'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDT',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token:'cUSDT',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token:'iUSDT',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token:'aUSDT',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            decimals:18,\n            name:'aavev2',\n            enabled:true,\n            token:'aUSDTv2',\n            address:'0x3ed3b47dd13ec9a98b44e6204a523e766b225811',\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      SUSD:{\n        decimals:18,\n        token:'SUSD',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        skipMintForDeposit:false,\n        color:'hsl(250, 31%, 15%)',\n        // icon:'images/tokens/SUSD.svg',\n        address:'0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n        wyre:{\n          destCurrency:'SUSD'\n        },\n        defiPrime:{\n          token:'susd'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleSUSDYield',\n          address:'0xf52cdcd458bf455aed77751743180ec4a595fd3f',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your SUSD with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleSUSD',\n            name:'idleSUSDYieldV3',\n            address:'0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleSUSD',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x625aE63000f46200499120B906716420bd059240',\n            token:'aSUSD',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            name:'aavev2',\n            enabled:true,\n            abi:aToken,\n            address:'0x6c5024cd4f8a59110119c56f8933403a539555eb',\n            token:'aSUSDv2',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      TUSD:{\n        decimals:18,\n        token:'TUSD',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        skipMintForDeposit:false,\n        color:'hsl(217, 100%, 20%)',\n        address:'0x0000000000085d4780b73119b644ae5ecd22b376',\n        wyre:{\n          destCurrency:'TUSD'\n        },\n        defiPrime:{\n          token:'tusd'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleTUSDYield',\n          address:'0xc278041fDD8249FE4c1Aad1193876857EEa3D68c',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your TUSD with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleTUSD',\n            name:'idleTUSDYieldV3',\n            address:'0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleTUSD',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x4da9b813057d04baef4e5800e36083717b4a0341',\n            token:'aTUSD',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            enabled:true,\n            name:'aavev2',\n            token:'aTUSDv2',\n            address:'0x101cc05f4A51C0319f570d5E146a8C625198e636',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      WETH:{\n        abi:WETH,\n        token:'WETH',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WETH'\n        },\n        ramp:{\n          swapAsset:'WETH'\n        },\n        defiPrime:{\n          token:'weth'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWETHYield',\n          address:'0xC8E6CA6E96a326dC448307A5fDE90a0b21fd7f80',\n        },\n        protocols:[\n          {\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x4Ddc2D193948926D02f9B1fE9e1daa0718270ED5',\n            token:'cETH',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            address:'0x030bA81f1c18d280636F32af80b9AAd02Cf0854e',\n            token:'aWETH',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n      WBTC:{\n        decimals:8,\n        token:'WBTC',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(29, 81%, 59%)',\n        address:'0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WBTC'\n        },\n        defiPrime:{\n          token:'wbtc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWBTCYield',\n          address:'0x8C81121B15197fA0eEaEE1DC75533419DcfD3151',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your WBTC with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleWBTC',\n            name:'idleWBTCYieldV3',\n            address:'0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleWBTC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            enabled:true,\n            token:'cWBTC',\n            abi:cToken.abi,\n            name:'compound',\n            address:'0xccF4429DB6322D5C611ee964527D42E5d685DD6a',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:iToken,\n            decimals:18,\n            token:'iWBTC',\n            enabled:false,\n            name:'fulcrum',\n            address:'0xba9262578efef8b3aff7f60cd629d6cc8859c8b5',\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            token:'aWBTC',\n            address:'0xfc4b8ed459e00e5400be803a9bb3954234fd50e3',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            enabled:true,\n            name:'aavev2',\n            token:'aWBTCv2',\n            address:'0x9ff58f4fFB29fA2266Ab25e75e2A8b3503311656',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      RAI:{\n        deposit:{},\n        token:'RAI',\n        decimals:18,\n        enabled:true,\n        abi:ERC20.abi,\n        enabledEnvs:[],\n        govTokensDisabled:false,\n        color:'hsl(169,42%,37%)',\n        icon:'images/tokens/RAI.png',\n        address:'0x03ab458634910aad20ef5f1c8ee96f1d6ac54919',\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleRAIYield',\n          address:'0x5C960a3DCC01BE8a0f49c02A8ceBCAcf5D07fABe',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:28,\n            enabled:true,\n            name:'cream',\n            token:'crRAI',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0xf8445c529d363ce114148662387eba5e62016e20',\n          },\n          {\n            abi:fToken,\n            decimals:28,\n            name:'fuse',\n            token:'fRAI',\n            enabled:true,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x752F119bD4Ee2342CE35E2351648d21962c7CAfE',\n          }\n        ]\n      },\n      FEI:{\n        deposit:{},\n        token:'FEI',\n        decimals:18,\n        enabled:true,\n        abi:ERC20.abi,\n        enabledEnvs:[],\n        govTokensDisabled:false,\n        color:'hsl(158, 64%, 37%)',\n        address:'0x956f47f50a910163d8bf957cf5846d573e7f87ca',\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleFEIYield',\n          address:'0xb2d5CB72A621493fe83C6885E4A776279be595bC',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:28,\n            enabled:true,\n            name:'cream',\n            token:'crFEI',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x8C3B7a4320ba70f8239F83770c4015B5bc4e6F91',\n          },\n          {\n            abi:fToken,\n            decimals:28,\n            name:'fuse',\n            token:'fFEI',\n            enabled:true,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0xd8553552f8868C1Ef160eEdf031cF0BCf9686945',\n          }\n        ]\n      },\n    },\n    risk:{\n      DAI:{\n        abi:DAI,\n        decimals:18,\n        token:'DAI',\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAISafe',\n          address:'0xa14ea0e11121e6e951e87c66afe460a00bcd6a16'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleDAI',\n            name:'idleDAISafeV3',\n            address:'0x1846bdfDB6A0f5c473dEc610144513bd071999fB'\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token:'yxDAIOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleDAI',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token:'cDAI',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0x493c57c4763932315a328269e1adad09653b9081',\n            token:'iDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token:'aDAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            name:'dsr',\n            enabled:true,\n            abi:CHAI,\n            address:'0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token:'CHAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token:'yxDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDC:{\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCSafe',\n          address:'0x3391bc034f2935ef0e1e41619445f998b2680d35'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDC',\n            name:'idleUSDCSafeV3',\n            address:'0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token:'yxUSDCOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token:'cUSDC',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token:'iUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token:'aUSDC',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token:'yxUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDT:{\n        decimals:6,\n        token:'USDT',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre:{\n          destCurrency:'USDT'\n        },\n        defiPrime:{\n          token:'usdt'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDTSafe',\n          address:'0x28fAc5334C9f7262b3A3Fe707e250E01053e07b5'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDT',\n            name:'idleUSDTSafeV3',\n            address:'0x42740698959761baf1b06baa51efbd88cb1d862b'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleDAI',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token:'cUSDT',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token:'iUSDT',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token:'aUSDT',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      }\n    }\n  },\n  1:{ // Mainnet\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your DAI with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleDAI',\n            name:'idleDAIYieldV3',\n            address:'0x78751b12da02728f467a44eac40f5cbc16bd7934',\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token:'yxDAIOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            token:'idleDAI',\n            abi:IdleConverterPersonalSignV4,\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            defiScore:7.9,\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token:'cDAI',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:iToken,\n            enabled:false,\n            name:'fulcrum',\n            address:'0x493c57c4763932315a328269e1adad09653b9081',\n            token:'iDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            defiScore:7.4,\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            address:'0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token:'aDAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            defiScore:7.4,\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            address:'0x028171bCA77440897B824Ca71D1c56caC55b68A3',\n            token:'aDAIv2',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:CHAI,\n            name:'dsr',\n            enabled:true,\n            address:'0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token:'CHAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            defiScore:7.7,\n            abi:yToken,\n            name:'dydx',\n            enabled:true,\n            address:'0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token:'yxDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDC:{\n        abi:USDC,\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x5274891bEC421B39D23760c04A6755eCB444797C',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your USDC with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDC',\n            name:'idleUSDCYieldV3',\n            address:'0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6'\n          },\n          oldProtocols:[\n            {\n              abi:yToken,\n              name:'dydx',\n              enabled:true,\n              address:'0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token:'yxUSDCOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            defiScore:8.0,\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token:'cUSDC',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token:'iUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            defiScore:7.4,\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token:'aUSDC',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            defiScore:7.4,\n            abi:aToken,\n            decimals:18,\n            enabled:true,\n            name:'aavev2',\n            token:'aUSDCv2',\n            address:'0xBcca60bB61934080951369a648Fb03DF4F96263C',\n            functions:{\n              \n            }\n          },\n          {\n            defiScore:7.8,\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token:'yxUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDT:{\n        decimals:6,\n        token:'USDT',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre:{\n          destCurrency:'USDT'\n        },\n        defiPrime:{\n          token:'usdt'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDTYield',\n          address:'0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your USDT with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDT',\n            name:'idleUSDTYieldV3',\n            address:'0x63D27B3DA94A9E871222CB0A32232674B02D2f2D'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDT',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            defiScore:7.9,\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token:'cUSDT',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token:'iUSDT',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            defiScore:7.2,\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token:'aUSDT',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            defiScore:7.2,\n            abi:aToken,\n            decimals:18,\n            name:'aavev2',\n            enabled:true,\n            token:'aUSDTv2',\n            address:'0x3ed3b47dd13ec9a98b44e6204a523e766b225811',\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      SUSD:{\n        decimals:18,\n        token:'SUSD',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        skipMintForDeposit:false,\n        color:'hsl(250, 31%, 15%)',\n        // icon:'images/tokens/SUSD.svg',\n        address:'0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n        wyre:{\n          destCurrency:'SUSD'\n        },\n        defiPrime:{\n          token:'susd'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleSUSDYield',\n          address:'0xf52cdcd458bf455aed77751743180ec4a595fd3f',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your SUSD with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleSUSD',\n            name:'idleSUSDYieldV3',\n            address:'0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleSUSD',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            defiScore:7.2,\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x625aE63000f46200499120B906716420bd059240',\n            token:'aSUSD',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            defiScore:7.2,\n            name:'aavev2',\n            enabled:true,\n            abi:aToken,\n            address:'0x6c5024cd4f8a59110119c56f8933403a539555eb',\n            token:'aSUSDv2',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      TUSD:{\n        decimals:18,\n        token:'TUSD',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        skipMintForDeposit:false,\n        color:'hsl(217, 100%, 20%)',\n        address:'0x0000000000085d4780b73119b644ae5ecd22b376',\n        wyre:{\n          destCurrency:'TUSD'\n        },\n        defiPrime:{\n          token:'tusd'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleTUSDYield',\n          address:'0xc278041fDD8249FE4c1Aad1193876857EEa3D68c',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your TUSD with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleTUSD',\n            name:'idleTUSDYieldV3',\n            address:'0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleTUSD',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            defiScore:7.8,\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x4da9b813057d04baef4e5800e36083717b4a0341',\n            token:'aTUSD',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            defiScore:7.8,\n            abi:aToken,\n            enabled:true,\n            name:'aavev2',\n            token:'aTUSDv2',\n            address:'0x101cc05f4A51C0319f570d5E146a8C625198e636',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      WETH:{\n        abi:WETH,\n        token:'WETH',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WETH'\n        },\n        ramp:{\n          swapAsset:'WETH'\n        },\n        defiPrime:{\n          token:'weth'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWETHYield',\n          address:'0xC8E6CA6E96a326dC448307A5fDE90a0b21fd7f80',\n        },\n        protocols:[\n          {\n            defiScore:8.8,\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x4Ddc2D193948926D02f9B1fE9e1daa0718270ED5',\n            token:'cETH',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            defiScore:8.3,\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            address:'0x030bA81f1c18d280636F32af80b9AAd02Cf0854e',\n            token:'aWETH',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n      WBTC:{\n        decimals:8,\n        token:'WBTC',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(29, 81%, 59%)',\n        address:'0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WBTC'\n        },\n        defiPrime:{\n          token:'wbtc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWBTCYield',\n          address:'0x8C81121B15197fA0eEaEE1DC75533419DcfD3151',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your WBTC with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleWBTC',\n            name:'idleWBTCYieldV3',\n            address:'0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleWBTC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            defiScore:8.9,\n            enabled:true,\n            token:'cWBTC',\n            abi:cToken.abi,\n            name:'compound',\n            address:'0xccF4429DB6322D5C611ee964527D42E5d685DD6a',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:iToken,\n            decimals:18,\n            token:'iWBTC',\n            enabled:false,\n            name:'fulcrum',\n            address:'0xba9262578efef8b3aff7f60cd629d6cc8859c8b5',\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            defiScore:8.3,\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            token:'aWBTC',\n            address:'0xfc4b8ed459e00e5400be803a9bb3954234fd50e3',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            defiScore:8.3,\n            abi:aToken,\n            enabled:true,\n            name:'aavev2',\n            token:'aWBTCv2',\n            address:'0x9ff58f4fFB29fA2266Ab25e75e2A8b3503311656',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      RAI:{\n        deposit:{},\n        token:'RAI',\n        decimals:18,\n        enabled:true,\n        abi:ERC20.abi,\n        enabledEnvs:[],\n        defiScoreDisabled:true,\n        govTokensDisabled:false,\n        color:'hsl(169,42%,37%)',\n        icon:'images/tokens/RAI.png',\n        address:'0x03ab458634910aad20ef5f1c8ee96f1d6ac54919',\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleRAIYield',\n          address:'0x5C960a3DCC01BE8a0f49c02A8ceBCAcf5D07fABe',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:28,\n            enabled:true,\n            name:'cream',\n            token:'crRAI',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0xf8445c529d363ce114148662387eba5e62016e20',\n          },\n          {\n            abi:fToken,\n            decimals:28,\n            name:'fuse',\n            token:'fRAI',\n            enabled:true,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x752F119bD4Ee2342CE35E2351648d21962c7CAfE',\n          },\n          {\n            abi:aToken,\n            decimals:18,\n            token:'aRAI',\n            enabled:true,\n            name:'aavev2',\n            functions:{\n            },\n            address:'0xc9bc48c72154ef3e5425641a3c747242112a46af',\n          }\n        ]\n      },\n      FEI:{\n        deposit:{},\n        token:'FEI',\n        decimals:18,\n        enabled:true,\n        abi:ERC20.abi,\n        enabledEnvs:['beta'],\n        defiScoreDisabled:true,\n        govTokensDisabled:false,\n        color:'hsl(158, 64%, 37%)',\n        address:'0x956f47f50a910163d8bf957cf5846d573e7f87ca',\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleFEIYield',\n          address:'0xb2d5CB72A621493fe83C6885E4A776279be595bC',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:28,\n            enabled:true,\n            name:'cream',\n            token:'crFEI',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x8C3B7a4320ba70f8239F83770c4015B5bc4e6F91',\n          },\n          {\n            abi:fToken,\n            decimals:28,\n            name:'fuse',\n            token:'fFEI',\n            enabled:true,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0xd8553552f8868C1Ef160eEdf031cF0BCf9686945',\n          }\n        ]\n      },\n    },\n    risk:{\n      DAI:{\n        abi:DAI,\n        decimals:18,\n        token:'DAI',\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAISafe',\n          address:'0xa14ea0e11121e6e951e87c66afe460a00bcd6a16'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleDAI',\n            name:'idleDAISafeV3',\n            address:'0x1846bdfDB6A0f5c473dEc610144513bd071999fB'\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token:'yxDAIOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleDAI',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            defiScore:7.9,\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token:'cDAI',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0x493c57c4763932315a328269e1adad09653b9081',\n            token:'iDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            defiScore:7.4,\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token:'aDAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            name:'dsr',\n            enabled:true,\n            abi:CHAI,\n            address:'0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token:'CHAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            defiScore:7.7,\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token:'yxDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDC:{\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCSafe',\n          address:'0x3391bc034f2935ef0e1e41619445f998b2680d35'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDC',\n            name:'idleUSDCSafeV3',\n            address:'0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token:'yxUSDCOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            defiScore:8.0,\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token:'cUSDC',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token:'iUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            defiScore:7.4,\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token:'aUSDC',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            defiScore:7.8,\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token:'yxUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDT:{\n        decimals:6,\n        token:'USDT',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre:{\n          destCurrency:'USDT'\n        },\n        defiPrime:{\n          token:'usdt'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDTSafe',\n          address:'0x28fAc5334C9f7262b3A3Fe707e250E01053e07b5'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDT',\n            name:'idleUSDTSafeV3',\n            address:'0x42740698959761baf1b06baa51efbd88cb1d862b'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleDAI',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            defiScore:7.9,\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token:'cUSDT',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token:'iUSDT',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            defiScore:7.2,\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token:'aUSDT',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      }\n    }\n  }\n};\n\nexport default availableTokens;","import ERC20 from '../contracts/ERC20.json';\nimport IdleCDO from '../contracts/IdleCDO.json';\nimport IdleStrategy from '../contracts/IdleStrategy.json';\nimport IdleCDOTrancheRewards from '../contracts/IdleCDOTrancheRewards.json';\nconst availableTranches = {\n  idle:{\n    DAI:{\n      token:'DAI',\n      decimals:18,\n      limit:500000,\n      protocol:'idle',\n      blockNumber:13054628,\n      address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n      CDO:{\n        abi:IdleCDO,\n        decimals:18,\n        name:'IdleCDO_idleDAIYield',\n        address:'0xd0DbcD556cA22d3f3c142e9a3220053FD7a247BC'\n      },\n      Strategy:{\n        abi:IdleStrategy,\n        name:'IdleStrategy_idleDAIYield'\n      },\n      AA:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'AA',\n        functions:{\n          stake:'stake',\n          unstake:'unstake',\n          deposit:'depositAA',\n          withdraw:'withdrawAA'\n        },\n        CDORewards:{\n          decimals:18,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_idleDAIYield_AA',\n          address:'0x9c3bC87693c65E740d8B2d5F0820E04A61D8375B',\n          stakingRewards:[\n            {\n              token:'IDLE',\n              address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e'\n            }\n          ]\n        },\n        label:'idleDAI AA',\n        blockNumber:13054628,\n        name:'AA_idleDAIYield',\n        token:'AA_idleDAIYield',\n        address:'0xE9ada97bDB86d827ecbaACCa63eBcD8201D8b12E'\n      },\n      BB:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'BB',\n        functions:{\n          stake:'stake',\n          unstake:'unstake',\n          deposit:'depositBB',\n          withdraw:'withdrawBB'\n        },\n        CDORewards:{\n          decimals:18,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_idleDAIYield_BB',\n          address:'0x4473bc90118b18be890af42d793b5252c4dc382d',\n          stakingRewards:[\n            {\n              token:'IDLE',\n              address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e'\n            }\n          ]\n        },\n        label:'idleDAI BB',\n        blockNumber:13054628,\n        name:'BB_idleDAIYield',\n        token:'BB_idleDAIYield',\n        address:'0x730348a54bA58F64295154F0662A08Cbde1225c2'\n      }\n    }\n  }\n  /*\n  yearn:{\n  \tDAI:{\n  \t  junior:{\n  \t    address:'0x000000000000000000000000000000000000'\n  \t  },\n  \t  senior:{\n  \t    address:'0x000000000000000000000000000000000000'\n  \t  }\n  \t}\n  }\n  */\n};\nexport default availableTranches;","const TransactionToastMessages = {\n    initialized: {\n      message: \"{action} request initialized\",\n      secondaryMessage: \"Confirm with your wallet provider\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"default\",\n      icon: \"InfoOutline\"\n    },\n    started: {\n      message: \"{action} request submitted\",\n      secondaryMessage: \"Confirm with your wallet provider\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"default\",\n      icon: \"InfoOutline\"\n    },\n    pending: {\n      message: \"Processing {action} request...\",\n      secondaryMessage: \"This may take a few minutes\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"processing\",\n      icon: \"InfoOutline\"\n    },\n    confirmed: {\n      message: \"First block confirmed\",\n      secondaryMessage: \"Your {action} request is in progress\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"processing\",\n      icon: 'CheckCircle'\n    },\n    success: {\n      message: \"{action} request completed\",\n      variant: \"success\",\n      icon: 'CheckCircle'\n    },\n    error: {\n      message: \"{action} request failed\",\n      secondaryMessage: \"Could not complete transaction.\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"failure\",\n      icon: \"Block\"\n    }\n  };\n\n  export default TransactionToastMessages;\n","import React from \"react\";\nimport { ToastMessage } from \"rimble-ui\";\nimport TransactionToastMessages from \"./TransactionToastMessages\";\n\nclass TransactionToastUtil extends React.Component {\n  // Determines if collections are same size\n  collectionHasNewObject = (prevCollection, currentCollection) => {\n    return (\n      typeof prevCollection === \"undefined\" ||\n      Object.keys(prevCollection).length !==\n        Object.keys(currentCollection).length\n    );\n  };\n\n  // Returns object from currentCollection that doesn't exist in prevCollection\n  getNewObjectFromCollection = (prevCollection, currentCollection) => {\n    if (typeof prevCollection !== \"undefined\") {\n      const objectKey = Object.keys(currentCollection).filter(key => {\n        return !Object.keys(prevCollection).includes(key);\n      });\n      return currentCollection[objectKey];\n    } else {\n      return Object.keys(currentCollection).map(key => {\n        return currentCollection[key];\n      });\n    }\n  };\n\n  // Compare two collections of objects, return single object from current collection that differs from prev collection\n  getUpdatedObjectFromCollection = (prevCollection, currentCollection) => {\n    const updatedTransaction = Object.keys(prevCollection)\n      .map(key => {\n        if (\n          prevCollection[key].lastUpdated !== currentCollection[key].lastUpdated\n        ) {\n          return currentCollection[key];\n        } else {\n          return null;\n        }\n      })\n      .filter(object => object !== null);\n    return updatedTransaction[0];\n  };\n\n  // Returns an transaction from a collection based on a given identifier\n  getTransactionFromCollection = (identifier, collection) => {\n    const object = collection[`tx${identifier}`];\n    return object;\n  };\n\n  // Returns either a new object or finds an updated object in a collection against a previous collection\n  getUpdatedTransaction = (prevCollection, currentCollection) => {\n    let tx = null;\n    let currentTx = {};\n    let prevTx = {};\n\n    if (this.collectionHasNewObject(prevCollection, currentCollection)) {\n      tx = this.getNewObjectFromCollection(prevCollection, currentCollection);\n    } else {\n      currentTx = this.getUpdatedObjectFromCollection(\n        prevCollection,\n        currentCollection\n      );\n      if (currentTx) {\n        prevTx = this.getTransactionFromCollection(\n          currentTx.created,\n          prevCollection\n        );\n      } else {\n        return false;\n      }\n\n      if (currentTx.status !== prevTx.status) {\n        tx = currentTx;\n      }\n    }\n    return tx;\n  };\n\n  // Check for updates to the transactions collection\n  processTransactionUpdates = prevProps => {\n    let tx = null;\n    if (Object.keys(this.props.transactions).length) {\n      tx = this.getUpdatedTransaction(\n        prevProps.transactions,\n        this.props.transactions\n      );\n    }\n\n    if (tx) {\n      this.showTransactionToast(tx);\n    }\n  };\n\n  showTransactionToast = transaction => {\n    // console.log(\"showTransactionToast: \", { ...transaction });\n    // Get text info for toast\n    let toastMeta = this.getTransactionToastMeta(transaction);\n    toastMeta.colorTheme = this.props.themeMode;\n    toastMeta.closeElem = true;\n    // console.log('toastMeta',toastMeta);\n\n    // Show toast\n    window.toastProvider.addMessage(\".\", toastMeta);\n  };\n\n  getTransactionToastMeta = transaction => {\n    let transactionToastMeta = {};\n    let status = transaction.status;\n\n    switch (status) {\n      case \"initialized\":\n        transactionToastMeta = TransactionToastMessages.initialized;\n        break;\n      case \"started\":\n        transactionToastMeta = TransactionToastMessages.started;\n        break;\n      case \"pending\":\n        transactionToastMeta = TransactionToastMessages.pending;\n        break;\n      case \"confirmed\":\n        transactionToastMeta = TransactionToastMessages.confirmed;\n        break;\n      case \"success\":\n        transactionToastMeta = TransactionToastMessages.success;\n        break;\n      case \"error\":\n        transactionToastMeta = TransactionToastMessages.error;\n        break;\n      default:\n        // do nothing\n        break;\n    }\n\n    let transactionAction = '';\n    switch (transaction.method){\n      case 'redeemIdleToken':\n        transactionAction = 'Redeem';\n      break;\n      case 'redeemGovTokens':\n        transactionAction = 'Redeem (Gov Tokens)';\n      break;\n      case 'mintIdleToken':\n      case 'mintIdleTokensProxy':\n        transactionAction = 'Lending';\n      break;\n      case 'migrateFromToIdle':\n      case 'migrateFromCompoundToIdle':\n      case 'migrateFromFulcrumToIdle':\n      case 'migrateFromAaveToIdle':\n      case 'migrateFromIearnToIdle':\n      case 'bridgeIdleV1ToIdleV2':\n        transactionAction = 'Migration';\n      break;\n      case 'executeMetaTransaction':\n        transactionAction = 'Meta-Tx';\n      break;\n      case 'approve':\n        transactionAction = 'Approve';\n      break;\n      case 'rebalance':\n        transactionAction = 'Rebalance';\n      break;\n      default:\n        transactionAction = transaction.method.charAt(0).toUpperCase() + transaction.method.substr(1);\n      break;\n    }\n\n    transactionToastMeta = JSON.parse(JSON.stringify(transactionToastMeta));\n\n    let newMessage = transactionToastMeta.message.replace('{action}',transactionAction);\n    newMessage = newMessage.charAt(0).toUpperCase() + newMessage.slice(1);\n    transactionToastMeta.message = newMessage;\n    transactionToastMeta.closeElem = true;\n    transactionToastMeta.colorTheme = this.props.themeMode;\n\n    return transactionToastMeta;\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    this.processTransactionUpdates(prevProps);\n  }\n\n  render() {\n    return (\n      <div>\n        <ToastMessage.Provider ref={node => (window.toastProvider = node)} />\n      </div>\n    );\n  }\n}\n\nexport default TransactionToastUtil;\n","import Web3 from \"web3\";\nimport jQuery from 'jquery';\nimport theme from \"../theme\";\nimport Tos from \"../Tos/Tos\";\nimport themeDark from \"../theme-dark\";\nimport connectors from './connectors';\nimport Web3Provider from 'web3-react';\nimport { Web3Consumer } from 'web3-react';\nimport CookieConsent from \"react-cookie-consent\";\nimport RimbleWeb3 from \"../utilities/RimbleWeb3\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport React, { Component, Suspense } from \"react\";\nimport GeneralUtil from \"../utilities/GeneralUtil\";\nimport Header from \"../utilities/components/Header\";\nimport globalConfigs from '../configs/globalConfigs';\nimport ScrollToTop from \"../ScrollToTop/ScrollToTop\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport PageNotFound from \"../PageNotFound/PageNotFound\";\nimport Web3Debugger from \"../Web3Debugger/Web3Debugger\";\nimport availableTokens from '../configs/availableTokens';\nimport availableTranches from '../configs/availableTranches';\nimport TransactionToastUtil from \"../utilities/TransactionToastUtil\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { ThemeProvider, Box, Text, Link, Image, Flex } from 'rimble-ui';\n\n// Lazy Loading\nconst Landing = React.lazy(() => import(\"../Landing/Landing\"));\nconst Dashboard = React.lazy(() => import('../Dashboard/Dashboard'));\nconst Governance = React.lazy(() => import('../Governance/Governance'));\n\nclass App extends Component {\n  state = {\n    network:null,\n    cachedData:{},\n    buyToken: null,\n    currentEnv:null,\n    selectedTab: '1',\n    route: \"default\", // or 'onboarding'\n    themeMode:'light',\n    connecting: false,\n    tokenConfig: null,\n    genericError: null,\n    customAddress: null,\n    connectorName: null,\n    selectedToken: null,\n    selectedTheme:theme,\n    currentSection:null,\n    walletProvider: null,\n    availableTokens: null,\n    buyModalOpened: false,\n    selectedStrategy: null,\n    toastMessageProps: null,\n    callbackAfterLogin: null,\n    width: window.innerWidth,\n    availableStrategies: null,\n    height: window.innerHeight,\n    unsubscribeFromHistory: null,\n    enableUnderlyingWithdraw: false,\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  closeToastMessage = (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    this.setState({\n      toastMessageProps:null\n    });\n  }\n\n  showToastMessage = (props) => {\n    this.setState({\n      toastMessageProps:props\n    });\n  }\n\n  processCustomParam = (props,prevProps) => {\n    // const params = props ? props.match.params : null;\n    // const prevParams = prevProps ? prevProps.match.params : null;\n\n    // Reset params\n    /*\n    if ( prevParams && params && prevParams.customParam !== params.customParam && (!params || !params.customParam || params.customParam === undefined)){\n      this.setState({\n        customAddress:null,\n        enableUnderlyingWithdraw:false\n      });\n    } else if (params && typeof params.customParam === 'string') {\n      // Check if custom address\n      if (params.customParam.toLowerCase().match(/0x[\\w]{40}/) && this.state.customAddress !== params.customParam){\n        this.setCustomAddress(params.customParam);\n      } else if (params && params.customParam === 'withdraw' && !this.state.enableUnderlyingWithdraw){\n        this.setState({\n          customAddress:null,\n          enableUnderlyingWithdraw:true\n        });\n      }\n    }\n    */\n  }\n\n  clearCachedData = async (callback=null) => {\n\n    const cachedData = {...this.state.cachedData};\n    Object.keys(cachedData).forEach( key => {\n      const data = cachedData[key];\n      if (data.expirationDate !== null){\n        delete cachedData[key];\n      }\n    });\n\n\n    let storedCachedData = this.functionsUtil.getStoredItem('cachedData');\n    Object.keys(storedCachedData).forEach( key => {\n      const storedData = storedCachedData[key];\n      if (storedData.expirationDate !== null){\n        delete storedCachedData[key];\n      }\n    });\n\n    this.functionsUtil.setLocalStorage('cachedData',storedCachedData,true);\n\n    await this.setState({\n      cachedData\n    },() => {\n      if (typeof callback === 'function'){\n        callback();\n      }\n    });\n    return true;\n  }\n\n  setCachedData = (key,data,TTL=null,useLocalStorage=false) => {\n\n    key = key.toLowerCase();\n    const cachedKeyFound = this.state.cachedData[key];\n    const currentTime = parseInt(Date.now()/1000);\n\n    const update_key = !cachedKeyFound || ( (cachedKeyFound.expirationDate !== null && cachedKeyFound.expirationDate>=currentTime) || JSON.stringify(cachedKeyFound.data) !== JSON.stringify(data));\n\n    let output = false;\n\n    if (update_key){\n      const expirationDate = TTL ? currentTime+(TTL) : null;\n\n      // Save cached data in local storage\n      if (useLocalStorage){\n        let storedCachedData = this.functionsUtil.getStoredItem('cachedData');\n        if (!storedCachedData){\n          storedCachedData = {};\n        }\n\n        // const storedData = typeof data === 'object' ? JSON.stringify(data) : data;\n\n        storedCachedData = {\n          ...storedCachedData,\n          [key]:{\n            data,\n            expirationDate\n          }\n        };\n        // console.log('STORED CACHE - INSERT KEY',key,data);\n        this.functionsUtil.setLocalStorage('cachedData',storedCachedData,true);\n      }\n\n      // Set new cached data state\n      this.setState((prevState) => ({\n        cachedData: {\n          ...prevState.cachedData,\n          [key]:{\n            data,\n            expirationDate\n          }\n        }\n      }),() => {\n        window.cachedData = this.state.cachedData;\n      });\n\n      output = true;\n    }\n\n    return output;\n  }\n\n  setCallbackAfterLogin = (callbackAfterLogin) => {\n    this.setState({\n      callbackAfterLogin\n    });\n  }\n\n  setCustomAddress = (customAddress) => {\n    // Reset customAddress if not well formatted\n    if (customAddress && !customAddress.toLowerCase().match(/0x[\\w]{40}/)){\n      customAddress = null;\n    }\n\n    if (customAddress !== this.state.customAddress){\n      this.setState({\n        customAddress,\n        enableUnderlyingWithdraw:false\n      });\n    }\n  }\n\n  async selectTab(e, tabIndex) {\n    return this.setState(state => ({...state, selectedTab: tabIndex}));\n  }\n\n  async loadAvailableTokens() {\n    const newState = {};\n    const availableStrategies = {};\n    const requiredNetwork = this.state.network && this.state.network.isCorrectNetwork ? (this.state.network.current.id || this.state.network.required.id) : globalConfigs.network.requiredNetwork;\n\n    // console.log('loadAvailableTokens',this.state.network,requiredNetwork,availableTokens);\n\n    // Load available strategies\n    Object.keys(availableTokens[requiredNetwork]).forEach((strategy) => {\n      availableStrategies[strategy] = Object.keys(availableTokens[requiredNetwork][strategy]).reduce( (enabledTokens,token) => {\n        const tokenConfig = availableTokens[requiredNetwork][strategy][token];\n        const envEnabled = !tokenConfig.enabledEnvs || !tokenConfig.enabledEnvs.length || tokenConfig.enabledEnvs.includes(this.state.currentEnv);\n        if (tokenConfig.enabled && envEnabled){\n          enabledTokens[token] = tokenConfig;\n        }\n        return enabledTokens;\n      },{});\n    });\n\n    newState.availableStrategies = availableStrategies;\n\n    // Load strategy\n    const selectedStrategy = this.state.selectedStrategy;\n    if (selectedStrategy && availableStrategies[selectedStrategy]){\n      newState.availableTokens = availableStrategies[selectedStrategy];\n\n      // Load token\n      const selectedToken = this.state.selectedToken;\n      if (selectedToken && newState.availableTokens[selectedToken]){\n        newState.tokenConfig = newState.availableTokens[selectedToken];\n      }\n    }\n\n    // console.log('loadAvailableTokens',newState);\n\n    await this.setState(newState);\n  }\n\n  async setStrategyToken(selectedStrategy,selectedToken){\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    const newState = {\n      tokenConfig:!selectedToken ? null : this.state.tokenConfig,\n      availableTokens:!selectedToken ? null : this.state.availableTokens,\n      selectedToken:!selectedToken ? selectedToken :this.state.selectedToken,\n      selectedStrategy:!selectedStrategy ? selectedStrategy :this.state.selectedStrategy,\n    };\n\n    if (selectedStrategy && this.state.availableStrategies && selectedStrategy !== this.state.selectedStrategy && Object.keys(this.state.availableStrategies).includes(selectedStrategy.toLowerCase())){\n      newState.selectedStrategy = selectedStrategy.toLowerCase();\n    }\n\n    if (selectedToken && selectedToken !== this.state.selectedToken) {\n      if ( this.state.availableTokens && Object.keys(this.state.availableTokens).includes(selectedToken.toUpperCase()) ){\n        newState.selectedToken = selectedToken.toUpperCase();\n        newState.tokenConfig = this.state.availableTokens[selectedToken];\n      } else if (this.state.availableStrategies && Object.keys(this.state.availableStrategies[selectedStrategy]).includes(selectedToken.toUpperCase())) {\n        newState.selectedToken = selectedToken.toUpperCase();\n        newState.tokenConfig = this.state.availableStrategies[selectedStrategy][newState.selectedToken];\n        newState.availableTokens = this.state.availableStrategies[selectedStrategy];\n      }\n    }\n\n    // console.log('setStrategyToken',newState);\n\n    await this.setState(newState,callback);\n  }\n\n  async setStrategy(selectedStrategy) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    if (selectedStrategy && selectedStrategy !== this.state.selectedStrategy && Object.keys(this.state.availableStrategies).includes(selectedStrategy.toLowerCase())){\n      selectedStrategy = selectedStrategy.toLowerCase();\n      await this.setState({\n        selectedStrategy\n      },callback);\n    } else if (!selectedStrategy) {\n      await this.setState({\n        selectedStrategy\n      },callback);\n    }\n  }\n\n  async setToken(selectedToken) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    if (selectedToken && selectedToken !== this.state.selectedToken && Object.keys(this.state.availableTokens).includes(selectedToken.toUpperCase())){\n      selectedToken = selectedToken.toUpperCase();\n      const newState = {\n        selectedToken\n      };\n      newState.tokenConfig = this.state.availableTokens[selectedToken];\n      await this.setState(newState,callback);\n    } else if(!selectedToken) {\n      await this.setState({\n        selectedToken,\n        tokenConfig:null\n      },callback);\n    }\n  }\n\n  async componentWillMount() {\n\n    window.clearCachedData = this.clearCachedData;\n\n    this.loadUtils();\n\n    window.BNify = this.functionsUtil.BNify;\n\n    // Suppress warnings and errors in production\n    const isProduction = window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n    if (isProduction){\n      window.console.error = () => {};\n      window.console.warn = () => {};\n    }\n\n    window.jQuery = jQuery;\n\n    if (window.localStorage){\n      this.functionsUtil.removeStoredItem('context');\n\n      // Clear all localStorage data except walletProvider and connectorName if version has changed\n      const version = this.functionsUtil.getStoredItem('version',false);\n      if (version !== globalConfigs.version){\n        this.functionsUtil.clearStoredData(['walletProvider','connectorName','themeMode']);\n        this.functionsUtil.setLocalStorage('version',globalConfigs.version);\n      }\n    }\n\n    const themeMode = this.functionsUtil.getStoredItem('themeMode',false);\n    if (themeMode){\n      this.setThemeMode(themeMode);\n    }\n\n    window.closeIframe = (w) => {\n      const iFrames = document.getElementsByTagName('iframe');\n      for (let i=0;i<iFrames.length;i++){\n        const iframe = iFrames[i];\n        if (iframe.contentWindow === w){\n          window.jQuery(iframe).parents('.iframe-container')[0].remove();\n        }\n      }\n    }\n\n    window.addEventListener('resize', this.handleWindowSizeChange);\n\n    this.loadCustomAddress();\n    this.loadCurrentEnvironment();\n  }\n\n  loadCurrentEnvironment(){\n    const isLive = this.functionsUtil.checkUrlOrigin();\n    const currentEnv = isLive ? 'live' : 'beta';\n    this.setState({\n      currentEnv\n    },() => {\n      this.loadAvailableTokens();\n    })\n  }\n\n  loadCustomAddress(){\n    if (!this.state.customAddress){\n      const walletProvider = this.functionsUtil.getWalletProvider('Infura');\n      if (walletProvider === 'custom'){\n        const customAddress = this.functionsUtil.getCustomAddress();\n        if (customAddress && customAddress !== this.state.customAddress){\n          this.setState({\n            customAddress\n          });\n        }\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n\n  componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const currentSectionChanged = prevState.currentSection !== this.state.currentSection;\n    if (currentSectionChanged){\n      if (this.state.currentSection === 'landing'){\n        this.setThemeMode('light',false);\n      } else {\n        // Get stored Mode\n        const themeMode = this.functionsUtil.getStoredItem('themeMode',false) || this.functionsUtil.getGlobalConfig(['dashboard','theme','mode']);\n        this.setThemeMode(themeMode);\n      }\n    }\n\n    const tokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const strategyChanged = prevState.selectedStrategy !== this.state.selectedStrategy;\n    const networkChanged = JSON.stringify(prevState.network) !== JSON.stringify(this.state.network);\n\n    if (tokenChanged || strategyChanged || networkChanged){\n      this.loadAvailableTokens();\n    }\n  }\n\n  componentDidMount() {\n\n    // Close iFrame\n    // if (window.self !== window.top && window.top.location.href.indexOf(globalConfigs.baseURL) !== -1 && typeof window.parent.closeIframe === 'function' ){\n    //   window.parent.closeIframe(window.self);\n    // }\n\n    window.showToastMessage = this.showToastMessage;\n    window.closeToastMessage = this.closeToastMessage;\n\n    if (localStorage){\n      let connectorName = localStorage.getItem('connectorName') ? localStorage.getItem('connectorName') : 'Infura';\n      let walletProvider = localStorage.getItem('walletProvider') ? localStorage.getItem('walletProvider') : 'Infura';\n\n      // Check Ledger Live\n      const isLedgerLive = window.location.href.includes(\"ledger-live=1\");\n      if (isLedgerLive){\n        connectorName = 'ledgerLive';\n        walletProvider = 'ledger';\n      }\n      // console.log('isLedgerLive',isLedgerLive,connectorName,walletProvider);\n\n      this.setConnector(connectorName,walletProvider);\n    }\n  }\n\n  handleWindowSizeChange = () => {\n    const newState = {\n      width:this.state.width,\n      height:this.state.height,\n    };\n\n    const widthChanged = window.innerWidth !== this.state.width;\n    const heightChanged = window.innerHeight !== this.state.height;\n\n    if (widthChanged || heightChanged){\n      if (widthChanged){\n        newState.width = window.innerWidth;\n      }\n      if (heightChanged){\n        newState.height = window.innerHeight;\n      }\n      return this.setState(newState);\n    }\n\n    return null;\n  };\n\n  // Optional parameters to pass into RimbleWeb3\n  config = globalConfigs.network;\n\n  showRoute(route) {\n    return this.setState({ route });\n  }\n\n  closeBuyModal(e) {\n    if (e){\n      e.preventDefault();\n    }\n    return this.setState({\n      buyToken:null,\n      buyModalOpened:false\n    });\n  }\n\n  openBuyModal(e,buyToken) {\n    e.preventDefault();\n\n    return this.setState({\n      buyToken,\n      buyModalOpened:true\n    });\n  }\n\n  async logout(){\n    // Reset Custom Address\n    this.setState({\n      customAddress:null\n    });\n    // Clear cached data\n    this.clearCachedData(()=>{\n      // Reset Localstorage\n      this.functionsUtil.clearStoredData(['version','themeMode','lastLogin','cachedData']);\n    });\n  }\n\n  setNetwork(network){\n    this.setState({\n      network\n    });\n  }\n\n  setConnector(connectorName,walletProvider){\n\n    let connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n    if (!connectorInfo && walletProvider){\n      connectorInfo = globalConfigs.connectors[walletProvider.toLowerCase()];\n    }\n\n    // console.log('setConnector - BEFORE',connectorInfo,connectorName,walletProvider);\n\n    if ( (connectorInfo && !connectorInfo.enabled) || (connectorName !== 'Injected' && !Object.keys(globalConfigs.connectors).includes(connectorName.toLowerCase())) || (walletProvider && !Object.keys(globalConfigs.connectors).includes(walletProvider.toLowerCase()))) {\n      connectorName = 'Infura';\n      walletProvider = 'Infura';\n    } else if ( connectorName === 'Injected' ){\n      const hasMetamask = GeneralUtil.hasMetaMask();\n      const hasDapper = GeneralUtil.hasDapper()\n\n      // Check if injected connector is valid\n      switch (walletProvider){\n        case 'Metamask':\n          if (!hasMetamask && hasDapper){\n            walletProvider = 'Dapper';\n          }\n        break;\n        case 'Dapper':\n          if (!hasDapper && hasMetamask){\n            walletProvider = 'Metamask';\n          }\n        break;\n        default:\n        break;\n      }\n    }\n\n    // console.log('setConnector - AFTER',connectorName,walletProvider);\n\n    this.functionsUtil.setLocalStorage('connectorName', connectorName);\n    this.functionsUtil.setLocalStorage('walletProvider', walletProvider);\n\n    return this.setState({\n      connectorName,\n      walletProvider\n    },() => {\n      this.loadCustomAddress();\n    });\n  }\n\n  setThemeMode(themeMode,store=true){\n    let selectedTheme = null;\n\n    // Check Dark Mode Enabled\n    const darkModeEnabled = this.functionsUtil.getGlobalConfig(['dashboard','theme','darkModeEnabled']);\n    if (themeMode === 'dark' && !darkModeEnabled){\n      themeMode = 'light';\n    }\n\n    switch (themeMode){\n      default:\n      case 'light':\n        selectedTheme = theme;\n      break;\n      case 'dark':\n        selectedTheme = themeDark;\n      break;\n    }\n\n    if (store){\n      this.functionsUtil.setLocalStorage('themeMode',themeMode);\n    }\n\n    this.setState({\n      themeMode,\n      selectedTheme\n    });\n  }\n\n  setCurrentSection(currentSection){\n    this.setState({\n      currentSection\n    });\n  }\n\n  render() {\n    const isMobile = this.state.width <= 768;\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n\n    // console.log(this.state.selectedToken,this.state.tokenConfig);\n\n    const SuspenseLoader = (\n      <Flex\n        width={1}\n        minHeight={'100vh'}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        backgroundColor={'selectBg'}\n      >\n        <FlexLoader\n          textProps={{\n            textSize:4,\n            fontWeight:2\n          }}\n          loaderProps={{\n            mb:3,\n            size:'80px',\n            color:'primary'\n          }}\n          flexProps={{\n            my:3,\n            flexDirection:'column'\n          }}\n          text={''}\n        />\n      </Flex>\n    );\n\n    return (\n      <Router>\n        <ScrollToTop />\n        <ThemeProvider\n          theme={this.state.selectedTheme}\n        >\n          <Web3Provider\n            web3Api={Web3}\n            connectors={connectors}\n            libraryName={'web3.js'}\n          >\n            <Web3Consumer>\n              {context => {\n                return (\n                  <RimbleWeb3\n                    context={context}\n                    isMobile={isMobile}\n                    config={this.config}\n                    connectors={connectors}\n                    theme={this.state.selectedTheme}\n                    cachedData={this.state.cachedData}\n                    availableTranches={availableTranches}\n                    tokenConfig={this.state.tokenConfig}\n                    setNetwork={this.setNetwork.bind(this)}\n                    customAddress={this.state.customAddress}\n                    selectedToken={this.state.selectedToken}\n                    connectorName={this.state.connectorName}\n                    walletProvider={this.state.walletProvider}\n                    setConnector={this.setConnector.bind(this)}\n                    availableTokens={this.state.availableTokens}\n                    setCachedData={this.setCachedData.bind(this)}\n                    clearCachedData={this.clearCachedData.bind(this)}\n                    callbackAfterLogin={this.state.callbackAfterLogin}\n                    availableStrategies={this.state.availableStrategies}\n                    setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                    enableUnderlyingWithdraw={this.state.enableUnderlyingWithdraw}\n                  >\n                    <RimbleWeb3.Consumer>\n                      {({\n                        web3,\n                        modals,\n                        network,\n                        account,\n                        initWeb3,\n                        simpleID,\n                        biconomy,\n                        contracts,\n                        transaction,\n                        initAccount,\n                        initContract,\n                        transactions,\n                        initSimpleID,\n                        permitClient,\n                        tokenDecimals,\n                        accountBalance,\n                        needsPreflight,\n                        validateAccount,\n                        rejectValidation,\n                        accountValidated,\n                        getTokenDecimals,\n                        getAccountBalance,\n                        accountBalanceLow,\n                        accountInizialized,\n                        accountBalanceToken,\n                        userRejectedConnect,\n                        initializeContracts,\n                        erc20ForwarderClient,\n                        rejectAccountConnect,\n                        contractsInitialized,\n                        userRejectedValidation,\n                        accountValidationPending,\n                        connectAndValidateAccount,\n                        contractMethodSendWrapper\n                      }) => {\n                        return (\n                        <Box>\n                          <Switch>\n                            <Route\n                              path=\"/dashboard/:section?/:param1?/:param2?/:param3?\"\n                              render={\n                                (props) => \n                                  <Suspense\n                                    fallback={SuspenseLoader}\n                                  >\n                                    <Dashboard\n                                      {...props}\n                                      web3={web3}\n                                      modals={modals}\n                                      network={network}\n                                      context={context}\n                                      account={account}\n                                      isDashboard={true}\n                                      initWeb3={initWeb3}\n                                      biconomy={biconomy}\n                                      isMobile={isMobile}\n                                      simpleID={simpleID}\n                                      contracts={contracts}\n                                      initAccount={initAccount}\n                                      permitClient={permitClient}\n                                      initSimpleID={initSimpleID}\n                                      initContract={initContract}\n                                      transactions={transactions}\n                                      buyToken={this.state.buyToken}\n                                      logout={this.logout.bind(this)}\n                                      accountBalance={accountBalance}\n                                      themeMode={this.state.themeMode}\n                                      theme={this.state.selectedTheme}\n                                      validateAccount={validateAccount}\n                                      connecting={this.state.connecting}\n                                      cachedData={this.state.cachedData}\n                                      setToken={this.setToken.bind(this)}\n                                      accountValidated={accountValidated}\n                                      getTokenDecimals={getTokenDecimals}\n                                      rejectValidation={rejectValidation}\n                                      tokenConfig={this.state.tokenConfig}\n                                      availableTranches={availableTranches}\n                                      getAccountBalance={getAccountBalance}\n                                      accountBalanceLow={accountBalanceLow}\n                                      accountInizialized={accountInizialized}\n                                      selectedToken={this.state.selectedToken}\n                                      connectorName={this.state.connectorName}\n                                      setStrategy={this.setStrategy.bind(this)}\n                                      userRejectedConnect={userRejectedConnect}\n                                      accountBalanceToken={accountBalanceToken}\n                                      initializeContracts={initializeContracts}\n                                      walletProvider={this.state.walletProvider}\n                                      buyModalOpened={this.state.buyModalOpened}\n                                      erc20ForwarderClient={erc20ForwarderClient}\n                                      contractsInitialized={contractsInitialized}\n                                      openBuyModal={this.openBuyModal.bind(this)}\n                                      rejectAccountConnect={rejectAccountConnect}\n                                      handleMenuClick={this.selectTab.bind(this)}\n                                      setConnector={this.setConnector.bind(this)}\n                                      setThemeMode={this.setThemeMode.bind(this)}\n                                      availableTokens={this.state.availableTokens}\n                                      closeBuyModal={this.closeBuyModal.bind(this)}\n                                      setCachedData={this.setCachedData.bind(this)}\n                                      selectedStrategy={this.state.selectedStrategy}\n                                      userRejectedValidation={userRejectedValidation}\n                                      clearCachedData={this.clearCachedData.bind(this)}\n                                      setStrategyToken={this.setStrategyToken.bind(this)}\n                                      accountValidationPending={accountValidationPending}\n                                      availableStrategies={this.state.availableStrategies}\n                                      setCurrentSection={this.setCurrentSection.bind(this)}\n                                      connectAndValidateAccount={connectAndValidateAccount}\n                                      contractMethodSendWrapper={contractMethodSendWrapper}\n                                      setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                                    />\n                                  </Suspense>\n\n                              }\n                            >\n                            </Route>\n                            {\n                              governanceEnabled && \n                                <Route\n                                  path=\"/governance/:section?/:item_id?\"\n                                  render={\n                                    (props) =>\n                                      <Suspense\n                                        fallback={SuspenseLoader}\n                                      >\n                                        <Governance\n                                          {...props}\n                                          web3={web3}\n                                          modals={modals}\n                                          network={network}\n                                          context={context}\n                                          account={account}\n                                          initWeb3={initWeb3}\n                                          biconomy={biconomy}\n                                          isMobile={isMobile}\n                                          simpleID={simpleID}\n                                          isGovernance={true}\n                                          contracts={contracts}\n                                          initAccount={initAccount}\n                                          initSimpleID={initSimpleID}\n                                          initContract={initContract}\n                                          transactions={transactions}\n                                          buyToken={this.state.buyToken}\n                                          logout={this.logout.bind(this)}\n                                          accountBalance={accountBalance}\n                                          themeMode={this.state.themeMode}\n                                          theme={this.state.selectedTheme}\n                                          validateAccount={validateAccount}\n                                          connecting={this.state.connecting}\n                                          cachedData={this.state.cachedData}\n                                          setToken={this.setToken.bind(this)}\n                                          accountValidated={accountValidated}\n                                          getTokenDecimals={getTokenDecimals}\n                                          rejectValidation={rejectValidation}\n                                          tokenConfig={this.state.tokenConfig}\n                                          getAccountBalance={getAccountBalance}\n                                          accountBalanceLow={accountBalanceLow}\n                                          accountInizialized={accountInizialized}\n                                          selectedToken={this.state.selectedToken}\n                                          connectorName={this.state.connectorName}\n                                          setStrategy={this.setStrategy.bind(this)}\n                                          userRejectedConnect={userRejectedConnect}\n                                          accountBalanceToken={accountBalanceToken}\n                                          initializeContracts={initializeContracts}\n                                          walletProvider={this.state.walletProvider}\n                                          buyModalOpened={this.state.buyModalOpened}\n                                          contractsInitialized={contractsInitialized}\n                                          openBuyModal={this.openBuyModal.bind(this)}\n                                          rejectAccountConnect={rejectAccountConnect}\n                                          handleMenuClick={this.selectTab.bind(this)}\n                                          setConnector={this.setConnector.bind(this)}\n                                          setThemeMode={this.setThemeMode.bind(this)}\n                                          availableTokens={this.state.availableTokens}\n                                          closeBuyModal={this.closeBuyModal.bind(this)}\n                                          setCachedData={this.setCachedData.bind(this)}\n                                          selectedStrategy={this.state.selectedStrategy}\n                                          userRejectedValidation={userRejectedValidation}\n                                          clearCachedData={this.clearCachedData.bind(this)}\n                                          setStrategyToken={this.setStrategyToken.bind(this)}\n                                          accountValidationPending={accountValidationPending}\n                                          availableStrategies={this.state.availableStrategies}\n                                          setCurrentSection={this.setCurrentSection.bind(this)}\n                                          connectAndValidateAccount={connectAndValidateAccount}\n                                          contractMethodSendWrapper={contractMethodSendWrapper}\n                                          setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                                        />\n                                      </Suspense>\n                                  }\n                                >\n                                </Route>\n                            }\n                            <Route>\n                              <Header\n                                modals={modals}\n                                network={network}\n                                context={context}\n                                account={account}\n                                initWeb3={initWeb3}\n                                isMobile={isMobile}\n                                contracts={contracts}\n                                initAccount={initAccount}\n                                initContract={initContract}\n                                buyToken={this.state.buyToken}\n                                accountBalance={accountBalance}\n                                logout={this.logout.bind(this)}\n                                validateAccount={validateAccount}\n                                connecting={this.state.connecting}\n                                accountValidated={accountValidated}\n                                getTokenDecimals={getTokenDecimals}\n                                rejectValidation={rejectValidation}\n                                tokenConfig={this.state.tokenConfig}\n                                getAccountBalance={getAccountBalance}\n                                accountBalanceLow={accountBalanceLow}\n                                selectedToken={this.state.selectedToken}\n                                connectorName={this.state.connectorName}\n                                userRejectedConnect={userRejectedConnect}\n                                accountBalanceToken={accountBalanceToken}\n                                walletProvider={this.state.walletProvider}\n                                buyModalOpened={this.state.buyModalOpened}\n                                contractsInitialized={contractsInitialized}\n                                openBuyModal={this.openBuyModal.bind(this)}\n                                rejectAccountConnect={rejectAccountConnect}\n                                handleMenuClick={this.selectTab.bind(this)}\n                                setConnector={this.setConnector.bind(this)}\n                                availableTokens={this.state.availableTokens}\n                                closeBuyModal={this.closeBuyModal.bind(this)}\n                                userRejectedValidation={userRejectedValidation}\n                                accountValidationPending={accountValidationPending}\n                                connectAndValidateAccount={connectAndValidateAccount}\n                                setToken={ e => { this.setToken(e) } }\n                              />\n\n                              {this.state.route === \"onboarding\" ? (\n                                <Web3Debugger\n                                  web3={web3}\n                                  account={account}\n                                  accountBalance={accountBalance}\n                                  accountBalanceToken={accountBalanceToken}\n                                  accountBalanceLow={accountBalanceLow}\n                                  initAccount={initAccount}\n                                  rejectAccountConnect={rejectAccountConnect}\n                                  userRejectedConnect={userRejectedConnect}\n                                  accountValidated={accountValidated}\n                                  accountValidationPending={accountValidationPending}\n                                  rejectValidation={rejectValidation}\n                                  userRejectedValidation={userRejectedValidation}\n                                  validateAccount={validateAccount}\n                                  connectAndValidateAccount={connectAndValidateAccount}\n                                  modals={modals}\n                                  network={network}\n                                  transaction={transaction}\n                                />\n                              ) : null}\n\n                              {this.state.route === \"default\" ? (\n                                <Switch>\n                                  <Route exact path=\"/\"\n                                    render={ (props) =>\n                                      <Suspense\n                                        fallback={SuspenseLoader}\n                                      >\n                                        <Landing\n                                          {...props}\n                                          web3={web3}\n                                          network={network}\n                                          account={account}\n                                          isMobile={isMobile}\n                                          simpleID={simpleID}\n                                          contracts={contracts}\n                                          initContract={initContract}\n                                          innerWidth={this.state.width}\n                                          logout={this.logout.bind(this)}\n                                          innerHeight={this.state.height}\n                                          accountBalance={accountBalance}\n                                          themeMode={this.state.themeMode}\n                                          theme={this.state.selectedTheme}\n                                          cachedData={this.state.cachedData}\n                                          connecting={this.state.connecting}\n                                          selectedTab={this.state.selectedTab}\n                                          tokenConfig={this.state.tokenConfig}\n                                          accountBalanceLow={accountBalanceLow}\n                                          getAccountBalance={getAccountBalance}\n                                          availableTranches={availableTranches}\n                                          customAddress={this.state.customAddress}\n                                          selectedToken={this.state.selectedToken}\n                                          accountBalanceToken={accountBalanceToken}\n                                          closeToastMessage={this.closeToastMessage}\n                                          contractsInitialized={contractsInitialized}\n                                          openBuyModal={this.openBuyModal.bind(this)}\n                                          setThemeMode={this.setThemeMode.bind(this)}\n                                          processCustomParam={this.processCustomParam}\n                                          availableTokens={this.state.availableTokens}\n                                          setCachedData={this.setCachedData.bind(this)}\n                                          updateSelectedTab={this.selectTab.bind(this)}\n                                          toastMessageProps={this.state.toastMessageProps}\n                                          clearCachedData={this.clearCachedData.bind(this)}\n                                          availableStrategies={this.state.availableStrategies}\n                                          setCurrentSection={this.setCurrentSection.bind(this)}\n                                          connectAndValidateAccount={connectAndValidateAccount}\n                                          setToken={ e => { this.setToken(e) } }\n                                        />\n                                        <CookieConsent\n                                          expires={365}\n                                          buttonText={\"Ok\"}\n                                          location={\"bottom\"}\n                                          acceptOnScroll={true}\n                                          cookieName={\"cookieAccepted\"}\n                                          acceptOnScrollPercentage={5}\n                                          style={{background: \"rgba(255,255,255,0.95)\",zIndex:'9999999'}}\n                                          buttonStyle={{display: isMobile ? \"block\" : \"none\", backgroundColor:'#0036ff', color: 'white', marginTop: isMobile ? \"0px\" : \"15px\"}}\n                                        >\n                                          <Flex flexDirection={'row'} alignItems={['flex-start','center']} justifyContent={'flex-start'} maxHeight={['150px','initial']} style={ isMobile ? {overflowY:'scroll'} : null }>\n                                            <Image display={['none','block']} src={'images/cookie.svg'} width={'42px'} height={'42px'} />\n                                            <Text pl={[0,3]} color={'dark-gray'} fontSize={1} textAlign={'justify'}>\n                                              This website or its third-party tools process personal data (e.g. browsing data or IP addresses) and use cookies or other identifiers, which are necessary for its functioning and required to achieve the purposes illustrated in the cookie policy. To learn more, please refer to the <Link href={'https://www.iubenda.com/privacy-policy/61211749/cookie-policy'} target={'_blank'} rel=\"nofollow noopener noreferrer\" hoverColor={'blue'}>cookie policy</Link>.\n                                              You accept the use of cookies or other identifiers by closing or dismissing this notice, by scrolling this page, by clicking a link or button or by continuing to browse otherwise.\n                                            </Text>\n                                          </Flex>\n                                        </CookieConsent>\n                                      </Suspense>\n                                    }\n                                  ></Route>\n                                  <Route exact path=\"/terms-of-service\">\n                                    <Tos />\n                                  </Route>\n                                  <Route>\n                                    <PageNotFound />\n                                  </Route>\n                                </Switch>\n                              ) : null}\n                            </Route>\n                          </Switch>\n                          <TransactionToastUtil\n                            transactions={transactions}\n                            themeMode={this.state.themeMode}\n                          />\n                        </Box>\n                      )}}\n                    </RimbleWeb3.Consumer>\n                  </RimbleWeb3>\n                );\n              }}\n            </Web3Consumer>\n          </Web3Provider>\n        </ThemeProvider>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport * as Sentry from '@sentry/browser';\nimport App from './App/App';\nimport * as serviceWorker from './serviceWorker';\n\nif (window.location.hostname !== 'localhost') {\n  Sentry.init({\n    dsn: \"https://56f5c0bce273442390d7f25698fefe53@sentry.io/1547544\",\n    beforeSend(event, hint) {\n      let output = event;\n      const error = hint.originalException;\n      if (error && error.message){\n        if (error.message.match(/Failed to subscribe to new newBlockHeaders/i)){\n          output = false;\n        }\n      }\n      return output;\n    }\n  });\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass TableRow extends Component {\n  render() {\n    const FieldComponent = this.props.fieldComponent;\n    const isInteractive = typeof this.props.handleClick === 'function';\n    return (\n      <DashboardCard\n        cardProps={{\n          mb:2,\n          width:1,\n          px:[2,4],\n          py:[2,'12px']\n        }}\n        id={this.props.cardId}\n        {...this.props.rowProps}\n        className={this.props.token}\n        isInteractive={isInteractive}\n        handleClick={ isInteractive ? e => this.props.handleClick(this.props) : null }\n      >\n        <Flex\n          flexDirection={'row'}\n          id={this.props.rowId}\n        >\n          {\n            this.props.cols.map((colInfo,colIndex) => {\n              const visibleOnDesktop = colInfo.visibleOnDesktop || false;\n              if (colInfo.visible === false || (colInfo.mobile === false && this.props.isMobile) || (colInfo.mobile === true && !visibleOnDesktop && !this.props.isMobile)){\n                return null;\n              }\n              return (\n                <Flex\n                  key={`col-${colIndex}`}\n                  {...colInfo.props}\n                >\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    {...colInfo.parentProps}\n                  >\n                    {\n                      colInfo.fields.map((fieldInfo,fieldIndex) => {\n                        if (fieldInfo.visible === false || (fieldInfo.mobile === false && this.props.isMobile)){\n                          return null;\n                        }\n                        const CustomComponent = fieldInfo.fieldComponent;\n                        return (\n                          <Flex\n                            height={'100%'}\n                            flexDirection={'column'}\n                            alignItems={'flex-start'}\n                            justifyContent={'center'}\n                            {...fieldInfo.parentProps}\n                            style={fieldInfo.style || {\n                              overflow:'hidden'\n                            }}\n                            width={colInfo.fields.length>1 ? 'auto' : 1}\n                            id={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                            key={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                          >\n                            {\n                              CustomComponent ? (\n                                <CustomComponent\n                                  {...this.props}\n                                  {...fieldInfo.props}\n                                />\n                              ) : (\n                                <FieldComponent\n                                  {...this.props}\n                                  fieldInfo={fieldInfo}\n                                  colProps={colInfo.props}\n                                  parentId={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                                />\n                              )\n                            }\n                          </Flex>\n                        );\n                      })\n                    }\n                  </Flex>\n                </Flex>\n              )\n            })\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default TableRow;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableCellHeader from '../TableCellHeader/TableCellHeader';\n\nclass TableHeader extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        px={[2,4]}\n        pb={[2,3]}\n        flexDirection={'row'}\n      >\n        {\n          this.props.cols.map((colInfo,colIndex) => {\n            // Skip non-mobile columns\n            const visibleOnDesktop = colInfo.visibleOnDesktop || false;\n            if (colInfo.visible === false || (colInfo.mobile === false && this.props.isMobile) || (colInfo.mobile === true && !visibleOnDesktop && !this.props.isMobile)){\n              return null;\n            }\n\n            return (colInfo.title && colInfo.title.length) ? (\n              <TableCellHeader\n                {...this.props}\n                {...colInfo.props}\n                desc={colInfo.desc}\n                title={colInfo.title}\n                key={`col-header-${colIndex}`}\n              >\n                {colInfo.title}\n              </TableCellHeader>\n            ) : (\n              <Flex key={`col-header-${colIndex}`} {...colInfo.props}></Flex>\n            )\n          })\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TableHeader;\n","import React, { Component } from 'react';\nimport styles from './Migrate.module.scss';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport TransactionField from '../TransactionField/TransactionField';\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\nimport { Box, Flex, Text, Icon, Checkbox, Input, Link, Image } from \"rimble-ui\";\n\nclass Migrate extends Component {\n\n  state = {\n    nonce:0,\n    loading:true,\n    action:'migrate',\n    processing:{\n      approve:{\n        txHash:null,\n        loading:false\n      },\n      migrate:{\n        txHash:null,\n        loading:false\n      },\n      redeem:{\n        txHash:null,\n        loading:false\n      }\n    },\n    inputValue:{},\n    usePermit:false,\n    oldTokenName:null,\n    oldIdleTokens:null,\n    skipMigration:false,\n    buttonDisabled:true,\n    migrationEnabled:null,\n    fastBalanceSelector:{},\n    oldContractBalance:null,\n    biconomyLimitReached:false,\n    metaTransactionsEnabled:true,\n    oldContractTokenDecimals:null,\n    migrationContractApproved:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  setAction = (action) => {\n    if (action !== null){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  toggleSkipMigration = (skipMigration) => {\n    this.setState({\n      skipMigration\n    });\n\n    if (typeof this.props.toggleSkipMigration === 'function'){\n      this.props.toggleSkipMigration(skipMigration);\n    }\n  }\n\n  changeInputValue = (e) => {\n    if (!this.state.action){\n      return false;\n    }\n    const amount = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: null\n      },\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  checkButtonDisabled = (amount=null) => {\n    if (!this.state.action){\n      return false;\n    }\n    if (!amount){\n      amount = this.state.inputValue[this.state.action];\n    }\n    let buttonDisabled = true;\n    if (amount){\n      buttonDisabled = amount.lte(0);\n      switch (this.state.action){\n        case 'migrate':\n        case 'redeem':\n          buttonDisabled = buttonDisabled || amount.gt(this.state.oldIdleTokens);\n        break;\n        default:\n        break;\n      }\n    }\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  setInputValue = () => {\n    if (!this.state.action || this.state.fastBalanceSelector[this.state.action] === null){\n      return false;\n    }\n\n    let amount = null;\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector[this.state.action]).div(100);\n\n    switch(this.state.action){\n      case 'migrate':\n      case 'redeem':\n        amount = this.state.oldIdleTokens ? this.functionsUtil.BNify(this.state.oldIdleTokens).times(selectedPercentage) : null;\n      break;\n      default:\n      break;\n    }\n\n    this.setState((prevState) => ({\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  setFastBalanceSelector = (percentage) => {\n    if (!this.state.action){\n      return false;\n    }\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: percentage\n      }\n    }));\n  }\n\n  executeAction = async () => {\n\n    const inputValue = this.state.inputValue[this.state.action];\n\n    if (this.state.buttonDisabled || !inputValue || this.functionsUtil.BNify(inputValue).lte(0)){\n      return false;\n    }\n\n    const loading = true;\n\n    switch (this.state.action){\n      case 'redeem':\n\n        if (!this.props.tokenConfig.migration || !this.props.tokenConfig.migration.oldContract){\n          return false;\n        }\n\n        const oldContractName = this.props.tokenConfig.migration.oldContract.name;\n\n        const idleTokenToRedeem = this.functionsUtil.normalizeTokenAmount(inputValue,18);\n\n        // Get amounts for best allocations\n        const _skipRebalance = true;\n        let paramsForRedeem = null;\n\n        /*\n        if (this.props.account){\n          const callParams = { from: this.props.account, gas: this.props.web3.utils.toBN(5000000) };\n          paramsForRedeem = await this.functionsUtil.genericContractCall(oldContractName,'getParamsForRedeemIdleToken',[idleTokenToRedeem, _skipRebalance],callParams);\n        }\n        */\n\n        const _clientProtocolAmountsRedeem = paramsForRedeem && paramsForRedeem.length ? paramsForRedeem[1] : [];\n        const gasLimitRedeem = _clientProtocolAmountsRedeem.length && _clientProtocolAmountsRedeem.indexOf('0') === -1 ? this.functionsUtil.BNify(1500000) : this.functionsUtil.BNify(1000000);\n\n        const callbackRedeem = (tx,error) => {\n          const txSucceeded = tx.status === 'success';\n\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: `Redeem_old`,\n            eventAction: this.props.selectedToken,\n            eventLabel: tx.status,\n            eventValue: parseInt(inputValue)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (txSucceeded){\n            this.setState((prevState) => ({\n              inputValue:{\n                ...prevState.inputValue,\n                [this.state.action]: this.functionsUtil.BNify(0)\n              }\n            }));\n          }\n        };\n\n        const callbackReceiptRedeem = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                ...prevState.processing[this.state.action],\n                txHash\n              }\n            }\n          }));\n        };\n\n        this.props.contractMethodSendWrapper(oldContractName, 'redeemIdleToken', [\n          idleTokenToRedeem, _skipRebalance, _clientProtocolAmountsRedeem\n        ], null, callbackRedeem, callbackReceiptRedeem, gasLimitRedeem);\n      break;\n      default:\n      break;\n    }\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        [this.state.action]:{\n          ...prevState.processing[this.state.action],\n          loading\n        }\n      }\n    }));\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n    this.checkMigration();\n  }\n\n  componentDidMount(){\n    \n  }\n\n  componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const biconomyChanged = prevProps.biconomy !== this.props.biconomy;\n    const usePermitChanged = prevProps.usePermit !== this.props.usePermit;\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken || (!prevProps.tokenConfig && this.props.tokenConfig);\n\n    if (tokenChanged || accountChanged || biconomyChanged || usePermitChanged){\n      this.checkMigration();\n    }\n\n    const actionChanged = this.state.action !== prevState.action;\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector[this.state.action] !== prevState.fastBalanceSelector[this.state.action];\n    if (actionChanged || fastBalanceSelectorChanged){\n      this.setInputValue();\n    }\n\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue;\n    if (inputValueChanged){\n      this.checkButtonDisabled();\n    }\n\n    const contractApprovedChanged = prevState.migrationContractApproved !== this.state.migrationContractApproved;\n    if (contractApprovedChanged){\n      // console.log(this.props.selectedToken,'contractApprovedChanged',this.state.migrationContractApproved);\n      if (typeof this.props.callbackApprove === 'function'){\n        this.props.callbackApprove(this.state.migrationContractApproved);\n      }\n    }\n  }\n\n  toggleMetaTransactionsEnabled = (metaTransactionsEnabled) => {\n    this.setState({\n      metaTransactionsEnabled\n    });\n  }\n\n  checkMigrationContractApproved = async () => {\n    if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.migrationContract){\n      const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n      const migrationContractName = migrationContractInfo.name;\n      const migrationContract = this.functionsUtil.getContractByName(migrationContractName);\n      if (migrationContract){\n        const oldContractName = this.props.tokenConfig.migration.oldContract.name;\n        const tokenApproved = await this.functionsUtil.checkTokenApproved(oldContractName,migrationContractInfo.address,this.props.account);\n        return tokenApproved;\n      }\n    }\n    return false;\n  }\n\n  checkMigration = async () => {\n\n    if (!this.props.tokenConfig || !this.props.account){\n      return false;\n    }\n\n    let loading = true;\n    this.setState({\n      loading,\n      processing:{\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        migrate:{\n          txHash:null,\n          loading:false\n        },\n        redeem:{\n          txHash:null,\n          loading:false\n        }\n      },\n    });\n\n    let migrationEnabled = false;\n    let oldTokenName = 'idleTokens';\n    let oldIdleTokensConverted = null;\n    let oldContractTokenDecimals = null;\n    let migrationContractApproved = false;\n    let oldTokenPrice = this.functionsUtil.BNify(0);\n    let oldIdleTokens = this.functionsUtil.BNify(0);\n    let oldContractBalance = this.functionsUtil.BNify(0);\n    const getTokenPrice = this.props.getTokenPrice !== undefined ? this.props.getTokenPrice : true;\n\n    // Check migration contract enabled and balance\n    if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.enabled){\n      const oldContractInfo = this.props.tokenConfig.migration.oldContract;\n      const oldContractABI = oldContractInfo.abi;\n      const oldContractName = oldContractInfo.name;\n      let oldContract = this.functionsUtil.getContractByName(oldContractName);\n\n      // Initialize contract\n      if (!oldContract && oldContractABI){\n        oldContract = await this.props.initContract(oldContractName,oldContractInfo.address,oldContractABI);\n      }\n\n      let migrationContract = this.functionsUtil.getContractByName(this.props.tokenConfig.migration.migrationContract.name);\n\n      if (!migrationContract && this.props.tokenConfig.migration.migrationContract.abi){\n        migrationContract = await this.props.initContract(this.props.tokenConfig.migration.migrationContract.name,this.props.tokenConfig.migration.migrationContract.address,this.props.tokenConfig.migration.migrationContract.abi);\n      }\n\n      if (oldContract && migrationContract){\n\n        oldTokenName = this.props.tokenConfig.migration.oldContract.token;\n\n        [\n          oldContractTokenDecimals,\n          migrationContractApproved,\n          oldContractBalance,\n          oldTokenPrice,\n        ] = await Promise.all([\n          // Get old contract token decimals\n          this.functionsUtil.getTokenDecimals(oldContractName),\n          // Check migration contract approval\n          this.checkMigrationContractApproved(),\n          // Check old contractBalance\n          this.functionsUtil.getContractBalance(oldContractName,this.props.account),\n          // Get token price\n          (getTokenPrice ? this.functionsUtil.genericContractCall(oldContractName,'tokenPrice') : null)\n        ]);\n\n        // console.log('Migration',oldContractName,migrationContractApproved,this.props.selectedToken,oldContractBalance ? oldContractBalance.toString() : null,oldTokenPrice ? oldTokenPrice.toString() : null);\n\n        if (oldContractBalance){\n          // Convert old idleTokens\n          oldIdleTokens = this.functionsUtil.fixTokenDecimals(oldContractBalance,oldContractTokenDecimals);\n          if (oldTokenPrice){\n            oldTokenPrice = this.functionsUtil.fixTokenDecimals(oldTokenPrice,this.props.tokenConfig.decimals);\n            oldIdleTokensConverted = this.functionsUtil.BNify(oldIdleTokens).times(this.functionsUtil.BNify(oldTokenPrice));\n          }\n          // Enable migration if old contract balance if greater than 0\n          migrationEnabled = this.functionsUtil.BNify(oldContractBalance).gt(0);\n        }\n      }\n    }\n    \n    loading = false;\n\n    // If use Permit don't ask for Approve\n    const usePermit = this.props.usePermit;\n\n    const newState = {\n      loading,\n      usePermit,\n      oldTokenName,\n      oldIdleTokens,\n      migrationEnabled,\n      oldContractBalance,\n      oldIdleTokensConverted,\n      oldContractTokenDecimals,\n      migrationContractApproved\n    };\n\n    if (this.props.biconomy){\n      const biconomyLimits = await this.functionsUtil.checkBiconomyLimits(this.props.account);\n      if (biconomyLimits && !biconomyLimits.allowed){\n        newState.biconomyLimitReached = true;\n      }\n    }\n\n    if (typeof this.props.migrationEnabledCallback === 'function'){\n      this.props.migrationEnabledCallback(migrationEnabled);\n    }\n\n    // console.log('checkMigration',this.props.selectedToken,'usePermit',this.props.usePermit,'migrationContractApproved',newState.migrationContractApproved);\n\n    // Set migration contract balance\n    return this.setState(newState);\n  }\n\n  disapproveMigration = async (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n      this.disableERC20(null,this.props.tokenConfig.migration.oldContract.name,migrationContractInfo.address);\n    }\n  }\n\n  cancelTransaction = async () => {\n    this.setState({\n      processing: {\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        migrate:{\n          txHash:null,\n          loading:false\n        },\n        redeem:{\n          txHash:null,\n          loading:false\n        }\n      },\n    });\n  }\n\n  approveMigration = async (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n\n      // Check if the migration contract is approved\n      const migrationContractApproved = await this.checkMigrationContractApproved();\n\n      if (!migrationContractApproved){\n\n        const callbackApprove = (tx,error) => {\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: 'Migrate',\n            eventAction: 'approve',\n            eventLabel: tx ? tx.status : null\n          };\n\n          const txSucceeded = tx && tx.status === 'success';\n\n          // console.log('callbackApprove',tx,error);\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            migrationContractApproved: txSucceeded, // True\n            processing: {\n              ...prevState.processing,\n              approve:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (typeof this.props.callbackApprove === 'function' && txSucceeded){\n            this.props.callbackApprove(tx);\n          }\n\n          this.checkMigration();\n        };\n\n        const callbackReceiptApprove = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              approve:{\n                ...prevState.processing.approve,\n                txHash\n              }\n            }\n          }));\n        };\n\n        this.functionsUtil.enableERC20(this.props.tokenConfig.migration.oldContract.name,migrationContractInfo.address,callbackApprove,callbackReceiptApprove);\n\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            approve:{\n              txHash:null,\n              loading:true\n            }\n          },\n          migrationContractApproved:false\n        }));\n      } else {\n        this.setState({\n          migrationContractApproved:true\n        });\n      }\n    }\n  }\n\n  migrate = async (e,migrationMethod) => {\n    e.preventDefault();\n\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n\n      // Check if the migration contract is approved\n      // const migrationContractApproved = await this.checkMigrationContractApproved();\n\n      // if (!migrationContractApproved){\n      //   return this.approveMigration();\n      // } else {\n        const callbackMigrate = (tx,error) => {\n\n          if (!error && tx && tx.status === 'error'){\n            error = {\n              message:'Unknown error'\n            };\n          } else if (!tx && error){\n            tx = {\n              status:'error'\n            };\n          }\n\n          const txSucceeded = tx && tx.status === 'success';\n\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: 'Migrate',\n            eventAction: migrationMethod,\n            eventLabel: tx ? tx.status : null,\n            eventValue: parseInt(oldIdleTokens)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          // console.log('callbackMigrate',tx,tx.status,txSucceeded,error,this.props.migrationCallback);\n\n          if (txSucceeded){\n            // Toast message\n            window.toastProvider.addMessage(`Migration completed`, {\n              secondaryMessage: `Your funds has been migrated`,\n              colorTheme: 'light',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"success\",\n            });\n\n            if (this.props.migrationCallback && typeof this.props.migrationCallback === 'function'){\n              this.props.migrationCallback(tx);\n            }\n\n          } else { // Show migration error toast only for real error\n            window.toastProvider.addMessage(`Migration error`, {\n              secondaryMessage: `The migration has failed, try again...`,\n              colorTheme: 'light',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"failure\",\n            });\n\n            // Check migration if failed\n            this.checkMigration();\n          }\n\n          this.setState((prevState) => ({\n            migrationEnabled:txSucceeded ? false : true,\n            processing: {\n              ...prevState.processing,\n              migrate:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n        }\n\n        const callbackReceiptMigrate = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              migrate:{\n                ...prevState.processing.migrate,\n                txHash\n              }\n            }\n          }));\n        };\n\n        const callbackPermit = () => {\n          if (typeof this.props.callbackPermit === 'function'){\n            this.props.callbackPermit();\n          }\n        }\n\n        const useMetaTx = this.props.useMetaTx !== false && this.props.biconomy && this.state.metaTransactionsEnabled && !this.state.biconomyLimitReached;\n\n        // Call migration contract function to migrate funds\n        const oldIdleTokens = this.state.oldIdleTokens;\n        const toMigrate = this.props.showBalanceSelector ? this.functionsUtil.integerValue(this.functionsUtil.normalizeTokenAmount(this.state.inputValue[this.state.action],this.state.oldContractTokenDecimals)) : this.functionsUtil.integerValue(this.state.oldContractBalance);\n        // const toMigrate =  this.functionsUtil.normalizeTokenAmount('1',this.state.oldContractTokenDecimals).toString(); // TEST AMOUNT\n\n        let _skipRebalance = typeof this.props.tokenConfig.skipMintForDeposit !== 'undefined' ? this.props.tokenConfig.skipMintForDeposit : this.functionsUtil.getGlobalConfig(['contract','methods','migrate','skipRebalance']);\n\n        // Mint if someone mint over X amount\n        let minAmountForRebalance = null;\n        \n        if (_skipRebalance){\n\n          // Check if the amount is over a certain amount to rebalance the pool\n          if (useMetaTx){\n            minAmountForRebalance = this.functionsUtil.getGlobalConfig(['contract','methods','migrate','minAmountForRebalanceMetaTx']);\n          } else {\n            minAmountForRebalance = this.functionsUtil.getGlobalConfig(['contract','methods','migrate','minAmountForRebalance']);\n          }\n\n          if (minAmountForRebalance){\n            const amountToDeposit = await this.functionsUtil.convertTokenBalance(oldIdleTokens,this.props.selectedToken,this.props.tokenConfig,false);\n            if (amountToDeposit.gte(this.functionsUtil.BNify(minAmountForRebalance))){\n              _skipRebalance = false;\n            }\n          }\n        }\n\n        let migrationParams = this.props.migrationParams ? this.props.migrationParams : [toMigrate,this.props.tokenConfig.migration.oldContract.address,this.props.tokenConfig.idle.address,this.props.tokenConfig.address,_skipRebalance];\n\n        if (typeof migrationParams === 'function'){\n          migrationParams = migrationParams(toMigrate);\n        }\n\n        // Check if Biconomy is enabled\n        if (useMetaTx){\n          const functionSignature = migrationContract.methods[migrationMethod](...migrationParams).encodeABI();\n          this.functionsUtil.sendBiconomyTxWithPersonalSign(migrationContractInfo.name, functionSignature, callbackMigrate, callbackReceiptMigrate);\n          // this.functionsUtil.sendBiconomyTx(migrationContractInfo.name, migrationContractInfo.address, functionSignature, callbackMigrate, callbackReceiptMigrate);\n        } else {\n          const permitContract = this.functionsUtil.getContractByName(this.props.tokenConfig.name);\n          const functionInfo = migrationContractInfo.functions.find( f => f.name === migrationMethod );\n          if (this.props.usePermit && permitContract){\n            this.functionsUtil.sendTxWithPermit(this.props.tokenConfig.name, this.props.account, migrationContractInfo.name, functionInfo.permitName, migrationParams, callbackMigrate, callbackReceiptMigrate, callbackPermit);\n          } else {\n            // Send migration tx\n            this.functionsUtil.contractMethodSendWrapper(migrationContractInfo.name, migrationMethod, migrationParams, callbackMigrate, callbackReceiptMigrate);\n          }\n        }\n\n        // debugger;\n\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            migrate:{\n              txHash:null,\n              loading:true\n            }\n          }\n        }));\n      // }\n    }\n\n    return false;\n  }\n\n  render() {\n\n    if (!this.props.tokenConfig || !this.props.selectedToken){\n      return null;\n    }\n\n    const contractApproved = this.props.usePermit || this.state.migrationContractApproved;\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationEnabled = batchMigrationInfo.enabled && typeof batchMigrationInfo.props.availableTokens[this.props.tokenConfig.idle.token] !== 'undefined';\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    // console.log('contractApproved',contractApproved,this.props.usePermit,this.state.migrationContractApproved);\n\n    const SkipMigrationComponent = (props) => (\n      <DashboardCard\n        cardProps={{\n          pt:2,\n          pb:3,\n          px:2,\n          mb:2,\n          display:'flex',\n          alignItems:'center',\n          flexDirection:'column',\n          justifyContent:'center',\n          mt:this.state.skipMigration ? 3 : 2,\n        }}\n      >\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Icon\n            size={'1.8em'}\n            color={'cellText'}\n            name={'FastForward'}\n          />\n        </Flex>\n        <Checkbox\n          required={false}\n          checked={this.state.skipMigration}\n          label={`Skip migration and deposit in Idle v4`}\n          onChange={ e => this.toggleSkipMigration(e.target.checked) }\n        />\n      </DashboardCard>\n    );\n\n    const biconomyEnabled = this.functionsUtil.getGlobalConfig(['network','providers','biconomy','enabled']) && !this.state.biconomyLimitReached;\n\n    return (\n      this.state.loading && this.props.account ? (\n        <DashboardCard\n          cardProps={{\n            p:3,\n            mt:3,\n            minHeight:'195px',\n            style:{\n              display:'flex',\n              alignItems:'center',\n              justifyContent:'center'\n            }\n          }}\n        >\n          <FlexLoader\n            flexProps={{\n              flexDirection:'row'\n            }}\n            loaderProps={{\n              size:'30px'\n            }}\n            textProps={{\n              ml:2\n            }}\n            text={'Checking migration...'}\n          />\n        </DashboardCard>\n      ) : (\n        (this.state.migrationEnabled && !this.state.skipMigration) ? (\n          <Box width={1}>\n            {\n              !this.props.isMigrationTool &&\n              <Flex\n                mt={3}\n                flexDirection={'column'}\n              >\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  >\n                    <Icon\n                      size={'2.3em'}\n                      color={'cellText'}\n                      name={ this.props.isMigrationTool ? 'SwapHoriz' : 'Warning' }\n                    />\n                    <Text\n                      mt={1}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      { this.props.migrateTextBefore !== null ? this.props.migrateTextBefore : null }\n                      { this.props.migrateTextBefore !== null &&\n                        <br />\n                      }\n                      You { !this.props.isMigrationTool ? 'still' : '' } have <strong>{this.state.oldIdleTokens.toFixed(4)} {this.state.oldTokenName} {this.state.oldIdleTokensConverted ? `(${this.state.oldIdleTokensConverted.toFixed(4)} ${this.props.selectedToken})` : ''}</strong> to migrate.<br />\n                      { this.props.migrateText !== null ? this.props.migrateText : 'Please use the section below to migrate or redeem your old tokens.' }\n                    </Text>\n                  </Flex>\n                </DashboardCard>\n              </Flex>\n            }\n            {\n              (this.props.showActions === undefined || this.props.showActions) && \n                <Flex\n                  mt={2}\n                  flexDirection={'column'}\n                >\n                  {\n                    !this.props.isMigrationTool && \n                      <SkipMigrationComponent />\n                  }\n                  <Text mb={2}>\n                    Choose the action:\n                  </Text>\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'space-between'}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        width:0.48,\n                        onMouseDown:() => {\n                          this.setAction('migrate');\n                        }\n                      }}\n                      isInteractive={true}\n                      isActive={ this.state.action === 'migrate' }\n                    >\n                      <Flex\n                        my={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <TransactionField\n                          transaction={{\n                            action:'migrate'\n                          }}\n                          fieldInfo={{\n                            name:'icon',\n                            props:{\n                              mr:3\n                            }\n                          }}\n                        />\n                        <Text\n                          fontSize={3}\n                          fontWeight={3}\n                        >\n                          Migrate\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        width:0.48,\n                        onMouseDown:() => {\n                          this.setAction('redeem');\n                        }\n                      }}\n                      isInteractive={true}\n                      isActive={ this.state.action === 'redeem' }\n                    >\n                      <Flex\n                        my={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <TransactionField\n                          transaction={{\n                            action:'redeem'\n                          }}\n                          fieldInfo={{\n                            name:'icon',\n                            props:{\n                              mr:3\n                            }\n                          }}\n                        />\n                        <Text\n                          fontSize={3}\n                          fontWeight={3}\n                        >\n                          Redeem\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                </Flex>\n            }\n            {\n              this.state.action === 'migrate' ? (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  flexDirection={'column'}\n                >\n                  {\n                    (batchMigrationEnabled && batchMigrationDepositEnabled && !this.props.isMigrationTool) &&\n                      <Flex\n                        mb={3}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <Link\n                          textAlign={'center'}\n                          hoverColor={'primary'}\n                          href={`/#/dashboard/tools/${batchMigrationInfo.route}/${this.props.tokenConfig.idle.token}`}\n                        >\n                          Gas fees too high? Save gas with our Batch Migrator!\n                        </Link>\n                        <Icon\n                          ml={1}\n                          size={'1em'}\n                          color={'primary'}\n                          name={'LocalGasStation'}\n                        />\n                      </Flex>\n                  }\n                  {\n                    contractApproved ? (\n                      this.state.processing.migrate.loading ? (\n                        <Flex\n                          mt={3}\n                          flexDirection={'column'}\n                        >\n                          <TxProgressBar\n                            {...this.props}\n                            hash={this.state.processing.migrate.txHash}\n                            endMessage={`Finalizing migration request...`}\n                            cancelTransaction={this.cancelTransaction.bind(this)}\n                            waitText={ this.props.waitText ? this.props.waitText : 'Migration estimated in'}\n                            sendingMessage={ this.props.biconomy && this.state.metaTransactionsEnabled ? 'Sending meta-transaction...' : 'Sending transaction...' }\n                          />\n                        </Flex>\n                      ) : this.props.showBalanceSelector ? (\n                        <Flex\n                          mt={1}\n                          flexDirection={'column'}\n                        >\n                          <Flex\n                            mb={3}\n                            width={1}\n                            flexDirection={'column'}\n                          >\n                            <Flex\n                              mb={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={this.props.balanceSelectorInfo ? 'space-between' : 'flex-end'}\n                            >\n                              {\n                                this.props.balanceSelectorInfo && (\n                                  <Flex\n                                    width={1}\n                                    maxWidth={'50%'}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                  >\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      textAlign={'left'}\n                                      style={{\n                                        maxWidth:'100%',\n                                        overflow:'hidden',\n                                        whiteSpace:'nowrap',\n                                        textOverflow:'ellipsis'\n                                      }}\n                                      color={this.props.balanceSelectorInfo.color ? this.props.balanceSelectorInfo.color : 'copyColor'}\n                                    >\n                                      {this.props.balanceSelectorInfo.text}\n                                    </Text>\n                                  </Flex>\n                                )\n                              }\n                              {\n                                this.state.oldIdleTokens && (\n                                  <Flex\n                                    width={1}\n                                    maxWidth={'50%'}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'flex-end'}\n                                  >\n                                    <Link\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      color={'dark-gray'}\n                                      textAlign={'right'}\n                                      hoverColor={'copyColor'}\n                                      onClick={ (e) => this.setFastBalanceSelector(100) }\n                                    >\n                                      Balance: {this.state.oldIdleTokens.toFixed(6)} {this.props.selectedToken}\n                                    </Link>\n                                  </Flex>\n                                )\n                              }\n                            </Flex>\n                            <Input\n                              min={0}\n                              type={\"number\"}\n                              required={true}\n                              height={'3.4em'}\n                              borderRadius={2}\n                              fontWeight={500}\n                              borderColor={'cardBorder'}\n                              backgroundColor={'cardBg'}\n                              boxShadow={'none !important'}\n                              placeholder={'Insert amount'}\n                              onChange={this.changeInputValue.bind(this)}\n                              border={`1px solid ${this.props.theme.colors.divider}`}\n                              value={this.state.inputValue[this.state.action] ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]).toFixed() : ''}\n                            />\n                            <Flex\n                              mt={2}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              {\n                                [25,50,75,100].map( percentage => (\n                                  <FastBalanceSelector\n                                    percentage={percentage}\n                                    key={`selector_${percentage}`}\n                                    onMouseDown={()=>this.setFastBalanceSelector(percentage)}\n                                    isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(percentage)}\n                                  />\n                                ))\n                              }\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            mt={1}\n                            width={1}\n                            alignItems={'center'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.props.tokenConfig.migration.migrationContract.functions.map((functionInfo,i) => {\n                                const functionName = functionInfo.name;\n                                return (\n                                  <RoundButton\n                                    buttonProps={{\n                                      width:[1,0.5],\n                                      disabled:this.state.buttonDisabled,\n                                      mainColor:this.props.theme.colors.migrate\n                                    }}\n                                    key={`migrate_${i}`}\n                                    handleClick={ e => this.migrate(e,functionName) }\n                                  >\n                                    { functionInfo.label }\n                                  </RoundButton>\n                                )\n                              })\n                            }\n                          </Flex>\n                        </Flex>\n                      ) : (\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:2,\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            {\n                              this.props.migrationImage ? (\n                                <Image\n                                  {...this.props.migrationImage}\n                                />\n                              ) : (\n                                <Icon\n                                  size={'2.3em'}\n                                  color={'cellText'}\n                                  name={ this.props.migrationIcon ? this.props.migrationIcon : (this.props.isMigrationTool ? 'SwapHoriz' : 'Repeat') }\n                                />\n                              )\n                            }\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              {\n                                this.props.migrationText ? (\n                                  <Text.span\n                                    migrationTextProps={this.props.migrationTextProps}\n                                    dangerouslySetInnerHTML={{\n                                      __html:this.props.migrationText\n                                    }}\n                                  >\n                                  </Text.span>\n                                ) : (\n                                  <Text.span\n                                    color={'cellText'}\n                                  >\n                                    You are one step away from the migration of your { this.props.isMigrationTool ? this.state.oldIdleTokens.toFixed(4) : 'old' } {this.state.oldTokenName}{ this.props.isMigrationTool ? ` into the Idle ${this.props.tokenConfig.token} ${this.props.selectedStrategy} strategy` : '' }!\n                                  </Text.span>\n                                )\n                              }\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                            {\n                              biconomyEnabled && \n                                <Flex\n                                  py={3}\n                                  px={2}\n                                  mt={2}\n                                  width={1}\n                                  borderRadius={2}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                  backgroundColor={'dashboardBg'}\n                                  border={`1px solid ${this.props.theme.colors.boxBorder}`}\n                                >\n                                  <Text\n                                    mt={1}\n                                    fontSize={1}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    {\n                                      this.props.biconomy ?\n                                        `Meta-Transactions allow you to migrate without spending a dime! But, if you are stuck, please disable it and try again.`\n                                      :\n                                        'Your wallet does not support Meta-transactions, you are still able to migrate with a normal transaction.'\n                                    }\n                                  </Text>\n                                  {\n                                  this.props.biconomy &&\n                                    <Checkbox\n                                      mt={2}\n                                      required={false}\n                                      label={\"Migrate with Meta-Transaction\"}\n                                      checked={this.state.metaTransactionsEnabled}\n                                      onChange={ e => this.toggleMetaTransactionsEnabled(e.target.checked) }\n                                    />\n                                  }\n                                </Flex>\n                            }\n                            {\n                              this.props.tokenConfig.migration.migrationContract.functions.map((functionInfo,i) => {\n                                const functionName = functionInfo.name;\n                                return (\n                                  <RoundButton\n                                    buttonProps={{\n                                      mt:3,\n                                      width:[1,0.5],\n                                      mainColor:this.props.theme.colors.migrate\n                                    }}\n                                    key={`migrate_${i}`}\n                                    handleClick={ e => this.migrate(e,functionName) }\n                                  >\n                                    { functionInfo.label }\n                                  </RoundButton>\n                                )\n                              })\n                            }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      )\n                    ) : this.state.processing.approve.loading ? (\n                      <Flex\n                        mt={3}\n                        flexDirection={'column'}\n                      >\n                        <TxProgressBar\n                          {...this.props}\n                          waitText={`Approve estimated in`}\n                          hash={this.state.processing.approve.txHash}\n                          endMessage={`Finalizing approve request...`}\n                          cancelTransaction={this.cancelTransaction.bind(this)}\n                        />\n                      </Flex>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          mt:2,\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            size={'2.3em'}\n                            name={'LockOpen'}\n                            color={'cellText'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            {\n                              this.props.approveText ? this.props.approveText : `To migrate your ${ !this.props.isMigrationTool ? 'old' : '' } ${this.state.oldTokenName} you need to approve our Smart-Contract first.`\n                            }\n                          </Text>\n                          <RoundButton\n                            buttonProps={{\n                              mt:3,\n                              width:[1,1/2]\n                            }}\n                            handleClick={this.approveMigration.bind(this)}\n                          >\n                            Approve\n                          </RoundButton>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  }\n                </Flex>\n              ) : (\n                !this.state.processing[this.state.action].loading ? (\n                  <Flex\n                    mt={3}\n                    flexDirection={'column'}\n                  >\n                    <Input\n                      min={0}\n                      type={\"number\"}\n                      required={true}\n                      height={'3.4em'}\n                      borderRadius={2}\n                      fontWeight={500}\n                      className={styles.input}\n                      borderColor={'cardBorder'}\n                      backgroundColor={'cardBg'}\n                      boxShadow={'none !important'}\n                      onChange={this.changeInputValue.bind(this)}\n                      border={`1px solid ${this.props.theme.colors.divider}`}\n                      placeholder={`Insert ${this.state.oldTokenName} amount`}\n                      value={this.state.inputValue[this.state.action] !== null ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]).toString() : ''}\n                    />\n                    <Flex\n                      mt={3}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'space-between'}\n                    >\n                      <FastBalanceSelector\n                        percentage={25}\n                        onMouseDown={()=>this.setFastBalanceSelector(25)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(25)}\n                      />\n                      <FastBalanceSelector\n                        percentage={50}\n                        onMouseDown={()=>this.setFastBalanceSelector(50)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(50)}\n                      />\n                      <FastBalanceSelector\n                        percentage={75}\n                        onMouseDown={()=>this.setFastBalanceSelector(75)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(75)}\n                      />\n                      <FastBalanceSelector\n                        percentage={100}\n                        onMouseDown={()=>this.setFastBalanceSelector(100)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(100)}\n                      />\n                    </Flex>\n                    <Flex\n                      mt={3}\n                      justifyContent={'center'}\n                    >\n                      <RoundButton\n                        buttonProps={{\n                          width:[1,1/2],\n                          disabled:this.state.buttonDisabled,\n                          style:{\n                            textTransform:'capitalize'\n                          }\n                        }}\n                        handleClick={this.state.buttonDisabled ? null : this.executeAction.bind(this) }\n                      >\n                        {this.state.action}\n                      </RoundButton>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Flex\n                    mt={4}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      {...this.props}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                      hash={this.state.processing[this.state.action].txHash}\n                      endMessage={`Finalizing ${this.state.action} request...`}\n                      waitText={`${this.functionsUtil.capitalize(this.state.action)} estimated in`}\n                    />\n                  </Flex>\n                )\n              )\n            }\n          </Box>\n        ) : (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'column'}\n            justifyContent={'center'}\n          >\n            {\n              (!this.props.isMigrationTool && this.state.migrationEnabled) && \n                <SkipMigrationComponent />\n            }\n            {\n              this.props.children ? this.props.children : null\n            }\n          </Flex>\n        )\n      )\n    )\n  }\n}\n\nexport default Migrate;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport AssetField from '../AssetField/AssetField';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass AssetsList extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    return (\n      <Flex id=\"assets-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"assets-list\" flexDirection={'column'}>\n          {\n            enabledTokens.map(token => {\n              const tokenConfig = this.props.availableTokens[token];\n              if (!tokenConfig){\n                return null;\n              }\n              return (\n                <TableRow\n                  token={token}\n                  {...this.props}\n                  key={`asset-${token}`}\n                  tokenConfig={tokenConfig}\n                  rowId={`asset-col-${token}`}\n                  cardId={`asset-card-${token}`}\n                  fieldComponent={this.props.fieldComponent || AssetField}\n                />\n              );\n            })\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default AssetsList;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__38P6I\",\"link\":\"Footer_link__13yZU\"};","import { tint, shade, readableColor } from 'polished';\n\n// rimble base colors\nconst baseColors = {\n  black: '#000e1a',\n  white: '#FFF',\n  blue: '#0036ff',\n  darkBlue: '#0028be',\n  green: '#28C081',\n  yellow: '#FD9D28',\n  red: '#DC2C10',\n  blurple: '#4E3FCE',\n  consensysblue: '#3259D6',\n};\n\n// rimble palette\nconst colors = {\n  blurple: {\n    base: baseColors.blurple,\n    text: readableColor(baseColors.blurple),\n    light: [null, tint(0.2, baseColors.blurple)],\n    dark: [null, shade(0.2, baseColors.blurple)],\n  },\n  blue: {\n    base: baseColors.blue,\n    text: readableColor(baseColors.blue),\n    light: [null, tint(0.9, baseColors.blue)],\n    dark: [null, shade(0.4, baseColors.blue)],\n  },\n  green: {\n    base: baseColors.green,\n    text: baseColors.white,\n    light: [null, tint(0.9, baseColors.green)],\n    dark: [null, shade(0.4, baseColors.green)],\n  },\n  yellow: {\n    base: baseColors.yellow,\n    text: readableColor(baseColors.yellow),\n    light: [null, tint(0.9, baseColors.yellow)],\n    dark: [null, shade(0.4, baseColors.yellow)],\n  },\n  red: {\n    base: baseColors.red,\n    text: readableColor(baseColors.red),\n    light: [null, tint(0.9, baseColors.red)],\n    dark: [null, shade(0.4, baseColors.red)],\n  },\n};\n\nconst blurple = colors.blurple;\nconst blue = colors.blue;\nconst green = colors.green;\nconst yellow = colors.yellow;\nconst red = colors.red;\n\nexport { blurple };\nexport { blue };\nexport { green };\nexport { yellow };\nexport { red };\nexport default baseColors;\n","import { Flex, Icon } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass VariationNumber extends Component {\n\n  render() {\n\n    const IconDirection = () => (\n      <Icon\n        color={ this.props.direction === 'up' ?  '#6dd400' : '#f7b500' }\n        name={ this.props.direction === 'up' ?  'ArrowDropUp' : 'ArrowDropDown' }\n        size={ this.props.iconSize ? this.props.iconSize : ( this.props.isMobile ? '1.4em' : '2em') }\n      />\n    );\n\n    return (\n      <Flex\n        alignItems={'center'}\n        flexDirection={'row'}\n        width={ this.props.width ? this.props.width : 1 }\n        justifyContent={this.props.justifyContent ? this.props.justifyContent : 'center'}\n      >\n        {\n          (!this.props.iconPos || this.props.iconPos==='left') &&\n            <IconDirection />\n        }\n        {this.props.children}\n        {\n          this.props.iconPos==='right' &&\n            <IconDirection />\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default VariationNumber;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchInput\":\"GenericSelector_searchInput__vl2hJ\",\"genericSelector\":\"GenericSelector_genericSelector__1Nqkd\",\"dark\":\"GenericSelector_dark__zCOnP\",\"searchInputHidden\":\"GenericSelector_searchInputHidden__2Zm1B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loading-dots\":\"LoadingSpinner_loading-dots__2-3YZ\",\"loading-dots--dot\":\"LoadingSpinner_loading-dots--dot__2Y25C\",\"dot-keyframes\":\"LoadingSpinner_dot-keyframes__3SU_M\"};","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Box,\n  Button,\n  Flex,\n  Image\n} from \"rimble-ui\";\nimport Select from 'react-select';\nimport ModalCard from './ModalCard';\nimport ImageButton from '../../ImageButton/ImageButton';\nimport styles from './Header.module.scss';\nimport globalConfigs from '../../configs/globalConfigs';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\n\nclass BuyModal extends React.Component {\n\n  state = {\n    selectedMethod:null,\n    availableMethods:[],\n    selectedCountry:null,\n    selectedProvider:null,\n    availableProviders:null,\n    selectedToken:this.props.buyToken,\n  }\n\n  async loadRemoteResources() {\n\n    if (!this.state.selectedToken){\n      return false;\n    }\n\n    // Load payments providers external remote resources\n    Object.keys(globalConfigs.payments.providers).forEach((provider,i) => {\n\n      const providerInfo = globalConfigs.payments.providers[provider];\n      if (providerInfo.enabled && providerInfo.remoteResources && (providerInfo.supportedTokens.indexOf(this.state.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1)){\n        \n        const remoteResources = providerInfo.remoteResources;\n\n        Object.keys(remoteResources).forEach((url,j) => {\n\n          const resourceType = url.split('.').pop().toLowerCase();\n\n          switch (resourceType){\n            case 'js':\n              const scriptID = `script_${provider}_${j}_${this.state.selectedToken}`;\n\n              if (!document.getElementById(scriptID)){\n                const script = document.createElement(\"script\");\n                const remoteResourceParams = remoteResources[url];\n                const callback = remoteResourceParams && remoteResourceParams.callback ? remoteResourceParams.callback : null;\n                const precall = remoteResourceParams && remoteResourceParams.precall ? remoteResourceParams.precall : null;\n\n                if (precall && typeof precall === 'function'){\n                  precall(this.state,globalConfigs,providerInfo);\n                }\n\n                if (callback && typeof callback === 'function'){\n                  if (script.readyState) {  // only required for IE <9\n                    script.onreadystatechange = function() {\n                      if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n                        script.onreadystatechange = null;\n                        callback();\n                      }\n                    };\n                  } else {  //Others\n                    script.onload = callback;\n                  }\n                }\n\n                script.id = scriptID;\n                script.className = `script_${provider}`;\n                script.src = url;\n                script.async = true;\n\n                if (remoteResourceParams && remoteResourceParams.parentElement){\n                  remoteResourceParams.parentElement.appendChild(script)\n                } else {\n                  document.head.appendChild(script);\n                }\n              }\n            break;\n            case 'css':\n              const stylesheetId = `stylesheet_${provider}_${j}`;\n\n              if (!document.getElementById(stylesheetId)){\n                const style = document.createElement(\"link\");\n\n                style.id = stylesheetId;\n                style.rel = 'stylesheet';\n                style.href = url;\n\n                document.head.appendChild(style);\n              }\n            break;\n            default:\n            break;\n          }\n        });\n      }\n    });\n  }\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  loadAvailableMethods(){\n    const availableMethods = {};\n    const availableMethodsKeys = this.props.availableMethods && this.props.availableMethods.length ? this.props.availableMethods : Object.keys(globalConfigs.payments.methods);\n\n    availableMethodsKeys.forEach(method => {\n      const availableProviders = this.getAvailablePaymentProviders(method,this.state.selectedToken);\n      if (availableProviders && availableProviders.length>0){\n        const methodInfo = globalConfigs.payments.methods[method];\n        methodInfo.availableProviders = availableProviders;\n        availableMethods[method] = methodInfo;\n      }\n    });\n\n    this.setState({\n      availableMethods\n    });\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n\n    this.loadAvailableMethods();\n    this.loadRemoteResources();\n  }\n\n  async componentDidMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps) {\n\n    this.loadUtils();\n\n    if ( this.props.buyToken && prevProps.buyToken !== this.props.buyToken){\n      this.selectToken(null,this.props.buyToken);\n    }\n  }\n\n  renderPaymentMethod = async (e,provider,buyParams) => {\n\n    const onSuccess = async (tx) => {\n      // Toast message\n      window.toastProvider.addMessage(`Deposit completed`, {\n        secondaryMessage: `Your ${this.state.selectedToken} have been deposited`,\n        colorTheme: 'light',\n        actionHref: \"\",\n        actionText: \"\",\n        variant: \"success\",\n      });\n\n      this.props.getAccountBalance();\n    };\n\n    const onClose = async (e) => {\n      return true;\n    }\n\n    const paymentProvider = globalConfigs.payments.providers[provider];\n    const initParams = paymentProvider && paymentProvider.getInitParams ? paymentProvider.getInitParams(this.props,globalConfigs,buyParams,onSuccess,onClose) : null;\n\n    // Render the Payment Provider\n    switch (provider){\n      default:\n        if (typeof paymentProvider.render === 'function'){\n          const currentState = Object.assign({},this.state);\n          paymentProvider.render(initParams,null,currentState,globalConfigs);\n        }\n      break;\n    }\n\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_provider',\n        eventLabel: provider\n      });\n\n      this.closeModal(e);\n    } else {\n      this.closeModal(e);\n    }\n  }\n\n  goBack = (e) => {\n    e.preventDefault();\n\n    if (this.state.selectedProvider){\n      this.setState({\n        selectedProvider:null,\n      });\n    } else if (this.state.selectedMethod){\n      this.setState({\n        selectedMethod:null,\n        selectedCountry:null,\n        selectedProvider:null,\n      });\n    } else if (this.state.selectedToken){\n      this.setState({\n        selectedMethod:null,\n        selectedCountry:null,\n        selectedProvider:null,\n        selectedToken:this.props.buyToken,\n      });\n    } else {\n      this.resetModal();\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      selectedMethod:null,\n      selectedCountry:null,\n      selectedProvider:null,\n      availableProviders:null,\n      selectedToken:this.props.buyToken\n    });\n\n    this.componentWillMount();\n  }\n\n  closeModal = (e) => {\n    this.resetModal();\n    if (!this.props.showInline && typeof this.props.closeModal === 'function'){\n      this.props.closeModal();\n    }\n  }\n\n  getProviderInfo = (provider) => {\n    if (!globalConfigs.payments.providers[provider]){\n      return false;\n    }\n    let providerInfo = globalConfigs.payments.providers[provider];\n    if (typeof providerInfo.getInfo === 'function'){\n      const newProviderInfo = providerInfo.getInfo(this.state);\n      if (newProviderInfo && Object.keys(newProviderInfo).length){\n        providerInfo = Object.assign(providerInfo,newProviderInfo);\n      }\n    }\n    return providerInfo;\n  }\n\n  getDefaultPaymentProvider = (selectedMethod) => {\n    const paymentMethod = this.state.availableMethods[selectedMethod];\n    if (paymentMethod && paymentMethod.defaultProvider){\n      return paymentMethod.defaultProvider;\n    }\n    return null;\n  }\n\n  getAvailablePaymentProviders = (selectedMethod,selectedToken) => {\n    const availableProviders = [];\n\n    Object.keys(globalConfigs.payments.providers).map((provider,i) => {\n      const providerInfo = globalConfigs.payments.providers[provider];\n      const providerSupportMethod = providerInfo.supportedMethods.indexOf(selectedMethod) !== -1;\n      const providerSupportToken = selectedToken ? providerInfo.supportedTokens.indexOf(selectedToken) !== -1 : (providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1);\n      if (providerInfo.enabled && providerSupportMethod && providerSupportToken ){\n        availableProviders.push(provider);\n      }\n      return provider;\n    });\n\n    const defaultPaymentProvider = this.getDefaultPaymentProvider(selectedMethod);\n\n    if (defaultPaymentProvider && this.state.availableMethods[selectedMethod].showDefaultOnly && availableProviders.indexOf(defaultPaymentProvider) !== -1){\n      return [defaultPaymentProvider];\n    }\n\n    return availableProviders;\n  }\n\n  selectProvider = (e,selectedProvider) => {\n    if (e){\n      e.preventDefault();\n    }\n    \n    if (!selectedProvider || !globalConfigs.payments.providers[selectedProvider]){\n      return this.setState({\n        selectedProvider:null\n      });\n    }\n\n    const providerInfo = globalConfigs.payments.providers[selectedProvider];\n    if (providerInfo){\n\n      if (this.state.selectedToken){\n        this.renderPaymentMethod(e,selectedProvider,this.state);\n        return;\n      }\n\n      const ethAvailable = providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1;\n      const tokenAvailable = providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1;\n\n      // Show tokens to buy if more are available or if the selected one is not\n      const availableTokens = [];\n      if ( (ethAvailable && tokenAvailable) || !tokenAvailable ){\n        if (ethAvailable){\n          availableTokens.push(globalConfigs.baseToken);\n        }\n        if (tokenAvailable){\n          availableTokens.push(this.props.selectedToken);\n        }\n      } else {\n        this.renderPaymentMethod(e,selectedProvider,this.state);\n        return;\n      }\n\n      this.setState({\n        availableTokens,\n        selectedProvider\n      });\n    }\n  }\n\n  selectMethod = (e,selectedMethod) => {\n    if (e){\n      e.preventDefault();\n    }\n\n    if (Object.keys(this.state.availableMethods).indexOf(selectedMethod) !== -1){\n      const availableProviders = this.getAvailablePaymentProviders(selectedMethod,this.state.selectedToken);\n\n      // Send Google Analytics event\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_method',\n        eventLabel: selectedMethod\n      });\n\n      this.setState({\n        availableProviders,\n        selectedMethod\n      });\n    }\n  }\n\n  selectToken = (e,selectedToken) => {\n    if (e){\n      e.preventDefault();\n    }\n\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Buy',\n      eventAction: 'select_token',\n      eventLabel: selectedToken\n    });\n\n    this.setState({ selectedToken }, async () => {\n      if (this.state.selectedProvider){\n        return this.renderPaymentMethod(e,this.state.selectedProvider,this.state);\n      } else {\n        this.loadRemoteResources();\n      }\n    });\n  }\n\n  handleCountryChange = selectedCountry => {\n\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled && selectedCountry){\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_country',\n        eventLabel: selectedCountry.value\n      });\n    }\n\n    this.setState({\n      selectedCountry\n    });\n  }\n\n  getAvailableCountries = () => {\n    const availableCountries = {};\n    this.state.availableProviders.forEach((provider,i) => {\n      const providerInfo = this.getProviderInfo(provider);\n      const providerSupportMethod = providerInfo.supportedMethods.indexOf(this.state.selectedMethod) !== -1;\n      const providerSupportToken = this.state.selectedToken ? providerInfo.supportedTokens.indexOf(this.state.selectedToken) !== -1 : (providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1);\n\n      // Skip disabled provider, not supported selected method or not supported token\n      if (!providerInfo.enabled || !providerSupportMethod || !providerSupportToken ){\n        return;\n      }\n\n      // Get available providers and countries\n      providerInfo.supportedCountries.forEach((countryCode,j) => {\n        if (!availableCountries[countryCode]){\n          availableCountries[countryCode] = {\n            providers:[],\n            label:globalConfigs.countries[countryCode],\n            value:countryCode\n          };\n        }\n        availableCountries[countryCode].providers.push(provider);\n      });\n    });\n\n    return Object.values(availableCountries);\n  }\n\n  render() {\n\n    let title = null;\n    if (this.state.selectedToken === null){\n      title = 'BUY TOKEN';\n    } else {\n      title = 'BUY '+this.state.selectedToken;\n      if (this.state.selectedMethod !== null){\n        title += ' - '+this.state.availableMethods[this.state.selectedMethod].props.caption;\n      }\n    }\n\n    let availableTokens = this.props.availableTokens && Object.keys(this.props.availableTokens).length>0 ? [globalConfigs.baseToken,...Object.keys(this.props.availableTokens)] : [globalConfigs.baseToken];\n\n    // Show all tokens\n    if (this.props.showAllTokens){\n      availableTokens = [];\n      Object.keys(globalConfigs.payments.providers).forEach( provider => {\n        const providerInfo = globalConfigs.payments.providers[provider];\n        if (providerInfo.supportedTokens){\n          providerInfo.supportedTokens.forEach(token => {\n            if (!availableTokens.includes(token)){\n              availableTokens.push(token);\n            }\n          })\n        }\n      });\n    }\n\n    const InnerComponent = props => (\n      <Box minWidth={ this.props.showInline ? 'auto' : ['auto','35em'] }>\n      {\n        this.state.selectedToken === null ? (\n          <Box mb={2}>\n            <Text\n              mb={[2,3]}\n              fontWeight={2}\n              textAlign={'center'}\n              fontSize={[2, this.props.showInline ? 2 : 3]}\n            >\n              Which token do you want to buy?\n            </Text>\n            <Flex\n              mb={4}\n              style={{\n                flexWrap:'wrap'\n              }}\n              alignItems={'center'}\n              justifyContent={'center'}\n              flexDirection={['column','row']}\n            >\n            {\n              availableTokens.map((token,i) => {\n                return (\n                  <ImageButton\n                    caption={token}\n                    key={`token_${token}`}\n                    isMobile={this.props.isMobile}\n                    imageSrc={`images/tokens/${token}.svg`}\n                    handleClick={ e => { this.selectToken(e,token); } }\n                    imageProps={ this.props.isMobile ? {height:'42px'} : {p:[2,3],height:'80px'}}\n                    buttonProps={ !this.props.isMobile ? {\n                      style:{\n                        'flex':'0 0 170px'\n                      }\n                    } : null}\n                  />\n                );\n              })\n            }\n            </Flex>\n          </Box>\n        ) : this.state.selectedMethod === null ? (\n          <Box>\n            <Flex mb={3} flexDirection={'column'} justifyContent={'center'} alignItems={'center'}>\n              {\n                !this.props.showInline &&\n                  <Image height={2} mb={2} src={`images/tokens/${this.state.selectedToken}.svg`} />\n              }\n              <Text textAlign={'center'} fontWeight={500} fontSize={[2, this.props.showInline ? 2 : 3]} my={0}>\n                {\n                  this.props.showInline && this.props.buyToken ? `Ops... you don't have any ${this.props.buyToken} in your wallet, how do you prefer do buy some?` : `How do you prefer to buy ${this.state.selectedToken}?`\n                }\n              </Text>\n            </Flex>\n            <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n              {\n                Object.keys(this.state.availableMethods).map((method,i) => {\n                  const methodInfo = this.state.availableMethods[method];\n                  let imageProps = methodInfo.props && methodInfo.props.imageProps ? methodInfo.props.imageProps : {};\n                  const imagePropsExtended = this.props.isMobile ? {height:'42px'} : {height:'70px'};\n                  imageProps = Object.assign(imageProps,imagePropsExtended);\n\n                  return (\n                    <ImageButton\n                      {...methodInfo.props}\n                      buttonProps={{\n                        border:2\n                      }}\n                      key={`method_${method}`}\n                      imageProps={ imageProps }\n                      isMobile={ this.props.isMobile }\n                      handleClick={ e => this.selectMethod(e,method) }\n                    />\n                  );\n                })\n              }\n            </Flex>\n          </Box>\n        ) : this.state.selectedMethod === 'wallet' ? (\n              <Box mt={2} mb={3}>\n                <Text textAlign={'center'} fontWeight={3} fontSize={2} my={0}>\n                  <Box width={'100%'}>\n                      <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                      {\n                        this.state.availableProviders.length > 0 ?\n                          (\n                            <Box>\n                              <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                                Choose your preferred payment provider:\n                              </Text>\n                              {\n                                this.state.availableProviders.map((provider,i) => {\n                                  const providerInfo = this.getProviderInfo(provider);\n                                  return (\n                                    <ImageButton key={`payment_provider_${provider}`} {...providerInfo} handleClick={ e => { this.renderPaymentMethod(e,provider,this.state); } } />\n                                  );\n                                })\n                              }\n                            </Box>\n                          )\n                        : (\n                          <Text textAlign={'center'} fontWeight={3} fontSize={2} my={2}>\n                            Sorry, there are no providers available for the selected method.\n                          </Text>\n                        )\n                      }\n                      </Flex>\n                    </Box>\n                </Text>\n              </Box>\n            ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              {\n                !this.state.selectedProvider &&\n                <Box\n                  mb={3}\n                  maxWidth={ this.props.showInline ? '35em' : 'initial' }\n                  width={ (this.props.showInline && !this.props.isMobile) ? 0.72 : 1 }\n                >\n                  {\n                    !this.props.showInline &&\n                      <Flex flexDirection={'column'} justifyContent={'center'} alignItems={'center'}>\n                        <Image height={2} mb={2} src={`images/tokens/${this.state.selectedToken}.svg`} />\n                      </Flex>\n                  }\n                  <Text textAlign={'center'} fontWeight={ this.props.showInline ? 2 : 3 } fontSize={2} mb={2}>\n                    Select your country:\n                  </Text>\n                  <Select\n                    bg={'#162e4d'}\n                    backgroundColor={'#162e4d'}\n                    value={this.state.selectedCountry}\n                    placeholder={'Select your country'}\n                    onChange={this.handleCountryChange}\n                    options={this.getAvailableCountries()}\n                    maxWidth={ this.props.showInline && !this.props.isMobile ? '25em' : 'auto' }\n                    noOptionsMessage={ (inputValue) => 'For European countries select Europe' }\n                    className={this.props.themeMode === 'light' ? styles.select : styles.selectDark}\n                  />\n                </Box>\n              }\n              <Flex flexDirection={'column'} justifyContent={'center'} alignItems={'center'} minHeight={'200px'}>\n                {\n                  !this.state.selectedProvider ?\n                    this.state.selectedCountry !== null ? (\n                      <Box width={'100%'}>\n                        <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                          Choose your preferred payment provider:\n                        </Text>\n                        <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                        {\n                          this.state.selectedCountry.providers.length > 0 ?\n                            this.state.selectedCountry.providers.map((provider,i) => {\n                              const providerInfo = this.getProviderInfo(provider);\n                              return (\n                                <ImageButton key={`payment_provider_${provider}`} {...providerInfo} handleClick={ e => {this.selectProvider(e,provider) } } />\n                              );\n                            })\n                          : (\n                            <Text textAlign={'center'} fontWeight={3} fontSize={2} mb={2}>\n                              Sorry, there are no providers available for the selected method.\n                            </Text>\n                          )\n                        }\n                        </Flex>\n                      </Box>\n                    ) : (\n                      <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={2}>\n                        Select the country to load the payment providers.\n                      </Text>\n                    )\n                  : false && this.state.availableTokens && this.state.availableTokens.length > 0 && (\n                    <Box mb={2}>\n                      <Flex justifyContent={'center'} my={2}>\n                        <Image src={ globalConfigs.payments.providers[this.state.selectedProvider].imageSrc } height={'35px'} />\n                      </Flex>\n                      <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                        Choose which token do you want to buy:\n                      </Text>\n                      <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                      {\n                        this.state.availableTokens.map((token,i) => {\n                          return (\n                            <ImageButton key={`token_${token}`} imageSrc={`images/tokens/${token}.svg`} caption={token} imageProps={{p:[2,3],height:'80px'}} handleClick={ e => { this.selectToken(e,token); } } />\n                          );\n                        })\n                      }\n                      </Flex>\n                    </Box>\n                  )\n                }\n              </Flex>\n            </Flex>\n          )\n      }\n        {\n          this.props.showInline && this.state.selectedToken !== null  && (this.props.buyToken === null || this.state.selectedMethod !== null) && (\n            <Flex\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <Button\n                my={2}\n                mx={[0, 2]}\n                size={'medium'}\n                borderRadius={4}\n                mainColor={'blue'}\n                onClick={ e => this.goBack(e) }\n              >\n                GO BACK\n              </Button>\n            </Flex>\n          )\n        }\n      </Box>\n    );\n\n    if (this.props.showInline){\n      return (\n        <InnerComponent\n          {...this.props}\n        />\n      );\n    }\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.closeModal}>\n          <ModalCard.Header title={title}>\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <InnerComponent/>\n          </ModalCard.Body>\n          <ModalCard.Footer>\n            <Flex px={[2,0]} flexDirection={['column', 'row']} width={1} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                onClick={ e => this.closeModal(e) }\n                size={this.props.isMobile ? 'small' : 'medium'}\n              >\n              CLOSE\n              </Button>\n              {\n                this.state.selectedToken !== null && (this.props.buyToken === null || this.state.selectedMethod !== null) && (\n                  <Button\n                    my={2}\n                    mx={[0, 2]}\n                    borderRadius={4}\n                    onClick={ e => this.goBack(e) }\n                    className={styles.gradientButton}\n                    size={this.props.isMobile ? 'small' : 'medium'}\n                  >\n                    GO BACK\n                  </Button>\n                )\n              }\n            </Flex>\n          </ModalCard.Footer>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default BuyModal;","import React, { Component } from 'react';\nimport { Flex, Icon, Text } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass ConnectBox extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          p:3,\n          mt:3,\n          ...this.props.cardProps\n        }}\n      >\n        <Flex\n          alignItems={'center'}\n          flexDirection={'column'}\n        >\n          <Icon\n            size={'1.8em'}\n            name={'Input'}\n            color={'cellText'}\n          />\n          <Text\n            mt={2}\n            fontSize={2}\n            color={'cellText'}\n            textAlign={'center'}\n          >\n            Please connect with your wallet interact with Idle.\n          </Text>\n          <RoundButton\n            buttonProps={{\n              mt:2,\n              width:[1,1/2]\n            }}\n            handleClick={this.props.connectAndValidateAccount}\n          >\n            Connect\n          </RoundButton>\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default ConnectBox;\n","import React from \"react\";\nimport styles from './ModalCard.module.scss';\nimport { Box, Flex, Card, Button, Heading, Image } from \"rimble-ui\";\n\nconst ModalCard = ({children, closeFunc, ...props}) => (\n  <Card\n    p={0}\n    border={0}\n    mx={'auto'}\n    my={'auto'}\n    height={'auto'}\n    borderRadius={2}\n    overflow={'auto'}\n    width={ props.width ? props.width : 'auto' }\n    minWidth={ props.minWidth ? props.minWidth : 'auto' }\n    maxWidth={ props.maxWidth ? props.maxWidth : '960px'}\n  >\n    <Box\n      top={'0'}\n      zIndex={1}\n      right={'0'}\n      position={\"absolute\"}\n    >\n      <Button.Text\n        icononly\n        icon={\"Close\"}\n        size={'2.5em'}\n        onClick={closeFunc}\n        mainColor={ props.mainColor ? props.mainColor :  'copyColor' }\n      />\n    </Box>\n    <Flex\n      height={'100%'}\n      flex={'1 1 auto'}\n      flexDirection={'column'}\n      className={[ props.bgLayer ? styles.bg : null]}\n      style={{\n        overflow: 'auto',\n        backgroundRepeat:'no-repeat',\n        backgroundPosition:'bottom right',\n        backgroundSize: !props.background ? '65%' : null,\n        backgroundImage:'url(/images/bg-bottom-right.png)',\n        background: props.background ? props.background : null,\n      }}\n      backgroundColor={'cardBg'}\n    >\n      {children}\n    </Flex>\n  </Card>\n);\n\nModalCard.Header = (props) => (\n  <Box\n    width={1}\n    mb={[2,3]}\n    pb={[2,2]}\n    pt={ props.pt ? props.pt : (props.icon ? 3 : [5,3]) }\n    borderBottom={ props.borderBottom ? props.borderBottom : '1px solid #eee' }\n  >\n    <Flex\n      px={[1,2]}\n      alignItems={'center'}\n      flexDirection={'column'}\n    >\n      { props.icon && <Image width={ props.iconHeight ? props.iconHeight : '50px' } src={props.icon} /> }\n      <Heading.h3\n        mb={0}\n        fontSize={[3,3]}\n        color={'copyColor'}\n        textAlign={'center'}\n        mt={props.icon ? 2 : 0}\n        fontFamily={'sansSerif'}\n        {...props.titleProps}\n      >\n        {props.title}\n      </Heading.h3>\n      {\n        props.subtitle &&\n        <Heading.h4\n          pt={[1,2]}\n          fontWeight={2}\n          fontSize={[2,2]}\n          lineHeight={1.5}\n          color={'dark-gray'}\n          textAlign={'center'}\n          {...props.subtitleProps}\n        >\n          {props.subtitle}\n        </Heading.h4>\n      }\n      {\n        props.subtitle2 &&\n        <Heading.h4 pt={0} fontSize={[2,2]} textAlign={'center'} fontWeight={2} lineHeight={1.5} color={'dark-gray'}>\n          {props.subtitle2}\n        </Heading.h4>\n      }\n    </Flex>\n  </Box>\n);\n\nModalCard.Body = ({children, ...props}) => (\n  <Box\n    width={1}\n    px={[3,5]}\n    {...props}\n  >\n    {children}\n  </Box>\n);\n/*\nModalCard.Body = ({children, ...props}) => (\n  <Flex flex={'1 1 auto'} style={{ overflow: 'auto' }} >\n    <Box width={1} px={[4,5]} py={[3,4]} m={'auto'}>\n      {children}\n    </Box>\n  </Flex>\n);\n*/\n\nModalCard.Footer = ({children, ...props}) => (\n  <Flex\n    flex={'1 0 auto'}\n    justifyContent={'center'}\n    borderTop={1}\n    borderColor={'light-gray'}\n    px={[0,3]}\n    py={3}\n  >\n    {children}\n  </Flex>\n);\n\n\nModalCard.BackButton = ({onClick, ...props}) => (\n  <Box\n    position={'absolute'}\n    top={'0'}\n    left={'0'}\n    m={3}\n    bg={'white'}\n  >\n    <Button.Outline\n      onClick={onClick}\n      icononly\n      icon={'ArrowBack'}\n      size={'2.5em'}\n    />\n  </Box>\n);\n\nexport default ModalCard;\n","import {\n  Link as RouterLink,\n} from \"react-router-dom\";\nimport ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport styles from './Footer.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Heading, Image, Link } from 'rimble-ui';\n\nclass Footer extends Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  render() {\n    const currYear = new Date().getFullYear();\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n    const columnWidth = governanceEnabled ? 1/4 : 1/3;\n    return (\n      <Flex\n        pl={0}\n        id={\"footer\"}\n        alignItems={'center'}\n        flexDirection={'column'}\n        className={styles.footer}\n        backgroundColor={'white'}\n        justifyContent={'flex-start'}\n      >\n        <Flex\n          width={1}\n          px={[3,6]}\n          justifyContent={'center'}\n        >\n          <Flex\n            width={1}\n            height={['auto','100%']}\n            alignItems={'flex-start'}\n            maxWidth={['35em','70em']}\n            justifyContent={'flex-start'}\n            flexDirection={['column','row']}\n          >\n            <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Resources\n              </Heading.h3>\n              <Flex width={1} flexDirection={'column'}>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://developers.idle.finance'}\n                >\n                  <span role=\"img\" aria-label=\"documentation\">📚</span> Documentation\n                </ExtLink>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://www.notion.so/idlelabs/Idle-Finance-Brand-Assets-fd63e4161cb64c999531646c7549bc4b'}\n                >\n                  <span role=\"img\" aria-label=\"brand-assets\">🎨</span> Brand Assets\n                </ExtLink>\n                <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                  <RouterLink\n                    color={'blue'}\n                    to=\"/terms-of-service\"\n                    className={styles.link}\n                  >\n                    <Text\n                      fontWeight={3}\n                      color={'blue'}\n                      fontSize={[3,2]}\n                      hoverColor={'blue'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                    >\n                      <span role=\"img\" aria-label=\"terms-of-service\">📑</span> Terms of Service\n                    </Text>\n                  </RouterLink>\n                </Flex>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://www.iubenda.com/privacy-policy/61211749'}\n                >\n                  <span role=\"img\" aria-label=\"privacy-policy\">🕵️‍♂️</span> Privacy Policy\n                </ExtLink>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://www.iubenda.com/privacy-policy/61211749/cookie-policy'}\n                >\n                  <span role=\"img\" aria-label=\"cookie-policy\">🍪</span> Cookie Policy\n                </ExtLink>\n              </Flex>\n            </Flex>\n            {\n              governanceEnabled && \n                <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n                  <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                    Governance\n                  </Heading.h3>\n                  <Flex width={1} flexDirection={'column'}>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        to={\"/governance\"}\n                        className={styles.link}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-overview\">🏛</span> Overview\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        className={styles.link}\n                        to={\"/governance/proposals\"}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-proposals\">💡</span> Proposals\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        className={styles.link}\n                        to={\"/governance/leaderboard\"}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-leaderboard\">📋</span> Leaderboard\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <ExtLink href=\"https://gov.idle.finance/\">\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-forum\">🤝</span> Forum\n                        </Text>\n                      </ExtLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <ExtLink href=\"https://www.notion.so/idlelabs/ffe8115b7b53489ab0a7f84e656e4bb0?v=916250f54ff24daabad72cf095fd6d88\">\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-forum\">🌎</span> Team\n                        </Text>\n                      </ExtLink>\n                    </Flex>\n                  </Flex>\n                </Flex>\n            }\n            <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Start a Conversation\n              </Heading.h3>\n              <Link textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} color={'blue'} hoverColor={'blue'}>\n                <span role=\"img\" aria-label=\"email\">✉️</span> info@idle.finance\n              </Link>\n            </Flex>\n            <Flex width={[1,columnWidth]} flexDirection={'column'}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Explore\n              </Heading.h3>\n              <Flex flexDirection={'row'} justifyContent={['space-evenly','flex-start']}>\n                <ExtLink href=\"https://twitter.com/idlefinance\">\n                  <Image src=\"images/social/twitter.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://t.me/idlefinance\">\n                  <Image src=\"images/social/telegram.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://discord.gg/mpySAJp\">\n                  <Image src=\"images/social/discord.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://medium.com/@idlefinance\">\n                  <Image src=\"images/social/medium.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://github.com/Idle-Labs/\">\n                  <Image src=\"images/social/github.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://www.linkedin.com/company/idlefinance\">\n                  <Image src=\"images/social/linkedin.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://defipulse.com/defi-list\">\n                  <Image src=\"images/social/defi-pulse.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n              </Flex>\n            </Flex>\n          </Flex>\n        </Flex>\n        <Flex\n          width={1}\n          height={['auto','100%']}\n          flexDirection={'column'}\n          alignItems={['center','flex-end']}\n          justifyContent={['center','flex-end']}\n        >\n          <Flex\n            p={2}\n            width={1}\n            alignItems={'center'}\n            justifyContent={'center'}\n            backgroundColor={'dark-blue'}\n            flexDirection={['column','row']}\n          >\n            <Text\n              color={'white'}\n              textAlign={['center','flex-end']}\n            >\n              &copy; {currYear} - Idle Labs Inc.\n            </Text>\n            <RouterLink\n              color={'blue'}\n              to={'/terms-of-service'}\n              style={{textDecoration:'none'}}\n            >\n              <Text\n                pl={2}\n                color={'#0df'}\n                textAlign={['center','flex-end']}\n              >\n                Terms of Service\n              </Text>\n            </RouterLink>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default Footer;\n","import React, { Component } from 'react';\nimport styles from './TableCellHeader.module.scss';\nimport { Flex, Heading, Icon, Link, Tooltip } from \"rimble-ui\";\n\nclass TableCellHeader extends Component {\n  render() {\n\n    const ColTitle = (props) => (\n      <Heading.h4\n        fontWeight={[3,4]}\n        color={'cellTitle'}\n        style={{\n          width:'100%',\n          whiteSpace:'nowrap'\n        }}\n        fontSize={['10px',3]}\n        lineHeight={'initial'}\n        {...props}\n      >\n        {props.children}\n      </Heading.h4>\n    );\n\n    return (\n      <Flex\n        width={this.props.width}\n      >\n        {\n          (this.props.desc && this.props.desc.length>1) ? (\n            <Flex\n              alignItems={'center'}\n            >\n              <ColTitle\n                {...this.props}\n              />\n              <Link\n                style={{\n                  cursor:'pointer'\n                }}\n                onClick={ e => this.props.openTooltipModal(this.props.title,this.props.desc) }\n              >\n                <Tooltip\n                  placement={'top'}\n                  message={'Click to read the description'}\n                >\n                  <Icon\n                    ml={1}\n                    name={\"Info\"}\n                    color={'cellTitle'}\n                    className={styles.tooltip}\n                    size={ this.props.isMobile ? '1em' : '1.2em'}\n                  />\n                </Tooltip>\n              </Link>\n            </Flex>\n          ) : (\n            <ColTitle\n              {...this.props}\n            />\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TableCellHeader;\n","import React, { Component } from 'react';\nimport { Flex, Loader, Text } from \"rimble-ui\";\n\nclass FlexLoader extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        justifyContent={'center'}\n        {...this.props.flexProps}\n      >\n        <Loader {...this.props.loaderProps} />\n        {\n          this.props.text &&\n            <Text {...this.props.textProps}>{this.props.text}</Text>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default FlexLoader;\n","import React, { Component } from \"react\";\nimport { Button, Image, Flex, Text, Icon, Box } from 'rimble-ui';\n\nclass ImageButton extends Component {\n\n  render() {\n\n    const isMobile = typeof this.props.isMobile !== 'undefined' ? this.props.isMobile : false;\n    const image = this.props.imageSrc ? (<Image width={'auto'} src={this.props.imageSrc} {...this.props.imageProps} />) : ( this.props.iconName ? (<Icon name={this.props.iconName} {...this.props.iconProps} />) : null );\n    const caption = (<Text textAlign={ isMobile ? 'left' : 'center'} fontSize={2} fontWeight={3} color={'dark-gray'}>{this.props.caption}</Text>);\n\n    return (\n        <Button\n          color={'white'}\n          borderRadius={3}\n          px={ isMobile ? [3,4] : 4 }\n          py={ isMobile ? 0 : [3,4] }\n          my={ isMobile ? 2 : [2,2] }\n          mx={ isMobile ? 0 : [0,2] }\n          onClick={ this.props.handleClick }\n          height={ isMobile ? '58px' : ['150px','170px']}\n          mainColor={this.props.isActive ? 'cardBgHover' : 'cardBg'}\n          contrastColor={this.props.isActive ? 'cardBgHover' : 'cardBg'}\n          width={this.props.width ? this.props.width : (isMobile ? '100%' : ['150px','170px'])}\n          style={this.props.buttonStyle ? this.props.buttonStyle : (isMobile ? {justifyContent:'flex-start'} : null)}\n          {...this.props.buttonProps}\n        >\n          <>\n            {\n              this.props.badge && (\n                <Box\n                  position={'absolute'}\n                  borderRadius={'16px'}\n                  backgroundColor={ this.props.badge.bgColor ? this.props.badge.bgColor : 'blue' }\n                  style={ isMobile ? {right:'-25px',top:'-17px'} : {right:'-25px',top:'-25px'} }\n                  px={['5px','7px']}\n                  py={['1px','3px']}\n                >\n                  <Text\n                    fontWeight={3}\n                    fontSize={'10px'}\n                    color={ this.props.badge.color ? this.props.badge.color : '#fff' }\n                  >\n                  {this.props.badge.text}\n                  </Text>\n                </Box>\n              )\n            }\n            <Flex flexDirection={ isMobile ? 'row' : 'column'} justifyContent={ isMobile ? 'flex-start' : 'center'} alignItems={'center'}>\n              <Flex width={ isMobile ? '45px' : 1 } mr={ isMobile ? 2 : 0 } justifyContent={ isMobile ? 'flex-start' : 'center' }>\n                { this.props.captionPos && this.props.captionPos === 'top' ? caption : image }\n              </Flex>\n              <Flex width={ isMobile ? 'auto' : 1 } flexDirection={'column'} justifyContent={ isMobile ? 'flex-start' : 'center' } >\n                { this.props.captionPos && this.props.captionPos === 'top' ? image : caption }\n                {\n                  this.props.subcaption && this.props.subcaption.split('\\n').map((v,i) => {\n                    // Smaller caption for second line\n                    if (i){\n                      v = (<small>{v}</small>);\n                    }\n                    return (\n                      <Text key={`subcaption_${i}`} lineHeight={'1.3'} textAlign={ isMobile ? 'left' : 'center'} color={'darkGray'} fontWeight={1} fontSize={1}>{v}</Text>\n                    );\n                  })\n                }\n              </Flex>\n            </Flex>\n          </>\n        </Button>\n    );\n  }\n}\nexport default ImageButton;\n","import { Line } from '@nivo/line';\nimport CountUp from 'react-countup';\nimport React, { Component } from 'react';\nimport { linearGradientDef } from '@nivo/core'\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport CustomTooltip from '../CustomTooltip/CustomTooltip';\nimport VariationNumber from '../VariationNumber/VariationNumber';\nimport AllocationChart from '../AllocationChart/AllocationChart';\nimport CustomTooltipRow from '../CustomTooltip/CustomTooltipRow';\nimport { Image, Text, Loader, Button, Tooltip, Icon, Flex } from \"rimble-ui\";\n\nclass AssetField extends Component {\n\n  state = {\n    ready:false\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const tokenChanged = prevProps.token !== this.props.token;\n    const accountChanged = prevProps.account !== this.props.account;\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    const contractInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized && this.props.contractsInitialized;\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (fieldChanged || tokenChanged || accountChanged || transactionsChanged || (contractInitialized && !this.state.ready)){\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.loadField();\n      });\n    } else if (mobileChanged || themeModeChanged){\n      const oldState = Object.assign({},this.state);\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  loadField = async(fieldName=null) => {\n    // Exit if component unmounted\n    // console.log('loadField',this.props.fieldInfo.name,this.props.account,this.props.token,this.props.tokenConfig);\n\n    if (this.componentUnmounted || !this.props.token || !this.props.tokenConfig){\n      return false;\n    }\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const setState = fieldName === null;\n    const fieldInfo = this.props.fieldInfo;\n    if (!fieldName){\n      fieldName = fieldInfo.name;\n    }\n\n    const fieldProps = fieldInfo.props;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    // const addCurveApy = typeof this.props.addCurveApy !== 'undefined' ? this.props.addCurveApy : false;\n    const addGovTokens = typeof this.props.addGovTokens !== 'undefined' ? this.props.addGovTokens : true;\n\n    let output = null;\n    if (this.props.token){\n      switch (fieldName){\n        case 'tokenBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              tokenBalance:output.toString()\n            });\n          }\n        break;\n        case 'govTokens':\n          const govTokens = this.functionsUtil.getTokenGovTokens(this.props.tokenConfig);\n          const getGovTokensDistributionSpeed = await this.functionsUtil.getGovTokensDistributionSpeed(this.props.tokenConfig);\n          this.setStateSafe({\n            govTokens,\n            getGovTokensDistributionSpeed\n          });\n        break;\n        case 'tokenPrice':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            let tokenPrice = '-';\n            if (typeof this.props.tokenConfig.showPrice === 'undefined' || this.props.tokenConfig.showPrice){\n              tokenPrice = output.toString();\n            }\n            this.setStateSafe({\n              tokenPrice\n            });\n          }\n        break;\n        case 'fee':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              fee:output.toString()\n            });\n          }\n        break;\n        case 'amountToMigrate':\n          const {\n            oldContractBalanceFormatted\n          } = await this.functionsUtil.checkMigration(this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (setState && oldContractBalanceFormatted){\n            this.setStateSafe({\n              amountToMigrate:oldContractBalanceFormatted.toString()\n            });\n            output = oldContractBalanceFormatted;\n          }\n        break;\n        case 'amountLent':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              amountLent:output.toString()\n            });\n          }\n        break;\n        case 'idleTokenBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              idleTokenBalance:output.toString()\n            });\n          }\n        break;\n        case 'redeemableBalanceCounterCurve':\n          const {\n            redeemableBalanceCurveEnd,\n            redeemableBalanceCurveStart\n          } = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (redeemableBalanceCurveStart && redeemableBalanceCurveEnd){\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                redeemableBalanceCurveEnd,\n                redeemableBalanceCurveStart\n              });\n            }\n\n            output = {\n              redeemableBalanceCurveEnd,\n              redeemableBalanceCurveStart\n            };\n          }\n        break;\n        case 'redeemableBalanceCounter':\n          const {\n            redeemableBalanceEnd,\n            redeemableBalanceStart\n          } = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (redeemableBalanceStart && redeemableBalanceEnd){\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                redeemableBalanceEnd,\n                redeemableBalanceStart\n              });\n            }\n\n            output = {\n              redeemableBalanceEnd,\n              redeemableBalanceStart\n            };\n          }\n        break;\n        case 'earnings':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earnings:output.toString()\n            });\n          }\n        break;\n        case 'feesCounter':\n          const [earningsCounter,feePercentage] = await Promise.all([\n            this.loadField('earningsCounter'),\n            this.functionsUtil.getTokenFees(this.props.tokenConfig)\n          ]);\n\n          if (earningsCounter && earningsCounter.earningsStart && earningsCounter.earningsEnd && feePercentage){\n\n            const feesStart = earningsCounter.earningsStart.times(feePercentage);\n            const feesEnd = earningsCounter.earningsEnd.times(feePercentage);\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                feesEnd,\n                feesStart\n              });\n            }\n\n            output = {\n              feesEnd,\n              feesStart\n            };\n          }\n        break;\n        case 'earningsCounterCurve':\n          const [curveApy,earningsCurveStart,amountLentCurve] = await Promise.all([\n            this.functionsUtil.getCurveAPY(),\n            this.functionsUtil.loadAssetField('earningsCurve',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('amountLentCurve',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens)\n          ]);\n\n          if (amountLentCurve && earningsCurveStart && curveApy){\n            const earningsCurveEnd = amountLentCurve.gt(0) ? amountLentCurve.times(curveApy.div(100)).plus(earningsCurveStart) : 0;\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                earningsCurveEnd,\n                earningsCurveStart\n              });\n            }\n\n            output = {\n              earningsCurveEnd,\n              earningsCurveStart\n            };\n          }\n        break;\n        case 'earningsCounter':\n          let [tokenAPY2,earningsStart,amountLent2] = await Promise.all([\n            this.functionsUtil.loadAssetField('apy',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('earnings',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('amountLent',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens)\n          ]);\n\n\n          if (amountLent2 && earningsStart && tokenAPY2){\n            const earningsEnd = amountLent2.gt(0) ? amountLent2.times(tokenAPY2.div(100)).plus(earningsStart) : 0;\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                earningsEnd,\n                earningsStart\n              });\n            }\n\n            output = {\n              earningsEnd,\n              earningsStart\n            };\n          }\n        break;\n        case 'redeemableBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              redeemableBalance:output.toString()\n            });\n          }\n        break;\n        case 'score':\n          const tokenScore = await this.functionsUtil.getTokenScore(this.props.tokenConfig,isRisk);\n          if (setState){\n            this.setStateSafe({\n              score:tokenScore ? tokenScore : false\n            });\n          }\n          output = tokenScore;\n        break;\n        case 'pool':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              poolSize:output.toString()\n            });\n          }\n        break;\n        case 'earningsPercCurve':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earningsPercCurveDirection:parseFloat(output)>0 ? 'up' : 'down',\n              earningsPercCurve:parseFloat(output).toFixed(decimals)\n            });\n          }\n        break;\n        case 'earningsPerc':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earningsPerc:parseFloat(output).toFixed(decimals),\n              earningsPercDirection:parseFloat(output)>0 ? 'up' : 'down'\n            });\n          }\n        break;\n        case 'apr':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            let tokenAPR = '-';\n            if (typeof this.props.tokenConfig.showAPR === 'undefined' || this.props.tokenConfig.showAPR){\n              tokenAPR = parseFloat(output).toFixed(decimals);\n            }\n            this.setStateSafe({\n              tokenAPR\n            });\n          }\n        break;\n        case 'oldApy':\n          if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.oldContract){\n            const oldTokenConfig = Object.assign({},this.props.tokenConfig);\n            oldTokenConfig.idle = Object.assign({},this.props.tokenConfig.migration.oldContract);\n            oldTokenConfig.protocols = Object.values(this.props.tokenConfig.protocols);\n\n            // Override token with name\n            oldTokenConfig.idle.token = oldTokenConfig.idle.name;\n\n            // Replace protocols with old protocols\n            if (oldTokenConfig.migration.oldProtocols){\n              oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n                const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n                if (foundProtocol){\n                  const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                  oldTokenConfig.protocols[protocolPos] = oldProtocol;\n                }\n              });\n            }\n\n            output = await this.functionsUtil.loadAssetField('apy',this.props.token,oldTokenConfig,this.props.account,false);\n\n          } else {\n            output = await this.loadField('apyNoGov');\n          }\n\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                oldAPY:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                oldAPY:false\n              });\n            }\n          }\n        break;\n        case 'apyNoGov':\n          output = await this.functionsUtil.loadAssetField('apy',this.props.token,this.props.tokenConfig,this.props.account,false);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                tokenAPYNoGov:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                tokenAPYNoGov:false\n              });\n            }\n          }\n        break;\n        case 'curveApy':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                curveApy:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                curveApy:false\n              });\n            }\n          }\n        break;\n        case 'curveAvgSlippage':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                curveAvgSlippage:(parseFloat(output)*100).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                curveAvgSlippage:false\n              });\n            }\n          }\n        break;\n\n        case 'apy':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              const tokenAPY = parseFloat(output).toFixed(decimals);\n              const showTooltip = !this.props.isMobile && (fieldInfo.showTooltip !== undefined && fieldInfo.showTooltip);\n              const govTokensAprs = showTooltip ? await this.functionsUtil.getGovTokensAprs(this.props.token,this.props.tokenConfig) : null;\n              this.setStateSafe({\n                tokenAPY,\n                govTokensAprs\n              });\n            } else {\n              this.setStateSafe({\n                tokenAPY:false\n              });\n            }\n          }\n        break;\n        case 'allocationChart':\n          let allocationChartWidth = 0;\n          let allocationChartHeight = 0;\n\n          const resizeAllocationChart = () => {\n            const allocationChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (allocationChartRowElement){\n              const $allocationChartRowElement = window.jQuery(allocationChartRowElement);\n              allocationChartWidth = $allocationChartRowElement.innerWidth()-parseFloat($allocationChartRowElement.css('padding-right'))-parseFloat($allocationChartRowElement.css('padding-left'));\n              allocationChartHeight = $allocationChartRowElement.innerHeight();\n\n              // Make it a square\n              allocationChartWidth = parseInt(allocationChartWidth)>0 ? Math.min(allocationChartWidth,allocationChartHeight) : allocationChartHeight;\n              allocationChartHeight = allocationChartWidth;\n\n\n              if (allocationChartWidth !== this.state.allocationChartWidth){\n                if (setState){\n                  this.setStateSafe({\n                    allocationChartWidth,\n                    allocationChartHeight\n                  });\n                }\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAllocationChart();\n          window.removeEventListener('resize', resizeAllocationChart.bind(this));\n          window.addEventListener('resize', resizeAllocationChart.bind(this));\n\n          if (setState){\n            this.setStateSafe({\n              allocationChartWidth,\n              allocationChartHeight\n            });\n          }\n        break;\n        case 'aprChart':\n          // Set start timestamp for v3 tokens\n          const aprChartEndTimestamp = isRisk ? this.functionsUtil.getGlobalConfig(['stats','versions','v3','endTimestamp']) : null;\n          const aprChartStartTimestamp = isRisk ? aprChartEndTimestamp-(7*24*60*60) : Math.max(this.functionsUtil.getGlobalConfig(['stats','versions','v3','startTimestamp']),parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(new Date()).format('DD/MM/YYYY 00:00:00'),'DD/MM/YYYY HH:mm:ss').subtract(7,'days')._d.getTime()/1000));\n\n          // Check for cached data\n          let aprChartData = null;\n          const cachedDataKey = `aprChart_${this.props.tokenConfig.address}_${isRisk}`;\n          const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n\n          aprChartData = [{\n            id:this.props.token,\n            color: this.props.color ? this.props.color : 'hsl('+this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token,'color','hsl']).join(',')+')',\n            data: []\n          }];\n\n          if (cachedData !== null){\n            aprChartData = cachedData;\n          } else {\n\n            // FAKE CHART DATA\n            if (this.props.token === 'COMP'){\n              aprChartData[0].data = [];\n              const startTimestamp = new Date().getTime();\n              let y = 20;\n              for (var i=0; i<=16; i++) {\n                const mDate = this.functionsUtil.strToMoment(startTimestamp).add(i,'day');\n                const x = mDate.format(\"YYYY/MM/DD HH:mm\");\n                // Grow\n                if ((i>=5 && i<=10) || (i>=13)){\n                  y+=Math.random()*4+2; // Risk\n                  // y+=Math.random()*7+4; // Best\n                // Decrease\n                } else {\n                  y-=Math.random()*3+1; // Risk\n                  // y-=Math.random()*3+1; // Best\n                }\n                aprChartData[0].data.push({x,y});\n              }\n            } else {\n              const frequencySeconds = this.functionsUtil.getFrequencySeconds('hour',12);\n              const apiResultsAprChart = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,aprChartStartTimestamp,aprChartEndTimestamp,false,frequencySeconds);\n\n              // if (isRisk){\n              //   debugger;\n              // }\n\n              apiResultsAprChart.forEach((d,i) => {\n                const x = this.functionsUtil.strToMoment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n                const y = parseFloat(this.functionsUtil.fixTokenDecimals(d.idleRate,18));\n                aprChartData[0].data.push({ x, y });\n              });\n            }\n\n            this.functionsUtil.setCachedData(cachedDataKey,aprChartData);\n          }\n\n\n          // Add same value\n          if (aprChartData[0].data.length === 1){\n            const newPoint = Object.assign({},aprChartData[0].data[0]);\n            newPoint.x = this.functionsUtil.strToMoment(newPoint,\"YYYY/MM/DD HH:mm\").add(1,'hours').format(\"YYYY/MM/DD HH:mm\")\n            aprChartData[0].data.push(newPoint);\n          }\n\n          let aprChartWidth = 0;\n          let aprChartHeight = 0;\n\n          const resizeAprChart = () => {\n            const aprChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (aprChartRowElement){\n              const $aprChartRowElement = window.jQuery(aprChartRowElement);\n              aprChartWidth = $aprChartRowElement.innerWidth()-parseFloat($aprChartRowElement.css('padding-right'))-parseFloat($aprChartRowElement.css('padding-left'));\n              aprChartHeight = $aprChartRowElement.innerHeight();\n              if (aprChartWidth !== this.state.aprChartWidth || !this.state.aprChartHeight){\n                this.setStateSafe({\n                  aprChartWidth,\n                  aprChartHeight: this.state.aprChartHeight ? this.state.aprChartHeight : aprChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAprChart();\n          window.removeEventListener('resize', resizeAprChart.bind(this));\n          window.addEventListener('resize', resizeAprChart.bind(this));\n\n          // Set chart type\n          const aprChartType = Line;\n\n          const aprChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            axisLeft:null,\n            animate:false,\n            axisBottom:null,\n            enableArea:true,\n            areaOpacity:0.1,\n            curve:'monotoneX',\n            enableGridX:false,\n            enableGridY:false,\n            pointBorderWidth:2,\n            isInteractive:true,\n            colors:d => d.color,\n            defs:[\n              linearGradientDef('gradientArea', [\n                  { offset: 0, color: '#faf047' },\n                  { offset: 50, color: '#e4b400' },\n              ])\n            ],\n            enableSlices:this.props.isMobile ? false : 'x',\n            yFormat:value => parseFloat(value).toFixed(2)+'%',\n            fill:[\n              { match: { id: this.props.token } , id: 'gradientArea' },\n            ],\n            margin: { top: 10, right: 0, bottom: 0, left: 0 },\n            sliceTooltip:(slideData) => {\n              const { slice } = slideData;\n              const point = slice.points[0];\n              return (\n                <CustomTooltip\n                  point={point}\n                >\n                  {\n                  typeof slice.points === 'object' && slice.points.length &&\n                    slice.points.map(point => {\n                      const protocolName = point.serieId;\n                      const protocolEarning = point.data.yFormatted;\n                      // const protocolApy = point.data.apy;\n                      return (\n                        <CustomTooltipRow\n                          key={point.id}\n                          color={point.color}\n                          label={protocolName}\n                          value={protocolEarning}\n                        />\n                      );\n                    })\n                  }\n                </CustomTooltip>\n              );\n            }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                aprChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              aprChartType,\n              aprChartData,\n              aprChartProps,\n              aprChartWidth,\n              aprChartHeight\n            });\n          }\n          output = aprChartData;\n        break;\n        case 'performanceChart':\n          let firstTokenPrice = null;\n          let firstIdleBlock = null;\n          /*\n          let performanceChartWidth = 0;\n          let performanceChartHeight = 0;\n\n          const performanceChartRowElement = document.getElementById(this.props.rowId) ? document.getElementById(this.props.rowId) : document.getElementById(this.props.parentId);\n          if (performanceChartRowElement){\n            performanceChartWidth = parseFloat(performanceChartRowElement.offsetWidth)>0 ? performanceChartRowElement.offsetWidth* (this.props.colProps ? this.props.colProps.width : 1) : 0;\n            performanceChartHeight = parseFloat(performanceChartRowElement.offsetHeight);\n          }\n          */\n\n          let performanceChartWidth = 0;\n          let performanceChartHeight = 0;\n\n          const resizePerformanceChart = () => {\n            const PerformanceChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (PerformanceChartRowElement){\n              const $PerformanceChartRowElement = window.jQuery(PerformanceChartRowElement);\n              performanceChartWidth = $PerformanceChartRowElement.innerWidth()-parseFloat($PerformanceChartRowElement.css('padding-right'))-parseFloat($PerformanceChartRowElement.css('padding-left'));\n              performanceChartHeight = $PerformanceChartRowElement.innerHeight();\n              if (performanceChartWidth !== this.state.performanceChartWidth || !this.state.performanceChartHeight){\n                this.setStateSafe({\n                  performanceChartWidth,\n                  performanceChartHeight: this.state.performanceChartHeight ? this.state.performanceChartHeight : performanceChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizePerformanceChart();\n          window.removeEventListener('resize', resizePerformanceChart.bind(this));\n          window.addEventListener('resize', resizePerformanceChart.bind(this));\n\n          const apr_end_date = this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(new Date()).subtract(1,'day').format('YYYY-MM-DD 23:59'),'YYYY-MM-DD HH:mm');\n          const apr_start_date = apr_end_date.clone().subtract(1,'week');\n\n          // Set start timestamp for v3 tokens\n          const apr_start_timestamp =  Math.max(this.functionsUtil.getGlobalConfig(['stats','versions','v3','startTimestamp']),parseInt(apr_start_date._d.getTime()/1000));\n          // const apr_end_timestamp = parseInt(apr_end_date._d.getTime()/1000);\n\n          let apiResultsPerformanceChart = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,apr_start_timestamp,null,false,43200);\n\n          const idleTokenPerformance = apiResultsPerformanceChart.map((d,i) => {\n            let y = 0;\n            const x = this.functionsUtil.strToMoment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n            const tokenPrice = this.functionsUtil.fixTokenDecimals(d.idlePrice,this.props.tokenConfig.decimals);\n\n            if (!firstTokenPrice){\n              firstTokenPrice = tokenPrice;\n            } else {\n              y = parseFloat(tokenPrice.div(firstTokenPrice).minus(1).times(100));\n            }\n\n            if (firstIdleBlock === null){\n              firstIdleBlock = parseInt(d.blocknumber);\n            }\n\n            return { x, y };\n          });\n\n          const performanceChartData = [{\n            id:'Idle',\n            color: 'hsl('+this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token,'color','hsl']).join(',')+')',\n            data: idleTokenPerformance\n          }];\n\n          // Set chart type\n          const performanceChartType = Line;\n\n          const performanceChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            animate:false,\n            axisLeft:null,\n            axisBottom:null,\n            enableArea:true,\n            enableGridX:false,\n            enableGridY:false,\n            curve:'monotoneX',\n            enableSlices:false,\n            pointBorderWidth:1,\n            colors:d => d.color,\n            pointLabelYOffset:-12,\n            margin: { top: 0, right: 0, bottom: 0, left: 0 }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                performanceChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              performanceChartType,\n              performanceChartData,\n              performanceChartProps,\n              performanceChartWidth,\n              performanceChartHeight\n            });\n          }\n          output = performanceChartData;\n        break;\n        case 'custom':\n          const path = fieldInfo.path;\n          output = this.functionsUtil.getArrayPath(path,this.props.tokenConfig);\n          if (output){\n            this.setStateSafe({\n              [fieldName]:output\n            });\n          }\n        break;\n        default:\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              ready:true,\n              [fieldName]:output\n            });\n          }\n        break;\n      }\n    }\n\n    return output;\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n    let output = null;\n\n    const showLoader = fieldInfo.showLoader === undefined || fieldInfo.showLoader;\n    const loader = showLoader ? (<Loader size=\"20px\" />) : null;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    const tokenConfig = this.props.tokenConfig || this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token]);\n      \n    const maxPrecision = fieldProps && fieldProps.maxPrecision ? fieldProps.maxPrecision : 5;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    const minPrecision = fieldProps && fieldProps.minPrecision ? fieldProps.minPrecision : ( this.props.isMobile ? 3 : 4 );\n\n    switch (fieldInfo.name){\n      case 'iconTooltip':\n        const icon1 = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${this.props.token}.svg`;\n        output = (\n          <Tooltip\n            placement={'top'}\n            message={this.props.token}\n            {...fieldInfo.tooltipProps}\n          >\n            <Image src={icon1} {...fieldProps} />\n          </Tooltip>\n        );\n      break;\n      case 'icon':\n        const icon2 = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${this.props.token}.svg`;\n        output = (\n          <Image src={icon2} {...fieldProps} />\n        );\n      break;\n      case 'tokenName':\n        output = (\n          <Text {...fieldProps}>{this.props.token}</Text>\n        );\n      break;\n      case 'strategyIcon':\n        const strategyIcon = this.functionsUtil.getGlobalConfig(['strategies',this.props.tokenConfig.strategy,'icon']);\n        if (strategyIcon){\n          output = (\n            <Image src={strategyIcon} {...fieldProps} />\n          );\n        }\n      break;\n      case 'strategyName':\n        const strategyName = this.functionsUtil.getGlobalConfig(['strategies',this.props.tokenConfig.strategy,'title']);\n        output = (\n          <Text {...fieldProps}>{strategyName}</Text>\n        );\n      break;\n      case 'tokenBalance':\n        output = this.state.tokenBalance ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.tokenBalance} />\n        ) : loader\n      break;\n      case 'fee':\n        output = this.state.fee ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.fee} />\n        ) : loader\n      break;\n      case 'tokenPrice':\n        output = this.state.tokenPrice ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.tokenPrice} />\n        ) : loader\n      break;\n      case 'amountToMigrate':\n        output = this.state.amountToMigrate ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.amountToMigrate} />\n        ) : loader\n      break;\n      case 'idleTokenBalance':\n        output = this.state.idleTokenBalance ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.idleTokenBalance} />\n        ) : loader\n      break;\n      case 'redeemableBalanceCounterCurve':\n        output = this.state.ready && this.state.redeemableBalanceCurveStart && this.state.redeemableBalanceCurveEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.redeemableBalanceCurveEnd)}\n            start={parseFloat(this.state.redeemableBalanceCurveStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'redeemableBalanceCounter':\n        output = this.state.ready && this.state.redeemableBalanceStart && this.state.redeemableBalanceEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.redeemableBalanceEnd)}\n            start={parseFloat(this.state.redeemableBalanceStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'feesCounter':\n        output = this.state.ready && this.state.feesStart && this.state.feesEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.feesEnd)}\n            start={parseFloat(this.state.feesStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounterCurve':\n        output = this.state.ready && this.state.earningsCurveStart && this.state.earningsCurveEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsCurveEnd)}\n            start={parseFloat(this.state.earningsCurveStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounter':\n        output = this.state.ready && this.state.earningsStart && this.state.earningsEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsEnd)}\n            start={parseFloat(this.state.earningsStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'redeemableBalance':\n        output = this.state.redeemableBalance ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.redeemableBalance} />\n        ) : loader\n      break;\n      case 'govTokens':\n        output = this.state.govTokens && Object.keys(this.state.govTokens).length>0 ? (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'flex-start'}\n          >\n            {\n              Object.values(this.state.govTokens).map( (govTokenConfig,govTokenIndex) => (\n                <AssetField\n                  token={govTokenConfig.token}\n                  tokenConfig={govTokenConfig}\n                  key={`asset_${govTokenIndex}`}\n                  fieldInfo={{\n                    name:'iconTooltip',\n                    tooltipProps:{\n                      message:`${govTokenConfig.token}`+(this.state.getGovTokensDistributionSpeed && this.state.getGovTokensDistributionSpeed[govTokenConfig.token] ? `: ${this.state.getGovTokensDistributionSpeed[govTokenConfig.token].toFixed(decimals)}/${govTokenConfig.distributionFrequency} (for the whole pool)` : '')\n                    },\n                    props:{\n                      borderRadius:'50%',\n                      position:'relative',\n                      height:['1.1em','2em'],\n                      ml:govTokenIndex ? '-10px' : 0,\n                      zIndex:Object.values(this.state.govTokens).length-govTokenIndex,\n                      boxShadow:['1px 1px 1px 0px rgba(0,0,0,0.1)','1px 2px 3px 0px rgba(0,0,0,0.1)'],\n                    }\n                  }}\n                />\n              ))\n            }\n          </Flex>\n        ) : this.state.govTokens ? (\n          <Text {...fieldProps}>-</Text>\n        ) : loader\n      break;\n      case 'amountLentCurve':\n        output = this.state.amountLentCurve ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.amountLentCurve} />\n        ) : loader\n      break;\n      case 'amountLent':\n        output = this.state.amountLent ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.amountLent} />\n        ) : loader\n      break;\n      case 'pool':\n        output = this.state.poolSize ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.poolSize} />\n        ) : loader\n      break;\n      case 'score':\n        output = (this.props.tokenConfig && this.props.tokenConfig.defiScoreDisabled) ? <Text {...fieldProps}>N/A</Text> : ((this.state.score !== undefined && this.state.score !== null && this.functionsUtil.BNify(this.state.score).gt(0)) ? (\n          <SmartNumber {...fieldProps} decimals={2} number={this.state.score} />\n        ) : this.functionsUtil.BNify(this.state.score).lte(0) ? '-' : loader)\n      break;\n      case 'earningsPerc':\n        output = this.state.earningsPerc ?\n          (typeof fieldInfo.showDirection === 'undefined' || fieldInfo.showDirection) ? (\n            <VariationNumber\n              isMobile={this.props.isMobile}\n              direction={this.state.earningsPercDirection}\n            >\n              <Text {...fieldProps}>{this.state.earningsPerc}%</Text>\n            </VariationNumber>\n          ) : (\n            <Text {...fieldProps}>{this.state.earningsPerc}%</Text>\n          )\n        : loader\n      break;\n      case 'earningsPercCurve':\n        output = this.state.earningsPercCurve ?\n          (typeof fieldInfo.showDirection === 'undefined' || fieldInfo.showDirection) ? (\n            <VariationNumber\n              isMobile={this.props.isMobile}\n              direction={this.state.earningsPercCurveDirection}\n            >\n              <Text {...fieldProps}>{this.state.earningsPercCurve}%</Text>\n            </VariationNumber>\n          ) : (\n            <Text {...fieldProps}>{this.state.earningsPercCurve}%</Text>\n          )\n        : loader\n      break;\n      case 'earningsCurve':\n        output = this.state.earningsCurve ? (\n          <VariationNumber\n            direction={'up'}\n            isMobile={this.props.isMobile}\n          >\n            <SmartNumber\n              {...fieldProps}\n              decimals={decimals}\n              minPrecision={minPrecision}\n              number={this.state.earningsCurve}\n            />\n          </VariationNumber>\n        ) : loader\n      break;\n      case 'earnings':\n        output = this.state.earnings ? (\n          <VariationNumber\n            direction={'up'}\n            isMobile={this.props.isMobile}\n          >\n            <SmartNumber\n              {...fieldProps}\n              decimals={decimals}\n              minPrecision={minPrecision}\n              number={this.state.earnings}\n            />\n          </VariationNumber>\n        ) : loader\n      break;\n      case 'idleDistribution':\n        const governanceTokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n        const idleTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',governanceTokenName]);\n        output = this.state.idleDistribution ? (\n          <Text {...fieldProps}>+{this.state.idleDistribution.toFixed(decimals)} IDLE/{idleTokenConfig.distributionFrequency}</Text>\n        ) : loader\n      break;\n      case 'userDistributionSpeed':\n        output = this.state.userDistributionSpeed ? (\n          <Text {...fieldProps}>{this.state.userDistributionSpeed.toFixed(decimals)}/{this.props.tokenConfig.distributionFrequency}</Text>\n        ) : loader\n      break;\n      case 'distributionSpeed':\n        output = this.state.distributionSpeed ? (\n          <Text {...fieldProps}>{this.state.distributionSpeed.toFixed(decimals)}</Text>\n        ) : loader\n      break;\n      case 'apr':\n        output = this.state.tokenAPR ? (\n          <Text {...fieldProps}>{this.state.tokenAPR}{!isNaN(parseFloat(this.state.tokenAPR)) ? '%' : ''}</Text>\n        ) : loader\n      break;\n      case 'oldApy':\n        output = this.state.oldAPY !== undefined ? (\n          <Text {...fieldProps}>{this.state.oldAPY !== false ? this.state.oldAPY : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'apyNoGov':\n        output = this.state.tokenAPYNoGov !== undefined ? (\n          <Text {...fieldProps}>{this.state.tokenAPYNoGov !== false ? this.state.tokenAPYNoGov : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'curveApy':\n        output = this.state.curveApy !== undefined ? (\n          <Text {...fieldProps}>{this.state.curveApy !== false ? this.state.curveApy : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'curveAvgSlippage':\n        output = this.state.curveAvgSlippage !== undefined ? (\n          <Text {...fieldProps}>{this.state.curveAvgSlippage !== false ? this.state.curveAvgSlippage : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'apy':\n        output = this.state.tokenAPY !== undefined ? (\n          <Flex\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            <Text {...fieldProps}>{this.state.tokenAPY !== false ? this.state.tokenAPY : '-' }<small>%</small></Text>\n            {\n              this.state.govTokensAprs && Object.keys(this.state.govTokensAprs).length>0 && \n                <AssetField\n                  fieldInfo={{\n                    name:'tooltip',\n                    props:{\n                      iconProps:{\n                        ml:1\n                      },\n                      placement:'top',\n                      message:Object.keys(this.state.govTokensAprs).map( govToken => {\n                        const distributionFrequency = this.functionsUtil.getGlobalConfig(['govTokens',govToken,'distributionFrequency']);\n                        const tooltipMode = this.functionsUtil.getGlobalConfig(['govTokens',govToken,'aprTooltipMode']);\n                        let value = this.state.govTokensAprs[govToken].toFixed(decimals);\n                        switch (tooltipMode){\n                          default:\n                          case 'apr':\n                            value += '%';\n                          break;\n                          case 'distribution':\n                            value = `${value}/${distributionFrequency}`;\n                          break;\n                        }\n                        return `${govToken}: ${value}`\n                      }).join('; ')\n                    }\n                  }}\n                />\n            }\n          </Flex>\n        ) : loader\n      break;\n      case 'button':\n        const buttonLabel = typeof fieldInfo.label === 'function' ? fieldInfo.label(this.props) : fieldInfo.label;\n        output = (\n          <Button {...fieldProps} onClick={() => fieldProps.handleClick(this.props) }>{buttonLabel}</Button>\n        );\n      break;\n      case 'performanceChart':\n        output = this.state.performanceChartData ? (\n          <GenericChart\n            {...this.state.performanceChartProps}\n            type={this.state.performanceChartType}\n            data={this.state.performanceChartData}\n            width={this.state.performanceChartWidth}\n            height={this.state.performanceChartHeight}\n          />\n        ) : loader\n      break;\n      case 'allocationChart':\n        output = this.state.allocationChartWidth && this.state.allocationChartHeight ? (\n          <AllocationChart\n            {...this.props}\n            loaderProps={{\n              size:'20px'\n            }}\n            loaderText={''}\n            selectedToken={this.props.token}\n            width={this.state.allocationChartWidth}\n            height={this.state.allocationChartHeight}\n            inline={typeof this.props.inline !== 'undefined' ? this.props.inline : true}\n            showLoader={typeof this.props.showLoader !== 'undefined' ? this.props.showLoader : false}\n          />\n        ) : loader\n      break;\n      case 'tooltip':\n        output = (\n          <Tooltip\n            {...fieldProps}\n          >\n            <Icon\n              ml={2}\n              name={\"Info\"}\n              size={'1em'}\n              color={'cellTitle'}\n              {...fieldProps.iconProps}\n            />\n          </Tooltip>\n        );\n      break;\n      case 'aprChart':\n        output = this.state.aprChartData ? (\n          <GenericChart\n            {...this.state.aprChartProps}\n            type={this.state.aprChartType}\n            data={this.state.aprChartData}\n            width={this.state.aprChartWidth}\n            height={this.state.aprChartHeight}\n          />\n        ) : loader\n      break;\n      case 'custom':\n        let CustomComponent = null;\n        let customValue = this.state[fieldInfo.name];\n        switch (fieldInfo.type){\n          case 'number':\n            customValue = this.functionsUtil.BNify(customValue).toString();\n            CustomComponent = SmartNumber;\n            fieldProps.number = customValue;\n          break;\n          case 'icon':\n            CustomComponent = Icon;\n            fieldProps.name = customValue;\n            const customFieldName = Object.values(fieldInfo.path).pop();\n            if (this.props.tokenConfig[`${customFieldName}Props`]){\n              const customFieldProps = this.props.tokenConfig[`${customFieldName}Props`];\n              // Replace props\n              if (customFieldProps && Object.keys(customFieldProps).length){\n                Object.keys(customFieldProps).forEach(p => {\n                  fieldProps[p] = customFieldProps[p];\n                });\n              }\n            }\n          break;\n          default:\n            CustomComponent = Text;\n          break;\n        }\n        output = customValue ? (\n          <CustomComponent {...fieldProps}>{customValue}</CustomComponent>\n        ) : loader\n      break;\n      default:\n        let formattedValue = this.state[fieldInfo.name];\n        if (this.state[fieldInfo.name] && this.state[fieldInfo.name]._isBigNumber){\n          formattedValue = this.state[fieldInfo.name].toFixed(decimals);\n        }\n        output = this.state[fieldInfo.name] ? (\n          <Text {...fieldProps}>{formattedValue}</Text>\n        ) : loader\n      break;\n    }\n    return output;\n  }\n}\n\nexport default AssetField;\n","import { Link } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass ExtLink extends Component {\n\n  render() {\n    return (\n      <Link\n        target={'_blank'}\n        rel={'nofollow noopener noreferrer'}\n        {...this.props}\n      >\n        {this.props.children}\n      </Link>\n    );\n  }\n}\n\nexport default ExtLink;\n"],"sourceRoot":""}