{"version":3,"sources":["SmartNumber/SmartNumber.js","TrancheWelcome/TrancheWelcome.module.scss","PageNotFound/PageNotFound.module.scss","Breadcrumb/Breadcrumb.js","utilities/components/ShortHash.js","LoadingSpinner/LoadingSpinner.js","ButtonLoader/ButtonLoader.js","RoundIconButton/RoundIconButton.js","NetworkIndicator/NetworkIndicator.js","CustomTooltip/CustomTooltip.js","AllocationChart/AllocationChart.js","CustomTooltip/CustomTooltipRow.js","Faquestion/Faquestion.js","ActiveCoverages/ActiveCoverages.js","PortfolioEquity/PortfolioEquity.js","CardIconButton/CardIconButton.js","TrancheField/TrancheField.js","GenericSelector/GenericSelector.js","TxProgressBar/TxProgressBar.js","theme.js","AssetSelector/AssetSelector.js","TwitterShareButton/TwitterShareButton.js","utilities/components/ShareModal.js","utilities/components/ModalCard.module.scss","TwitterShareButton/TwitterShareButton.module.scss","TableCellHeader/TableCellHeader.module.scss","TransactionListFilters/TransactionListFilters.module.scss","Web3ConnectionButtons/Web3ConnectionButtons.module.scss","IconBox/IconBox.js","GenericChart/GenericChart.js","utilities/components/Header.module.scss","ExecuteTransaction/ExecuteTransaction.js","Tos/Tos.module.scss","TransactionField/TransactionField.js","utilities/IdleGovToken.js","utilities/FunctionsUtil.js","DashboardCard/DashboardCard.module.scss","utilities/components/BuyModal.js","TableRow/TableRow.js","DashboardCard/DashboardCard.js","TableHeader/TableHeader.js","FastBalanceSelector/FastBalanceSelector.js","Staking/Staking.js","GenericFaqs/GenericFaqs.js","SendTxWithBalance/SendTxWithBalance.js","utilities/components/LimitReachedModal.js","TrancheDetails/TrancheDetails.js","PortfolioEquityTranches/PortfolioEquityTranches.js","FundsOverviewTranche/FundsOverviewTranche.js","StakingRewardsTranche/StakingRewardsTranche.js","TranchePage/TranchePage.js","TranchesList/TranchesList.js","TrancheBox/TrancheBox.js","TrancheFlash/TrancheFlash.js","TrancheWelcome/TrancheWelcome.js","GenericPieChart/GenericPieChart.js","TotalBalanceCounter/TotalBalanceCounter.js","TotalEarningsCounter/TotalEarningsCounter.js","Tranches/Tranches.js","TokenSwap/TokenSwap.js","LpStaking/LpStaking.js","IdleStaking/IdleStaking.js","NexusMutual/NexusMutual.js","TokenWrapper/TokenWrapper.js","PortfolioDonut/PortfolioDonut.js","EarningsEstimation/EarningsEstimation.js","DashboardIconButton/DashboardIconButton.js","StrategyPage/StrategyPage.js","BatchDeposit/BatchDeposit.js","PolygonBridge/PolygonBridge.js","CoverProtocol/CoverProtocol.js","TokenMigration/TokenMigration.js","BatchMigration/BatchMigration.js","DeployB2BVesting/DeployB2BVesting.js","configs/globalConfigs.js","../node_modules/@maticnetwork/meta/network sync /^/.//.*//index/.json$","../node_modules/@maticnetwork/meta/network sync /^/.//.*/.json$","ConnectBox/ConnectBox.js","TransactionListFilters/TransactionListFilters.js","TransactionsList/TransactionsList.js","Migrate/Migrate.js","ChartCustomTooltipRow/ChartCustomTooltipRow.js","CustomList/CustomList.js","AssetsList/AssetsList.js","Tos/Tos.js","theme-dark.js","App/connectors/TorusConnector.js","App/connectors/AuthereumConnector.js","App/connectors/GnosisSafeConnector.js","App/connectors/WalletLinkConnector.js","App/connectors/WalletConnectConnector.js","App/connectors.js","utilities/components/WrongNetworkBanner.js","utilities/NetworkUtil.js","utilities/components/NoWeb3BrowserModal.js","utilities/components/NoWalletModal.js","utilities/GeneralUtil.js","utilities/components/WrongNetworkModal.js","utilities/components/TransactionFeeModal.js","Web3ConnectionButtons/Web3ConnectionButtons.js","utilities/components/ConnectionModal.js","utilities/components/ConnectionPendingModal.js","utilities/components/UserRejectedConnectionModal.js","utilities/components/LowFundsModal.js","utilities/ConnectionModalsUtil.js","utilities/components/ConnectionErrorModal.js","utilities/components/TransactionErrorModal.js","utilities/RimbleWeb3.js","utilities/components/Header.js","ScrollToTop/ScrollToTop.js","PageNotFound/PageNotFound.js","utilities/components/NetworkOverview.js","Web3Debugger/Web3Debugger.js","configs/availableTranches.js","utilities/TransactionToastMessages.js","utilities/TransactionToastUtil.js","App/App.js","serviceWorker.js","index.js","abis/compound/cDAI.js","abis/tokens/ERC20.js","configs/availableTokens.js","Footer/Footer.module.scss","utilities/components/ModalCard.js","colors.js","VariationNumber/VariationNumber.js","GenericSelector/GenericSelector.module.scss","LoadingSpinner/LoadingSpinner.module.scss","FlexLoader/FlexLoader.js","RoundButton/RoundButton.js","Footer/Footer.js","TableCellHeader/TableCellHeader.js","ChartCustomTooltip/ChartCustomTooltip.js","CustomField/CustomField.js","Title/Title.js","ExtLink/ExtLink.js","AssetField/AssetField.js","ImageButton/ImageButton.js"],"names":["SmartNumber","functionsUtil","this","setProps","props","FunctionsUtil","loadUtils","_this2","formattedNumber","number","isNaN","type","formatMoney","precision","abbreviateNumber","decimals","maxPrecision","minPrecision","flexProps","width","alignItems","flexDirection","justifyContent","Object","keys","length","forEach","p","showUnit","unit","unitPos","react__WEBPACK_IMPORTED_MODULE_8___default","a","createElement","rimble_ui__WEBPACK_IMPORTED_MODULE_7__","unitProps","Component","module","exports","trancheFlash","mobile","headerContainer","headerBgFiller","bgContainer","list","textContainer","Breadcrumb","_this","showPathMobile","react__WEBPACK_IMPORTED_MODULE_5___default","rimble_ui__WEBPACK_IMPORTED_MODULE_6__","id","handleClick","_RoundIconButton_RoundIconButton__WEBPACK_IMPORTED_MODULE_7__","buttonProps","border","height","iconSize","iconName","text","ml","fontSize","fontWeight","color","hoverColor","onClick","isMobile","path","map","index","link","pathLink","Link","Text","pl","style","maxWidth","overflow","whiteSpace","textOverflow","borderLeft","concat","theme","colors","divider","key","e","goToSection","ShortHash","state","componentUnmounted","loadData","prevProps","prevState","hash","newState","callback","setState","resolveAddress","shortenHash","getENSName","ensName","setStateSafe","loader","react__WEBPACK_IMPORTED_MODULE_7___default","rimble_ui__WEBPACK_IMPORTED_MODULE_8__","size","assign","display","LoadingSpinner","react_default","index_es","className","styles","mx","ButtonLoader","isLoading","src_LoadingSpinner_LoadingSpinner","buttonText","RoundIconButton","borderRadius","mainColor","disabled","minWidth","react__WEBPACK_IMPORTED_MODULE_6___default","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_7__","rimble_ui__WEBPACK_IMPORTED_MODULE_5__","name","NetworkIndicator","activeNetworks","defaultNetwork","loadNetworks","networkInitialized","availableNetworks","getGlobalConfig","networkId","networkConfig","value","config","label","requiredNetwork","getRequiredNetwork","find","network","setRequiredNetwork","JSON","stringify","required","_this3","_GenericSelector_GenericSelector__WEBPACK_IMPORTED_MODULE_11__","isSearchable","innerProps","px","py","customOptionProps","pr","options","CustomOptionValue","imageSrc","data","provider","rimble_ui__WEBPACK_IMPORTED_MODULE_10__","mr","src","defaultValue","onChange","selectNetwork","bind","CustomValueContainer","selectProps","flex","cursor","backgroundColor","isCorrectNetwork","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_9__","cardProps","isInteractive","CustomTooltip","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_7__","point","left","itemPos","xFormatted","mb","textAlign","children","AllocationChart","chartData","chartProps","selectedSlice","totalAllocation","protocolsAllocations","protocolsAllocationsPerc","selectedToken","getTokenAllocation","tokenConfig","padAngle","animate","borderWidth","cornerRadius","motionDamping","innerRadius","motionStiffness","d","onMouseEnter","onMouseLeave","tooltipFormat","v","sliceLabel","radialLabel","tooltip","container","inline","background","cardBg","labels","fontFamily","fonts","sansSerif","legends","slicesLabelsSkipAngle","radialLabelsSkipAngle","enableRadialLabels","radialLabelsTextXOffset","slicesLabelsTextColor","radialLabelsTextColor","radialLabelsLinkStrokeWidth","radialLabelsLinkDiagonalLength","radialLabelsLinkHorizontalLength","enableSlicesLabels","radialLabelsLinkColor","from","borderColor","modifiers","margin","top","right","bottom","protocols","protocolInfo","i","protocolName","protocolAddr","address","toLowerCase","protocolAllocationPercParsed","parseFloat","times","toFixed","push","globalConfigs","stats","hsl","join","capitalize","protocolIcon","icon","rimble_ui__WEBPACK_IMPORTED_MODULE_9__","position","zIndex","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_10__","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_13__","Pie","showLoader","CustomTooltipRow","flexBasis","textTransform","dangerouslySetInnerHTML","__html","Faquestion","isShowingAnswer","preventDefault","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","my","isOpened","boxShadow","h4","question","answer","Base","loaded","activeCoverages","loadCoverages","account","getActiveCoverages","coverages","c","availableTokens","includes","collateral","statusColors","transactions","status","statusIcon","statusColor","completed","failed","pending","statusIconProps","portfolioCoverage","react__WEBPACK_IMPORTED_MODULE_9___default","title","_Title_Title__WEBPACK_IMPORTED_MODULE_8__","titleProps","_CustomList_CustomList__WEBPACK_IMPORTED_MODULE_10__","rows","row","fileClaimUrl","openWindow","cols","fields","themeMode","parentProps","funcProps","actionLabel","actionDisabled","actionUrl","PortfolioEquity","startDate","chartwidth","chartHeight","loadChartData","quickDateSelectionChanged","quickDateSelection","enabledTokens","componentDidMount","mobileChanged","themeModeChanged","getEtherscanTxs","etherscanTxs","tokensBalance","firstTxTimestamp","asyncForEach","_ref","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","mark","_callee3","filteredTxs","amountLent","wrap","_context3","prev","next","values","filter","tx","token","BNify","action","Math","min","parseInt","timeStamp","tokenAmount","plus","minus","lt","balance","tokenPrice","idleTokens","stop","_x3","apply","arguments","currentDate","strToMoment","Date","clone","subtract","days","prevBalances","prevTimestamp","minChartValue","maxChartValue","aggregatedBalance","aggregatedBalancesKeys","tokensBalancesPerDate","currTimestamp","getTime","tokensData","isRisk","selectedStrategy","_ref2","_callee4","tokenAddress","_context4","getAvailableTokenAddress","getTokenApiData","sent","_x4","idleTokenBalance","foundBalances","tokensBalances","lastTokenData","lastTokenDataUnfiltered","pop","filteredTokenData","timestamp","tokenDecimals","filteredBalances","lastFilteredTx","idlePrice","fixTokenDecimals","newBalance","lastTx","lastTxBalance","gt","tokenUsdConversionRate","conversionRateField","chartToken","conversionRate","momentDate","isSameOrAfter","isSameOrBefore","formattedDate","format","max","frequencySeconds","_loop","aggregatedBalances","date","x","y","balances","itemIndex","item","floor","toUpperCase","yFormatDecimals","gridYStep","gridYValues","gridYValue","axisBottomIndex","daysCount","daysFrequency","ceil","xScale","yScale","stacked","xFormat","yFormat","axisBottom","legend","tickSize","tickPadding","orient","legendOffset","tickValues","legendPosition","pointSize","useMesh","axisLeft","tickRotation","pointLabel","enableArea","enableSlices","enableGridY","curve","enableGridX","pointBorderWidth","pointLabelYOffset","areaBaselineValue","pointColor","areaOpacity","axis","ticks","fill","grid","line","stroke","lineChartStroke","strokeDasharray","sliceTooltip","slideData","slice","points","_ChartCustomTooltip_ChartCustomTooltip__WEBPACK_IMPORTED_MODULE_11__","_ChartCustomTooltipRow_ChartCustomTooltipRow__WEBPACK_IMPORTED_MODULE_12__","serieId","yFormatted","formattedBalance","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_10__","Line","parentId","parentIdHeight","CardIconButton","isActive","isDisabled","align","image","imageProps","useIconOnly","iconColor","iconProps","isSidebar","iconBgColor","actionBg","redeem","textProps","TrancheField","ready","loadField","_callee","fieldName","fieldInfo","fieldProps","addGovTokens","formatValue","addTokenName","output","_args","_context","undefined","protocol","abrupt","t0","loadTrancheField","tranche","trancheConfig","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_1__","tokenChanged","accountChanged","trancheChanged","protocolChanged","fieldChanged","contractInitialized","contractsInitialized","transactionsChanged","oldState","rimble_ui__WEBPACK_IMPORTED_MODULE_13__","trancheDetails","rgb","hex","buttonLabel","_CustomField_CustomField__WEBPACK_IMPORTED_MODULE_11__","feesCounter","feesStart","feesEnd","react_countup__WEBPACK_IMPORTED_MODULE_8___default","delay","decimal","separator","useEasing","duration","end","start","formattingFn","n","countUpRef","ref","earningsCounter","earningsStart","earningsEnd","_ref3","govTokenConfig","govTokenIndex","_AssetField_AssetField__WEBPACK_IMPORTED_MODULE_10__","tooltipProps","message","getGovTokensDistributionSpeed","distributionFrequency","formattedValue","_isBigNumber","GenericSelector","loadComponents","selectedTokenChanged","optionsChanged","defaultValueChanged","componentsChanged","ControlComponent","menuIsOpen","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_12__","CustomIndicatorSeparator","CustomMenu","mt","CustomInputContainer","fontSizes","copyColor","fontWeights","searchInput","dark","searchInputHidden","CustomOption","selectedValue","o","indexOf","genericSelector","isFocused","react_select__WEBPACK_IMPORTED_MODULE_7__","components","Menu","Option","Control","Input","SingleValue","IndicatorSeparator","TxProgressBar","txCount","error","ended","percentage","processing","txTimestamp","initialized","estimatedTime","remainingTime","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default","initProgressBar","getTransaction","transaction","Promise","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__","_callee2","resolve","reject","_context2","web3","eth","err","_x","_x2","getBlockTime","pt","blockTime","axios","get","getPredictionTable","_callee5","predictTable","_context5","getTxEstimatedTime","gasPrice","prediction","gasprice","pdValues","_estimateWait","gas","txMeanSecs","block_time","customLog","calculateRemainingTime","_callee6","secondsPassed","timePassed","_context6","blockNumber","div","toString","setTimeout","updateProgressBar","getTxInfo","_callee7","txProgressBarKey","txHash","txProgressBarData","_ref8","_ref9","_context7","localStorage","getItem","parse","all","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__","setLocalStorage","_callee8","_context8","window","clearTimeout","gasoffered","minedProb","expectedWait","sum1","sum2","prob","exp","minutes","seconds","substr","currentNetwork","react__WEBPACK_IMPORTED_MODULE_10___default","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_11__","textColor","loaderProps","endMessage","waitText","span","renderRemainingTime","loadingMessage","sendingMessage","target","rel","href","getEtherscanTransactionUrl","explorer","cancelTransaction","cancelTextColor","cancelTextHoverColor","_colors__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","polished__WEBPACK_IMPORTED_MODULE_1__","__webpack_exports__","breakpoints","letterSpacings","lineHeights","solid","copy","serif","counter","space","radii","widths","minWidths","maxWidths","heights","minHeights","maxHeights","borders","borderWidths","shadows","opacity","primary","blue","base","gradient-bg","primary-light","light","primary-dark","bgBlue","tick","dark-blue","skyBlue","lightBlue","subColor","black","baseColors","near-black","dark-gray","mid-gray","gray","grey","silver","light-silver","moon-gray","light-gray","near-white","white","transparent","green","connect","newblue","alert","arrowActive","arrowInactive","selectBgFocused","selectBg","backButtonBg","wrongNetworkBannerBg","dashboardBg","statValue","boxBorder","cellTitle","cellText","divider2","deposit","migrate","menuBg","menuHover","flashColor","menuRightBorder","menuIconActive","cardBgContrast","cardHoverShadow","cardBgHover","cardBorder","pageActive","pageInactive","send","swap","boost","swapout","curvein","receive","default","curveout","withdraw","curvedepositin","curvedepositout","blacks","whites","zIndices","messageStyle","shade","tint","success","warning","yellow","danger","red","info","buttons","--main-color","--contrast-color","normal","buttonSizes","small","padding","medium","large","AssetSelector","_AssetField_AssetField__WEBPACK_IMPORTED_MODULE_9__","showCustomField","cachedData","setCachedData","showBalance","changeToken","TwitterShareButton","share","sendGoogleAnalyticsEvent","eventCategory","eventAction","eventLabel","parent","w","innerWidth","open","tweet","contrastColor","twitterIcon","ShareModal","closeModal","regenerator_default","getGlobalConfigs","analytics","google","events","enabled","escape","customText","isOpen","ModalCard","closeFunc","confettiEnabled","react_confetti_default","run","recycle","innerHeight","Header","Body","src_TwitterShareButton_TwitterShareButton","React","bg","radioBtn","button","IconBox","isVisible","GenericChart","addEventListener","handleWindowSizeChange","removeEventListener","chartContainer","document","getElementById","chartWidth","offsetWidth","chartContainerH","ChartType","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_7__","minHeight","loaderText","gradientButton","empty","select","selectDark","input","ExecuteTransaction","txStatus","loading","console","log","eventData","methodName","contractName","getTransactionError","callbackReceipt","transactionHash","params","getTransactionParams","getTransactionParamsAsync","transactionParams","sendRawTransaction","contractMethodSendWrapper","ExecuteComponent","_TxProgressBar_TxProgressBar__WEBPACK_IMPORTED_MODULE_11__","progressBarProps","execute","componentProps","TransactionField","hashChanged","bgColor","rimble_ui__WEBPACK_IMPORTED_MODULE_12__","_utilities_components_ShortHash__WEBPACK_IMPORTED_MODULE_11__","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_9__","amount","tokenSymbol","iconSrc","CustomComponent","customValue","getArrayPath","Image","Icon","IdleGovToken","classCallCheck","tokenName","getBalance","asyncToGenerator","getTokenBalance","claimRewards","getPriorVotes","priorVotes","_args3","genericContractCall","refreshIdleSpeed","getUnclaimedTokens","getAPR","_ref6","IDLETokenConfig","cachedDataKey","APR","_ref7","idleDistribution","tokenAllocation","DAITokenConfig","tokenPool","idleDistributedPerYearUSD","_args6","idle","getDistribution","slicedToArray","getUniswapConversionRate","lte","convertTokenBalance","totalAllocationWithUnlent","getSpeed","idleTokenAddress","idleSpeeds","getCachedDataWithLocalStorage","setCachedDataWithLocalStorage","_x5","_ref10","blocksPerYear","distribution","_x6","getUserDistribution","_callee10","fixByFrequency","currentNetworkId","totalSpeed","_args10","_context10","availableStrategies","getRequiredNetworkId","_ref12","_callee9","_ref13","_ref14","idleSpeed","userPoolShare","tokenSpeed","_context9","getUserPoolShare","_x7","fixDistributionSpeed","getAvgApr","_callee12","_args12","_context12","_ref16","_callee11","_ref17","_ref18","idleApr","_context11","_x8","ethereumjsABI","require","profiler","idleGovToken","trimEth","toBN","utils","BN","toEth","wei","fromWei","toWei","htmlDecode","innerHTML","childNodes","nodeValue","BNify_obj","s","BigNumber","String","_len","Array","_key","logs","messagesEnabled","moment","customLogError","_console","_len2","_key2","errorsEnabled","getContractByName","contract","contracts","normalizeSimpleIDNotification","replace","str","replaceArrayProps","arr1","arr2","replaceArrayPropsRecursive","objectSpread","stripHtml","html","tmp","textContent","innerText","scrollTo","to","scrollY","change","currentTime","easeInOutQuad","t","b","animateScroll","val","getQueryStringParameterByName","url","location","results","RegExp","exec","decodeURIComponent","getTxAction","depositProxyContractInfo","migrationContractAddr","migration","migrationContract","migrationContractOldAddrs","oldAddresses","batchMigration","batchMigrationContractAddr","isMigrationTx","contractAddress","isSendTransferTx","isReceiveTransferTx","isDepositTx","isRedeemTx","isSwapTx","shortHash","txStart","txEnd","addEthereumChain","chainId","getCurrentWeb3","currentProvider","request","chainName","providerConfig","blockExplorerUrl","rpcUrls","publicRpc","rpc","toHex","nativeCurrency","baseToken","symbol","blockExplorerUrls","method","ensConfig","TTL","ens","addressCheck","supportedNetworks","checkAddress","ENS","ensAddress","getEnsAddress","getName","getAddress","getAccountPortfolioTranches","availableTranches","portfolio","tranches","avgAPY","totalEarnings","totalAmountLent","totalEarningsPerc","_args5","tranchesBalance","totalBalance","protocolConfig","_ref4","_ref5","trancheTokenBalance","tranchePool","tranchePrice","tokenBalance","trancheUserInfo","trancheApy","poolShare","amountDeposited","trancheEarnings","loadTrancheFieldRaw","getTrancheUserInfo","toConsumableArray","trancheInfo","trancheWeight","getAccountPortfolio","orderedTokensBalance","depositedTokens","_args8","totalBalanceConverted","_ref11","tokenBalanceConverted","getIdleTokenPrice","tokenAprs","tokenAPY","tokenWeight","amountLentToken","tokenEarnings","getAmountDeposited","getTokenAprs","avgApy","web3RpcKey","web3Rpc","ethereum","Web3","providers","HttpProvider","getCurveAvgSlippage","processedTxs","processedHashes","curveTokensBalance","curveTxs","avgSlippage","totalDeposited","_args9","getCurveAvailableTokens","getCurveTxs","curveTokens","curveTokenPrice","price","received","slippage","deposited","getCurveAvgBuyPrice","avgBuyPrice","prevAvgBuyPrice","getAvgBuyPrice","_args11","idleTokensBalance","getFirstDepositTx","deposits","firstDepositTx","getDashboardSectionUrl","section","origin","asyncTimeout","ms","getDepositTimestamp","_callee13","firstDepositTxs","_args13","_context13","reduce","acc","getTrancheRewardTokensInfo","_callee15","stakingRewards","tokensDistribution","_context15","_ref19","_callee14","eventFilters","transfers","firstHarvest","latestHarvest","firstBlock","_ref20","_ref21","prevBlockInfo","lastBlockInfo","lastBlockPoolSize","poolSize","elapsedBlocks","elapsedSeconds","lastAmount","totalAmount","tokensPerBlock","tokensPerSecond","tokensPerDay","tokensPerYear","convertedTokensPerYear","tokenApr","tokenApy","_context14","CDO","CDORewards","getContractEvents","fromBlock","toBlock","_address","getBlockInfo","genericContractCallCached","returnValues","total","apr2apy","apr","apy","_x9","_ref22","_callee17","defaultEventsConfig","underlyingEventsConfig","underlyingEventsFilters","_ref23","_ref24","underlying_transfers","trancheToken_transfers","totalAmountDeposited","_context17","_ref25","_callee16","trancheTokenTransferEvent","tokenTransferEvent","trancheTokenAmount","blockInfo","hashKey","_context16","trancheTokens","_x13","_x10","_x11","_x12","getTrancheUserTransactions","_ref26","_callee18","_context18","_x14","_x15","_x16","getTrancheFirstDepositTx","_ref27","_callee19","_context19","_x17","_x18","_x19","getAmountDepositedTranche","_ref28","_callee20","_context20","_x20","_x21","_x22","_ref29","_callee21","_ref30","_ref31","userAvgPrice","_context21","_x23","_x24","getAmountLent","_callee22","amountLents","_args22","_context22","getBaseToken","getCurrentNetwork","getCurrentNetworkId","current","getPolygonBridgeTxs","_callee28","txs","covalentInfo","etherscanInfo","stateSenderConfig","erc20PredicateConfig","etherPredicateConfig","depositManagerConfig","rootChainManagerConfig","polygonNetworkId","covalentApiUrl","polygonAvailableTokens","polygonEndpoint","ethereumNetworkId","etherscanApiUrl","etherscanEndpoint","etherscanTxlistEndpoint","etherscanTxlistInternalEndpoint","_ref34","_ref35","last_state_id","polygonTxs","etherscanTxlist","etherscanTxlistInternal","rootTokensAddresses","childTokensAddresses","depositTxs","exitTxs","depositTxsHashes","depositETHInputRexExp","depositETHTxs","exitETHTxs","_args28","_context28","getCachedData","endpoints","getPolygonCurrentLastStateId","makeCachedRequest","makeEtherscanApiRequest","childToken","rootToken","result","_ref36","_callee23","ethereumTx","txReceipt","stateSenderLog","tx_state_id","_context23","bridgeType","getTxReceipt","web3Infura","hexToNumberString","topics","included","_x25","_ref37","_callee24","_context24","_x26","match","_ref38","_callee25","_context25","_x27","_ref39","_callee26","_context26","_x28","items","to_address","_ref40","_callee27","polygonTx","_context27","normalizePolygonTx","exited","maticPOSClient","exitERC20","encodeAbi","_x29","sort","getPolygonBaseTxs","_callee29","debug","baseTxs","baseEndpoint","cachedRows","lastCachedTx","lastCachedBlockNumber","covalentEndpointLastBlock","latestTxs","latestBlockNumbers","requestCount","requestStatus","cachedRequests_polygon","_args29","_context29","getCachedRequest","block_height","filterPolygonTxs","tx_hash","saveFetchedTransactions","makeRequest","now","getEtherscanBaseTxs","_callee30","firstBlockNumber","endBlockNumber","firstIdleBlockNumber","etherscanEndpointLastBlock","cachedRequests","_args30","_context30","filterEthereumTxs","_callee31","_args31","_context31","filterCurveTxs","endpoint","txsToStore","cachedRequest","saveCachedRequest","_callee32","resultData","_resultData","allAvailableTokens","_args32","_context32","processStoredTxs","t1","_callee33","contractInstance","_context33","web3Polygon","Contract","constant","inputs","outputs","internalType","payable","stateMutability","methods","lastStateId","call","checkPolygonTransactionIncluded","_ref46","_callee34","_ref47","_ref48","_context34","getTransactionReceipt","_x30","_ref49","_callee35","_args35","_context35","_x31","depositLogEvent","log_events","sender_address","decoded","param","redeemLogEvent","withdrawLogEvent","tokenDecimal","idleToken","block_signed_at","_d","logEvent","raw_log_topics","from_address","gasUsed","gas_spent","gas_price","_ref50","_callee36","processTransactions","idleTokensAddresses","_args36","_context36","mappedTx","_x32","_x33","filterEtherscanTxs","_ref51","_callee37","processTxs","_args37","_context37","_x34","_ref52","_callee38","curveTransfersTxs","curveTransfersTxsToDelete","curveZapContract","curvePoolContract","curveSwapContract","curveDepositContract","_args38","_context38","tokenMigrationToolParams","curveTokenConfig","internalTxs","r","isRightToken","iTx","isBatchMigrationTx","isDepositInternalTx","iTx2","isRedeemInternalTx","isConversionTx","isWithdrawTx","curveTx","isCurveTx","isCurveDepositTx","isCurveRedeemTx","isCurveDepositIn","isCurveDepositOut","isCurveZapIn","isCurveZapOut","isCurveTransferOut","isCurveTransferIn","isSwapOutTx","tokenValue","newValue","iTxs","withdrawnValue","_x35","addStoredTransaction","txKey","tokenKey","storedTxs","getStoredTransactions","updateStoredTransactions","getStoredItem","_ref53","_callee43","txReceipts","baseTokensConfigs","baseTokensAddresses","curveAvailableTokens","_args43","_context43","baseTokenConfig","baseTokenAddress","_ref54","_callee42","minedTxs","_context42","_ref55","_callee41","storedTx","tokensTransfered","_curveTokenPrice","_curveTokenPrice2","curveTxReceipt","filteredLogs","_curveTokenPrice3","_curveTxReceipt","idleTokenDecimals","_filteredLogs","_context41","getCurveTokenPrice","_ref56","_callee39","_context39","_x40","_x41","baseTokensConfig","t2","_ref57","_callee40","_context40","_x42","_x43","_x38","_x39","_x37","_x36","_ref58","_callee49","txsToProcess","_args49","_context49","_ref59","_callee48","_context48","_ref60","_callee47","isStoredTx","allowedMethods","pendingStatus","txSucceeded","txPending","isMetaTx","methodIsAllowed","realTx","txValue","redeemedValueFixed","executeMetaTransactionReceipt","executeMetaTransactionContractAddr","executeMetaTransactionInternalTransfers","IdleProxyMinterInfo","internalTransfer","metaTxValue","metaTxValueFixed","migrationTxReceipt","migrationTxInternalTransfers","migrationInternalTransfer","decodedLogs","migrationValue","migrationValueFixed","_context47","mintIdleToken","redeemIdleToken","migrateFromToIdle","mintIdleTokensProxy","migrateFromAaveToIdle","migrateFromIearnToIdle","executeMetaTransaction","migrateFromFulcrumToIdle","migrateFromCompoundToIdle","created","_ref61","_callee44","_context44","_x48","_x49","_ref62","_callee45","_context45","_x50","_x51","oldContract","raw","_ref63","_callee46","_context46","_x52","_x53","abi","decodeLog","_token","_x46","_x47","_x45","_x44","alias","getCustomAddress","setCustomAddress","customAddress","_ref64","_callee50","error_callback","_args50","_context50","catch","_x54","_ref65","_callee51","apiKeyIndex","apiKey","_args51","_context51","_x55","_ref66","_callee52","return_data","_args52","_context52","_x56","code","errorCode","split","array","prop","shift","configs","getAppUrl","baseURL","checkUrlOrigin","checkUrlBeta","betaURL","sendGoogleAnalyticsPageview","_callee53","page","googlePageviewInfo","isOrigin","_args53","_context53","ga","_ref68","_callee55","googleEventsInfo","debugEnabled","originOk","_args55","_context55","addPostfixForTestnet","_ref69","_callee54","_context54","hitCallback","hitCallbackFail","_x58","_x59","_x57","createContract","_ref70","_callee56","_context56","_x60","_x61","_x62","getWalletProvider","defaultProvider","simpleIDPassUserInfo","userInfo","simpleID","email","initSimpleID","passUserInfo","defaultUrl","baseurl","getEtherscanAddressUrl","decimalCount","thousands","abs","negativeSign","Number","j","getSnapshotProposals","_callee59","activeOnly","whitelist","proposals","currTime","validProposals","_args59","_context59","addr","msg","payload","_ref72","_callee58","checkedStrategies","_context58","snapshot","metadata","strategies","_ref73","_callee57","_context57","_x64","_x63","_ref74","_callee60","startTimestamp","endTimestamp","forceStartTimestamp","frequency","order","limit","statsConfig","filteredCachedData","_filteredData","apiInfo","filteredData","_args60","_context60","_x65","getTokenExchangeRate","_ref75","_callee61","exchangeRateParams","exchangeRate","_context61","_x66","_x67","getTokenDecimals","_ref76","_callee62","_context62","_x68","aprs","allocations","avgApr","aprWeighted","allocation","getFrequencySeconds","quantity","hour","day","week","getIdleStakingRewardsTxs","_callee63","idleTokenConfig","feeDistributorConfig","_context63","getProtocolInfoByAddress","integerValue","ROUND_FLOOR","normalizeTokenDecimals","normalizeTokenAmount","normalizedTokenDecimals","checkContractPaused","_callee64","contractPaused","_args64","_context64","parse_json","return_default","clearStoredData","excludeKeys","clear","storedKeysToRemove","storedKey","removeStoredItem","removeItem","setItem","checkRebalance","_ref79","_callee66","lastAllocationsPromises","protocolIndex","newAllocations","diff","_context66","lastAllocationsPromise","_ref80","_callee65","lastAllocations","_context65","_x70","_x71","alloc","_x69","checkMigration","_ref81","_callee67","migrationEnabled","oldContractBalance","oldContractTokenDecimals","oldContractBalanceFormatted","oldContractName","_context67","getContractBalance","_x72","_x73","_ref82","_callee68","eventName","_args68","_context68","getContractPastEvents","_x74","_x75","estimateMethodGasUsage","_ref83","_callee69","methodParams","_contract$methods","functionCall","gasLimit","_ref84","_ref85","_args69","_context69","getGasPrice","estimateGas","_x76","_x77","_ref86","_callee70","userAddress","signedParameters","callback_receipt","_contract$methods2","_context70","on","once","confirmationNumber","receipt","_x78","_x79","_x80","_x81","_x82","getSignatureParameters_v4","signature","isHexStrict","Error","hexToNumber","constructMetaTransactionMessage","nonce","functionSignature","soliditySHA3","toBuffer","checkBiconomyLimits","_ref87","_callee71","biconomyInfo","res","_context71","limits","apiId","headers","x-api-key","_x83","sendTxWithPermit","_ref88","_callee72","_contract$methods3","messageToSign","_this$getSignaturePar","_context72","encodeABI","personal","sign","_x84","_x85","_x86","_x87","_x88","_x89","buildBiconomyErc20ForwarderTx","_ref89","_callee73","permitType","callData","buildParams","_context73","txGas","erc20ForwarderClient","buildTx","_x90","_x91","_x92","_x93","_x94","_ref90","_callee75","_context75","_ref91","_callee74","_context74","_x96","_x97","_x95","sendBiconomyTxWithErc20Forwarder","_ref92","_callee76","req","metaInfo","txResponse","fetchReceiptIntervalId","_context76","permitAndSendTxEIP712","setInterval","clearInterval","updateTransaction","_x98","_x99","_x100","_x101","sendBiconomyTxWithPersonalSign","_ref93","_callee77","_this$getSignaturePar2","_context77","getNonce","_x102","_x103","_x104","_x105","signPermitEIP2612","_ref94","_callee78","erc20Name","owner","spender","deadline","domain","permit","domainData","_context78","getChainId","version","verifyingContract","types","EIP712Domain","Permit","primaryType","jsonrpc","substring","_x106","_x107","_x108","_x109","_x110","_x111","_x112","_x113","signPermit","_ref95","_callee79","baseContractName","holder","spenderContractName","addToNonce","baseContract","spenderContract","permitConfig","expiry","EIPVersion","permitName","_args79","_context79","net","getId","round","nonceMethod","pow","allowed","response","_x114","_x115","_x116","_ref96","_callee80","permitParams","methodAbi","useNonce","_args80","_context80","_jsonInterface","f","unshift","_x117","_x118","_x119","_x120","_x121","_x122","_x123","sendSignedTx","_ref97","_callee81","MetaTransaction","dataToSign","_context81","_x124","_x125","_x126","_x127","_x128","checkTokenApproved","_ref98","_callee82","contractAddr","walletAddr","_ref99","_ref100","allowance","_context82","getAllowance","gte","_x129","_x130","_x131","_ref101","_callee83","_context83","_x132","_x133","_x134","contractMethodSendWrapperWithValue","txData","send_raw","raw_tx_data","disableERC20","toTwosComplement","enableERC20","getTrancheStakedBalance","_ref102","_callee84","stakedBalance","_args84","_context84","_x135","_x136","getTrancheStakingRewards","_ref103","_callee86","_context86","_ref104","_callee85","tokenGlobalConfig","_context85","_x139","_x137","_x138","_ref105","_callee87","field","_args87","_context87","_x140","_x141","_x142","_x143","_x144","_x145","_x146","_x147","_ref106","_callee88","strategyConfig","idleStrategyAddress","idleGovTokenConfig","_ref107","_ref108","totalSupply","virtualPrice","_ref109","_ref110","staked1","lastPrice1","_ref111","_ref112","deposited1","lastPrice","_ref113","_ref114","redeemable1","staked2","_ref115","_ref116","trancheApy2","deposited3","_ref117","_ref118","trancheFee","_ref119","_ref120","deposited4","redeemable3","_ref121","_ref122","deposited2","redeemable2","_ref123","_ref124","earningsPerc","secondsFromFirstTx","rewardsTokensInfo","_ref125","_ref126","rewardsTokens","incentiveTokens","govTokens","_args88","_context88","Strategy","initContract","AA","BB","getTokenTotalSupply","IDLE","rewardTokenAddr","govTokenAddress","getGovTokenConfigByAddress","_x148","_x149","_x150","_x151","_x152","_x153","_x154","loadAssetField","_ref127","_callee89","addCurveApy","strategyInfo","govTokenAvailableTokens","newTokenConfig","_ref128","_ref129","curveAvgSlippage","curveAvgBuyPrice","curveTokenBalance","_ref130","_ref131","amountLentCurve1","redeemableBalanceCurve","_ref132","_ref133","curveApy","amountLentCurve","redeemableBalanceCurveStart","redeemableBalanceCurveEnd","earningPerYear","_ref134","_ref135","amountLent1","redeemableBalance1","depositTimestamp","_idleGovToken","blocksPerDay","blocksPerWeek","blocksPerMonth","selectedTokenConfig","_idleGovToken2","_idleGovToken3","tokenApys","curveAPY","_ref136","_ref137","tokenPriceFirstDeposit","_ref138","_ref139","daysFirstDeposit","depositTimestamps","_govTokenConfig","_ref140","_ref141","tokenAPY1","amountLent2","redeemableBalanceStart","redeemableBalanceEnd","_earningPerYear","_govTokenConfig2","_ref142","_ref143","idleTokenPrice1","idleTokenBalance2","govTokensBalance","_tokenBalance","redeemableBalance","_ref144","_ref145","amountLentCurve2","redeemableBalanceCurve1","_ref146","_ref147","redeemableBalance2","_args89","_context89","getCurveTokenBalance","getCurveAPY","getCurveRedeemableIdleTokens","getGovTokenPool","getTokenPool","getCompUserDistribution","getStkAaveUserDistribution","getIdleGovToken","distributionMode","t3","getCompDistribution","getStkAaveDistribution","t4","getCompAvgApr","t5","t6","t7","getTokenPrice","getUserTokenFees","t8","t9","getGovTokenUserBalance","getGovTokensUserTotalBalance","_x155","_x156","_x157","_x158","getIdleTokenSupply","_ref148","_callee90","idleTokenSupply","_args90","_context90","_x159","getIdleTokenPriceWithFee","_ref149","_callee91","_ref150","_ref151","fee","priceWFee","_args91","_context91","eq","_x160","_x161","_ref152","_callee92","tokenData","beforePrice","afterPrice","tokenPriceBefore","tokenPriceAfter","timeBefore","timeAfter","timeDiff","priceDiff","priceAcceleration","timeDiffFromBeforePrice","_args92","_context92","_x162","clearCachedData","clear_all","useLocalStorage","expirationDate","_ref153","_callee93","_ref154","_ref155","idleTokensTotalSupply","userShare","_context93","_x163","_x164","_callee95","coverProtocolConfig","nexusMutualConfig","_args95","_context95","_ref157","_callee94","coverage","coverageTokens","protocolImage","_context94","tokens","expirationTimestamp","utc","_x165","getNexusMutualCoverages","sumAssured","coverAssetConfig","yieldTokenConfig","collateralIcon","incident","claimId","protocolImageDark","coverDetails","validUntil","route","_ref158","_callee97","incidentsInfo","_ref159","_ref160","coverBoughtEvents","claimSubmittedEvents","nexusMutualCoverages","_context97","directProps","startBlock","contractInfo","buyer","_ref161","_callee96","cover","coverId","claimSubmittedEvent","_ref162","_ref163","incidentEvents","matchedIncidents","matchedIncident","expiryDate","payoutOutcome","claimedAmount","claimTxReceipt","claimedAmountLog","claimableAmount","claimablePrice","maxCoveredAmount","coveredTokenAmount","_ref164","_ref165","_context96","claim","productId","incidentDate","yieldTokenCoverGracePeriod","curr","priceBefore","underlying","underlyingConfig","coverAsset","findIndex","_x167","_x166","getBatchedDepositExecutions","_ref166","_callee98","_context98","_x168","getBatchedDeposits","_callee100","filter_by_status","batchDepositConfig","batchedDeposits","_args100","_context100","_ref168","_callee99","currBatchIndex","batchIndex","_ref169","_ref170","batchExecutions","batchTotal","batchRedeem","batchDeposit","batchTotals","batchRedeems","batchDeposits","lastExecution","_context99","_x169","getETHBalance","_ref171","_callee101","fixDecimals","_args101","_context101","_x170","_ref172","_callee102","_ref173","_ref174","_args102","_context102","_x171","_x172","copyToClipboard","copyText","setSelectionRange","execCommand","loadScript","script","attr","readyState","onreadystatechange","onload","body","appendChild","isValidJSON","_ref175","_callee103","_args103","_context103","_x173","_ref176","_callee104","_args104","_context104","_x174","_ref177","_callee105","_args105","_context105","_x175","_x176","getProtocolBalance","_ref178","_callee106","_context106","_x177","_x178","getAprs","_ref179","_callee107","_context107","addresses","_x179","genericIdleCall","_ref180","_callee108","callParams","_args108","_context108","_x180","_ref181","_callee109","_contract$methods4","_args109","_context109","_x181","_x182","_ref182","_callee111","_args111","_context111","_ref183","_callee110","_context110","_x184","_x185","_x183","getTxDecodedLogs","_ref184","_callee113","logAddr","decodeLogs","internalTransfers","_context113","_ref185","_callee112","_context112","_x190","_x191","_x186","_x187","_x188","_x189","blocksToSeconds","blocks","blocksPerSeconds","getBlockNumber","_callee114","_context114","_ref187","_callee115","_context115","getBlock","_x192","_ref188","_callee116","_args116","_context116","getPastEvents","_x193","_x194","_ref189","_callee117","_args117","_context117","_x195","_x196","cachedContractCall","_ref190","_callee118","_args118","_context118","_x197","_x198","_ref191","_callee119","_contract$methods5","_args119","_context119","_x199","_x200","_ref192","_callee120","async","_args120","_context120","_x201","_x202","getUnlentBalance","_ref193","_callee121","unlentBalance","_context121","_x203","_ref194","_callee122","_args122","_context122","_x204","getLastAllocations","_ref195","_callee124","tokenAllocations","_context124","_ref196","_callee123","_context123","_x206","_x207","_x205","_ref197","_callee125","protocolsAprs","_ref198","_ref199","govTokensBalances","_args125","_context125","totalAllocationConverted","totalAllocationWithUnlentConverted","getTokenConversionRate","getGovTokensBalances","protocolAllocationPerc","protocolAllocation","_x208","getSushiswapPoolTokenPrice","_ref200","_callee126","_ref201","_ref202","token0_address","token1_address","poolReserves","token0_config","token1_config","_ref203","_ref204","token0_price","token1_price","token0_pool","token1_pool","totalPoolSize","poolTokenPrice","_context126","getSushiswapConversionRate","_x209","_ref205","_callee127","tokenConfigFrom","tokenConfigDest","WETHAddr","one","_context127","_x210","_x211","_ref206","_callee128","unires","_context128","addressForPrice","_x212","_x213","getCurveDepositedTokens","_ref207","_callee129","idleTokensBalances","remainingCurveTokens","_args129","_context129","_x214","getCurveUnevenTokenAmounts","_ref208","_callee130","amounts","max_burn_amount","unevenAmounts","_context130","getCurveDepositContract","_x215","_x216","_callee131","curveRatesInfo","_context131","strategyTokens","getCurveAPYContract","_callee132","blocksForPrevTokenPrice","_ref211","_ref212","prevTokenPrice","blocksMultiplier","curveAPR","_context132","getCurveTokenSupply","_callee133","_context133","getCurvePoolContract","_callee134","_args134","_context134","_callee135","_args135","_context135","_ref216","_callee136","_ref217","_ref218","_context136","_x217","_callee137","depositContractInfo","_context137","getCurveZapContract","_callee138","zapContractInfo","_context138","_callee139","poolContractInfo","_context139","getCurveSwapContract","_callee140","migrationContractInfo","_context140","getCurveIdleTokensAmounts","_callee142","max_slippage","curveTokenSupply","curveTokenShare","n_coins","_args142","_context142","_ref224","_callee141","coinIndex","curveIdleTokens","_context141","migrationParams","_x218","getCurveTokensAmounts","_callee144","useCoinIndex","_args144","_context144","_ref226","_callee143","_ref227","_ref228","idleTokenPrice","totalTokenSupply","_context143","_x219","getCurveAmounts","_ref229","_callee146","_args146","_context146","_ref230","_callee145","_context145","_x222","_x220","_x221","getCurveTokenAmount","_ref231","_callee147","_args147","_context147","_x223","getCurveSlippage","_ref232","_callee148","uneven_amounts","depositContract","_ref233","_ref234","Sv","_args148","_context148","_x224","_x225","_ref235","_callee149","aTokenIdleSupply","annualize","aaveDistribution","stkAAVETokenConfig","aTokenConfig","disabledTokens","aaveIncentivesController_address","IAaveIncentivesController_name","_ref236","_ref237","aTokenTotalSupply","assetData","aaveAllocationPerc","aaveSpeed","secondsPerYear","aavePoolShare","_args149","_context149","IAaveIncentivesController","emissionPerSecond","_x226","_callee151","_args151","_context151","_ref239","_callee150","_ref240","_ref241","_context150","_x227","getWMaticApr","_ref242","_callee152","maticConversionRate","wMaticTokenConfig","wMaticApr","distributionSpeed","destTokenConfig","wMaticValue","_args152","_context152","_x228","_x229","getStkAaveApr","_ref243","_callee153","aaveConversionRate","stkAaveAPR","stkAaveValue","_args153","_context153","_x230","_x231","getCompAPR","_ref244","_callee154","cTokenIdleSupply","compConversionRate","COMPTokenConfig","compAPR","compDistribution","compValue","_args154","_context154","_x232","_x233","getCompSpeed","_ref245","_callee155","cTokenAddress","compSpeed","_context155","_x234","_ref246","_callee156","cTokenInfo","compoundAllocationPerc","_ref247","_ref248","cTokenTotalSupply","compoundPoolShare","_args156","_context156","_x235","_callee158","_args158","_context158","_ref250","_callee157","_ref251","_ref252","_context157","_x236","_callee160","_args160","_context160","_ref254","_callee159","_ref255","_ref256","compApr","_context159","_x237","getTokensCsv","_callee163","csv","_context163","prototype","sum","pv","cv","avg","_ref258","_callee162","strategy","_context162","_ref259","_callee161","rates","header","aprAvg","scoreAvg","lastRow","_context161","protocolsData","p1","foundProtocol","p2","rate","idleRate","score","idleScore","pInfo","pData","pRate","pScore","defiScore","additionalRate","avgRate","avgScore","_x239","_x238","_callee165","govToken","convertToken","_args165","_context165","_ref261","_callee164","compTokenBalance","_context164","_x240","getGovTokensFarming","tokenGovTokens","getTokenGovTokens","speed","mode","multipliers","block","second","month","year","getGovTokensUserDistributionSpeed","_ref262","_callee167","govTokensUserDistribution","_args167","_context167","_ref263","_callee166","_context166","_x242","_x241","_ref264","_callee169","govTokensDistribution","_args169","_context169","_ref265","_callee168","govSpeed","_context168","_x244","_x243","getGovTokensAprs","_ref266","_callee171","govTokensAprs","_args171","_context171","_ref267","_callee170","_ref268","_ref269","_ref270","_ref271","cTokenConfig","_context170","aprTooltipMode","_x247","_x245","_x246","_callee173","_args173","_context173","_ref273","_callee172","govTokenBalance","tokenConversionRate","fromTokenConfig","_context172","_x248","_callee174","checkShowBalance","govTokensUserBalances","govTokensEarnings","_args174","_context174","getGovTokensUserBalances","govTokenAmount","getGovTokensIndexes","_ref275","_callee176","govTokensAmounts","_context176","getGovTokensUserAmounts","_ref276","_callee175","_context175","getGovTokenAddessByIndex","_x251","_x252","_x249","_x250","_ref277","_callee177","_context177","_x253","_x254","_ref278","_callee178","_context178","_x255","_x256","_callee181","govTokenConfigForced","_args181","_context181","_ref280","_callee180","_context180","_ref281","_callee179","_context179","_x258","_x259","_x257","getTokenFees","_callee182","_args182","_context182","_callee183","_ref284","_ref285","feePercentage","gain","fees","_args183","_context183","_ref286","_callee184","_args184","_context184","_x260","getTotalTVL","_callee185","tokensTVL","_context185","getTokensTVL","totalTVL","tokenInfo","tokenTVL","_callee189","_context189","_ref289","_callee188","_context188","_ref290","_callee187","oldTokenTVL","idleTokenName","_ref291","_ref292","oldTokenConfig","_ref296","_ref297","oldTokenPrice","oldTotalSupply","_context187","showAUM","_ref293","_callee186","_ref294","_ref295","govTokenConversionRate","govTokenBalanceConverted","_context186","_x263","oldProtocols","oldProtocol","protocolPos","_x262","_x261","getSubstackLatestFeed","_callee190","endpointInfo","idleSubstackFeed","latestFeed","_context190","getAggregatedStats","_callee192","allNetworks","networkIds","totalAUM","_args192","_context192","_ref300","_callee191","tvls","_context191","getAggregatedStats_chain","_x264","_callee196","avgAPR","_args196","_context196","_ref302","_callee195","_context195","_ref303","_callee194","tokenAUM","oldTokenAllocation","oldTokenTotalAllocation","_context194","_ref304","_callee193","_ref305","_ref306","_context193","_x267","_x266","_x265","getTokenApy","_ref307","_callee197","_context197","_x268","getTokensToMigrate","_callee200","tokensToMigrate","_args200","_context200","_ref309","_callee199","_context199","_ref310","_callee198","_ref311","_context198","_x270","_x269","getProtocolsTokensBalances","_callee202","tokenBalances","minTokenBalance","protocolsTokens","_args202","_context202","_ref313","_callee201","tokenContract","_context201","_x271","_ref314","_callee203","_args203","_context203","_x272","_x273","_x274","getAvgAPYStats","_ref315","_callee204","apiResults","_args204","_context204","_x275","_x276","_ref316","_callee205","count","_conversionRate","ToTokenConfig","_args205","_context205","_x277","_x278","getTokenScore","_ref317","_callee206","_ref318","_ref319","tokenScore","_context206","protocolScore","getTokenScoreApi","_x279","_x280","_ref320","_callee207","scores","_context207","_x281","_x282","_ref321","_callee208","idleGovTokenShowAPR","idleAPR","_args208","_context208","_x283","isNegative","suffixNum","decimalPart","mod","toPrecision","difference","maxLen","highlightedDecimals","numLen","intPart","decPart","repeat","highlightedDec","highlightedIntPart","Fragment","defaultOpacity","hidden","interactive","rainbow","BuyModal","selectedMethod","availableMethods","selectedCountry","selectedProvider","availableProviders","buyToken","renderPaymentMethod","buyParams","onSuccess","onClose","paymentProvider","initParams","currentState","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__","toastProvider","addMessage","secondaryMessage","colorTheme","actionHref","actionText","variant","getAccountBalance","payments","getInitParams","render","goBack","resetModal","componentWillMount","showInline","getProviderInfo","providerInfo","getInfo","newProviderInfo","getDefaultPaymentProvider","paymentMethod","getAvailablePaymentProviders","providerSupportMethod","supportedMethods","providerSupportToken","supportedTokens","defaultPaymentProvider","showDefaultOnly","selectProvider","ethAvailable","tokenAvailable","selectMethod","selectToken","loadRemoteResources","handleCountryChange","getAvailableCountries","availableCountries","supportedCountries","countryCode","countries","remoteResources","scriptID","remoteResourceParams","precall","parentElement","head","stylesheetId","methodInfo","loadAvailableMethods","_this4","caption","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","showAllTokens","InnerComponent","flexWrap","_ImageButton_ImageButton__WEBPACK_IMPORTED_MODULE_12__","imagePropsExtended","react_select__WEBPACK_IMPORTED_MODULE_10__","placeholder","noOptionsMessage","inputValue","_ModalCard__WEBPACK_IMPORTED_MODULE_11__","Footer","TableRow","FieldComponent","fieldComponent","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_10__","cardId","rowProps","rowId","colInfo","colIndex","visibleOnDesktop","visible","fieldIndex","colProps","DashboardCard","mouseOver","isRainbow","active","onMouseOut","setMouseOver","onMouseOver","titleParentProps","lineHeight","description","placement","TableHeader","pb","_TableCellHeader_TableCellHeader__WEBPACK_IMPORTED_MODULE_7__","desc","FastBalanceSelector","onMouseDown","Staking","selectedOption","toolProps","SelectedComponent","component","AssetField","FlexLoader","GenericFaqs","openedAnswer","selectedSection","questions","setSection","showSections","isSelected","borderBottom","q","toggleAnswer","SendTxWithBalance","permitEnabled","showPermitBox","approveEnabled","buttonDisabled","contractApproved","fastBalanceSelector","changeInputValue","call_callback","changeInputCallback","setInputValue","selectedPercentage","getFastBalanceSelector","setFastBalanceSelector","checkButtonDisabled","approve","callbackApprove","callbackReceiptApprove","checkContractApproved","executeTx","_amount","_params","checkLimit","eventValue","getPermitTransactionParams","approveCallback","actionChanged","tokenBalanceChanged","permitEnabledChanged","approveEnabledChanged","contractChanged","tokenConfigChanged","viewOnly","connectorName","infoBox","steps","step","stepIndex","ExtLink","checked","togglePermitEnabled","approveDescription","RoundButton","balanceSelectorInfo","ConnectBox","LimitReachedModal","possibleConstructorReturn","getPrototypeOf","componentDidUpdate","iconHeight","TrancheDetails","infoText","canUnstake","canWithdraw","activeModal","balanceProp","trancheBalance","selectedAction","userHasAvailableFunds","loadActionData","selectedProtocol","selectedTranche","trancheAPY","cdoConfig","cantUnstake","cantWithdraw","functions","trancheLimit","otherTrancheType","otherTrancheDetails","showSelectButton","selectTrancheType","setSelectedAction","src_SendTxWithBalance_SendTxWithBalance","transactionSucceeded","contractApprovedCallback","components_LimitReachedModal","PortfolioEquityTranches","transactionsList","ChartCustomTooltip","ChartCustomTooltipRow","FundsOverviewTranche","aggregatedValues","govTokensTotalApr","govTokensUserBalance","govTokensTotalBalance","govTokensTotalAprTooltip","idleTokenUserDistribution","govTokensDistributionTooltip","govTokensTotalBalanceTooltip","src_PortfolioEquityTranches_PortfolioEquityTranches","Title","Heading","h3","StakingRewardsTranche","stakingRewardsRows","loadUserRewards","portfolioChanged","trancheConfigChanged","rewardTokensInfo","trancheStakedAmount","trancheBalanceInfo","rewardToken","rewardTokenInfo","staked","reedemable","tokenIcon","CustomList","Button","claimCallback","TranchePage","componentLoaded","loadTransactions","trancheType","tranchesDetails","filteredTranchesTypes","src_TrancheDetails_TrancheDetails","userHasFunds","src_StakingRewardsTranche_StakingRewardsTranche","src_FundsOverviewTranche_FundsOverviewTranche","TransactionsList","availableActions","src_GenericFaqs_GenericFaqs","","TranchesList","enabledProtocols","alt","baseName","showTooltip","justifyItems","long","features","feature","TrancheFlash","flashData","bold","subtitle","openTooltipModal","helpcircle","arrows","seniorinfo","juniorinfo","TrancheWelcome","aligItems","src_TrancheFlash_TrancheFlash","TrancheBox","GenericPieChart","showLegend","itemWidth","itemHeight","translateY","symbolSize","anchor","direction","itemTextColor","symbolShape","effects","defaultImage","defaultLabel","TotalBalanceCounter","counterEnd","counterStart","loadTotalEarnings","counterStyle","build_default","TotalEarningsCounter","Tranches","trancheRoute","useTrancheType","portfolioLoaded","allocationChartData","portfolioEquityQuickSelection","loadPortfolio","then","urlParams","param1","param3","param2","availableTranchesChanged","tranchesConfig","tranchesTokens","tranchesBalances","weight","portfolioDonutData","balanceValue","trancheName","balanceInfo","_this5","breadcrumbPath","src_TranchePage_TranchePage","src_TotalBalanceCounter_TotalBalanceCounter","src_TotalEarningsCounter_TotalEarningsCounter","src_GenericPieChart_GenericPieChart","setPortfolioEquityQuickSelection","src_TranchesList_TranchesList","selectTranche","src_TrancheWelcome_TrancheWelcome","textSize","TokenSwap","selectedFromToken","selectedDestToken","availableDestinationTokens","selectFromToken","selectDestToken","initProps","buttonId","loadTokens","fromTokenChanged","destTokenChanged","loadKyberWidget","LpStaking","globalStats","statsLoaded","programEnded","rewardMultiplier","accountingData","programEndDate","successMessage","rewardTokenPrice","tokenWrapperProps","showTokenWrapperEnabled","updateData","selectedActionChanged","contractApprovedChanged","contractInfoChanged","userStakedBalance","totalStakedBalance","totalStakingShares","userTotalStakingShare","rewardsPerDay","stakedBalanceUSD","rewardsPerYearUSD","normalizedInputValue","unstakeRewards","totalLocked","totalUnlocked","unlockScheduleCount","collectedRewards","unlockSchedulesPromises","unlockSchedules","totalRewards","totalDeposits","lockedRewards","unlockedRewards","programEndTime","endTime","endAtSec","initialLockedShares","durationSec","stakingShare","maxMultiplier","distributionSpeedMultiplier","userDistributionSpeed","maxBonusDays","currentRewards","stakedTokensLog","stakedTokens","unstakedTokensLog","unstakedTokens","rewardTokenConfig","receivedRewardsLog","receivedRewards","startContract","wrapMethod","destContract","unwrapMethod","_this6","loadStats","_this7","StatsCard","isStake","isUnstake","isStats","txAction","poolLink","statInfo","ImageButton","setAction","IdleStaking","maxApr","lockPeriods","lockedEnd","lockExpired","claimedRewards","increaseAction","lockPeriodInput","internalInfoBox","distributedRewards","selectedLockPeriod","lockPeriodTimestamp","lockEndDateIsMaxEndDate","feeDistributor","lockPeriodChanged","increaseActionChanged","calculateStkIDLEAmount","minLockPeriod","maxLockPeriod","minDate","add","mDate","maxDate","isAfter","endDate","endDateTime","maxDateTime","stkIDLEAmount","_value","_unlock_time","etherscanRewardsTxs","tokenTotalSupply","claimableRewards","lockedInfo","tokenUserBalance","claimable","claimEvents","depositEvents","totalRewardsDays","totalClaimedUser","recipient","totalLockedFunds","stkTokenTotalSupply","claimableRewardsFormatted","totalRewardsFormatted","userDeposited","totalCollectedRewards","stakeStartTime","stakedTime","event","ts","depositValue","stakePeriod","currentProfit","stakePeriodWeeks","lockEndDate","currDate","isValid","lockedTokensLog","lockedTokens","increaseAmountTokensLog","increaseTokens","_this8","isLock","isClaim","isIncrease","canIncrease","maxHeight","reward","setIncreaseAction","changelockPeriodInput","selectLockPeriod","getIncreaseTimeParams","NexusMutual","quote","1","2","periodOptions","30","60","90","365","capacity","coverCost","amountValue","periodValue","yearlyCost","maxCapacity","amountValid","periodValid","claimableCovers","tokenApproved","selectedPeriod","maxPriceWithFee","transactionValue","yieldTokenBalance","selectedUnderlying","yieldTokenApproved","claimButtonDisabled","selectedCoverToClaim","defaultClaimableCover","selectedUnderlyingConfig","changeAmount","changePeriod","selectPeriod","approveSucceeded","yieldTokenApproveSucceeded","claimInputChange","normalizedAmount","getClaimTransactionParams","realAddress","claimTransactionSucceeded","loadContracts","buyCoverTransactionSucceeded","validClaimableCoverFromParam","paramIsValidToken","changeSelectedToken","selectedUnderlyingChanged","loadTokenData","isETH","getPoolCapacity","coverData","period","coverAmount","currency","asset","quoteURL","encodeParameters","priceInNXM","expiresAt","generatedAt","COVER_TYPE","basePrice","priceWithFee","mul","divn","amountInWei","textDecoration","activeColor","reset","changeSelectedUnderlying","setMaxCoverAmount","borderStyle","periodInfo","getQuote","selectCoverToClaim","TokenWrapper","balanceDest","balanceStart","startContractChanged","destContractChanged","loadBalance","updateActionData","mintLog","mintedAmount","withdrawLog","withdrawnAmount","fullWidth","connectAndValidateAccount","PortfolioDonut","totalFunds","parentWidth","tokenPercentage","tokenColorHsl","radialLabelsLinkOffset","strategyIcon","EarningsEstimation","tokensEarnings","estimationStepsPerc","estimationStepsOptions","estimationStepsDefaultOption","estimationSteps","0","Month","perc","2 months","3 months","optionName","25","8 months","Year","2 Years","5 Years","loadEarnings","stepsCount","aggregatedEarnings","earnings","earningsYear","earningsPercStep","possibleSteps","maxPossibleStep","maxCountStep","orderedTokensEarnings","estimationStep","option","setEstimationStepsPerc","tokenIndex","estimationStepPerc","finalEarnings","cursorPerc","tokenRGBColor","borderTop","estimateIndex","estimationStepEarnings","estimationStepEarningsFormatted","borderRight","wordBreak","estimationLabel","DashboardIconButton","StrategyPage","remainingTokens","portfolioLoading","availableGovTokens","polygonTransactions","portfolioEquityStartDate","batchedDepositsAvailableTokens","polygonTransactionsAvailableTokens","availableTokensChanged","polygonBridgeConfig","batchInfo","redeemable","actionIcon","actionIconProps","apyLong","yieldFarming","strategyName","src_PortfolioDonut_PortfolioDonut","toolName","toolIndex","toolConfig","src_DashboardIconButton_DashboardIconButton","ActiveCoverages","AssetsList","showDirection","src_EarningsEstimation_EarningsEstimation","paginationEnabled","BatchDeposit","canClaim","canDeposit","usePermit","hasDeposited","permitSigned","batchCompleted","claimSucceeded","executeSucceeded","migrationSucceeded","batchDepositEnabled","migrationContractApproved","migrationEnabledCallback","migrationCallback","checkBatchs","loadStrategies","executeSucceededChanged","callbackExecute","callbackReceiptExecute","functionInfo","permitContract","batchDepositInfo","depositEnabled","availableStrategiesKeys","selectStrategy","obj","strategyAvailableTokens","migrateFunction","setStrategyToken","batchId","callbackClaim","callbackReceiptClaim","canExecuteBatch","strategyDefaultValue","Migrate","useMetaTx","showActions","isMigrationTool","showBalanceSelector","migrationIcon","toMigrate","callbackPermit","migrationText","minPoolSize","PolygonBridge","txsToExit","dataLoaded","defaultTransaction","selectedTransaction","rootTokenConfig","childTokenConfig","encodeParameter","depositData","sendValue","exitCalldata","ERC20Predicate","DepositManager","depositedTokensLog","depositedTokensEvent","EtherPredicate","maticNetwork","mainNetworkId","mainNetworkName","withdrawnTokensEvent","withdrawnTokensLog","withdrawnTokens","Transfer","paramIsToken","defaultAction","loadPolygonTxs","isExit","isDeposit","isWithdraw","selectTransaction","exitCallback","getExitTransactionParams","CoverProtocol","swapInfo","defaultCoverage","selectedCoverage","inputValueChanged","swapInfoChanged","swapFee","covTokens","tokenAmountOut","getSwapInfo","MAX_UINT256","balancerTokenConfig","dashboardUrl","fixedAmount","mintedClaimLog","mintedNoClaimLog","mintedClaimAmount","mintedNoClaimAmount","claimTokenConfig","claimTokensLog","receivedClaimAmount","balancerPool","noClaimTokenConfig","noClaimTokensLog","receivedNoClaimAmount","collateralAmount","balancerClaimConfig","balancerNoClaimConfig","claimTokenBalance","noClaimTokenBalance","balancerPoolClaimBalance","balancerPoolNoClaimBalance","hasMintedTokens","apyPrice","selectCoverage","isMint","isBuyClaim","isBuyNoClaim","subcaption","TokenMigration","changeFromToken","convertTool","BatchMigration","batchMigrationInfo","batchMigrationDepositEnabled","DeployB2BVesting","actions","actionIndex","validated","viewAction","editAction","newAction","maxContracts","actionValid","actionInputs","claimedTokens","deployedContracts","contractDeployed","validateForm","checkInputs","vesterImplementation","proxyCreated","deployedContractsAddresses","implementation","proxy","vestingPeriod","availableBalance","depositAmounts","claimedTokensLog","returnString","fieldPattern","inputIndex","inputInfo","getPatternByFieldType","inputValid","actionValue","defineProperty","txError","deployedContract","idleAddress","isLastAction","clonedVesterAddress","ProxyCreated","ownerAddress","recipientAddress","initData","depositContracts","claimContracts","onSubmit","handleSubmit","setEditAction","fieldType","pattern","inputChange","addAction","deleteAction","setNewAction","setViewAction","readOnly","depositCallback","env","process","appName","forumURL","telegramURL","discordURL","twitterURL","darkModeEnabled","USA","GBR","AUS","BRA","CHN","CAN","EUR","HKG","IND","MEX","RUS","ZAF","KOR","connectors","metamask","opera","dapper","coinbase","trustwallet","walletconnect","iconModal","walletlink","gnosis","fortmatic","portis","authereum","torus","trezor","ledger","ledgerlive","custom","newsletterSubscription","messages","scoreShort","apyShort","totalProfitPerc","cheapRedeem","curveBonusSlippage","directMint","performanceFee","govTokenApr","govTokenRedeemableBalance","riskScoreShort","redeemSkipGov","batchDepositExecutionSchedule","riskAdjustedDisabledMessageDeposit","riskScore","curveInstructions","riskAdjustedDisabledMessageRedeem","pageView","modals","first_deposit_referral","first_deposit_share","welcome","dashboard","baseRoute","governance","test","availableContracts","FeeTreasury","PriceOracle","GovernorAlpha","EcosystemFund","IdleController","12","7","delegates","imageInactive","poolContract","CurvePool","CurveDeposit","gaugeContract","LiquidityGaugeV2","zapContract","CurveZap","idleDAIYield","idleUSDCYield","idleUSDTYield","DAI","USDC","SLP","showAPR","showPrice","137","COMP","stkAAVE","aToken","WMATIC","ERC20","ProtocolDataProvider","useInfuraProvider","ChildChainManager","UniswapRouter","UniswapV2Router02","SushiswapRouter","SushiV2Router02","RootChainManager","ProxyFactory","MinimalInitializableProxyFactory","LockedIDLE","Timelock","VesterFactory","EarlyRewards","Comptroller","BalancerExchangeProxy","zeroExInstant","orderSource","affiliateInfo","feeRecipient","tranchflash","bubble","stake","unstake","extraicons","best","iconDark","iconInactive","iconInactiveDark","risk","tools","forum","leaderboard","overview","delegate","comingSoon","titlePostfix","enabledEnvs","govTokensEnabled","chartColor","descShort","descLong","substack","REACT_APP_IDLE_KEY","Authorization","versions","v3","additionalProtocols","showPerformanceTooltip","strategiesParams","enabledStrategies","v4","chart","labelTextColorModifiers","performanceTooltip","MATIC","USD","USDT","TUSD","SUSD","WBTC","WETH","RAI","disabledCharts","FEI","idleDAI+idleUSDC+idleUSDT","compound","aavev2WithStkAAVE","rateField","compoundWithCOMP","fulcrum","dsr","dydx","iearn","aave","aavev2","cream","fuse","skipRebalance","metaTransactionsEnabled","skipMint","minAmountForMint","erc20ForwarderEnabled","skipMintCheckboxEnabled","erc20ForwarderProxyContract","forwarder","erc20Forwarder","function","IdleDepositForwarder","proxyContract","IdleProxyMinter","minAmountForRebalance","minAmountForRebalanceMetaTx","redeemGovTokens","rebalance","IdleRebalancerV3","42","3","4","5","1337","80001","isForked","requiredConfirmations","enabledNetworks","accountBalanceMinimum","infura","REACT_APP_INFURA_KEY","polygon","baseUrl","networkPairs","nexus","covalent","REACT_APP_COVALENT_KEY","etherscan","REACT_APP_ETHERSCAN_KEY","REACT_APP_ETHERSCAN_KEY2","REACT_APP_ETHERSCAN_KEY3","REACT_APP_ETHERSCAN_KEY4","urls","biconomy","enableLogin","disabledWallets","REACT_APP_BICONOMY_KEY","dappId","REACT_APP_BICONOMY_APPID","getNetwork","networkName","appOrigin","appId","renderNotifications","notifications","subComponent","stkIDLE","StakingFeeDistributor","LpStakingAbi","SushiLiquidityPool","stakePolygon","nexusMutual","IdleTokenV4","NexusMutualDistributor","NexusMutualIncidents","b2bVesting","B2BVester","polygonBridge","StateSender","ChildERC20","ethWrapper","coverProtocol","CoverMint","Claim","CovToken","BalancerPool","NoClaim","claimEnabled","IdleBatchedMint","IdleTokenV3","IdleBatchConverter","idleSUSDYield","idleTUSDYield","idleWBTCYield","idleDAISafe","idleUSDCSafe","idleUSDTSafe","tokenMigration","IdleConverterPersonalSignV4","idleDAIv2","IdleTokenV2","cDAI","iDAI","aDAI","yDAIv3","yDAIv2","idleUSDCv2","cUSDC","iUSDC","aUSDC","yUSDCv3","yUSDCv2","cUSDT","iUSDT","aUSDT","yUSDTv3","yUSDTv2","idleSUSDv2","aSUSD","ySUSDv3","idleTUSDv2","aTUSD","yTUSDv3","cWBTC","iWBTC","aWBTC","addFunds","tokenSwap","ETH","USDS","BUSD","EURS","2KEY","ABT","ABYSS","AMPL","ANT","BAM","BAND","BAT","BLZ","BNT","BQX","BTU","CDT","CVC","DAT","DGX","EKG","ELF","ENJ","EQUAD","FXC","GDC","GEN","GHT","GNO","IOST","KEY","KNC","LEND","LINK","LOOM","LRC","MANA","MCO","MET","MFG","MKR","MLN","MTL","MYB","NEXXO","NPXS","OGN","OMG","OST","PAX","PBTC","PLR","PNK","POLY","POWR","PT","QKC","QNT","RAE","REN","REP","REQ","RLC","RSR","RSV","SAN","SNT","SNX","SPIKE","SPN","TKN","TKX","TRYB","UBT","UPP","ZRX","insurance","imageDark","bank","card","wallet","wyre","captionPos","envParams","accountId","prod","referrerAccountId","dest","destCurrency","redirectUrl","k","encodeURIComponent","iframeBox","wyreStyle","ramp","badge","hostAppName","hostApiKey","REACT_APP_RAMP_KEY","hostLogoUrl","swapAsset","RampInstantSDK","purchase","show","transak","https://global.transak.com/v1/widget.js","REACT_APP_TRANSAK_KEY_TEST","REACT_APP_TRANSAK_KEY_PROD","fiatCurrency","cryptoCurrencyCode","currencyCode","walletAddress","partnerCustomerId","disableWalletAddressForm","transakGlobal","transakStyle","moonpay","REACT_APP_MOONPAY_KEY_TEST","REACT_APP_MOONPAY_KEY_PROD","baseCurrencyCode","showWalletAddressForm","enabledPaymentMethods","navigator","userAgent","cookie","moonpayStyle","https://instant.0x.org/v3/instant.js","tokenParams","RimbleWeb3_context","connector","defaultSelectedAssetData","availableAssetDatas","shouldDisableAnalyticsTracking","defaultAssetBuyAmount","kyberSwap","web3Subscription","decodeLogsData","https://widget.kyber.network/v0.7.5/widget.css","https://widget.kyber.network/v0.7.5/widget.js","querySelectorAll","remove","scripts","lang","paramForwarding","pinnedTokens","defaultPair","commissionId","click","airSwap","https://cdn.airswap.io/airswap-instant-widget.js","onComplete","AirSwapInstant","totle","https://widget.totle.com/latest/dist.js","sourceAssetAddress","sourceAmountDecimal","destinationAssetAddress","destinationAmountDecimal","partnerContractAddress","TotleWidget","nodeId","totleWidgetContainer","./mainnet/v1/index.json","./testnet/mumbai/index.json","webpackContext","webpackContextResolve","./mainnet/v1/artifacts/fx-portal/FxChild.json","./mainnet/v1/artifacts/fx-portal/FxERC1155ChildTunnel.json","./mainnet/v1/artifacts/fx-portal/FxERC1155RootTunnel.json","./mainnet/v1/artifacts/fx-portal/FxERC20ChildToken.json","./mainnet/v1/artifacts/fx-portal/FxERC20ChildTunnel.json","./mainnet/v1/artifacts/fx-portal/FxERC20RootToken.json","./mainnet/v1/artifacts/fx-portal/FxERC20RootTunnel.json","./mainnet/v1/artifacts/fx-portal/FxERC721ChildTunnel.json","./mainnet/v1/artifacts/fx-portal/FxERC721RootTunnel.json","./mainnet/v1/artifacts/fx-portal/FxRoot.json","./mainnet/v1/artifacts/genesis/BorValidatorSet.json","./mainnet/v1/artifacts/genesis/IStateReceiver.json","./mainnet/v1/artifacts/genesis/Migrations.json","./mainnet/v1/artifacts/genesis/StateReceiver.json","./mainnet/v1/artifacts/genesis/System.json","./mainnet/v1/artifacts/genesis/TestBorValidatorSet.json","./mainnet/v1/artifacts/genesis/TestCommitState.json","./mainnet/v1/artifacts/genesis/TestStateReceiver.json","./mainnet/v1/artifacts/genesis/TestSystem.json","./mainnet/v1/artifacts/genesis/ValidatorSet.json","./mainnet/v1/artifacts/genesis/ValidatorVerifier.json","./mainnet/v1/artifacts/plasma/BaseERC20.json","./mainnet/v1/artifacts/plasma/ChainIdMixin.json","./mainnet/v1/artifacts/plasma/ChildChain.json","./mainnet/v1/artifacts/plasma/ChildERC20.json","./mainnet/v1/artifacts/plasma/ChildERC20Proxified.json","./mainnet/v1/artifacts/plasma/ChildERC721.json","./mainnet/v1/artifacts/plasma/ChildERC721Mintable.json","./mainnet/v1/artifacts/plasma/ChildERC721Proxified.json","./mainnet/v1/artifacts/plasma/ChildToken.json","./mainnet/v1/artifacts/plasma/ChildTokenProxy.json","./mainnet/v1/artifacts/plasma/Common.json","./mainnet/v1/artifacts/plasma/ContractReceiver.json","./mainnet/v1/artifacts/plasma/ContractWitRevertingFallback.json","./mainnet/v1/artifacts/plasma/ContractWithFallback.json","./mainnet/v1/artifacts/plasma/ContractWithoutFallback.json","./mainnet/v1/artifacts/plasma/DelegateProxy.json","./mainnet/v1/artifacts/plasma/DepositManager.json","./mainnet/v1/artifacts/plasma/DepositManagerHeader.json","./mainnet/v1/artifacts/plasma/DepositManagerProxy.json","./mainnet/v1/artifacts/plasma/DepositManagerStorage.json","./mainnet/v1/artifacts/plasma/DrainStakeManager.json","./mainnet/v1/artifacts/plasma/Drainable.json","./mainnet/v1/artifacts/plasma/ECVerify.json","./mainnet/v1/artifacts/plasma/ERC165.json","./mainnet/v1/artifacts/plasma/ERC20.json","./mainnet/v1/artifacts/plasma/ERC20Detailed.json","./mainnet/v1/artifacts/plasma/ERC20Mintable.json","./mainnet/v1/artifacts/plasma/ERC20NonTransferable.json","./mainnet/v1/artifacts/plasma/ERC20Predicate.json","./mainnet/v1/artifacts/plasma/ERC20PredicateBurnOnly.json","./mainnet/v1/artifacts/plasma/ERC721.json","./mainnet/v1/artifacts/plasma/ERC721Enumerable.json","./mainnet/v1/artifacts/plasma/ERC721Full.json","./mainnet/v1/artifacts/plasma/ERC721Metadata.json","./mainnet/v1/artifacts/plasma/ERC721MetadataMintable.json","./mainnet/v1/artifacts/plasma/ERC721Mintable.json","./mainnet/v1/artifacts/plasma/ERC721PlasmaMintable.json","./mainnet/v1/artifacts/plasma/ERC721Predicate.json","./mainnet/v1/artifacts/plasma/ERC721PredicateBurnOnly.json","./mainnet/v1/artifacts/plasma/ERCProxy.json","./mainnet/v1/artifacts/plasma/ExitNFT.json","./mainnet/v1/artifacts/plasma/FallbackManager.json","./mainnet/v1/artifacts/plasma/GnosisSafe.json","./mainnet/v1/artifacts/plasma/GnosisSafeProxy.json","./mainnet/v1/artifacts/plasma/Governable.json","./mainnet/v1/artifacts/plasma/Governance.json","./mainnet/v1/artifacts/plasma/GovernanceLockable.json","./mainnet/v1/artifacts/plasma/GovernanceLockableTest.json","./mainnet/v1/artifacts/plasma/GovernanceProxy.json","./mainnet/v1/artifacts/plasma/IDepositManager.json","./mainnet/v1/artifacts/plasma/IERC165.json","./mainnet/v1/artifacts/plasma/IERC20.json","./mainnet/v1/artifacts/plasma/IERC721.json","./mainnet/v1/artifacts/plasma/IERC721Enumerable.json","./mainnet/v1/artifacts/plasma/IERC721Metadata.json","./mainnet/v1/artifacts/plasma/IERC721Receiver.json","./mainnet/v1/artifacts/plasma/IErcPredicate.json","./mainnet/v1/artifacts/plasma/IGovernance.json","./mainnet/v1/artifacts/plasma/IParentToken.json","./mainnet/v1/artifacts/plasma/IPredicate.json","./mainnet/v1/artifacts/plasma/IRootChain.json","./mainnet/v1/artifacts/plasma/ISignatureValidator.json","./mainnet/v1/artifacts/plasma/ISlashingManager.json","./mainnet/v1/artifacts/plasma/IStakeManager.json","./mainnet/v1/artifacts/plasma/IStakeManagerLocal.json","./mainnet/v1/artifacts/plasma/IValidatorShare.json","./mainnet/v1/artifacts/plasma/IWithdrawManager.json","./mainnet/v1/artifacts/plasma/LibEIP712Domain.json","./mainnet/v1/artifacts/plasma/LibTokenTransferOrder.json","./mainnet/v1/artifacts/plasma/Lockable.json","./mainnet/v1/artifacts/plasma/MRC20.json","./mainnet/v1/artifacts/plasma/Marketplace.json","./mainnet/v1/artifacts/plasma/MarketplacePredicate.json","./mainnet/v1/artifacts/plasma/MarketplacePredicateTest.json","./mainnet/v1/artifacts/plasma/MarketplaceToken.json","./mainnet/v1/artifacts/plasma/MasterCopy.json","./mainnet/v1/artifacts/plasma/MaticWETH.json","./mainnet/v1/artifacts/plasma/Merkle.json","./mainnet/v1/artifacts/plasma/Migrations.json","./mainnet/v1/artifacts/plasma/MintableERC721Predicate.json","./mainnet/v1/artifacts/plasma/MinterRole.json","./mainnet/v1/artifacts/plasma/Module.json","./mainnet/v1/artifacts/plasma/ModuleManager.json","./mainnet/v1/artifacts/plasma/Ownable.json","./mainnet/v1/artifacts/plasma/OwnableLockable.json","./mainnet/v1/artifacts/plasma/OwnerManager.json","./mainnet/v1/artifacts/plasma/ParentTokenMock.json","./mainnet/v1/artifacts/plasma/PredicateUtils.json","./mainnet/v1/artifacts/plasma/PriorityQueue.json","./mainnet/v1/artifacts/plasma/Proxy.json","./mainnet/v1/artifacts/plasma/ProxyStorage.json","./mainnet/v1/artifacts/plasma/ProxyTestImpl.json","./mainnet/v1/artifacts/plasma/ProxyTestImplStorageLayoutChange.json","./mainnet/v1/artifacts/plasma/Registry.json","./mainnet/v1/artifacts/plasma/RootChain.json","./mainnet/v1/artifacts/plasma/RootChainHeader.json","./mainnet/v1/artifacts/plasma/RootChainProxy.json","./mainnet/v1/artifacts/plasma/RootChainStorage.json","./mainnet/v1/artifacts/plasma/RootChainable.json","./mainnet/v1/artifacts/plasma/RootERC721.json","./mainnet/v1/artifacts/plasma/SlashingManager.json","./mainnet/v1/artifacts/plasma/StakeManager.json","./mainnet/v1/artifacts/plasma/StakeManagerProxy.json","./mainnet/v1/artifacts/plasma/StakeManagerStorage.json","./mainnet/v1/artifacts/plasma/StakeManagerTest.json","./mainnet/v1/artifacts/plasma/StakeManagerTestable.json","./mainnet/v1/artifacts/plasma/StakingInfo.json","./mainnet/v1/artifacts/plasma/StakingNFT.json","./mainnet/v1/artifacts/plasma/StateReceiver.json","./mainnet/v1/artifacts/plasma/StateSender.json","./mainnet/v1/artifacts/plasma/StateSyncerVerifier.json","./mainnet/v1/artifacts/plasma/TestMRC20.json","./mainnet/v1/artifacts/plasma/TestToken.json","./mainnet/v1/artifacts/plasma/TransferWithSigPredicate.json","./mainnet/v1/artifacts/plasma/TransferWithSigUtils.json","./mainnet/v1/artifacts/plasma/UpgradableProxy.json","./mainnet/v1/artifacts/plasma/ValidatorShare.json","./mainnet/v1/artifacts/plasma/ValidatorShareFactory.json","./mainnet/v1/artifacts/plasma/ValidatorShareProxy.json","./mainnet/v1/artifacts/plasma/ValidatorShareTest.json","./mainnet/v1/artifacts/plasma/WETH.json","./mainnet/v1/artifacts/plasma/WithdrawManager.json","./mainnet/v1/artifacts/plasma/WithdrawManagerHeader.json","./mainnet/v1/artifacts/plasma/WithdrawManagerProxy.json","./mainnet/v1/artifacts/plasma/WithdrawManagerStorage.json","./mainnet/v1/artifacts/pos/AccessControl.json","./mainnet/v1/artifacts/pos/AccessControlMixin.json","./mainnet/v1/artifacts/pos/ChainConstants.json","./mainnet/v1/artifacts/pos/ChildChainManager.json","./mainnet/v1/artifacts/pos/ChildChainManagerProxy.json","./mainnet/v1/artifacts/pos/ChildERC1155.json","./mainnet/v1/artifacts/pos/ChildERC20.json","./mainnet/v1/artifacts/pos/ChildERC721.json","./mainnet/v1/artifacts/pos/ChildMintableERC721.json","./mainnet/v1/artifacts/pos/ChildTunnel.json","./mainnet/v1/artifacts/pos/DummyERC1155.json","./mainnet/v1/artifacts/pos/DummyERC20.json","./mainnet/v1/artifacts/pos/DummyERC721.json","./mainnet/v1/artifacts/pos/DummyMintableERC721.json","./mainnet/v1/artifacts/pos/DummyStateSender.json","./mainnet/v1/artifacts/pos/EIP712Base.json","./mainnet/v1/artifacts/pos/ERC1155.json","./mainnet/v1/artifacts/pos/ERC1155Predicate.json","./mainnet/v1/artifacts/pos/ERC1155PredicateProxy.json","./mainnet/v1/artifacts/pos/ERC1155Receiver.json","./mainnet/v1/artifacts/pos/ERC165.json","./mainnet/v1/artifacts/pos/ERC20.json","./mainnet/v1/artifacts/pos/ERC20Predicate.json","./mainnet/v1/artifacts/pos/ERC20PredicateProxy.json","./mainnet/v1/artifacts/pos/ERC721.json","./mainnet/v1/artifacts/pos/ERC721Predicate.json","./mainnet/v1/artifacts/pos/ERC721PredicateProxy.json","./mainnet/v1/artifacts/pos/EtherPredicate.json","./mainnet/v1/artifacts/pos/EtherPredicateProxy.json","./mainnet/v1/artifacts/pos/ICheckpointManager.json","./mainnet/v1/artifacts/pos/IChildChainManager.json","./mainnet/v1/artifacts/pos/IChildToken.json","./mainnet/v1/artifacts/pos/IERC1155.json","./mainnet/v1/artifacts/pos/IERC1155MetadataURI.json","./mainnet/v1/artifacts/pos/IERC1155Receiver.json","./mainnet/v1/artifacts/pos/IERC165.json","./mainnet/v1/artifacts/pos/IERC20.json","./mainnet/v1/artifacts/pos/IERC721.json","./mainnet/v1/artifacts/pos/IERC721Enumerable.json","./mainnet/v1/artifacts/pos/IERC721Metadata.json","./mainnet/v1/artifacts/pos/IERC721Receiver.json","./mainnet/v1/artifacts/pos/IERCProxy.json","./mainnet/v1/artifacts/pos/IMintableERC721.json","./mainnet/v1/artifacts/pos/IRootChainManager.json","./mainnet/v1/artifacts/pos/IStateSender.json","./mainnet/v1/artifacts/pos/ITokenPredicate.json","./mainnet/v1/artifacts/pos/MaticWETH.json","./mainnet/v1/artifacts/pos/Merkle.json","./mainnet/v1/artifacts/pos/MerklePatriciaTest.json","./mainnet/v1/artifacts/pos/Migrations.json","./mainnet/v1/artifacts/pos/MintableERC1155Predicate.json","./mainnet/v1/artifacts/pos/MintableERC1155PredicateProxy.json","./mainnet/v1/artifacts/pos/MintableERC20Predicate.json","./mainnet/v1/artifacts/pos/MintableERC20PredicateProxy.json","./mainnet/v1/artifacts/pos/MintableERC721Predicate.json","./mainnet/v1/artifacts/pos/MintableERC721PredicateProxy.json","./mainnet/v1/artifacts/pos/MockCheckpointManager.json","./mainnet/v1/artifacts/pos/NativeMetaTransaction.json","./mainnet/v1/artifacts/pos/NetworkAgnostic.json","./mainnet/v1/artifacts/pos/Proxy.json","./mainnet/v1/artifacts/pos/ProxyTestImpl.json","./mainnet/v1/artifacts/pos/ProxyTestImplStorageLayoutChange.json","./mainnet/v1/artifacts/pos/RootChainManager.json","./mainnet/v1/artifacts/pos/RootChainManagerProxy.json","./mainnet/v1/artifacts/pos/RootChainManagerStorage.json","./mainnet/v1/artifacts/pos/RootTunnel.json","./mainnet/v1/artifacts/pos/UpgradableProxy.json","./networks.json","./testnet/mumbai/artifacts/fx-portal/FxChild.json","./testnet/mumbai/artifacts/fx-portal/FxERC1155ChildTunnel.json","./testnet/mumbai/artifacts/fx-portal/FxERC1155RootTunnel.json","./testnet/mumbai/artifacts/fx-portal/FxERC20ChildToken.json","./testnet/mumbai/artifacts/fx-portal/FxERC20ChildTunnel.json","./testnet/mumbai/artifacts/fx-portal/FxERC20RootToken.json","./testnet/mumbai/artifacts/fx-portal/FxERC20RootTunnel.json","./testnet/mumbai/artifacts/fx-portal/FxERC721ChildTunnel.json","./testnet/mumbai/artifacts/fx-portal/FxERC721RootTunnel.json","./testnet/mumbai/artifacts/fx-portal/FxRoot.json","./testnet/mumbai/artifacts/genesis/BorValidatorSet.json","./testnet/mumbai/artifacts/genesis/IStateReceiver.json","./testnet/mumbai/artifacts/genesis/Migrations.json","./testnet/mumbai/artifacts/genesis/StateReceiver.json","./testnet/mumbai/artifacts/genesis/System.json","./testnet/mumbai/artifacts/genesis/TestBorValidatorSet.json","./testnet/mumbai/artifacts/genesis/TestCommitState.json","./testnet/mumbai/artifacts/genesis/TestStateReceiver.json","./testnet/mumbai/artifacts/genesis/TestSystem.json","./testnet/mumbai/artifacts/genesis/ValidatorSet.json","./testnet/mumbai/artifacts/genesis/ValidatorVerifier.json","./testnet/mumbai/artifacts/plasma/BaseERC20.json","./testnet/mumbai/artifacts/plasma/ChainIdMixin.json","./testnet/mumbai/artifacts/plasma/ChildChain.json","./testnet/mumbai/artifacts/plasma/ChildERC20.json","./testnet/mumbai/artifacts/plasma/ChildERC20Proxified.json","./testnet/mumbai/artifacts/plasma/ChildERC721.json","./testnet/mumbai/artifacts/plasma/ChildERC721Mintable.json","./testnet/mumbai/artifacts/plasma/ChildERC721Proxified.json","./testnet/mumbai/artifacts/plasma/ChildToken.json","./testnet/mumbai/artifacts/plasma/ChildTokenProxy.json","./testnet/mumbai/artifacts/plasma/Common.json","./testnet/mumbai/artifacts/plasma/ContractReceiver.json","./testnet/mumbai/artifacts/plasma/ContractWitRevertingFallback.json","./testnet/mumbai/artifacts/plasma/ContractWithFallback.json","./testnet/mumbai/artifacts/plasma/ContractWithoutFallback.json","./testnet/mumbai/artifacts/plasma/DelegateProxy.json","./testnet/mumbai/artifacts/plasma/DepositManager.json","./testnet/mumbai/artifacts/plasma/DepositManagerHeader.json","./testnet/mumbai/artifacts/plasma/DepositManagerProxy.json","./testnet/mumbai/artifacts/plasma/DepositManagerStorage.json","./testnet/mumbai/artifacts/plasma/DrainStakeManager.json","./testnet/mumbai/artifacts/plasma/Drainable.json","./testnet/mumbai/artifacts/plasma/ECVerify.json","./testnet/mumbai/artifacts/plasma/ERC165.json","./testnet/mumbai/artifacts/plasma/ERC20.json","./testnet/mumbai/artifacts/plasma/ERC20Detailed.json","./testnet/mumbai/artifacts/plasma/ERC20Mintable.json","./testnet/mumbai/artifacts/plasma/ERC20NonTransferable.json","./testnet/mumbai/artifacts/plasma/ERC20Predicate.json","./testnet/mumbai/artifacts/plasma/ERC20PredicateBurnOnly.json","./testnet/mumbai/artifacts/plasma/ERC721.json","./testnet/mumbai/artifacts/plasma/ERC721Enumerable.json","./testnet/mumbai/artifacts/plasma/ERC721Full.json","./testnet/mumbai/artifacts/plasma/ERC721Metadata.json","./testnet/mumbai/artifacts/plasma/ERC721MetadataMintable.json","./testnet/mumbai/artifacts/plasma/ERC721Mintable.json","./testnet/mumbai/artifacts/plasma/ERC721PlasmaMintable.json","./testnet/mumbai/artifacts/plasma/ERC721Predicate.json","./testnet/mumbai/artifacts/plasma/ERC721PredicateBurnOnly.json","./testnet/mumbai/artifacts/plasma/ERCProxy.json","./testnet/mumbai/artifacts/plasma/ExitNFT.json","./testnet/mumbai/artifacts/plasma/FallbackManager.json","./testnet/mumbai/artifacts/plasma/GnosisSafe.json","./testnet/mumbai/artifacts/plasma/GnosisSafeProxy.json","./testnet/mumbai/artifacts/plasma/Governable.json","./testnet/mumbai/artifacts/plasma/Governance.json","./testnet/mumbai/artifacts/plasma/GovernanceLockable.json","./testnet/mumbai/artifacts/plasma/GovernanceLockableTest.json","./testnet/mumbai/artifacts/plasma/GovernanceProxy.json","./testnet/mumbai/artifacts/plasma/IDepositManager.json","./testnet/mumbai/artifacts/plasma/IERC165.json","./testnet/mumbai/artifacts/plasma/IERC20.json","./testnet/mumbai/artifacts/plasma/IERC721.json","./testnet/mumbai/artifacts/plasma/IERC721Enumerable.json","./testnet/mumbai/artifacts/plasma/IERC721Metadata.json","./testnet/mumbai/artifacts/plasma/IERC721Receiver.json","./testnet/mumbai/artifacts/plasma/IErcPredicate.json","./testnet/mumbai/artifacts/plasma/IGovernance.json","./testnet/mumbai/artifacts/plasma/IParentToken.json","./testnet/mumbai/artifacts/plasma/IPredicate.json","./testnet/mumbai/artifacts/plasma/IRootChain.json","./testnet/mumbai/artifacts/plasma/ISignatureValidator.json","./testnet/mumbai/artifacts/plasma/ISlashingManager.json","./testnet/mumbai/artifacts/plasma/IStakeManager.json","./testnet/mumbai/artifacts/plasma/IStakeManagerLocal.json","./testnet/mumbai/artifacts/plasma/IValidatorShare.json","./testnet/mumbai/artifacts/plasma/IWithdrawManager.json","./testnet/mumbai/artifacts/plasma/LibEIP712Domain.json","./testnet/mumbai/artifacts/plasma/LibTokenTransferOrder.json","./testnet/mumbai/artifacts/plasma/Lockable.json","./testnet/mumbai/artifacts/plasma/MRC20.json","./testnet/mumbai/artifacts/plasma/Marketplace.json","./testnet/mumbai/artifacts/plasma/MarketplacePredicate.json","./testnet/mumbai/artifacts/plasma/MarketplacePredicateTest.json","./testnet/mumbai/artifacts/plasma/MarketplaceToken.json","./testnet/mumbai/artifacts/plasma/MasterCopy.json","./testnet/mumbai/artifacts/plasma/MaticWETH.json","./testnet/mumbai/artifacts/plasma/Merkle.json","./testnet/mumbai/artifacts/plasma/Migrations.json","./testnet/mumbai/artifacts/plasma/MintableERC721Predicate.json","./testnet/mumbai/artifacts/plasma/MinterRole.json","./testnet/mumbai/artifacts/plasma/Module.json","./testnet/mumbai/artifacts/plasma/ModuleManager.json","./testnet/mumbai/artifacts/plasma/Ownable.json","./testnet/mumbai/artifacts/plasma/OwnableLockable.json","./testnet/mumbai/artifacts/plasma/OwnerManager.json","./testnet/mumbai/artifacts/plasma/ParentTokenMock.json","./testnet/mumbai/artifacts/plasma/PredicateUtils.json","./testnet/mumbai/artifacts/plasma/PriorityQueue.json","./testnet/mumbai/artifacts/plasma/Proxy.json","./testnet/mumbai/artifacts/plasma/ProxyStorage.json","./testnet/mumbai/artifacts/plasma/ProxyTestImpl.json","./testnet/mumbai/artifacts/plasma/ProxyTestImplStorageLayoutChange.json","./testnet/mumbai/artifacts/plasma/Registry.json","./testnet/mumbai/artifacts/plasma/RootChain.json","./testnet/mumbai/artifacts/plasma/RootChainHeader.json","./testnet/mumbai/artifacts/plasma/RootChainProxy.json","./testnet/mumbai/artifacts/plasma/RootChainStorage.json","./testnet/mumbai/artifacts/plasma/RootChainable.json","./testnet/mumbai/artifacts/plasma/RootERC721.json","./testnet/mumbai/artifacts/plasma/SlashingManager.json","./testnet/mumbai/artifacts/plasma/StakeManager.json","./testnet/mumbai/artifacts/plasma/StakeManagerProxy.json","./testnet/mumbai/artifacts/plasma/StakeManagerStorage.json","./testnet/mumbai/artifacts/plasma/StakeManagerTest.json","./testnet/mumbai/artifacts/plasma/StakeManagerTestable.json","./testnet/mumbai/artifacts/plasma/StakingInfo.json","./testnet/mumbai/artifacts/plasma/StakingNFT.json","./testnet/mumbai/artifacts/plasma/StateReceiver.json","./testnet/mumbai/artifacts/plasma/StateSender.json","./testnet/mumbai/artifacts/plasma/StateSyncerVerifier.json","./testnet/mumbai/artifacts/plasma/TestMRC20.json","./testnet/mumbai/artifacts/plasma/TestToken.json","./testnet/mumbai/artifacts/plasma/TransferWithSigPredicate.json","./testnet/mumbai/artifacts/plasma/TransferWithSigUtils.json","./testnet/mumbai/artifacts/plasma/UpgradableProxy.json","./testnet/mumbai/artifacts/plasma/ValidatorShare.json","./testnet/mumbai/artifacts/plasma/ValidatorShareFactory.json","./testnet/mumbai/artifacts/plasma/ValidatorShareProxy.json","./testnet/mumbai/artifacts/plasma/ValidatorShareTest.json","./testnet/mumbai/artifacts/plasma/WETH.json","./testnet/mumbai/artifacts/plasma/WithdrawManager.json","./testnet/mumbai/artifacts/plasma/WithdrawManagerHeader.json","./testnet/mumbai/artifacts/plasma/WithdrawManagerProxy.json","./testnet/mumbai/artifacts/plasma/WithdrawManagerStorage.json","./testnet/mumbai/artifacts/pos/AccessControl.json","./testnet/mumbai/artifacts/pos/AccessControlMixin.json","./testnet/mumbai/artifacts/pos/ChainConstants.json","./testnet/mumbai/artifacts/pos/ChildChainManager.json","./testnet/mumbai/artifacts/pos/ChildChainManagerProxy.json","./testnet/mumbai/artifacts/pos/ChildERC1155.json","./testnet/mumbai/artifacts/pos/ChildERC20.json","./testnet/mumbai/artifacts/pos/ChildERC721.json","./testnet/mumbai/artifacts/pos/ChildMintableERC721.json","./testnet/mumbai/artifacts/pos/ChildTunnel.json","./testnet/mumbai/artifacts/pos/DummyERC1155.json","./testnet/mumbai/artifacts/pos/DummyERC20.json","./testnet/mumbai/artifacts/pos/DummyERC721.json","./testnet/mumbai/artifacts/pos/DummyMintableERC721.json","./testnet/mumbai/artifacts/pos/DummyStateSender.json","./testnet/mumbai/artifacts/pos/EIP712Base.json","./testnet/mumbai/artifacts/pos/ERC1155.json","./testnet/mumbai/artifacts/pos/ERC1155Predicate.json","./testnet/mumbai/artifacts/pos/ERC1155PredicateProxy.json","./testnet/mumbai/artifacts/pos/ERC1155Receiver.json","./testnet/mumbai/artifacts/pos/ERC165.json","./testnet/mumbai/artifacts/pos/ERC20.json","./testnet/mumbai/artifacts/pos/ERC20Predicate.json","./testnet/mumbai/artifacts/pos/ERC20PredicateProxy.json","./testnet/mumbai/artifacts/pos/ERC721.json","./testnet/mumbai/artifacts/pos/ERC721Predicate.json","./testnet/mumbai/artifacts/pos/ERC721PredicateProxy.json","./testnet/mumbai/artifacts/pos/EtherPredicate.json","./testnet/mumbai/artifacts/pos/EtherPredicateProxy.json","./testnet/mumbai/artifacts/pos/ICheckpointManager.json","./testnet/mumbai/artifacts/pos/IChildChainManager.json","./testnet/mumbai/artifacts/pos/IChildToken.json","./testnet/mumbai/artifacts/pos/IERC1155.json","./testnet/mumbai/artifacts/pos/IERC1155MetadataURI.json","./testnet/mumbai/artifacts/pos/IERC1155Receiver.json","./testnet/mumbai/artifacts/pos/IERC165.json","./testnet/mumbai/artifacts/pos/IERC20.json","./testnet/mumbai/artifacts/pos/IERC721.json","./testnet/mumbai/artifacts/pos/IERC721Enumerable.json","./testnet/mumbai/artifacts/pos/IERC721Metadata.json","./testnet/mumbai/artifacts/pos/IERC721Receiver.json","./testnet/mumbai/artifacts/pos/IERCProxy.json","./testnet/mumbai/artifacts/pos/IMintableERC721.json","./testnet/mumbai/artifacts/pos/IRootChainManager.json","./testnet/mumbai/artifacts/pos/IStateSender.json","./testnet/mumbai/artifacts/pos/ITokenPredicate.json","./testnet/mumbai/artifacts/pos/MaticWETH.json","./testnet/mumbai/artifacts/pos/Merkle.json","./testnet/mumbai/artifacts/pos/MerklePatriciaTest.json","./testnet/mumbai/artifacts/pos/Migrations.json","./testnet/mumbai/artifacts/pos/MintableERC1155Predicate.json","./testnet/mumbai/artifacts/pos/MintableERC1155PredicateProxy.json","./testnet/mumbai/artifacts/pos/MintableERC20Predicate.json","./testnet/mumbai/artifacts/pos/MintableERC20PredicateProxy.json","./testnet/mumbai/artifacts/pos/MintableERC721Predicate.json","./testnet/mumbai/artifacts/pos/MintableERC721PredicateProxy.json","./testnet/mumbai/artifacts/pos/MockCheckpointManager.json","./testnet/mumbai/artifacts/pos/NativeMetaTransaction.json","./testnet/mumbai/artifacts/pos/NetworkAgnostic.json","./testnet/mumbai/artifacts/pos/Proxy.json","./testnet/mumbai/artifacts/pos/ProxyTestImpl.json","./testnet/mumbai/artifacts/pos/ProxyTestImplStorageLayoutChange.json","./testnet/mumbai/artifacts/pos/RootChainManager.json","./testnet/mumbai/artifacts/pos/RootChainManagerProxy.json","./testnet/mumbai/artifacts/pos/RootChainManagerStorage.json","./testnet/mumbai/artifacts/pos/RootTunnel.json","./testnet/mumbai/artifacts/pos/UpgradableProxy.json","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_10__","TransactionListFilters","activeFilters","assets","setFilter","applyFilters","toggle","toggleOpened","resetFilter","resetFilters","transition","filters","filterCategory","filterValues","TableCellHeader","filterValue","filterLabel","isChecked","filterName","prevTxs","txsPerPage","totalTxs","totalPages","renderedTxs","lastBlockNumber","txsIndexes","parsedValue","loadTxs","enabledActions","hasActiveFilters","m","src_TransactionListFilters_TransactionListFilters","txHashKey","prevPage","nextPage","oldTokenName","oldIdleTokens","skipMigration","biconomyLimitReached","toggleSkipMigration","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_5__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_4__","executeAction","idleTokenToRedeem","_clientProtocolAmountsRedeem","gasLimitRedeem","callbackRedeem","callbackReceiptRedeem","toggleMetaTransactionsEnabled","checkMigrationContractApproved","migrationContractName","oldIdleTokensConverted","oldContractInfo","oldContractABI","biconomyLimits","disapproveMigration","approveMigration","migrationMethod","callbackMigrate","callbackReceiptMigrate","_skipRebalance","_migrationContract$me","skipMintForDeposit","biconomyChanged","usePermitChanged","fastBalanceSelectorChanged","batchMigrationEnabled","SkipMigrationComponent","react__WEBPACK_IMPORTED_MODULE_11___default","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_16__","rimble_ui__WEBPACK_IMPORTED_MODULE_20__","biconomyEnabled","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_13__","migrateTextBefore","migrateText","_TransactionField_TransactionField__WEBPACK_IMPORTED_MODULE_18__","_TxProgressBar_TxProgressBar__WEBPACK_IMPORTED_MODULE_17__","_FastBalanceSelector_FastBalanceSelector__WEBPACK_IMPORTED_MODULE_19__","functionName","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_14__","migrationImage","migrationTextProps","approveText","rowsPerPage","processedRows","processRows","totalRows","_TableHeader_TableHeader__WEBPACK_IMPORTED_MODULE_11__","rowIndex","_TableRow_TableRow__WEBPACK_IMPORTED_MODULE_8__","CustomField","_TableRow_TableRow__WEBPACK_IMPORTED_MODULE_9__","Tos","h1","h2","listStyle","theme_dark","exit","TorusConnector","kwargs","Torus","api","rest","objectWithoutProperties","buttonPosition","init","login","getUserInfo","getPublicAddress","verifier","verifierId","logout","updateNetworkId","Connector","AuthereumConnector","Authereum","getProvider","enable","getAccounts","accounts","disable","constructor","GnosisSafeConnector","SafeAppConnector","safeLoaded","checkSafeApp","activate","getAccount","getSafeInfo","isSafeApp","deactivate","WalletLinkConnector","WalletLink","infuraUrl","appLogoUrl","walletLink","darkMode","makeWeb3Provider","disconnect","close","WalletConnectConnector","WalletConnectProvider","infuraId","InjectedConnector","Connectors","NetworkOnlyConnector","TrezorConnector","LedgerConnector","FortmaticConnector","PortisConnector","manifestEmail","REACT_APP_TREZOR_MANIFEST_EMAIL","manifestAppUrl","REACT_APP_TREZOR_MANIFEST_URL","fortmaticApiKey","REACT_APP_FORTMATIC_KEY_MAINNET","portisDAppId","REACT_APP_PORTIS_DAPP_ID","portisNetwork","REACT_APP_PORTIS_NETWORK","supportedNetworkURLs","Injected","Infura","providerURL","Trezor","TrezorApi","Ledger","WalletConnect","bridge","Fortmatic","FortmaticApi","logoutOnDeactivation","Portis","PortisApi","dAppId","AuthereumApi","TorusApi","buildEnv","enableLogging","host","showTorusButton","WrongNetworkBanner","NetworkUtil","components_WrongNetworkBanner","NoWeb3BrowserModal","renderContent","RimbleUtil","isMobileDevice","NoWalletModal","icononly","Outline","GeneralUtil","hasMetaMask","isMetaMask","isTrustWallet","isTrust","isCoinbaseWallet","hasDapper","DapperEthereum","isDapper","isOpera","isAndroid","isIos","MSStream","WrongNetworkModal","RimbleUtils","TransactionFeeModal","subtitle2","Web3ConnectionButtons","context","useWeb3Context","setConnector","walletProvider","connectionCallback","unsetConnector","isMetamask","isGnosisSafe","safe","browserWalletDetected","allowedConnectors","registerPage","registerPageByDefault","basicConnectorsName","injectedIndex","splice","gnosisIndex","connectorInfo","walletIcon","buttonStyle","ConnectionModal","showTxFees","currentSection","showInstructions","askCustomAddress","closeRemainingTime","customAddressError","newToEthereumChoice","toggleShowTxFees","setStoredSection","closeCountdown","setWalletChoice","choice","setCurrentSection","connectCustomAddress","updateCustomAddress","renderModalContent","TOSacceptance","react_router_dom","newToEthereum","showConnectionButtons","assertThisInitialized","marginBottom","renderFooter","components_TransactionFeeModal","ConnectionPendingModal","UserRejectedConnectionModal","sendMessageAgain","initAccount","LowFundsModal","showSecondary","toggleQRVisible","alignContent","as","h5","ConnectionModalUtil","components_NoWeb3BrowserModal","closeNoWeb3BrowserModal","noWeb3BrowserModalIsOpen","components_NoWalletModal","closeNoWalletModal","noWalletModalIsOpen","components_WrongNetworkModal","closeWrongNetworkModal","wrongNetworkModalIsOpen","components_ConnectionModal","validateAccount","closeConnectionModal","connectionModalIsOpen","accountValidated","components_ConnectionPendingModal","closeConnectionPendingModal","accountConnectionPending","components_UserRejectedConnectionModal","closeUserRejectedConnectionModal","userRejectedConnect","components_LowFundsModal","closeLowFundsModal","lowFundsModalIsOpen","ConnectionErrorModal","setFirstValidConnector","closeConnectionErrorModal","isLedger","connectionError","TransactionErrorModal","closeTransactionErrorModal","isLedgerError","transactionError","isSlowTxError","INFURA_KEY","RimbleTransactionContext","createContext","currentWeb3","permitClient","web3Providers","accountBalance","initWeb3","maticPlasmaClient","accountBalanceLow","accountBalanceToken","checkPreflight","checkNetwork","isSupportedNetwork","accountInizialized","rejectValidation","accountValidationPending","initializeContracts","rejectAccountConnect","enableUnderlyingWithdraw","userRejectedValidation","transactionConnectionModalIsOpen","openLowFundsModal","openWrongNetworkModal","openNoWeb3BrowserModal","openConnectionErrorModal","openTransactionErrorModal","openConnectionPendingModal","openUserRejectedConnectionModal","openUserRejectedValidationModal","closeUserRejectedValidationModal","meta","setConnectorName","biconomyLoginProcessing","RimbleTransaction","handleNetworkChanged","reload","connectGnosisSafe","testTransaction","createTransaction","addTransaction","errorMessage","isWalletConnectClosedModalError","customAddressChanged","contextAccountChanged","accountDisconnected","availableStrategiesChanged","gnosisSafeLoaded","setNetwork","initCurrentWeb3","useWeb3Provider","web3InfuraRpc","connectorNameChanged","web3Host","web3Provider","forceCallback","polygonConfig","web3PolygonRpc","maticProvider","parentProvider","maticPOSClientConfig","maticPlasmaClientConfig","web3Callback","originalWeb3","biconomyWeb3Provider","netId","providerRpc","library","IFrameEthereumProvider","MaticJs","MaticPOSClient","web3Injected","callbackAfterLogin","setCallbackAfterLogin","isLogin","userContract","Biconomy","onEvent","READY","ERROR","_args7","simpleIDInfo","simpleIDParams","SimpleID","wallets","shownNotifications","isError","race","$crisp","notificationId","content","Sentry","increaseAmount","_ref15","balanceOf","determineAccountLowBalance","openConnectionModal","_args25","getNetworkType","getNetworkId","currentNetworkChanged","requiredNetworkChanged","_args27","contractMethod","_this$state","manualConfirmationTimeoutId","confirmationCallback","manualConfirmation","receiptCallback","isDeniedTx","confirmationCount","confidenceThreshold","recentEvent","timeout","lastUpdated","updatedTransaction","openNoWalletModal","CrispClient","accountBalanceDAI","subscribedTransactions","connectionErrorModalOpened","transactionErrorModalOpened","Provider","ConnectionModalsUtil","components_TransactionErrorModal","components_ConnectionErrorModal","utilities_NetworkUtil","Consumer","governanceEnabled","offsetTop","ScrollToTop","pathname","useLocation","useEffect","PageNotFound","Header_styles","NetworkOverview","getNetworkCircleColor","circleColor","networkCircle","DebuggerButtons","Web3Debugger","components_NetworkOverview","Web3Debugger_DebuggerButtons","node","IdleCDO","IdleStrategy","IdleCDOTrancheRewards","TransactionToastMessages","started","confirmed","TransactionToastUtil","collectionHasNewObject","prevCollection","currentCollection","getNewObjectFromCollection","objectKey","getUpdatedObjectFromCollection","object","getTransactionFromCollection","identifier","collection","getUpdatedTransaction","currentTx","prevTx","processTransactionUpdates","showTransactionToast","toastMeta","getTransactionToastMeta","closeElem","transactionToastMeta","transactionAction","charAt","newMessage","Landing","lazy","Dashboard","Governance","App","currentEnv","selectedTab","connecting","genericError","selectedTheme","buyModalOpened","toastMessageProps","unsubscribeFromHistory","closeToastMessage","showToastMessage","processCustomParam","storedCachedData","cachedKeyFound","widthChanged","heightChanged","tabIndex","envEnabled","loadAvailableTokens","warn","jQuery","setThemeMode","closeIframe","iFrames","getElementsByTagName","iframe","contentWindow","parents","loadCustomAddress","loadCurrentEnvironment","strategyChanged","networkChanged","_this9","hasMetamask","store","themeDark","_this10","SuspenseLoader","web3_react_dist_default","web3Api","libraryName","web3_react_dist","recreateOnNetworkChange","recreateOnAccountChange","RimbleWeb3","needsPreflight","initContractCustomProvider","react_router","react","fallback","isDashboard","setToken","setStrategy","openBuyModal","handleMenuClick","selectTab","closeBuyModal","isGovernance","components_Header","src_Web3Debugger_Web3Debugger","exact","updateSelectedTab","expires","acceptOnScroll","cookieName","acceptOnScrollPercentage","marginTop","overflowY","src_Tos_Tos","src_PageNotFound_PageNotFound","utilities_TransactionToastUtil","Boolean","hostname","dsn","beforeSend","hint","originalException","ReactDOM","src_App_App","serviceWorker","registration","unregister","anonymous","indexed","govTokensDisabled","defiPrime","crToken","cToken","yToken","iToken","CHAI","fToken","defiScoreDisabled","disabledMessageRedeemKey","disabledMessageDepositKey","footer","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1___default","rimble_ui__WEBPACK_IMPORTED_MODULE_3__","bgLayer","backgroundRepeat","backgroundPosition","backgroundSize","backgroundImage","subtitleProps","BackButton","polished__WEBPACK_IMPORTED_MODULE_0__","darkBlue","blurple","consensysblue","readableColor","VariationNumber","IconDirection","iconPos","loading-dots","loading-dots--dot","dot-keyframes","currYear","getFullYear","columnWidth","_ExtLink_ExtLink__WEBPACK_IMPORTED_MODULE_8__","role","aria-label","react_router_dom__WEBPACK_IMPORTED_MODULE_7__","ColTitle","componentHasChildren","fieldPath","customFieldName","customFieldProps","HeadingComponent","earningsCurveStart","earningsCurveEnd","tokenAPY2","tokenAPR","allocationChartWidth","allocationChartHeight","resizeAllocationChart","aprChartEndTimestamp","aprChartStartTimestamp","aprChartData","newPoint","aprChartWidth","aprChartHeight","resizeAprChart","aprChartType","aprChartProps","firstTokenPrice","firstIdleBlock","performanceChartWidth","performanceChartHeight","resizePerformanceChart","apr_end_date","apr_start_date","apr_start_timestamp","apiResultsPerformanceChart","idleTokenPerformance","performanceChartData","performanceChartType","performanceChartProps","amountToMigrate","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","earningsPercCurveDirection","earningsPercCurve","earningsPercDirection","oldAPY","tokenAPYNoGov","allocationChartRowElement","$allocationChartRowElement","css","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_9__","random","aprChartRowElement","$aprChartRowElement","lineWidth","defs","linearGradientDef","offset","react__WEBPACK_IMPORTED_MODULE_12___default","_CustomTooltip_CustomTooltip__WEBPACK_IMPORTED_MODULE_17__","protocolEarning","_CustomTooltip_CustomTooltipRow__WEBPACK_IMPORTED_MODULE_20__","PerformanceChartRowElement","$PerformanceChartRowElement","blocknumber","rimble_ui__WEBPACK_IMPORTED_MODULE_21__","icon1","icon2","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_14__","react_countup__WEBPACK_IMPORTED_MODULE_11___default","_VariationNumber_VariationNumber__WEBPACK_IMPORTED_MODULE_18__","earningsCurve","governanceTokenName","tooltipMode","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_16__","_AllocationChart_AllocationChart__WEBPACK_IMPORTED_MODULE_19__"],"mappings":"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","file":"static/js/main.cd008a21.chunk.js","sourcesContent":["import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass SmartNumber extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  render() {\n    let formattedNumber = '-';\n    const number = typeof this.props.number !== 'undefined' && !isNaN(this.props.number) && this.props.number !== false && this.props.number !== null ? this.props.number : null;\n\n    if (number){\n      switch (this.props.type){\n        case 'money':\n          formattedNumber = this.functionsUtil.formatMoney(number,this.props.precision);\n        break;\n        default:\n          formattedNumber = this.functionsUtil.abbreviateNumber(number,this.props.decimals,this.props.maxPrecision,this.props.minPrecision);\n        break;\n      }\n    } else {\n      formattedNumber = '-';\n    }\n\n    const flexProps = {\n      width:1,\n      alignItems:'center',\n      flexDirection:'row',\n      justifyContent:'center'\n    };\n\n    // Replace props\n    if (this.props.flexProps && Object.keys(this.props.flexProps).length){\n      Object.keys(this.props.flexProps).forEach(p => {\n        flexProps[p] = this.props.flexProps[p];\n      });\n    }\n\n    const showUnit = this.props.unit && formattedNumber !== '-';\n    const unitPos = this.props.unitPos ? this.props.unitPos : 'right';\n\n    return (\n      <Flex\n        {...flexProps}\n      >\n        {\n          unitPos === 'left' && showUnit &&\n            <Text {...this.props.unitProps}>{this.props.unit}</Text>\n        }\n        <Text {...this.props}>{formattedNumber}</Text>\n        {\n          unitPos === 'right' && showUnit &&\n            <Text {...this.props.unitProps}>{this.props.unit}</Text>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default SmartNumber;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"trancheFlash\":\"TrancheWelcome_trancheFlash__2aaz5\",\"mobile\":\"TrancheWelcome_mobile__fIBQP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"PageNotFound_headerContainer__Ly5Tz\",\"headerBgFiller\":\"PageNotFound_headerBgFiller__1NzlO\",\"bgContainer\":\"PageNotFound_bgContainer__1Racj\",\"list\":\"PageNotFound_list__Cnz-b\",\"textContainer\":\"PageNotFound_textContainer__g_kTm\"};","import React, { Component } from 'react';\nimport { Flex, Link, Text } from \"rimble-ui\";\nimport RoundIconButton from '../RoundIconButton/RoundIconButton';\n\nclass Breadcrumb extends Component {\n  render() {\n\n    const showPathMobile = !!this.props.showPathMobile;\n\n    return (\n      <Flex\n        width={1}\n        id={'breadcrumb'}\n        alignItems={'center'}\n      >\n        {\n          this.props.handleClick && \n           <RoundIconButton\n             buttonProps={{\n               border:2,\n               width:'35px',\n               height:'35px'\n             }}\n             iconSize={'1.2em'}\n             iconName={'ArrowBack'}\n             handleClick={this.props.handleClick}\n           />\n        }\n        {\n          this.props.text && this.props.text.length>0 &&\n           <Link\n             ml={[2,3]}\n             fontSize={[1,2]}\n             fontWeight={3}\n             color={'cellText'}\n             hoverColor={'copyColor'}\n             onClick={this.props.handleClick}\n           >\n            {this.props.text}\n           </Link>\n        }\n        {\n          (!this.props.isMobile || showPathMobile) && this.props.path && this.props.path.length>0 &&\n            this.props.path.map((path,index) => {\n              const link = this.props.pathLink ? (this.props.pathLink[index] || null) : null;\n              const Component = link ? Link : Text;\n              return (\n                <Component\n                  pl={[1,3]}\n                  ml={[1,3]}\n                  fontWeight={3}\n                  fontSize={[1,2]}\n                  hoverColor={'copyColor'}\n                  style={ !this.props.isMobile ? {\n                    maxWidth:'30%',\n                    overflow: 'hidden',\n                    whiteSpace: 'nowrap',\n                    textOverflow: 'ellipsis',\n                    borderLeft: `1px solid ${this.props.theme.colors.divider}`\n                  } : null }\n                  key={`breadcrumb_path_${index}`}\n                  color={link ? 'cellText' : 'statValue'}\n                  onClick={link ? e => this.props.goToSection(link) : null}\n                >\n                  {path}\n                </Component>\n              );\n          })\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default Breadcrumb;","import React, { Component } from 'react';\nimport { Text, Loader } from \"rimble-ui\";\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass ShortHash extends Component {\n\n  state = {\n    text:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const hashChanged = prevProps.hash !== this.props.hash;\n    if (hashChanged){\n      this.loadData();\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async loadData(){\n    const resolveAddress = this.props.resolveAddress !== false;\n    let text = this.functionsUtil.shortenHash(this.props.hash);\n    const ensName = resolveAddress ? await this.functionsUtil.getENSName(this.props.hash) : null;\n    if (ensName){\n      text = ensName;\n    }\n    this.setStateSafe({\n      text\n    });\n  }\n\n  render() {\n    const loader = (<Loader size=\"20px\" />);\n    return this.state.text ? <Text display={'inline'} {...this.props}>{this.state.text}</Text> : loader;\n  }\n}\n\nexport default ShortHash;","import React, { Component } from 'react';\nimport {\n  Flex, Box\n} from \"rimble-ui\";\nimport styles from './LoadingSpinner.module.scss';\n\nclass LoadingSpinner extends Component {\n  render() {\n    return (\n      <Flex\n        alignItems={'center'}\n        justifyContent={'center'}\n      >\n        <Box className={[styles[\"loading-dots\"]]}>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n        </Box>\n      </Flex>\n    );\n  }\n}\n\nexport default LoadingSpinner;\n","import React, { Component } from \"react\";\nimport { Flex, Button } from \"rimble-ui\";\nimport LoadingSpinner from \"../LoadingSpinner/LoadingSpinner.js\";\n\nclass ButtonLoader extends Component {\n  render() {\n    return (\n      <Button onClick={this.props.handleClick} {...this.props.buttonProps}>\n        <Flex\n          flexDirection={\"column\"}\n          alignItems={\"center\"}\n          justifyContent={\"center\"}\n        >\n          <Flex width={1} display={this.props.isLoading ? \"flex\" : \"none\"}>\n            <LoadingSpinner />\n          </Flex>\n          <Flex width={1} display={this.props.isLoading ? \"none\" : \"flex\"}>\n            {this.props.buttonText}\n          </Flex>\n        </Flex>\n      </Button>\n    );\n  }\n}\n\nexport default ButtonLoader;\n","import { Icon } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\n\nclass RoundIconButton extends Component {\n  render() {\n    const buttonProps = Object.assign({\n      p:0,\n      border:1,\n      width:'40px',\n      height:'40px',\n      borderRadius:'50%',\n      mainColor:'backButtonBg',\n      disabled:this.props.disabled\n    },this.props.buttonProps);\n\n    buttonProps.minWidth = buttonProps.width;\n\n    return (\n       <RoundButton\n         buttonProps={buttonProps}\n         handleClick={this.props.handleClick}\n       >\n         <Icon\n           color={'copyColor'}\n           name={this.props.iconName}\n           size={ this.props.iconSize ? this.props.iconSize : '1.3em'}\n         />\n       </RoundButton>\n    );\n  }\n}\n\nexport default RoundIconButton;","import React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport { Flex, Text, Image, Box, Loader } from \"rimble-ui\";\nimport GenericSelector from '../GenericSelector/GenericSelector';\n\nclass NetworkIndicator extends Component {\n\n  state = {\n    activeNetworks:[],\n    defaultNetwork:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadNetworks();\n  }\n\n  loadNetworks(){\n\n    if (!this.props.networkInitialized){\n      return false;\n    }\n\n    const availableNetworks = this.functionsUtil.getGlobalConfig(['network','availableNetworks']);\n    const enabledNetworks = this.functionsUtil.getGlobalConfig(['network','enabledNetworks']);\n    const activeNetworks = enabledNetworks.map( networkId => {\n      const networkConfig = availableNetworks[networkId];\n      return {\n        value:networkId,\n        config:networkConfig,\n        label:networkConfig.name,\n      }\n    });\n\n    const requiredNetwork = this.functionsUtil.getRequiredNetwork();\n    const defaultNetwork = activeNetworks.find( network => network.value === requiredNetwork.id );\n\n    this.setState({\n      defaultNetwork,\n      activeNetworks\n    });\n  }\n\n  selectNetwork(networkId){\n    this.props.setRequiredNetwork(networkId);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const networkInitialized = !prevProps.networkInitialized && this.props.networkInitialized;\n    const requiredNetworkChanged = JSON.stringify(prevProps.network.required) !== JSON.stringify(this.props.network.required);\n    if (requiredNetworkChanged || networkInitialized){\n      this.setState({\n        defaultNetwork:null\n      },() => {\n        this.loadNetworks();\n      });\n    }\n  }\n\n  render() {\n\n    const CustomOptionValue = props => {\n      const imageSrc = `images/networks/${props.data.config.provider}.svg`;\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <Image\n              mr={2}\n              src={imageSrc}\n              width={'1.3em'}\n              height={'1.3em'}\n            />\n            <Text\n              fontSize={2}\n              fontWeight={3}\n              color={'copyColor'}\n            >\n              {props.label}\n            </Text>\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n      const selectProps = props.selectProps.value || props.data;\n      const label = selectProps.label;\n      const imageSrc = `images/networks/${selectProps.config.provider}.svg`;\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n          px={0}\n        >\n          <Flex\n            {...props.innerProps}\n            p={0}\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <Image\n              mr={2}\n              src={imageSrc}\n              width={'1.3em'}\n              height={'1.3em'}\n            />\n            <Text\n              fontSize={2}\n              fontWeight={3}\n              color={'copyColor'}\n            >\n              {label}\n            </Text>\n            <Box\n              ml={2}\n              width={'8px'}\n              height={'8px'}\n              borderRadius={'50%'}\n              backgroundColor={this.props.network.isCorrectNetwork ? '#00b84a' : '#fa0000'}\n            >\n            </Box>\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return this.state.defaultNetwork ? (\n      <GenericSelector\n        {...this.props}\n        name={'network'}\n        isSearchable={false}\n        innerProps={Object.assign({\n          px:1,\n          py:0,\n          height:'42px'\n        },this.props.innerProps)}\n        customOptionProps={{\n          px:0,\n          pl:3,\n          pr:0\n        }}\n        options={this.state.activeNetworks}\n        CustomOptionValue={CustomOptionValue}\n        defaultValue={this.state.defaultNetwork}\n        onChange={this.selectNetwork.bind(this)}\n        CustomValueContainer={CustomValueContainer}\n      />\n    ) : (\n      <DashboardCard\n        {...this.props}\n        cardProps={{\n          px:[2,3],\n          display:'flex',\n          width:[1,'auto'],\n          alignItems:'center',\n          justifyContent:'center',\n          height:(this.props.innerProps && this.props.innerProps.height) || '42px',\n        }}\n        isInteractive={false}\n      >\n        <Loader size={'20px'} />\n      </DashboardCard>\n    );\n  }\n}\n\nexport default NetworkIndicator;","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass CustomTooltip extends Component {\n\n  render() {\n    return (\n      <DashboardCard\n        key={this.props.point.id}\n        cardProps={{\n          py:2,\n          px:3,\n          width:1,\n          left: this.props.point.data.itemPos>50 ? '-110%' : '0'\n        }}\n      >\n        <Flex\n          width={1}\n          flexDirection={'column'}\n        >\n          {\n            this.props.point.data.xFormatted && \n              <Text\n                mb={2}\n                fontSize={1}\n                fontWeight={3}\n                color={'cellText'}\n                textAlign={'left'}\n              >\n                {this.props.point.data.xFormatted}\n              </Text>\n          }\n          {this.props.children}\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default CustomTooltip;","import { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport globalConfigs from '../configs/globalConfigs';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass AllocationChart extends Component {\n  state = {\n    chartData:null,\n    chartProps:null,\n    selectedSlice:null,\n    totalAllocation:null,\n    protocolsAllocations:null,\n    protocolsAllocationsPerc:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    if (tokenChanged){\n      this.setStateSafe({\n        chartData:null,\n        chartProps:null,\n        selectedSlice:null,\n        totalAllocation:null,\n        protocolsAllocations:null,\n        protocolsAllocationsPerc:null\n      },() => {\n        this.loadData();\n      });\n    } else if (prevProps.isMobile !== this.props.isMobile){\n      this.loadData()\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async loadData(){\n    const {\n      totalAllocation,\n      protocolsAllocations,\n      protocolsAllocationsPerc\n    } = await this.functionsUtil.getTokenAllocation(this.props.tokenConfig);\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth: 0,\n      cornerRadius:0,\n      motionDamping:15,\n      innerRadius: 0.65,\n      motionStiffness:90,\n      colors:d => d.color,\n      onMouseEnter:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:data\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:null\n        });\n      },\n      tooltipFormat: v => v+'%',\n      sliceLabel: d => d.value+'%',\n      radialLabel: d => {\n        return null;\n      },\n      theme:{\n        tooltip: {\n          container: this.props.inline ? {\n            background: this.props.theme.colors.cardBg\n          } : {\n            display: 'none',\n          }\n        },\n        labels:{\n          text:{\n            fontWeight:600,\n            fontSize:this.props.isMobile ? 13 : 15,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      enableRadialLabels:false,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      enableSlicesLabels: !this.props.inline,\n      radialLabelsLinkColor:{ from: 'color' },\n      borderColor:{ from: 'color', modifiers: [ [ 'darker', 0.2 ] ] },\n      margin: this.props.inline ? {top:0,right:15,bottom:0,left:1} : (this.props.isMobile ? { top: 10, right: 15, bottom: 0, left: 15 } : { top: 10, right: 35, bottom: 0, left: 35 }),\n    };\n\n    const chartData = [];\n\n    this.props.tokenConfig.protocols.forEach((protocolInfo,i)=>{\n      const protocolName = protocolInfo.name;\n      const protocolAddr = protocolInfo.address.toLowerCase();\n      if (protocolsAllocationsPerc[protocolAddr]){\n        const protocolAllocationPercParsed = parseFloat(protocolsAllocationsPerc[protocolAddr].times(100).toFixed(2));\n        chartData.push({\n          id:protocolAddr,\n          name:protocolName,\n          value:protocolAllocationPercParsed,\n          color:'hsl('+globalConfigs.stats.protocols[protocolName].color.hsl.join(',')+')',\n          label: globalConfigs.stats.protocols[protocolName].label ? globalConfigs.stats.protocols[protocolName].label : this.functionsUtil.capitalize(protocolName)\n        });\n      }\n    });\n\n    this.setStateSafe({\n      chartData,\n      chartProps,\n      totalAllocation,\n      protocolsAllocations,\n      protocolsAllocationsPerc\n    });\n  }\n\n  render() {\n    \n    const selectedSlice = this.state.selectedSlice !== null && this.state.protocolsAllocations[this.state.selectedSlice.id] ? this.state.protocolsAllocations[this.state.selectedSlice.id] : false;\n    const protocolIcon = this.state.selectedSlice !== null ? (globalConfigs.stats.protocols[this.state.selectedSlice.name] && globalConfigs.stats.protocols[this.state.selectedSlice.name].icon ? globalConfigs.stats.protocols[this.state.selectedSlice.name].icon : `${this.state.selectedSlice.name}.svg`) : null;\n\n    return (\n      <Flex\n        width={1}\n        position={'relative'}\n      >\n        {\n          this.state.totalAllocation && !this.props.inline &&\n            <Flex\n              zIndex={0}\n              top={['23%','25%']}\n              left={['20%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              position={'absolute'}\n              width={['60%','46%']}\n              height={['53%','46%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                selectedSlice ? (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={`/images/protocols/${protocolIcon}`}\n                    />\n                    <SmartNumber\n                      fontSize={[3,4]}\n                      decimals={3}\n                      fontWeight={4}\n                      maxPrecision={5}\n                      number={selectedSlice}\n                    />\n                    <Text\n                      fontSize={[1,2]}\n                      fontWeight={3}\n                      color={'cellTitle'}\n                    >\n                      Funds in {this.state.selectedSlice.label}\n                    </Text>\n                  </Flex>\n                ) : (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={`/images/idle-mark.png`}\n                    />\n                    <SmartNumber\n                      unitProps={{\n                        ml:2,\n                        fontWeight:3,\n                        fontSize:[3,4]\n                      }}\n                      decimals={3}\n                      fontWeight={4}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      number={this.state.totalAllocation}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      Total funds\n                    </Text>\n                  </Flex>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          showLoader={true}\n          {...this.props}\n          {...this.state.chartProps}\n          data={this.state.chartData}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default AllocationChart;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\n\nclass CustomTooltipRow extends Component {\n\n  render() {\n    return (\n      <Flex\n        mb={2}\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n      >\n        <Flex\n          pr={2}\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-start'}\n        > \n          {\n            this.props.color && \n            <Box\n              mr={2}\n              width={'10px'}\n              height={'10px'}\n              borderRadius={'50%'}\n              backgroundColor={this.props.color}\n            >\n            </Box>\n          }\n          <Text\n            fontSize={1}\n            fontWeight={2}\n            textAlign={'left'}\n            color={'dark-gray'}\n            style={{\n              whiteSpace:'nowrap',\n              textTransform:'capitalize'\n            }}\n          >\n            {this.props.label}\n          </Text>\n        </Flex>\n        <Flex\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-end'}\n        >\n          <Text\n            fontSize={1}\n            fontWeight={3}\n            color={'cellText'}\n            textAlign={'right'}\n            style={{\n              whiteSpace:'nowrap'\n            }}\n            dangerouslySetInnerHTML={{\n              __html: this.props.value\n            }}\n          >\n          </Text>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default CustomTooltipRow;","import React, { Component } from 'react';\nimport { Box, Flex, Icon, Text, Heading } from 'rimble-ui'\n// import styles from './Faquestion.module.scss';\n\nclass Faquestion extends Component {\n  state = {\n    isShowingAnswer: false\n  };\n  toggleAnswer(e) {\n    e.preventDefault();\n    this.setState(state => ({...state, isShowingAnswer: !state.isShowingAnswer}));\n  };\n  render() {\n    return (\n      <Flex\n        my={[3,3]}\n        py={[3,3]}\n        px={[4,4]}\n        flexDirection={'column'}\n        alignItems={'baseline'}\n        justifyContent={'center'}\n        backgroundColor={'cardBg'}\n        borderRadius={ this.props.isOpened ? '30px' : '50px' }\n        boxShadow={1}\n      >\n        <Flex flexDirection={'row'} alignItems={'center'} width={1} onClick={this.props.handleClick} style={{cursor: 'pointer'}}>\n          <Box width={4/5}>\n            <Heading.h4\n              my={0}\n              fontWeight={3}\n              fontSize={[1,2]}\n              fontFamily={'sansSerif'}\n              color={this.props.isOpened ? 'link' : 'dark-gray'}\n            >\n              {this.props.question}\n            </Heading.h4>\n          </Box>\n          <Flex\n            width={1/5}\n            justifyContent={'flex-end'}\n          >\n            <Icon\n              size={\"1.5em\"}\n              color={this.props.isOpened ? 'link' : 'copyColor'}\n              name={this.props.isOpened ? 'KeyboardArrowUp' : 'KeyboardArrowDown'}\n            />\n          </Flex>\n        </Flex>\n        <Flex\n          width={1}\n        >\n          {this.props.isOpened &&\n            <Text.p\n              textAlign={'justify'}\n              fontSize={[1,2]}\n              dangerouslySetInnerHTML={{ __html: this.props.answer }}\n            >\n            </Text.p>\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default Faquestion;\n","import { Flex } from \"rimble-ui\";\nimport Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport CustomList from '../CustomList/CustomList';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass Base extends Component {\n\n  state = {\n    loaded:false,\n    activeCoverages:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadCoverages();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    if (accountChanged){\n      this.loadCoverages();\n    }\n  }\n\n  async loadCoverages(){\n    if (!this.props.account){\n      return false;\n    }\n\n    const coverages = await this.functionsUtil.getActiveCoverages(this.props.account);\n    const activeCoverages = [];\n    if (coverages && coverages.length>0){\n      coverages.forEach( c => {\n        if (!this.props.availableTokens || !this.props.availableTokens.length || this.props.availableTokens.includes(c.collateral)){\n          const statusColors = this.props.theme.colors.transactions.status;\n          let statusIcon = 'VerifiedUser';\n          let statusColor = statusColors.completed;\n          switch (c.status){\n            case 'Expired':\n              statusIcon = 'Error';\n              statusColor = statusColors.failed;\n            break;\n            case 'Claimed':\n              statusIcon = 'Error';\n              statusColor = statusColors.pending;\n            break;\n            default:\n            case 'Active':\n              statusIcon = 'VerifiedUser';\n              statusColor = statusColors.completed;\n            break;\n          }\n\n          const statusIconProps = {\n            color:statusColor\n          };\n\n          const portfolioCoverage = c.portfolioCoverage || 'N/A';\n\n          activeCoverages.push(Object.assign(c,{\n            statusIcon,\n            statusIconProps,\n            portfolioCoverage\n          }));\n        }\n      })\n    }\n\n    this.setState({\n      loaded:true,\n      activeCoverages\n    });\n  }\n\n  render() {\n\n    if (!this.state.loaded){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          this.props.title && ((this.state.activeCoverages && this.state.activeCoverages.length>0) || this.props.children) && (\n            <Title\n              {...this.props.titleProps}\n            >\n              {this.props.title}\n            </Title>\n          )\n        }\n        {\n          this.state.activeCoverages && this.state.activeCoverages.length>0 ? (\n            <CustomList\n              rows={this.state.activeCoverages}\n              handleClick={ this.props.isMobile ? (props) => props.row.status!=='Expired' && props.row.fileClaimUrl && this.functionsUtil.openWindow(props.row.fileClaimUrl) : null }\n              cols={[\n                {\n                  title:'PROTOCOL',\n                  props:{\n                    width:[0.28,0.14]\n                  },\n                  fields:[\n                    {\n                      type:'image',\n                      props:{\n                        mr:[1,2],\n                        size:this.props.isMobile ? '1.2em' : '1.8em'\n                      },\n                      path:[this.props.themeMode === 'dark' ? 'protocolImageDark' : 'protocolImage']\n                    },\n                    {\n                      type:'text',\n                      path:['protocolName'],\n                    }\n                  ]\n                },\n                {\n                  title:'TOKEN',\n                  props:{\n                    width:[0.33,0.14]\n                  },\n                  fields:[\n                    {\n                      type:'image',\n                      props:{\n                        mr:[1,2],\n                        size:this.props.isMobile ? '1.2em' : '1.8em'\n                      },\n                      path:['collateralIcon']\n                    },\n                    {\n                      type:'text',\n                      path:['collateral'],\n                    }\n                  ]\n                },\n                {\n                  title:'AMOUNT',\n                  props:{\n                    width:[0.24, 0.12],\n                  },\n                  fields:[\n                    {\n                      type:'number',\n                      path:['balance'],\n                      props:{\n                        decimals: this.props.isMobile ? 2 :  4,\n                      }\n                    },\n                    {\n                      type:'text',\n                      path:['token'],\n                      props:{\n                        ml:[1,2],\n                        style:{\n                          textTransform:'uppercase'\n                        }\n                      }\n                    }\n                  ]\n                },\n                {\n                  mobile:false,\n                  title:'EXPIRATION DATE',\n                  props:{\n                    width:0.19,\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'text',\n                      path:['expirationDate'],\n                      props:{\n                        \n                      }\n                    },\n                  ]\n                },\n                {\n                  mobile:false,\n                  title:'COVERED FUNDS',\n                  props:{\n                    width:0.14,\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'text',\n                      path:['portfolioCoverage'],\n                      props:{\n                        \n                      }\n                    },\n                  ]\n                },\n                {\n                  title:'STATUS',\n                  props:{\n                    width:[0.15,0.12],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'icon',\n                      name:'custom',\n                      path:['statusIcon'],\n                      props:{\n                        mr:[1,2],\n                        size:this.props.isMobile ? '1.2em' : '1.8em'\n                      }\n                    },\n                    {\n                      mobile:false,\n                      name:'custom',\n                      path:['status'],\n                      props:{\n                        style:{\n                          textTransform:'capitalize'\n                        }\n                      }\n                    }\n                  ]\n                },\n                {\n                  title:'',\n                  mobile:false,\n                  props:{\n                    width:0.17,\n                  },\n                  parentProps:{\n                    width:1\n                  },\n                  fields:[\n                    {\n                      type:'button',\n                      name:'custom',\n                      funcProps:{\n                        label:(props) => (props.row.actionLabel),\n                        disabled:(props) => (props.row.actionDisabled)\n                      },\n                      props:{\n                        width:1,\n                        fontSize:3,\n                        fontWeight:3,\n                        height:'45px',\n                        borderRadius:4,\n                        boxShadow:null,\n                        mainColor:'redeem',\n                        size: this.props.isMobile ? 'small' : 'medium',\n                        handleClick:(props) => props.row.status!=='Expired' && props.row.actionUrl && this.functionsUtil.openWindow(props.row.actionUrl)\n                      }\n                    }\n                  ]\n                }\n              ]}\n              {...this.props}\n            />\n          ) : this.props.children\n        }\n      </Flex>\n    )\n  }\n}\n\nexport default Base;\n","import { Line } from '@nivo/line';\nimport React, { Component } from 'react';\n// import { linearGradientDef } from '@nivo/core'\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport ChartCustomTooltip from '../ChartCustomTooltip/ChartCustomTooltip';\nimport ChartCustomTooltipRow from '../ChartCustomTooltipRow/ChartCustomTooltipRow';\n\nclass PortfolioEquity extends Component {\n  state = {\n    startDate:null,\n    chartData:null,\n    chartProps:null,\n    chartwidth:null,\n    chartHeight:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadChartData();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const quickDateSelectionChanged = prevProps.quickDateSelection !== this.props.quickDateSelection;\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n    if (tokenChanged || quickDateSelectionChanged){\n      this.setState({\n        chartData:null\n      },() => {\n        this.componentDidMount();\n      });\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    if (mobileChanged || themeModeChanged){\n      this.loadChartData();\n    }\n  }\n\n  async loadChartData() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    const etherscanTxs = await this.functionsUtil.getEtherscanTxs(this.props.account,0,'latest',enabledTokens);\n\n    // console.log('etherscanTxs',etherscanTxs);\n\n    const chartData = [];\n    let tokensBalance = {};\n    let firstTxTimestamp = null;\n\n    await this.functionsUtil.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      tokensBalance[selectedToken] = [];\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        let amountLent = this.functionsUtil.BNify(0);\n\n        filteredTxs.forEach((tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || !tx.action || (tx.status && tx.status === 'Pending')){\n            return false;\n          }\n          \n          firstTxTimestamp = firstTxTimestamp ? Math.min(firstTxTimestamp,parseInt(tx.timeStamp)) : parseInt(tx.timeStamp);\n\n          const tokenAmount = this.functionsUtil.BNify(tx.tokenAmount);\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n            case 'CurveOut':\n              amountLent = amountLent.plus(tokenAmount);\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.functionsUtil.BNify(0);\n          }\n\n          const balance = amountLent;\n          const action = tx.action;\n          const timeStamp = parseInt(tx.timeStamp);\n          const tokenPrice = this.functionsUtil.BNify(tx.tokenPrice);\n          const idleTokens = this.functionsUtil.BNify(tx.idleTokens);\n\n          if (!tokenPrice.isNaN() && !tokenPrice.isNaN()){\n            tokensBalance[selectedToken].push({\n              action,\n              balance,\n              timeStamp,\n              tokenPrice,\n              idleTokens,\n              tokenAmount\n            });\n          }\n        });\n      }\n    });\n\n    // console.log('tokensBalance',tokensBalance);\n\n    // Calculate Start Date\n    let startDate = null;\n    const currentDate = this.functionsUtil.strToMoment(new Date());\n\n    switch (this.props.quickDateSelection){\n      case 'week':\n        startDate = currentDate.clone().subtract(1,'week');\n      break;\n      case 'month':\n        startDate = currentDate.clone().subtract(1,'month');\n      break;\n      case 'month3':\n        startDate = currentDate.clone().subtract(3,'month');\n      break;\n      case 'month6':\n        startDate = currentDate.clone().subtract(6,'month');\n      break;\n      default:\n        startDate = null;\n      break;\n    }\n\n    const days = {};\n    let prevBalances = {};\n    let prevTimestamp = null;\n    let minChartValue = null;\n    let maxChartValue = null;\n    let aggregatedBalance = null;\n    const aggregatedBalancesKeys = {};\n    const tokensBalancesPerDate = {};\n    const currTimestamp = parseInt(new Date().getTime()/1000)+86400;\n\n    const tokensData = {};\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      const tokenAddress = this.functionsUtil.getAvailableTokenAddress(token,this.props.selectedStrategy);\n      tokensData[token] = await this.functionsUtil.getTokenApiData(tokenAddress,isRisk,firstTxTimestamp,null,false,3600);\n    });\n\n    // console.log('tokensData',tokensData);\n\n    // debugger;\n\n    const idleTokenBalance = {};\n\n    for (let timeStamp=firstTxTimestamp;timeStamp<=currTimestamp;timeStamp+=this.props.frequencySeconds){\n\n      const foundBalances = {};\n      const tokensBalances = {};\n      timeStamp = Math.min(currTimestamp,timeStamp);\n      aggregatedBalance = this.functionsUtil.BNify(0);\n\n      // await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      // eslint-disable-next-line\n      Object.keys(tokensBalance).forEach(token => {\n\n        let lastTokenData = null;\n        const lastTokenDataUnfiltered = Object.values(tokensData[token]).pop();\n        const filteredTokenData = tokensData[token].filter(tx => (tx.timestamp>=prevTimestamp && tx.timestamp<=timeStamp));\n        if (filteredTokenData && filteredTokenData.length){\n          lastTokenData = filteredTokenData.pop();\n        }\n\n        if (!idleTokenBalance[token]){\n          idleTokenBalance[token] = this.functionsUtil.BNify(0);\n        }\n\n        const tokenConfig = this.props.availableTokens[token];\n        const tokenDecimals = tokenConfig.decimals;\n        let filteredBalances = tokensBalance[token].filter(tx => (tx.timeStamp<=timeStamp && (!prevTimestamp || tx.timeStamp>prevTimestamp)));\n        \n        if (!filteredBalances.length){\n          if (prevBalances && prevBalances[token]){\n            filteredBalances = prevBalances[token];\n            const lastFilteredTx = Object.assign([],filteredBalances).pop();\n            const currentBalance = parseFloat(lastFilteredTx.balance);\n\n            // Take idleToken price from API and calculate new balance\n            if (currentBalance>0 && timeStamp>firstTxTimestamp && lastTokenData){\n              const idleTokens = idleTokenBalance[token];\n              const idlePrice = this.functionsUtil.fixTokenDecimals(lastTokenData.idlePrice,tokenDecimals);\n              let newBalance = idleTokens.times(idlePrice);\n\n              // Set new balance and tokenPrice\n              lastFilteredTx.balance = newBalance;\n              lastFilteredTx.tokenPrice = idlePrice;\n              filteredBalances = [lastFilteredTx];\n            }\n          } else {\n            filteredBalances = [{\n              balance:this.functionsUtil.BNify(0),\n              tokenPrice:this.functionsUtil.BNify(0)\n            }];\n          }\n        } else {\n          filteredBalances.forEach(tx => {\n            switch (tx.action){\n              case 'Swap':\n              case 'Deposit':\n              case 'Migrate':\n              case 'Receive':\n              case 'CurveOut':\n                idleTokenBalance[token] = idleTokenBalance[token].plus(tx.idleTokens);\n              break;\n              default:\n                idleTokenBalance[token] = idleTokenBalance[token].minus(tx.idleTokens);\n                if (idleTokenBalance[token].lt(0)){\n                  idleTokenBalance[token] = this.functionsUtil.BNify(0);\n                }\n              break;\n            }\n          });\n        }\n\n        const lastTx = Object.assign([],filteredBalances).pop();\n        // let lastTxBalance = this.functionsUtil.BNify(lastTx.balance);\n        let lastTxBalance = idleTokenBalance[token].times(lastTx.tokenPrice);\n\n        if (lastTxBalance.gt(0)){\n          // Convert token balance to USD\n          let tokenUsdConversionRate = null;\n          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'conversionRateField']);\n          if (!this.props.chartToken && conversionRateField){\n            const conversionRate = lastTokenData && lastTokenData[conversionRateField] ? lastTokenData[conversionRateField] : (lastTokenDataUnfiltered && lastTokenDataUnfiltered[conversionRateField] ? lastTokenDataUnfiltered[conversionRateField] : null);\n            if (conversionRate){\n              tokenUsdConversionRate = this.functionsUtil.fixTokenDecimals(conversionRate,18);\n              if (tokenUsdConversionRate.gt(0)){\n                lastTxBalance = lastTxBalance.times(tokenUsdConversionRate);\n              }\n            }\n          }\n          \n          tokensBalances[token] = lastTxBalance;\n\n          aggregatedBalance = aggregatedBalance.plus(lastTxBalance);\n        }\n\n        foundBalances[token] = filteredBalances;\n      });\n\n      let momentDate = this.functionsUtil.strToMoment(timeStamp*1000);\n\n      if (startDate === null || (momentDate.isSameOrAfter(startDate) && momentDate.isSameOrBefore(new Date(),'day'))){\n        \n        // if (momentDate.isAfter(new Date(),'day')){\n        //   momentDate = this.functionsUtil.strToMoment(new Date());\n        // }\n\n        // Force date to midnight\n        const formattedDate = momentDate.format('YYYY/MM/DD 00:00');\n\n        // Save days for axisBottom format\n        days[momentDate.format('YYYY/MM/DD')] = 1;\n\n        aggregatedBalance = parseFloat(parseFloat(aggregatedBalance.toFixed(6)));\n\n        tokensBalancesPerDate[formattedDate] = tokensBalances;\n        aggregatedBalancesKeys[formattedDate] = aggregatedBalance;\n\n        // console.log(formattedDate,tokensBalances);\n\n        minChartValue = minChartValue === null ? aggregatedBalance : Math.min(minChartValue,aggregatedBalance);\n        maxChartValue = maxChartValue === null ? aggregatedBalance : Math.max(maxChartValue,aggregatedBalance);\n      }\n\n      prevTimestamp = timeStamp;\n      prevBalances = foundBalances;\n    }\n\n    const aggregatedBalances = Object.keys(aggregatedBalancesKeys).map(date => ({\n      x:date,\n      y:aggregatedBalancesKeys[date],\n      balances:tokensBalancesPerDate[date]\n    }));\n\n    let itemIndex = 0;\n    aggregatedBalances.forEach( (item,index) => {\n      const itemPos = Math.floor(itemIndex/aggregatedBalances.length*100);\n      aggregatedBalances[index].itemPos = itemPos;\n      itemIndex++;\n    });\n\n    // debugger;\n\n    /*\n    aggregatedBalances.push({\n      x:momentDate.format('YYYY/MM/DD HH:mm'),\n      y:aggregatedBalance\n    });\n    */\n\n    // Add day before to start with zero balance\n    /*\n    const firstTxMomentDate = this.functionsUtil.strToMoment(firstTxTimestamp*1000);\n    if ((startDate === null || startDate.isSameOrBefore(firstTxMomentDate)) && aggregatedBalances.length){\n      const firstItem = aggregatedBalances[0];\n      const firstDate = this.functionsUtil.strToMoment(firstItem.x,'YYYY/MM/DD HH:mm');\n      firstDate.subtract(1,'day');\n      aggregatedBalances.unshift({\n        x:firstDate.format('YYYY/MM/DD HH:mm'),\n        y:0\n      });\n    }\n    */\n\n    const chartToken = this.props.chartToken ? this.props.chartToken.toUpperCase() : 'USD';\n\n    // Add token Data\n    chartData.push({\n      id:chartToken,\n      color: 'hsl('+ this.functionsUtil.getGlobalConfig(['stats','tokens',chartToken,'color','hsl']).join(',')+')',\n      data:aggregatedBalances\n    });\n\n    let yFormatDecimals = 2;\n    if (maxChartValue-minChartValue<1){\n      yFormatDecimals = 4;\n    }\n\n    if (maxChartValue === minChartValue){\n      minChartValue = Math.max(0,maxChartValue-1);\n    }\n\n    const maxGridLines = 5;\n    const gridYStep = (maxChartValue-minChartValue)/maxGridLines;\n    const gridYValues = [];\n    for (let i=0;i<=maxGridLines;i++){\n      const gridYValue = parseFloat(parseFloat(minChartValue+(i*gridYStep)).toFixed(6));\n      gridYValues.push(gridYValue);\n    }\n    \n    let axisBottomIndex = 0;\n    const axisBottomMaxValues = 10;\n    const daysCount = Object.values(days).length;    \n    const daysFrequency = Math.max(1,Math.ceil(daysCount/axisBottomMaxValues));\n\n    const chartProps = {\n      xScale:{\n        type: 'time',\n        format: '%Y/%m/%d %H:%M',\n      },\n      yScale:{\n        type: 'linear',\n        stacked: false,\n        min: minChartValue,\n        max: maxChartValue\n      },\n      xFormat:'time:%b %d %Y',\n      yFormat:value => this.functionsUtil.formatMoney(value,yFormatDecimals),\n      axisBottom: this.props.isMobile ? null : {\n        legend: '',\n        tickSize:0,\n        tickPadding: 15,\n        orient: 'bottom',\n        legendOffset: 36,\n        tickValues:'every day',\n        legendPosition: 'middle',\n        format: (value) => {\n          if (axisBottomIndex++ % daysFrequency === 0){\n            return this.functionsUtil.strToMoment(value,'YYYY/MM/DD HH:mm').format('MMM DD')\n          }\n        },\n      },\n      gridYValues,\n      pointSize:0,\n      useMesh:true,\n      axisLeft: this.props.isMobile ? null : {\n        legend: '',\n        tickSize: 0,\n        orient: 'left',\n        tickPadding: 10,\n        tickRotation: 0,\n        legendOffset: -70,\n        tickValues:gridYValues,\n        legendPosition: 'middle',\n        format: v => this.functionsUtil.abbreviateNumber(v,2),\n      },\n      animate:true,\n      pointLabel:'y',\n      enableArea:true,\n      enableSlices:'x',\n      enableGridY:true,\n      curve:'monotoneX',\n      enableGridX:false,\n      pointBorderWidth:1,\n      colors:d => d.color,\n      pointLabelYOffset:-12,\n      areaBaselineValue:minChartValue,\n      pointColor:{ from: 'color', modifiers: []},\n      areaOpacity:this.props.themeMode === 'light' ? 0.1 : 0.5,\n      theme:{\n        axis: {\n          ticks: {\n            text: {\n              fontSize:12,\n              fontWeight:600,\n              fill:this.props.theme.colors.legend,\n              fontFamily:this.props.theme.fonts.sansSerif\n            }\n          }\n        },\n        grid: {\n          line: {\n            stroke: this.props.theme.colors.lineChartStroke, strokeDasharray: '8 4'\n          }\n        },\n      },\n      /*\n      defs:[\n        linearGradientDef('gradientA', [\n          { offset: 0, color: 'inherit' },\n          { offset: 100, color: 'inherit', opacity: 0 },\n        ]),\n      ],\n      fill:[{ match: '*', id: 'gradientA' }],\n      */\n      margin: this.props.isMobile ? { top: 20, right: 25, bottom: 25, left: 20 } : { top: 30, right: 50, bottom: 45, left: 60 },\n      sliceTooltip:(slideData) => {\n        const { slice } = slideData;\n        const point = slice.points[0];\n        return (\n          <ChartCustomTooltip\n            point={point}\n          >\n            <ChartCustomTooltipRow\n              color={point.color}\n              label={point.serieId}\n              value={`$ ${point.data.yFormatted}`}\n            />\n            {\n            (typeof point.data.balances === 'object' && Object.keys(point.data.balances).length>0) &&\n              Object.keys(point.data.balances).map(token => {\n                if (token === point.serieId){\n                  return null;\n                }\n                const color = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'color','hex']);\n                const balance = point.data.balances[token];\n                let formattedBalance = this.functionsUtil.formatMoney(balance,2);\n                if (parseFloat(balance)>=0.01){\n                  return (\n                    <ChartCustomTooltipRow\n                      label={token}\n                      color={color}\n                      key={`row_${token}`}\n                      value={`$ ${formattedBalance}`}\n                    />\n                  );\n                }\n                return null;\n              })\n            }\n          </ChartCustomTooltip>\n        );\n      }\n    };\n\n    this.setState({\n      chartData,\n      chartProps\n    });\n  }\n\n  render() {\n    return (\n      <GenericChart\n        type={Line}\n        showLoader={true}\n        {...this.state.chartProps}\n        data={this.state.chartData}\n        parentId={this.props.parentId}\n        height={this.props.chartHeight}\n        parentIdHeight={this.props.parentIdHeight}\n      />\n    );\n  }\n}\n\nexport default PortfolioEquity;","import React, { Component } from \"react\";\nimport { Flex, Text, Icon, Image } from \"rimble-ui\";\nimport DashboardCard from \"../DashboardCard/DashboardCard\";\n\nclass CardIconButton extends Component {\n  render() {\n    const cardProps = Object.assign(\n      {\n        py: 1,\n        width: \"auto\",\n        px: [\"12px\", 3]\n      },\n      this.props.cardProps\n    );\n\n    return (\n      <DashboardCard\n        cardProps={cardProps}\n        isInteractive={true}\n        isActive={this.props.isActive}\n        isDisabled={this.props.isDisabled}\n        handleClick={this.props.handleClick}\n        backgroundColor={\"blue\"}\n      >\n        <Flex\n          mx={this.props.margin ? this.props.margin : 0}\n          my={1}\n          alignItems={\"center\"}\n          flexDirection={\"row\"}\n          justifyContent={this.props.align ? this.props.align : \"center\"}\n        >\n          {this.props.image ? (\n            <Image\n              align={\"center\"}\n              src={this.props.image}\n              height={this.props.isMobile ? \"1.2em\" : \"1.4em\"}\n              width={this.props.isMobile ? \"1.2em\" : \"1.4em\"}\n              {...this.props.imageProps}\n            />\n          ) : this.props.useIconOnly ? (\n            <Icon\n              align={\"center\"}\n              name={this.props.icon}\n              size={this.props.isMobile ? \"1.2em\" : \"1.4em\"}\n              color={this.props.iconColor ? this.props.iconColor : \"redeem\"}\n              {...this.props.iconProps}\n            />\n          ) : (\n            <Flex\n              mr={this.props.isSidebar ? 0 : 2}\n              p={this.props.isSidebar ? 0 : [\"4px\", \"7px\"]}\n              borderRadius={\"50%\"}\n              alignItems={\"center\"}\n              justifyContent={\"center\"}\n              backgroundColor={\n                this.props.iconBgColor\n                  ? this.props.iconBgColor\n                  : this.props.theme.colors.transactions.actionBg.redeem\n              }\n            >\n              <Icon\n                align={\"center\"}\n                name={this.props.icon}\n                size={this.props.isMobile ? \"1.2em\" : \"1.4em\"}\n                color={this.props.iconColor ? this.props.iconColor : \"redeem\"}\n                {...this.props.iconProps}\n              />\n            </Flex>\n          )}\n          <Text fontWeight={3} fontSize={[1, 3]} {...this.props.textProps}>\n            {this.props.text}\n          </Text>\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default CardIconButton;\n","// import { Line } from '@nivo/line';\nimport CountUp from 'react-countup';\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport CustomField from '../CustomField/CustomField';\n// import SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n// import GenericChart from '../GenericChart/GenericChart';\n// import CustomTooltip from '../CustomTooltip/CustomTooltip';\nimport { Image, Text, Loader, Button, Flex, Icon } from \"rimble-ui\";\n// import VariationNumber from '../VariationNumber/VariationNumber';\n// import AllocationChart from '../AllocationChart/AllocationChart';\n// import CustomTooltipRow from '../CustomTooltip/CustomTooltipRow';\n\nclass TrancheField extends Component {\n\n  state = {\n    ready:false\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const tokenChanged = prevProps.token !== this.props.token;\n    const accountChanged = prevProps.account !== this.props.account;\n    const trancheChanged = prevProps.tranche !== this.props.tranche;\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const protocolChanged = prevProps.protocol !== this.props.protocol;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    const contractInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized && this.props.contractsInitialized;\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (fieldChanged || tokenChanged || protocolChanged || trancheChanged || accountChanged || transactionsChanged || (contractInitialized && !this.state.ready)){\n      // console.log('componentDidUpdate-1',fieldChanged,tokenChanged,protocolChanged,trancheChanged,accountChanged,transactionsChanged,(contractInitialized && !this.state.ready));\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.loadField();\n      });\n    } else if (mobileChanged || themeModeChanged){\n      // console.log('componentDidUpdate-2',mobileChanged,themeModeChanged);\n      const oldState = Object.assign({},this.state);\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  loadField = async(fieldName=null) => {\n\n    if (this.componentUnmounted || !this.props.protocol || !this.props.token || !this.props.tokenConfig){\n      return false;\n    }\n\n    const setState = fieldName === null;\n    const fieldInfo = this.props.fieldInfo;\n    if (!fieldName){\n      fieldName = fieldInfo.name;\n    }\n\n    const fieldProps = fieldInfo.props;\n    const addGovTokens = typeof this.props.addGovTokens !== 'undefined' ? this.props.addGovTokens : true;\n    const formatValue = typeof this.props.formatValue !== 'undefined' ? this.props.formatValue : true;\n    const addTokenName = typeof this.props.addTokenName !== 'undefined' ? this.props.addTokenName : true;\n\n    let output = null;\n    if (this.props.token){\n      switch (fieldName){\n        default:\n          output = await this.functionsUtil.loadTrancheField(fieldName,fieldProps,this.props.protocol,this.props.token,this.props.tranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account,addGovTokens,formatValue,addTokenName);\n          if (output && setState){\n            this.setStateSafe({\n              ready:true,\n              [fieldName]:output\n            });\n          }\n        break;\n      }\n    }\n\n    return output;\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n    let output = null;\n\n    const showLoader = fieldInfo.showLoader === undefined || fieldInfo.showLoader;\n    const loader = showLoader ? (<Loader size=\"20px\" />) : null;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    // const tokenName = this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token,'label']) || this.functionsUtil.capitalize(this.props.token);\n\n    // const tokenConfig = this.props.tokenConfig;// || this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token]);\n    const maxPrecision = fieldProps && fieldProps.maxPrecision ? fieldProps.maxPrecision : 5;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    const minPrecision = fieldProps && fieldProps.minPrecision ? fieldProps.minPrecision : ( this.props.isMobile ? 3 : 4 );\n\n    // console.log('TrancheField',fieldInfo.name,fieldProps);\n    const flexProps = fieldProps.flexProps;\n    delete fieldProps.flexProps;\n\n    switch (fieldInfo.name){\n      case 'protocolIcon':\n        output = (\n          <Image src={`images/protocols/${this.props.protocol}.svg`} {...fieldProps} />\n        );\n      break;\n      case 'trancheTypeIcon':\n        const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',this.props.tranche]);\n        output = (\n          <Flex\n            p={'6px'}\n            borderRadius={'50%'}\n            alignItems={'center'}\n            justifyContent={'center'}\n            backgroundColor={`rgba(${trancheDetails.color.rgb.join(',')},0.2)`}\n            {...flexProps}\n          >\n            <Icon\n              {...fieldProps}\n              align={'center'}\n              name={trancheDetails.icon}\n              color={trancheDetails.color.hex}\n            />\n          </Flex>\n        );\n      break;\n      case 'tokenIcon':\n        output = (\n          <Image src={`images/tokens/${this.props.token}.svg`} {...fieldProps} />\n        );\n      break;\n      case 'button':\n        const buttonLabel = typeof fieldInfo.label === 'function' ? fieldInfo.label(this.props) : fieldInfo.label;\n        output = (\n          <Button {...fieldProps} onClick={() => fieldProps.handleClick(this.props) }>{buttonLabel}</Button>\n        );\n      break;\n      case 'custom':\n        output = (\n          <CustomField\n            row={this.props}\n            fieldInfo={fieldInfo}\n          />\n        );\n      break;\n      case 'feesCounter':\n        output = this.state.ready && this.state.feesCounter.feesStart && this.state.feesCounter.feesEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.feesCounter.feesEnd)}\n            start={parseFloat(this.state.feesCounter.feesStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounter':\n        output = this.state.ready && this.state.earningsCounter && this.state.earningsCounter.earningsStart && this.state.earningsCounter.earningsEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsCounter.earningsEnd)}\n            start={parseFloat(this.state.earningsCounter.earningsStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'govTokens':\n      case 'autoFarming':\n      case 'stakingRewards':\n        output = this.state[fieldInfo.name] && Object.keys(this.state[fieldInfo.name]).length>0 ? (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'flex-start'}\n            {...fieldInfo.parentProps}\n          >\n            {\n              Object.values(this.state[fieldInfo.name]).map( (govTokenConfig,govTokenIndex) => (\n                <AssetField\n                  token={govTokenConfig.token}\n                  tokenConfig={govTokenConfig}\n                  key={`asset_${govTokenIndex}`}\n                  fieldInfo={{\n                    name:'iconTooltip',\n                    tooltipProps:{\n                      message:`${govTokenConfig.token}`+(this.state.getGovTokensDistributionSpeed && this.state.getGovTokensDistributionSpeed[govTokenConfig.token] ? `: ${this.state.getGovTokensDistributionSpeed[govTokenConfig.token].toFixed(decimals)}/${govTokenConfig.distributionFrequency} (for the whole pool)` : '')\n                    },\n                    props:{\n                      borderRadius:'50%',\n                      position:'relative',\n                      height:['1.4em','2em'],\n                      ml:govTokenIndex ? '-10px' : 0,\n                      zIndex:Object.values(this.state[fieldInfo.name]).length-govTokenIndex,\n                      boxShadow:['1px 1px 1px 0px rgba(0,0,0,0.1)','1px 2px 3px 0px rgba(0,0,0,0.1)'],\n                    }\n                  }}\n                />\n              ))\n            }\n          </Flex>\n        ) : this.state[fieldInfo.name] ? (\n          <Text {...fieldProps}>-</Text>\n        ) : loader\n      break;\n      default:\n        let formattedValue = this.state[fieldInfo.name];\n        if (this.state[fieldInfo.name] && this.state[fieldInfo.name]._isBigNumber){\n          formattedValue = this.state[fieldInfo.name].toFixed(decimals);\n        }\n        output = this.state[fieldInfo.name] ? (\n          <Text {...fieldProps}>{formattedValue}</Text>\n        ) : loader\n      break;\n    }\n    return output;\n  }\n}\n\nexport default TrancheField;\n","import Select from 'react-select';\nimport React, { Component } from 'react';\nimport { Flex, Text, Input } from \"rimble-ui\";\nimport styles from './GenericSelector.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass GenericSelector extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadComponents();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const optionsChanged = JSON.stringify(prevProps.options) !== JSON.stringify(this.props.options);\n    const defaultValueChanged = JSON.stringify(prevProps.defaultValue) !== JSON.stringify(this.props.defaultValue);\n    const componentsChanged = prevProps.CustomOptionValue !== this.props.CustomOptionValue || prevProps.CustomValueContainer !== this.props.CustomValueContainer;\n\n    if (optionsChanged || selectedTokenChanged || defaultValueChanged || componentsChanged){\n      this.loadComponents();\n    }\n  }\n\n  async loadComponents(){\n    \n    const ControlComponent = props => {\n      const cardProps = Object.assign(\n        props.innerProps,\n        {\n          p:2,\n          width:1,\n          style:{cursor:'pointer'}\n        },\n        (this.props.innerProps ? this.props.innerProps : {})\n      );\n\n      if (props.menuIsOpen){\n        cardProps.boxShadow = 4;\n      }\n      return (\n        <DashboardCard\n          isInteractive={true}\n          cardProps={cardProps}\n        >\n          <Flex\n            width={1}\n            height={'100%'}\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            {props.children}\n          </Flex>\n        </DashboardCard>\n      );\n    };\n\n    const CustomIndicatorSeparator = props => null;\n\n    const CustomMenu = props => {\n      const cardProps = Object.assign(props.innerProps,{\n        mt:2,\n        zIndex:1,\n        boxShadow:null,\n        position:'absolute'\n      });\n      return (\n        <DashboardCard\n          cardProps={cardProps}\n        >\n          {props.children}\n        </DashboardCard>\n      );\n    }\n\n    const CustomValueContainer = this.props.CustomValueContainer ? this.props.CustomValueContainer : props => {\n      return (\n        <Flex\n          {...props.innerProps}\n        >\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            <Text\n              fontWeight={3}\n            >\n              {props.selectProps.value.label}\n            </Text>\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomOptionValue = this.props.CustomOptionValue ? this.props.CustomOptionValue : (props) => {\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n        >\n          <Text>\n            {props.label}\n          </Text>\n        </Flex>\n      );\n    };\n\n    const CustomInputContainer = this.props.CustomInputContainer ? this.props.CustomInputContainer : (props) => {\n\n      if (!props.selectProps.isSearchable){\n        return null;\n      }\n\n      return (\n        <Input\n          {...props}\n          fontSize={this.props.theme.fontSizes[2]}\n          color={this.props.theme.colors.copyColor}\n          fontWeight={this.props.theme.fontWeights[3]}\n          fontFamily={this.props.theme.fonts.sansSerif}\n          backgroundColor={this.props.theme.colors.cardBg}\n          className={[styles.searchInput,this.props.themeMode==='dark' ? styles.dark : null,!props.selectProps.menuIsOpen ? styles.searchInputHidden : null]}\n        />\n      );\n    };\n\n    const CustomOption = (props) => {\n\n      const options = props.selectProps.options;\n      let selectedValue = props.selectProps && props.selectProps.value && props.selectProps.value.value;\n\n      // Check if the selectedValue is included in options\n      if (selectedValue && options.map( o => o.value ).indexOf(selectedValue) === -1 && this.props.defaultValue){\n        selectedValue = this.props.defaultValue.value;\n      }\n\n      // Don't show selected value\n      if (selectedValue && selectedValue === props.value){\n        return null;\n      }\n\n      // console.log('CustomOption',this.props.customOptionProps);\n\n      return (\n        <Flex\n          px={3}\n          py={2}\n          width={1}\n          {...props.innerProps}\n          alignItems={'center'}\n          flexDirection={'row'}\n          style={{cursor:'pointer'}}\n          justifyContent={'flex-start'}\n          className={styles.genericSelector}\n          backgroundColor={ props.isFocused ? 'selectBgFocused' : 'selectBg' }\n        >\n          <CustomOptionValue\n            {...props}\n          />\n        </Flex>\n      );\n    }\n\n    await this.setState({\n      CustomMenu,\n      CustomOption,\n      ControlComponent,\n      CustomValueContainer,\n      CustomInputContainer,\n      CustomIndicatorSeparator\n    });\n  }\n\n  render() {\n    const isSearchable = typeof this.props.isSearchable !== 'undefined' ? this.props.isSearchable : false;\n    return (\n      <Select\n        name={this.props.name}\n        isSearchable={isSearchable}\n        options={this.props.options}\n        defaultValue={this.props.defaultValue}\n        onChange={ v => this.props.onChange(v.value) }\n        components={{\n            Menu: this.state.CustomMenu,\n            Option: this.state.CustomOption,\n            Control: this.state.ControlComponent,\n            Input: this.state.CustomInputContainer,\n            SingleValue: this.state.CustomValueContainer,\n            IndicatorSeparator: this.state.CustomIndicatorSeparator\n        }}\n      />\n    );\n  }\n}\n\nexport default GenericSelector;\n","import axios from 'axios';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Progress, Icon, Link } from 'rimble-ui'\n\nclass TxProgressBar extends Component {\n  state = {\n    txCount:0,\n    error:null,\n    ended:false,\n    percentage:0,\n    processing:true,\n    txTimestamp:null,\n    initialized:false,\n    estimatedTime:null,\n    remainingTime:null\n  };\n\n  componentUnmounted = false;\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n\n    this.componentUnmounted = true;\n\n    var id = window.setTimeout(function() {}, 0);\n\n    while (id--) {\n        window.clearTimeout(id); // will do nothing if no timeout with id is present\n    }\n\n    window.initProgressBar = this.initProgressBar;\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps){\n    this.loadUtils();\n\n    if (!this.state.initialized && this.props.web3){\n      this.initProgressBar();\n    }\n  }\n\n  componentDidMount = async () => {\n    this.initProgressBar();\n  }\n\n  getTransaction = async () => {\n    const transaction = await (new Promise( async (resolve, reject) => {\n      // console.log('getTransaction',this.props.hash);\n      this.props.web3.eth.getTransaction(this.props.hash,(err,transaction) => {\n        resolve(transaction);\n      });\n    }));\n\n    // console.log('getTransaction',transaction);\n\n    const newState = {};\n    if (transaction){\n      newState.transaction = transaction;\n    } else {\n      newState.processing = false;\n      newState.error = 'Unable to find the transaction';\n    }\n\n    this.setState(newState);\n    return transaction;\n  }\n\n  /*\n  Taken from https://ethgasstation.info/calculatorTxV.php\n  */\n  _estimateWait (prediction, gasoffered) {\n    var minedProb;\n    var expectedWait;\n    var sum1, sum2;\n    var intercept = 4.2794;\n    var hpa = .0329;\n    var hgo = -3.2836;\n    var tx = -0.0004;\n    var intercept2 = 7.5375;\n    var hpa_coef = -0.0801;\n    var txatabove_coef= 0.0003;\n    var high_gas_coef = .3532;\n\n    if (gasoffered > 1000000) {    \n      sum1 = intercept + (prediction['hashpower_accepting'] * hpa) + hgo  + (prediction['tx_atabove'] * tx);\n      sum2 = intercept2 + (prediction['hashpower_accepting'] * hpa_coef) + (prediction['tx_atabove'] * txatabove_coef) + high_gas_coef;\n    } else {\n      sum1 = intercept + (prediction['hashpower_accepting'] * hpa) + (prediction['tx_atabove'] * tx);\n      sum2 = intercept2 + (prediction['tx_atabove'] * txatabove_coef) + (prediction['hashpower_accepting'] * hpa_coef);\n    }\n\n    var factor = Math.exp(- 1 * sum1);\n    const prob = 1 / (1 + factor);\n\n    if (prob > .95) {\n      minedProb = 'Very High';\n    } else if (prob > .9 && prob <= .95) {\n      minedProb = 'Medium'\n    } else {\n      minedProb = 'Low';\n    }\n\n    expectedWait = Math.exp(sum2);\n    if (expectedWait < 2) {\n      expectedWait = 2;\n    }\n\n    if (gasoffered > 2000000) {\n      expectedWait += 100;\n    }\n\n    return [expectedWait, prediction['hashpower_accepting'], prediction['tx_atabove'], minedProb];\n  }\n\n  getBlockTime = async () => {\n    const pt = await axios.get('https://ethgasstation.info/json/ethgasAPI.json');\n    if (pt){\n      const blockTime = pt.data;\n      this.setState({\n        blockTime\n      });\n      return blockTime;\n    }\n    return null;\n  }\n\n  getPredictionTable = async () => {\n    const pt = await axios.get('https://ethgasstation.info/json/predictTable.json');\n    if (pt){\n      const predictTable = pt.data;\n      this.setState({\n        predictTable\n      });\n      return predictTable;\n    }\n    return null;\n  }\n\n  getTxEstimatedTime = (gasPrice) => {\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    if (currentNetwork.provider === 'polygon'){\n      return 30;\n    } else {\n      let prediction = null;\n      if (this.state.predictTable){\n        this.state.predictTable.forEach((p,i) => {\n          if (!prediction && parseFloat(p.gasprice)>=parseFloat(gasPrice)){\n            prediction = p;\n            return true;\n          }\n        });\n      }\n\n      if (this.state.blockTime && prediction){\n        const pdValues = this._estimateWait(prediction,this.state.transaction.gas);\n        const blocksWait = pdValues[0];\n        const blockInterval = this.state.blockTime.block_time;\n        let txMeanSecs = blocksWait * blockInterval;\n        txMeanSecs = parseInt(txMeanSecs.toFixed(0));\n        this.functionsUtil.customLog('getTxEstimatedTime',prediction,this.state.transaction.gas,pdValues,txMeanSecs);\n        return txMeanSecs; // Customized\n      }\n    }\n\n    return null;\n  }\n\n  calculateRemainingTime = async () => {\n    let remainingTime = 0;\n    let estimatedTime = 0;\n\n    if (!this.state.transaction || this.componentUnmounted){\n      return false;\n    }\n\n    if (!this.state.transaction.blockNumber){\n      const gasPrice = parseFloat(this.functionsUtil.BNify(this.state.transaction.gasPrice).div(1e9).toString());\n      remainingTime = this.getTxEstimatedTime(gasPrice);\n    }\n\n    estimatedTime = remainingTime ? remainingTime : 0;\n\n    if (this.state.txTimestamp){\n      const currTimestamp = new Date().getTime();\n      const secondsPassed = parseInt((currTimestamp-parseInt(this.state.txTimestamp))/1000);\n      \n      // Calculate new remaining time\n      remainingTime -= secondsPassed;\n      remainingTime = Math.max(remainingTime,0);\n\n      this.functionsUtil.customLog('Estimated time',estimatedTime,'secondsPassed',secondsPassed,'New remaining time',remainingTime);\n    }\n\n    const timePassed = estimatedTime-remainingTime;\n    const percentage = estimatedTime>0 ? parseFloat(timePassed/estimatedTime) : 1;\n\n    this.setState({\n      estimatedTime,\n      remainingTime,\n      percentage\n    });\n\n    setTimeout(()=>{this.updateProgressBar()},1000);\n  }\n\n  updateProgressBar = () => {\n\n    if (this.componentUnmounted){\n      return false;\n    }\n\n    let remainingTime = this.state.remainingTime;\n    if (remainingTime){\n      remainingTime--;\n      if (!remainingTime){\n        this.setState({\n          percentage:1,\n          ended:true\n        });\n      } else {\n        const timePassed = this.state.estimatedTime-remainingTime;\n        const percentage = parseFloat(timePassed/this.state.estimatedTime);\n        this.setState({\n          percentage,\n          remainingTime\n        });\n        setTimeout(()=>{this.updateProgressBar()},1000);\n      }\n    } else {\n      this.setState({\n        percentage:1,\n        ended:true\n      });\n    }\n  }\n\n  getTxInfo = async () => {\n\n    // Get tx timestamp\n    const txProgressBarKey = `txProgressBarData`;\n    const txHash = this.props.hash.toLowerCase();\n\n    let txProgressBarData = null;\n    let txTimestamp = null;\n    let newState = {};\n\n    if (localStorage){\n      txProgressBarData = localStorage.getItem(txProgressBarKey);\n      if (txProgressBarData){\n        txProgressBarData = JSON.parse(txProgressBarData);\n      }\n    }\n\n    if (!txProgressBarData || !txProgressBarData[txHash]){\n      txTimestamp = new Date().getTime();\n\n      const [predictTable,blockTime] = await Promise.all([\n        this.getPredictionTable(),\n        this.getBlockTime()\n      ]);\n\n      txProgressBarData = {};\n      txProgressBarData[txHash] = {\n        txTimestamp,\n        blockTime,\n        predictTable\n      };\n\n      // Save progress bar status in localStorage\n      this.functionsUtil.setLocalStorage(txProgressBarKey,JSON.stringify(txProgressBarData));\n\n      newState = txProgressBarData[txHash];\n\n      if (!predictTable || !blockTime){\n        newState.error = 'Processing transaction';\n      }\n    }\n\n    this.setState(newState);\n  }\n\n  initProgressBar = async () => {\n\n    if (!this.props.hash || !this.props.web3){\n      return false;\n    }\n\n    const newState = {\n      initialized:true\n    };\n    this.setState(newState);\n\n    // console.log('initProgressBar',this.state.txCount,this.props.hash);\n\n    const transaction = await this.getTransaction();\n\n    if (transaction){\n      await this.getTxInfo();\n      try{\n        this.calculateRemainingTime();\n      } catch (err) {\n        newState.error = 'Processing transaction';\n        // const errStringified = JSON.stringify(err);\n      }\n\n      this.setState(newState);\n    } else {\n      const txCount = this.state.txCount++;\n      if (txCount<5){\n        this.setState({\n          txCount\n        },() => {\n          window.setTimeout(() => {\n            this.initProgressBar();\n          },1000);\n        });\n      }\n    }\n  }\n\n  renderRemainingTime(){\n    // More than 60 seconds\n    if (this.state.remainingTime>60){\n      const minutes = Math.floor(this.state.remainingTime/60);\n      const seconds = this.state.remainingTime-(minutes*60);\n      return ('0'+minutes).substr(-2)+':'+('0'+seconds).substr(-2)+' min';\n    } else {\n      return this.state.remainingTime+'s';\n    }\n  }\n\n  render() {\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    return (\n      <Flex flexDirection={'column'} alignItems={'center'}>\n        {\n          this.state.remainingTime !== null ? (\n            this.state.ended ? (\n              <FlexLoader\n                textProps={{\n                  ml:2,\n                  color:this.props.textColor ? this.props.textColor : 'copyColor'\n                }}\n                loaderProps={{\n                  size:'25px',\n                  ...this.props.loaderProps\n                }}\n                flexProps={{\n                  textAlign:'center',\n                  alignItems:'center',\n                  justifyContent:'center',\n                }}\n                text={this.props.endMessage ? this.props.endMessage : 'Finalizing transaction...'}\n              />\n            ) : (\n              <Flex\n                mb={2}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Text mb={2} color={ this.props.textColor ? this.props.textColor : 'copyColor'}>{ this.props.waitText ? this.props.waitText : 'Remaining time:' } <Text.span color={ this.props.textColor ? this.props.textColor : 'copyColor'} fontWeight={3}>{ this.renderRemainingTime() }</Text.span></Text>\n                <Progress value={ this.state.percentage } />\n              </Flex>\n            )\n          ) : (\n            this.state.error !== null && !this.state.processing ? (\n              <Flex\n                alignItems={'center'}\n                flexDirection={'column'}\n              >\n                <Icon\n                  size={'2em'}\n                  name={'Warning'}\n                  color={'cellText'}\n                />\n                <Text\n                  mt={0}\n                  fontSize={2}\n                  textAlign={'center'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                >\n                  {this.state.error}\n                </Text>\n              </Flex>\n            ) : (\n              <FlexLoader\n                textProps={{\n                  ml:2,\n                  color:this.props.textColor ? this.props.textColor : 'copyColor'\n                }}\n                loaderProps={{\n                  size:'25px',\n                  ...this.props.loaderProps\n                }}\n                flexProps={{\n                  textAlign:'center',\n                  alignItems:'center',\n                  justifyContent:'center',\n                }}\n                text={ this.state.error ? this.state.error : (this.props.hash ? (this.props.loadingMessage ? this.props.loadingMessage : 'Calculating estimated time...') : (this.props.sendingMessage ? this.props.sendingMessage : 'Sending transaction...') ) }\n              />\n            )\n          )\n        }\n        {\n          this.props.hash ? (\n            <Link\n              mt={0}\n              target={'_blank'}\n              hoverColor={'dark-gray'}\n              rel={\"nofollow noopener noreferrer\"}\n              color={this.props.textColor ? this.props.textColor : 'cellText'}\n              href={this.functionsUtil.getEtherscanTransactionUrl(this.props.hash)}\n            >\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={'center'}\n              >\n                <Text\n                  fontSize={0}\n                  textAlign={'center'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                >\n                  View in {this.functionsUtil.capitalize(currentNetwork.explorer)}\n                </Text>\n                <Icon\n                  ml={1}\n                  size={'0.75em'}\n                  name={'OpenInNew'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                />\n              </Flex>\n            </Link>\n          ) : typeof this.props.cancelTransaction === 'function' ? (\n              <Link\n                mt={0}\n                href={`javascript:void(0)`}\n                onClick={ e => this.props.cancelTransaction() }\n                color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                hoverColor={this.props.cancelTextHoverColor ? this.props.cancelTextHoverColor : 'dark-gray'}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'row'}\n                  justifyContent={'center'}\n                >\n                  <Text\n                    fontSize={0}\n                    textAlign={'center'}\n                    color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                  >\n                    Cancel transaction\n                  </Text>\n                  <Icon\n                    ml={1}\n                    size={'0.85em'}\n                    name={'Cancel'}\n                    color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                  />\n                </Flex>\n              </Link>\n          ) : null\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TxProgressBar;","import baseColors, { blue, green, yellow, red } from \"./colors\";\nimport { tint, shade } from \"polished\";\n\n// theme.js\nexport default {\n  breakpoints: [\"52em\", \"64em\"],\n  // breakpoints: ['40em', '52em', '64em', '80em'],\n  fontSizes: [12, 14, 16, 18, 21, 32, 38, 48, 54, 64, 72, 84],\n  fontWeights: [0, 300, 400, 600, 700, 800],\n  letterSpacings: [0, 1, 2, 4, 8],\n  lineHeights: {\n    solid: 1,\n    title: 1.25,\n    copy: 1.5\n  },\n  fonts: {\n    serif: '\"georgia regular\", athelas, times, serif',\n    sansSerif: '\"Inter\", -apple-system, sans-serif',\n    counter: '\"Roboto Mono\", Arial, -apple-system, sans-serif'\n  },\n  space: [0, 4, 8, 16, 32, 64, 128, 256],\n  radii: [\"0\", \"4px\", \"8px\", \"16px\", \"2rem\"],\n  widths: [0, 16, 32, 64, 128, 256, 550],\n  minWidths: [0, 16, 32, 64, 128, 256],\n  maxWidths: [0, 16, 32, 64, 128, 256, 512, 768, 1024, 1536],\n  heights: [0, 16, 32, 64, 128, 256],\n  minHeights: [0, 16, 32, 64, 128, 256],\n  maxHeights: [0, 16, 32, 64, 128, 256],\n  borders: [0, \"1px solid #eee\", \"1px solid #b6c2ff\"],\n  borderWidths: [\"0\", \"1px\", \"2px\", \"4px\"],\n  shadows: [\n    \"0\",\n    \"0px 2px 4px rgba(0, 0, 0, 0.1)\",\n    \"0 7px 14px rgba(50,50,93,.1)\",\n    \"1px 1px 0px rgba(0,0,0,0.2)\",\n    \"0px 0px 16px 2px rgba(0,54,255,0.3)\"\n  ],\n  opacity: {\n    disabled: 0.4\n  },\n  colors: {\n    primary: blue.base,\n    \"gradient-bg\": \"linear-gradient(120deg, #f6d365 0%, #ea0d73 100%)\",\n    \"primary-light\": blue.light[1],\n    \"primary-dark\": blue.dark[1],\n    bgBlue: \"#0030e0\",\n    blue: \"#0036ff\",\n    tick: \"#00b84a\",\n    \"dark-blue\": \"#00219a\",\n    skyBlue: \"#00abfe\",\n    lightBlue: \"#79f4e1\",\n    copyColor: \"#3F3D4B\",\n    subColor: \"#a7a7a7\",\n    black: baseColors.black,\n    'near-black': '#111',\n    'dark-gray': '#4e4e4e',\n    'mid-gray': '#999',\n    gray: ' #e0e0e0',\n    grey: '#CCC',\n    silver: '#999',\n    'light-silver': '#aaa',\n    'moon-gray': '#ccc',\n    'light-gray': '#eee',\n    'near-white': '#f4f4f4',\n    white: '#fff',\n    transparent: 'transparent',\n    green:'#00b84a',\n    /*\n    NEW COLORS\n    */\n    connect: \"#0042F5\",\n    newblue: \"#2B65D9\",\n    alert: \"#ff9900\",\n    arrowActive: \"#4f4f4f\",\n    arrowInactive: \"#d8d8d8\",\n    selectBgFocused: \"#fbfbfb\",\n    selectBg: \"#ffffff\",\n    backButtonBg: \"#ffffff\",\n    lineChartStroke: \"#dbdbdb\",\n    wrongNetworkBannerBg: \"#ffffff\",\n    dashboardBg: \"#f9fafd\",\n    statValue: \"#959595\",\n    boxBorder: \"#eeeeee\",\n    cellTitle: \"#a3a4a5\",\n    cellText: \"#a6a6a6\",\n    divider: \"#d8d8d8\",\n    divider2: \"#EBEBEB\",\n    counter: \"#5d5d5d\",\n    redeem: \"#00a9fe\",\n    link: \"#0036ff\",\n    deposit: \"#0239ff\",\n    migrate: \"#00a9fe\",\n    legend: \"#c9c9c9\",\n    menuBg: \"#fff\",\n    menuHover: \"#f3f6ff\",\n    cardBg: \"#fff\",\n    flashColor: \"#3f4e9a\",\n    menuRightBorder: \"#eee\",\n    menuIconActive:'#2a65d9',\n    cardBgContrast: \"#fafafa\",\n    cardHoverShadow: \"0px 0px 0px 1px rgba(0, 54, 255, 0.3)\",\n    cardBgHover: \"#f7f8ff\",\n    cardBorder: \"#eee\",\n    pageActive: \"#4f4f4f\",\n    pageInactive: \"#d8d8d8\",\n    transactions: {\n      action: {\n        send: \"#10a0dd\",\n        swap: \"#3d53c0\",\n        boost: \"#ffff00\",\n        redeem: \"#10a0dd\",\n        swapout: \"#10a0dd\",\n        deposit: \"#3d53c0\",\n        curvein: \"#10a0dd\",\n        receive: \"#3d53c0\",\n        migrate: \"#3d53c0\",\n        default: \"#4f4f4f\",\n        curveout: \"#3d53c0\",\n        withdraw: \"#10a0dd\",\n        curvedepositin: \"#10a0dd\",\n        curvedepositout: \"#3d53c0\"\n      },\n      actionBg: {\n        send: \"#ceeff6\",\n        swap: \"#ced6ff\",\n        boost: \"#ff7979\",\n        redeem: \"#ceeff6\",\n        swapout: \"#ceeff6\",\n        deposit: \"#ced6ff\",\n        curvein: \"#ceeff6\",\n        default: \"#dadada\",\n        receive: \"#ced6ff\",\n        migrate: \"#ced6ff\",\n        withdraw: \"#ceeff6\",\n        curveout: \"#ced6ff\",\n        curvedepositin: \"#ceeff6\",\n        curvedepositout: \"#ced6ff\"\n      },\n      status: {\n        completed: \"#00b84a\",\n        pending: \"#a5a5a5\",\n        failed: \"#fa0000\"\n      }\n    },\n    blacks: [\n      \"rgba(0,0,0,.0125)\",\n      \"rgba(0,0,0,.025)\",\n      \"rgba(0,0,0,.05)\",\n      \"rgba(0,0,0,.1)\",\n      \"rgba(0,0,0,.2)\",\n      \"rgba(0,0,0,.3)\",\n      \"rgba(0,0,0,.4)\",\n      \"rgba(0,0,0,.5)\",\n      \"rgba(0,0,0,.6)\",\n      \"rgba(0,0,0,.7)\",\n      \"rgba(0,0,0,.8)\",\n      \"rgba(0,0,0,.9)\"\n    ],\n    whites: [\n      \"rgba(255,255,255,.0125)\",\n      \"rgba(255,255,255,.025)\",\n      \"rgba(255,255,255,.05)\",\n      \"rgba(255,255,255,.1)\",\n      \"rgba(255,255,255,.2)\",\n      \"rgba(255,255,255,.3)\",\n      \"rgba(255,255,255,.4)\",\n      \"rgba(255,255,255,.5)\",\n      \"rgba(255,255,255,.6)\",\n      \"rgba(255,255,255,.7)\",\n      \"rgba(255,255,255,.8)\",\n      \"rgba(255,255,255,.9)\"\n    ]\n  },\n  zIndices: [0, 9, 99, 999, 9999],\n  messageStyle: {\n    base: {\n      color: shade(0.4, \"#AAA\"),\n      backgroundColor: tint(0.9, \"#AAA\"),\n      borderColor: \"#AAA\"\n    },\n    success: {\n      color: shade(0.4, green.base),\n      backgroundColor: tint(0.9, green.base),\n      borderColor: green.base\n    },\n    warning: {\n      color: shade(0.4, yellow.base),\n      backgroundColor: tint(0.9, yellow.base),\n      borderColor: yellow.base\n    },\n    danger: {\n      color: shade(0.4, red.base),\n      backgroundColor: tint(0.9, red.base),\n      borderColor: red.base\n    },\n    info: {\n      color: shade(0.4, blue.base),\n      backgroundColor: \"#f3f6ff\",\n      borderColor: \"#b6c2ff\"\n    }\n  },\n  buttons: {\n    primary: {\n      color: blue.text,\n      backgroundColor: blue.base,\n      // use css custom props\n      \"--main-color\": blue.base,\n      \"--contrast-color\": blue.text\n    },\n    normal: {\n      color: baseColors.black,\n      \"--contrast-color\": baseColors.black\n    },\n    success: {\n      \"--main-color\": green.base,\n      \"--contrast-color\": green.text\n    },\n    danger: {\n      \"--main-color\": red.base,\n      \"--contrast-color\": red.text\n    }\n  },\n  buttonSizes: {\n    small: {\n      fontSize: \"0.75rem\",\n      height: \"2rem\",\n      minWidth: \"2rem\",\n      padding: \"0 1rem\"\n    },\n    medium: {\n      fontSize: \"1rem\",\n      height: \"3rem\",\n      minWidth: \"3rem\"\n    },\n    large: {\n      fontSize: \"1.5rem\",\n      height: \"4rem\",\n      minWidth: \"4rem\",\n      borderRadius: \"2rem\"\n    }\n  }\n};\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericSelector from '../GenericSelector/GenericSelector';\n\nclass AssetSelector extends Component {\n\n  state = {\n    options:null,\n    defaultValue:null,\n    CustomOptionValue:null,\n    CustomValueContainer:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  loadComponents(){\n    const options = Object.keys(this.props.availableTokens).map(token => {\n      const tokenConfig = this.props.availableTokens[token];\n      return {\n        value:token,\n        label:token,\n        tokenConfig\n      };\n    });\n\n    const defaultValue = this.props.selectedToken ? options.find(v => (v.value.toUpperCase() === this.props.selectedToken.toUpperCase())) : null;\n\n    const CustomOptionValue = props => {\n      const token = props.value;\n      const tokenConfig = props.data.tokenConfig;\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={token}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={token}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n          {\n            this.state.props.showCustomField ? (\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:this.state.props.showCustomField,\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n            ) : this.props.showBalance &&\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:'tokenBalance',\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n          }\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : defaultValue;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const token = selectProps.value;\n      const tokenConfig = selectProps.tokenConfig;\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={token}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={token}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n\n          {\n            this.props.showBalance &&\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:'tokenBalance',\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n          }\n        </Flex>\n      );\n    }\n\n    this.setState({\n      options,\n      defaultValue,\n      CustomOptionValue,\n      CustomValueContainer\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadComponents();\n\n    this.setState({\n      props:this.props\n    });\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const availableTokensChanged = JSON.stringify(Object.keys(prevProps.availableTokens)) !== JSON.stringify(Object.keys(this.props.availableTokens));\n    if (availableTokensChanged || selectedTokenChanged){\n      this.loadComponents();\n    }\n  }\n\n  render() {\n    if (!this.state.options || !this.state.defaultValue || !this.state.CustomOptionValue || !this.state.CustomValueContainer || !this.props.availableTokens || !Object.keys(this.props.availableTokens).length){\n      return null;\n    }\n\n    return (\n      <GenericSelector\n        {...this.props}\n        name={'assets'}\n        options={this.state.options}\n        innerProps={this.props.innerProps}\n        isSearchable={this.props.isSearchable}\n        defaultValue={this.state.defaultValue}\n        selectedToken={this.props.selectedToken}\n        CustomOptionValue={this.state.CustomOptionValue}\n        CustomValueContainer={this.state.CustomValueContainer}\n        onChange={ this.props.onChange ? this.props.onChange : this.props.changeToken}\n      />\n    );\n  }\n}\n\nexport default AssetSelector;\n","import React, { Component } from 'react';\nimport {\n  Button,\n  Flex,\n  Box,\n  Text\n} from \"rimble-ui\";\nimport styles from './TwitterShareButton.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TwitterShareButton extends Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  share = () => {\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Share',\n      eventAction: 'twitter',\n      eventLabel: this.props.parent\n    });\n\n    const w = Math.min(window.innerWidth,600);\n    const h = 350;\n    const x = (window.innerWidth-w)/2;\n    const y = 150;\n    window.open(`https://twitter.com/intent/tweet?text=${this.props.tweet}`,\"_blank\",`toolbar=yes,scrollbars=no,resizable=no,top=${y},left=${x},width=${w},height=${h}`);\n  }\n\n  render() {\n    return (\n        <Button\n          borderRadius={1}\n          mainColor={'#2aa6f2'}\n          contrastColor={'white'}\n          onClick={ e => { this.share() } }\n        >\n          <Flex flexDirection={'row'} alignItems={'center'} justifyContent={'center'}>\n            <Box className={styles.twitterIcon} />\n            <Text color={'white'} fontWeight={3} ml={2}>{ this.props.text ? this.props.text : 'Tweet' }</Text>\n          </Flex>\n        </Button>\n    );\n  }\n}\n\nexport default TwitterShareButton;\n","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Link,\n  Flex\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport TwitterShareButton from '../../TwitterShareButton/TwitterShareButton.js';\nimport Confetti from 'react-confetti/dist/react-confetti';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\n\nclass ShareModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  closeModal = async (action) => {\n    const globalConfigs = this.functionsUtil.getGlobalConfigs();\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Share',\n        eventAction: action,\n        eventLabel: 'ShareModal'\n      });\n      this.props.closeModal();\n    } else {\n      this.props.closeModal();\n    }\n  }\n\n  render() {\n    const tweet = window.escape(this.props.tweet);\n    const customText = {__html: this.props.text};\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          {\n            this.props.confettiEnabled &&\n            <Confetti\n              style={{ position: 'fixed','zIndex':9999 }}\n              run={true}\n              recycle={true}\n              width={window.innerWidth}\n              height={window.innerHeight}\n            />\n          }\n          <ModalCard.Header title={this.props.title} icon={this.props.icon}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={3} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text color={'dark-gray'} textAlign={'center'} fontSize={3} mb={2} dangerouslySetInnerHTML={customText}></Text>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <TwitterShareButton tweet={tweet} text={'Share now'} parent={'ShareModal'} />\n              <Link mt={2} onClick={ e => this.closeModal('continue_without_sharing') } hoverColor={'blue'}>continue without sharing</Link>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ShareModal;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bg\":\"ModalCard_bg__3ocwQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"twitterIcon\":\"TwitterShareButton_twitterIcon__2QCmn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tooltip\":\"TableCellHeader_tooltip__3xM3k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"radioBtn\":\"TransactionListFilters_radioBtn__1vgHa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Web3ConnectionButtons_button__1Wov0\"};","import React, { Component } from 'react';\nimport { Icon, Text, Flex } from \"rimble-ui\";\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass IconBox extends Component {\n\n  render() {\n    const cardProps = Object.assign({\n      p:3\n    },this.props.cardProps);\n    return (\n      <DashboardCard\n        cardProps={cardProps}\n        isActive={this.props.isActive}\n        isVisible={this.props.isVisible}\n        isInteractive={this.props.isInteractive}\n      >\n        <Flex\n          alignItems={'center'}\n          flexDirection={'column'}\n        >\n          <Icon\n            size={'1.8em'}\n            color={'cellText'}\n            name={this.props.icon ? this.props.icon : 'InfoOutline'}\n            {...this.props.iconProps}\n          />\n          {\n            this.props.text && \n              <Text\n                mt={1}\n                fontSize={2}\n                color={'cellText'}\n                textAlign={'center'}\n                dangerouslySetInnerHTML={{\n                  __html:this.props.text\n                }}\n                {...this.props.textProps}\n              />\n          }\n          {\n            this.props.children\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default IconBox;\n","/*\nTheming: https://github.com/plouc/nivo/issues/308\n*/\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\n\nclass GenericChart extends Component {\n  state = {\n    width:null,\n    height:null\n  };\n\n  componentUnmounted = false;\n\n  componentWillMount() {\n    window.addEventListener('resize', this.handleWindowSizeChange.bind(this));\n  }\n\n  componentWillUnmount() {\n    this.componentUnmounted = true;\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n\n  componentDidMount(){\n    this.handleWindowSizeChange();\n  }\n\n  componentDidUpdate(prevProps){\n    if (prevProps.isMobile !== this.props.isMobile){\n      this.handleWindowSizeChange();\n    }\n  }\n\n  handleWindowSizeChange(){\n    if (this.componentUnmounted){\n      return false;\n    }\n\n    const newState = {...this.state};\n\n    if (this.props.parentId){\n      const chartContainer = document.getElementById(this.props.parentId);\n      if (chartContainer){\n        const chartWidth = parseFloat(chartContainer.offsetWidth)>0 ? chartContainer.offsetWidth : 0;\n\n        if (chartWidth && chartWidth !== newState.width){\n          newState.width = chartWidth;\n        }\n      }\n    }\n\n    if (!newState.width && this.props.width && this.props.width !== newState.width) {\n      newState.width = this.props.width;\n    }\n\n    if (this.props.parentIdHeight){\n      const chartContainerH = document.getElementById(this.props.parentIdHeight);\n      if (chartContainerH){\n        const chartHeight = parseFloat(chartContainerH.offsetWidth)>0 ? chartContainerH.offsetWidth : 0;\n        if (chartHeight && chartHeight !== newState.height){\n          newState.height = chartHeight;\n          if (!newState.width){\n            newState.width = chartHeight;\n          }\n        }\n      }\n    }\n\n    if (!newState.height && this.props.height && this.props.height !== newState.height) {\n      newState.height = this.props.height;\n    }\n\n    newState.height = newState.height || newState.width;\n\n    if (Object.keys(newState).length>0){\n      this.setState(newState);\n    }\n  };\n\n  render() {\n    const ChartType = this.props.type;\n\n    const height = this.state.height && !isNaN(this.state.height) ? parseInt(this.state.height) : 350;\n    const width = this.state.width && !isNaN(this.state.width) ? parseInt(this.state.width) : 0;\n\n    let chartProps = Object.assign({},this.props);\n    chartProps = {\n      ...chartProps,\n      height,\n      width\n    }\n\n    return chartProps.showLoader && (!chartProps.data || !width || !height) ? (\n      <FlexLoader\n        flexProps={{\n          flexDirection:'row',\n          minHeight:height\n        }}\n        loaderProps={ this.props.loaderProps ? this.props.loaderProps : {\n          size:'30px'\n        }}\n        textProps={{\n          ml:2\n        }}\n        text={ this.props.loaderText !== undefined ? this.props.loaderText : 'Loading graph data...'}\n      />\n    ) : this.props.data && (\n      <ChartType\n        {...chartProps}\n      />\n    )\n  }\n}\n\nexport default GenericChart;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gradientButton\":\"Header_gradientButton__2mrQl\",\"empty\":\"Header_empty__3fhiX\",\"select\":\"Header_select__27Xyx\",\"selectDark\":\"Header_selectDark__EHAAP\",\"input\":\"Header_input__3dr8P\"};","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\n\nclass ExecuteTransaction extends Component {\n\n  state = {\n    txStatus:null,\n    processing:{\n      txHash:null,\n      loading:false\n    }\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  async execute(){\n\n    const callback = (tx,error) => {\n\n      console.log('callback',tx,error);\n\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: 'Transaction',\n        eventLabel: this.props.methodName,\n        eventAction: this.props.contractName\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      const txSucceeded = tx && tx.status === 'success';\n      if (txSucceeded){\n        if (typeof this.props.callback === 'function'){\n          this.props.callback(tx);\n        }\n      }\n\n      this.setState({\n        processing: {\n          txHash:null,\n          loading:false\n        },\n        txStatus:tx ? tx.status : null\n      });\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        txStatus:'processing',\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    this.setState((prevState) => ({\n      txStatus:'loading',\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n\n    let params = this.props.params;\n    if (typeof this.props.getTransactionParams === 'function'){\n      params = this.props.getTransactionParams();\n    } else if (typeof this.props.getTransactionParamsAsync === 'function'){\n      params = await this.props.getTransactionParamsAsync();\n    } else if (typeof this.props.transactionParams === 'object'){\n      params = this.props.transactionParams;\n    }\n\n    if (!params){\n      this.setState((prevState) => ({\n        txStatus:null,\n        processing: {\n          ...prevState.processing,\n          loading:false\n        }\n      }));\n      return false;\n    }\n\n    if (this.props.sendRawTransaction){\n      this.functionsUtil.contractMethodSendWrapper(this.props.contractName,this.props.methodName,params,callback,callbackReceipt,null,true,params);\n    } else {\n      this.functionsUtil.contractMethodSendWrapper(this.props.contractName,this.props.methodName,params,callback,callbackReceipt);\n    }\n  }\n\n  render() {\n    const ExecuteComponent = this.props.Component;\n    return (\n      <Flex\n        {...this.props.parentProps}\n      >\n        {\n          this.state.txStatus === 'success' && this.props.children ?\n            this.props.children\n          : this.state.processing && this.state.processing.loading ? (\n            <TxProgressBar\n              web3={this.props.web3}\n              network={this.props.network}\n              {...this.props.progressBarProps}\n              hash={this.state.processing.txHash}\n              cancelTransaction={this.cancelTransaction.bind(this)}\n              endMessage={`Finalizing ${this.props.action} request...`}\n              waitText={`${this.functionsUtil.capitalize(this.props.action)} estimated in`}\n            />\n          ) : (\n            <ExecuteComponent\n              onClick={this.execute.bind(this)}\n              {...this.props.componentProps}\n            >\n              {this.props.componentProps.value}\n            </ExecuteComponent>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default ExecuteTransaction;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"Tos_headerContainer__23W_f\",\"headerBgFiller\":\"Tos_headerBgFiller__36Nfk\",\"bgContainer\":\"Tos_bgContainer__rX7uJ\",\"list\":\"Tos_list__3bMLG\",\"textContainer\":\"Tos_textContainer__3hUuq\"};","import theme from '../theme';\nimport React, { Component } from 'react';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ShortHash from \"../utilities/components/ShortHash\";\nimport { Flex, Text, Icon, Link, Image } from \"rimble-ui\";\n\nclass TransactionField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const hashChanged = prevProps.hash !== this.props.hash;\n    const accountChanged = prevProps.account !== this.props.account;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    if (fieldChanged || hashChanged || accountChanged){\n      this.loadField();\n    }\n  }\n\n  async loadField(){\n    const fieldInfo = this.props.fieldInfo;\n    if (this.props.hash && this.props.account){\n      switch (fieldInfo.name){\n        case 'icon':\n        break;\n        case 'hash':\n          \n        break;\n        case 'action':\n          \n        break;\n        case 'date':\n        break;\n        case 'status':\n        break;\n        case 'amount':\n        break;\n        case 'asset':\n        break;\n        case 'custom':\n        break;\n        default:\n        break;\n      }\n    }\n  }\n\n  render(){\n    let icon = null;\n    let color = null;\n    let output = null;\n    const fieldInfo = this.props.fieldInfo;\n    const transaction = this.props.transaction;\n    let bgColor = theme.colors.transactions.actionBg.default;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      style:{\n        maxWidth:'100%',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis'\n      },\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    switch (fieldInfo.name){\n      case 'icon':\n        if (transaction.action){\n          color = theme.colors.transactions.action[transaction.action.toLowerCase()] ? theme.colors.transactions.action[transaction.action.toLowerCase()] : color;\n          bgColor = theme.colors.transactions.actionBg[transaction.action.toLowerCase()] ? theme.colors.transactions.actionBg[transaction.action.toLowerCase()] : bgColor;\n        }\n        switch (transaction.action.toLowerCase()) {\n          case 'deposit':\n          case 'curveout':\n          case 'curvezapout':\n          case 'curvedepositout':\n            icon = \"ArrowDownward\";\n          break;\n          case 'boost':\n            icon = \"TrendingUp\";\n          break;\n          case 'redeem':\n          case 'curvein':\n          case 'curvezapin':\n          case 'curvedepositin':\n            icon = \"ArrowUpward\";\n          break;\n          case 'send':\n            icon = \"Send\";\n          break;\n          case 'receive':\n            icon = \"Redo\";\n          break;\n          case 'migrate':\n            // icon = \"Sync\";\n            icon = \"Repeat\";\n          break;\n          case 'swap':\n            icon = \"SwapHoriz\";\n          break;\n          case 'swapout':\n            icon = \"SwapHoriz\";\n          break;\n          case 'withdraw':\n            icon = \"ArrowUpward\";\n          break;\n          default:\n            icon = \"Refresh\";\n          break;\n        }\n        output = (\n          <Flex\n            p={'5px'}\n            borderRadius={'50%'}\n            {...fieldProps}\n            alignItems={'center'}\n            backgroundColor={bgColor}\n            justifyContent={'center'}\n          >\n            <Icon\n              name={icon}\n              color={color}\n              align={'center'}\n              size={this.props.isMobile ? '1em' : '1.4em'}\n            />\n          </Flex>\n        );\n      break;\n      case 'hash':\n        if (transaction.hash){\n          output = (\n            <Link\n              target={'_blank'}\n              rel={'nofollow noopener noreferrer'}\n              href={`https://etherscan.io/tx/${transaction.hash}`}\n            >\n              <ShortHash\n                fontSize={1}\n                color={'white'}\n                {...fieldProps}\n                resolveAddress={false}\n                hash={transaction.hash}\n              />\n            </Link>\n          );\n        }\n      break;\n      case 'action':\n        let action = transaction.action;\n        switch (transaction.action) {\n          case 'Swap':\n            action = \"Swap In\";\n          break;\n          case 'SwapOut':\n            action = \"Swap Out\";\n          break;\n          default:\n          break;\n        }\n        output = (\n          <Text {...fieldProps}>{action.toUpperCase()}</Text>\n        );\n      break;\n      case 'date':\n        const formattedDate = transaction.momentDate.format('DD MMM, YYYY');\n        output = (\n          <Text {...fieldProps}>{formattedDate}</Text>\n        );\n      break;\n      case 'statusIcon':\n        color = theme.colors.transactions.status[transaction.status.toLowerCase()];\n        switch (transaction.status) {\n          case 'Completed':\n            icon = \"Done\";\n          break;\n          case 'Pending':\n            icon = \"Timelapse\";\n          break;\n          case 'Failed':\n            icon = \"ErrorOutline\";\n          break;\n          default:\n          break;\n        }\n        output = (\n          <Flex\n            p={[0,'1px']}\n            borderRadius={'50%'}\n            {...fieldProps}\n            alignItems={'center'}\n            width={['24px','26px']}\n            height={['24px','26px']}\n            justifyContent={'center'}\n            border={ this.props.isMobile ? `1px solid ${color}` : `2px solid ${color}` }\n          >\n            <Icon\n              name={icon}\n              color={color}\n              align={'center'}\n              size={ this.props.isMobile ? '1em' : '1.2em'}\n            />\n          </Flex>\n        );\n      break;\n      case 'status':\n        output = (\n          <Text {...fieldProps}>{transaction.status}</Text>\n        );\n      break;\n      case 'amount':\n        output = (\n          <SmartNumber {...fieldProps} number={transaction.amount} />\n        );\n      break;\n      case 'tokenIcon':\n        const tokenSymbol = transaction.tokenSymbol.toUpperCase();\n        const tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',tokenSymbol]);\n        const iconSrc = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${tokenSymbol}.svg`;\n        output = (\n          <Image src={iconSrc} {...fieldProps} />\n        );\n      break;\n      case 'tokenName':\n        output = (\n          <Text {...fieldProps}>{transaction.tokenSymbol.toUpperCase()}</Text>\n        );\n      break;\n      case 'custom':\n        let CustomComponent = null;\n        let customValue = this.functionsUtil.getArrayPath(fieldInfo.path,this.props.transaction);\n        switch (fieldInfo.type){\n          case 'number':\n            customValue = this.functionsUtil.BNify(customValue).toString();\n            CustomComponent = SmartNumber;\n            fieldProps.number = customValue;\n            customValue = null;\n          break;\n          case 'image':\n            CustomComponent = Image;\n            fieldProps.src = customValue;\n            customValue = null;\n          break;\n          case 'icon':\n            CustomComponent = Icon;\n            fieldProps.name = customValue;\n            customValue = null;\n          break;\n          default:\n            CustomComponent = Text;\n          break;\n        }\n        output = customValue ? (\n          <CustomComponent {...fieldProps}>{customValue}</CustomComponent>\n        ) : <CustomComponent {...fieldProps} />\n      break;\n      default:\n      break;\n    }\n    return output;\n  }\n}\n\nexport default TransactionField;\n","import FunctionsUtil from './FunctionsUtil';\n\nclass IdleGovToken{\n  // Attributes\n  props = {};\n  tokenName = null;\n  tokenConfig = null;\n  functionsUtil = null;\n\n  // Constructor\n  constructor(props){\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    this.tokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n    this.tokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.tokenName]);\n  }\n\n  getBalance = async () => {\n    let balance = await this.functionsUtil.getTokenBalance(this.tokenName,this.props.account);\n    if (!balance || this.functionsUtil.BNify(balance).isNaN()){\n      balance = this.functionsUtil.BNify(0);\n    }\n    return balance;\n  }\n\n  claimRewards = async (callback,callbackReceipt) => {\n    return this.functionsUtil.contractMethodSendWrapper('EarlyRewards', 'claim', [], callback, callbackReceipt);\n  }\n\n  getPriorVotes = async (account=null) => {\n    account = account ? account : this.props.account;\n    let priorVotes = await this.functionsUtil.genericContractCall(this.tokenName,'getPriorVotes',[account]);\n    if (priorVotes){\n      return this.functionsUtil.BNify(priorVotes);\n    }\n    return null;\n  }\n\n  refreshIdleSpeed = async () => {\n    return this.functionsUtil.genericContractCall('IdleController','refreshIdleSpeeds');\n  }\n\n  getUnclaimedTokens = async () => {\n    /*\n    let rewards =  await this.functionsUtil.genericContractCall('EarlyRewards','rewards',[this.props.account]);\n    if (rewards){\n      return this.functionsUtil.fixTokenDecimals(rewards,this.tokenConfig.decimals);\n    }\n    */\n    return this.functionsUtil.BNify(0);\n  }\n\n  getAPR = async (token,tokenConfig,conversionRate=null) => {\n    const IDLETokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.tokenName]);\n    if (!IDLETokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getIdleAPR_${tokenConfig.idle.token}_${conversionRate}`;\n    /*\n    const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n    */\n\n    let APR = this.functionsUtil.BNify(0);\n\n    const [\n      idleDistribution,\n      tokenAllocation\n    ] = await Promise.all([\n      this.getDistribution(tokenConfig),\n      this.functionsUtil.getTokenAllocation(tokenConfig,false,false)\n    ]);\n\n    if (idleDistribution && tokenAllocation){\n\n      const DAITokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens','DAI']);\n        \n      // Get IDLE oconversion rate\n      if (!conversionRate){\n        try {\n          conversionRate = await this.functionsUtil.getUniswapConversionRate(DAITokenConfig,IDLETokenConfig);\n        } catch (error) {\n\n        }\n        if (!conversionRate || conversionRate.isNaN()){\n          conversionRate = this.functionsUtil.BNify(0);\n        }\n      }\n\n      if (!conversionRate || this.functionsUtil.BNify(conversionRate).lte(0)){\n        return this.functionsUtil.BNify(0);\n      }\n\n      const tokenPool = await this.functionsUtil.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent,token,tokenConfig);\n\n      const idleDistributedPerYearUSD = this.functionsUtil.BNify(conversionRate).times(idleDistribution);\n      APR = idleDistributedPerYearUSD.div(tokenPool).times(100);\n\n      // console.log(tokenConfig.idle.token,idleDistributedPerYearUSD.toFixed(5),conversionRate.toFixed(5),tokenPool.toFixed(5),APR.toFixed(5));\n\n      return this.functionsUtil.setCachedData(cachedDataKey,APR);\n    }\n\n    return APR;\n  }\n\n  // Get IDLE distribution speed\n  getSpeed = async (idleTokenAddress) => {\n\n    const cachedDataKey = `getIdleSpeed_${idleTokenAddress}`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return this.functionsUtil.BNify(cachedData);\n    }\n\n    let idleSpeeds = await this.functionsUtil.genericContractCall('IdleController','idleSpeeds',[idleTokenAddress]);\n\n    if (idleSpeeds && !this.functionsUtil.BNify(idleSpeeds).isNaN()){\n      idleSpeeds = this.functionsUtil.BNify(idleSpeeds);\n      return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,idleSpeeds,1800);\n    }\n    return null;\n  }\n\n  getDistribution = async (tokenConfig) => {\n\n    const cachedDataKey = `getIdleDistribution_${tokenConfig.idle.token}`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return this.functionsUtil.BNify(cachedData);\n    }\n\n    // Get IDLE distribution speed and Total Supply\n    const idleSpeeds = await this.getSpeed(tokenConfig.idle.address);\n\n    if (idleSpeeds){\n\n      // Get IDLE distribution for Idle in a Year\n      const blocksPerYear = this.functionsUtil.getGlobalConfig(['network','blocksPerYear']);\n\n      // Take 50% of distrubution for lenders side\n      const distribution = this.functionsUtil.BNify(idleSpeeds).times(this.functionsUtil.BNify(blocksPerYear)).div(1e18);\n\n      if (!this.functionsUtil.BNify(distribution).isNaN()){\n        return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,distribution);\n      }\n    }\n\n    return null;\n  }\n\n  getUserDistribution = async (account=null,availableTokens=null,fixByFrequency=false) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens){\n      return false;\n    }\n\n    const currentNetworkId = this.functionsUtil.getRequiredNetworkId();\n\n    let totalSpeed = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n\n      const disabledTokens = this.functionsUtil.getArrayPath(['disabledTokens',currentNetworkId],this.tokenConfig);\n\n      if (disabledTokens.includes(tokenConfig.idle.token)){\n        return;\n      }\n\n      const [\n        idleSpeed,\n        userPoolShare\n      ] = await Promise.all([\n        this.getSpeed(tokenConfig.idle.address),\n        this.functionsUtil.getUserPoolShare(account,tokenConfig)\n      ]);\n\n      if (idleSpeed && userPoolShare){\n        const tokenSpeed = idleSpeed.times(userPoolShare);\n        totalSpeed = totalSpeed.plus(tokenSpeed);\n      }\n    });\n\n    if (fixByFrequency){\n      totalSpeed = this.functionsUtil.fixTokenDecimals(totalSpeed,this.tokenConfig.decimals);\n      totalSpeed = this.functionsUtil.fixDistributionSpeed(totalSpeed,this.tokenConfig.distributionFrequency)\n    }\n\n    return totalSpeed;\n  }\n\n  getAvgApr = async (availableTokens=null) => {\n    if (!availableTokens){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n    let output = this.functionsUtil.BNify(0);\n    let totalAllocation = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [idleApr,tokenAllocation] = await Promise.all([\n        this.getAPR(token,tokenConfig),\n        this.functionsUtil.getTokenAllocation(tokenConfig,false,false)\n      ]);\n      \n      if (idleApr && tokenAllocation){\n        output = output.plus(idleApr.times(tokenAllocation.totalAllocation));\n        totalAllocation = totalAllocation.plus(tokenAllocation.totalAllocation);\n      }\n    });\n\n    output = output.div(totalAllocation);\n\n    return output;\n  }\n\n}\n\nexport default IdleGovToken;","import Web3 from \"web3\";\nimport React from \"react\";\nimport axios from 'axios';\nimport moment from 'moment';\nimport { Text } from \"rimble-ui\";\nimport BigNumber from 'bignumber.js';\nimport IdleGovToken from './IdleGovToken';\nimport { toBuffer } from \"ethereumjs-util\";\nimport globalConfigs from '../configs/globalConfigs';\nimport ENS, { getEnsAddress } from '@ensdomains/ensjs';\nimport availableTokens from '../configs/availableTokens';\nimport IAaveIncentivesController from '../abis/aave/IAaveIncentivesController.json';\n\nconst ethereumjsABI = require('ethereumjs-abi');\n\nwindow.profiler = {};\n\nclass FunctionsUtil {\n\n  // Attributes\n  props = {};\n  idleGovToken = null;\n\n  // Constructor\n  constructor(props){\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n  }\n  trimEth = eth => {\n    return this.BNify(eth).toFixed(6);\n  }\n  toBN = n => new this.props.web3.utils.BN(n)\n  toEth = wei => {\n    if (!this.props.web3){\n      return null;\n    }\n    return this.props.web3.utils.fromWei(\n      (wei || 0).toString(),\n      \"ether\"\n    );\n  }\n  toWei = eth => {\n    if (!this.props.web3){\n      return null;\n    }\n    return this.props.web3.utils.toWei(\n      (eth || 0).toString(),\n      \"ether\"\n    );\n  }\n  htmlDecode = input => {\n    var e = document.createElement('textarea');\n    e.innerHTML = input;\n    return e.childNodes.length === 0 ? '' : e.childNodes[0].nodeValue;\n  }\n  BNify_obj = s => new BigNumber(s)\n  BNify = s => new BigNumber( typeof s === 'object' ? s : String(s) )\n  customLog = (...props) => { if (globalConfigs.logs.messagesEnabled) this.customLog(moment().format('HH:mm:ss'),...props); }\n  customLogError = (...props) => { if (globalConfigs.logs.errorsEnabled) console.error(moment().format('HH:mm:ss'),...props); }\n  getContractByName = (contractName) => {\n    const contract = this.props.contracts.find(c => c.name === contractName);\n    if (!contract) {\n      return false;\n    }\n    return contract.contract;\n  }\n  normalizeSimpleIDNotification = (n) => {\n    return n.replace(/<\\/p><p>/g,\"\\n\")\n            .replace(/<p>/g,\"\")\n            .replace(/<br>/g,\"\")\n            .replace(/&nbsp;/g,\" \")\n            .replace(/<\\/p>/g,\"\");\n  }\n  capitalize = (str) => {\n    return str ? str.substr(0,1).toUpperCase()+str.substr(1) : '';\n  }\n  strToMoment = (date,format=null) => {\n    return moment(date,format);\n  }\n  replaceArrayProps = (arr1,arr2) => {\n    if (arr2 && Object.keys(arr2).length){\n      Object.keys(arr2).forEach(p => {\n        arr1[p] = arr2[p];\n      });\n    }\n\n    return arr1;\n  }\n  replaceArrayPropsRecursive = (arr1,arr2,props=null) => {\n    if (arr2 && Object.keys(arr2).length){\n      Object.keys(arr2).forEach(p => {\n        if (typeof arr2[p]==='function'){\n          arr1[p] = arr2[p](props);\n        } else if (typeof arr2[p]==='object'){\n          arr1[p] = {...arr1[p],...this.replaceArrayPropsRecursive(arr1,arr2[p],props)};\n        } else {\n          arr1[p] = arr2[p];\n        }\n      });\n    }\n    return arr1;\n  }\n  stripHtml = (html) => {\n     var tmp = document.createElement(\"DIV\");\n     tmp.innerHTML = html;\n     return tmp.textContent || tmp.innerText || \"\";\n  }\n  // VanillaJS function for smooth scroll\n  scrollTo = (to, duration) => {\n    const start = window.scrollY;\n    const change = to - start;\n    const increment = 20;\n    let currentTime = 0;\n\n    Math.easeInOutQuad = function (t, b, c, d) {\n      t /= d/2;\n      if (t < 1) return c/2*t*t + b;\n      t--;\n      return -c/2 * (t*(t-2) - 1) + b;\n    };\n\n    const animateScroll = () => {\n        currentTime += increment;\n        var val = Math.easeInOutQuad(currentTime, start, change, duration);\n        window.scrollTo(0,val);\n        if(currentTime < duration) {\n          window.setTimeout(animateScroll, increment);\n        }\n    };\n\n    animateScroll();\n  }\n  getQueryStringParameterByName = (name, url = window.location.href) => {\n    // eslint-disable-next-line\n    name = name.replace(/[\\[\\]]/g, '\\\\$&');\n    var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)'),\n        results = regex.exec(url);\n    if (!results) return null;\n    if (!results[2]) return '';\n    return decodeURIComponent(results[2].replace(/\\+/g, ' '));\n  }\n  getTxAction = (tx,tokenConfig) => {\n\n    if (!tokenConfig.idle){\n      return null;\n    }\n\n    const idleTokenAddress = tokenConfig.idle.address;\n    const depositProxyContractInfo = this.getGlobalConfig(['contract','methods','deposit','proxyContract']);\n    const migrationContractAddr = tokenConfig.migration && tokenConfig.migration.migrationContract ? tokenConfig.migration.migrationContract.address : null;\n    const migrationContractOldAddrs = tokenConfig.migration && tokenConfig.migration.migrationContract && tokenConfig.migration.migrationContract.oldAddresses ? tokenConfig.migration.migrationContract.oldAddresses : [];\n    const batchMigration = this.getGlobalConfig(['tools','batchMigration','props','availableTokens',tokenConfig.idle.token]);\n    const batchMigrationContractAddr = batchMigration && batchMigration.migrationContract ? batchMigration.migrationContract.address : null;\n\n    const isBatchMigrationTx = batchMigrationContractAddr && tx.from.toLowerCase() === batchMigrationContractAddr.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase();    \n    const isMigrationTx = isBatchMigrationTx || (migrationContractAddr && (tx.from.toLowerCase() === migrationContractAddr.toLowerCase() || migrationContractOldAddrs.map((v) => { return v.toLowerCase(); }).indexOf(tx.from.toLowerCase()) !== -1 ) && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase());\n    const isSendTransferTx = !isMigrationTx && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n    const isReceiveTransferTx = !isMigrationTx && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n    const isDepositTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && (tx.to.toLowerCase() === idleTokenAddress.toLowerCase() || (depositProxyContractInfo && tx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase()));\n    const isRedeemTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && tx.to.toLowerCase() === this.props.account.toLowerCase();\n    const isSwapTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && !isDepositTx && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n\n    let action = null;\n\n    if (isDepositTx){\n      action = 'Deposit';\n    } else if (isRedeemTx){\n      action = 'Redeem';\n    } else if (isMigrationTx){\n      action = 'Migrate';\n    } else if (isSendTransferTx){\n      action = 'Send';\n    } else if (isReceiveTransferTx){\n      action = 'Receive';\n    } else if (isSwapTx){\n      action = 'Swap';\n    } else if (isSwapTx){\n      action = 'SwapOut';\n    }\n\n    return action;\n  }\n  shortenHash = hash => {\n    let shortHash = hash;\n    const txStart = shortHash.substr(0, 7);\n    const txEnd = shortHash.substr(shortHash.length - 4);\n    shortHash = txStart + \"...\" + txEnd;\n    return shortHash;\n  }\n  addEthereumChain = (chainId) => {\n    const web3 = this.getCurrentWeb3();\n\n    // console.log('addEthereumChain',chainId,web3.utils,typeof web3.currentProvider.request);\n\n    if (!web3 || !web3.utils || !web3.currentProvider || typeof web3.currentProvider.request !== 'function'){\n      return false;\n    }\n\n    chainId = parseInt(chainId);\n    const networkConfig = this.getGlobalConfig(['network','availableNetworks',chainId]);\n\n    // console.log('networkConfig',networkConfig);\n\n    if (!networkConfig){\n      return false;\n    }\n\n    const chainName = networkConfig.chainName || networkConfig.name;\n    const providerConfig = this.getGlobalConfig(['network','providers',networkConfig.provider]);\n    const blockExplorerUrl = this.getGlobalConfig(['network','providers',networkConfig.explorer,'baseUrl',chainId]);\n    const rpcUrl = (providerConfig.publicRpc && providerConfig.publicRpc[chainId]) || (providerConfig.rpc[chainId]+providerConfig.key);\n    const params = [{\n      chainName,\n      rpcUrls:[rpcUrl],\n      chainId: web3.utils.toHex(chainId),\n      nativeCurrency: {\n        decimals: 18,\n        name: networkConfig.baseToken,\n        symbol: networkConfig.baseToken\n      },\n      blockExplorerUrls: [blockExplorerUrl]\n    }];\n\n    // console.log('addEthereumChain',params);\n\n    web3.currentProvider.request({\n      params,\n      method:'wallet_addEthereumChain',\n    })\n  }\n  getENSName = async (address) => {\n\n    const networkId = this.getRequiredNetworkId();\n    const ensConfig = this.getGlobalConfig(['network','providers','ens']);\n\n    if (!ensConfig.enabled || !ensConfig.supportedNetworks.includes(networkId)){\n      return null;\n    }\n\n    if (!this.checkAddress(address) || !this.props.web3){\n      return null;\n    }\n\n    const cachedDataKey = `getENSName_${address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const TTL = 3600;\n    const provider = this.props.web3.currentProvider;\n    if (networkId === 1){\n      const ens = new ENS({ provider, ensAddress: getEnsAddress(networkId.toString()) });\n      const ensName = await ens.getName(address);\n      if (ensName && ensName.name){\n        const addressCheck = await ens.name(ensName.name).getAddress();\n        if (addressCheck && address.toLowerCase() === addressCheck.toLowerCase()){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,ensName.name,TTL);\n        }\n      }\n    }\n\n    return null;\n  }\n  getAccountPortfolioTranches = async (availableTranches=null,account=null) => {\n    const portfolio = {\n      transactions:[],\n      tranchesBalance:[],\n      avgAPY:this.BNify(0),\n      totalBalance:this.BNify(0),\n      totalEarnings:this.BNify(0),\n      totalAmountLent:this.BNify(0),\n      totalEarningsPerc:this.BNify(0),\n    };\n\n    availableTranches = availableTranches ? availableTranches : this.props.availableTranches;\n    account = account ? account : this.props.account;\n\n    if (!account || !availableTranches){\n      return portfolio;\n    }\n\n    const tranches = this.getGlobalConfig(['tranches']);\n\n    await this.asyncForEach(Object.keys(availableTranches),async (protocol) => {\n      const protocolConfig = availableTranches[protocol];\n      await this.asyncForEach(Object.keys(protocolConfig),async (token) => {\n        const tokenConfig = protocolConfig[token];\n        await this.asyncForEach(Object.keys(tranches),async (tranche) => {\n          const trancheConfig = tokenConfig[tranche];\n          const trancheTokenBalance = await this.loadTrancheFieldRaw('trancheDeposited',{},protocol,token,tranche,tokenConfig,trancheConfig,account);\n          if (trancheTokenBalance){\n            const [\n              tranchePool,\n              tranchePrice,\n            ] = await Promise.all([\n              this.loadTrancheFieldRaw('tranchePool',{},protocol,token,tranche,tokenConfig,trancheConfig,account),\n              this.loadTrancheFieldRaw('tranchePrice',{},protocol,token,tranche,tokenConfig,trancheConfig,account)\n            ]);\n            const tokenBalance = trancheTokenBalance.times(tranchePrice);\n\n            if (!this.BNify(tranchePrice).isNaN() && !this.BNify(tokenBalance).isNaN()){\n              const [\n                trancheUserInfo,\n                trancheApy,\n              ] = await Promise.all([\n                this.getTrancheUserInfo(tokenConfig,trancheConfig,account),\n                this.loadTrancheFieldRaw('trancheApy',{},protocol,token,tranche,tokenConfig,trancheConfig,account),\n              ]);\n\n              const poolShare = tokenBalance.div(tranchePool);\n              const amountDeposited = trancheUserInfo.amountDeposited;\n              const trancheEarnings = tokenBalance.minus(amountDeposited);\n\n              // console.log('trancheBalance',protocol,token,tranche,'trancheTokenBalance',trancheTokenBalance.toFixed(),'tranchePrice',tranchePrice.toFixed(),'tokenBalance',tokenBalance.toFixed(),'trancheApy',trancheApy.toFixed(),'amountDeposited',amountDeposited.toFixed());\n              portfolio.transactions = [...portfolio.transactions,...trancheUserInfo.transactions];\n\n              portfolio.tranchesBalance.push({\n                token,\n                tranche,\n                protocol,\n                poolShare,\n                trancheApy,\n                tranchePrice,\n                tokenBalance,\n                trancheEarnings,\n                amountDeposited, \n                trancheTokenBalance\n              });\n\n              // console.log(protocol,token,tranche,amountDeposited.toFixed(),tokenBalance.toFixed(),trancheEarnings.toFixed());\n\n              // Increment total balance\n              portfolio.totalBalance = portfolio.totalBalance.plus(tokenBalance);\n            }\n          }\n        });\n      });\n    });\n\n    let avgAPY = this.BNify(0);\n    let totalEarnings = this.BNify(0);\n    let totalAmountLent = this.BNify(0);\n    let totalEarningsPerc = this.BNify(0);\n\n    // Calculate aggregated data\n    portfolio.tranchesBalance.forEach( trancheInfo => {\n      const trancheApy = this.BNify(trancheInfo.trancheApy);\n      const trancheWeight = trancheInfo.tokenBalance.div(portfolio.totalBalance);\n\n      // Add tranche weight\n      trancheInfo.trancheWeight = trancheWeight;\n\n      if (trancheInfo.trancheEarnings){\n        totalEarnings = totalEarnings.plus(trancheInfo.trancheEarnings);\n      }\n\n      if (trancheApy){\n        avgAPY = avgAPY.plus(trancheApy.times(trancheWeight));\n      }\n\n      if (trancheInfo.amountDeposited){\n        totalAmountLent = totalAmountLent.plus(trancheInfo.amountDeposited);\n      }\n    });\n\n    if (totalAmountLent.gt(0)){\n      totalEarningsPerc = totalEarnings.div(totalAmountLent).times(100);\n    }\n\n    portfolio.avgAPY = avgAPY;\n    portfolio.totalEarnings = totalEarnings;\n    portfolio.totalAmountLent = totalAmountLent;\n    portfolio.totalEarningsPerc = totalEarningsPerc;\n\n    return portfolio;\n  }\n  getAccountPortfolio = async (availableTokens=null,account=null) => {\n    const portfolio = {\n      tokensBalance:{},\n      avgAPY:this.BNify(0),\n      totalBalance:this.BNify(0),\n      totalEarnings:this.BNify(0),\n      totalAmountLent:this.BNify(0),\n      totalEarningsPerc:this.BNify(0),\n      totalBalanceConverted:this.BNify(0)\n    };\n\n    availableTokens = availableTokens ? availableTokens : this.props.availableTokens;\n    account = account ? account : this.props.account;\n\n    if (!account || !availableTokens){\n      return portfolio;\n    }\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const idleTokenBalance = await this.getTokenBalance(tokenConfig.idle.token,account);\n\n      if (idleTokenBalance){\n        const tokenPrice = await this.getIdleTokenPrice(tokenConfig);\n        const tokenBalance = idleTokenBalance.times(tokenPrice);\n        const tokenBalanceConverted = await this.convertTokenBalance(tokenBalance,token,tokenConfig,isRisk);\n\n        if (!tokenPrice.isNaN() && !tokenBalance.isNaN()){\n          portfolio.tokensBalance[token] = {\n            tokenPrice,\n            tokenBalance,\n            idleTokenBalance,\n            tokenBalanceConverted\n          };\n\n          // Increment total balance\n          portfolio.totalBalance = portfolio.totalBalance.plus(tokenBalance);\n          portfolio.totalBalanceConverted = portfolio.totalBalanceConverted.plus(tokenBalanceConverted);\n        }\n      }\n    });\n\n    const orderedTokensBalance = {};\n    Object.keys(availableTokens).forEach( token => {\n      if (portfolio.tokensBalance[token]){\n        orderedTokensBalance[token] = portfolio.tokensBalance[token];\n      }\n    });\n\n    portfolio.tokensBalance = orderedTokensBalance;\n\n    const depositedTokens = Object.keys(portfolio.tokensBalance).filter(token => ( this.BNify(portfolio.tokensBalance[token].idleTokenBalance).gt(0) ));\n\n    let avgAPY = this.BNify(0);\n    let totalEarnings = this.BNify(0);\n    let totalAmountLent = this.BNify(0);\n    let totalEarningsPerc = this.BNify(0);\n    // const amountLents = await this.getAmountLent(depositedTokens,this.props.account);\n\n    await this.asyncForEach(depositedTokens,async (token) => {\n      const tokenConfig = availableTokens[token];\n      const amountDeposited = await this.getAmountDeposited(tokenConfig,account);\n\n      // console.log(token,'amountDeposited',amountDeposited.toString(),'amountLent',amountLents[token].toString());\n\n      const tokenBalanceConverted = portfolio.tokensBalance[token].tokenBalanceConverted;\n      const tokenAprs = await this.getTokenAprs(tokenConfig);\n\n      const tokenAPY = this.BNify(tokenAprs.avgApy);\n      const tokenWeight = tokenBalanceConverted.div(portfolio.totalBalanceConverted);\n      const amountLentToken = await this.convertTokenBalance(amountDeposited,token,tokenConfig,isRisk);\n      const tokenEarnings = tokenBalanceConverted.minus(amountLentToken);\n\n      if (tokenEarnings){\n        totalEarnings = totalEarnings.plus(tokenEarnings);\n      }\n\n      if (tokenAPY){\n        avgAPY = avgAPY.plus(tokenAPY.times(tokenWeight));\n      }\n\n      if (amountLentToken){\n        totalAmountLent = totalAmountLent.plus(amountLentToken);\n      }\n\n      // console.log(token,amountLentToken.toFixed(),tokenEarnings.toFixed(),tokenBalanceConverted.toFixed());\n    });\n\n    if (totalAmountLent.gt(0)){\n      totalEarningsPerc = totalEarnings.div(totalAmountLent).times(100);\n    }\n\n    portfolio.avgAPY = avgAPY;\n    portfolio.totalEarnings = totalEarnings;\n    portfolio.totalAmountLent = totalAmountLent;\n    portfolio.totalEarningsPerc = totalEarningsPerc;\n\n    // debugger;\n\n    return portfolio;\n  }\n  getCurrentWeb3 = () => {\n    const requiredNetwork = this.getRequiredNetwork();\n    const networkConfig = this.getGlobalConfig(['network','availableNetworks',requiredNetwork.id]);\n    const provider = networkConfig ? networkConfig.provider : 'infura';\n    const web3RpcKey = this.getGlobalConfig(['network','providers',provider,'key']);\n    const web3Rpc = this.getGlobalConfig(['network','providers',provider,'rpc',requiredNetwork.id])+web3RpcKey;\n\n    let currentWeb3 = null;\n    if (window.ethereum) {\n      currentWeb3 = new Web3(window.ethereum);\n    } else if (window.web3) {\n      currentWeb3 = new Web3(window.web3);\n    } else {\n      currentWeb3 = new Web3(new Web3.providers.HttpProvider(web3Rpc));\n    }\n\n    return currentWeb3;\n  }\n  getCurveAvgSlippage = async (enabledTokens=[],account=null,fixDecimals=true) => {\n    account = account ? account : this.props.account;\n\n    if (!account){\n      return [];\n    }\n\n    const availableTokens = this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    let processedTxs = {};\n    const processedHashes = {};\n    let curveTokensBalance = this.BNify(0);\n    const curveTxs = await this.getCurveTxs(account,0,'latest',enabledTokens);\n\n    if (curveTxs && curveTxs.length){\n\n      curveTxs.forEach((tx,index) => {\n\n        // Skip transactions with no hash\n        if (!tx.hash || !tx.curveTokens || !tx.curveTokenPrice){\n          return false;\n        }\n\n        const tokenAmount = this.BNify(tx.tokenAmount);\n        let curveTokens = this.BNify(tx.curveTokens);\n        const curveTokenPrice = this.BNify(tx.curveTokenPrice);\n\n        switch (tx.action){\n          case 'CurveIn':\n          case 'CurveZapIn':\n          case 'CurveDepositIn':\n          case 'CurveTransferIn':\n            if (tx.action === 'CurveTransferIn'){\n              if (index>0 && curveTokensBalance.gt(0)){\n                return;\n              }\n            }\n\n            if (!processedTxs[tx.hash]){\n              processedTxs[tx.hash] = {\n                price:null,\n                received:null,\n                slippage:null,\n                deposited:this.BNify(0),\n              };\n            }\n\n            processedTxs[tx.hash].deposited = processedTxs[tx.hash].deposited.plus(tokenAmount);\n            if (processedTxs[tx.hash].received === null){\n              processedTxs[tx.hash].price = curveTokenPrice;\n              processedTxs[tx.hash].received = curveTokens.times(curveTokenPrice);\n            }\n\n            // this.customLog('getCurveAvgSlippage',tx.action,tx.hash,tx.blockNumber,curveTokens.toFixed(6),curveTokenPrice.toFixed(6),processedTxs[tx.hash].deposited.toFixed(6),processedTxs[tx.hash].received.toFixed(6));\n          break;\n          case 'CurveOut':\n          case 'CurveZapOut':\n          case 'CurveDepositOut':\n            curveTokens = curveTokens.times(this.BNify(-1));\n          break;\n          default:\n          break;\n        }\n\n        // Update curveTokens balance\n        if (!processedHashes[tx.hash]){\n          curveTokensBalance = curveTokensBalance.plus(curveTokens);\n          if (curveTokensBalance.lte(0)){\n            curveTokensBalance = this.BNify(0);\n\n            // Reset processed transactions\n            // processedTxs = {};\n          }\n          processedHashes[tx.hash] = true;\n        }\n      });\n    }\n\n    // this.customLog('processedTxs',processedTxs);\n\n    let avgSlippage = this.BNify(0);\n    let totalDeposited = this.BNify(0);\n    Object.values(processedTxs).forEach( tx => {\n      const slippage = tx.received.div(tx.deposited).minus(1);\n      avgSlippage = avgSlippage.plus(slippage.times(tx.deposited));\n      totalDeposited = totalDeposited.plus(tx.deposited);\n    });\n\n    avgSlippage = avgSlippage.div(totalDeposited).times(-1);\n\n    // debugger;\n    // this.customLog('avgSlippage',avgSlippage.toString());\n\n    return avgSlippage;\n  }\n  getCurveAvgBuyPrice = async (enabledTokens=[],account=null) => {\n    account = account ? account : this.props.account;\n\n    if (!account){\n      return [];\n    }\n\n    const availableTokens = this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    const processedTxs = {};\n    let avgBuyPrice = this.BNify(0);\n    let curveTokensBalance = this.BNify(0);\n    const curveTxs = await this.getCurveTxs(account,0,'latest',enabledTokens);\n\n    // this.customLog('curveTxs',curveTxs);\n\n    if (curveTxs && curveTxs.length){\n\n      curveTxs.forEach((tx,index) => {\n\n        if (!processedTxs[tx.hash]){\n          processedTxs[tx.hash] = [];\n        }\n\n        if (processedTxs[tx.hash].includes(tx.action)){\n          return;\n        }\n\n        // Skip transactions with no hash\n        if (!tx.hash || !tx.curveTokens || !tx.curveTokenPrice){\n          return false;\n        }\n\n        const prevAvgBuyPrice = avgBuyPrice;\n        let curveTokens = this.BNify(tx.curveTokens);\n        const curveTokenPrice = this.BNify(tx.curveTokenPrice);\n\n        // Deposited\n        switch (tx.action){\n          case 'CurveIn':\n          case 'CurveZapIn':\n          case 'CurveDepositIn':\n          case 'CurveTransferIn':\n            if (tx.action === 'CurveTransferIn'){\n              if (index>0 && curveTokensBalance.gt(0)){\n                return;\n              }\n            }\n            avgBuyPrice = curveTokens.times(curveTokenPrice).plus(prevAvgBuyPrice.times(curveTokensBalance)).div(curveTokensBalance.plus(curveTokens));\n          break;\n          case 'CurveOut':\n          case 'CurveZapOut':\n          case 'CurveDepositOut':\n          // case 'CurveTransferOut':\n            curveTokens = curveTokens.times(this.BNify(-1));\n          break;\n          default:\n          break;\n        }\n        \n        // Update curveTokens balance\n        curveTokensBalance = curveTokensBalance.plus(curveTokens);\n        if (curveTokensBalance.lte(0)){\n          avgBuyPrice = this.BNify(0);\n          curveTokensBalance = this.BNify(0);\n        }\n\n        processedTxs[tx.hash].push(tx.action);\n\n        // this.customLog('getCurveAvgBuyPrice',tx.action,tx.hash,tx.blockNumber,curveTokens.toString(),curveTokenPrice.toString(),curveTokensBalance.toString(),avgBuyPrice.toString());\n      });\n    }\n\n    // this.customLog('avgCurveBuyPrice',avgBuyPrice.toString());\n\n    return avgBuyPrice;\n  }\n  getAvgBuyPrice = async (enabledTokens=[],account) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens){\n      return [];\n    }\n\n    const output = {};\n    const etherscanTxs = await this.getEtherscanTxs(account,0,'latest',enabledTokens);\n\n    enabledTokens.forEach( selectedToken => {\n\n      output[selectedToken] = [];\n      let avgBuyPrice = this.BNify(0);\n\n      let idleTokensBalance= this.BNify(0);\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n\n      if (filteredTxs && filteredTxs.length){\n\n        filteredTxs.forEach((tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.idleTokens || !tx.tokenPrice){\n            return false;\n          }\n\n          const prevAvgBuyPrice = avgBuyPrice;\n          let idleTokens = this.BNify(tx.idleTokens);\n          const tokenPrice = this.BNify(tx.tokenPrice);\n\n          // Deposited\n          switch (tx.action){\n            case 'Deposit':\n            case 'Receive':\n            case 'Swap':\n            case 'Migrate':\n            case 'CurveOut':\n              avgBuyPrice = idleTokens.times(tokenPrice).plus(prevAvgBuyPrice.times(idleTokensBalance)).div(idleTokensBalance.plus(idleTokens));\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              idleTokens = idleTokens.times(this.BNify(-1));\n            break;\n            default:\n            break;\n          }\n\n          // Update idleTokens balance\n          idleTokensBalance = idleTokensBalance.plus(idleTokens);\n          if (idleTokensBalance.lte(0)){\n            avgBuyPrice = this.BNify(0);\n            idleTokensBalance = this.BNify(0);\n          }\n\n        });\n      }\n\n      // Add token Data\n      output[selectedToken] = avgBuyPrice;\n    });\n\n    return output;\n  }\n  getFirstDepositTx = async (enabledTokens=[],account) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens){\n      return [];\n    }\n\n    const etherscanTxs = await this.getEtherscanTxs(account,0,'latest',enabledTokens);\n\n    const deposits = {};\n\n    enabledTokens.forEach((selectedToken) => {\n      let amountLent = this.BNify(0);\n      let firstDepositTx = null;\n      deposits[selectedToken] = firstDepositTx;\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        filteredTxs.forEach((tx,index) => {\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.tokenAmount){\n            return false;\n          }\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n              amountLent = amountLent.plus(tx.tokenAmount);\n              if (!firstDepositTx){\n                firstDepositTx = tx;\n              }\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tx.tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.BNify(0);\n            firstDepositTx = null;\n          }\n        });\n      }\n\n      // Add token Data\n      deposits[selectedToken] = firstDepositTx;\n    });\n\n    return deposits;\n  }\n  getDashboardSectionUrl = (section) => {\n    return `${window.location.origin}/#${this.getGlobalConfig(['dashboard','baseRoute'])}/${section}`;\n  }\n  asyncTimeout = (ms) => {\n    return new Promise(resolve => setTimeout(resolve, ms));\n  }\n  getDepositTimestamp = async (enabledTokens=[],account) => {\n    const firstDepositTxs = await this.getFirstDepositTx(enabledTokens,account);\n    if (firstDepositTxs){\n      return Object.keys(firstDepositTxs).reduce( (acc,token) => {\n        if (firstDepositTxs[token]){\n          acc[token] = firstDepositTxs[token].timeStamp;\n        }\n        return acc;\n      },{});\n    }\n    return null;\n  }\n  getTrancheRewardTokensInfo = async (tokenConfig,trancheConfig) => {\n    const stakingRewards = await this.loadTrancheFieldRaw('stakingRewards',{},tokenConfig.protocol,tokenConfig.token,trancheConfig.tranche,tokenConfig,trancheConfig);\n    // console.log('getTrancheTokensDistribution',stakingRewards);\n    const tokensDistribution = {};\n    await this.asyncForEach(Object.keys(stakingRewards),async (token) => {\n      const eventFilters = {\n        from:tokenConfig.CDO.address,\n        to:trancheConfig.CDORewards.address\n      }\n      const transfers = await this.getContractEvents(token,'Transfer',{fromBlock: tokenConfig.blockNumber,toBlock:'latest',filter:eventFilters});\n\n      if (transfers && transfers.length>0){\n        const firstHarvest = transfers.length ? transfers[0] : null;\n        const latestHarvest = transfers[transfers.length-1];\n        const firstBlock = firstHarvest ? firstHarvest.blockNumber : tokenConfig.blockNumber;\n\n        const govTokenConfig = this.getGlobalConfig(['govTokens',token]);\n        const DAITokenConfig = {\n          address:this.getContractByName('DAI')._address\n        };\n        const [\n          prevBlockInfo,\n          lastBlockInfo,\n          conversionRate,\n          lastBlockPoolSize\n        ] = await Promise.all([\n          this.getBlockInfo(firstBlock),\n          this.getBlockInfo(latestHarvest.blockNumber),\n          this.getUniswapConversionRate(DAITokenConfig,govTokenConfig),\n          this.genericContractCallCached(tokenConfig.CDO.name,'getContractValue',[],{},latestHarvest.blockNumber)\n        ]);\n        if (prevBlockInfo && lastBlockInfo){\n          const poolSize = this.fixTokenDecimals(lastBlockPoolSize,tokenConfig.CDO.decimals);\n          const elapsedBlocks = latestHarvest.blockNumber-firstBlock;\n          const elapsedSeconds = lastBlockInfo.timestamp-prevBlockInfo.timestamp;\n\n          const lastAmount = this.fixTokenDecimals(latestHarvest.returnValues.value,govTokenConfig.decimals);\n          const totalAmount = transfers.reduce( (total,t) => {\n            total = total.plus(this.fixTokenDecimals(t.returnValues.value,govTokenConfig.decimals));\n            return total;\n          },this.BNify(0));\n\n          const tokensPerBlock = totalAmount.div(elapsedBlocks);\n          const tokensPerSecond = totalAmount.div(elapsedSeconds);\n          const tokensPerDay = tokensPerSecond.times(86400);\n          const tokensPerYear = tokensPerSecond.times(this.getGlobalConfig(['network','secondsPerYear']));\n          const convertedTokensPerYear = tokensPerYear.times(conversionRate);\n          const tokenApr = convertedTokensPerYear.div(poolSize);\n          const tokenApy = this.apr2apy(tokenApr);\n\n          tokensDistribution[token] = {\n            lastAmount,\n            totalAmount,\n            apr:tokenApr,\n            apy:tokenApy,\n            tokensPerDay,\n            tokensPerYear,\n            tokensPerBlock,\n            tokensPerSecond,\n            convertedTokensPerYear\n          };\n        }\n      }\n    });\n\n    // console.log('tokensDistribution',tokensDistribution);\n\n    return tokensDistribution;\n  }\n  getTrancheUserInfo = async (tokenConfig,trancheConfig,account) => {\n    account = account || this.props.account;\n    const cachedDataKey = `amountDepositedTranche_${tokenConfig.token}_${trancheConfig.token}_${account}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const defaultEventsConfig = {to:'to',from:'from',value:'value'};\n    const underlyingEventsConfig = this.getGlobalConfig(['events',tokenConfig.token,'fields']) || defaultEventsConfig;\n\n    const underlyingEventsFilters = {};\n    underlyingEventsFilters[underlyingEventsConfig.to] = [this.props.account,tokenConfig.CDO.address];\n    underlyingEventsFilters[underlyingEventsConfig.from] = [this.props.account,tokenConfig.CDO.address];\n\n    const [\n      underlying_transfers,\n      trancheToken_transfers\n    ] = await Promise.all([\n      this.getContractEvents(tokenConfig.token,'Transfer',{fromBlock: trancheConfig.blockNumber, toBlock:'latest',filter:underlyingEventsFilters}),\n      this.getContractEvents(trancheConfig.name,'Transfer',{fromBlock: trancheConfig.blockNumber, toBlock:'latest',filter:{from:['0x0000000000000000000000000000000000000000',this.props.account],to:['0x0000000000000000000000000000000000000000',this.props.account]}})\n    ]);\n\n    // console.log('getAmountDepositedTranche',trancheConfig.name,'underlying_transfers',underlying_transfers,'trancheToken_transfers',trancheToken_transfers);\n\n    const transactions = [];\n    let firstDepositTx = null;\n    let avgBuyPrice = this.BNify(0);\n    let amountDeposited = this.BNify(0);\n    let totalAmountDeposited = this.BNify(0);\n\n    await this.asyncForEach(trancheToken_transfers, async (trancheTokenTransferEvent) => {\n      const tokenTransferEvent = underlying_transfers.find( t => t.transactionHash.toLowerCase() === trancheTokenTransferEvent.transactionHash.toLowerCase() );\n\n      // Skip if no tranche token transfer event found\n      if (!tokenTransferEvent){\n        return;\n      }\n\n      const tokenAmount = this.fixTokenDecimals(tokenTransferEvent.returnValues[underlyingEventsConfig.value],tokenConfig.decimals);\n      const trancheTokenAmount = this.fixTokenDecimals(trancheTokenTransferEvent.returnValues.value,trancheConfig.decimals);\n\n      // console.log('tranchePrice',trancheConfig.token,tokenAmount.toFixed(),trancheTokenAmount.toFixed(),tranchePrice.toFixed());\n      const tranchePrice = tokenAmount.div(trancheTokenAmount);\n      const blockInfo = await this.getBlockInfo(tokenTransferEvent.blockNumber);\n      const hashKey = `${trancheConfig.token}_${tokenTransferEvent.transactionHash}`;\n      const protocolConfig = this.getGlobalConfig(['stats','protocols',tokenConfig.protocol]);\n      const protocolIcon = `images/protocols/${protocolConfig.icon || `${tokenConfig.protocol}.svg`}`;\n\n      const tx = {\n        hashKey,\n        action:null,\n        tokenAmount,\n        tranchePrice,\n        protocolIcon,\n        value:tokenAmount,\n        status:'Completed',\n        token:tokenConfig.token,\n        tranche:trancheConfig.tranche,\n        protocol:protocolConfig.label,\n        tokenSymbol:tokenConfig.token,\n        trancheTokens:trancheTokenAmount,\n        hash:tokenTransferEvent.transactionHash,\n        blockNumber:tokenTransferEvent.blockNumber,\n        timeStamp:blockInfo ? blockInfo.timestamp : null,\n      };\n\n      // Deposit\n      if (trancheTokenTransferEvent.returnValues.from.toLowerCase() === '0x0000000000000000000000000000000000000000'){\n        // Set first deposit tx\n        if (!firstDepositTx){\n          firstDepositTx = tx;\n        }\n        avgBuyPrice = avgBuyPrice.plus(tranchePrice.times(tokenAmount));\n        amountDeposited = amountDeposited.plus(tokenAmount);\n        totalAmountDeposited = totalAmountDeposited.plus(tokenAmount);\n\n        tx.action = 'Deposit';\n        // console.log('Deposit',trancheConfig.token,tokenAmount.toFixed(),amountDeposited.toFixed(),tranchePrice.toFixed(),avgBuyPrice.toFixed());\n      // Withdraw\n      } else if (trancheTokenTransferEvent.returnValues.to.toLowerCase() === '0x0000000000000000000000000000000000000000'){\n        tx.action = 'Withdraw';\n        amountDeposited = amountDeposited.minus(tokenAmount);\n        if (amountDeposited.lt(0)){\n          firstDepositTx = null;\n          avgBuyPrice = this.BNify(0);\n          amountDeposited = this.BNify(0);\n          totalAmountDeposited = this.BNify(0);\n        }\n        // console.log('Redeem',trancheConfig.token,tokenAmount.toFixed(),amountDeposited.toFixed(),avgBuyPrice.toFixed());\n      }\n\n      transactions.push(tx);\n    });\n\n    avgBuyPrice = avgBuyPrice.div(totalAmountDeposited);\n\n    // console.log(trancheConfig.token,'amountDeposited',amountDeposited.toFixed(),'avgBuyPrice',avgBuyPrice.toFixed(),'transactions',transactions);\n\n    return {\n      avgBuyPrice,\n      transactions,\n      firstDepositTx,\n      amountDeposited\n    }\n  }\n  getTrancheUserTransactions = async (tokenConfig,trancheConfig,account) => {\n    const trancheUserInfo = await this.getTrancheUserInfo(tokenConfig,trancheConfig,account);\n    if (trancheUserInfo){\n      return trancheUserInfo.transactions;\n    }\n    return null;\n  }\n  getTrancheFirstDepositTx = async (tokenConfig,trancheConfig,account) => {\n      const trancheUserInfo = await this.getTrancheUserInfo(tokenConfig,trancheConfig,account);\n      if (trancheUserInfo){\n        return trancheUserInfo.firstDepositTx;\n      }\n      return null;\n  }\n  getAmountDepositedTranche = async (tokenConfig,trancheConfig,account) => {\n    const trancheUserInfo = await this.getTrancheUserInfo(tokenConfig,trancheConfig,account);\n    if (trancheUserInfo){\n      return trancheUserInfo.amountDeposited;\n    }\n    return null;\n  }\n  getAmountDeposited = async (tokenConfig,account) => {\n    const cachedDataKey = `amountDeposited_${tokenConfig.idle.token}_${account}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let [tokenBalance,userAvgPrice] = await Promise.all([\n      this.getTokenBalance(tokenConfig.idle.token,account),\n      this.genericContractCallCached(tokenConfig.idle.token, 'userAvgPrices', [account])\n    ]);\n\n    if (tokenBalance && userAvgPrice){\n      userAvgPrice = this.fixTokenDecimals(userAvgPrice,tokenConfig.decimals);\n      const amountDeposited = tokenBalance.times(userAvgPrice);\n      return this.setCachedDataWithLocalStorage(cachedDataKey,amountDeposited);\n    }\n\n    return null;\n  }\n  getAmountLent = async (enabledTokens=[],account) => {\n\n    account = account || this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens){\n      return [];\n    }\n\n    const etherscanTxs = await this.getEtherscanTxs(account,0,'latest',enabledTokens,false);\n\n    const amountLents = {};\n\n    enabledTokens.forEach((selectedToken) => {\n      let amountLent = this.BNify(0);\n      amountLents[selectedToken] = amountLent;\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        filteredTxs.forEach((tx,index) => {\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.tokenAmount){\n            return false;\n          }\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n            case 'CurveOut':\n              amountLent = amountLent.plus(tx.tokenAmount);\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tx.tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.BNify(0);\n          }\n        });\n      }\n\n      // Add token Data\n      amountLents[selectedToken] = amountLent;\n    });\n\n    // debugger;\n\n    return amountLents;\n  }\n  getBaseToken = () => {\n    const networkConfig = this.getCurrentNetwork();\n    return networkConfig ? networkConfig.baseToken : this.getGlobalConfig(['baseToken']);\n  }\n  getCurrentNetwork = () => {\n    const networkId = this.getCurrentNetworkId();\n    const network = this.getGlobalConfig(['network','availableNetworks',networkId]);\n    network.id = networkId;\n    return network;\n  }\n  getRequiredNetwork = () => {\n    const networkId = this.getRequiredNetworkId();\n    const network = this.getGlobalConfig(['network','availableNetworks',networkId]);\n    network.id = networkId;\n    return network;\n  }\n  getRequiredNetworkId = () => {\n    const defaultNetwork = this.getGlobalConfig(['network','requiredNetwork']);\n    return this.props.network && this.props.network.required ? this.props.network.required.id || defaultNetwork : defaultNetwork;\n  }\n  getCurrentNetworkId = () => {\n    const defaultNetwork = this.getGlobalConfig(['network','requiredNetwork']);\n    return this.props.network && this.props.network.current ? this.props.network.current.id || defaultNetwork : defaultNetwork;\n  }\n  getPolygonBridgeTxs = async (account=false,enabledTokens=[]) => {\n\n    account = account ? account : this.props.account;\n\n    if (!account || !this.props.web3){\n      return [];\n    }\n\n    const cachedDataKey = `polygonBridgeTxs_${account}_${JSON.stringify(enabledTokens)}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n\n    account = account.toLowerCase();\n\n    let txs = [];\n    const currentNetwork = this.getCurrentNetwork();\n    const covalentInfo = this.getGlobalConfig(['network','providers','covalent']);\n    const etherscanInfo = this.getGlobalConfig(['network','providers','etherscan']);\n    const stateSenderConfig = this.getGlobalConfig(['tools','polygonBridge','props','contracts','StateSender']);\n    const erc20PredicateConfig = this.getGlobalConfig(['tools','polygonBridge','props','contracts','ERC20Predicate']);\n    const etherPredicateConfig = this.getGlobalConfig(['tools','polygonBridge','props','contracts','EtherPredicate']);\n    const depositManagerConfig = this.getGlobalConfig(['tools','polygonBridge','props','contracts','DepositManager']);\n    const rootChainManagerConfig = this.getGlobalConfig(['tools','polygonBridge','props','contracts','RootChainManager']);\n\n    const currentNetworkId = this.getRequiredNetworkId();\n    const polygonNetworkId = currentNetwork.provider === 'polygon' ? currentNetworkId : this.getGlobalConfig(['network','providers','polygon','networkPairs',currentNetworkId]);\n    // Check if covalent is enabled for the required network\n    if (covalentInfo.enabled && covalentInfo.endpoints[polygonNetworkId]){\n      const covalentApiUrl = covalentInfo.endpoints[polygonNetworkId];\n      const polygonAvailableTokens = this.getGlobalConfig(['tools','polygonBridge','props','availableTokens']);\n      const polygonEndpoint = `${covalentApiUrl}address/${account}/transactions_v2/?block-signed-at-asc=true&skip=0&key=${covalentInfo.key}`;\n\n      const ethereumNetworkId = this.getGlobalConfig(['network','providers','polygon','networkPairs',polygonNetworkId]);\n      const etherscanApiUrl = etherscanInfo.endpoints[ethereumNetworkId];\n      const etherscanEndpoint = `${etherscanApiUrl}?module=account&action=tokentx&address=${this.props.account}&sort=desc`;\n      const etherscanTxlistEndpoint =`${etherscanApiUrl}?module=account&action=txlist&address=${this.props.account}&sort=desc`;\n      const etherscanTxlistInternalEndpoint =`${etherscanApiUrl}?module=account&action=txlistinternal&address=${this.props.account}&sort=desc`;\n\n      const [\n        last_state_id,\n        polygonTxs,\n        etherscanTxs,\n        etherscanTxlist,\n        etherscanTxlistInternal\n      ] = await Promise.all([\n        this.getPolygonCurrentLastStateId(),\n        this.makeCachedRequest(polygonEndpoint,120),\n        this.makeEtherscanApiRequest(etherscanEndpoint,etherscanInfo.keys,120),\n        this.makeEtherscanApiRequest(etherscanTxlistEndpoint,etherscanInfo.keys,120),\n        this.makeEtherscanApiRequest(etherscanTxlistInternalEndpoint,etherscanInfo.keys,120),\n      ]);\n\n      // console.log('polygonTxs',polygonTxs);\n      // console.log('etherscanTxs',etherscanTxs);\n      // console.log('etherscanTxlist',etherscanTxlist);\n      // console.log('etherscanTxlistInternal',etherscanTxlistInternal);\n\n      const rootTokensAddresses = [];\n      const childTokensAddresses = [];\n      Object.values(polygonAvailableTokens).forEach( tokenConfig => {\n        if (tokenConfig.childToken){\n          childTokensAddresses.push(tokenConfig.childToken.address.toLowerCase())\n        }\n        if (tokenConfig.rootToken){\n          rootTokensAddresses.push(tokenConfig.rootToken.address.toLowerCase())\n        }\n      });\n\n      let depositTxs = [];\n\n      if (etherscanTxs && etherscanTxs.data && etherscanTxs.data.result && typeof etherscanTxs.data.result.filter === 'function'){\n        depositTxs = etherscanTxs.data.result.filter( tx => rootTokensAddresses.includes(tx.contractAddress.toLowerCase()) &&  [erc20PredicateConfig.address.toLowerCase(),depositManagerConfig.address.toLowerCase()].includes(tx.to.toLowerCase())  && tx.from.toLowerCase() === this.props.account.toLowerCase() );\n        await this.asyncForEach(depositTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find( t => t.name === tx.tokenSymbol );\n          const ethereumTx = {...tx};\n          ethereumTx.action = 'Deposit';\n          ethereumTx.networkId = ethereumNetworkId;\n          ethereumTx.bridgeType = tokenConfig.bridgeType;\n          ethereumTx.value = this.fixTokenDecimals(ethereumTx.value,tokenConfig.decimals);\n          const txReceipt = await this.getTxReceipt(ethereumTx.hash,this.props.web3Infura);\n          const stateSenderLog = txReceipt ? txReceipt.logs.find( log => log.address.toLowerCase() === stateSenderConfig.address.toLowerCase() ) : null;\n          const tx_state_id = stateSenderLog ? parseInt(this.props.web3.utils.hexToNumberString(stateSenderLog.topics[1])) : null;\n          ethereumTx.included = last_state_id && tx_state_id ? last_state_id>=tx_state_id : false;\n          txs.push(ethereumTx);\n        });\n        const exitTxs = etherscanTxs.data.result.filter( tx => rootTokensAddresses.includes(tx.contractAddress.toLowerCase()) && [erc20PredicateConfig.address.toLowerCase(),depositManagerConfig.address.toLowerCase()].includes(tx.from.toLowerCase()) && tx.to.toLowerCase() === this.props.account.toLowerCase() );\n        await this.asyncForEach(exitTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find( t => t.name === tx.tokenSymbol );\n          const ethereumTx = {...tx};\n          ethereumTx.action = 'Exit';\n          ethereumTx.included = true;\n          ethereumTx.networkId = ethereumNetworkId;\n          ethereumTx.bridgeType = tokenConfig.bridgeType;\n          ethereumTx.value = this.fixTokenDecimals(ethereumTx.value,tokenConfig.decimals);\n          txs.push(ethereumTx);\n        });\n      }\n\n      const depositTxsHashes = depositTxs.map( tx => tx.hash.toLowerCase() );\n      const depositETHInputRexExp = new RegExp(this.props.account.replace('0x','').toLowerCase()+'$');\n      if (etherscanTxlist && etherscanTxlist.data && etherscanTxlist.data.result && typeof etherscanTxlist.data.result.filter === 'function'){\n        const depositETHTxs = etherscanTxlist.data.result.filter( tx => !depositTxsHashes.includes(tx.hash.toLowerCase()) && tx.to.toLowerCase() === rootChainManagerConfig.address.toLowerCase() && tx.input.toLowerCase().match(depositETHInputRexExp) && tx.from.toLowerCase() === this.props.account.toLowerCase() );\n        await this.asyncForEach(depositETHTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find( t => t.name === 'WETH' );\n          const ethereumTx = {...tx};\n          ethereumTx.action = 'Deposit';\n          ethereumTx.tokenSymbol = 'WETH';\n          ethereumTx.networkId = ethereumNetworkId;\n          ethereumTx.bridgeType = tokenConfig.bridgeType;\n          ethereumTx.value = this.fixTokenDecimals(ethereumTx.value,tokenConfig.decimals);\n          const txReceipt = await this.getTxReceipt(ethereumTx.hash,this.props.web3Infura);\n          const stateSenderLog = txReceipt ? txReceipt.logs.find( log => log.address.toLowerCase() === stateSenderConfig.address.toLowerCase() ) : null;\n          const tx_state_id = stateSenderLog ? parseInt(this.props.web3.utils.hexToNumberString(stateSenderLog.topics[1])) : null;\n          ethereumTx.included = last_state_id && tx_state_id ? last_state_id>=tx_state_id : false;\n          txs.push(ethereumTx);\n        });\n      }\n\n      if (etherscanTxlistInternal && etherscanTxlistInternal.data && etherscanTxlistInternal.data.result && typeof etherscanTxlistInternal.data.result.filter === 'function'){\n        const exitETHTxs = etherscanTxlistInternal.data.result.filter( tx => !depositTxsHashes.includes(tx.hash.toLowerCase()) && tx.from.toLowerCase() === etherPredicateConfig.address.toLowerCase() && !tx.input.toLowerCase().match(depositETHInputRexExp) && tx.to.toLowerCase() === this.props.account.toLowerCase() );\n        await this.asyncForEach(exitETHTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find( t => t.name === 'WETH' );\n          const ethereumTx = {...tx};\n          ethereumTx.action = 'Exit';\n          ethereumTx.included = true;\n          ethereumTx.tokenSymbol = 'WETH';\n          ethereumTx.networkId = ethereumNetworkId;\n          ethereumTx.timeStamp = parseInt(tx.timeStamp);\n          ethereumTx.bridgeType = tokenConfig.bridgeType;\n          ethereumTx.value = this.fixTokenDecimals(ethereumTx.value,tokenConfig.decimals);\n          txs.push(ethereumTx);\n        });\n      }\n\n      if (polygonTxs && polygonTxs.data && polygonTxs.data.data && polygonTxs.data.data.items && Object.values(polygonTxs.data.data.items).length){\n        const filteredTxs = polygonTxs.data.data.items.filter( tx => childTokensAddresses.includes(tx.to_address.toLowerCase()) );\n        // console.log('polygonTxs',polygonTxs);\n        await this.asyncForEach(filteredTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find( tokenConfig => (tokenConfig.childToken && tokenConfig.childToken.address.toLowerCase() === tx.to_address.toLowerCase()) );\n          if (!tokenConfig || !tokenConfig.childToken){\n            return;\n          }\n          tokenConfig.address = tokenConfig.childToken.address;\n          if (!enabledTokens || !enabledTokens.length || enabledTokens.includes(tokenConfig.token)){\n            const polygonTx = this.normalizePolygonTx(tx,tokenConfig);\n            // console.log('polygonTx',polygonTx);\n            if (polygonTx.action === 'Withdraw'){\n              const tx_state_id = parseInt(this.props.web3.utils.hexToNumberString(polygonTx.logs[polygonTx.logs.length-1].topics[1]));\n              polygonTx.exited = false;\n              polygonTx.networkId = polygonNetworkId;\n              polygonTx.bridgeType = tokenConfig.bridgeType;\n              polygonTx.included = last_state_id && tx_state_id ? last_state_id>=tx_state_id : false;\n              try {\n                await this.props.maticPOSClient.exitERC20(polygonTx.hash, {from: this.props.account, encodeAbi:true});\n              } catch (error){\n                if (error.toString().match('EXIT_ALREADY_PROCESSED')){\n                  polygonTx.exited = true;\n                }\n              }\n              txs.push(polygonTx);\n            }\n          }\n        });\n      }\n    }\n\n    txs = txs.sort((a,b) => (parseInt(a.timeStamp) < parseInt(b.timeStamp) ? 1 : -1));\n\n    // console.log('getPolygonBridgeTxs',cachedDataKey,txs);\n\n    return this.setCachedData(cachedDataKey,txs,120);\n  }\n  getPolygonBaseTxs = async (account=false,enabledTokens=[],debug=false) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length){\n      return [];\n    }\n\n    account = account.toLowerCase();\n\n    let results = [];\n    let baseTxs = null;\n    let baseEndpoint = null;\n    const requiredNetwork = this.getRequiredNetworkId();\n    // const selectedStrategy = this.props.selectedStrategy;\n    const covalentInfo = this.getGlobalConfig(['network','providers','covalent']);\n\n    // Check if covalent is enabled for the required network\n    if (covalentInfo.enabled && covalentInfo.endpoints[requiredNetwork]){\n      const covalentApiUrl = covalentInfo.endpoints[requiredNetwork];\n\n      // Get base endpoint cached transactions\n      baseEndpoint = `${covalentApiUrl}address/${account}/transactions_v2/?block-signed-at-asc=true&key=${covalentInfo.key}`;\n      baseTxs = this.getCachedRequest(baseEndpoint);\n\n      // Check if the latest blockNumber is actually the latest one\n      if (baseTxs && baseTxs.data && baseTxs.data.data && baseTxs.data.data.items && Object.values(baseTxs.data.data.items).length){\n\n        const cachedRows = Object.values(baseTxs.data.data.items).length;\n        const lastCachedTx = Object.values(baseTxs.data.data.items).pop();\n        const lastCachedBlockNumber = lastCachedTx && lastCachedTx.block_height ? parseInt(lastCachedTx.block_height)+1 : 0;\n\n        const covalentEndpointLastBlock = `${covalentApiUrl}address/${account}/transactions_v2/?block-signed-at-asc=true&skip=${cachedRows}`;\n        let latestTxs = await this.makeCachedRequest(covalentEndpointLastBlock,15);\n\n        if (latestTxs && latestTxs.data.data.items && latestTxs.data.data.items.length){\n          latestTxs = await this.filterPolygonTxs(latestTxs.data.data.items,enabledTokens);\n          // latestTxs = await this.filterEthereumTxs(latestTxs,enabledTokens,true,false);\n\n          if (latestTxs && Object.values(latestTxs).length){\n\n            const latestBlockNumbers = Object.values(latestTxs).map( lastTx => (parseInt(lastTx.block_height)) );\n            const lastRealBlockNumber = Math.max(...latestBlockNumbers);\n\n            // If real tx blockNumber differs from last blockNumber\n            if (lastRealBlockNumber>=lastCachedBlockNumber){\n              // Merge latest Txs with baseTxs\n              Object.values(latestTxs).forEach((tx) => {\n                const txFound = Object.keys(baseTxs.data.data.items).includes(tx.tx_hash);\n                if (!txFound){\n                  baseTxs.data.data.items[tx.tx_hash] = tx;\n                }\n              });\n\n              // Save covalent txs\n              this.saveFetchedTransactions(baseEndpoint,baseTxs.data.data.items);\n            }\n          }\n        }\n      } else {\n        baseTxs = null;\n      }\n\n      let txs = baseTxs;\n\n      if (debug){\n        console.log('DEBUG - txs',txs);\n      }\n\n      if (!txs){\n        // Make request\n        txs = await this.makeRequest(baseEndpoint);\n\n        // console.log('makeRequest 1',account,baseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n\n        if (!txs || !txs.data || parseInt(txs.data.status)===0){\n          let requestCount = 0;\n          let requestStatus = false;\n          do {\n            await this.asyncTimeout(500);\n            txs = await this.makeRequest(baseEndpoint);\n            requestCount++;\n            requestStatus = txs && txs.data ? parseInt(txs.data.status) : false;\n            // console.log('makeRequest '+(requestCount+1),account,baseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n          } while (requestCount<5 && !requestStatus);\n        }\n\n        // Cache request\n        if (txs && txs.data && parseInt(txs.data.status)>0){\n          const timestamp = parseInt(Date.now()/1000);\n          const cachedRequests_polygon = this.getCachedDataWithLocalStorage('cachedRequests_polygon',{});\n          cachedRequests_polygon[baseEndpoint] = {\n            data:txs,\n            timestamp\n          };\n          this.setCachedDataWithLocalStorage('cachedRequests_polygon',cachedRequests_polygon);\n        }\n      }\n\n      if (txs && txs.data && txs.data.data && txs.data.data.items){\n        results = txs.data.data.items;\n      } else {\n        return [];\n      }\n    }\n\n    return {\n      results,\n      baseTxs,\n      baseEndpoint\n    };\n  }\n  getEtherscanBaseTxs = async (account=false,firstBlockNumber=0,endBlockNumber='latest',enabledTokens=[],debug=false) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length){\n      return [];\n    }\n\n    account = account.toLowerCase();\n\n    const selectedStrategy = this.props.selectedStrategy;\n\n    // Check if firstBlockNumber is less that firstIdleBlockNumber\n    const firstIdleBlockNumber = this.getGlobalConfig(['network','firstBlockNumber']);\n    firstBlockNumber = Math.max(firstIdleBlockNumber,firstBlockNumber);\n\n    const requiredNetwork = this.getRequiredNetworkId();\n    const etherscanInfo = this.getGlobalConfig(['network','providers','etherscan']);\n\n    let results = [];\n    let baseTxs = null;\n    let baseEndpoint = null;\n\n    // Check if etherscan is enabled for the required network\n    if (etherscanInfo.enabled && etherscanInfo.endpoints[requiredNetwork]){\n      const etherscanApiUrl = etherscanInfo.endpoints[requiredNetwork];\n\n      // Get base endpoint cached transactions\n      baseEndpoint = `${etherscanApiUrl}?strategy=${selectedStrategy}&apikey=${etherscanInfo.keys[0]}&module=account&action=tokentx&address=${account}&startblock=${firstIdleBlockNumber}&endblock=${endBlockNumber}&sort=asc`;\n      baseTxs = this.getCachedRequest(baseEndpoint);\n\n      if (debug){\n        console.log('DEBUG - CACHED - baseTxs',baseTxs);\n      }\n\n      // Check if the latest blockNumber is actually the latest one\n      if (baseTxs && baseTxs.data.result && Object.values(baseTxs.data.result).length){\n\n        const lastCachedTx = Object.values(baseTxs.data.result).pop();\n        const lastCachedBlockNumber = lastCachedTx && lastCachedTx.blockNumber ? parseInt(lastCachedTx.blockNumber)+1 : firstBlockNumber;\n\n        const etherscanEndpointLastBlock = `${etherscanApiUrl}?strategy=${selectedStrategy}&module=account&action=tokentx&address=${account}&startblock=${lastCachedBlockNumber}&endblock=${endBlockNumber}&sort=asc`;\n        // let latestTxs = await this.makeCachedRequest(etherscanEndpointLastBlock,15);\n        let latestTxs = await this.makeEtherscanApiRequest(etherscanEndpointLastBlock,etherscanInfo.keys,15);        \n\n        if (latestTxs && latestTxs.data.result && latestTxs.data.result.length){\n          \n          latestTxs = await this.filterEthereumTxs(latestTxs.data.result,enabledTokens,true,false);\n\n          if (latestTxs && Object.values(latestTxs).length){\n\n            const latestBlockNumbers = Object.values(latestTxs).map( lastTx => (parseInt(lastTx.blockNumber)) );\n            const lastRealBlockNumber = Math.max(...latestBlockNumbers);\n\n            // If real tx blockNumber differs from last blockNumber\n            if (lastRealBlockNumber>=lastCachedBlockNumber){\n              // Merge latest Txs with baseTxs\n              Object.values(latestTxs).forEach((tx) => {\n                const txFound = Object.keys(baseTxs.data.result).includes(tx.hashKey);\n                if (!txFound){\n                  baseTxs.data.result[tx.hashKey] = tx;\n                }\n              });\n\n              // Save etherscan txs\n              this.saveFetchedTransactions(baseEndpoint,baseTxs.data.result);\n            }\n          }\n        }\n      } else {\n        baseTxs = null;\n      }\n\n      let txs = baseTxs;\n\n      if (debug){\n        console.log('DEBUG - txs',txs);\n      }\n\n      if (!txs){\n        // Make request\n        txs = await this.makeRequest(baseEndpoint);\n\n        // console.log('makeRequest 1',account,baseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n\n        if (!txs || !txs.data || parseInt(txs.data.status)===0){\n          let requestCount = 0;\n          let requestStatus = false;\n          do {\n            await this.asyncTimeout(500);\n            txs = await this.makeRequest(baseEndpoint);\n            requestCount++;\n            requestStatus = txs && txs.data ? parseInt(txs.data.status) : false;\n            // console.log('makeRequest '+(requestCount+1),account,baseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n          } while (requestCount<5 && !requestStatus);\n        }\n\n        // Cache request\n        if (txs && txs.data && parseInt(txs.data.status)>0){\n          const timestamp = parseInt(Date.now()/1000);\n          const cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n          cachedRequests[baseEndpoint] = {\n            data:txs,\n            timestamp\n          };\n          this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n        }\n      }\n\n      if (txs && txs.data && txs.data.result){\n        results = txs.data.result;\n      } else {\n        return [];\n      }\n    }\n\n    return {\n      results,\n      baseTxs,\n      baseEndpoint\n    };\n  }\n  getCurveTxs = async (account=false,firstBlockNumber=0,endBlockNumber='latest',enabledTokens=[]) => {\n    const results = await this.getEtherscanTxs(account,firstBlockNumber,endBlockNumber,enabledTokens);\n    // results = results ? Object.values(results) : [];\n    return this.filterCurveTxs(results,enabledTokens);\n  }\n  saveFetchedTransactions = (endpoint,txs) => {\n    const txsToStore = {};\n    Object.keys(txs).forEach(txHash => {\n      const tx = txs[txHash];\n      if (tx.blockNumber && (!tx.status || tx.status.toLowerCase() !== 'pending')){\n        txsToStore[txHash] = tx;\n      }\n    });\n\n    // Save new cached data\n    const cachedRequest = {\n      data:{\n        result:txsToStore\n      }\n    };\n    this.saveCachedRequest(endpoint,false,cachedRequest);\n  }\n  getEtherscanTxs = async (account=false,firstBlockNumber=0,endBlockNumber='latest',enabledTokens=[],debug=false) => {\n\n    let resultData = null;\n    const currentNetwork = this.getCurrentNetwork();\n\n    switch (currentNetwork.explorer){\n      case 'polygon':\n        resultData = await this.getPolygonBaseTxs(account,enabledTokens,debug);\n      break;\n      case 'etherscan':\n      default:\n        resultData = await this.getEtherscanBaseTxs(account,firstBlockNumber,endBlockNumber,enabledTokens,debug);\n      break;\n    }\n\n    // Initialize prevTxs\n    let txs = {};\n\n    if (resultData){\n      let {\n        results,\n        baseTxs,\n        baseEndpoint\n      } = resultData;\n\n      if (baseTxs){\n        // Filter txs for token\n        txs = await this.processStoredTxs(results,enabledTokens);\n      } else {\n        const allAvailableTokens = Object.keys(this.props.availableTokens);\n        // Save base endpoint with all available tokens\n        switch (currentNetwork.explorer){\n          case 'polygon':\n            txs = await this.filterPolygonTxs(results,allAvailableTokens);\n            // console.log('polygon txs',results,allAvailableTokens,txs);\n          break;\n          case 'etherscan':\n          default:\n            txs = await this.filterEthereumTxs(results,allAvailableTokens);\n          break;\n        }\n\n        // Store filtered txs\n        if (txs && Object.keys(txs).length){\n          this.saveFetchedTransactions(baseEndpoint,txs);\n        }\n      }\n    }\n\n    // console.log('DEBUG - TXS -',txs);\n\n    return Object\n            .values(txs)\n            .filter(tx => (tx.token && enabledTokens.includes(tx.token.toUpperCase())))\n            .sort((a,b) => (a.timeStamp < b.timeStamp ? -1 : 1));\n  }\n  getPolygonCurrentLastStateId = async () => {\n    const contractInstance = new this.props.web3Polygon.eth.Contract(\n      [\n        {\n          constant: true,\n          inputs: [],\n          name: \"lastStateId\",\n          outputs: [\n            {\n              internalType: \"uint256\",\n              name: \"\",\n              type: \"uint256\",\n            },\n          ],\n          payable: false,\n          stateMutability: \"view\",\n          type: \"function\",\n        },\n      ],\n      \"0x0000000000000000000000000000000000001001\"\n    );\n\n    return parseInt(await contractInstance.methods.lastStateId().call());\n  }\n  checkPolygonTransactionIncluded = async (txHash) => {\n    const [\n      last_state_id,\n      tx,\n    ] = await Promise.all([\n      this.getPolygonCurrentLastStateId(),\n      this.props.web3Polygon.eth.getTransactionReceipt(txHash)\n    ]);\n\n    const tx_state_id = tx && tx.logs && tx.logs.length ? this.props.web3.utils.hexToNumberString(tx.logs[tx.logs.length-1].topics[1]) : null;\n\n    return tx_state_id ? parseInt(last_state_id) >= parseInt(tx_state_id) : null;\n  }\n  filterCurveTxs = async (results,enabledTokens=[]) => {\n\n    if (!results || !results.length || typeof results.forEach !== 'function'){\n      return [];\n    }\n\n    const availableTokens = this.props.availableTokens ? this.props.availableTokens : this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    const curveTxs = results.filter( tx => (enabledTokens.includes(tx.token) && ['CurveIn','CurveOut','CurveZapIn','CurveZapOut','CurveTransferIn','CurveTransferOut','CurveDepositIn','CurveDepositOut'].includes(tx.action)) );\n\n    if (curveTxs.length){\n      curveTxs.sort((a,b) => (a.timeStamp < b.timeStamp ? -1 : 1));\n    }\n\n    return curveTxs;\n  }\n  normalizePolygonTx = (tx,tokenConfig=null) => {\n    tokenConfig = tokenConfig || Object.values(this.props.availableTokens).find( tokenConfig => tokenConfig.idle.address.toLowerCase() === tx.to_address.toLowerCase() );\n    \n    const depositLogEvent = tx.log_events && tokenConfig && tokenConfig.idle ? tx.log_events.find( log => log.sender_address.toLowerCase() === tokenConfig.address.toLowerCase() && log.decoded.name === 'Transfer' && log.decoded.params.find(param=>param.name==='from').value.toLowerCase() === this.props.account.toLowerCase() && log.decoded.params.find(param=>param.name==='to').value.toLowerCase() === tokenConfig.idle.address.toLowerCase() ) : null;\n    const redeemLogEvent = tx.log_events && tokenConfig && tokenConfig.idle ? tx.log_events.find( log => log.sender_address.toLowerCase() === tokenConfig.address.toLowerCase() && log.decoded.name === 'Transfer' && log.decoded.params.find(param=>param.name==='to').value.toLowerCase() === this.props.account.toLowerCase() && log.decoded.params.find(param=>param.name==='from').value.toLowerCase() === tokenConfig.idle.address.toLowerCase() ) : null;\n    const withdrawLogEvent = tx.log_events && tokenConfig && tokenConfig.address ? tx.log_events.find( log => log.sender_address.toLowerCase() === tokenConfig.address.toLowerCase() && log.decoded.name === 'Transfer' && log.decoded.params.find(param=>param.name==='from').value.toLowerCase() === this.props.account.toLowerCase() && log.decoded.params.find(param=>param.name==='to').value.toLowerCase() === '0x0000000000000000000000000000000000000000' ) : null;\n\n    const tokenDecimal = tokenConfig.decimals;\n    const tokenSymbol = tokenConfig.name || tokenConfig.token;\n    const hashKey = `${tx.tx_hash}_${tokenSymbol}`;\n    const idleToken = tokenConfig.idle ? tokenConfig.idle.token : null;\n    const action = depositLogEvent ? 'Deposit' : (redeemLogEvent ? 'Redeem' : (withdrawLogEvent ? 'Withdraw' : null));\n    const timeStamp = parseInt(this.strToMoment(tx.block_signed_at)._d.getTime()/1000);\n\n    let logEvent = null;\n    switch (action){\n      case 'Deposit':\n        logEvent = depositLogEvent;\n      break;\n      case 'Redeem':\n        logEvent = redeemLogEvent;\n      break;\n      case 'Withdraw':\n        logEvent = withdrawLogEvent;\n      break;\n      default:\n      break;\n    }\n\n    const logs = tx.log_events ? tx.log_events.map( log => ({\n      topics:log.raw_log_topics\n    })) : [];\n    const value = logEvent ? this.fixTokenDecimals(logEvent.decoded.params.find( param => param.name==='value' ).value,tokenDecimal) : this.fixTokenDecimals(tx.value,tokenDecimal);\n\n    // if (tokenSymbol === 'USDC'){\n    //   debugger;\n    // }\n\n    return {\n      logs,\n      value,\n      action,\n      hashKey,\n      timeStamp,\n      idleToken,\n      tokenSymbol,\n      tokenDecimal,\n      hash:tx.tx_hash,\n      to:tx.to_address,\n      status:'Completed',\n      from:tx.from_address,\n      gasUsed:tx.gas_spent,\n      gasPrice:tx.gas_price,\n      token:tokenConfig.token,\n      contractAddress:tokenConfig.address,\n      blockNumber:tx.log_events[0].block_height\n    };\n  }\n  filterPolygonTxs = async (txs,enabledTokens,processTransactions=true) => {\n    const idleTokensAddresses = Object.values(this.props.availableTokens).map( tokenConfig => tokenConfig.idle.address.toLowerCase() );\n    const polygonTxs = txs ? txs.filter( tx => idleTokensAddresses.includes(tx.to_address.toLowerCase()) ).reduce( (output,tx) => {\n      const mappedTx = this.normalizePolygonTx(tx);\n      output[mappedTx.hashKey] = mappedTx;\n      return output;\n    },{}) : {};\n\n    return processTransactions ? await this.processTransactions(polygonTxs,enabledTokens) : polygonTxs;\n  }\n  filterEtherscanTxs = async (results,enabledTokens=[],processTxs=true,processStoredTxs=true) => {\n    return await this.filterEthereumTxs(results,enabledTokens,processTxs,processStoredTxs);\n  }\n  filterEthereumTxs = async (results,enabledTokens=[],processTxs=true,processStoredTxs=true) => {\n    if (!this.props.account || !results || !results.length || typeof results.forEach !== 'function'){\n      return [];\n    }\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let etherscanTxs = {};\n    let curveTransfersTxs = [];\n    let curveTransfersTxsToDelete = [];\n\n    // const idleTokensAddresses = Object.values(this.props.availableTokens).map( tokenConfig => (tokenConfig.idle.address) );\n    const curveZapContract = this.getGlobalConfig(['curve','zapContract']);\n    const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n    const curveSwapContract = this.getGlobalConfig(['curve','migrationContract']);\n    const curveDepositContract = this.getGlobalConfig(['curve','depositContract']);\n\n    // this.customLog('filterEtherscanTxs',enabledTokens,results);\n\n    enabledTokens.forEach(token => {\n      const tokenConfig = this.props.availableTokens[token];\n      const depositProxyContractInfo = this.getGlobalConfig(['contract','methods','deposit','proxyContract']);\n      const migrationContractAddr = tokenConfig.migration && tokenConfig.migration.migrationContract ? tokenConfig.migration.migrationContract.address : null;\n      const migrationContractOldAddrs = tokenConfig.migration && tokenConfig.migration.migrationContract && tokenConfig.migration.migrationContract.oldAddresses ? tokenConfig.migration.migrationContract.oldAddresses : [];\n      const tokenMigrationToolParams = this.getGlobalConfig(['tools','tokenMigration','props','migrationContract']);\n\n      const batchMigration = this.getGlobalConfig(['tools','batchMigration','props','availableTokens',tokenConfig.idle.token]);\n      const batchMigrationContractAddr = batchMigration && batchMigration.migrationContract ? batchMigration.migrationContract.address : null;\n\n      // const curveEnabled = this.getGlobalConfig(['curve','enabled']);\n      const curveTokenConfig = this.getGlobalConfig(['curve','availableTokens',tokenConfig.idle.token]);\n\n      results.forEach( tx => {\n        let tokenDecimals = tokenConfig.decimals;\n        const idleToken = tokenConfig.idle.token;\n        const internalTxs = results.filter(r => r.hash === tx.hash);\n        const isRightToken = internalTxs.length>1 && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase()).length>0;\n        const isSendTransferTx = internalTxs.length === 1 && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isReceiveTransferTx = internalTxs.length === 1 && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isBatchMigrationTx = batchMigrationContractAddr && tx.from.toLowerCase() === batchMigrationContractAddr.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase();\n\n        const isDepositInternalTx = isRightToken && internalTxs.find( iTx => iTx.from.toLowerCase() === this.props.account.toLowerCase() && (iTx.to.toLowerCase() === tokenConfig.idle.address.toLowerCase() || (depositProxyContractInfo && iTx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase() && internalTxs.filter(iTx2 => iTx2.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length>0 )) );\n        const isRedeemInternalTx = isRightToken && internalTxs.find( iTx => iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && internalTxs.filter(iTx2 => iTx2.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length && iTx.to.toLowerCase() === this.props.account.toLowerCase() );\n\n        const isMigrationTx = isBatchMigrationTx || (migrationContractAddr && (tx.from.toLowerCase() === migrationContractAddr.toLowerCase() || migrationContractOldAddrs.map((v) => { return v.toLowerCase(); }).includes(tx.from.toLowerCase()) ) && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase());\n        const isConversionTx = tokenMigrationToolParams && (tx.from.toLowerCase() === tokenMigrationToolParams.address.toLowerCase() || tokenMigrationToolParams.oldAddresses.map((v) => { return v.toLowerCase(); }).includes(tx.from.toLowerCase())) && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isDepositTx = isRightToken && !isMigrationTx && tx.from.toLowerCase() === this.props.account.toLowerCase() && (tx.to.toLowerCase() === tokenConfig.idle.address.toLowerCase() || (depositProxyContractInfo && tx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase() && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length>0 ));\n        const isRedeemTx = isRightToken && !isMigrationTx && !isDepositInternalTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length && tx.to.toLowerCase() === this.props.account.toLowerCase();\n        const isWithdrawTx = internalTxs.length>1 && internalTxs.filter(iTx => tokenConfig.protocols.map(p => p.address.toLowerCase()).includes(iTx.contractAddress.toLowerCase()) ).length>0 && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n\n        // const curveDepositTx = internalTxs.find( iTx => (iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && iTx.from.toLowerCase() === this.props.account.toLowerCase()) );\n        const idleTokenAddress = curveTokenConfig && curveTokenConfig.address ? curveTokenConfig.address : tokenConfig.idle.address;\n\n        // Check Curve\n        const curveTx = internalTxs.find( tx => (tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && (tx.to.toLowerCase() === this.props.account.toLowerCase() || tx.from.toLowerCase() === this.props.account.toLowerCase()) ) );\n        const isCurveTx = curveTx !== undefined;\n\n        const isCurveDepositTx = isCurveTx && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase() && tx.to.toLowerCase() === curveSwapContract.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveRedeemTx = isCurveTx && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveSwapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveDepositIn = isCurveTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.to.toLowerCase() === curveDepositContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveDepositOut = isCurveTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveDepositContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveZapIn = isCurveTx && tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveZapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveZapOut = isCurveTx && tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.to.toLowerCase() === curveZapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveTransferOut = tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && !isCurveZapOut && !isCurveRedeemTx && /*internalTxs[internalTxs.length-1] === tx &&*/ tx.from.toLowerCase() === this.props.account.toLowerCase();\n        const isCurveTransferIn = tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && !isCurveZapIn && !isCurveDepositTx && /*internalTxs[internalTxs.length-1] === tx &&*/ tx.to.toLowerCase() === this.props.account.toLowerCase();\n\n        const isSwapOutTx = !isCurveTx && !isSendTransferTx && !isWithdrawTx && !isRedeemInternalTx && !etherscanTxs[tx.hash] && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isSwapTx = !isCurveTx && !isReceiveTransferTx && !isConversionTx && !isDepositInternalTx && !etherscanTxs[tx.hash] && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n\n        // if (tx.hash.toLowerCase() === '0x599a2e7b0094b0a943ffb1d520cb47598dcf3764145c33824e3b032d91ccc489'.toLowerCase()){\n        //   debugger;\n        // }\n\n        if (isSendTransferTx || isReceiveTransferTx || isMigrationTx || isDepositTx || isRedeemTx || isSwapTx || isSwapOutTx || isWithdrawTx || isConversionTx || isCurveDepositTx || isCurveRedeemTx || isCurveZapIn || isCurveZapOut || isCurveTransferOut || isCurveTransferIn || isCurveDepositIn || isCurveDepositOut){\n\n          let action = null;\n          let hashKey = tx.hash;\n\n          if (isDepositTx){\n            action = 'Deposit';\n          } else if (isRedeemTx){\n            action = 'Redeem';\n          } else if (isMigrationTx || isConversionTx){\n            action = 'Migrate';\n          } else if (isSendTransferTx){\n            action = 'Send';\n          } else if (isReceiveTransferTx){\n            action = 'Receive';\n          } else if (isSwapTx){\n            action = 'Swap';\n          } else if (isSwapOutTx){\n            action = 'SwapOut';\n          } else if (isWithdrawTx){\n            action = 'Withdraw';\n          } else if (isCurveDepositTx){\n            action = 'CurveIn';\n          } else if (isCurveRedeemTx){\n            action = 'CurveOut';\n          } else if (isCurveZapIn){\n            action = 'CurveZapIn';\n          } else if (isCurveZapOut){\n            action = 'CurveZapOut';\n          } else if (isCurveDepositIn){\n            action = 'CurveDepositIn';\n          } else if (isCurveDepositOut){\n            action = 'CurveDepositOut';\n          } else if (isCurveTransferIn){\n            action = 'CurveTransferIn';\n          } else if (isCurveTransferOut){\n            action = 'CurveTransferOut';\n          }\n\n          let curveTokens = null;\n          if (isCurveTx){\n            hashKey += '_'+tx.tokenSymbol;\n            curveTokens = this.fixTokenDecimals(curveTx.value,curvePoolContract.decimals);\n\n            // Add action for curve tokens transfers\n            if ((isCurveTransferIn || isCurveTransferOut)){\n              hashKey+='_'+action;\n            }\n          }\n\n          // this.customLog('SAVE!',action);\n\n          if (tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()){\n            tokenDecimals = 18;\n          } else if (isCurveTx){\n            tokenDecimals = parseInt(tx.tokenDecimal);\n          }\n\n          // Sum the value if already processed\n          if (etherscanTxs[hashKey]){\n            // Prevent second internal tx to sum SwapOut original value\n            switch (etherscanTxs[hashKey].action){\n              case 'SwapOut':\n                if (etherscanTxs[hashKey].action !== action && isRedeemTx){\n                  etherscanTxs[hashKey].tokenValue = this.fixTokenDecimals(tx.value,tokenDecimals);\n                }\n              break;\n              default:\n                if (!curveTx){\n                  const newValue = etherscanTxs[hashKey].value.plus(this.fixTokenDecimals(tx.value,tokenDecimals));\n                  etherscanTxs[hashKey].value = newValue;\n                }\n              break;\n            }\n          } else {\n            // Insert tx in curve transfers buffer\n            if (isCurveTransferIn || isCurveTransferOut){\n              if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())){\n                curveTokens = this.fixTokenDecimals(tx.value,curvePoolContract.decimals);\n                curveTransfersTxs.push({...tx, hashKey, token, idleToken, curveTokens, action, value: this.fixTokenDecimals(tx.value,tokenDecimals)});\n              }\n            } else {\n              etherscanTxs[hashKey] = ({...tx, hashKey, token, idleToken, curveTokens, action, value: this.fixTokenDecimals(tx.value,tokenDecimals)});\n\n              // Delete curveTransfers\n              if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())){\n                curveTransfersTxsToDelete.push(tx.hash.toLowerCase());\n              }\n\n              // Take right tokenSymbol\n              switch (action){\n                case 'Withdraw':\n                  const iTxs = internalTxs.filter(iTx => (iTx !== tx));\n                  if (iTxs.length>0){\n                    const iTx = iTxs[0];\n                    etherscanTxs[hashKey].withdrawnValue = this.fixTokenDecimals(iTx.value,iTx.tokenDecimal);\n                    etherscanTxs[hashKey].tokenSymbol = iTx.tokenSymbol;\n                  }\n                break;\n                case 'CurveIn':\n                case 'CurveOut':\n                case 'CurveZapIn':\n                case 'CurveZapOut':\n                case 'CurveDepositIn':\n                case 'CurveDepositOut':\n                  etherscanTxs[hashKey].tokenSymbol = token;\n                break;\n                default:\n                break;\n              }\n            }   \n          }\n        }\n      });\n    });\n    \n    curveTransfersTxs.forEach( tx => {\n      if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())){\n        etherscanTxs[tx.hashKey] = tx;\n      }\n    });\n  \n    if (processTxs){\n      etherscanTxs = await this.processTransactions(etherscanTxs,enabledTokens,processStoredTxs);\n    }\n\n    // console.log('etherscanTxs',etherscanTxs);\n\n    return etherscanTxs;\n  }\n  addStoredTransaction = (txKey,transaction) => {\n\n    const account = this.props && this.props.account ? this.props.account : null;\n    const selectedToken = this.props && this.props.selectedToken ? this.props.selectedToken : null;\n\n    if (!account || !selectedToken || !this.props.availableTokens || !this.props.availableTokens[selectedToken]){\n      return false;\n    }\n\n    const tokenConfig = this.props.availableTokens[selectedToken];\n    const tokenKey = tokenConfig.idle.token;\n\n    let storedTxs = this.getStoredTransactions();\n    if (!storedTxs[account]){\n      storedTxs[account] = {};\n    }\n\n    if (!storedTxs[account][tokenKey]){\n      storedTxs[account][tokenKey] = {};\n    }\n\n    storedTxs[account][tokenKey][txKey] = transaction;\n    this.updateStoredTransactions(storedTxs);\n  }\n  updateStoredTransactions = transactions => {\n    this.setLocalStorage('transactions',JSON.stringify(transactions));\n  }\n  /*\n  Merge storedTxs with this.props.transactions\n  */\n  getStoredTransactions = (account=null,tokenKey=null,selectedToken=null) => {\n    const storedTxs = this.getStoredItem('transactions',true,{});\n    const transactions = this.props.transactions ? { ...this.props.transactions } : {};\n    let output = storedTxs;\n\n    if (account){\n      if (storedTxs[account]){\n        output = storedTxs[account];\n        if (tokenKey){\n          output = output[tokenKey] ? output[tokenKey] : {};\n\n          if (selectedToken){\n            Object.keys(transactions).forEach(txKey => {\n              const tx = transactions[txKey];\n              if (!output[txKey] && tx.token && tx.token.toUpperCase() === selectedToken.toUpperCase()){\n                output[txKey] = transactions[txKey];\n              }\n            });\n          }\n        }\n      } else {\n        output = {};\n      }\n    }\n\n    return output;\n  }\n  processTransactions = async (etherscanTxs,enabledTokens=[],processStoredTxs=true) => {\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let txReceipts = {};\n    let storedTxs = this.getStoredTransactions();\n\n    // Init storedTxs for pair account-token if empty\n    if (typeof storedTxs[this.props.account] !== 'object'){\n      storedTxs[this.props.account] = {};\n    }\n\n    // Take base tokens addresses and configs\n    const baseTokensConfigs = {};\n    const baseTokensAddresses = [];\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n    Object.keys(curveAvailableTokens).forEach( token => {\n      const curveTokenConfig = curveAvailableTokens[token];\n      const baseTokenConfig = this.getGlobalConfig(['stats','tokens',curveTokenConfig.baseToken]);\n      const baseTokenAddress = baseTokenConfig.address.toLowerCase();\n      baseTokensConfigs[baseTokenAddress] = baseTokenConfig;\n      baseTokensConfigs[baseTokenAddress].token = curveTokenConfig.baseToken;\n      baseTokensAddresses.push(baseTokenAddress);\n    });\n\n    const curveZapContract = this.getGlobalConfig(['curve','zapContract']);\n    // const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n    // const curveSwapContract = this.getGlobalConfig(['curve','migrationContract']);\n    // const curveDepositContract = this.getGlobalConfig(['curve','depositContract']);\n\n    await this.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const tokenKey = tokenConfig.idle.token;\n      const idleToken = tokenConfig.idle.token;\n\n      // Init storedTxs for pair account-token if empty\n      if (typeof storedTxs[this.props.account][tokenKey] !== 'object'){\n        storedTxs[this.props.account][tokenKey] = {};\n      }\n\n      const minedTxs = {...storedTxs[this.props.account][tokenKey]};\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        await this.asyncForEach(filteredTxs,async (tx,index) => {\n          const txKey = `tx${tx.timeStamp}000`;\n          const storedTx = storedTxs[this.props.account][tokenKey][txKey] ? storedTxs[this.props.account][tokenKey][txKey] : tx;\n\n          let tokenPrice = null;\n          \n          if (storedTx.tokenPrice && !this.BNify(storedTx.tokenPrice).isNaN()){\n            tokenPrice = this.BNify(storedTx.tokenPrice);\n          } else {\n            tokenPrice = await this.getIdleTokenPrice(tokenConfig,tx.blockNumber,tx.timeStamp);\n            storedTx.tokenPrice = tokenPrice;\n          }\n\n          let idleTokens = this.BNify(tx.value);\n          let tokensTransfered = tokenPrice.times(idleTokens);\n\n          // Add transactionHash to storedTx\n          if (!storedTx.transactionHash){\n            storedTx.transactionHash = tx.hash;\n          }\n\n          // Deposited\n          switch (tx.action){\n            case 'Send':\n            case 'Receive':\n            case 'Swap':\n            case 'SwapOut':\n            case 'Migrate':\n              if (!storedTx.tokenAmount){\n                storedTx.idleTokens = idleTokens;\n                storedTx.value = tokensTransfered;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.tokenSymbol = selectedToken;\n              }\n            break;\n            case 'Deposit':\n            case 'Redeem':\n              if (!storedTx.tokenAmount){\n                storedTx.value = idleTokens;\n                storedTx.tokenAmount = idleTokens;\n                storedTx.idleTokens = idleTokens.div(tokenPrice);\n              }\n            break;\n            case 'Withdraw':\n              if (!storedTx.tokenAmount){\n                storedTx.idleTokens = idleTokens;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.value = storedTx.withdrawnValue;\n              }\n            break;\n            case 'CurveIn':\n            case 'CurveOut':\n              if (!storedTx.tokenAmount){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.idleTokens = idleTokens;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n            break;\n            case 'CurveTransferIn':\n            case 'CurveTransferOut':\n              if (!storedTx.curveTokenPrice){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n                storedTx.tokenAmount = this.BNify(storedTx.curveTokens).times(storedTx.curveTokenPrice);\n              }\n\n              storedTx.idleTokens = this.BNify(0);\n            break;\n            case 'CurveZapIn':\n            case 'CurveZapOut':\n              if (!storedTx.curveTokenPrice){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n\n              if (!storedTx.tokenAmount){\n\n                storedTx.tokenAmount = this.BNify(0);\n                storedTx.idleTokens = this.BNify(0);\n\n                const curveTxReceipt = txReceipts[tx.hashKey] ? txReceipts[tx.hashKey] : await (new Promise( async (resolve, reject) => {\n                  this.props.web3.eth.getTransactionReceipt(tx.hash,(err,tx)=>{\n                    if (err){\n                      reject(err);\n                    }\n                    resolve(tx);\n                  });\n                }));\n\n                if (curveTxReceipt){\n\n                  // Save receipt\n                  if (!txReceipts[tx.hashKey]){\n                    txReceipts[tx.hashKey] = curveTxReceipt;\n                  }\n\n                  const filteredLogs = curveTxReceipt.logs.filter( log => (baseTokensAddresses.includes(log.address.toLowerCase()) && log.topics[log.topics.length-1].toLowerCase() === `0x00000000000000000000000${curveZapContract.address.replace('x','').toLowerCase()}` ) );\n\n                  this.customLog('filteredLogs',filteredLogs);\n\n                  if (filteredLogs && filteredLogs.length){\n                    filteredLogs.forEach( log => {\n                      let tokenAmount = parseInt(log.data,16);\n                      const baseTokensConfig = baseTokensConfigs[log.address.toLowerCase()];\n                      const tokenDecimals = baseTokensConfig.decimals;\n                      tokenAmount = this.fixTokenDecimals(tokenAmount,tokenDecimals);\n                      storedTx.tokenAmount = storedTx.tokenAmount.plus(tokenAmount);\n                      this.customLog('Add tokenAmount ('+tx.hash+')',baseTokensConfig.token,tokenAmount.toFixed(5),storedTx.tokenAmount.toFixed(5));\n                    });\n                  }\n                }\n              }\n            break;\n            case 'CurveDepositIn':\n            case 'CurveDepositOut':\n              if (!storedTx.curveTokenPrice){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n\n              storedTx.tokenAmount = this.BNify(storedTx.value);\n\n              if (!storedTx.idleTokens){\n\n                const curveTxReceipt = txReceipts[tx.hashKey] ? txReceipts[tx.hashKey] : await (new Promise( async (resolve, reject) => {\n                  this.props.web3.eth.getTransactionReceipt(tx.hash,(err,tx)=>{\n                    if (err){\n                      reject(err);\n                    }\n                    resolve(tx);\n                  });\n                }));\n\n                if (curveTxReceipt){\n                  const curveTokenConfig = this.getGlobalConfig(['curve','availableTokens',idleToken]);\n                  const idleTokenDecimals = curveTokenConfig && curveTokenConfig.decimals ? curveTokenConfig.decimals : 18;\n                  const idleTokenAddress = curveTokenConfig && curveTokenConfig.address ? curveTokenConfig.address : tokenConfig.idle.address;\n\n                  // Save receipt\n                  if (!txReceipts[tx.hashKey]){\n                    txReceipts[tx.hashKey] = curveTxReceipt;\n                  }\n\n                  const filteredLogs = curveTxReceipt.logs.filter( log => (log.address.toLowerCase()===idleTokenAddress ) );\n                  if (filteredLogs && filteredLogs.length){\n                    idleTokens = parseInt(filteredLogs[0].data,16);\n                    idleTokens = this.fixTokenDecimals(idleTokens,idleTokenDecimals);\n                    storedTx.idleTokens = idleTokens;\n                  }\n                }\n              }\n            break;\n            default:\n            break;\n          }\n            \n          // Save token for future filtering\n          storedTx.token = selectedToken;\n\n          // Save processed tx\n          etherscanTxs[tx.hashKey] = storedTx;\n\n          // Store processed Tx\n          storedTxs[this.props.account][tokenKey][txKey] = storedTx;\n\n          // Remove from minted Txs\n          delete minedTxs[txKey];\n        });\n      }\n\n      // Process Stored txs\n      if (processStoredTxs){\n        etherscanTxs = await this.processStoredTxs(etherscanTxs,[selectedToken],this.props.transactions);\n      }\n    });\n\n    // Update Stored txs\n    if (storedTxs){\n      this.updateStoredTransactions(storedTxs);\n    }\n\n    return etherscanTxs;\n  }\n  processStoredTxs = async (etherscanTxs,enabledTokens=[],txsToProcess=null) => {\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let storedTxs = this.getStoredItem('transactions',true,{})\n\n    // Init storedTxs\n    if (!storedTxs[this.props.account]){\n      storedTxs[this.props.account] = {};\n    }\n\n    etherscanTxs = Object.assign({},etherscanTxs);\n\n    const networkId = this.getRequiredNetworkId();\n\n    // this.customLog('Processing stored txs',enabledTokens);\n\n    await this.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const tokenKey = tokenConfig.idle.token;\n\n      // Init storedTxs\n      if (!storedTxs[this.props.account][tokenKey]){\n        storedTxs[this.props.account][tokenKey] = {};\n      }\n\n      txsToProcess = txsToProcess && Object.values(txsToProcess).length ? txsToProcess : this.getStoredTransactions(this.props.account,tokenKey,selectedToken);\n      \n      // this.customLog('txsToProcess',selectedToken,txsToProcess);\n\n      // if (!Object.values(txsToProcess).length && selectedToken==='DAI' && Object.values(this.props.transactions).length>0){\n      //   debugger;\n      // }\n\n      // Debug transactions\n      /*\n      txsToProcess['xxxxx'] = {\n        status:'success',\n        created:Date.now(),\n        method:'executeMetaTransaction',\n        token:selectedToken.toUpperCase(),\n        transactionHash:'0x000000000000000000000000000'\n      };\n      */\n\n      await this.asyncForEach(Object.keys(txsToProcess),async (txKey,i) => {\n        const tx = txsToProcess[txKey];\n\n        // Skip wrong token\n        if (!tx || !tx.token || tx.token.toUpperCase() !== selectedToken.toUpperCase() || (tx.networkId && parseInt(tx.networkId) !== parseInt(networkId))){\n          return false;\n        }\n\n        const isStoredTx = storedTxs && storedTxs[this.props.account] && storedTxs[this.props.account][tokenKey] && storedTxs[this.props.account][tokenKey][txKey];\n\n        const allowedMethods = {\n          mintIdleToken:'Deposit',\n          redeemIdleToken:'Redeem',\n          migrateFromToIdle:'Migrate',\n          mintIdleTokensProxy:'Deposit',\n          migrateFromAaveToIdle:'Migrate',\n          migrateFromIearnToIdle:'Migrate',\n          executeMetaTransaction:'Migrate',\n          migrateFromFulcrumToIdle:'Migrate',\n          migrateFromCompoundToIdle:'Migrate',\n        };\n        const pendingStatus = ['pending','started'];\n        const txSucceeded = tx.status === 'success';\n        const txPending = pendingStatus.includes(tx.status);\n        const isMetaTx = tx.method === 'executeMetaTransaction';\n        const txHash = tx.transactionHash ? tx.transactionHash : null;\n        const methodIsAllowed = Object.keys(allowedMethods).includes(tx.method);\n\n        // Skip transaction if already present in etherscanTxs with same status\n        if (txHash && etherscanTxs[txHash] && etherscanTxs[txHash].tokenPrice){\n          return false;\n        }\n\n        if (txPending && txHash && !etherscanTxs[txHash] && methodIsAllowed && tx.params.length){\n          // this.customLog('processStoredTxs',tx.method,tx.status,tx.params);\n          const isMigrationTx = allowedMethods[tx.method] === 'Migrate';\n          const decimals = isMigrationTx ? 18 : tokenConfig.decimals;\n          etherscanTxs[`t${tx.created}`] = {\n            status:'Pending',\n            token:selectedToken,\n            action:allowedMethods[tx.method],\n            timeStamp:parseInt(tx.created/1000),\n            hash:txHash ? tx.transactionHash : null,\n            tokenSymbol:isMigrationTx ? tokenConfig.idle.token : selectedToken,\n            value: tx.value ? tx.value : this.fixTokenDecimals(tx.params[0],decimals).toString()\n          };\n\n          return false;\n        }\n\n        // Skip invalid txs\n        if (!txSucceeded || !txHash || !methodIsAllowed){\n          return false;\n        }\n\n        let realTx = tx.realTx ? tx.realTx : null;\n\n        if (!realTx){\n          // this.customLog('loadTxs - getTransaction',tx.transactionHash);\n          realTx = await (new Promise( async (resolve, reject) => {\n            this.props.web3.eth.getTransaction(tx.transactionHash,(err,txReceipt)=>{\n              if (err){\n                reject(err);\n              }\n              resolve(txReceipt);\n            });\n          }));\n        }\n\n        // this.customLog('realTx (localStorage)',realTx);\n\n        // Skip txs from other wallets if not meta-txs\n        if (!realTx || (!isMetaTx && realTx.from.toLowerCase() !== this.props.account.toLowerCase())){\n          return false;\n        }\n\n        const tokenPrice = await this.getIdleTokenPrice(tokenConfig,realTx.blockNumber,realTx.timeStamp);\n\n        realTx.status = 'Completed';\n        realTx.action = allowedMethods[tx.method];\n        realTx.contractAddress = tokenConfig.address;\n        realTx.timeStamp = parseInt(tx.created/1000);\n\n        let txValue = null;\n        switch (tx.method){\n          case 'mintIdleToken':\n          case 'mintIdleTokensProxy':\n            if (!tx.params){\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n              return false;\n            }\n\n            if (realTx.to.toLowerCase() !== tokenConfig.idle.address.toLowerCase()){\n              // Remove wrong contract tx\n              if (isStoredTx){\n                delete storedTxs[this.props.account][tokenKey][txKey];\n              }\n              // this.customLog('Skipped deposit tx '+tx.transactionHash+' - wrong contract');\n              return false;\n            }\n\n            txValue = tx.params ? this.fixTokenDecimals(tx.params[0],tokenConfig.decimals).toString() : 0;\n            if (!txValue){\n              // this.customLog('Skipped deposit tx '+tx.transactionHash+' - value is zero ('+txValue+')');\n              return false;\n            }\n\n            realTx.value = txValue;\n            realTx.tokenAmount = txValue;\n          break;\n          case 'redeemIdleToken':\n            if (!tx.params){\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n              return false;\n            }\n\n            if (!realTx.tokenPrice){\n              const redeemedValueFixed = this.fixTokenDecimals(tx.params[0],18).times(tokenPrice);\n              realTx.tokenPrice = tokenPrice;\n              realTx.value = redeemedValueFixed;\n              realTx.tokenAmount = redeemedValueFixed;\n            }\n          break;\n          case 'executeMetaTransaction':\n            let executeMetaTransactionReceipt = tx.txReceipt ? tx.txReceipt : null;\n\n            if (!executeMetaTransactionReceipt){\n              executeMetaTransactionReceipt = await (new Promise( async (resolve, reject) => {\n                this.props.web3.eth.getTransactionReceipt(tx.transactionHash,(err,tx)=>{\n                  if (err){\n                    reject(err);\n                  }\n                  resolve(tx);\n                });\n              }));\n            }\n\n            if (!executeMetaTransactionReceipt){\n              return false;\n            }\n\n            // Save txReceipt into the tx\n            if (!tx.txReceipt){\n              tx.txReceipt = executeMetaTransactionReceipt;\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n            }\n\n            let action = null;\n            let executeMetaTransactionContractAddr = null;\n            let executeMetaTransactionInternalTransfers = [];\n            const IdleProxyMinterInfo = this.getGlobalConfig(['contract','deposit','proxyContract']);\n\n            // Handle migration tx\n            if (tokenConfig.migration && tokenConfig.migration.oldContract){\n              if (executeMetaTransactionReceipt.logs){\n                executeMetaTransactionContractAddr = tokenConfig.migration.oldContract.address.replace('x','').toLowerCase();\n                executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n              } else if (executeMetaTransactionReceipt.events){\n                executeMetaTransactionInternalTransfers = Object.values(executeMetaTransactionReceipt.events).filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase(); });\n              }\n\n              if (executeMetaTransactionInternalTransfers.length){\n                action = 'Migrate';\n              }\n            }\n\n            // Handle deposit tx\n            if (!executeMetaTransactionInternalTransfers.length){\n              if (executeMetaTransactionReceipt.logs){\n                executeMetaTransactionContractAddr = tokenConfig.idle.address.replace('x','').toLowerCase();\n                executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n\n                // Handle deposit made with proxy contract\n                if (!executeMetaTransactionInternalTransfers.length && IdleProxyMinterInfo){\n                  executeMetaTransactionContractAddr = IdleProxyMinterInfo.address.replace('x','').toLowerCase();\n                  executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n                }\n              } else if (executeMetaTransactionReceipt.events){\n                executeMetaTransactionInternalTransfers = Object.values(executeMetaTransactionReceipt.events).filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase(); });\n              }\n\n              if (executeMetaTransactionInternalTransfers.length){\n                action = 'Deposit';\n              }\n            }\n\n            if (!executeMetaTransactionInternalTransfers.length){\n              return false;\n            }\n\n            const internalTransfer = executeMetaTransactionInternalTransfers[0];\n\n            const metaTxValue = internalTransfer.data ? parseInt(internalTransfer.data,16) : (internalTransfer.raw && internalTransfer.raw.data) ? parseInt(internalTransfer.raw.data,16) : null;\n\n            if (!metaTxValue){\n              return false;\n            }\n\n            const metaTxValueFixed = this.fixTokenDecimals(metaTxValue,tokenConfig.decimals);\n            realTx.action = action;\n            realTx.value = metaTxValueFixed;\n            realTx.tokenAmount = metaTxValueFixed;\n            // this.customLog(metaTxValueFixed.toString());\n          break;\n          case 'migrateFromCompoundToIdle':\n          case 'migrateFromFulcrumToIdle':\n          case 'migrateFromAaveToIdle':\n          case 'migrateFromIearnToIdle':\n          case 'migrateFromToIdle':\n            if (!tokenConfig.migration || !tokenConfig.migration.oldContract){\n              return false;\n            }\n\n            let migrationTxReceipt = tx.txReceipt ? tx.txReceipt : null;\n\n            if (!migrationTxReceipt){\n              migrationTxReceipt = await (new Promise( async (resolve, reject) => {\n                this.props.web3.eth.getTransactionReceipt(tx.transactionHash,(err,tx)=>{\n                  if (err){\n                    reject(err);\n                  }\n                  resolve(tx);\n                });\n              }));\n            }\n\n            if (!migrationTxReceipt){\n              return false;\n            }\n\n            // Save txReceipt into the tx\n            if (!tx.txReceipt){\n              tx.txReceipt = migrationTxReceipt;\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n            }\n\n            const migrationContractAddr = tokenConfig.migration.migrationContract.address.toLowerCase().replace('x','');\n            const contractAddress = tokenConfig.idle.address.toLowerCase().replace('x','');\n            const migrationTxInternalTransfers = migrationTxReceipt.logs.filter((tx) => { return tx.topics.length>=3 && tx.topics[tx.topics.length-2].toLowerCase() === `0x00000000000000000000000${migrationContractAddr}` && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${contractAddress}`; });\n\n            if (!migrationTxInternalTransfers.length){\n              return false;\n            }\n\n            const migrationInternalTransfer = migrationTxInternalTransfers.pop();\n\n            const decodedLogs = this.props.web3.eth.abi.decodeLog([\n              {\n                internalType: \"uint256\",\n                name: \"_token\",\n                type: \"uint256\"\n              },\n            ],migrationInternalTransfer.data,migrationInternalTransfer.topics);\n\n            if (!decodedLogs || !decodedLogs._token){\n              return false;\n            }\n\n            const migrationValue = decodedLogs._token;\n            const migrationValueFixed = this.fixTokenDecimals(migrationValue,tokenConfig.decimals);\n            realTx.value = migrationValueFixed.toString();\n          break;\n          default:\n          break;\n        }\n\n        realTx.tokenPrice = tokenPrice;\n        realTx.token = selectedToken;\n        realTx.tokenSymbol = selectedToken;\n        realTx.idleTokens = tokenPrice.times(this.BNify(realTx.value));\n\n        // Save processed tx\n        etherscanTxs[txHash] = realTx;\n        // etherscanTxs.push(realTx);\n\n        // Store processed Tx\n        if (!tx.realTx){\n          tx.realTx = realTx;\n          storedTxs[this.props.account][tokenKey][txKey] = tx;\n        }\n      });\n    });\n\n    // Update Stored Txs\n    if (storedTxs){\n      this.updateStoredTransactions(storedTxs);\n    }\n\n    return etherscanTxs;\n  }\n  saveCachedRequest = (endpoint,alias=false,data) => {\n    const key = alias ? alias : endpoint;\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    const timestamp = parseInt(Date.now()/1000);\n    cachedRequests[key] = {\n      data,\n      timestamp\n    };\n    return this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n  }\n  getCustomAddress = () => {\n    return this.getStoredItem('customAddress',false);\n  }\n  setCustomAddress = (customAddress) => {\n    return this.setLocalStorage('customAddress',customAddress);\n  }\n  getCachedRequest = (endpoint,alias=false) => {\n    const key = alias ? alias : endpoint;\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key]){\n      return cachedRequests[key].data;\n    }\n    return null;\n  }\n  makeRequest = async(endpoint,error_callback=false,config=null) => {\n    const data = await axios\n                  .get(endpoint,config)\n                  .catch(err => {\n                    if (typeof error_callback === 'function'){\n                      error_callback(err);\n                    }\n                  });\n    return data;\n  }\n  makeEtherscanApiRequest = async (endpoint,keys=[],TTL=120,apiKeyIndex=0) => {\n    const timestamp = parseInt(Date.now()/1000);\n    \n    // Check if already exists\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[endpoint] && cachedRequests[endpoint].timestamp && timestamp-cachedRequests[endpoint].timestamp<TTL){\n      return cachedRequests[endpoint].data;\n    }\n\n    const apiKey = keys[apiKeyIndex];\n    const data = await this.makeRequest(endpoint+'&apikey='+apiKey);\n\n    // console.log('makeEtherscanApiRequest',endpoint+'&apikey='+apiKey,apiKeyIndex+'/'+keys.length,data,(data.data ? data.data.message : null),apiKeyIndex<keys.length-1);\n\n    if (data && data.data && data.data.message === 'OK'){\n      cachedRequests[endpoint] = {\n        data,\n        timestamp\n      };\n      this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n      return data;\n    } else if (apiKeyIndex<keys.length-1) {\n      return await this.makeEtherscanApiRequest(endpoint,keys,TTL,apiKeyIndex+1);\n    }\n    return null;\n  }\n  makeCachedRequest = async (endpoint,TTL=60,return_data=false,alias=false,config=null) => {\n    const key = alias ? alias : endpoint;\n    const timestamp = parseInt(Date.now()/1000);\n    \n    // Check if already exists\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key] && cachedRequests[key].timestamp && timestamp-cachedRequests[key].timestamp<TTL){\n      return (cachedRequests[key].data && return_data ? cachedRequests[key].data.data : cachedRequests[key].data);\n    }\n\n    const data = await this.makeRequest(endpoint,false,config);\n\n    cachedRequests[key] = {\n      data,\n      timestamp\n    };\n    this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n    return (data && return_data ? data.data : data);\n  }\n  getTransactionError = error => {\n    let output = 'error';\n    if (parseInt(error.code)){\n      const errorCode = parseInt(error.code);\n      switch (errorCode){\n        case 4001:\n          output = 'denied';\n        break;\n        default:\n          output = `error_${errorCode}`;\n        break;\n      }\n    } else if (error.message){\n      output = error.message.split(\"\\n\")[0]; // Take just the first line of the error\n    }\n\n    return output;\n  }\n  getGlobalConfigs = () => {\n    return globalConfigs;\n  }\n  getArrayPath = (path,array) => {\n    if (!array){\n      return null;\n    }\n    path = Object.assign([],path);\n    if (path.length>0){\n      const prop = path.shift();\n      if (!path.length){\n        return array[prop] ? array[prop] : null;\n      } else if (array[prop]) {\n        return this.getArrayPath(path,array[prop]);\n      }\n    }\n    return null;\n  }\n  getGlobalConfig = (path,configs=false) => {\n    configs = configs ? configs : globalConfigs;\n    if (path.length>0){\n      const prop = path.shift();\n      if (!path.length){\n        return configs[prop] !== undefined ? configs[prop] : null;\n      } else if (configs[prop]) {\n        return this.getGlobalConfig(path,configs[prop]);\n      }\n    }\n    return null;\n  }\n  getAppUrl = (path) => {\n    return globalConfigs.baseURL+'/'+path;\n  }\n  checkUrlOrigin = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n  }\n  checkUrlBeta = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.betaURL.toLowerCase());\n  }\n  sendGoogleAnalyticsPageview = async (page=null) => {\n    page = page || window.location.hash.substr(1);\n    const googlePageviewInfo = this.getGlobalConfig(['analytics','google','pageView']);\n    const isOrigin = this.checkUrlOrigin();\n    if (googlePageviewInfo.enabled && isOrigin && window.ga){\n      window.ga('set', 'page', page);\n      window.ga('send', 'pageview');\n    }\n  }\n  sendGoogleAnalyticsEvent = async (eventData,callback=null) => {\n\n    const googleEventsInfo = globalConfigs.analytics.google.events;\n    const debugEnabled = googleEventsInfo.debugEnabled;\n    const originOk = window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n\n    if (googleEventsInfo.enabled && window.ga && ( debugEnabled || originOk)){\n\n      // Check if testnet postfix required\n      if (googleEventsInfo.addPostfixForTestnet){\n        // Postfix network name if not mainnet\n        if (globalConfigs.network.requiredNetwork !== 1){\n          const currentNetwork = globalConfigs.network.availableNetworks[globalConfigs.network.requiredNetwork];\n          eventData.eventCategory += `_${currentNetwork}`;\n        // Postfix test for debug\n        } else if (debugEnabled && !originOk) {\n          eventData.eventCategory += '_test';\n        }\n      }\n\n      await (new Promise( async (resolve, reject) => {\n        eventData.hitCallback = () => {\n          resolve(true);\n        };\n        eventData.hitCallbackFail = () => {\n          reject();\n        };\n\n        window.ga('send', 'event', eventData);\n      }));\n\n      if (typeof callback === 'function'){\n        callback();\n      }\n    }\n\n    if (typeof callback === 'function'){\n      callback();\n    }\n\n    return false;\n  }\n  createContract = async (name, address, abi) => {\n    try {\n      const contract = new this.props.web3.eth.Contract(abi, address);\n      return {name, contract};\n    } catch (error) {\n      this.customLogError(\"Could not create contract.\",name,address,error);\n    }\n    return null;\n  }\n  getWalletProvider = (defaultProvider=null) => {\n    return this.getStoredItem('walletProvider',false,defaultProvider);\n  }\n  simpleIDPassUserInfo = (userInfo,simpleID) => {\n    if (!userInfo.address && this.props.account){\n      userInfo.address = this.props.account;\n    }\n    if (!userInfo.provider){\n      userInfo.provider = this.getWalletProvider();\n    }\n    if (typeof userInfo.email !== 'undefined' && !userInfo.email){\n      delete userInfo.email;\n    }\n    if (!userInfo.address){\n      return false;\n    }\n    simpleID = simpleID ? simpleID : (this.props.simpleID ? this.props.simpleID : (typeof this.props.initSimpleID === 'function' ? this.props.initSimpleID() : null));\n    if (simpleID){\n      return simpleID.passUserInfo(userInfo);\n    }\n    return false;\n  }\n  getEtherscanTransactionUrl = (txHash,requiredNetwork=null) => {\n    const defaultNetwork = this.getGlobalConfig(['network','requiredNetwork']);\n    requiredNetwork = requiredNetwork || this.getRequiredNetworkId();\n    const explorer = this.getGlobalConfig(['network','availableNetworks',requiredNetwork,'explorer']);\n    const defaultUrl = this.getGlobalConfig(['network','providers','etherscan','baseUrl',defaultNetwork]);\n    const baseurl = this.getGlobalConfig(['network','providers',explorer,'baseUrl',requiredNetwork]) || defaultUrl;\n    return txHash ? `${baseurl}/tx/${txHash}` : null;\n  }\n  getEtherscanAddressUrl = (address,requiredNetwork=null) => {\n    const defaultNetwork = this.getGlobalConfig(['network','requiredNetwork']);\n    requiredNetwork = requiredNetwork || this.getRequiredNetworkId();\n    const explorer = this.getGlobalConfig(['network','availableNetworks',requiredNetwork,'explorer']);\n    const defaultUrl = this.getGlobalConfig(['network','providers','etherscan','baseUrl',defaultNetwork]);\n    const baseurl = this.getGlobalConfig(['network','providers',explorer,'baseUrl',requiredNetwork]) || defaultUrl;\n    return address ? `${baseurl}/address/${address}` : null;\n  }\n  formatMoney = (amount, decimalCount = 2, decimal = \".\", thousands = \",\") => {\n    try {\n      decimalCount = Math.abs(decimalCount);\n      decimalCount = isNaN(decimalCount) ? 2 : decimalCount;\n\n      const negativeSign = amount < 0 ? \"-\" : \"\";\n\n      let i = parseInt(amount = Math.abs(Number(amount) || 0).toFixed(decimalCount)).toString();\n      let j = (i.length > 3) ? i.length % 3 : 0;\n\n      return negativeSign + (j ? i.substr(0, j) + thousands : '') + i.substr(j).replace(/(\\d{3})(?=\\d)/g, \"$1\" + thousands) + (decimalCount ? decimal + Math.abs(amount - i).toFixed(decimalCount).slice(2) : \"\");\n    } catch (e) {\n      return null;\n    }\n  }\n  getSnapshotProposals = async (activeOnly=false) => {\n\n    const cachedDataKey = `snapshotProposals_${activeOnly}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null){\n      return cachedData;\n    }\n\n    const whitelist = this.getGlobalConfig(['network','providers','snapshot','whitelist']).map( addr => addr.toLowerCase() );\n    const endpoint = this.getGlobalConfig(['network','providers','snapshot','endpoints','proposals']);\n    let proposals = await this.makeCachedRequest(endpoint,1440,true);\n\n    // console.log('getSnapshotProposals',proposals);\n\n    if (proposals && !proposals.error){\n      proposals = Object.values(proposals);\n\n      const currTime = parseInt(Date.now()/1000);\n      if (activeOnly){\n        proposals =  proposals.filter( p => (p.msg.payload.start<=currTime && p.msg.payload.end>currTime) );\n      }\n\n      // console.log(proposals);\n\n      const validProposals = [];\n      await this.asyncForEach(proposals, async (p) => {\n        // Add proposal if ended\n        if (p.msg.payload.end<=currTime || whitelist.includes(p.address.toLowerCase())){\n          validProposals.push(p);\n        } else {\n          const blockNumber = p.msg.payload.snapshot;\n\n          let checkedStrategies = false;\n          await this.asyncForEach( p.msg.payload.metadata.strategies, async (s) => {\n            if (checkedStrategies){\n              return;\n            }\n            if (s.name==='erc20-balance-of'){\n              const tokenName = s.params.symbol;\n              const tokenContract = this.getContractByName(tokenName);\n              if (tokenContract){\n                const tokenBalance = await this.getTokenBalance(tokenName,p.address,true,blockNumber);\n                // console.log(p.relayerIpfsHash,p.address,s.name,tokenBalance ? tokenBalance.toFixed() : null);\n                if (tokenBalance && this.BNify(tokenBalance).gt(100)){\n                  checkedStrategies = true;\n                }\n              }\n            } else {\n              // checkedStrategies = true;\n            }\n\n            // console.log(p.relayerIpfsHash,p.address,s.name,checkedStrategies);\n          });\n          \n          // Add proposal is passed token balances check\n          if (checkedStrategies){\n            validProposals.push(p);\n          }\n        }\n      });\n\n      return this.setCachedData(cachedDataKey,validProposals);\n    }\n\n  }\n  getTokenApiData = async (address,isRisk=null,startTimestamp=null,endTimestamp=null,forceStartTimestamp=false,frequency=null,order=null,limit=null) => {\n    const currentNetworkId = this.getRequiredNetworkId();\n    const statsConfig = this.getGlobalConfig(['stats']);\n    const statsEnabled = statsConfig.enabled && statsConfig.availableNetworks.includes(currentNetworkId);\n    if (!statsEnabled){\n      return [];\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenApiData_${address}_${isRisk}_${frequency}_${order}_${limit}`;\n    let cachedData = this.getCachedData(cachedDataKey);\n\n    if (cachedData !== null){\n      // Check for fittable start and end time\n      const filteredCachedData = cachedData.filter( c => ( (c.startTimestamp===null || (startTimestamp && c.startTimestamp<=startTimestamp)) && (c.endTimestamp===null || (endTimestamp && c.endTimestamp>=endTimestamp)) ) )\n      if (filteredCachedData && filteredCachedData.length>0){\n        let filteredData = filteredCachedData.pop().data;\n        if (filteredData){\n          filteredData = filteredData.filter( d => ((!startTimestamp || d.timestamp>=startTimestamp) && (!endTimestamp || d.timestamp<=endTimestamp)) );\n          if (filteredData.length>0){\n            return filteredData;\n          }\n        }\n        return null;\n      }\n    // Initialize cachedData\n    } else {\n      cachedData = [];\n    }\n\n    const networkId = this.getRequiredNetworkId();\n    const apiInfo = this.getGlobalConfig(['stats','rates']);\n    let endpoint = `${apiInfo.endpoint[networkId]}${address}`;\n\n    if (startTimestamp || endTimestamp || isRisk !== null || frequency !== null){\n      const params = [];\n\n      if (startTimestamp && parseInt(startTimestamp)){\n        if (forceStartTimestamp){\n          params.push(`start=${startTimestamp}`);\n        } else {\n          const start = startTimestamp-(60*60*24*2); // Minus 1 day for Volume graph\n          params.push(`start=${start}`);\n        }\n      }\n\n      if (endTimestamp && parseInt(endTimestamp)){\n        params.push(`end=${endTimestamp}`);\n      }\n\n      if (isRisk !== null){\n        params.push(`isRisk=${isRisk}`);\n      }\n\n      if (frequency !== null && parseInt(frequency)){\n        params.push(`frequency=${frequency}`);\n      }\n\n      if (order !== null){\n        params.push(`order=${order}`);\n      }\n\n      if (limit !== null && parseInt(limit)){\n        params.push(`limit=${limit}`);\n      }\n\n      if (params.length){\n        endpoint += '?'+params.join('&');\n      }\n    }\n\n    const config = this.getGlobalConfig(['stats','config']);\n    let output = await this.makeRequest(endpoint,false,config);\n    if (!output){\n      return [];\n    }\n\n    const data = output.data;\n\n    let filteredData = null;\n    if (isRisk !== null){\n      filteredData = data.filter( d => ( d.isRisk === isRisk ) );\n    }\n\n    cachedData.push({\n      isRisk,\n      endTimestamp,\n      startTimestamp,\n      data:filteredData,\n    });\n\n    this.setCachedData(cachedDataKey,cachedData);\n\n    return data;\n  }\n  getTokenExchangeRate = async (contractName,exchangeRateParams) => {\n    const cachedDataKey = `exchangeRate_${contractName}_${exchangeRateParams.name}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const exchangeRate = await this.genericContractCall(contractName,exchangeRateParams.name,exchangeRateParams.params);\n    return this.setCachedDataWithLocalStorage(cachedDataKey,exchangeRate,null);\n  }\n  getTokenDecimals = async (contractName) => {\n    contractName = contractName || this.props.selectedToken;\n\n    if (!contractName){\n      return false;\n    }\n\n    const cachedDataKey = `contractDecimals_${contractName}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const tokenConfig = this.getGlobalConfig(['stats','tokens',contractName]);\n    const decimals = tokenConfig && tokenConfig.decimals ? tokenConfig.decimals : await this.genericContractCall(contractName,'decimals');\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey,decimals,null);\n  }\n  getAvgApr = (aprs,allocations,totalAllocation) => {\n    if (aprs && allocations && totalAllocation){\n      let avgApr = Object.keys(aprs).reduce((aprWeighted,protocolAddr) => {\n        const allocation = this.BNify(allocations[protocolAddr]);\n        const apr = this.BNify(aprs[protocolAddr]);\n        return this.BNify(aprWeighted).plus(allocation.times(apr));\n      },0);\n\n      if (avgApr){\n        return this.BNify(avgApr).div(totalAllocation);\n      }\n    }\n    return null;\n  }\n  getFrequencySeconds = (frequency,quantity=1) => {\n    const frequency_seconds = {\n      hour:3600,\n      day:86400,\n      week:604800\n    };\n    return frequency_seconds[frequency]*quantity;\n  }\n  getIdleStakingRewardsTxs = async () => {\n    const idleTokenConfig = this.getGlobalConfig(['govTokens','IDLE']);\n    const feeDistributorConfig = this.getGlobalConfig(['tools','stake','props','availableTokens','IDLE','feeDistributor']);\n    const etherscanInfo = this.getGlobalConfig(['network','providers','etherscan']);\n    const etherscanApiUrl = etherscanInfo.endpoints[1];\n    const etherscanEndpoint = `${etherscanApiUrl}?module=account&action=tokentx&address=${feeDistributorConfig.address}&sort=desc`;\n    const etherscanTxlist = await this.makeEtherscanApiRequest(etherscanEndpoint,etherscanInfo.keys,3600);\n    // console.log('getIdleStakingRewardsTxs',etherscanEndpoint,etherscanTxlist);\n    if (etherscanTxlist && etherscanTxlist.data && etherscanTxlist.data.result && typeof etherscanTxlist.data.result.filter === 'function'){\n      return etherscanTxlist.data.result.filter( tx => (tx.contractAddress.toLowerCase() === idleTokenConfig.address.toLowerCase() && tx.to.toLowerCase() === feeDistributorConfig.address.toLowerCase() && this.BNify(tx.value).gt(0) ));\n    }\n    return [];\n  }\n  getProtocolInfoByAddress = (addr) => {\n    return this.props.tokenConfig.protocols.find(c => c.address.toLowerCase() === addr.toLowerCase());\n  }\n  integerValue = value => {\n    return this.BNify(value).integerValue(BigNumber.ROUND_FLOOR).toFixed();\n  }\n  normalizeTokenDecimals = tokenDecimals => {\n    return this.BNify(`1e${tokenDecimals}`);\n  }\n  normalizeTokenAmount = (tokenBalance,tokenDecimals,round=true) => {\n    const normalizedTokenDecimals = this.normalizeTokenDecimals(tokenDecimals);\n    return this.BNify(tokenBalance).times(normalizedTokenDecimals).integerValue(BigNumber.ROUND_FLOOR).toFixed();\n  }\n  fixTokenDecimals = (tokenBalance,tokenDecimals,exchangeRate=null) => {\n    if (!tokenDecimals){\n      return this.BNify(tokenBalance);\n    }\n    const normalizedTokenDecimals = this.normalizeTokenDecimals(tokenDecimals);\n    let balance = this.BNify(tokenBalance).div(normalizedTokenDecimals);\n    if (exchangeRate && !exchangeRate.isNaN()){\n      balance = balance.times(exchangeRate);\n    }\n    return balance;\n  }\n  checkContractPaused = async (contractName=null) => {\n    contractName = contractName ? contractName : this.props.tokenConfig.idle.token;\n    const contractPaused = await this.genericContractCallCached(contractName, 'paused').catch(err => {\n      this.customLogError('Generic Idle call err:', err);\n    });\n    // this.customLog('checkContractPaused',this.props.tokenConfig.idle.token,contractPaused);\n    return contractPaused;\n  }\n  getStoredItem = (key,parse_json=true,return_default=null) => {\n    let output = return_default;\n    if (window.localStorage){\n      const item = localStorage.getItem(key);\n      if (item){\n        output = item;\n        if (parse_json){\n          output = JSON.parse(item);\n        }\n      }\n    }\n    if (!output){\n      return return_default;\n    }\n    return output;\n  }\n  clearStoredData = (excludeKeys=[]) => {\n    if (window.localStorage){\n\n      if (!excludeKeys || !excludeKeys.length){\n        return window.localStorage.clear();\n      }\n\n      const storedKeysToRemove = [];\n      for (let i=0;i<window.localStorage.length;i++){\n        const storedKey = window.localStorage.key(i);\n        if (!excludeKeys.includes(storedKey)){\n          storedKeysToRemove.push(storedKey);\n        }\n      }\n      storedKeysToRemove.forEach((storedKey) => {\n        this.removeStoredItem(storedKey)\n      });\n    }\n  }\n  removeStoredItem = (key) => {\n    if (window.localStorage){\n      window.localStorage.removeItem(key);\n      return true;\n    }\n    return false;\n  }\n  setLocalStorage = (key,value,stringify=false) => {\n    if (window.localStorage){\n      try {\n        value = stringify ? JSON.stringify(value) : value;\n        window.localStorage.setItem(key,value);\n        return true;\n      } catch (error) {\n        // this.customLog('setLocalStorage',error);\n        window.localStorage.removeItem(key);\n      }\n    }\n    return false;\n  }\n  checkRebalance = async (tokenConfig) => {\n    if (!tokenConfig && this.props.tokenConfig){\n      tokenConfig = this.props.tokenConfig;\n    }\n    if (!tokenConfig){\n      return false;\n    }\n\n    const lastAllocationsPromises = [];\n    const allocations = await this.genericContractCall(tokenConfig.idle.token, 'getAllocations');\n\n    if (!allocations || !allocations.length){\n      return false;\n    }\n\n    for (let protocolIndex=0;protocolIndex<allocations.length;protocolIndex++){\n      const lastAllocationsPromise = new Promise( async (resolve, reject) => {\n        try {\n          const lastAllocations = await this.genericContractCall(tokenConfig.idle.token, 'lastAllocations',[protocolIndex]);\n          resolve(lastAllocations);\n        } catch (error) {\n          console.log(error);\n          resolve(null);\n        }\n      });\n      lastAllocationsPromises.push(lastAllocationsPromise);\n    }\n\n    const newAllocations = await Promise.all(lastAllocationsPromises);\n\n    if (!allocations || !newAllocations){\n      return true;\n    }\n\n    const diff = allocations.filter( (alloc,index) => alloc !== newAllocations[index] );\n\n    return diff.length>0;\n  }\n  checkMigration = async (tokenConfig,account) => {\n\n    if (!tokenConfig || !account){\n      return false;\n    }\n\n    let migrationEnabled = false;\n    let oldContractBalance = null;\n    let oldContractTokenDecimals = null;\n    // let migrationContractApproved = false;\n    let oldContractBalanceFormatted = null;\n\n    // Check migration contract enabled and balance\n    if (tokenConfig.migration && tokenConfig.migration.enabled){\n      const oldContractName = tokenConfig.migration.oldContract.name;\n      const oldContract = this.getContractByName(oldContractName);\n      const migrationContract = this.getContractByName(tokenConfig.migration.migrationContract.name);\n\n      // this.customLog(oldContractName,tokenConfig.migration.migrationContract.name);\n\n      if (oldContract && migrationContract){\n        // Get old contract token decimals\n        oldContractTokenDecimals = await this.getTokenDecimals(oldContractName);\n\n        // this.customLog('Migration - token decimals',oldContractTokenDecimals ? oldContractTokenDecimals.toString() : null);\n\n        // Check migration contract approval\n        // migrationContractApproved = await this.checkMigrationContractApproved();\n\n        // this.customLog('Migration - approved',migrationContractApproved ? migrationContractApproved.toString() : null);\n\n        // Check old contractBalance\n        oldContractBalance = await this.getContractBalance(oldContractName,account);\n\n        if (oldContractBalance){\n          oldContractBalanceFormatted = this.fixTokenDecimals(oldContractBalance,oldContractTokenDecimals);\n          // Enable migration if old contract balance if greater than 0\n          migrationEnabled = this.BNify(oldContractBalance).gt(0);\n        }\n\n        // this.customLog('Migration - oldContractBalance',oldContractName,account,oldContractBalance,oldContractBalanceFormatted);\n      }\n    }\n\n    // Set migration contract balance\n    return {\n      migrationEnabled,\n      oldContractBalance,\n      oldContractTokenDecimals,\n      oldContractBalanceFormatted,\n    };\n  }\n\n  getContractEvents = async (contractName, eventName, params = {}) => {\n    return await this.getContractPastEvents(contractName, eventName, params);\n  }\n\n  estimateMethodGasUsage = async (contractName, methodName, methodParams = [], account = null) => {\n    account = account || this.props.account;\n    if (!account){\n      return null;\n    }\n    const contract = this.getContractByName(contractName);\n    if (contract && contract.methods[methodName]){\n      const functionCall = contract.methods[methodName](...methodParams);\n\n      let gasPrice = null;\n      let gasLimit = null;\n      \n      try {\n        [\n          gasPrice,\n          gasLimit\n        ] = await Promise.all([\n          this.props.web3.eth.getGasPrice(),\n          functionCall.estimateGas({from: account})\n        ]);\n      } catch (error) {\n\n      }\n\n      if (gasPrice && gasLimit){\n        return this.fixTokenDecimals(this.fixTokenDecimals(gasPrice,9).times(gasLimit),9);\n      }\n    }\n\n    return this.BNify(0);\n  }\n\n  executeMetaTransaction = async (contract, userAddress, signedParameters, callback, callback_receipt) => {\n    try {\n\n      // const gasLimit = await contract.methods\n      //   .executeMetaTransaction(userAddress, ...signedParameters)\n      //   .estimateGas({ from: userAddress });\n\n      // this.customLog(gasLimit);\n\n      const gasPrice = await this.props.web3.eth.getGasPrice();\n\n      const tx = contract.methods\n        .executeMetaTransaction(userAddress, ...signedParameters)\n        .send({\n          from: userAddress,\n          gasPrice\n          // gasLimit\n        });\n\n      tx.on(\"transactionHash\", function(hash) {\n        this.customLog(`Transaction sent by relayer with hash ${hash}`);\n        callback_receipt()\n      }).once(\"confirmation\", function(confirmationNumber, receipt) {\n        this.customLog(\"Transaction confirmed on chain\",receipt);\n        callback_receipt(receipt);\n      });\n    } catch (error) {\n      this.customLog(error);\n      callback(null,error);\n    }\n  }\n\n  getSignatureParameters_v4 = signature => {\n    if (!this.props.web3.utils.isHexStrict(signature)) {\n      throw new Error(\n        'Given value \"'.concat(signature, '\" is not a valid hex string.')\n      );\n    }\n    var r = signature.slice(0, 66);\n    var s = \"0x\".concat(signature.slice(66, 130));\n    var v = \"0x\".concat(signature.slice(130, 132));\n    v = this.props.web3.utils.hexToNumber(v);\n    if (![27, 28].includes(v)) v += 27;\n    return {\n      r: r,\n      s: s,\n      v: v\n    };\n  };\n\n  constructMetaTransactionMessage = (nonce, chainId, functionSignature, contractAddress) => {\n    return ethereumjsABI.soliditySHA3(\n      [\"uint256\",\"address\",\"uint256\",\"bytes\"],\n      [nonce, contractAddress, chainId, toBuffer(functionSignature)]\n    );\n  }\n\n  checkBiconomyLimits = async (userAddress) => {\n    const biconomyInfo = this.getGlobalConfig(['network','providers','biconomy']);\n    const res = await this.makeRequest(`${biconomyInfo.endpoints.limits}?userAddress=${userAddress}&apiId=${biconomyInfo.params.apiId}`,null,{\n      headers:{\n        'x-api-key':biconomyInfo.params.apiKey\n      }\n    });\n\n    if (res && res.data){\n      return res.data;\n    }\n\n    return null;\n  }\n\n  sendTxWithPermit = async (contractName,methodName,methodParams,nonce,callback,callback_receipt) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      callback(null,'Contract not found');\n      return false;\n    }\n\n    if (!contract.methods[methodName]){\n      callback(null,'Method not found');\n      return false;\n    }\n\n    const functionSignature = contract.methods[methodName](...methodParams).encodeABI();\n\n    try{\n      const userAddress = this.props.account;\n      const chainId = this.getRequiredNetworkId();\n      const messageToSign = this.constructMetaTransactionMessage(nonce, chainId, functionSignature, contract._address);\n\n      const signature = await this.props.web3.eth.personal.sign(\n        \"0x\" + messageToSign.toString(\"hex\"),\n        userAddress\n      );\n\n      const { r, s, v } = this.getSignatureParameters_v4(signature);\n\n      this.contractMethodSendWrapper(contractName, methodName, methodParams.concat([nonce, r, s, v]), callback, callback_receipt);\n\n      return true;\n    } catch (error) {\n      callback(null,error);\n      return false;\n    }\n  }\n\n  buildBiconomyErc20ForwarderTx = async (contractName,tokenAddress,permitType,callData,gasLimit) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      return false;\n    }\n\n    // console.log('Build Tx ',contract._address,tokenAddress,Number(gasLimit),callData);\n\n    const buildParams = {\n      permitType,\n      data:callData,\n      token:tokenAddress,\n      to:contract._address,\n      txGas:parseInt(gasLimit)\n    };\n\n    // console.log('buildBiconomyErc20ForwarderTx',buildParams);\n\n    //Create the call data that the recipient contract will receive\n    const tx = await this.props.erc20ForwarderClient.buildTx(buildParams);\n\n    return tx;\n  }\n\n  getTransactionReceipt = async (hash) => {\n    return await (new Promise( async (resolve, reject) => {\n      this.props.web3.eth.getTransactionReceipt(hash,(err,tx)=>{\n        if (err){\n          reject(err);\n        }\n        resolve(tx);\n      });\n    }));\n  }\n\n  sendBiconomyTxWithErc20Forwarder = async (req,metaInfo,callback,callback_receipt) => {\n\n    let transactionHash = null;\n\n    try {\n      const txResponse = await this.props.erc20ForwarderClient.permitAndSendTxEIP712({req,metaInfo});\n      transactionHash = txResponse.txHash;\n      // console.log('permitAndSendTxEIP712',transactionHash);\n    } catch (error) {\n      // console.log('permitAndSendTxEIP712 ERROR',error);\n      callback(null,true);\n      return false;\n    }\n\n    if (!transactionHash){\n      // console.log('!transactionHash ERROR');\n      callback(null,true);\n      return false;\n    }\n    \n    const tx = {\n      method:'mintIdleToken',\n      transactionHash\n    };\n    // console.log('sendBiconomyTxWithErc20Forwarder - TX',tx);\n    callback_receipt(tx);\n\n    // fetch mined transaction receipt \n    const fetchReceiptIntervalId = window.setInterval(()=> {\n      this.props.web3.eth.getTransactionReceipt(transactionHash, (err, receipt)=> {\n        // console.log('sendBiconomyTxWithErc20Forwarder - RECEIPT',transactionHash,err,receipt);\n        if(!err && receipt){\n          window.clearInterval(fetchReceiptIntervalId);\n          tx.txReceipt = receipt;\n          tx.status = !err && receipt.status ? 'success' : 'error';\n\n          callback(tx,err);\n\n          if (typeof window.updateTransaction === 'function'){\n            window.updateTransaction(tx,transactionHash,tx.status,null);\n          }\n        }\n      });\n    }, 3000);\n\n    return true;\n  }\n\n  sendBiconomyTxWithPersonalSign = async (contractName,functionSignature,callback,callback_receipt) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      callback(null,'Contract not found');\n      return false;\n    }\n\n    try{\n      const userAddress = this.props.account;\n      const nonce = await contract.methods.getNonce(userAddress).call();\n      const chainId = this.getRequiredNetworkId();\n      const messageToSign = this.constructMetaTransactionMessage(nonce, chainId, functionSignature, contract._address);\n\n      const signature = await this.props.web3.eth.personal.sign(\n        \"0x\" + messageToSign.toString(\"hex\"),\n        userAddress\n      );\n\n      const { r, s, v } = this.getSignatureParameters_v4(signature);\n\n      this.contractMethodSendWrapper(contractName, 'executeMetaTransaction', [userAddress, functionSignature, r, s, v], callback, callback_receipt);\n\n      return true;\n    } catch (error) {\n      console.error(error);\n      callback(null,error);\n      return false;\n    }\n  }\n\n  signPermitEIP2612 = async (contractAddress, erc20Name, owner, spender, value, nonce, deadline, chainId) => {\n    if (chainId === undefined) {\n      const result = await this.props.web3.eth.getChainId();\n      chainId = parseInt(result);\n    }\n\n    const domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const permit = [\n      { name: \"owner\", type: \"address\" },\n      { name: \"spender\", type: \"address\" },\n      { name: \"value\", type: \"uint256\" },\n      { name: \"nonce\", type: \"uint256\" },\n      { name: \"deadline\", type: \"uint256\" },\n    ];\n\n    const domainData = {\n      version: \"2\",\n      name: erc20Name,\n      chainId: chainId,\n      verifyingContract: contractAddress\n    };\n\n    const message = {\n      owner,\n      spender,\n      value,\n      nonce,\n      deadline,\n    };\n\n    const data = JSON.stringify({\n      types: {\n        EIP712Domain: domain,\n        Permit: permit,\n      },\n      primaryType: \"Permit\",\n      domain: domainData,\n      message: message\n    });\n\n    return new Promise((resolve, reject) => {\n      this.props.web3.currentProvider.send({\n        jsonrpc: '2.0',\n        id: Date.now().toString().substring(9),\n        method: \"eth_signTypedData_v4\",\n        params: [owner, data],\n        from: owner\n      }, (error, res) => {\n        if (error) {\n          return reject(error);\n        }\n\n        resolve(res.result);\n      });\n    });\n  }\n\n  signPermit = async (baseContractName, holder, spenderContractName, addToNonce=0, value=null) => {\n    const baseContract = this.getContractByName(baseContractName);\n    const spenderContract = this.getContractByName(spenderContractName);\n\n    if (!baseContract || !spenderContract){\n      return false;\n    }\n\n    const result = await this.props.web3.eth.net.getId();\n    let chainId = parseInt(result);\n\n    const EIP712Domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const permitConfig = this.getGlobalConfig(['permit',baseContractName]);\n\n    // console.log('permitConfig',permitConfig);\n\n    const expiry = Math.round(new Date().getTime() / 1000 + 3600);\n    let nonce = permitConfig.nonceMethod ? await baseContract.methods[permitConfig.nonceMethod](holder).call() : null;\n    if (addToNonce>0){\n      nonce = parseInt(nonce)+parseInt(addToNonce);\n    }\n    nonce = nonce.toString();\n\n    const Permit = permitConfig.type;\n    const EIPVersion = permitConfig.EIPVersion;\n\n    const spender = spenderContract._address;\n    const verifyingContract = baseContract._address;\n\n    const permitName = permitConfig.name || baseContractName;\n\n    const domain = {\n      chainId,\n      name: permitName,\n      verifyingContract,\n      version: permitConfig.version.toString() || '1',\n    };\n\n    let message = {};\n\n    switch (EIPVersion){\n      case 2612:\n        const owner = holder;\n        const deadline = expiry;\n        // Unlimited allowance\n        value = value || this.integerValue(this.BNify(2).pow(256).minus(1));\n        message = {\n          value,\n          nonce,\n          owner,\n          spender,\n          deadline\n        };\n      break;\n      default:\n        message = {\n          holder,\n          nonce,\n          expiry,\n          spender,\n          allowed: true,\n        };\n      break;\n    }\n\n    const data = JSON.stringify({\n      domain,\n      message,\n      types: {\n        Permit,\n        EIP712Domain\n      },\n      primaryType: 'Permit',\n    });\n\n    // console.log('Permit',JSON.parse(data));\n\n    return new Promise((resolve, reject) => {\n      this.props.web3.currentProvider.send({\n        from: holder,\n        jsonrpc: '2.0',\n        params: [holder, data],\n        method: 'eth_signTypedData_v4',\n        id: Date.now().toString().substring(9),\n      }, (error, response) => {\n        if (error || (response && response.error)) {\n          return resolve(null);\n        } else if (response && response.result) {\n          const signedParameters = this.getSignatureParameters_v4(response.result);\n          signedParameters.nonce = nonce;\n          signedParameters.expiry = expiry;\n          return resolve(signedParameters);\n        }\n      });\n    });\n  }\n\n  sendTxWithPermit = async (baseContractName, holder, spenderContractName, methodName, methodParams, callback, callback_receipt, callback_permit=null) => {\n\n    const baseContract = this.getContractByName(baseContractName);\n    const spenderContract = this.getContractByName(spenderContractName);\n\n    if (!baseContract || !spenderContract){\n      callback(null,'Contract not found');\n      return false;\n    }\n\n    const signedParameters = await this.signPermit(baseContractName, holder, spenderContractName);\n\n    if (signedParameters){\n      const { expiry, nonce, r, s, v } = signedParameters;\n      const permitParams = [expiry, v, r, s];\n\n      const methodAbi = spenderContract._jsonInterface.find( f => f.name === methodName );\n      const useNonce = methodAbi ? methodAbi.inputs.find( i => i.name === 'nonce' ) : true;\n      if (!isNaN(parseInt(nonce)) && useNonce){\n        permitParams.unshift(nonce);\n      }\n      const params = methodParams.concat(permitParams);\n      this.contractMethodSendWrapper(spenderContractName, methodName, params, callback, callback_receipt);\n    } else {\n      callback(null,'Permit cancelled');\n    }\n  }\n\n  sendSignedTx = async (contractName,contractAddress,functionSignature,callback,callback_receipt) => {\n\n    const EIP712Domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const MetaTransaction = [\n      { name: \"nonce\", type: \"uint256\" },\n      { name: \"from\", type: \"address\" },\n      { name: \"functionSignature\", type: \"bytes\" }\n    ];\n\n    const chainId = await this.props.web3.eth.getChainId();\n\n    const domainData = {\n      chainId,\n      version: '1',\n      name: contractName,\n      verifyingContract: contractAddress\n    };\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      callback(null,'Contract not found');\n      return false\n    }\n\n    let userAddress = this.props.account;\n    let nonce = await contract.methods.getNonce(userAddress).call();\n    let message = {};\n    message.nonce = nonce;\n    message.from = userAddress;\n    message.functionSignature = functionSignature;\n\n    const dataToSign = JSON.stringify({\n      types: {\n        EIP712Domain,\n        MetaTransaction\n      },\n      domain: domainData,\n      primaryType: \"MetaTransaction\",\n      message\n    });\n\n    // this.customLog('dataToSign',dataToSign);\n\n    this.props.web3.currentProvider.send(\n      {\n        jsonrpc: \"2.0\",\n        id: 999999999999,\n        from: userAddress,\n        method: \"eth_signTypedData_v4\",\n        params: [userAddress, dataToSign]\n      },\n      (error, response) => {\n        if (error || (response && response.error)) {\n          return callback(null,error);\n        } else if (response && response.result) {\n          const signedParameters = this.getSignatureParameters_v4(response.result);\n          const { r, s, v } = signedParameters;\n            \n          this.contractMethodSendWrapper(contractName, 'executeMetaTransaction', [userAddress, functionSignature, r, s, v], callback, callback_receipt);\n        }\n      }\n    );\n  }\n\n  checkTokenApproved = async (contractName,contractAddr,walletAddr) => {\n    const [\n      balance,\n      allowance\n    ] = await Promise.all([\n      this.getTokenBalance(contractName,walletAddr,false),\n      this.getAllowance(contractName,contractAddr,walletAddr)\n    ]);\n    this.customLog('checkTokenApproved',contractName,this.BNify(allowance).toFixed(),this.BNify(balance).toFixed(),(allowance && this.BNify(allowance).gte(this.BNify(balance))));\n    return allowance && this.BNify(allowance).gte(this.BNify(balance));\n  }\n  getAllowance = async (contractName,contractAddr,walletAddr) => {\n    if (!contractName || !contractAddr || !walletAddr){\n      return false;\n    }\n    this.customLog('getAllowance',contractName,contractAddr,walletAddr);\n    return await this.genericContractCall(\n      contractName, 'allowance', [walletAddr, contractAddr]\n    );\n  }\n  contractMethodSendWrapperWithValue = (contractName,methodName,params,value,callback,callback_receipt,txData) => {\n    this.props.contractMethodSendWrapper(contractName, methodName, params, value, (tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    }, null, txData);\n  }\n  contractMethodSendWrapper = (contractName,methodName,params,callback,callback_receipt,txData=null,send_raw=false,raw_tx_data=null) => {\n    try{\n      this.props.contractMethodSendWrapper(contractName, methodName, params, null, (tx)=>{\n        if (typeof callback === 'function'){\n          callback(tx);\n        }\n      }, (tx) => {\n        if (typeof callback_receipt === 'function'){\n          callback_receipt(tx);\n        }\n      }, null, txData, send_raw, raw_tx_data);\n    } catch (error) {\n      callback(null,error);\n    }\n  }\n  disableERC20 = (contractName,address,callback,callback_receipt) => {\n    this.props.contractMethodSendWrapper(contractName, 'approve', [\n      address,\n      this.props.web3.utils.toTwosComplement('0') // max uint solidity\n    ],null,(tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    });\n  }\n  enableERC20 = (contractName,address,callback,callback_receipt) => {\n    this.props.contractMethodSendWrapper(contractName, 'approve', [\n      address,\n      this.props.web3.utils.toTwosComplement('-1') // max uint solidity\n    ],null,(tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    });\n  }\n  getTrancheStakedBalance = async (contractName,walletAddr,decimals=null) => {\n    // Check for cached data\n    const cachedDataKey = `trancheStakedBalance_${contractName}_${walletAddr}_${decimals}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let stakedBalance = await this.genericContractCall(contractName,'usersStakes',[walletAddr]);\n    if (stakedBalance){\n      if (decimals){\n        stakedBalance = this.fixTokenDecimals(stakedBalance,decimals);\n      }\n      stakedBalance = this.BNify(stakedBalance);\n\n      if (!stakedBalance.isNaN()){\n        return this.setCachedDataWithLocalStorage(cachedDataKey,stakedBalance,30);\n      }\n    }\n    return this.BNify(0);\n  }\n  getTrancheStakingRewards = async (account,trancheConfig) => {\n    const stakingRewards = {};\n    await this.asyncForEach(trancheConfig.CDORewards.stakingRewards, async (tokenConfig) => {\n      const tokenGlobalConfig = this.getGlobalConfig(['stats','tokens',tokenConfig.token]);\n      tokenConfig = {...tokenConfig,...tokenGlobalConfig};\n      const tokenAmount = await this.genericContractCallCached(trancheConfig.CDORewards.name,'expectedUserReward',[account,tokenConfig.address]);\n      stakingRewards[tokenConfig.token] = this.fixTokenDecimals(tokenAmount,tokenConfig.decimals);\n    });\n\n    // console.log('getTrancheStakingRewards',stakingRewards);\n\n    return stakingRewards;\n  }\n  loadTrancheFieldRaw = async (field,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens=true) => {\n    return await this.loadTrancheField(field,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens,false);\n  }\n  loadTrancheField = async (field,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account=null,addGovTokens=true,formatValue=true,addTokenName=true) => {\n    let output = null;\n    const maxPrecision = (fieldProps && fieldProps.maxPrecision) || 5;\n    const decimals = (fieldProps && fieldProps.decimals) || (this.props.isMobile ? 2 : 3);\n    const minPrecision = (fieldProps && fieldProps.minPrecision) || (this.props.isMobile ? 3 : 4);\n    const tokenName = this.getGlobalConfig(['stats','tokens',token,'label']) || this.capitalize(token);\n\n    const strategyConfig = tokenConfig.Strategy;\n    const idleStrategyAddress = await this.genericContractCallCached(tokenConfig.CDO.name,'strategy'); \n    if (idleStrategyAddress){\n      await this.props.initContract(strategyConfig.name,idleStrategyAddress,strategyConfig.abi);\n    }\n\n    const idleGovTokenConfig = this.getGlobalConfig(['govTokens','IDLE']);\n    switch (field){\n      case 'protocolName':\n        output = (this.getGlobalConfig(['stats','protocols',protocol,'label']) || this.capitalize(protocol)).toUpperCase();\n      break;\n      case 'tokenName':\n        output = tokenName;\n      break;\n      case 'trancheType':\n        output = (this.getGlobalConfig(['tranches',tranche,'baseName']) || '').toUpperCase();\n        // console.log('trancheType',tranche,trancheConfig,output);\n      break;\n      case 'pool':\n        let poolSize = await this.genericContractCallCached(tokenConfig.CDO.name,'getContractValue');\n        if (!this.BNify(poolSize).isNaN()){\n          output = this.fixTokenDecimals(poolSize,tokenConfig.CDO.decimals);\n          if (formatValue){\n            output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision);\n          }\n        }\n      break;\n      case 'seniorPool':\n        output = await this.loadTrancheField('tranchePool',fieldProps,protocol,token,tranche,tokenConfig,tokenConfig.AA,account,addGovTokens);\n      break;\n      case 'juniorPool':\n        output = await this.loadTrancheField('tranchePool',fieldProps,protocol,token,tranche,tokenConfig,tokenConfig.BB,account,addGovTokens);\n      break;\n      case 'seniorApy':\n        output = await this.loadTrancheField('trancheApy',fieldProps,protocol,token,tranche,tokenConfig,tokenConfig.AA,account,addGovTokens);\n      break;\n      case 'juniorApy':\n        output = await this.loadTrancheField('trancheApy',fieldProps,protocol,token,tranche,tokenConfig,tokenConfig.BB,account,addGovTokens);\n      break;\n      case 'tranchePool':\n        let [\n          totalSupply,\n          virtualPrice\n        ] = await Promise.all([\n          this.getTokenTotalSupply(trancheConfig.name,'latest',180),\n          this.loadTrancheField('tranchePrice',fieldProps,protocol,token,tranche,tokenConfig,tokenConfig.BB,account,addGovTokens)\n        ]);\n\n\n        output = this.BNify(0);\n        if (!this.BNify(virtualPrice).isNaN() && !this.BNify(totalSupply).isNaN()){\n          output = this.fixTokenDecimals(totalSupply,tokenConfig.CDO.decimals).times(virtualPrice);\n        }\n        if (formatValue){\n          output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision)+(addTokenName ? ` ${tokenName}` : '');\n        }\n        // console.log('tranchePool',tokenConfig.CDO.name,totalSupply,virtualPrice,output);\n      break;\n      case 'trancheDeposited':\n        const deposited = await this.getAmountDepositedTranche(tokenConfig,trancheConfig,account);\n\n        output = output || this.BNify(0);\n\n        output = this.BNify(deposited);\n        if (output.gt(0)){\n          if (formatValue){\n            output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision)+(addTokenName ? ` ${tokenName}` : '');\n          }\n        } else {\n          output = formatValue ? '-' : null;\n        }\n      break;\n      case 'trancheFee':\n        output = await this.genericContractCallCached(tokenConfig.CDO.name,'fee');\n        if (output){\n          output = this.BNify(output).div(this.BNify(100000));\n        }\n      break;\n      case 'tranchePrice':\n        output = await this.genericContractCall(tokenConfig.CDO.name,'virtualPrice',[trancheConfig.address]);\n        if (output){\n          output = this.fixTokenDecimals(output,trancheConfig.decimals);\n        }\n      break;\n      case 'trancheStaked':\n        let [\n          staked1,\n          lastPrice1\n        ] = await Promise.all([\n          this.getTrancheStakedBalance(trancheConfig.CDORewards.name,account,trancheConfig.CDORewards.decimals),\n          this.loadTrancheField(`tranchePrice`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens)\n        ]);\n\n\n        output = formatValue ? '-' : null;\n        if (staked1 && lastPrice1){\n          output = this.BNify(staked1).times(lastPrice1);\n          // console.log('trancheStaked',staked1.toString(),lastPrice1.toString(),output.toString());\n          if (formatValue){\n            output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision)+(addTokenName ? ` ${tokenName}` : '');\n          }\n        }\n      break;\n      case 'trancheRedeemable':\n        let [\n          deposited1,\n          lastPrice\n        ] = await Promise.all([\n          this.getTokenBalance(trancheConfig.name,account),\n          this.loadTrancheFieldRaw(`tranchePrice`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens)\n        ]);\n\n        output = formatValue ? '-' : null;\n        if (deposited1 && lastPrice){\n          output = this.BNify(deposited1).times(lastPrice);\n          if (formatValue){\n            output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision)+(addTokenName ? ` ${tokenName}` : '');\n          }\n        }\n      break;\n      case 'trancheRedeemableWithStaked':\n        let [\n          redeemable1,\n          staked2\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheRedeemable`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens),\n          this.loadTrancheFieldRaw(`trancheStaked`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens)\n        ]);\n\n        output = formatValue ? '-' : null;\n        if (redeemable1 && staked2){\n          output = this.BNify(redeemable1).plus(staked2);\n          if (formatValue){\n            output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision)+(addTokenName ? ` ${tokenName}` : '');\n          }\n        }\n      break;\n      case 'earningsCounter':\n        let [\n          earningsStart,\n          trancheApy2,\n          deposited3\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`earnings`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens),\n          this.loadTrancheFieldRaw(`trancheApy`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens),\n          this.loadTrancheFieldRaw(`trancheDeposited`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens),\n        ]);\n\n\n        if (deposited3 && earningsStart && trancheApy2){\n          const earningsEnd = deposited3.gt(0) ? deposited3.times(trancheApy2.div(100)).plus(earningsStart) : 0;\n\n          output = {\n            earningsEnd,\n            earningsStart\n          };\n        }\n      break;\n      case 'feesCounter':\n        let [\n          trancheFee,\n          earningsCounter\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheFee`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens),\n          this.loadTrancheFieldRaw(`earningsCounter`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens),\n        ]);\n\n        if (trancheFee && earningsCounter){\n          const feesStart = earningsCounter.earningsStart.times(trancheFee);\n          const feesEnd =  earningsCounter.earningsEnd.times(trancheFee);\n\n          // console.log('feesCounter',feesStart.toString(),feesEnd.toString());\n\n          output = {\n            feesEnd,\n            feesStart\n          };\n        }\n      break;\n      case 'earnings':\n        const [\n          deposited4,\n          redeemable3\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheDeposited`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens),\n          this.loadTrancheFieldRaw(`trancheRedeemableWithStaked`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens)\n        ]);\n\n        if (deposited4 && redeemable3){\n          output = this.BNify(redeemable3).minus(deposited4);\n          if (formatValue){\n            output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision)+(addTokenName ? ` ${tokenName}` : '');\n          }\n        }\n      break;\n      case 'earningsPerc':\n        const [\n          deposited2,\n          redeemable2\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheDeposited`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens),\n          this.loadTrancheFieldRaw(`trancheRedeemableWithStaked`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens)\n        ]);\n        output = redeemable2.div(deposited2).minus(1).times(100);\n        if (formatValue){\n          output = output.toFixed(decimals)+'%';\n        }\n      break;\n      case 'trancheApy':\n        let trancheApy = await this.genericContractCallCached(tokenConfig.CDO.name,'getApr',[trancheConfig.address]);\n        // console.log('trancheApy',tokenConfig,trancheConfig,output);\n        if (trancheApy){\n          output = this.fixTokenDecimals(trancheApy,tokenConfig.CDO.decimals);\n          output = this.apr2apy(output.div(100)).times(100);\n          if (formatValue){\n            output = output.toFixed(2)+'%';\n          }\n        }\n      break;\n      case 'realizedApy':\n        const [\n          firstDepositTx,\n          earningsPerc\n        ] = await Promise.all([\n          this.getTrancheFirstDepositTx(tokenConfig,trancheConfig,account),\n          this.loadTrancheFieldRaw(`earningsPerc`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens)\n        ]);\n\n        // console.log('realizedApy',earningsPerc.toString(),firstDepositTx);\n\n        if (earningsPerc && firstDepositTx){\n          const secondsFromFirstTx = parseInt(Date.now()/1000)-parseInt(firstDepositTx.timeStamp);\n          output = this.BNify(earningsPerc).times(31536000).div(secondsFromFirstTx);\n\n          // console.log('realizedApy2',firstDepositTx,earningsPerc.toString(),output.toString());\n\n          if (formatValue){\n            output = output.toFixed(2)+'%';\n          }\n        }\n      break;\n      case 'trancheIDLELastHarvest':\n      case 'trancheIDLEDistribution':\n        const rewardsTokensInfo = await this.getTrancheRewardTokensInfo(tokenConfig,trancheConfig);\n        if (rewardsTokensInfo && rewardsTokensInfo.IDLE){\n          if (field === 'trancheIDLEDistribution'){\n            output = this.fixDistributionSpeed(rewardsTokensInfo.IDLE.tokensPerSecond,idleGovTokenConfig.distributionFrequency);\n            if (formatValue){\n              output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision)+` IDLE/${idleGovTokenConfig.distributionFrequency}`\n            }\n          } else {\n            output = rewardsTokensInfo.IDLE.lastAmount;\n            if (formatValue){\n              output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision)+` IDLE (last harvest)`\n            }\n          }\n        }\n      break;\n      case 'AAIDLEDistribution':\n        output = this.abbreviateNumber('1234',decimals,maxPrecision,minPrecision)+` IDLE/day`;\n      break;\n      case 'BBIDLEDistribution':\n        output = this.abbreviateNumber('4321',decimals,maxPrecision,minPrecision)+` IDLE/day`;\n      break;\n      case 'govTokens':\n      case 'autoFarming':\n      case 'stakingRewards':\n        output = {};\n        const [\n          rewardsTokens,\n          incentiveTokens\n        ] = await Promise.all([\n          this.genericContractCall(strategyConfig.name,'getRewardTokens'),\n          this.genericContractCall(tokenConfig.CDO.name,'getIncentiveTokens')\n        ]);\n\n        const govTokens = field === 'govTokens' ? rewardsTokens : (field === 'autoFarming' && rewardsTokens ? rewardsTokens.filter( rewardTokenAddr => incentiveTokens && !incentiveTokens.map( addr => addr.toLowerCase() ).includes(rewardTokenAddr.toLowerCase()) ) : incentiveTokens);\n\n        // console.log(field,tokenConfig,rewardsTokens,incentiveTokens,govTokens);\n\n        if (govTokens){\n          govTokens.forEach( govTokenAddress => {\n            const govTokenConfig = this.getGovTokenConfigByAddress(govTokenAddress);\n            if (govTokenConfig && !govTokenConfig.enabled){\n              return;\n            }\n            output[govTokenConfig.token] = govTokenConfig;\n          });\n        }\n      break;\n      default:\n      break;\n    }\n\n    // console.log('loadTrancheField',field,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens,formatValue);\n\n    return output;\n  }\n  loadAssetField = async (field,token,tokenConfig,account,addGovTokens=true,addCurveApy=false) => {\n\n    let output = null;\n    const govTokens = this.getGlobalConfig(['govTokens']);\n\n    // Remove gov tokens for risk adjusted strategy\n    const strategyInfo = this.getGlobalConfig(['strategies',this.props.selectedStrategy]);\n    if (addGovTokens && strategyInfo && typeof strategyInfo.addGovTokens !== 'undefined'){\n      addGovTokens = strategyInfo.addGovTokens;\n    }\n\n    // Take available tokens for gov tokens fields\n    let govTokenAvailableTokens = null;\n    if (this.props.selectedStrategy && this.props.selectedToken){\n      const newTokenConfig = this.props.availableStrategies[this.props.selectedStrategy][this.props.selectedToken];\n      if (newTokenConfig){\n        govTokenAvailableTokens = {};\n        govTokenAvailableTokens[newTokenConfig.token] = newTokenConfig;\n      }\n    } else if (!Object.keys(govTokens).includes(token)){\n      govTokenAvailableTokens = {};\n      govTokenAvailableTokens[token] = tokenConfig;\n    }\n\n    switch (field){\n      case 'amountLentCurve':\n        const [\n          curveAvgSlippage,\n          curveAvgBuyPrice,\n          curveTokenBalance,\n        ] = await Promise.all([\n          this.getCurveAvgSlippage(),\n          this.getCurveAvgBuyPrice([],account),\n          this.getCurveTokenBalance(account,true),\n        ]);\n\n        if (curveAvgBuyPrice && curveTokenBalance){\n          output = this.BNify(curveTokenBalance).times(curveAvgBuyPrice);\n          if (curveAvgSlippage){\n            output = output.minus(output.times(curveAvgSlippage));\n          }\n          // this.customLog('amountLentCurve',curveTokenBalance.toFixed(6),curveAvgBuyPrice.toFixed(6),curveAvgSlippage.toString(),output.toFixed(6));\n        }\n      break;\n      case 'earningsPercCurve':\n        let [amountLentCurve1,redeemableBalanceCurve] = await Promise.all([\n          this.loadAssetField('amountLentCurve',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalanceCurve',token,tokenConfig,account)\n        ]);\n\n        if (amountLentCurve1 && redeemableBalanceCurve && amountLentCurve1.gt(0) && redeemableBalanceCurve.gt(0)){\n          output = redeemableBalanceCurve.div(amountLentCurve1).minus(1).times(100);\n          // this.customLog('earningsPercCurve',redeemableBalanceCurve.toFixed(6),amountLentCurve1.toFixed(6),output.toFixed(6));\n        }\n      break;\n      case 'curveApy':\n        output = await this.getCurveAPY();\n      break;\n      case 'curveAvgSlippage':\n        output = await this.getCurveAvgSlippage();\n      break;\n      case 'redeemableBalanceCurve':\n        output = await this.getCurveRedeemableIdleTokens(account);\n        // this.customLog('earningsPercCurve',output.toFixed(6));\n      break;\n      case 'redeemableBalanceCounterCurve':\n        let [\n          curveApy,\n          amountLentCurve,\n          redeemableBalanceCurveStart\n        ] = await Promise.all([\n          this.loadAssetField('curveApy',token,tokenConfig,account),\n          this.loadAssetField('amountLentCurve',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalanceCurve',token,tokenConfig,account),\n        ]);\n\n        let redeemableBalanceCurveEnd = null;\n\n        if (redeemableBalanceCurveStart && curveApy && amountLentCurve){\n          const earningPerYear = amountLentCurve.times(curveApy.div(100));\n          redeemableBalanceCurveEnd = redeemableBalanceCurveStart.plus(earningPerYear);\n          // this.customLog('redeemableBalanceCounterCurve',amountLentCurve.toFixed(6),redeemableBalanceCurveStart.toFixed(6),redeemableBalanceCurveEnd.toFixed(6));\n        }\n\n        output = {\n          redeemableBalanceCurveEnd,\n          redeemableBalanceCurveStart\n        };\n      break;\n      case 'earningsPerc':\n        let [amountLent1,redeemableBalance1] = await Promise.all([\n          this.loadAssetField('amountLent',token,tokenConfig,account,false),\n          this.loadAssetField('redeemableBalance',token,tokenConfig,account,false)\n        ]);\n\n        if (amountLent1 && redeemableBalance1 && amountLent1.gt(0)){\n          output = redeemableBalance1.div(amountLent1).minus(1).times(100);\n        }\n      break;\n      case 'daysFirstDeposit':\n        const depositTimestamp = await this.loadAssetField('depositTimestamp',token,tokenConfig,account);\n        if (depositTimestamp){\n          const currTimestamp = parseInt(Date.now()/1000);\n          output = (currTimestamp-depositTimestamp)/86400;\n        }\n      break;\n      case 'pool':\n        if (Object.keys(govTokens).includes(token)){\n          output = await this.getGovTokenPool(token, govTokenAvailableTokens);\n        } else {\n          output = await this.getTokenPool(tokenConfig,addGovTokens);\n        }\n      break;\n      case 'userDistributionSpeed':\n        switch (token){\n          case 'COMP':\n            output = await this.getCompUserDistribution(account,govTokenAvailableTokens);\n          break;\n          case 'WMATIC':\n          case 'stkAAVE':\n            output = await this.getStkAaveUserDistribution(account,govTokenAvailableTokens);\n          break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getUserDistribution(account,govTokenAvailableTokens);\n          break;\n          default:\n          break;\n        }\n        if (output && !this.BNify(output).isNaN()){\n          output = this.BNify(output).div(1e18);\n          if (output){\n            output = this.fixDistributionSpeed(output,tokenConfig.distributionFrequency,tokenConfig.distributionMode);\n          }\n        }\n      break;\n      case 'idleDistribution':\n        const idleGovToken = this.getIdleGovToken();\n        const tokenName = this.getGlobalConfig(['governance','props','tokenName']);\n        const govTokenConfig = this.getGlobalConfig(['govTokens',tokenName]);\n        output = await idleGovToken.getSpeed(tokenConfig.idle.address);\n\n        if (output){\n\n          output = this.fixTokenDecimals(output,govTokenConfig.decimals);\n\n          const blocksPerYear = this.BNify(this.getGlobalConfig(['network','blocksPerYear']));\n          switch (govTokenConfig.distributionFrequency){\n            case 'day':\n              const blocksPerDay = blocksPerYear.div(365.242199);\n              output = output.times(blocksPerDay);\n            break;\n            case 'week':\n              const blocksPerWeek = blocksPerYear.div(52.1429);\n              output = output.times(blocksPerWeek);\n            break;\n            case 'month':\n              const blocksPerMonth = blocksPerYear.div(12);\n              output = output.times(blocksPerMonth);\n            break;\n            case 'year':\n              output = output.times(blocksPerYear);\n            break;\n            default:\n            break;\n          }\n        }\n      break;\n      case 'distributionSpeed':\n        const selectedTokenConfig = govTokenAvailableTokens[this.props.selectedToken];\n        switch (token){\n          case 'COMP':\n            output = await this.getCompDistribution(selectedTokenConfig);\n          break;\n          case 'WMATIC':\n          case 'stkAAVE':\n            output = await this.getStkAaveDistribution(selectedTokenConfig);\n          break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getSpeed(selectedTokenConfig.idle.address);\n          break;\n          default:\n          break;\n        }\n        if (output && !this.BNify(output).isNaN()){\n          output = this.BNify(output).div(1e18);\n        }\n      break;\n      case 'apr':\n        switch (token){\n          case 'COMP':\n            output = await this.getCompAvgApr(govTokenAvailableTokens);\n          break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getAvgApr(govTokenAvailableTokens);\n          break;\n          default:\n            const tokenAprs = await this.getTokenAprs(tokenConfig,false,addGovTokens);\n            if (tokenAprs && tokenAprs.avgApr !== null){\n              output = tokenAprs.avgApr;\n            }\n          break;\n        }\n      break;\n      case 'apy':\n        const tokenApys = await this.getTokenAprs(tokenConfig,false,addGovTokens);\n\n        // console.log('apr',token,tokenApys.avgApr ? tokenApys.avgApr.toFixed() : null,tokenApys.avgApy ? tokenApys.avgApy.toFixed() : null);\n\n        output = this.BNify(0);\n\n        if (tokenApys && !this.BNify(tokenApys.avgApy).isNaN()){\n          output = this.BNify(tokenApys.avgApy);\n\n          if (addCurveApy){\n            const curveAPY = await this.getCurveAPY();\n            if (curveAPY){\n              output = output.plus(curveAPY);\n            }\n          }\n        } else {\n\n        }\n\n        // console.log('apy - OUTPUT - ',output);\n      break;\n      case 'avgAPY':\n        const [\n          tokenPrice,\n          firstDepositTx,\n          days\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.getFirstDepositTx([token],account),\n          this.loadAssetField('daysFirstDeposit',token,tokenConfig,account)\n        ]);\n\n        if (tokenPrice && firstDepositTx && firstDepositTx[token]){\n          const tokenPriceFirstDeposit = await this.getIdleTokenPrice(tokenConfig,firstDepositTx[token].blockNumber);\n          output = this.BNify(tokenPrice).div(tokenPriceFirstDeposit).minus(1).times(365).div(days).times(100);\n        }\n      break;\n      case 'avgAPY_old':\n        const [\n          daysFirstDeposit,\n          earningsPerc\n        ] = await Promise.all([\n          this.loadAssetField('daysFirstDeposit',token,tokenConfig,account),\n          this.loadAssetField('earningsPerc',token,tokenConfig,account), // Take earnings perc instead of earnings\n        ]);\n\n        if (daysFirstDeposit && earningsPerc){\n          output = earningsPerc.times(365).div(daysFirstDeposit);\n        }\n      break;\n      case 'depositTimestamp':\n        const depositTimestamps = account ? await this.getDepositTimestamp([token],account) : false;\n        if (depositTimestamps && depositTimestamps[token]){\n          output = depositTimestamps[token];\n        }\n      break;\n      case 'amountLent':\n        output = account ? await this.getAmountDeposited(tokenConfig,account) : false;\n        // console.log('amountLent - OUTPUT - ',output);\n        // const amountLents = account ? await this.getAmountLent([token],account) : false;\n        // if (amountLents && amountLents[token]){\n        //   output = amountLents[token];\n        // }\n      break;\n      case 'tokenPrice':\n        if (Object.keys(govTokens).includes(token)){\n          const govTokenConfig = govTokens[token];\n          const DAITokenConfig = {\n            address:this.getContractByName('DAI')._address\n          };\n          try {\n            output = await this.getUniswapConversionRate(DAITokenConfig,govTokenConfig);\n          } catch (error) {\n\n          }\n          if (!output || this.BNify(output).isNaN()){\n            output = '-';\n          }\n        } else {\n          output = await this.getTokenPrice(tokenConfig.idle.token);\n        }\n      break;\n      case 'fee':\n        output = await this.getUserTokenFees(tokenConfig,account);\n      break;\n      case 'tokenBalance':\n        if (Object.keys(govTokens).includes(token)){\n          output = await this.getTokenBalance(token,account);\n          if (!output || output.isNaN()){\n            output = '-';\n          }\n        } else {\n          let tokenBalance = account ? await this.getTokenBalance(tokenConfig.token,account) : false;\n          if (!tokenBalance || tokenBalance.isNaN()){\n            tokenBalance = '-';\n          }\n          output = tokenBalance;\n        }\n      break;\n      case 'idleTokenBalance':\n        const idleTokenBalance = account ? await this.getTokenBalance(tokenConfig.idle.token,account) : false;\n        if (idleTokenBalance){\n          output = idleTokenBalance;\n        }\n      break;\n      case 'redeemableBalanceCounter':\n\n        // console.log('redeemableBalanceCounter - BEFORE',token,tokenConfig,account);\n\n        let [tokenAPY1,amountLent2,redeemableBalanceStart] = await Promise.all([\n          this.loadAssetField('apy',token,tokenConfig,account,false),\n          this.loadAssetField('amountLent',token,tokenConfig,account,false),\n          this.loadAssetField('redeemableBalance',token,tokenConfig,account,false),\n        ]);\n\n        // console.log('redeemableBalanceCounter - CALL - ',tokenAPY1,amountLent2,redeemableBalanceStart);\n\n        // debugger;\n\n        let redeemableBalanceEnd = redeemableBalanceStart;\n\n        if (redeemableBalanceStart && tokenAPY1 && amountLent2){\n          const earningPerYear = amountLent2.times(tokenAPY1.div(100));\n          redeemableBalanceEnd = redeemableBalanceStart.plus(earningPerYear);\n        }\n\n        output = {\n          redeemableBalanceEnd,\n          redeemableBalanceStart\n        };\n\n        // console.log('redeemableBalanceCounter - OUTPUT',token,parseFloat(redeemableBalanceStart),parseFloat(redeemableBalanceEnd),output);\n      break;\n      case 'redeemableBalance':\n        if (Object.keys(govTokens).includes(token)){\n          const govTokenConfig = govTokens[token];\n          output = await this.getGovTokenUserBalance(govTokenConfig,account,govTokenAvailableTokens);\n        } else {\n          let [\n            idleTokenPrice1,\n            idleTokenBalance2,\n            govTokensBalance\n          ] = await Promise.all([\n            this.getIdleTokenPrice(tokenConfig),\n            this.loadAssetField('idleTokenBalance',token,tokenConfig,account),\n            addGovTokens ? this.getGovTokensUserTotalBalance(account,govTokenAvailableTokens,token) : null,\n          ]);\n\n          // console.log('redeemableBalance - BEFORE - ',idleTokenBalance2,idleTokenPrice1);\n\n          if (idleTokenBalance2 && idleTokenPrice1){\n            const tokenBalance = idleTokenBalance2.times(idleTokenPrice1);\n            let redeemableBalance = tokenBalance;\n            if (govTokensBalance && !this.BNify(govTokensBalance).isNaN()){\n              redeemableBalance = redeemableBalance.plus(this.BNify(govTokensBalance));\n            }\n            output = redeemableBalance;\n            // console.log('redeemableBalance',token,idleTokenBalance2.toFixed(4),idleTokenPrice1.toFixed(4),tokenBalance.toFixed(4),govTokensBalance ? govTokensBalance.toFixed(4) : null,output.toFixed(4));\n          }\n          // console.log('redeemableBalance - OUTPUT - ',output);\n        }\n      break;\n      case 'earningsCurve':\n        let [amountLentCurve2,redeemableBalanceCurve1] = await Promise.all([\n          this.loadAssetField('amountLentCurve',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalanceCurve',token,tokenConfig,account)\n        ]);\n\n        if (!amountLentCurve2){\n          amountLentCurve2 = this.BNify(0);\n        }\n\n        if (!redeemableBalanceCurve1){\n          redeemableBalanceCurve1 = this.BNify(0);\n        }\n\n        output = redeemableBalanceCurve1.minus(amountLentCurve2);\n      break;\n      case 'earnings':\n        let [amountLent,redeemableBalance2] = await Promise.all([\n          this.loadAssetField('amountLent',token,tokenConfig,account,false),\n          this.loadAssetField('redeemableBalance',token,tokenConfig,account,false)\n        ]);\n\n        if (!amountLent){\n          amountLent = this.BNify(0);\n        }\n        if (!redeemableBalance2){\n          redeemableBalance2 = this.BNify(0);\n        }\n\n        output = redeemableBalance2.minus(amountLent);\n\n        // console.log('earnings',token,amountLent.toFixed(5),redeemableBalance2.toFixed(5),output.toFixed(5));\n\n        if (output.lt(this.BNify(0))){\n          output = this.BNify(0);\n        }\n      break;\n      default:\n      break;\n    }\n\n    return output;\n  }\n  getIdleTokenSupply = async (idleToken,blockNumber='latest') => {\n    const cachedDataKey = `idleTokenSupply_${idleToken}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let idleTokenSupply = await this.getTokenTotalSupply(idleToken,blockNumber);\n    if (idleTokenSupply){\n      return this.BNify(idleTokenSupply);\n    }\n\n    return null;\n  }\n  getIdleTokenPriceWithFee = async (tokenConfig,account,blockNumber='latest') => {\n    account = account || this.props.account;\n    if (!account){\n      return null;\n    }\n\n    let [\n      fee,\n      tokenPrice,\n      userAvgPrice\n    ] = await Promise.all([\n      this.genericContractCallCached(tokenConfig.idle.token, 'fee', [], {}, blockNumber),\n      this.genericContractCallCached(tokenConfig.idle.token, 'tokenPrice', [], {}, blockNumber),\n      this.genericContractCallCached(tokenConfig.idle.token, 'userAvgPrices', [account], {}, blockNumber)\n    ]);\n    \n    fee = this.BNify(fee);\n    tokenPrice = this.BNify(tokenPrice);\n    userAvgPrice = this.BNify(userAvgPrice);\n\n    if (!tokenPrice.isNaN() && !userAvgPrice.isNaN() && !fee.isNaN() && !this.BNify(userAvgPrice).eq(0) && this.BNify(tokenPrice).gt(this.BNify(userAvgPrice))){\n      const priceWFee = this.integerValue(this.BNify(tokenPrice).minus(parseInt(fee.div(1e5).times(tokenPrice.minus(userAvgPrice)))));\n      return priceWFee;\n    }\n\n    return tokenPrice;\n  }\n  getIdleTokenPrice = async (tokenConfig,blockNumber='latest',timestamp=false) => {\n\n    const cachedDataKey = `idleTokenPrice_${tokenConfig.idle.token}_${blockNumber}`;\n    // if (blockNumber !== 'latest'){\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n    // }\n\n    let decimals = tokenConfig.decimals;\n\n    let tokenPrice = await this.genericContractCallCached(tokenConfig.idle.token,'tokenPrice',[],{},blockNumber);\n\n    // If price is NaN try to take it from APIs\n    if (!tokenPrice && timestamp){\n      const isRisk = this.props.selectedStrategy === 'risk';\n      const startTimestamp = parseInt(timestamp)-(60*60);\n      const endTimestamp = parseInt(timestamp)+(60*60);\n      const tokenData = await this.getTokenApiData(tokenConfig.address,isRisk,startTimestamp,endTimestamp,true);\n\n      let beforePrice = {\n        data:null,\n        timeDiff:null\n      };\n\n      let afterPrice = {\n        data:null,\n        timeDiff:null\n      };\n\n      tokenData.forEach( d => {\n        const timeDiff = Math.abs(parseInt(d.timestamp)-parseInt(timestamp));\n        if (parseInt(d.timestamp)<parseInt(timestamp) && (!beforePrice.timeDiff || timeDiff<beforePrice.timeDiff)){\n          beforePrice.timeDiff = timeDiff;\n          beforePrice.data = d;\n        }\n\n        if (parseInt(d.timestamp)>parseInt(timestamp) && !afterPrice.timeDiff){\n          afterPrice.timeDiff = timeDiff;\n          afterPrice.data = d;\n        }\n      });\n\n      // Take before and after and calculate correct tokenPrice based from price acceleration\n      if (beforePrice.data && afterPrice.data){\n        const tokenPriceBefore = this.BNify(beforePrice.data.idlePrice);\n        const tokenPriceAfter = this.BNify(afterPrice.data.idlePrice);\n        const timeBefore = this.BNify(beforePrice.data.timestamp);\n        const timeAfter = this.BNify(afterPrice.data.timestamp);\n        const timeDiff = timeAfter.minus(timeBefore);\n        const priceDiff = tokenPriceAfter.minus(tokenPriceBefore);\n        const priceAcceleration = priceDiff.div(timeDiff);\n        const timeDiffFromBeforePrice = this.BNify(timestamp).minus(timeBefore);\n        tokenPrice = tokenPriceBefore.plus(priceAcceleration.times(timeDiffFromBeforePrice));\n      }\n    }\n\n    // Fix token price decimals\n    if (tokenPrice && !this.BNify(tokenPrice).isNaN()){\n      tokenPrice = this.fixTokenDecimals(tokenPrice,decimals);\n    }\n\n    // If price is NaN then return 1\n    if (!tokenPrice || this.BNify(tokenPrice).isNaN() || this.BNify(tokenPrice).lt(1)){\n      tokenPrice = this.BNify(1);\n    }\n\n    // if (blockNumber !== 'latest'){\n      this.setCachedDataWithLocalStorage(cachedDataKey,tokenPrice);\n    // }\n\n    // this.customLog('getIdleTokenPrice',tokenPrice.toString());\n\n    return tokenPrice;\n  }\n  clearCachedData = (clear_all=false) => {\n    if (this.props.clearCachedData && typeof this.props.clearCachedData === 'function'){\n      // this.customLog('clearCachedData',this.props.clearCachedData,typeof this.props.clearCachedData === 'function');\n      this.props.clearCachedData(null,clear_all);\n    } else {\n      // this.customLog('clearCachedData - Function not found!');\n    }\n    return false;\n  }\n  /*\n  Cache data locally for 3 minutes\n  */\n  setCachedData = (key,data,TTL=180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function'){\n      this.props.setCachedData(key,data,TTL);\n    }\n    return data;\n  }\n  setCachedDataWithLocalStorage = (key,data,TTL=180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function'){\n      this.props.setCachedData(key,data,TTL,true);\n    }\n    return data;\n  }\n  getCachedDataWithLocalStorage = (key,defaultValue=null) => {\n    return this.getCachedData(key,defaultValue,true);\n  }\n  getCachedData = (key,defaultValue=null,useLocalStorage=false) => {\n    let cachedData = null;\n    key = key.toLowerCase();\n    // Get cache from current session\n    if (this.props.cachedData && this.props.cachedData[key]){\n      cachedData = this.props.cachedData[key];\n    // Get cache from local storage\n    } else if (useLocalStorage) {\n      cachedData = this.getStoredItem('cachedData');\n      if (cachedData && cachedData[key]){\n        cachedData = cachedData[key];\n      } else {\n        cachedData = null;\n      }\n    }\n\n    const cachedDataValid = cachedData && cachedData.data && (cachedData.expirationDate === null || cachedData.expirationDate>=parseInt(Date.now()/1000));\n\n    // if (!cachedDataValid){\n    //   console.log('getCachedData - NOT VALID - ',key,(cachedData ? cachedData.expirationDate-parseInt(Date.now()/1000) : null));\n    // }\n\n    if (cachedDataValid){\n      return cachedData.data;\n    }\n    return defaultValue;\n  }\n  getUserPoolShare = async (walletAddr,tokenConfig) => {\n    const [\n      idleTokensBalance,\n      idleTokensTotalSupply\n    ] = await Promise.all([\n      this.getTokenBalance(tokenConfig.idle.token,walletAddr,false),\n      this.getTokenTotalSupply(tokenConfig.idle.token)\n    ]);\n\n    let userShare = this.BNify(0);\n    if (this.BNify(idleTokensBalance).gt(0) && this.BNify(idleTokensTotalSupply).gt(0)){\n      userShare = this.BNify(idleTokensBalance).div(this.BNify(idleTokensTotalSupply));\n    }\n\n    return userShare;\n  }\n  openWindow = (url) => {\n    return window.open(url,'_blank','noopener');\n  }\n  getActiveCoverages = async (account=null) => {\n    const activeCoverages = [];\n    account = account || this.props.account;\n\n    if (!account){\n      return activeCoverages;\n    }\n\n    const currTimestamp = parseInt(Date.now()/1000);\n\n    const coverProtocolConfig = this.getGlobalConfig(['tools','coverProtocol']);\n    if (coverProtocolConfig.enabled){\n      await this.asyncForEach(coverProtocolConfig.props.coverages, async (coverage) => {\n        const token = 'Claim';\n        const coverageTokens = coverage.tokens;\n        const tokenConfig = coverageTokens[token];\n        // Initialize coverage contract\n        await this.props.initContract(tokenConfig.name,tokenConfig.address,tokenConfig.abi);\n        // Take balance\n        const balance = await this.getTokenBalance(tokenConfig.name,account);\n        if (balance && balance.gt(0)){\n          const actionLabel = 'File Claim';\n          const collateral = coverage.collateral;\n          const protocolName = coverProtocolConfig.label;\n          const protocolImage = coverProtocolConfig.image;\n          const actionUrl = coverProtocolConfig.fileClaimUrl;\n          const status = coverage.expirationTimestamp<=currTimestamp ? 'Expired' : 'Active';\n          const actionDisabled = status === 'Expired';\n          const expirationDate = moment(coverage.expirationTimestamp*1000).utc().format('YYYY-MM-DD HH:mm:ss')+' UTC';\n          activeCoverages.push({\n            token,\n            status,\n            balance,\n            actionUrl,\n            collateral,\n            actionLabel,\n            protocolName,\n            protocolImage,\n            expirationDate,\n            actionDisabled\n          });\n        }\n      });\n    }\n    const nexusMutualConfig = this.getGlobalConfig(['tools','nexusMutual']);\n    if (nexusMutualConfig.enabled){\n      const nexusMutualCoverages = await this.getNexusMutualCoverages(account);\n      nexusMutualCoverages.forEach( coverage => {\n        const actionLabel = 'Claim';\n        const balance = coverage.sumAssured;\n        const token = coverage.coverAssetConfig.token;\n        const collateral = coverage.yieldTokenConfig.token;\n        const portfolioCoverage = coverage.portfolioCoverage;\n        const collateralIcon = `images/tokens/${collateral}.svg`;\n        const actionDisabled = !coverage.incident && !coverage.claimId;\n        const protocolName = this.getGlobalConfig(['insurance','nexusMutual','label']);\n        const protocolImage = this.getGlobalConfig(['insurance','nexusMutual','image']);\n        const protocolImageDark = this.getGlobalConfig(['insurance','nexusMutual','imageDark']);\n        const expirationDate = moment(coverage.coverDetails.validUntil*1000).utc().format('YYYY-MM-DD HH:mm:ss')+' UTC';\n        const status = coverage.claimId ? 'Claimed' : parseInt(coverage.coverDetails.validUntil)<=currTimestamp ? 'Expired' : 'Active';\n        const actionUrl = `${window.location.origin}/#${this.getGlobalConfig(['dashboard','baseRoute'])}/tools/${nexusMutualConfig.route}/${coverage.yieldTokenConfig.token}/claim`;\n        activeCoverages.push({\n          token,\n          status,\n          balance,\n          actionUrl,\n          collateral,\n          actionLabel,\n          protocolName,\n          protocolImage,\n          expirationDate,\n          actionDisabled,\n          collateralIcon,\n          portfolioCoverage,\n          protocolImageDark\n        });\n      });\n    }\n\n    return activeCoverages;\n  }\n  getNexusMutualCoverages = async (account) => {\n    const nexusMutualConfig = this.getGlobalConfig(['tools','nexusMutual']);\n\n    const fromBlock = nexusMutualConfig.directProps.startBlock;\n    const feeDistributorConfig = nexusMutualConfig.directProps.contractInfo;\n    const incidentsInfo = nexusMutualConfig.directProps.incidentsInfo;\n    \n    await Promise.all([\n      this.props.initContract(incidentsInfo.name,incidentsInfo.address,incidentsInfo.abi),\n      this.props.initContract(feeDistributorConfig.name,feeDistributorConfig.address,feeDistributorConfig.abi),\n    ]);\n\n    const [\n      coverBoughtEvents,\n      claimSubmittedEvents,\n    ] = await Promise.all([\n       this.getContractEvents(feeDistributorConfig.name,'CoverBought',{fromBlock, toBlock:'latest',filter:{buyer:account}}),\n       this.getContractEvents(feeDistributorConfig.name,'ClaimSubmitted',{fromBlock, toBlock:'latest',filter:{buyer:account}})\n    ]);\n\n    const nexusMutualCoverages = [];\n\n    await this.asyncForEach(coverBoughtEvents,async (cover) => {\n    // coverBoughtEvents.forEach( cover => {\n      const coverId = parseInt(cover.returnValues.coverId);\n      const claimSubmittedEvent = claimSubmittedEvents.find( claim => parseInt(claim.returnValues.coverId)===coverId );\n      const [\n        coverDetails,\n        incidentEvents\n      ] = await Promise.all([\n        this.genericContractCall(feeDistributorConfig.name,'getCover',[coverId]),\n        this.getContractEvents(incidentsInfo.name,'IncidentAdded',{fromBlock:cover.blockNumber, toBlock:'latest',filter:{productId:cover.contractAddress}})\n      ]);\n\n      if (!coverDetails){\n        return false;\n      }\n\n      // Check if the cover matches any incidents\n      const matchedIncidents = incidentEvents.filter(incident => {\n        return incident.returnValues.productId === coverDetails.contractAddress &&\n        this.BNify(incident.blockNumber).gt(cover.blockNumber)  &&\n        this.BNify(incident.returnValues.incidentDate).lt(coverDetails.validUntil) &&\n        parseInt(coverDetails.validUntil) + nexusMutualConfig.directProps.yieldTokenCoverGracePeriod >= Date.now() / 1000\n      });\n\n      // If multiple incidents match, return the one with the highest priceBefore\n      const matchedIncident = matchedIncidents.reduce((prev, curr) => {\n        if (!prev) {\n          return curr;\n        }\n\n        if (this.BNify(curr.returnValues.priceBefore).gt(prev.returnValues.priceBefore)) {\n          return curr;\n        }\n        return prev;\n      }, null);\n\n      const yieldTokenConfig = Object.values(nexusMutualConfig.props.availableTokens).find( tokenConfig => tokenConfig.address.toLowerCase() === coverDetails.contractAddress.toLowerCase() );\n      const sumAssured = this.fixTokenDecimals(coverDetails.sumAssured,yieldTokenConfig.decimals);\n      const coverAssetConfig = Object.values(yieldTokenConfig.underlying).find( underlyingConfig => underlyingConfig.address.toLowerCase() === coverDetails.coverAsset.toLowerCase() );\n      const expiryDate = this.strToMoment(coverDetails.validUntil*1000).format('YYYY-MM-DD');\n\n      const claimId = claimSubmittedEvent ? claimSubmittedEvent.returnValues.claimId : null;\n      const payoutOutcome = claimId ? await this.genericContractCall(feeDistributorConfig.name,'getPayoutOutcome',[claimId]) : null;\n      const label = `${yieldTokenConfig.name} - ${sumAssured.toFixed(4)} ${coverAssetConfig.token} - Exp. ${expiryDate}`;\n      const value = coverId;\n\n      let claimedAmount = null;\n      if (claimSubmittedEvent){\n        const claimTxReceipt = await this.getTransactionReceipt(claimSubmittedEvent.transactionHash);\n        const claimedAmountLog = claimTxReceipt ? claimTxReceipt.logs.find( log => log.address.toLowerCase() === coverAssetConfig.address.toLowerCase() ) : null;\n        claimedAmount = claimedAmountLog ? this.fixTokenDecimals(parseInt(claimedAmountLog.data,16),coverAssetConfig.decimals) : this.BNify(0);\n      }\n\n      const claimableAmount = this.fixTokenDecimals(coverDetails.sumAssured,coverAssetConfig.decimals);\n\n      const claimablePrice = matchedIncident ? this.BNify(matchedIncident.returnValues.priceBefore).times(0.9) : this.BNify(0);\n      const maxCoveredAmount = claimablePrice.gt(0) ? this.BNify(coverDetails.sumAssured).div(claimablePrice) : this.BNify(0);\n      const coveredTokenAmount = this.normalizeTokenAmount(maxCoveredAmount,coverAssetConfig.decimals);\n\n      let [\n        tokenPrice,\n        idleTokenBalance\n      ] = await Promise.all([\n        this.getTokenPrice(yieldTokenConfig.token),\n        this.getTokenBalance(yieldTokenConfig.token,account,false)\n      ]);\n\n      tokenPrice = this.fixTokenDecimals(tokenPrice,yieldTokenConfig.decimals);\n      idleTokenBalance = this.fixTokenDecimals(idleTokenBalance,yieldTokenConfig.decimals);\n      const tokenBalance = idleTokenBalance.times(tokenPrice);\n      const portfolioCoverage = tokenBalance.gt(0) ? sumAssured.div(tokenBalance).times(100).toFixed(2)+'%' : 'N/A';\n\n      // console.log('portfolioCoverage',sumAssured.toFixed(),idleTokenBalance.toFixed(),tokenPrice.toFixed(),portfolioCoverage.toFixed());\n\n      nexusMutualCoverages.push({\n        label,\n        value,\n        claimId,\n        sumAssured,\n        coverDetails,\n        claimedAmount,\n        payoutOutcome,\n        claimableAmount,\n        maxCoveredAmount,\n        yieldTokenConfig,\n        coverAssetConfig,\n        portfolioCoverage,\n        coveredTokenAmount,\n        incident: matchedIncident ? {...matchedIncident, id: incidentEvents.findIndex(x => x.date === matchedIncident.date)} : null\n      });\n    });\n\n    return nexusMutualCoverages;\n  }\n  getBatchedDepositExecutions = async (contractAddress) => {\n    const requiredNetwork = this.getRequiredNetworkId();\n    const etherscanInfo = this.getGlobalConfig(['network','providers','etherscan']);\n    if (etherscanInfo.enabled && etherscanInfo.endpoints[requiredNetwork]){\n      const etherscanApiUrl = etherscanInfo.endpoints[requiredNetwork];\n      const etherscanEndpoint = `${etherscanApiUrl}?&apikey=${etherscanInfo.key}&module=account&action=tokentx&address=${contractAddress}&sort=desc`;\n      const transactions = await this.makeCachedRequest(etherscanEndpoint,1800,true);\n      if (transactions && typeof transactions.result === 'object'){\n        return transactions.result.filter( tx => tx.from === '0x0000000000000000000000000000000000000000' && tx.to.toLowerCase() === contractAddress.toLowerCase() );\n      }\n    }\n    return null;\n  }\n  getBatchedDeposits = async (account=null,filter_by_status=null) => {\n    account = account || this.props.account;\n    if (!account){\n      return null;\n    }\n\n    const batchDepositConfig = this.getGlobalConfig(['tools','batchDeposit']);\n    if (!batchDepositConfig.enabled){\n      return null;\n    }\n\n    const cachedDataKey = `batchedDeposits_${account}_${filter_by_status}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n\n    const batchedDeposits = {};\n    const availableTokens = batchDepositConfig.props.availableTokens;\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const migrationContract = tokenConfig.migrationContract;\n      await this.props.initContract(migrationContract.name,migrationContract.address,migrationContract.abi);\n      const currBatchIndex = await this.genericContractCall(migrationContract.name,'currBatch');\n      for (let batchIndex = 0; batchIndex <= parseInt(currBatchIndex) ; batchIndex++){\n        let [\n          batchExecutions,\n          batchTotal,\n          batchRedeem,\n          batchDeposit\n        ] = await Promise.all([\n          this.getBatchedDepositExecutions(migrationContract.address),\n          this.genericContractCall(migrationContract.name,'batchTotals',[batchIndex]),\n          this.genericContractCall(migrationContract.name,'batchRedeemedTotals',[batchIndex]),\n          this.genericContractCall(migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n        ]);\n\n        console.log(`Batch #${batchIndex} - ${batchTotal} - ${batchRedeem} - ${batchDeposit}`);\n\n        let batchTotals = null;\n        let batchRedeems = null;\n        let batchDeposits = null;\n        if (batchTotal && batchTotal !== null){\n          batchTotals = this.fixTokenDecimals(batchTotal,tokenConfig.decimals);\n        }\n        if (batchDeposit !== null){\n          batchRedeem = this.fixTokenDecimals(batchRedeem,18);\n          batchDeposit = this.fixTokenDecimals(batchDeposit,tokenConfig.decimals);\n          if (batchDeposit.gt(0)){\n            batchDeposits = batchDeposit;\n\n            // Calculate redeemable idleTokens\n            batchRedeems = batchDeposit.times(batchRedeem).div(batchTotals);\n            if (batchRedeems.gt(batchRedeem)){\n              batchRedeems = batchRedeem;\n            }\n\n            const status = batchIndex < currBatchIndex && batchRedeems.gt(0) ? 'executed' : 'pending';\n\n            if (filter_by_status !== null && filter_by_status.toLowerCase() !== status){\n              return;\n            }\n\n            const lastExecution = batchExecutions && batchExecutions.length ? batchExecutions[0] : null;\n\n            batchedDeposits[token] = {\n              status,\n              batchTotals,\n              batchRedeems,\n              batchDeposits,\n              lastExecution\n            };\n          }\n        }\n      }\n    });\n\n    return this.setCachedData(cachedDataKey,batchedDeposits);\n  }\n  getETHBalance = async (walletAddr,fixDecimals=true,blockNumber='latest') => {\n    if (!walletAddr){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `ethBalance_${walletAddr}_${fixDecimals}_${blockNumber}`;\n    if (blockNumber !== 'latest'){\n      const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.BNify(cachedData).isNaN()){\n        return this.BNify(cachedData);\n      }\n    }\n\n    let tokenBalance = await this.props.web3.eth.getBalance(walletAddr);\n\n    if (tokenBalance){\n      if (fixDecimals){\n        tokenBalance = this.fixTokenDecimals(tokenBalance,18);\n      }\n\n      tokenBalance = this.BNify(tokenBalance);\n\n      // Set cached data\n      if (!tokenBalance.isNaN()){\n        if (blockNumber !== 'latest'){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,tokenBalance);\n        } else {\n          return tokenBalance;\n        }\n      }\n    }\n    return null;\n  }\n  getTokenBalance = async (contractName,walletAddr,fixDecimals=true,blockNumber='latest') => {\n    if (!walletAddr){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenBalance_${contractName}_${walletAddr}_${fixDecimals}_${blockNumber}`;\n    if (blockNumber !== 'latest'){\n      const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.BNify(cachedData).isNaN()){\n        return this.BNify(cachedData);\n      }\n    }\n\n    let [\n      tokenDecimals,\n      tokenBalance\n    ] = await Promise.all([\n      this.getTokenDecimals(contractName),\n      this.getContractBalance(contractName,walletAddr,blockNumber)\n    ]);\n\n    if (tokenBalance){\n      if (fixDecimals){\n        tokenBalance = this.fixTokenDecimals(tokenBalance,tokenDecimals);\n      }\n\n      tokenBalance = this.BNify(tokenBalance);\n\n      // Set cached data\n      if (!tokenBalance.isNaN()){\n        if (blockNumber !== 'latest'){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,tokenBalance,30);\n        } else {\n          return tokenBalance;\n        }\n      }\n    } else {\n      this.customLogError('Error on getting balance for ',contractName);\n    }\n    return null;\n  }\n  copyToClipboard = (copyText) => {\n    if (typeof copyText.select === 'function'){\n      copyText.select();\n      copyText.setSelectionRange(0, 99999); // Select\n      const res = document.execCommand(\"copy\");\n      copyText.setSelectionRange(0, 0); // Deselect\n      return res;\n    }\n    return false;\n  }\n  loadScript = (url,props,callback) => {\n    const script = document.createElement(\"script\");\n    script.src = url;\n\n    // Append props\n    if (props){\n      Object.keys(props).forEach((attr,i) => {\n        script[attr] = props[attr];\n      });\n    }\n\n    if (typeof callback === 'function'){\n      if (script.readyState) {  // only required for IE <9\n        script.onreadystatechange = function() {\n          if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n            script.onreadystatechange = null;\n            callback();\n          }\n        };\n      } else {  //Others\n        script.onload = callback;\n      }\n    }\n\n    if (!script.id || !document.getElementById(script.id)){\n      document.body.appendChild(script);\n    }\n  }\n  isValidJSON = str => {\n    try {\n      JSON.parse(str);\n    } catch (e) {\n      return false;\n    }\n    return true;\n  }\n  checkAddress = (address) => {\n    return address ? address.match(/^0x[a-fA-F0-9]{40}$/) !== null : false;\n  }\n  getTokenTotalSupply = async (contractName,blockNumber='latest') => {\n    const cachedDataKey = `totalSupply_${contractName}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const totalSupply = await this.genericContractCall(contractName, 'totalSupply', [], {}, blockNumber);\n    return this.setCachedDataWithLocalStorage(cachedDataKey,totalSupply);\n  }\n  getTokenPrice = async (contractName,blockNumber='latest') => {\n    const cachedDataKey = `tokenPrice_${contractName}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const tokenPrice = await this.genericContractCall(contractName,'tokenPrice',[],{},blockNumber);\n    return this.setCachedDataWithLocalStorage(cachedDataKey,tokenPrice,60);\n  }\n  getContractBalance = async (contractName,address,blockNumber='latest') => {\n    address = address ? address : this.props.tokenConfig.idle.address;\n    const cachedDataKey = `balanceOf_${contractName}_${address}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n    const balance = await this.genericContractCall(contractName, 'balanceOf', [address], {}, blockNumber);\n    return this.setCachedDataWithLocalStorage(cachedDataKey,balance,30);\n  }\n  getProtocolBalance = async (contractName,address) => {\n    return await this.getContractBalance(contractName,address);\n  }\n  getAprs = async (contractName) => {\n    const cachedDataKey = `getAprs_${contractName}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      // console.log('getAprs - CACHED - ',cachedData);\n      return typeof cachedData === 'object' ? cachedData : JSON.parse(cachedData);\n    }\n\n    contractName = contractName ? contractName : this.props.tokenConfig.idle.token;\n    const aprs = await this.genericContractCall(contractName, 'getAPRs');\n    if (aprs){\n      const result = {\n        aprs:aprs[1],\n        addresses:aprs[0]\n      };\n      return this.setCachedDataWithLocalStorage(cachedDataKey,result);\n    }\n    return null;\n  }\n  genericIdleCall = async (methodName, params = [], callParams = {}) => {\n    return await this.genericContractCall(this.props.tokenConfig.idle.token, methodName, params, callParams).catch(err => {\n      this.customLogError('Generic Idle call err:', err);\n    });\n  }\n  estimateGas = async (contractName, methodName, params = [], callParams = {}) => {\n    let contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLogError('Wrong contract name', contractName);\n      return null;\n    }\n\n    return await contract.methods[methodName](...params).estimateGas(callParams);\n  }\n  getTxReceipt = async (txHash,web3=null) => {\n    web3 = web3 || this.props.web3;\n    if (!web3 || !web3.eth){\n      return null;\n    }\n    return await (new Promise( async (resolve, reject) => {\n      web3.eth.getTransactionReceipt(txHash,(err,tx)=>{\n        if (err){\n          reject(err);\n        }\n        resolve(tx);\n      });\n    }));\n  }\n  getTxDecodedLogs = async (tx,logAddr,decodeLogs,storedTx) => {\n\n    let txReceipt = storedTx && storedTx.txReceipt ? storedTx.txReceipt : null;\n\n    if (!txReceipt){\n      txReceipt = await (new Promise( async (resolve, reject) => {\n        this.props.web3.eth.getTransactionReceipt(tx.hash,(err,tx)=>{\n          if (err){\n            reject(err);\n          }\n          resolve(tx);\n        });\n      }));\n\n    }\n\n    if (!txReceipt){\n      return null;\n    }\n\n    const internalTransfers = txReceipt.logs.filter((tx) => { return tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${logAddr}`; });\n\n    if (!internalTransfers.length){\n      return null;\n    }\n\n    try {\n      return [\n        txReceipt,\n        this.props.web3.eth.abi.decodeLog(decodeLogs,internalTransfers[0].data,internalTransfers[0].topics)\n      ];\n    } catch (error) {\n      return null;\n    }\n  }\n  blocksToSeconds = (blocks) => {\n    const blocksPerSeconds = this.BNify(this.getGlobalConfig(['network','blocksPerYear'])).div(365.2422).div(86400);\n    return this.BNify(blocks).div(blocksPerSeconds);\n  }\n  getBlockNumber = async () => {\n    if (!this.props.web3){\n      return false;\n    }\n    return await this.props.web3.eth.getBlockNumber();\n  }\n  getBlockInfo = async (blockNumber) => {\n    const cachedDataKey = `getBlockInfo_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n    const blockInfo = await this.props.web3.eth.getBlock(blockNumber);\n    return blockInfo ? this.setCachedDataWithLocalStorage(cachedDataKey,blockInfo,null) : null;\n  }\n  getContractPastEvents = async (contractName,methodName,params = {}) => {\n    if (!contractName){\n      return null;\n    }\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLogError('Wrong contract name', contractName);\n      return null;\n    }\n\n    // console.log('getContractPastEvents',contractName,methodName);\n\n    return await contract.getPastEvents(methodName, params);\n  }\n\n  genericContractCallCached = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest', TTL=180) => {\n    const cachedDataKey = `genericContractCall_${contractName}_${methodName}_${JSON.stringify(params)}_${JSON.stringify(callParams)}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    // Store forever for past block\n    if (blockNumber !== 'latest'){\n      TTL = null;\n    }\n\n    const result = await this.genericContractCall(contractName, methodName, params, callParams, blockNumber);\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey,result,TTL);\n  }\n\n  cachedContractCall = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest', TTL=180) => {\n    return await this.genericContractCallCached(contractName, methodName, params, callParams, blockNumber, TTL);\n  }\n\n  genericContractCall = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest', count=0) => {\n\n    if (!contractName){\n      return null;\n    }\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLog('Wrong contract name', contractName);\n      return null;\n    }\n\n    if (!contract.methods[methodName]) {\n      this.customLog('Wrong method name', methodName);\n      return null;\n    }\n\n    blockNumber = blockNumber !== 'latest' && blockNumber && !isNaN(blockNumber) ? parseInt(blockNumber) : blockNumber;\n\n    try{\n      // this.customLog(`genericContractCall - ${contractName} - ${methodName}`);\n      const value = await contract.methods[methodName](...params).call(callParams,blockNumber).catch(error => {\n        this.customLog(`${contractName} contract method ${methodName} error: `, error);\n      });\n      // if (!value){\n      //   console.log('genericContractCall - NULL - ',contractName,methodName,params);\n      // }\n      // console.log(`${moment().format('HH:mm:ss')} - genericContractCall (${blockNumber}) - ${contractName} - ${methodName} (${JSON.stringify(params)}) : ${value}`);\n      return value;\n    } catch (error) {\n      // console.log('genericContractCall ERROR - ',contractName,methodName,params);\n      this.customLog(\"genericContractCall error\", error);\n      // if (count<=3){\n      //   await this.asyncTimeout(1000);\n      //   return await this.genericContractCall(contractName, methodName, params, callParams, blockNumber, count+1);\n      // }\n    }\n  }\n  asyncForEach = async (array, callback, async=true) => {\n    let output = [];\n    if (async){\n      output = await Promise.all(array.map( (c,index) => {\n        return callback(c, index, array);\n      }));\n    } else {\n      for (let index = 0; index < array.length; index++) {\n        output.push(await callback(array[index], index, array));\n      }\n    }\n    return output;\n  }\n  apr2apy = (apr) => {\n    return (this.BNify(1).plus(this.BNify(apr).div(365))).pow(365).minus(1);\n  }\n  getUnlentBalance = async (tokenConfig) => {\n    let unlentBalance = await this.getProtocolBalance(tokenConfig.token,tokenConfig.idle.address);\n    if (unlentBalance){\n      unlentBalance = this.fixTokenDecimals(unlentBalance,tokenConfig.decimals);\n    }\n    return unlentBalance;\n  }\n  getTokenPool = async (tokenConfig,addGovTokens=true) => {\n    // Check for cached data\n    const cachedDataKey = `tokenPool_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN() ) {\n      return this.BNify(cachedData);\n    }\n\n    const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,addGovTokens);\n    if (tokenAllocation && tokenAllocation.totalAllocationWithUnlent){\n      const tokenPool = tokenAllocation.totalAllocationWithUnlent;\n      if (!this.BNify(tokenPool).isNaN()){\n        return this.setCachedDataWithLocalStorage(cachedDataKey,tokenPool);\n      }\n    }\n\n    return null;\n  }\n  getLastAllocations = async (tokenConfig) => {\n    if (!tokenConfig.idle){\n      return false;\n    }\n\n    const aprs = await this.getAprs(tokenConfig.idle.token);\n    const allAvailableTokens = aprs ? aprs.addresses : null;\n    if (allAvailableTokens){\n      const tokenAllocations = await this.asyncForEach(allAvailableTokens, async (protocolAddr,index) => {\n        return await this.genericContractCall(tokenConfig.idle.token, 'lastAllocations',[index]);\n      });\n      return allAvailableTokens.reduce( (lastAllocations,protocolAddr,index) => {\n        lastAllocations[protocolAddr.toLowerCase()] = tokenAllocations[index];\n        return lastAllocations;\n      },{});\n    }\n\n    return {};\n  }\n  getTokenAllocation = async (tokenConfig,protocolsAprs=false,addGovTokens=true) => {\n    \n    if (!tokenConfig.idle){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenAllocation_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n\n    const tokenAllocation = {\n      avgApr: null,\n      unlentBalance:null,\n      totalAllocation:null,\n      protocolsAllocations:null,\n      protocolsAllocationsPerc:null,\n      totalAllocationConverted:null,\n      totalAllocationWithUnlent:null,\n      totalAllocationWithUnlentConverted:null,\n    };\n\n    const protocolsAllocations = {};\n    const protocolsAllocationsPerc = {};\n\n    let [\n      unlentBalance,\n      tokenPrice,\n      lastAllocations,\n      tokenUsdConversionRate,\n      totalSupply,\n      govTokensBalances,\n    ] = await Promise.all([\n      this.getUnlentBalance(tokenConfig),\n      this.getIdleTokenPrice(tokenConfig),\n      this.getLastAllocations(tokenConfig),\n      this.getTokenConversionRate(tokenConfig,false),\n      this.getIdleTokenSupply(tokenConfig.idle.token),\n      addGovTokens ? this.getGovTokensBalances(tokenConfig.idle.address) : null,\n    ]);\n\n    const totalAllocation = this.fixTokenDecimals(totalSupply,18).times(tokenPrice).minus(unlentBalance);\n\n    if (lastAllocations){\n      Object.keys(lastAllocations).forEach( (protocolAddr) => {\n        const protocolInfo = tokenConfig.protocols.find( p => p.address.toLowerCase() === protocolAddr.toLowerCase() );\n        if (protocolInfo && protocolInfo.enabled){\n          const protocolAllocationPerc = this.BNify(lastAllocations[protocolAddr]).div(100000);\n          const protocolAllocation = totalAllocation.times(protocolAllocationPerc);\n          protocolsAllocations[protocolAddr.toLowerCase()] = protocolAllocation;\n          protocolsAllocationsPerc[protocolAddr.toLowerCase()] = protocolAllocationPerc;\n        }\n      });\n    }\n\n    tokenAllocation.unlentBalance = this.BNify(0);\n    tokenAllocation.totalAllocationWithUnlent = totalAllocation;\n\n    if (unlentBalance){\n      tokenAllocation.unlentBalance = unlentBalance;\n      tokenAllocation.totalAllocationWithUnlent = tokenAllocation.totalAllocationWithUnlent.plus(unlentBalance);\n    }\n\n    tokenAllocation.totalAllocation = totalAllocation;\n    tokenAllocation.protocolsAllocations = protocolsAllocations;\n    tokenAllocation.protocolsAllocationsPerc = protocolsAllocationsPerc;\n\n    // Sum gov tokens balances\n    if (govTokensBalances && govTokensBalances.total){\n      if (tokenUsdConversionRate){\n        govTokensBalances.total = govTokensBalances.total.div(tokenUsdConversionRate);\n      }\n\n      // add gov token balance to total allocation\n      tokenAllocation.totalAllocationWithUnlent = tokenAllocation.totalAllocationWithUnlent.plus(govTokensBalances.total);\n    }\n\n    tokenAllocation.totalAllocationConverted = tokenAllocation.totalAllocation;\n    tokenAllocation.totalAllocationWithUnlentConverted = tokenAllocation.totalAllocationWithUnlent;\n\n    if (tokenUsdConversionRate){\n      tokenAllocation.totalAllocationConverted = tokenAllocation.totalAllocationConverted.times(tokenUsdConversionRate);\n      tokenAllocation.totalAllocationWithUnlentConverted = tokenAllocation.totalAllocationWithUnlentConverted.times(tokenUsdConversionRate);\n    }\n\n    if (protocolsAprs){\n      tokenAllocation.avgApr = this.getAvgApr(protocolsAprs,protocolsAllocations,totalAllocation);\n    }\n\n    // console.log('getTokenAllocation',tokenConfig.idle.token,totalSupply ? totalSupply.toFixed(8) : null,tokenPrice ? tokenPrice.toFixed(8) : null,unlentBalance ? unlentBalance.toFixed(8) : null,tokenAllocation);\n\n    // console.log('Allocations for '+tokenConfig.idle.token+' loaded in '+((Date.now()-start)/1000).toFixed(2)+'s');\n\n    return this.setCachedData(cachedDataKey,tokenAllocation);\n  }\n  getSushiswapPoolTokenPrice = async (contractName) => {\n    const [\n      token0_address,\n      token1_address,\n      poolReserves,\n      totalSupply\n    ] = await Promise.all([\n      this.genericContractCallCached(contractName,'token0'),\n      this.genericContractCallCached(contractName,'token1'),\n      this.genericContractCallCached(contractName,'getReserves'),\n      this.getTokenTotalSupply(contractName)\n    ]);\n\n    if (token0_address && token1_address && poolReserves && totalSupply){\n      const token0_config = {\n        address:token0_address\n      };\n      const token1_config = {\n        address:token1_address\n      };\n      const DAITokenConfig = {\n        address:this.getContractByName('DAI')._address\n      };\n\n      let [\n        token0_price,\n        token1_price\n      ] = await Promise.all([\n        this.getSushiswapConversionRate(DAITokenConfig,token0_config),\n        this.getSushiswapConversionRate(DAITokenConfig,token1_config)\n      ]);\n\n      if (token0_price && token1_price){\n        // token0_price = this.BNify(1).div(this.BNify(token0_price));\n        // token1_price = this.BNify(1).div(this.BNify(token1_price));\n\n        const token0_pool = token0_price.times(this.fixTokenDecimals(poolReserves[0],18));\n        const token1_pool = token1_price.times(this.fixTokenDecimals(poolReserves[1],18));\n\n        const totalPoolSize = token0_pool.plus(token1_pool);\n        const poolTokenPrice = totalPoolSize.div(this.fixTokenDecimals(totalSupply,18));\n\n        // console.log(parseFloat(token0_price),parseFloat(token1_price),parseFloat(poolTokenPrice));\n\n        return poolTokenPrice;\n      }\n    }\n\n    return null;\n  }\n  getSushiswapConversionRate = async (tokenConfigFrom,tokenConfigDest) => {\n\n    // Check for cached data\n    const cachedDataKey = `sushiswapConversionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    try {\n      const WETHAddr = this.getContractByName('WETH')._address;\n      const one = this.normalizeTokenDecimals(18);\n\n      const path = [];\n      path.push(tokenConfigFrom.address);\n\n      // Don't pass through weth if i'm converting weth\n      if (WETHAddr.toLowerCase() !== tokenConfigFrom.address.toLowerCase() && WETHAddr.toLowerCase() !== tokenConfigDest.address.toLowerCase()){\n        path.push(WETHAddr);\n      }\n      path.push(tokenConfigDest.address);\n\n      const res = await this.genericContractCall('SushiswapRouter','getAmountsIn',[one.toFixed(),path]);\n\n      // console.log('getSushiswapConversionRate',path,res);\n\n      if (res){\n        const price = this.BNify(res[0]).div(one);\n        return this.setCachedDataWithLocalStorage(cachedDataKey,price);\n      }\n      return null;\n    } catch (error) {\n      return null;\n    }\n  }\n  getUniswapConversionRate = async (tokenConfigFrom,tokenConfigDest) => {\n\n    if (tokenConfigDest.addressForPrice){\n      tokenConfigDest = Object.assign({},tokenConfigDest);\n      tokenConfigDest.address = tokenConfigDest.addressForPrice;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `uniswapConversionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    // console.log('getUniswapConversionRate - CACHED',cachedDataKey,cachedData);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    try {\n      const WETHAddr = this.getContractByName('WETH')._address;\n      const one = this.normalizeTokenDecimals(18);\n\n      const path = [];\n      path.push(tokenConfigFrom.address);\n      // Don't pass through weth if i'm converting weth\n      if (WETHAddr.toLowerCase() !== tokenConfigFrom.address.toLowerCase() && WETHAddr.toLowerCase() !== tokenConfigDest.address.toLowerCase()){\n        path.push(WETHAddr);\n      }\n      path.push(tokenConfigDest.address);\n\n      const unires = await this.genericContractCall('UniswapRouter','getAmountsIn',[one.toFixed(),path]);\n\n      // console.log('getUniswapConversionRate',path,unires);\n      \n      if (unires){\n        const price = this.BNify(unires[0]).div(one);\n        return this.setCachedDataWithLocalStorage(cachedDataKey,price);\n      }\n      return null;\n    } catch (error) {\n      return null;\n    }\n  }\n  /*\n  getUniswapConversionRate_old = async (tokenConfigFrom,tokenConfigDest) => {\n    const cachedDataKey = `compUniswapConverstionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n\n    const tokenFrom = new Token(ChainId.MAINNET, tokenConfigFrom.address, tokenConfigFrom.decimals);\n    const tokenTo = new Token(ChainId.MAINNET, tokenConfigDest.address, tokenConfigDest.decimals);\n\n    const pair = await Fetcher.fetchPairData(tokenFrom, tokenTo);\n    const route = new Route([pair], tokenTo);\n\n    let output = null;\n    if (route && route.midPrice){\n      output = this.BNify(route.midPrice.toSignificant(tokenConfigDest.decimals));\n      this.setCachedData(cachedDataKey,output);\n    }\n    return output;\n  }\n  */\n  getCurveDepositedTokens = async (account,enabledTokens=[]) => {\n    account = account ? account : this.props.account;\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    if (!account || !enabledTokens || !enabledTokens.length){\n      return [];\n    }\n\n    const curveTxs = await this.getCurveTxs(account,0,'latest',enabledTokens);\n\n    const idleTokensBalances = {};\n    let remainingCurveTokens = this.BNify(0);\n\n    // this.customLog('getCurveDepositedTokens',curveTxs);\n\n    curveTxs.forEach( tx => {\n\n      const idleToken = tx.idleToken;\n      const idleTokens = this.BNify(tx.idleTokens);\n\n      if (!idleTokensBalances[idleToken]){\n        idleTokensBalances[idleToken] = this.BNify(0);\n      }\n\n      switch (tx.action){\n        case 'CurveIn':\n        case 'CurveZapIn':\n          idleTokensBalances[idleToken] = idleTokensBalances[idleToken].plus(idleTokens);\n        break;\n        case 'CurveOut':\n        case 'CurveZapOut':\n          if (idleTokens.gt(idleTokensBalances[idleToken])){\n            remainingCurveTokens = remainingCurveTokens.plus(idleTokens.minus(idleTokensBalances[idleToken]));\n          }\n          idleTokensBalances[idleToken] = idleTokensBalances[idleToken].minus(idleTokens);\n          if (idleTokensBalances[idleToken].lt(0)){\n            idleTokensBalances[idleToken] = this.BNify(0);\n          }\n        break;\n        default:\n        break;\n      }\n\n      // this.customLog(this.strToMoment(tx.timeStamp*1000).format('DD-MM-YYYY HH:mm:ss'),tx.blockNumber,idleToken,tx.action,idleTokens.toFixed(6),idleTokensBalances[idleToken].toFixed(6),remainingCurveTokens.toFixed(6));\n\n      // Scalo il remaining tokens\n      if (remainingCurveTokens.gt(0)){\n        Object.keys(idleTokensBalances).forEach( token => {\n          const tokenBalance = idleTokensBalances[token];\n          if (tokenBalance && tokenBalance.gt(0)){\n            if (tokenBalance.gt(remainingCurveTokens)){\n              idleTokensBalances[token] = idleTokensBalances[token].minus(remainingCurveTokens);\n            } else {\n              remainingCurveTokens = remainingCurveTokens.minus(idleTokensBalances[token]);\n              idleTokensBalances[token] = 0;\n            }\n          }\n        });\n      }\n    });\n\n    // this.customLog('idleTokensBalances',idleTokensBalances);\n  }\n  getCurveUnevenTokenAmounts = async (amounts,max_burn_amount) => {\n    const curveSwapContract = await this.getCurveDepositContract();\n    if (curveSwapContract){\n      const unevenAmounts = await this.genericContractCall(curveSwapContract.name, 'remove_liquidity_imbalance', [amounts, max_burn_amount]);\n      // this.customLog('getCurveUnevenTokenAmounts',amounts,max_burn_amount,unevenAmounts);\n      return unevenAmounts;\n    }\n    return null;\n  }\n  getCurveAPY = async () => {\n\n    // Check for cached data\n    const cachedDataKey = `getCurveAPY`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const curveRatesInfo = this.getGlobalConfig(['curve','rates']);\n    if (curveRatesInfo){\n      const results = await this.makeRequest(curveRatesInfo.endpoint);\n      if (results && results.data){\n        const path = Object.values(curveRatesInfo.path);\n        let curveApy = this.getArrayPath(path,results.data);\n        if (curveApy){\n          curveApy = this.BNify(curveApy).times(100);\n          if (!this.BNify(curveApy).isNaN()){\n            return this.setCachedDataWithLocalStorage(cachedDataKey,curveApy);\n          }\n        }\n      }\n    }\n    return null;\n  }\n  getCurveAvailableTokens = () => {\n    if (!this.props.availableStrategies){\n      return false;\n    }\n    const curveTokens = this.getGlobalConfig(['curve','availableTokens']);\n    const strategyTokens = this.props.availableStrategies['best'];\n    const availableTokens = Object.keys(strategyTokens).reduce( (availableTokens,token) => {\n      const tokenConfig = strategyTokens[token];\n      if (Object.keys(curveTokens).includes(tokenConfig.idle.token) && curveTokens[tokenConfig.idle.token].enabled){\n        availableTokens[token] = tokenConfig;\n      }\n      return availableTokens;\n    },{});\n\n    return availableTokens;\n  }\n  getCurveAPYContract = async () => {\n    const curveSwapContract = await this.getCurveDepositContract();\n    if (curveSwapContract){\n      const blockNumber = await this.getBlockNumber();\n      if (blockNumber){\n        const blocksForPrevTokenPrice = 10;\n        let [tokenPrice,prevTokenPrice] = await Promise.all([\n          this.genericContractCall(curveSwapContract.name,'get_virtual_price'),\n          this.genericContractCallCached(curveSwapContract.name,'get_virtual_price',[],{},blockNumber-blocksForPrevTokenPrice)\n        ]);\n\n        if (tokenPrice && prevTokenPrice){\n\n          const blocksMultiplier = this.BNify(this.getGlobalConfig(['network','blocksPerYear'])).div(blocksForPrevTokenPrice);\n          const curveAPR = this.BNify(tokenPrice).div(prevTokenPrice).minus(1).times(blocksMultiplier);\n          return this.apr2apy(curveAPR).times(100);\n        }\n      }\n    }\n    return null;\n  }\n  getCurveTokenSupply = async () => {\n    const curvePoolContract = await this.getCurvePoolContract();\n    if (curvePoolContract){\n      return await this.getTokenTotalSupply(curvePoolContract.name);\n    }\n    return null;\n  }\n  getCurveTokenBalance = async (account=null,fixDecimals=true) => {\n    const curvePoolContract = await this.getCurvePoolContract();\n    if (curvePoolContract){\n      account = account ? account : this.props.account;\n      return await this.getTokenBalance(curvePoolContract.name,account,fixDecimals);\n    }\n    return null;\n  }\n  getCurveTokenPrice = async (blockNumber='latest',fixDecimals=true) => {\n    const migrationContract = await this.getCurveDepositContract();\n    let curveTokenPrice = await this.genericContractCallCached(migrationContract.name,'get_virtual_price',[],{},blockNumber);\n    if (curveTokenPrice){\n      curveTokenPrice = this.BNify(curveTokenPrice);\n      if (fixDecimals){\n        const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n        curveTokenPrice = this.fixTokenDecimals(curveTokenPrice,curvePoolContract.decimals);\n      }\n      return curveTokenPrice;\n    }\n    return null;\n  }\n  getCurveRedeemableIdleTokens = async (account) => {\n    let [curveTokenPrice,curveTokenBalance] = await Promise.all([\n      this.getCurveTokenPrice('latest'),\n      this.getCurveTokenBalance(account),\n    ]);\n    if (curveTokenBalance && curveTokenPrice){\n      return this.BNify(curveTokenBalance).times(curveTokenPrice);\n    }\n    return null;\n  }\n  getCurveDepositContract = async () => {\n    const depositContractInfo = this.getGlobalConfig(['curve','depositContract']);\n    if (depositContractInfo){\n      let curveDepositContract = this.getContractByName(depositContractInfo.name);\n      if (!curveDepositContract && depositContractInfo.abi){\n        curveDepositContract = await this.props.initContract(depositContractInfo.name,depositContractInfo.address,depositContractInfo.abi);\n      }\n    }\n    return depositContractInfo;\n  }\n  getCurveZapContract = async () => {\n    const zapContractInfo = this.getGlobalConfig(['curve','zapContract']);\n    if (zapContractInfo){\n      let curveZapContract = this.getContractByName(zapContractInfo.name);\n      if (!curveZapContract && zapContractInfo.abi){\n        curveZapContract = await this.props.initContract(zapContractInfo.name,zapContractInfo.address,zapContractInfo.abi);\n      }\n    }\n    return zapContractInfo;\n  }\n  getCurvePoolContract = async () => {\n    const poolContractInfo = this.getGlobalConfig(['curve','poolContract']);\n    if (poolContractInfo){\n      let curvePoolContract = this.getContractByName(poolContractInfo.name);\n      if (!curvePoolContract && poolContractInfo.abi){\n        curvePoolContract = await this.props.initContract(poolContractInfo.name,poolContractInfo.address,poolContractInfo.abi);\n      }\n    }\n    return poolContractInfo;\n  }\n  getCurveSwapContract = async () => {\n    const migrationContractInfo = this.getGlobalConfig(['curve','migrationContract']);\n    if (migrationContractInfo){\n      let migrationContract = this.getContractByName(migrationContractInfo.name);\n      if (!migrationContract && migrationContractInfo.abi){\n        migrationContract = await this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi);\n      }\n    }\n    return migrationContractInfo;\n  }\n  getCurveIdleTokensAmounts = async (account=null,curveTokenBalance=null,max_slippage=null) => {\n    if (!account && this.props.account){\n      account = this.props.account;\n    }\n\n    if (!account){\n      return null;\n    }\n\n    const tokensBalances = {};\n    const curveSwapContract = await this.getCurveSwapContract();\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n\n    const curveTokenSupply = await this.getCurveTokenSupply();\n    if (!curveTokenBalance){\n      curveTokenBalance = await this.getCurveTokenBalance(account,false);\n    }\n\n    if (curveTokenBalance && curveTokenSupply){\n      const curveTokenShare = this.BNify(curveTokenBalance).div(this.BNify(curveTokenSupply));\n      const n_coins = Object.keys(curveAvailableTokens).length;\n\n      if (max_slippage){\n        max_slippage = this.BNify(max_slippage).div(n_coins);\n      }\n\n      // this.customLog('curveTokenShare',this.BNify(curveTokenBalance).toString(),this.BNify(curveTokenSupply).toString(),curveTokenShare.toString());\n\n      await this.asyncForEach(Object.keys(curveAvailableTokens), async (token) => {\n        const curveTokenConfig = curveAvailableTokens[token];\n        const coinIndex = curveTokenConfig.migrationParams.coinIndex;\n        const curveIdleTokens = await this.genericContractCall(curveSwapContract.name,'balances',[coinIndex]);\n        if (curveIdleTokens){\n          let idleTokenBalance = this.BNify(curveIdleTokens).times(curveTokenShare);\n          if (max_slippage){\n            // this.customLog('getCurveIdleTokensAmounts',idleTokenBalance.toFixed());\n            idleTokenBalance = idleTokenBalance.minus(idleTokenBalance.times(max_slippage));\n          }\n          tokensBalances[coinIndex] = this.integerValue(idleTokenBalance);\n        }\n      });\n    }\n\n    return Object.values(tokensBalances);\n  }\n\n  // Get amounts of underlying tokens in the curve pool\n  getCurveTokensAmounts = async (account=null,curveTokenBalance=null,fixDecimals=false,useCoinIndex=false) => {\n\n    if (!account && this.props.account){\n      account = this.props.account;\n    }\n\n    if (!account){\n      return null;\n    }\n\n    const tokensBalances = {};\n    const availableTokens = this.getCurveAvailableTokens();\n    const curveSwapContract = await this.getCurveSwapContract();\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n\n    const curveTokenSupply = await this.getCurveTokenSupply();\n    if (!curveTokenBalance){\n      curveTokenBalance = await this.getCurveTokenBalance(account,false);\n    }\n\n    if (curveTokenBalance && curveTokenSupply){\n      const curveTokenShare = this.BNify(curveTokenBalance).div(this.BNify(curveTokenSupply));\n\n      await this.asyncForEach(Object.keys(curveAvailableTokens), async (token) => {\n        const curveTokenConfig = curveAvailableTokens[token];\n        const coinIndex = curveTokenConfig.migrationParams.coinIndex;\n        const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n        const [\n          idleTokenPrice,\n          idleTokenBalance\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.genericContractCall(curveSwapContract.name,'balances',[coinIndex]),\n        ]);\n\n        const totalTokenSupply = this.BNify(idleTokenBalance).times(this.BNify(idleTokenPrice));\n        let tokenBalance = totalTokenSupply.times(curveTokenShare);\n        if (fixDecimals){\n          tokenBalance = this.fixTokenDecimals(tokenBalance,18);\n        }\n\n        tokensBalances[curveTokenConfig.baseToken] = useCoinIndex ? this.integerValue(tokenBalance) : tokenBalance;\n      });\n    }\n\n    return useCoinIndex ? Object.values(tokensBalances) : tokensBalances;\n  }\n\n  // Compile amounts array for Curve\n  getCurveAmounts = async (token,amount,deposit=false) => {\n    const amounts = {};\n    const availableTokens = this.getCurveAvailableTokens();\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n\n    await this.asyncForEach(Object.keys(curveAvailableTokens), async (idleToken) => {\n      const curveTokenConfig = curveAvailableTokens[idleToken];\n      const migrationParams = curveTokenConfig.migrationParams;\n      const coinIndex = migrationParams.coinIndex;\n      if (idleToken === token && parseFloat(amount)>0){\n        const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n        amount = this.fixTokenDecimals(amount,18);\n        if (!deposit){\n          const idleTokenPrice = await this.getIdleTokenPrice(tokenConfig);\n          amount = amount.div(idleTokenPrice);\n        }\n        amount = this.normalizeTokenAmount(amount,curveTokenConfig.decimals);\n        amounts[coinIndex] = amount;\n      } else {\n        amounts[coinIndex] = 0;\n      }\n    });\n\n    return Object.values(amounts);\n  }\n  getCurveTokenAmount = async (amounts,deposit=true) => {\n    const migrationContract = await this.getCurveSwapContract();\n    if (migrationContract){\n      return await this.genericContractCall(migrationContract.name,'calc_token_amount',[amounts,deposit]);\n    }\n    return null;\n  }\n  getCurveSlippage = async (token,amount,deposit=true,uneven_amounts=null) => {\n    let slippage = null;\n    const depositContract = await this.getCurveDepositContract();\n    if (depositContract){\n\n      const n_coins = this.getGlobalConfig(['curve','params','n_coins']);\n\n      amount = this.BNify(amount)\n      if (!amount || amount.isNaN() || amount.lte(0)){\n        return null;\n      }\n\n      let amounts = uneven_amounts;\n      if (!amounts || amounts.length !== n_coins){\n        amounts = await this.getCurveAmounts(token,amount);\n      }\n\n      let [\n        virtualPrice,\n        tokenAmount\n      ] = await Promise.all([\n        this.genericContractCall(depositContract.name,'get_virtual_price'),\n        this.genericContractCall(depositContract.name,'calc_token_amount',[amounts,deposit]),\n      ]);\n\n      if (virtualPrice && tokenAmount){\n        amount = this.fixTokenDecimals(amount,18);\n        virtualPrice = this.fixTokenDecimals(virtualPrice,18);\n        tokenAmount = this.fixTokenDecimals(tokenAmount,18);\n        const Sv = tokenAmount.times(virtualPrice);\n\n        // Handle redeem in uneven amounts (Slippage 0%)\n        if (uneven_amounts && !deposit){\n          amount = amount.times(virtualPrice);\n        }\n\n        if (deposit){\n          slippage = Sv.div(amount).minus(1).times(-1);\n        } else {\n          slippage = amount.div(Sv).minus(1).times(-1);\n        }\n\n        // console.log('getCurveSlippage',token,deposit,amounts,tokenAmount.toFixed(6),virtualPrice.toFixed(6),Sv.toFixed(6),amount.toFixed(6),slippage.toFixed(6));\n\n        return slippage;\n      }\n    }\n    return null;\n  }\n  getStkAaveDistribution = async (tokenConfig,aTokenIdleSupply=null,annualize=true) => {\n\n    const cachedDataKey = `getStkAaveDistribution_${tokenConfig.idle.token}_${aTokenIdleSupply}_${annualize}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const currentNetworkId = this.getRequiredNetworkId();\n\n    let aaveDistribution = this.BNify(0);\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens','stkAAVE']);\n    const aTokenConfig = tokenConfig.protocols.find( p => p.name === stkAAVETokenConfig.protocol );\n\n    // console.log('getStkAaveDistribution_1',tokenConfig.idle.token,aTokenConfig.token);\n    const disabledTokens = this.getArrayPath(['disabledTokens',currentNetworkId],stkAAVETokenConfig) || [];\n\n    if (!aTokenConfig || disabledTokens.includes(tokenConfig.idle.token)){\n      return aaveDistribution;\n    }\n\n    const aaveIncentivesController_address = await this.genericContractCall(aTokenConfig.token,'getIncentivesController');\n\n    if (!aaveIncentivesController_address){\n      return aaveDistribution;\n    }\n\n    const IAaveIncentivesController_name = `IAaveIncentivesController_${aaveIncentivesController_address}`;\n    await this.props.initContract(IAaveIncentivesController_name,aaveIncentivesController_address,IAaveIncentivesController);\n\n    let [\n      aTokenTotalSupply,\n      tokenAllocation,\n      assetData,\n    ] = await Promise.all([\n      this.getTokenTotalSupply(aTokenConfig.token),\n      this.getTokenAllocation(tokenConfig,false,false),\n      this.genericContractCall(IAaveIncentivesController_name,'assets',[aTokenConfig.address]),\n    ]);\n\n    // console.log('getStkAaveDistribution',IAaveIncentivesController_name,aTokenConfig.address,assetData);\n\n    if (assetData && tokenAllocation){\n\n      const aaveAllocationPerc = tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()];\n\n      if (aaveAllocationPerc && aaveAllocationPerc.gte(0.001)){\n        if (!aTokenIdleSupply){\n          aTokenIdleSupply = await this.genericContractCall(aTokenConfig.token,'balanceOf',[tokenConfig.idle.address]);\n        }\n\n        const aaveSpeed = this.BNify(assetData.emissionPerSecond);\n        aTokenIdleSupply = this.BNify(aTokenIdleSupply);\n        aTokenTotalSupply = this.BNify(aTokenTotalSupply);\n        const secondsPerYear = this.getGlobalConfig(['network','secondsPerYear']);\n\n        const aavePoolShare = aTokenIdleSupply.div(aTokenTotalSupply);\n        aaveDistribution = aaveSpeed.times(aavePoolShare);\n\n        if (annualize){\n          aaveDistribution = aaveDistribution.div(1e18).times(secondsPerYear);\n        }\n\n        if (!this.BNify(aaveDistribution).isNaN()){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,aaveDistribution);\n        }\n      }\n    }\n\n    return aaveDistribution;\n  }\n  getStkAaveUserDistribution = async (account=null,availableTokens=null) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens){\n      return false;\n    }\n\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens','stkAAVE']);\n\n    let output = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const aTokenInfo = tokenConfig.protocols.find( p => (p.name === stkAAVETokenConfig.protocol) );\n      if (aTokenInfo){\n        const [\n          userPoolShare,\n          aaveDistribution,\n        ] = await Promise.all([\n          this.getUserPoolShare(account,tokenConfig,false),\n          this.getStkAaveDistribution(tokenConfig,null,false),\n        ]);\n\n        if (aaveDistribution && userPoolShare && !this.BNify(aaveDistribution).isNaN() && !this.BNify(userPoolShare).isNaN() ){\n          output = output.plus(aaveDistribution.times(userPoolShare));\n        }\n      }\n    });\n\n    return output;\n  }\n  getWMaticApr = async (token,tokenConfig,maticConversionRate=null) => {\n    const wMaticTokenConfig = this.getGlobalConfig(['govTokens','WMATIC']);\n    if (!wMaticTokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getWMaticApr_${tokenConfig.idle.token}_${maticConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let wMaticApr = this.BNify(0);\n    const distributionSpeed = await this.getStkAaveDistribution(tokenConfig);\n\n    if (distributionSpeed && this.BNify(distributionSpeed).gt(0)){\n\n      // Get COMP conversion rate\n      if (!maticConversionRate){\n        const DAITokenConfig = {\n          address:this.getContractByName('DAI')._address\n        };\n        try {\n          const destTokenConfig = {\n            address:wMaticTokenConfig.addressForPrice || wMaticTokenConfig.address\n          };\n          maticConversionRate = await this.getUniswapConversionRate(DAITokenConfig,destTokenConfig);\n        } catch (error) {\n\n        }\n        if (!maticConversionRate || maticConversionRate.isNaN()){\n          maticConversionRate = this.BNify(1);\n        }\n      }\n\n      const wMaticValue = this.BNify(maticConversionRate).times(distributionSpeed);\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,false);\n\n      // console.log('wMaticApr',tokenConfig.idle.token,distributionSpeed.toFixed(),this.BNify(maticConversionRate).toFixed(),tokenAllocation);\n\n      if (tokenAllocation){\n        wMaticApr = wMaticValue.div(tokenAllocation.totalAllocationConverted).times(100);\n\n        // console.log('wMaticApr',tokenConfig.idle.token,distributionSpeed.toFixed(),this.BNify(maticConversionRate).toFixed(),wMaticValue.toFixed(),tokenAllocation.totalAllocationConverted.toFixed(),wMaticApr.toFixed());\n\n        if (!this.BNify(wMaticApr).isNaN()){\n          this.setCachedDataWithLocalStorage(cachedDataKey,wMaticApr);\n        }\n      }\n    }\n\n    return wMaticApr;\n  }\n  getStkAaveApr = async (token,tokenConfig,aaveConversionRate=null) => {\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens','stkAAVE']);\n    if (!stkAAVETokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getStkAaveApr_${tokenConfig.idle.token}_${aaveConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let stkAaveAPR = this.BNify(0);\n    const aaveDistribution = await this.getStkAaveDistribution(tokenConfig);\n\n    if (aaveDistribution && this.BNify(aaveDistribution).gt(0)){\n\n      // Get COMP conversion rate\n      if (!aaveConversionRate){\n        const DAITokenConfig = {\n          address:this.getContractByName('DAI')._address\n        };\n        try {\n          const destTokenConfig = {\n            address:stkAAVETokenConfig.addressForPrice || stkAAVETokenConfig.address\n          };\n          aaveConversionRate = await this.getUniswapConversionRate(DAITokenConfig,destTokenConfig);\n        } catch (error) {\n\n        }\n        if (!aaveConversionRate || aaveConversionRate.isNaN()){\n          aaveConversionRate = this.BNify(1);\n        }\n      }\n\n      const stkAaveValue = this.BNify(aaveConversionRate).times(aaveDistribution);\n\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,false);\n\n      if (tokenAllocation){\n        stkAaveAPR = stkAaveValue.div(tokenAllocation.totalAllocationConverted).times(100);\n\n        // console.log('getStkAaveApr',tokenConfig.idle.token,aaveDistribution.toFixed(),this.BNify(aaveConversionRate).toFixed(),stkAaveValue.toFixed(),tokenAllocation.totalAllocationConverted.toFixed(),stkAaveAPR.toFixed());\n\n        if (!this.BNify(stkAaveAPR).isNaN()){\n          this.setCachedDataWithLocalStorage(cachedDataKey,stkAaveAPR);\n        }\n      }\n    }\n\n    return stkAaveAPR;\n  }\n  getCompAPR = async (token,tokenConfig,cTokenIdleSupply=null,compConversionRate=null) => {\n    const COMPTokenConfig = this.getGlobalConfig(['govTokens','COMP']);\n    if (!COMPTokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getCompAPR_${tokenConfig.idle.token}_${cTokenIdleSupply}_${compConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let compAPR = this.BNify(0);\n    const compDistribution = await this.getCompDistribution(tokenConfig,cTokenIdleSupply);\n\n    if (compDistribution){\n\n      const DAITokenConfig = {\n        address:this.getContractByName('DAI')._address\n      };\n        \n      // Get COMP conversion rate\n      if (!compConversionRate){\n        try {\n          compConversionRate = await this.getUniswapConversionRate(DAITokenConfig,COMPTokenConfig);\n        } catch (error) {\n\n        }\n        if (!compConversionRate || compConversionRate.isNaN()){\n          compConversionRate = this.BNify(1);\n        }\n      }\n\n      const compValue = this.BNify(compConversionRate).times(compDistribution);\n\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,false);\n\n      console.log('getCompAPR',tokenConfig.idle.token,compConversionRate.toFixed(5),compDistribution.toFixed(5),compValue.toFixed(5),tokenAllocation.totalAllocationConverted.toFixed(5));\n\n      if (tokenAllocation){\n        compAPR = compValue.div(tokenAllocation.totalAllocationConverted).times(100);\n        if (!this.BNify(compAPR).isNaN()){\n          this.setCachedDataWithLocalStorage(cachedDataKey,compAPR);\n        }\n      }\n    }\n\n    return compAPR;\n  }\n  getCompSpeed = async (cTokenAddress) => {\n    let compSpeed = await this.genericContractCallCached('Comptroller','compSpeeds',[cTokenAddress]);\n    if (compSpeed){\n      return this.BNify(compSpeed);\n    }\n    return null;\n  }\n  getCompDistribution = async (tokenConfig,cTokenIdleSupply=null,annualize=true) => {\n\n    const cachedDataKey = `getCompDistribution_${tokenConfig.idle.token}_${cTokenIdleSupply}_${annualize}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const cTokenInfo = tokenConfig.protocols.find( p => (p.name === 'compound') );\n    if (cTokenInfo){\n\n      // Get IdleToken allocation in compound\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,false);\n      const compoundAllocationPerc = tokenAllocation.protocolsAllocationsPerc[cTokenInfo.address.toLowerCase()];\n\n      // Calculate distribution if compound allocation >= 0.1%\n      if (compoundAllocationPerc && compoundAllocationPerc.gte(0.001)){\n\n        // Get COMP distribution speed and Total Supply\n        const [\n          compSpeed,\n          cTokenTotalSupply\n        ] = await Promise.all([\n          this.getCompSpeed(cTokenInfo.address),\n          this.getTokenTotalSupply(cTokenInfo.token)\n        ]);\n\n        if (compSpeed && cTokenTotalSupply){\n\n          // Get Idle liquidity supply\n          if (!cTokenIdleSupply){\n            cTokenIdleSupply = await this.getContractBalance(cTokenInfo.token,tokenConfig.idle.address);\n          }\n\n          if (cTokenIdleSupply){\n\n            // Get COMP distribution for Idle in a Year\n            const blocksPerYear = this.getGlobalConfig(['network','blocksPerYear']);\n\n            // Take 50% of distrubution for lenders side\n            const compoundPoolShare = this.BNify(cTokenIdleSupply).div(this.BNify(cTokenTotalSupply));\n            let compDistribution = this.BNify(compSpeed).times(compoundPoolShare);\n\n            if (annualize){\n              compDistribution = this.fixTokenDecimals(compDistribution,18).times(blocksPerYear);\n            }\n\n            if (!this.BNify(compDistribution).isNaN()){\n              return this.setCachedDataWithLocalStorage(cachedDataKey,compDistribution);\n            }\n          }\n        }\n      }\n    }\n\n    return null;\n  }\n  getCompUserDistribution = async (account=null,availableTokens=null) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens){\n      return false;\n    }\n\n    let output = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const cTokenInfo = tokenConfig.protocols.find( p => (p.name === 'compound') );\n      if (cTokenInfo){\n        const [\n          userPoolShare,\n          compDistribution,\n        ] = await Promise.all([\n          this.getUserPoolShare(account,tokenConfig,false),\n          this.getCompDistribution(tokenConfig,null,false),\n        ]);\n\n        if (compDistribution && userPoolShare){\n          output = output.plus(compDistribution.times(userPoolShare));\n        }\n      }\n    });\n\n    return output;\n  }\n  getCompAvgApr = async (availableTokens=null) => {\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n    let output = this.BNify(0);\n    let totalAllocation = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [compApr,tokenAllocation] = await Promise.all([\n        this.getCompAPR(token,tokenConfig),\n        this.getTokenAllocation(tokenConfig,false,false)\n      ]);\n      \n      if (compApr && tokenAllocation){\n        output = output.plus(compApr.times(tokenAllocation.totalAllocation));\n        totalAllocation = totalAllocation.plus(tokenAllocation.totalAllocation);\n        // this.customLog(token,compApr.toString(),tokenAllocation.totalAllocation.toString(),output.toString(),totalAllocation.toString());\n      }\n    });\n\n    output = output.div(totalAllocation);\n\n    return output;\n  }\n  getTokensCsv = async () => {\n\n    // eslint-disable-next-line\n    Array.prototype.sum = function() {\n      return this.reduce(function(pv, cv) { return pv + cv; }, 0);\n    };\n    // eslint-disable-next-line\n    Array.prototype.max = function() {\n      return Math.max.apply(null, this);\n    };\n    // eslint-disable-next-line\n    Array.prototype.avg = function() {\n      return this.sum()/this.length;\n    };\n\n    const csv = [];\n    const availableStrategies = this.props.availableStrategies;\n    await this.asyncForEach(Object.keys(availableStrategies), async (strategy) => {\n      const availableTokens = availableStrategies[strategy];\n      const isRisk = strategy === 'risk';\n      await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n        const tokenConfig = availableTokens[token];\n        const rates = await this.getTokenApiData(tokenConfig.address,isRisk,null,null,false,7200,'ASC');\n        const header = [];\n        let protocols = null;\n        const rows = [];\n        const aprAvg = {};\n        const scoreAvg = {};\n\n        const lastRow = rates[rates.length-1];\n\n        rates.forEach( r => {\n          if (!protocols){\n            header.push('Token');\n            header.push('Date');\n\n            // Get protocols\n            protocols = [];\n            lastRow.protocolsData.forEach( p1 => {\n              const foundProtocol = tokenConfig.protocols.find( p2 => ( p2.address.toLowerCase() === p1.protocolAddr.toLowerCase() ) );\n              if (foundProtocol){\n                protocols.push(foundProtocol);\n              }\n            });\n\n            // Add APR columns\n            header.push('APR Idle');\n            header.push('SCORE Idle');\n\n            aprAvg['idle'] = [];\n            scoreAvg['idle'] = [];\n\n            protocols.forEach( p => {\n              header.push('APR '+p.name);\n              header.push('SCORE '+p.name);\n\n              aprAvg[p.name] = [];\n              scoreAvg[p.name] = [];\n            });\n\n            rows.push(header.join(','));\n          }\n\n          const date = moment(r.timestamp*1000).format('YYYY-MM-DD');\n          const rate = this.BNify(r.idleRate).div(1e18).toFixed(5);\n          const score = parseFloat(r.idleScore);\n\n          const row = [];\n          row.push(`${token}-${strategy}`);\n          row.push(date);\n          row.push(rate);\n          row.push(score);\n\n          if (date>='2020-09-15'/* && date<='2020-11-09'*/){\n            aprAvg['idle'].push(parseFloat(rate));\n            scoreAvg['idle'].push(parseFloat(score));\n          }\n\n          protocols.forEach( pInfo => {\n            const pData = r.protocolsData.find( p => (p.protocolAddr.toLowerCase() === pInfo.address.toLowerCase()) );\n            let pRate = '';\n            let pScore = '';\n            if (pData){\n              pScore = !this.BNify(pData.defiScore).isNaN() ? parseFloat(pData.defiScore) : '0.00000';\n              pRate = !this.BNify(pData.rate).isNaN() ? this.BNify(pData.rate).div(1e18) : '0.00000';\n              if (typeof pData[`${pInfo.name}AdditionalAPR`] !== 'undefined'){\n                const additionalRate = this.BNify(pData[`${pInfo.name}AdditionalAPR`]).div(1e18);\n                if (!additionalRate.isNaN()){\n                  pRate = pRate.plus(additionalRate);\n                }\n              }\n\n              if (date>='2020-09-15'/* && date<='2020-11-09'*/){\n                if (!isNaN(parseFloat(pRate))){\n                  aprAvg[pInfo.name].push(parseFloat(pRate));\n                }\n                if (!isNaN(parseFloat(pScore))){\n                  scoreAvg[pInfo.name].push(parseFloat(pScore));\n                }\n              }\n            }\n\n            row.push(pRate);\n            row.push(pScore);\n          });\n\n          rows.push(row.join(','));\n        });\n\n        Object.keys(aprAvg).forEach( p => {\n          const avgRate = aprAvg[p].sum()/aprAvg[p].length;\n          this.customLog(`${token}-${strategy}-${p} - Avg Rate: ${avgRate}`);\n        });\n\n        Object.keys(scoreAvg).forEach( p => {\n          const avgScore = scoreAvg[p].sum()/scoreAvg[p].length;\n          this.customLog(`${token}-${strategy}-${p} - Avg Score: ${avgScore}`);\n        });\n\n        // if (token==='DAI' && isRisk){\n        //   debugger;\n        // }\n\n        csv.push(rows.join('\\n'));\n      });\n    });\n\n    this.customLog(csv.join('\\n'));\n  }\n  getGovTokenPool = async (govToken=null,availableTokens=null,convertToken=null) => {\n    let output = this.BNify(0);\n\n    if (!availableTokens){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const enabledTokens = govToken ? [govToken] : null;\n      const compTokenBalance = await this.getGovTokensBalances(tokenConfig.idle.address,convertToken,enabledTokens);\n      if (compTokenBalance && compTokenBalance.total){\n        output = output.plus(compTokenBalance.total);\n      }\n    });\n    return output;\n  }\n  getIdleGovToken = () => {\n    if (!this.idleGovToken){\n      this.idleGovToken = new IdleGovToken(this.props);\n    } else {\n      this.idleGovToken.setProps(this.props);\n    }\n    return this.idleGovToken;\n  }\n  getGovTokensFarming = () => {\n    const output = {};\n    const availableTokens = this.props.availableTokens;\n\n    Object.keys(availableTokens).forEach( token => {\n      const tokenGovTokens = this.getTokenGovTokens(availableTokens[token]);\n      Object.keys(tokenGovTokens).forEach( govToken => {\n        output[govToken] = tokenGovTokens[govToken];\n      });\n    });\n\n    return output;\n  }\n  getTokenGovTokens = (tokenConfig) => {\n    const output = {};\n    const currentNetworkId = this.getRequiredNetworkId();\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    Object.keys(govTokens).forEach( govToken => {\n      const govTokenConfig = govTokens[govToken];\n      const disabledTokens = this.getArrayPath(['disabledTokens',currentNetworkId],govTokenConfig) || [];\n      if (!govTokenConfig.enabled || disabledTokens.includes(tokenConfig.idle.token) || (govTokenConfig.availableNetworks && !govTokenConfig.availableNetworks.includes(currentNetworkId))){\n        return;\n      }\n\n      if (govTokenConfig.protocol === 'idle'){\n        output[govToken] = govTokenConfig;\n      } else {\n        const foundProtocol = tokenConfig.protocols.find( p => (p.enabled && p.name.toLowerCase() === govTokenConfig.protocol.toLowerCase()) )\n        if (foundProtocol){\n          output[govToken] = govTokenConfig;\n        }\n      }\n    });\n    return output;\n  }\n  fixDistributionSpeed = (speed,frequency='day',mode='block') => {\n    const blocksPerYear = this.BNify(this.getGlobalConfig(['network','blocksPerYear']));\n    const secondsPerYear = this.BNify(this.getGlobalConfig(['network','secondsPerYear']));\n    const multipliers = {\n      'day':{\n        'block':blocksPerYear.div(365.242199),\n        'second':secondsPerYear.div(365.242199)\n      },\n      'week':{\n        'block':blocksPerYear.div(52.1429),\n        'second':secondsPerYear.div(52.1429)\n      },\n      'month':{\n        'block':blocksPerYear.div(12),\n        'second':secondsPerYear.div(12)\n      },\n      'year':{\n        'block':blocksPerYear.div(1),\n        'second':secondsPerYear.div(1)\n      }\n    };\n    speed = this.BNify(speed);\n    if (speed && !speed.isNaN()){\n      return speed.times(multipliers[frequency][mode]);\n    }\n    return null;\n  }\n  getGovTokensUserDistributionSpeed = async (account,tokenConfig=null,enabledTokens=null) => {\n    const govTokensUserDistribution = {};\n    const govTokens = this.getGlobalConfig(['govTokens']);\n\n    await this.asyncForEach(Object.keys(govTokens),async (govToken) => {\n      if (enabledTokens && !enabledTokens.includes(govToken)){\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled){\n        return;\n      }\n\n      const availableTokens = {};\n      availableTokens[tokenConfig.token] = tokenConfig;\n\n      let output = null;\n      switch (govToken){\n        case 'COMP':\n          output = await this.getCompUserDistribution(account,availableTokens);\n        break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          output = await idleGovToken.getUserDistribution(account,availableTokens);\n        break;\n        default:\n        break;\n      }\n\n      if (output){\n        output = output.div(1e18);\n        if (govTokenConfig.distributionFrequency){\n          output = this.fixDistributionSpeed(output,govTokenConfig.distributionFrequency,govTokenConfig.distributionMode);\n        }\n        govTokensUserDistribution[govToken] = output;\n      }\n    });\n\n    return govTokensUserDistribution;\n  }\n  getGovTokensDistributionSpeed = async (tokenConfig,enabledTokens=null) => {\n    const govTokensDistribution = {};\n    const tokenGovTokens = this.getTokenGovTokens(tokenConfig);\n    \n    await this.asyncForEach(Object.keys(tokenGovTokens), async (govToken) => {\n      let govSpeed = null;\n      const govTokenConfig = tokenGovTokens[govToken];\n\n      switch (govToken){\n        case 'COMP':\n          govSpeed = await this.getCompDistribution(tokenConfig,null,false);\n        break;\n        case 'WMATIC':\n        case 'stkAAVE':\n          govSpeed = await this.getStkAaveDistribution(tokenConfig,null,false);\n        break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          govSpeed = await idleGovToken.getSpeed(tokenConfig.idle.address);\n        break;\n        default:\n        break;\n      }\n\n      if (govSpeed){\n        govSpeed = govSpeed.div(1e18);\n        if (govTokenConfig.distributionFrequency && govTokenConfig.distributionMode){\n          govSpeed = this.fixDistributionSpeed(govSpeed,govTokenConfig.distributionFrequency,govTokenConfig.distributionMode);\n        }\n        govTokensDistribution[govToken] = govSpeed;\n      }\n    });\n\n    return govTokensDistribution;\n  }\n  getGovTokensAprs = async (token,tokenConfig,enabledTokens=null) => {\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const govTokensAprs = {}\n\n    await this.asyncForEach(Object.keys(govTokens),async (govToken) => {\n\n      if (enabledTokens && !enabledTokens.includes(govToken)){\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled || govTokenConfig.aprTooltipMode === false){\n        return;\n      }\n\n      let output = null;\n      let tokenAllocation = null;\n\n      switch (govToken){\n        case 'WMATIC':\n        case 'stkAAVE':\n          switch (govTokenConfig.aprTooltipMode){\n            default:\n            case 'apr':\n              [output,tokenAllocation] = await Promise.all([\n                this.getStkAaveApr(token,tokenConfig),\n                this.getTokenAllocation(tokenConfig,false,false)\n              ]);\n\n              // Cut the AAVE token proportionally on Idle funds allocation in aave\n              if (tokenAllocation){\n                const aTokenConfig = tokenConfig.protocols.find( p => (p.name === govTokenConfig.protocol) );\n                if (aTokenConfig){\n                  if (tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()]){\n                    const aaveAllocationPerc = tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()];\n                    output = output.times(aaveAllocationPerc);\n                  }\n                }\n              }\n            break;\n          }\n        break;\n        case 'COMP':\n          switch (govTokenConfig.aprTooltipMode){\n            default:\n            case 'apr':\n              [output,tokenAllocation] = await Promise.all([\n                this.getCompAPR(token,tokenConfig),\n                this.getTokenAllocation(tokenConfig,false,false)\n              ]);\n\n              // Cut the COMP token proportionally on Idle funds allocation in compound\n              if (tokenAllocation){\n                const cTokenConfig = tokenConfig.protocols.find( p => (p.name === 'compound') );\n                if (cTokenConfig){\n                  if (tokenAllocation.protocolsAllocationsPerc[cTokenConfig.address.toLowerCase()]){\n                    const compoundAllocationPerc = tokenAllocation.protocolsAllocationsPerc[cTokenConfig.address.toLowerCase()];\n                    output = output.times(compoundAllocationPerc);\n                  }\n                }\n              }\n            break;\n          }\n        break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          switch (govTokenConfig.aprTooltipMode){\n            case 'apr':\n              output = await idleGovToken.getAPR(token,tokenConfig);\n            break;\n            case 'distribution':\n              output = await idleGovToken.getSpeed(tokenConfig.idle.address);\n              if (output){\n                output = this.fixTokenDecimals(output,18);\n                output = this.fixDistributionSpeed(output,govTokenConfig.distributionFrequency,govTokenConfig.distributionMode);\n              }\n            break;\n            case 'userDistribution':\n              output = await idleGovToken.getUserDistribution(tokenConfig);\n            break;\n            default:\n            break;\n          }\n        break;\n        default:\n        break;\n      }\n\n      if (output !== null && this.BNify(output).gt(0)){\n        govTokensAprs[govToken] = output;\n      }\n    });\n\n    return govTokensAprs;\n  }\n  getGovTokensBalances = async (address=null,convertToken='DAI',enabledTokens=null) => {\n    if (!address){\n      address = this.props.tokenConfig.idle.address;\n    }\n\n    const cachedDataKey = `getGovTokensBalances_${address}_${convertToken}_${JSON.stringify(enabledTokens)}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null){\n      return cachedData;\n    }\n\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const govTokensBalances = {}\n\n    await this.asyncForEach(Object.keys(govTokens),async (token) => {\n\n      if (enabledTokens && !enabledTokens.includes(token)){\n        return;\n      }\n      \n      const govTokenConfig = govTokens[token];\n\n      if (!govTokenConfig.enabled){\n        return;\n      }\n\n      const destTokenConfig = {\n        address:govTokenConfig.addressForPrice || govTokenConfig.address\n      };\n\n      // Get gov token balance\n      let govTokenBalance = await this.getProtocolBalance(token,address);\n\n      if (govTokenBalance){\n        // Get gov token conversion rate\n        let tokenConversionRate = null;\n        if (convertToken){\n          const fromTokenConfig = this.getGlobalConfig(['stats','tokens',convertToken]);\n          try {\n            tokenConversionRate = await this.getUniswapConversionRate(fromTokenConfig,destTokenConfig);\n          } catch (error) {\n            tokenConversionRate = this.BNify(0);\n          }\n        }\n\n        const tokenBalance = this.fixTokenDecimals(govTokenBalance,govTokens[token].decimals,tokenConversionRate);\n\n        // Fix token decimals and convert\n        govTokensBalances[token] = tokenBalance;\n\n        // Initialize Total gov Tokens\n        if (!govTokensBalances.total){\n          govTokensBalances.total = this.BNify(0);\n        }\n\n        // Sum Total gov Tokens\n        govTokensBalances.total = govTokensBalances.total.plus(govTokensBalances[token]);\n      }\n    });\n\n    return this.setCachedData(cachedDataKey,govTokensBalances);\n  }\n  getGovTokenConfigByAddress = (address) => {\n    if (!address){\n      return false;\n    }\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    return Object.values(govTokens).find( tokenConfig => (tokenConfig.enabled && tokenConfig.address.toLowerCase() === address.toLowerCase()) );\n  }\n  getGovTokensUserTotalBalance = async (account=null,availableTokens=null,convertToken=null,checkShowBalance=true) => {\n\n    // Check for cached data\n    const cachedDataKey = `govTokensUserTotalBalance_${account}_${availableTokens ? JSON.stringify(Object.keys(availableTokens)) : 'null'}_${convertToken}_${checkShowBalance}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const govTokensUserBalances = await this.getGovTokensUserBalances(account,availableTokens,convertToken,null,checkShowBalance);\n    if (govTokensUserBalances){\n      const govTokensEarnings = Object.values(govTokensUserBalances).reduce( (acc, govTokenAmount) => {\n        acc = acc.plus(this.BNify(govTokenAmount));\n        return acc;\n      }, this.BNify(0));\n\n      return this.setCachedDataWithLocalStorage(cachedDataKey,govTokensEarnings);\n    }\n    return this.BNify(0);\n  }\n  getGovTokensIndexes = async (account,tokenConfig) => {\n    if (!account){\n      account = this.props.account;\n    }\n    const output = {};\n    const govTokensAmounts = await this.getGovTokensUserAmounts(tokenConfig.idle.token,account);\n    if (govTokensAmounts){\n      await this.asyncForEach(govTokensAmounts, async (govTokenAmount,govTokenIndex) => {\n        // Get gov Token config by index\n        const govTokenAddress = await this.getGovTokenAddessByIndex(tokenConfig.idle.token,govTokenIndex);\n\n        if (govTokenAddress){\n          const govTokenConfig = this.getGovTokenConfigByAddress(govTokenAddress);\n          if (govTokenConfig){\n            output[govTokenConfig.token] = govTokenIndex;\n          }\n        }\n      });\n    }\n\n    return output;\n  }\n  getGovTokenAddessByIndex = async (token,govTokenIndex) => {\n    const cachedDataKey = `govTokenAddressByIndex_${token}_${govTokenIndex}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    // console.log(cachedDataKey,cachedData);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const govTokenAddress = await this.genericContractCall(token,'govTokens',[govTokenIndex]);\n    return this.setCachedDataWithLocalStorage(cachedDataKey,govTokenAddress,null);\n  }\n  getGovTokensUserAmounts = async (token,account) => {\n    const cachedDataKey = `govTokenUserAmount_${token}_${account}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const govTokenAddress = await this.genericContractCall(token,'getGovTokensAmounts',[account]);\n    return this.setCachedDataWithLocalStorage(cachedDataKey,govTokenAddress);\n  }\n  getGovTokensUserBalances = async (account=null,availableTokens=null,convertToken=null,govTokenConfigForced=null,checkShowBalance=false) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.availableStrategies && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    const output = {};\n\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const idleTokenConfig = availableTokens[token].idle;\n\n      // Get govTokens amounts\n      const govTokensAmounts = await this.getGovTokensUserAmounts(idleTokenConfig.token,account);\n\n      // console.log('getGovTokensUserBalances_1',idleTokenConfig.token,govTokensAmounts);\n\n      if (govTokensAmounts){\n        await this.asyncForEach(govTokensAmounts, async (govTokenAmount,govTokenIndex) => {\n          govTokenAmount = this.BNify(govTokenAmount);\n          // Get gov Token config by index\n          const govTokenAddress = await this.getGovTokenAddessByIndex(idleTokenConfig.token,govTokenIndex);\n\n          // console.log('getGovTokensUserBalances_2',idleTokenConfig.token,govTokenIndex,govTokenAddress);\n\n          if (govTokenAddress){\n            const govTokenConfig = govTokenConfigForced ? govTokenConfigForced : this.getGovTokenConfigByAddress(govTokenAddress);\n\n            if (govTokenConfig && (!checkShowBalance || govTokenConfig.showBalance) && govTokenConfig.address && govTokenConfig.address.toLowerCase() === govTokenAddress.toLowerCase()){\n\n              // Get gov token conversion rate\n              let tokenConversionRate = null;\n              if (convertToken){\n                const fromTokenConfig = this.getGlobalConfig(['stats','tokens',convertToken]);\n                if (fromTokenConfig){\n                  try {\n                    tokenConversionRate = await this.getUniswapConversionRate(fromTokenConfig,govTokenConfig);\n                  } catch (error) {\n                    \n                  }\n                }\n              }\n\n              govTokenAmount = this.fixTokenDecimals(govTokenAmount,govTokenConfig.decimals,tokenConversionRate);\n\n              // console.log('getGovTokensUserBalances',idleTokenConfig.token,govTokenIndex,govTokenConfig.token,govTokenAddress,parseFloat(tokenConversionRate),parseFloat(govTokenAmount));\n\n              // Initialize govToken balance\n              if (!output[govTokenConfig.token]){\n                output[govTokenConfig.token] = this.BNify(0); // this.BNify(1) for testing\n              }\n\n              // Add govTokens balance\n              output[govTokenConfig.token] = output[govTokenConfig.token].plus(govTokenAmount);\n            }\n          }\n        });\n      }\n    });\n\n    return output;\n  }\n  getTokenFees = async (tokenConfig=null) => {\n    if (!tokenConfig && this.props.tokenConfig){\n      tokenConfig = this.props.tokenConfig;\n    }\n    const fee = await this.genericContractCallCached(tokenConfig.idle.token, 'fee', [], {}, 'latest', null);\n    if (fee){\n      return this.BNify(fee).div(this.BNify(100000));\n    }\n    return null;\n  }\n  getUserTokenFees = async (tokenConfig=null,account=null) => {\n    if (!tokenConfig && this.props.tokenConfig){\n      tokenConfig = this.props.tokenConfig;\n    }\n    if (!account && this.props.account){\n      account = this.props.account;\n    }\n\n    if (!account || !tokenConfig){\n      return null;\n    }\n\n    let [\n      feePercentage,\n      amountLent,\n      redeemableBalance\n    ] = await Promise.all([\n      this.getTokenFees(tokenConfig),\n      this.loadAssetField('amountLent',tokenConfig.token,tokenConfig,account),\n      this.loadAssetField('redeemableBalance',tokenConfig.token,tokenConfig,account)\n    ]);\n\n    if (feePercentage && amountLent && redeemableBalance){\n      const gain = redeemableBalance.minus(amountLent);\n      const fees = gain.times(feePercentage);\n\n      // this.customLog('fees',tokenConfig.token,amountLent.toString(),redeemableBalance.toString(),gain.toString(),fees.toString());\n\n      return fees;\n    }\n\n    return null;\n  }\n  getGovTokenUserBalance = async (govTokenConfig,account=null,availableTokens=null,convertToken=null) => {\n    const govTokensUserBalances = await this.getGovTokensUserBalances(account,availableTokens,convertToken,govTokenConfig);\n    return govTokensUserBalances && govTokensUserBalances[govTokenConfig.token] ? govTokensUserBalances[govTokenConfig.token] : this.BNify(0);\n  }\n  getTotalTVL = async () => {\n    const tokensTVL = await this.getTokensTVL();\n    return Object.values(tokensTVL).reduce( (totalTVL,tokenInfo) => {\n      const tokenTVL = this.BNify(tokenInfo.totalTVL);\n      if (tokenTVL && !tokenTVL.isNaN()){\n        totalTVL = totalTVL.plus(tokenTVL);\n      }\n      return totalTVL;\n    },this.BNify(0));\n  }\n  getTokensTVL = async () => {\n    const output = {};\n    const DAITokenConfig = {\n      address:this.getContractByName('DAI')._address\n    };\n    await this.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n      const isRisk = strategy === 'risk';\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n\n        let tokenTVL = this.BNify(0);\n        let totalTVL = this.BNify(0);\n        let oldTokenTVL = this.BNify(0);\n        const tokenConfig = availableTokens[token];\n        const idleTokenName = tokenConfig.idle.token;\n\n        output[idleTokenName] = {\n          tokenTVL,\n          totalTVL,\n          oldTokenTVL,\n          govTokens:{},\n        };\n\n        const [\n          tokenPrice,\n          totalSupply\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.getIdleTokenSupply(idleTokenName)\n        ]);\n\n        tokenTVL = this.fixTokenDecimals(totalSupply,18).times(tokenPrice);\n        tokenTVL = await this.convertTokenBalance(tokenTVL,token,tokenConfig,isRisk);\n\n        output[idleTokenName].tokenTVL = tokenTVL;\n        totalTVL = totalTVL.plus(tokenTVL);\n\n        // Add Gov Tokens\n        const govTokens = this.getTokenGovTokens(tokenConfig);\n        if (govTokens){\n          await this.asyncForEach(Object.keys(govTokens).filter( govToken => (govTokens[govToken].showAUM) ), async (govToken) => {\n            const govTokenConfig = govTokens[govToken];\n            const [\n              govTokenBalance,\n              govTokenConversionRate\n            ] = await Promise.all([\n              this.getProtocolBalance(govToken,tokenConfig.idle.address),\n              this.getUniswapConversionRate(DAITokenConfig,govTokenConfig)\n            ]);\n            \n            if (govTokenBalance && govTokenConversionRate){\n              const govTokenBalanceConverted = this.fixTokenDecimals(govTokenBalance,govTokenConfig.decimals).times(this.BNify(govTokenConversionRate));\n              if (govTokenBalanceConverted && !govTokenBalanceConverted.isNaN()){\n                totalTVL = totalTVL.plus(govTokenBalanceConverted);\n                output[idleTokenName].govTokens[govToken] = govTokenBalanceConverted;\n              }\n            }\n          });\n        }\n\n        // Get old token allocation\n        if (tokenConfig.migration && tokenConfig.migration.oldContract){\n          const oldTokenConfig = Object.assign({},tokenConfig);\n          oldTokenConfig.protocols = Object.values(tokenConfig.protocols);\n          oldTokenConfig.idle = Object.assign({},tokenConfig.migration.oldContract);\n\n          // Replace protocols with old protocols\n          if (oldTokenConfig.migration.oldProtocols){\n            oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n              const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n              if (foundProtocol){\n                const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                oldTokenConfig.protocols[protocolPos] = oldProtocol;\n              }\n            });\n          }\n\n          const [\n            oldTokenPrice,\n            oldTotalSupply\n          ] = await Promise.all([\n            this.getIdleTokenPrice(oldTokenConfig),\n            this.getIdleTokenSupply(oldTokenConfig.idle.name)\n          ]);\n\n          if (oldTokenPrice && oldTotalSupply){\n            oldTokenTVL = this.fixTokenDecimals(oldTotalSupply,18).times(oldTokenPrice);\n            oldTokenTVL = await this.convertTokenBalance(oldTokenTVL,token,oldTokenConfig,isRisk);\n            if (oldTokenTVL && !oldTokenTVL.isNaN()){\n              output[idleTokenName].oldTokenTVL = oldTokenTVL;\n              totalTVL = totalTVL.plus(oldTokenTVL);\n            }\n          }\n        }\n\n        output[idleTokenName].totalTVL = totalTVL;\n      });\n    });\n\n    return output;\n  }\n  getSubstackLatestFeed = async () => {\n    const cachedDataKey = `substackLatestFeed`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const networkId = this.getRequiredNetworkId();\n    const config = this.getGlobalConfig(['stats','config']);\n    const endpointInfo = this.getGlobalConfig(['stats','substack']);\n    const idleSubstackFeed = await this.makeRequest(endpointInfo.endpoint[networkId],false,config);\n\n    if (idleSubstackFeed && idleSubstackFeed.data && idleSubstackFeed.data.items && idleSubstackFeed.data.items.length>0){\n      const latestFeed = idleSubstackFeed.data.items[0];\n      return this.setCachedDataWithLocalStorage(cachedDataKey,latestFeed,endpointInfo.TTL);\n    }\n\n    return null;\n  }\n  getAvailableTokenAddress = (token,strategy) => {\n    const networkId = this.getRequiredNetworkId();\n    const tokenConfig = this.getArrayPath([networkId,strategy,token],availableTokens);\n    return tokenConfig ? tokenConfig.address : null;\n  }\n  getAggregatedStats = async (addGovTokens=true,allNetworks=false) => {\n    const networkId = this.getRequiredNetworkId();\n    const config = this.getGlobalConfig(['stats','config']);\n    const endpointInfo = this.getGlobalConfig(['stats','tvls']);\n    let networkIds = [networkId];\n    if (allNetworks){\n      networkIds = Object.keys(endpointInfo.endpoint);\n    }\n\n    let avgAPY = this.BNify(0);\n    let totalAUM = this.BNify(0);\n\n    await this.asyncForEach(networkIds, async (networkId) => {\n      let tvls = await this.makeCachedRequest(endpointInfo.endpoint[networkId],endpointInfo.TTL,true,false,config);\n      if (!tvls){\n        tvls = await this.getAggregatedStats_chain();\n      }\n\n      if (tvls){\n        avgAPY = avgAPY.plus(this.BNify(tvls.avgAPY).times(this.BNify(tvls.totalTVL)));\n        totalAUM = totalAUM.plus(this.BNify(tvls.totalTVL));\n      }\n    });\n\n    avgAPY = avgAPY.div(totalAUM);\n\n    return {\n      avgAPY,\n      totalAUM\n    };\n  }\n  getAggregatedStats_chain = async (addGovTokens=true) => {\n\n    // Check for cached data\n    const cachedDataKey = `getAggregatedStats_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && (cachedData.avgAPR && !this.BNify(cachedData.avgAPR).isNaN()) && (cachedData.avgAPY && !this.BNify(cachedData.avgAPY).isNaN()) && (cachedData.totalAUM && !this.BNify(cachedData.totalAUM).isNaN())){\n      return {\n        avgAPR:this.BNify(cachedData.avgAPR),\n        avgAPY:this.BNify(cachedData.avgAPY),\n        totalAUM:this.BNify(cachedData.totalAUM)\n      };\n    }\n\n    let avgAPR = this.BNify(0);\n    let avgAPY = this.BNify(0);\n    let totalAUM = this.BNify(0);\n    const DAITokenConfig = {\n      address:this.getContractByName('DAI')._address\n    };\n    await this.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n      const isRisk = strategy === 'risk';\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n        const tokenConfig = availableTokens[token];\n        const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,addGovTokens);\n        const tokenAprs = await this.getTokenAprs(tokenConfig,tokenAllocation,addGovTokens);\n        if (tokenAllocation && tokenAllocation.totalAllocationWithUnlent && !tokenAllocation.totalAllocationWithUnlent.isNaN()){\n          const tokenAUM = await this.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent,token,tokenConfig,isRisk);\n          totalAUM = totalAUM.plus(tokenAUM);\n          // console.log(tokenConfig.idle.token+'V4',tokenAUM.toFixed());\n          if (tokenAprs && tokenAprs.avgApr && !tokenAprs.avgApr.isNaN()){\n            avgAPR = avgAPR.plus(tokenAUM.times(tokenAprs.avgApr));\n            avgAPY = avgAPY.plus(tokenAUM.times(tokenAprs.avgApy));\n          }\n        }\n\n        // Add Gov Tokens\n        const govTokens = this.getTokenGovTokens(tokenConfig);\n        if (govTokens){\n          await this.asyncForEach(Object.keys(govTokens).filter( govToken => (govTokens[govToken].showAUM) ), async (govToken) => {\n            const govTokenConfig = govTokens[govToken];\n            const [\n              tokenBalance,\n              tokenConversionRate\n            ] = await Promise.all([\n              this.getProtocolBalance(govToken,tokenConfig.idle.address),\n              this.getUniswapConversionRate(DAITokenConfig,govTokenConfig)\n            ]);\n            \n            if (tokenBalance && tokenConversionRate){\n              const tokenBalanceConverted = this.fixTokenDecimals(tokenBalance,govTokenConfig.decimals).times(this.BNify(tokenConversionRate));\n              if (tokenBalanceConverted && !tokenBalanceConverted.isNaN()){\n                // console.log(tokenConfig.idle.token+'V4 - COMP',tokenBalanceConverted.toFixed());\n                totalAUM = totalAUM.plus(tokenBalanceConverted);\n              }\n            }\n          });\n        }\n\n        // Get old token allocation\n        if (tokenConfig.migration && tokenConfig.migration.oldContract){\n          const oldTokenConfig = Object.assign({},tokenConfig);\n          oldTokenConfig.protocols = Object.values(tokenConfig.protocols);\n          oldTokenConfig.idle = Object.assign({},tokenConfig.migration.oldContract);\n\n          // Replace protocols with old protocols\n          if (oldTokenConfig.migration.oldProtocols){\n            oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n              const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n              if (foundProtocol){\n                const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                oldTokenConfig.protocols[protocolPos] = oldProtocol;\n              }\n            });\n          }\n\n          const oldTokenAllocation = await this.getTokenAllocation(oldTokenConfig,false,false);\n          if (oldTokenAllocation && oldTokenAllocation.totalAllocation && !oldTokenAllocation.totalAllocation.isNaN()){\n            const oldTokenTotalAllocation = await this.convertTokenBalance(oldTokenAllocation.totalAllocation,token,oldTokenConfig,isRisk);\n            totalAUM = totalAUM.plus(oldTokenTotalAllocation);\n            // console.log(oldTokenConfig.idle.name,oldTokenTotalAllocation.toFixed(5));\n          }\n        }\n      });\n    });\n\n    avgAPR = avgAPR.div(totalAUM);\n    avgAPY = avgAPY.div(totalAUM);\n\n    const output = {\n      avgAPR,\n      avgAPY,\n      totalAUM\n    };\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey,output);\n  }\n  getTokenApy = async (tokenConfig) => {\n    const tokenAprs = await this.getTokenAprs(tokenConfig);\n    if (tokenAprs && tokenAprs.avgApy !== null){\n      return tokenAprs.avgApy;\n    }\n    return null;\n  }\n  getTokensToMigrate = async (selectedStrategy=null) => {\n\n    if (!this.props.availableStrategies || !this.props.account){\n      return false;\n    }\n\n    const tokensToMigrate = {};\n\n    await this.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n      if (selectedStrategy && selectedStrategy !== strategy){\n        return;\n      }\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n        const tokenConfig = availableTokens[token];\n        const {\n          migrationEnabled,\n          oldContractBalanceFormatted\n        } = await this.checkMigration(tokenConfig,this.props.account);\n        \n        if (migrationEnabled){\n          const tokenKey = selectedStrategy ? token : tokenConfig.idle.token;\n          tokensToMigrate[tokenKey] = {\n            token,\n            strategy,\n            tokenConfig,\n            oldContractBalanceFormatted\n          }\n        }\n      });\n    });\n\n    return tokensToMigrate;\n  }\n  /*\n  Get protocols tokens balances\n  */\n  getProtocolsTokensBalances = async (protocol=null) => {\n    if (!this.props.account){\n      return false;\n    }\n    const tokenBalances = {};\n    const minTokenBalance = this.BNify(1).div(1e4);\n    const protocolsTokens = this.getGlobalConfig(['tools','tokenMigration','props','availableTokens']);\n    if (protocolsTokens){\n      await this.asyncForEach(Object.keys(protocolsTokens),async (token) => {\n        const tokenConfig = protocolsTokens[token];\n        if (protocol !== null && tokenConfig.protocol.toLowerCase() !== protocol.toLowerCase() ){\n          return;\n        }\n        let tokenContract = this.getContractByName(tokenConfig.token);\n        if (!tokenContract && tokenConfig.abi){\n          tokenContract = await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n        }\n        if (tokenContract){\n          const tokenBalance = await this.getTokenBalance(tokenConfig.token,this.props.account);\n          if (tokenBalance && tokenBalance.gte(minTokenBalance)){\n            tokenBalances[token] = {\n              tokenConfig,\n              balance:tokenBalance,\n            };\n          }\n        }\n      });\n    }\n\n    return tokenBalances;\n  }\n  /*\n  Convert token Balance\n  */\n  convertTokenBalance = async (tokenBalance,token,tokenConfig,isRisk=false) => {\n    // Check for USD conversion rate\n    tokenBalance = this.BNify(tokenBalance);\n    if (tokenBalance.gt(0)){\n      const tokenUsdConversionRate = await this.getTokenConversionRate(tokenConfig,isRisk);\n      // console.log('convertTokenBalance',token,isRisk,tokenUsdConversionRate);\n      if (tokenUsdConversionRate){\n        tokenBalance = tokenBalance.times(tokenUsdConversionRate);\n      }\n    }\n    return tokenBalance;\n  }\n\n  getAvgAPYStats = async (address,isRisk,startTimestamp=null,endTimestamp=null) => {\n\n    const apiResults = await this.getTokenApiData(address,isRisk,startTimestamp,endTimestamp,true,7200);\n\n    if (apiResults && apiResults.length){\n      const apr = apiResults.reduce( (sum,r) => {\n        const idleRate = this.fixTokenDecimals(r.idleRate,18);\n        return sum.plus(idleRate);\n      },this.BNify(0));\n\n      // Calculate average\n      return apr.div(apiResults.length);\n    }\n\n    return this.BNify(0);\n  }\n\n  /*\n  Get idleToken conversion rate\n  */\n  getTokenConversionRate = async (tokenConfig,isRisk,conversionRateField=null,count=0) => {\n\n    if (!conversionRateField){\n      conversionRateField = this.getGlobalConfig(['stats','tokens',tokenConfig.token,'conversionRateField']);\n      if (!conversionRateField){\n        return null;\n      }\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenConversionRate_${tokenConfig.address}_${isRisk}_${conversionRateField}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let tokenData = await this.getTokenApiData(tokenConfig.address,isRisk,null,null,false,null,'desc',1);\n    if (tokenData && tokenData.length){\n      tokenData = tokenData.pop();\n      if (tokenData && !this.BNify(tokenData[conversionRateField]).isNaN()){\n        const conversionRate = this.fixTokenDecimals(tokenData[conversionRateField],18);\n        if (!this.BNify(conversionRate).isNaN()){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,conversionRate);\n        }\n      }\n    }\n\n    const DAITokenConfig = {\n      address:this.getContractByName('DAI')._address\n    };\n    const ToTokenConfig = tokenConfig.token ? this.getGlobalConfig(['stats','tokens',tokenConfig.token]) : tokenConfig;\n    const conversionRate = await this.getUniswapConversionRate(DAITokenConfig,ToTokenConfig);\n    if (!this.BNify(conversionRate).isNaN()){\n      return this.setCachedDataWithLocalStorage(cachedDataKey,conversionRate);\n    }\n\n    if (count<3){\n      return await this.getTokenConversionRate(tokenConfig,isRisk,conversionRateField,count+1); \n    }\n\n    return null;\n  }\n\n  getTokenScore = async (tokenConfig,isRisk) => {\n    // Check for cached data\n    const cachedDataKey = `tokenScore_${tokenConfig.address}_${isRisk}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const networkId = this.getRequiredNetworkId();\n    const apiInfo = this.getGlobalConfig(['stats','rates']);\n    const config = this.getGlobalConfig(['stats','config']);\n    const endpoint = `${apiInfo.endpoint[networkId]}${tokenConfig.address}?isRisk=${isRisk}&limit=1&order=DESC`;\n    const [\n      tokenData,\n      tokenAllocation\n    ] = await Promise.all([\n      this.makeCachedRequest(endpoint,apiInfo.TTL,true,false,config),\n      this.getTokenAllocation(tokenConfig,false,false)\n    ]);\n\n    let tokenScore = this.BNify(0);\n\n    if (tokenAllocation){\n      Object.keys(tokenAllocation.protocolsAllocationsPerc).forEach( protocolAddr => {\n        const protocolAllocationPerc = this.BNify(tokenAllocation.protocolsAllocationsPerc[protocolAddr]);\n        if (protocolAllocationPerc.gt(0.001)){\n          let protocolScore = null;\n\n          const protocolInfo = tokenData && tokenData.length>0 ? tokenData[0].protocolsData.find( p => (p.protocolAddr.toLowerCase() === protocolAddr.toLowerCase()) ) : null;\n          if (protocolInfo){\n            protocolScore = this.BNify(protocolInfo.defiScore);\n          }\n\n          // Take protocol score from tokenConfig\n          if (!protocolScore || this.BNify(protocolScore).isNaN() || this.BNify(protocolScore).lte(0)){\n            const protocolConfig = tokenConfig.protocols.find(p => p.address.toLowerCase() === protocolAddr.toLowerCase());\n            if (protocolConfig){\n              protocolScore = this.BNify(protocolConfig.defiScore);\n            }\n          }\n\n          if (!protocolScore.isNaN()){\n            tokenScore = tokenScore.plus(protocolScore.times(protocolAllocationPerc));\n          }\n        }\n      });\n    }\n\n    // Fallback\n    if (!tokenScore || tokenScore.isNaN() || tokenScore.lte(0)){\n      tokenScore = await this.getTokenScoreApi(tokenConfig,isRisk);\n    }\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey,tokenScore);\n  }\n\n  /*\n  Get idleToken score\n  */\n  getTokenScoreApi = async (tokenConfig,isRisk) => {\n    // Check for cached data\n    const cachedDataKey = `tokenScoreApi_${tokenConfig.address}_${isRisk}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const networkId = this.getRequiredNetworkId();\n    const apiInfo = this.getGlobalConfig(['stats','scores']);\n\n    if (!apiInfo.endpoint[networkId]){\n      return this.BNify(0);\n    }\n\n    const config = this.getGlobalConfig(['stats','config']);\n    const endpoint = `${apiInfo.endpoint[networkId]}${tokenConfig.address}?isRisk=${isRisk}`;\n    let scores = await this.makeCachedRequest(endpoint,apiInfo.TTL,true,false,config);\n\n    if (scores && scores.length>0){\n      let tokenData = scores.find( s => s.address.toLowerCase() === tokenConfig.address.toLowerCase() );\n      if (tokenData){\n        let tokenScore = this.BNify(tokenData.idleScore);\n        if (tokenScore && tokenScore.gt(0)){\n          // Set cached data\n          return this.setCachedData(cachedDataKey,tokenScore);\n        // Take latest historical valid score\n        } else {\n          const timestamp = parseInt(Date.now()/1000);\n          const startTimestamp = parseInt(timestamp)-(60*60*24);\n          tokenData = await this.getTokenApiData(tokenConfig.address,isRisk,startTimestamp,null,true,null,'DESC');\n\n          const filteredTokenData = tokenData.filter( d => (this.BNify(d.idleScore).gt(0)) );\n          if (filteredTokenData.length){\n            tokenScore = this.BNify(filteredTokenData[0].idleScore);\n            if (!this.BNify(tokenScore).isNaN()){\n              return this.setCachedDataWithLocalStorage(cachedDataKey,tokenScore);\n            }\n          }\n        }\n      }\n    }\n\n    return this.BNify(0);\n  }\n  /*\n  Get idleTokens aggregated APR\n  */\n  getTokenAprs = async (tokenConfig,tokenAllocation=false,addGovTokens=true) => {\n\n    const tokenAprs = {\n      avgApr: this.BNify(0),\n      avgApy: this.BNify(0)\n    };\n\n    if (!tokenConfig.idle){\n      return tokenAprs;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenAprs_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && (cachedData.avgApr && !this.BNify(cachedData.avgApr).isNaN()) && (cachedData.avgApy && !this.BNify(cachedData.avgApy).isNaN()) ){\n      // console.log('getTokenAprs - CACHED',tokenConfig.idle.token,cachedData);\n      return {\n        avgApr:this.BNify(cachedData.avgApr),\n        avgApy:this.BNify(cachedData.avgApy)\n      };\n    }\n\n    tokenAprs.avgApr = await this.genericContractCallCached(tokenConfig.idle.token,'getAvgAPR');\n    if (tokenAprs.avgApr){\n      tokenAprs.avgApr = this.fixTokenDecimals(tokenAprs.avgApr,18);\n    }\n\n    if (tokenAprs.avgApr){\n\n      tokenAprs.avgApy = this.apr2apy(tokenAprs.avgApr.div(100)).times(100);\n\n      // Add $IDLE token APR\n      const idleGovTokenShowAPR = this.getGlobalConfig(['govTokens','IDLE','showAPR']);\n      const idleGovTokenEnabled = this.getGlobalConfig(['govTokens','IDLE','enabled']);\n      if (idleGovTokenEnabled && idleGovTokenShowAPR){\n        const idleGovToken = this.getIdleGovToken();\n        const idleAPR = await idleGovToken.getAPR(tokenConfig.token,tokenConfig);\n        if (idleAPR){\n          tokenAprs.avgApr = tokenAprs.avgApr.plus(idleAPR);\n          tokenAprs.avgApy = tokenAprs.avgApy.plus(idleAPR);\n        }\n      }\n\n      // console.log('getTokenAprs',tokenConfig.idle.token,govTokensApr.toFixed(8),tokenAprs.avgApr.toFixed(8),tokenAprs.avgApy.toFixed(8));\n\n      if (this.BNify(tokenAprs.avgApy).isNaN()){\n        tokenAprs.avgApy = this.BNify(0);\n      }\n      if (this.BNify(tokenAprs.avgApr).isNaN()){\n        tokenAprs.avgApr = this.BNify(0);\n      }\n\n      // console.log('Aprs for '+tokenConfig.idle.token+' loaded in '+((Date.now()-start)/1000).toFixed(2)+'s');\n\n      return this.setCachedDataWithLocalStorage(cachedDataKey,tokenAprs);\n    }\n\n    return tokenAprs;\n  }\n  abbreviateNumber = (value,decimals=3,maxPrecision=5,minPrecision=0) => {\n\n    const isNegative = parseFloat(value)<0;\n    let newValue = this.BNify(value).abs();\n    const suffixes = [\"\", \"K\", \"M\", \"B\",\"T\"];\n    let suffixNum = 0;\n    while (newValue.gte(1000)) {\n      newValue = newValue.div(1000);\n      suffixNum++;\n    }\n\n    maxPrecision = Math.max(1,maxPrecision);\n\n    // Prevent decimals on integer number\n    if (value>=1000){\n      const decimalPart = decimals ? newValue.mod(1).toFixed(maxPrecision).substr(2,decimals) : null;\n      newValue = parseInt(newValue).toString()+( decimalPart ? '.'+decimalPart : '' );\n    } else {\n      newValue = newValue.toFixed(decimals);\n    }\n\n    // Adjust number precision\n    if (newValue>=1 && (newValue.length-1)>maxPrecision){\n      newValue = parseFloat(newValue).toPrecision(maxPrecision);\n    } else if ((newValue.length-1)<minPrecision) {\n      const difference = minPrecision-(newValue.length-1);\n      const append = this.BNify(value).abs().toString().replace('.','').substr((newValue.length-1),difference);\n      newValue += append;\n    }\n\n    // Add minus if number is negative\n    if (isNegative){\n      newValue = '-'+newValue;\n    }\n\n    newValue += suffixes[suffixNum];\n\n    return newValue;\n  }\n  getFormattedBalance(balance,label,decimals,maxLen,highlightedDecimals){\n    const defaultValue = '-';\n    decimals = !isNaN(decimals) ? decimals : 6;\n    maxLen = !isNaN(maxLen) ? maxLen : 10;\n    highlightedDecimals = !isNaN(highlightedDecimals) ? highlightedDecimals : 0;\n    balance = parseFloat(this.BNify(balance)).toFixed(decimals);\n\n    const numLen = balance.toString().replace('.','').length;\n    if (numLen>maxLen){\n      decimals = Math.max(0,decimals-(numLen-maxLen));\n      balance = parseFloat(this.BNify(balance)).toFixed(decimals);\n    }\n\n    const intPart = Math.floor(balance);\n    let decPart = (balance%1).toPrecision(decimals).substr(2,decimals);;\n    decPart = (decPart+(\"0\".repeat(decimals))).substr(0,decimals);\n\n    if (highlightedDecimals){\n      const highlightedDec = decPart.substr(0,highlightedDecimals);\n      decPart = decPart.substr(highlightedDecimals);\n      const highlightedIntPart = (<Text.span fontSize={'100%'} color={'blue'} fontWeight={'inerith'}>{intPart}.{highlightedDec}</Text.span>);\n      return !isNaN(this.trimEth(balance)) ? ( <>{highlightedIntPart}<small style={{fontSize:'70%'}}>{decPart}</small> <Text.span fontSize={[1,2]}>{label}</Text.span></> ) : defaultValue;\n    } else {\n      return !isNaN(this.trimEth(balance)) ? ( <>{intPart}<small>.{decPart}</small>{ label !== '%' ? ' ' : null }{ label ? <Text.span fontSize={[1,2]}>{label}</Text.span> : null }</> ) : defaultValue;\n    }\n  }\n};\n\nexport default FunctionsUtil;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"defaultOpacity\":\"DashboardCard_defaultOpacity__1B1rs\",\"hidden\":\"DashboardCard_hidden__8pO5t\",\"interactive\":\"DashboardCard_interactive__2adxr\",\"rainbow\":\"DashboardCard_rainbow__3HCI7\",\"disabled\":\"DashboardCard_disabled__uqHO2\"};","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Box,\n  Button,\n  Flex,\n  Image\n} from \"rimble-ui\";\nimport Select from 'react-select';\nimport ModalCard from './ModalCard';\nimport ImageButton from '../../ImageButton/ImageButton';\nimport styles from './Header.module.scss';\nimport globalConfigs from '../../configs/globalConfigs';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\n\nclass BuyModal extends React.Component {\n\n  state = {\n    selectedMethod:null,\n    availableMethods:[],\n    selectedCountry:null,\n    selectedProvider:null,\n    availableProviders:null,\n    selectedToken:this.props.buyToken,\n  }\n\n  async loadRemoteResources() {\n\n    if (!this.state.selectedToken){\n      return false;\n    }\n\n    // Load payments providers external remote resources\n    Object.keys(globalConfigs.payments.providers).forEach((provider,i) => {\n\n      const providerInfo = globalConfigs.payments.providers[provider];\n      if (providerInfo.enabled && providerInfo.remoteResources && (providerInfo.supportedTokens.indexOf(this.state.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1)){\n        \n        const remoteResources = providerInfo.remoteResources;\n\n        Object.keys(remoteResources).forEach((url,j) => {\n\n          const resourceType = url.split('.').pop().toLowerCase();\n\n          switch (resourceType){\n            case 'js':\n              const scriptID = `script_${provider}_${j}_${this.state.selectedToken}`;\n\n              if (!document.getElementById(scriptID)){\n                const script = document.createElement(\"script\");\n                const remoteResourceParams = remoteResources[url];\n                const callback = remoteResourceParams && remoteResourceParams.callback ? remoteResourceParams.callback : null;\n                const precall = remoteResourceParams && remoteResourceParams.precall ? remoteResourceParams.precall : null;\n\n                if (precall && typeof precall === 'function'){\n                  precall(this.state,globalConfigs,providerInfo);\n                }\n\n                if (callback && typeof callback === 'function'){\n                  if (script.readyState) {  // only required for IE <9\n                    script.onreadystatechange = function() {\n                      if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n                        script.onreadystatechange = null;\n                        callback();\n                      }\n                    };\n                  } else {  //Others\n                    script.onload = callback;\n                  }\n                }\n\n                script.id = scriptID;\n                script.className = `script_${provider}`;\n                script.src = url;\n                script.async = true;\n\n                if (remoteResourceParams && remoteResourceParams.parentElement){\n                  remoteResourceParams.parentElement.appendChild(script)\n                } else {\n                  document.head.appendChild(script);\n                }\n              }\n            break;\n            case 'css':\n              const stylesheetId = `stylesheet_${provider}_${j}`;\n\n              if (!document.getElementById(stylesheetId)){\n                const style = document.createElement(\"link\");\n\n                style.id = stylesheetId;\n                style.rel = 'stylesheet';\n                style.href = url;\n\n                document.head.appendChild(style);\n              }\n            break;\n            default:\n            break;\n          }\n        });\n      }\n    });\n  }\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  loadAvailableMethods(){\n    const availableMethods = {};\n    const availableMethodsKeys = this.props.availableMethods && this.props.availableMethods.length ? this.props.availableMethods : Object.keys(globalConfigs.payments.methods);\n\n    availableMethodsKeys.forEach(method => {\n      const availableProviders = this.getAvailablePaymentProviders(method,this.state.selectedToken);\n      if (availableProviders && availableProviders.length>0){\n        const methodInfo = globalConfigs.payments.methods[method];\n        methodInfo.availableProviders = availableProviders;\n        availableMethods[method] = methodInfo;\n      }\n    });\n\n    this.setState({\n      availableMethods\n    });\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n\n    this.loadAvailableMethods();\n    this.loadRemoteResources();\n  }\n\n  async componentDidMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps) {\n\n    this.loadUtils();\n\n    if ( this.props.buyToken && prevProps.buyToken !== this.props.buyToken){\n      this.selectToken(null,this.props.buyToken);\n    }\n  }\n\n  renderPaymentMethod = async (e,provider,buyParams) => {\n\n    const onSuccess = async (tx) => {\n      // Toast message\n      window.toastProvider.addMessage(`Deposit completed`, {\n        secondaryMessage: `Your ${this.state.selectedToken} have been deposited`,\n        colorTheme: 'light',\n        actionHref: \"\",\n        actionText: \"\",\n        variant: \"success\",\n      });\n\n      this.props.getAccountBalance();\n    };\n\n    const onClose = async (e) => {\n      return true;\n    }\n\n    const paymentProvider = globalConfigs.payments.providers[provider];\n    const initParams = paymentProvider && paymentProvider.getInitParams ? paymentProvider.getInitParams(this.props,globalConfigs,buyParams,onSuccess,onClose) : null;\n\n    // Render the Payment Provider\n    switch (provider){\n      default:\n        if (typeof paymentProvider.render === 'function'){\n          const currentState = Object.assign({},this.state);\n          paymentProvider.render(initParams,null,currentState,globalConfigs);\n        }\n      break;\n    }\n\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_provider',\n        eventLabel: provider\n      });\n\n      this.closeModal(e);\n    } else {\n      this.closeModal(e);\n    }\n  }\n\n  goBack = (e) => {\n    e.preventDefault();\n\n    if (this.state.selectedProvider){\n      this.setState({\n        selectedProvider:null,\n      });\n    } else if (this.state.selectedMethod){\n      this.setState({\n        selectedMethod:null,\n        selectedCountry:null,\n        selectedProvider:null,\n      });\n    } else if (this.state.selectedToken){\n      this.setState({\n        selectedMethod:null,\n        selectedCountry:null,\n        selectedProvider:null,\n        selectedToken:this.props.buyToken,\n      });\n    } else {\n      this.resetModal();\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      selectedMethod:null,\n      selectedCountry:null,\n      selectedProvider:null,\n      availableProviders:null,\n      selectedToken:this.props.buyToken\n    });\n\n    this.componentWillMount();\n  }\n\n  closeModal = (e) => {\n    this.resetModal();\n    if (!this.props.showInline && typeof this.props.closeModal === 'function'){\n      this.props.closeModal();\n    }\n  }\n\n  getProviderInfo = (provider) => {\n    if (!globalConfigs.payments.providers[provider]){\n      return false;\n    }\n    let providerInfo = globalConfigs.payments.providers[provider];\n    if (typeof providerInfo.getInfo === 'function'){\n      const newProviderInfo = providerInfo.getInfo(this.state);\n      if (newProviderInfo && Object.keys(newProviderInfo).length){\n        providerInfo = Object.assign(providerInfo,newProviderInfo);\n      }\n    }\n    return providerInfo;\n  }\n\n  getDefaultPaymentProvider = (selectedMethod) => {\n    const paymentMethod = this.state.availableMethods[selectedMethod];\n    if (paymentMethod && paymentMethod.defaultProvider){\n      return paymentMethod.defaultProvider;\n    }\n    return null;\n  }\n\n  getAvailablePaymentProviders = (selectedMethod,selectedToken) => {\n    const availableProviders = [];\n\n    Object.keys(globalConfigs.payments.providers).map((provider,i) => {\n      const providerInfo = globalConfigs.payments.providers[provider];\n      const providerSupportMethod = providerInfo.supportedMethods.indexOf(selectedMethod) !== -1;\n      const providerSupportToken = selectedToken ? providerInfo.supportedTokens.indexOf(selectedToken) !== -1 : (providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1);\n      if (providerInfo.enabled && providerSupportMethod && providerSupportToken ){\n        availableProviders.push(provider);\n      }\n      return provider;\n    });\n\n    const defaultPaymentProvider = this.getDefaultPaymentProvider(selectedMethod);\n\n    if (defaultPaymentProvider && this.state.availableMethods[selectedMethod].showDefaultOnly && availableProviders.indexOf(defaultPaymentProvider) !== -1){\n      return [defaultPaymentProvider];\n    }\n\n    return availableProviders;\n  }\n\n  selectProvider = (e,selectedProvider) => {\n    if (e){\n      e.preventDefault();\n    }\n    \n    if (!selectedProvider || !globalConfigs.payments.providers[selectedProvider]){\n      return this.setState({\n        selectedProvider:null\n      });\n    }\n\n    const providerInfo = globalConfigs.payments.providers[selectedProvider];\n    if (providerInfo){\n\n      if (this.state.selectedToken){\n        this.renderPaymentMethod(e,selectedProvider,this.state);\n        return;\n      }\n\n      const ethAvailable = providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1;\n      const tokenAvailable = providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1;\n\n      // Show tokens to buy if more are available or if the selected one is not\n      const availableTokens = [];\n      if ( (ethAvailable && tokenAvailable) || !tokenAvailable ){\n        if (ethAvailable){\n          availableTokens.push(globalConfigs.baseToken);\n        }\n        if (tokenAvailable){\n          availableTokens.push(this.props.selectedToken);\n        }\n      } else {\n        this.renderPaymentMethod(e,selectedProvider,this.state);\n        return;\n      }\n\n      this.setState({\n        availableTokens,\n        selectedProvider\n      });\n    }\n  }\n\n  selectMethod = (e,selectedMethod) => {\n    if (e){\n      e.preventDefault();\n    }\n\n    if (Object.keys(this.state.availableMethods).indexOf(selectedMethod) !== -1){\n      const availableProviders = this.getAvailablePaymentProviders(selectedMethod,this.state.selectedToken);\n\n      // Send Google Analytics event\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_method',\n        eventLabel: selectedMethod\n      });\n\n      this.setState({\n        availableProviders,\n        selectedMethod\n      });\n    }\n  }\n\n  selectToken = (e,selectedToken) => {\n    if (e){\n      e.preventDefault();\n    }\n\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Buy',\n      eventAction: 'select_token',\n      eventLabel: selectedToken\n    });\n\n    this.setState({ selectedToken }, async () => {\n      if (this.state.selectedProvider){\n        return this.renderPaymentMethod(e,this.state.selectedProvider,this.state);\n      } else {\n        this.loadRemoteResources();\n      }\n    });\n  }\n\n  handleCountryChange = selectedCountry => {\n\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled && selectedCountry){\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_country',\n        eventLabel: selectedCountry.value\n      });\n    }\n\n    this.setState({\n      selectedCountry\n    });\n  }\n\n  getAvailableCountries = () => {\n    const availableCountries = {};\n    this.state.availableProviders.forEach((provider,i) => {\n      const providerInfo = this.getProviderInfo(provider);\n      const providerSupportMethod = providerInfo.supportedMethods.indexOf(this.state.selectedMethod) !== -1;\n      const providerSupportToken = this.state.selectedToken ? providerInfo.supportedTokens.indexOf(this.state.selectedToken) !== -1 : (providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1);\n\n      // Skip disabled provider, not supported selected method or not supported token\n      if (!providerInfo.enabled || !providerSupportMethod || !providerSupportToken ){\n        return;\n      }\n\n      // Get available providers and countries\n      providerInfo.supportedCountries.forEach((countryCode,j) => {\n        if (!availableCountries[countryCode]){\n          availableCountries[countryCode] = {\n            providers:[],\n            label:globalConfigs.countries[countryCode],\n            value:countryCode\n          };\n        }\n        availableCountries[countryCode].providers.push(provider);\n      });\n    });\n\n    return Object.values(availableCountries);\n  }\n\n  render() {\n\n    let title = null;\n    if (this.state.selectedToken === null){\n      title = 'BUY TOKEN';\n    } else {\n      title = 'BUY '+this.state.selectedToken;\n      if (this.state.selectedMethod !== null){\n        title += ' - '+this.state.availableMethods[this.state.selectedMethod].props.caption;\n      }\n    }\n\n    let availableTokens = this.props.availableTokens && Object.keys(this.props.availableTokens).length>0 ? [globalConfigs.baseToken,...Object.keys(this.props.availableTokens)] : [globalConfigs.baseToken];\n\n    // Show all tokens\n    if (this.props.showAllTokens){\n      availableTokens = [];\n      Object.keys(globalConfigs.payments.providers).forEach( provider => {\n        const providerInfo = globalConfigs.payments.providers[provider];\n        if (providerInfo.supportedTokens){\n          providerInfo.supportedTokens.forEach(token => {\n            if (!availableTokens.includes(token)){\n              availableTokens.push(token);\n            }\n          })\n        }\n      });\n    }\n\n    const InnerComponent = props => (\n      <Box minWidth={ this.props.showInline ? 'auto' : ['auto','35em'] }>\n      {\n        this.state.selectedToken === null ? (\n          <Box mb={2}>\n            <Text\n              mb={[2,3]}\n              fontWeight={2}\n              textAlign={'center'}\n              fontSize={[2, this.props.showInline ? 2 : 3]}\n            >\n              Which token do you want to buy?\n            </Text>\n            <Flex\n              mb={4}\n              style={{\n                flexWrap:'wrap'\n              }}\n              alignItems={'center'}\n              justifyContent={'center'}\n              flexDirection={['column','row']}\n            >\n            {\n              availableTokens.map((token,i) => {\n                const imageSrc = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'icon']) || `images/tokens/${token}.svg`;\n                return (\n                  <ImageButton\n                    caption={token}\n                    imageSrc={imageSrc}\n                    key={`token_${token}`}\n                    isMobile={this.props.isMobile}\n                    handleClick={ e => { this.selectToken(e,token); } }\n                    imageProps={ this.props.isMobile ? {height:'42px'} : {p:[2,3],height:'80px'}}\n                    buttonProps={ !this.props.isMobile ? {\n                      style:{\n                        'flex':'0 0 170px'\n                      }\n                    } : null}\n                  />\n                );\n              })\n            }\n            </Flex>\n          </Box>\n        ) : this.state.selectedMethod === null ? (\n          <Box>\n            <Flex mb={3} flexDirection={'column'} justifyContent={'center'} alignItems={'center'}>\n              {\n                !this.props.showInline &&\n                  <Image height={2} mb={2} src={`images/tokens/${this.state.selectedToken}.svg`} />\n              }\n              <Text textAlign={'center'} fontWeight={500} fontSize={[2, this.props.showInline ? 2 : 3]} my={0}>\n                {\n                  this.props.showInline && this.props.buyToken ? `Ops... you don't have any ${this.props.buyToken} in your wallet, how do you prefer do buy some?` : `How do you prefer to buy ${this.state.selectedToken}?`\n                }\n              </Text>\n            </Flex>\n            <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n              {\n                Object.keys(this.state.availableMethods).map((method,i) => {\n                  const methodInfo = this.state.availableMethods[method];\n                  let imageProps = methodInfo.props && methodInfo.props.imageProps ? methodInfo.props.imageProps : {};\n                  const imagePropsExtended = this.props.isMobile ? {height:'42px'} : {height:'70px'};\n                  imageProps = Object.assign(imageProps,imagePropsExtended);\n\n                  return (\n                    <ImageButton\n                      {...methodInfo.props}\n                      buttonProps={{\n                        border:2\n                      }}\n                      key={`method_${method}`}\n                      imageProps={ imageProps }\n                      isMobile={ this.props.isMobile }\n                      handleClick={ e => this.selectMethod(e,method) }\n                    />\n                  );\n                })\n              }\n            </Flex>\n          </Box>\n        ) : this.state.selectedMethod === 'wallet' ? (\n              <Box mt={2} mb={3}>\n                <Text textAlign={'center'} fontWeight={3} fontSize={2} my={0}>\n                  <Box width={'100%'}>\n                      <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                      {\n                        this.state.availableProviders.length > 0 ?\n                          (\n                            <Box>\n                              <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                                Choose your preferred payment provider:\n                              </Text>\n                              {\n                                this.state.availableProviders.map((provider,i) => {\n                                  const providerInfo = this.getProviderInfo(provider);\n                                  return (\n                                    <ImageButton key={`payment_provider_${provider}`} {...providerInfo} handleClick={ e => { this.renderPaymentMethod(e,provider,this.state); } } />\n                                  );\n                                })\n                              }\n                            </Box>\n                          )\n                        : (\n                          <Text textAlign={'center'} fontWeight={3} fontSize={2} my={2}>\n                            Sorry, there are no providers available for the selected method.\n                          </Text>\n                        )\n                      }\n                      </Flex>\n                    </Box>\n                </Text>\n              </Box>\n            ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              {\n                !this.state.selectedProvider &&\n                <Box\n                  mb={3}\n                  width={1}\n                  maxWidth={this.props.showInline ? '31em' : 'initial'}\n                >\n                  {\n                    !this.props.showInline &&\n                      <Flex flexDirection={'column'} justifyContent={'center'} alignItems={'center'}>\n                        <Image height={2} mb={2} src={`images/tokens/${this.state.selectedToken}.svg`} />\n                      </Flex>\n                  }\n                  <Text textAlign={'center'} fontWeight={ this.props.showInline ? 2 : 3 } fontSize={2} mb={2}>\n                    Select your country:\n                  </Text>\n                  <Select\n                    bg={'#162e4d'}\n                    backgroundColor={'#162e4d'}\n                    value={this.state.selectedCountry}\n                    placeholder={'Select your country'}\n                    onChange={this.handleCountryChange}\n                    options={this.getAvailableCountries()}\n                    maxWidth={ this.props.showInline && !this.props.isMobile ? '25em' : 'auto' }\n                    noOptionsMessage={ (inputValue) => 'For European countries select Europe' }\n                    className={this.props.themeMode === 'light' ? styles.select : styles.selectDark}\n                  />\n                </Box>\n              }\n              <Flex flexDirection={'column'} justifyContent={'center'} alignItems={'center'} minHeight={'200px'}>\n                {\n                  !this.state.selectedProvider ?\n                    this.state.selectedCountry !== null ? (\n                      <Box width={'100%'}>\n                        <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                          Choose your preferred payment provider:\n                        </Text>\n                        <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                        {\n                          this.state.selectedCountry.providers.length > 0 ?\n                            this.state.selectedCountry.providers.map((provider,i) => {\n                              const providerInfo = this.getProviderInfo(provider);\n                              return (\n                                <ImageButton key={`payment_provider_${provider}`} {...providerInfo} handleClick={ e => {this.selectProvider(e,provider) } } />\n                              );\n                            })\n                          : (\n                            <Text textAlign={'center'} fontWeight={3} fontSize={2} mb={2}>\n                              Sorry, there are no providers available for the selected method.\n                            </Text>\n                          )\n                        }\n                        </Flex>\n                      </Box>\n                    ) : (\n                      <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={2}>\n                        Select the country to load the payment providers.\n                      </Text>\n                    )\n                  : false && this.state.availableTokens && this.state.availableTokens.length > 0 && (\n                    <Box mb={2}>\n                      <Flex justifyContent={'center'} my={2}>\n                        <Image src={ globalConfigs.payments.providers[this.state.selectedProvider].imageSrc } height={'35px'} />\n                      </Flex>\n                      <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                        Choose which token do you want to buy:\n                      </Text>\n                      <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                      {\n                        this.state.availableTokens.map((token,i) => {\n                          const imageSrc = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'icon']) || `images/tokens/${token}.svg`;\n                          return (\n                            <ImageButton key={`token_${token}`} imageSrc={imageSrc} caption={token} imageProps={{p:[2,3],height:'80px'}} handleClick={ e => { this.selectToken(e,token); } } />\n                          );\n                        })\n                      }\n                      </Flex>\n                    </Box>\n                  )\n                }\n              </Flex>\n            </Flex>\n          )\n      }\n        {\n          this.props.showInline && this.state.selectedToken !== null  && (this.props.buyToken === null || this.state.selectedMethod !== null) && (\n            <Flex\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <Button\n                my={2}\n                mx={[0, 2]}\n                size={'medium'}\n                borderRadius={4}\n                mainColor={'blue'}\n                onClick={ e => this.goBack(e) }\n              >\n                GO BACK\n              </Button>\n            </Flex>\n          )\n        }\n      </Box>\n    );\n\n    if (this.props.showInline){\n      return (\n        <InnerComponent\n          {...this.props}\n        />\n      );\n    }\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.closeModal}>\n          <ModalCard.Header title={title}>\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <InnerComponent/>\n          </ModalCard.Body>\n          <ModalCard.Footer>\n            <Flex px={[2,0]} flexDirection={['column', 'row']} width={1} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                onClick={ e => this.closeModal(e) }\n                size={this.props.isMobile ? 'small' : 'medium'}\n              >\n              CLOSE\n              </Button>\n              {\n                this.state.selectedToken !== null && (this.props.buyToken === null || this.state.selectedMethod !== null) && (\n                  <Button\n                    my={2}\n                    mx={[0, 2]}\n                    borderRadius={4}\n                    onClick={ e => this.goBack(e) }\n                    className={styles.gradientButton}\n                    size={this.props.isMobile ? 'small' : 'medium'}\n                  >\n                    GO BACK\n                  </Button>\n                )\n              }\n            </Flex>\n          </ModalCard.Footer>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default BuyModal;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass TableRow extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n    const FieldComponent = this.props.fieldComponent;\n    const isInteractive = typeof this.props.handleClick === 'function';\n    return (\n      <DashboardCard\n        cardProps={{\n          mb:2,\n          width:1,\n          px:[2,4],\n          py:[2,'12px']\n        }}\n        id={this.props.cardId}\n        {...this.props.rowProps}\n        className={this.props.token}\n        isInteractive={isInteractive}\n        handleClick={ isInteractive ? e => this.props.handleClick(this.props) : null }\n      >\n        <Flex\n          flexDirection={'row'}\n          id={this.props.rowId}\n        >\n          {\n            this.props.cols.map((colInfo,colIndex) => {\n              const visibleOnDesktop = colInfo.visibleOnDesktop || false;\n              if (colInfo.visible === false || (colInfo.mobile === false && this.props.isMobile) || (colInfo.mobile === true && !visibleOnDesktop && !this.props.isMobile)){\n                return null;\n              }\n              return (\n                <Flex\n                  key={`col-${colIndex}`}\n                  {...colInfo.props}\n                >\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    {...colInfo.parentProps}\n                  >\n                    {\n                      colInfo.fields.map((fieldInfo,fieldIndex) => {\n                        if (fieldInfo.visible === false || (fieldInfo.mobile === false && this.props.isMobile)){\n                          return null;\n                        }\n                        const CustomComponent = fieldInfo.fieldComponent;\n\n                        let fieldProps = fieldInfo.props;\n\n                        // Merge with funcProps\n                        if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length>0){\n                          fieldProps = this.functionsUtil.replaceArrayPropsRecursive(fieldProps,fieldInfo.funcProps,this.props);\n                        }\n\n                        return (\n                          <Flex\n                            height={'100%'}\n                            flexDirection={'column'}\n                            alignItems={'flex-start'}\n                            justifyContent={'center'}\n                            {...fieldInfo.parentProps}\n                            style={fieldInfo.style || {\n                              overflow:'hidden'\n                            }}\n                            width={colInfo.fields.length>1 ? 'auto' : 1}\n                            id={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                            key={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                          >\n                            {\n                              CustomComponent ? (\n                                <CustomComponent\n                                  {...this.props}\n                                  {...fieldProps}\n                                />\n                              ) : (\n                                <FieldComponent\n                                  {...this.props}\n                                  fieldInfo={fieldInfo}\n                                  colProps={colInfo.props}\n                                  parentId={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                                />\n                              )\n                            }\n                          </Flex>\n                        );\n                      })\n                    }\n                  </Flex>\n                </Flex>\n              )\n            })\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default TableRow;\n","import React, { Component } from 'react';\nimport styles from './DashboardCard.module.scss';\nimport { Flex, Icon, Heading, Card, Tooltip } from \"rimble-ui\";\n\nclass DashboardCard extends Component {\n\n  state = {\n    mouseOver:false\n  }\n\n  setMouseOver(mouseOver){\n    this.setState({\n      mouseOver\n    });\n  }\n\n  render() {\n    const isDisabled = this.props.isDisabled;\n    const isActive = this.props.isActive && !isDisabled;\n    const isInteractive = this.props.isInteractive && !isDisabled;\n    const isVisible = typeof this.props.isVisible !== 'undefined' ? this.props.isVisible : true;\n    const isRainbow = typeof this.props.isRainbow !== 'undefined' ? this.props.isRainbow : false;\n\n    const cardProps = {\n      p:0,\n      border:1,\n      boxShadow:1,\n      borderRadius:2,\n      borderColor:null,\n      position:'relative',\n      minHeight:'initial',\n      backgroundColor:'cardBg'\n    };\n\n    if (isActive || (isInteractive && this.state.mouseOver)){\n      cardProps.border = 2;\n      cardProps.boxShadow = null;\n      cardProps.backgroundColor = 'cardBgHover';\n    }\n\n    // Replace props\n    if (this.props.cardProps && Object.keys(this.props.cardProps).length){\n      Object.keys(this.props.cardProps).forEach(p => {\n        cardProps[p] = this.props.cardProps[p];\n      });\n    }\n\n    const className = [\n      styles.defaultOpacity,\n      isActive ? styles.active : null,\n      !isVisible ? styles.hidden : null,\n      isRainbow ? styles.rainbow : null,\n      isDisabled ? styles.disabled : null,\n      isInteractive ? styles.interactive : null,\n    ];\n\n    if (this.props.className && styles[this.props.className]){\n      className.push(styles[this.props.className]);\n    }\n\n    return (\n      <Card\n        {...cardProps}\n        className={className}\n        onClick={this.props.handleClick}\n        onMouseOut={(e) => this.setMouseOver(false)}\n        onMouseOver={(e) => this.setMouseOver(true)}\n      >\n        {\n          this.props.title && this.props.title.length>0 &&\n            <Flex\n              mt={[3,4]}\n              ml={[3,4]}\n              alignItems={'center'}\n              flexDirection={'row'}\n              {...this.props.titleParentProps}\n            >\n              <Heading.h4\n                fontWeight={4}\n                fontSize={[2,3]}\n                textAlign={'left'}\n                color={'dark-gray'}\n                lineHeight={'initial'}\n                {...this.props.titleProps}\n              >\n                {this.props.title}\n              </Heading.h4>\n              {\n                this.props.description && this.props.description.length>0 &&\n                  <Tooltip\n                    placement={'top'}\n                    message={this.props.description}\n                  >\n                    <Icon\n                      ml={2}\n                      name={\"Info\"}\n                      size={'1em'}\n                      color={'cellTitle'}\n                    />\n                  </Tooltip>\n              }\n            </Flex>\n        }\n        {this.props.children}\n      </Card>\n    );\n  }\n}\n\nexport default DashboardCard;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableCellHeader from '../TableCellHeader/TableCellHeader';\n\nclass TableHeader extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        px={[2,4]}\n        pb={[2,3]}\n        flexDirection={'row'}\n      >\n        {\n          this.props.cols.map((colInfo,colIndex) => {\n            // Skip non-mobile columns\n            const visibleOnDesktop = colInfo.visibleOnDesktop || false;\n            if (colInfo.visible === false || (colInfo.mobile === false && this.props.isMobile) || (colInfo.mobile === true && !visibleOnDesktop && !this.props.isMobile)){\n              return null;\n            }\n\n            return (colInfo.title && colInfo.title.length) ? (\n              <TableCellHeader\n                {...this.props}\n                {...colInfo.props}\n                desc={colInfo.desc}\n                title={colInfo.title}\n                key={`col-header-${colIndex}`}\n              >\n                {colInfo.title}\n              </TableCellHeader>\n            ) : (\n              <Flex key={`col-header-${colIndex}`} {...colInfo.props}></Flex>\n            )\n          })\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TableHeader;\n","import { Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass FastBalanceSelector extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n\n    let cardProps = {\n      p:2,\n      width:0.23,\n      onMouseDown:this.props.onMouseDown\n    };\n\n    let textProps = {\n      fontSize:2,\n      fontWeight:3,\n      textAlign:'center',\n      color:this.props.isActive ? 'copyColor' : 'cellText'\n    }\n\n    cardProps = this.functionsUtil.replaceArrayProps(cardProps,this.props.cardProps);\n    textProps = this.functionsUtil.replaceArrayProps(textProps,this.props.textProps);\n\n    return (\n      <DashboardCard\n        isInteractive={true}\n        cardProps={cardProps}\n        isActive={this.props.isActive}\n      >\n        <Text \n          {...textProps}\n        >\n          {this.props.percentage}%\n        </Text>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default FastBalanceSelector;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n// import TokenWrapper from '../TokenWrapper/TokenWrapper';\nimport GenericSelector from '../GenericSelector/GenericSelector';\n\nclass Staking extends Component {\n\n  state = {\n    tokenConfig:null,\n    contractInfo:null,\n    selectedToken:null,\n    selectedOption:null,\n    availableTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      const tokenConfig = this.props.toolProps.availableTokens[this.state.selectedToken];\n      const contractInfo = tokenConfig.contract;\n\n      // Init contracts\n      await Promise.all([\n        this.props.initContract(contractInfo.name,contractInfo.address,contractInfo.abi),\n        this.props.initContract(this.state.selectedToken,tokenConfig.address,tokenConfig.abi)\n      ]);\n\n      this.setState({\n        tokenConfig,\n        contractInfo\n      });\n    }\n  }\n\n  async loadData(){\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens).reduce( (output,token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      if (tokenConfig.enabled){\n        output.push({\n          value:token,\n          ...tokenConfig\n        });\n      }\n      return output;\n    },[]);\n\n    const selectedOption = availableTokens[0];\n    const selectedToken = selectedOption.value;\n\n    this.setState({\n      selectedToken,\n      selectedOption,\n      availableTokens\n    });\n  }\n\n  selectToken(selectedToken){\n    this.setState({\n      selectedToken\n    });\n  }\n\n  render() {\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const SelectedComponent = this.state.tokenConfig ? this.state.tokenConfig.component : null;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.availableTokens ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading tokens...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.availableTokens.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active tokens.\n                  </Text>\n                ) : (\n                  <Flex\n                    width={[1,0.46]}\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Box\n                      width={1}\n                    >\n                      <Text\n                        mb={1}\n                      >\n                        Select Token:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        name={'tokens'}\n                        isSearchable={false}\n                        options={this.state.availableTokens}\n                        CustomOptionValue={CustomOptionValue}\n                        onChange={this.selectToken.bind(this)}\n                        defaultValue={this.state.selectedOption}\n                        CustomValueContainer={CustomValueContainer}\n                      />\n                    </Box>\n                    {\n                      SelectedComponent && (\n                        <SelectedComponent\n                          {...this.props}\n                          tokenConfig={this.state.tokenConfig}\n                          contractInfo={this.state.contractInfo}\n                          selectedToken={this.state.selectedToken}\n                        />\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default Staking;","import React, { Component } from 'react';\nimport { Box, Flex, Text } from 'rimble-ui'\nimport Faquestion from '../Faquestion/Faquestion';\n\nclass GenericFaqs extends Component {\n  state = {\n    openedAnswer:null,\n    selectedSection:null\n  };\n  componentWillMount(){\n    const selectedSection = Object.keys(this.props.questions)[0];\n    this.setSection(selectedSection);\n  }\n  setSection(section) {\n    this.setState(state => ({...state, selectedSection: section, openedAnswer: null}));\n  }\n  toggleAnswer(e,i) {\n    e.preventDefault();\n    this.setState(state => ({...state, openedAnswer: state.openedAnswer===i ? null : i }));\n  };\n\n  render() {\n    const showSections = this.props.showSections === undefined || this.props.showSections;\n    return (\n      <Flex\n        width={1}\n        flexDirection={'column'}\n      >\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'column'}\n          justifyContent={\"center\"}\n        >\n          {\n            showSections && (\n              <Flex\n                mb={[3,4]}\n                px={[2,0]}\n                width={[1,3/5]}\n                flexDirection={'row'}\n                justifyContent={'space-between'}\n              >\n                {\n                  Object.keys(this.props.questions).map( (section,i) => {\n                    const isSelected = section === this.state.selectedSection;\n                    return (\n                      <Flex\n                        key={`section_${i}`}\n                        textAlign={'center'}\n                        justifyContent={'center'}\n                        width={1/Object.keys(this.props.questions).length}\n                        borderBottom={ isSelected ? '3px solid #0036ff' : 'none'}\n                      >\n                        <Text\n                          mb={1}\n                          fontWeight={3}\n                          fontSize={[2, 3]}\n                          textAlign={'center'}\n                          onClick={() => this.setSection(section)}\n                          color={isSelected ? 'blue' : 'copyColor'}\n                          className={['pointer', isSelected ? 'selected' : '']}\n                        >\n                          {section}\n                        </Text>\n                      </Flex>\n                    );\n                  })\n                }\n              </Flex>\n            )\n          }\n          <Box\n            width={1}\n          >\n            {\n              this.props.questions[this.state.selectedSection].map( (question,i) => (\n                <Faquestion\n                  key={`answer_${i}`}\n                  answer={question.a}\n                  pt={i === 0 ? 0 : ''}\n                  question={question.q}\n                  isOpened={this.state.openedAnswer === i}\n                  handleClick={ e => this.toggleAnswer(e,i) }\n                />\n              ))\n            }\n          </Box>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default GenericFaqs;","import React, { Component } from 'react';\nimport IconBox from '../IconBox/IconBox';\nimport ExtLink from '../ExtLink/ExtLink';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport { Flex, Box, Text, Icon, Link, Input, Checkbox } from \"rimble-ui\";\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\n\nclass SendTxWithBalance extends Component {\n\n  state = {\n    processing:{\n      txHash:null,\n      loading:false\n    },\n    inputValue:null,\n    txSucceeded:false,\n    permitEnabled:true,\n    showPermitBox:false,\n    approveEnabled:true,\n    buttonDisabled:true,\n    contractApproved:false,\n    fastBalanceSelector:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    await this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const actionChanged = prevProps.action !== this.props.action;\n    const accountChanged = prevProps.account !== this.props.account;\n    const tokenBalanceChanged = prevProps.tokenBalance !== this.props.tokenBalance;\n    const permitEnabledChanged = prevState.permitEnabled !== this.state.permitEnabled;\n    const approveEnabledChanged = prevProps.approveEnabled !== this.props.approveEnabled;\n    const contractChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    if (actionChanged || accountChanged || tokenBalanceChanged || contractChanged || approveEnabledChanged || tokenConfigChanged || permitEnabledChanged){\n      await this.loadData();\n    }\n\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    if (contractApprovedChanged){\n      if (typeof this.props.contractApproved === 'function'){\n        this.props.contractApproved(this.state.contractApproved);\n      }\n    }\n\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector !== prevState.fastBalanceSelector;\n    if (fastBalanceSelectorChanged || actionChanged){\n      this.setInputValue();\n    }\n\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue;\n    if (inputValueChanged){\n      this.checkButtonDisabled();\n    }\n  }\n\n  changeInputValue = (e,call_callback=true) => {\n    const fastBalanceSelector = null;\n    const inputValue = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n    if (this.state.inputValue !== inputValue){\n      this.setState((prevState) => ({\n        inputValue,\n        fastBalanceSelector\n      }),() => {\n        if (call_callback && typeof this.props.changeInputCallback === 'function'){\n          this.props.changeInputCallback(this.state.inputValue);\n        }\n      });\n    }\n  }\n\n  setInputValue = () => {\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n    const inputValue = this.props.tokenBalance && !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() ? this.functionsUtil.BNify(this.props.tokenBalance).times(selectedPercentage) : null;\n\n    this.setState((prevState) => ({\n      inputValue\n    }),() => {\n      if (typeof this.props.changeInputCallback === 'function'){\n        this.props.changeInputCallback(this.state.inputValue);\n      }\n    });\n  }\n\n  getFastBalanceSelector = () => {\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n    return this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n  }\n\n  showPermitBox(){\n    this.setState({\n      showPermitBox:true\n    });\n  }\n\n  togglePermitEnabled(permitEnabled){\n    this.setState({\n      permitEnabled\n    });\n  }\n\n  setFastBalanceSelector = (fastBalanceSelector) => {\n    this.setState({\n      fastBalanceSelector\n    });\n  }\n\n  checkButtonDisabled = (amount=null) => {\n    if (!amount){\n      amount = this.state.inputValue;\n    }\n    amount = this.functionsUtil.BNify(amount);\n    const buttonDisabled = amount.isNaN() || amount.lte(0) || amount.gt(this.props.tokenBalance);\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  approve = async () => {\n    // Check if the migration contract is approved\n    const contractApproved = await this.checkContractApproved();\n\n    if (!contractApproved){\n\n      const callbackApprove = (tx,error) => {\n        // Send Google Analytics event\n        const eventData = {\n          eventAction: 'approve',\n          eventCategory: 'CurveDeposit',\n          eventLabel: tx ? tx.status : null\n        };\n\n        const txSucceeded = tx && tx.status === 'success';\n\n        if (error){\n          eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n        }\n\n        // Send Google Analytics event\n        if (error || eventData.status !== 'error'){\n          this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n        }\n\n        this.setState((prevState) => ({\n          contractApproved: txSucceeded, // True\n          processing: {\n            ...prevState.processing,\n            txHash:null,\n            loading:false\n          }\n        }));\n\n        if (typeof this.props.callbackApprove === 'function' && txSucceeded){\n          this.props.callbackApprove(tx);\n        }\n      };\n\n      const callbackReceiptApprove = (tx) => {\n        const txHash = tx.transactionHash;\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            txHash\n          }\n        }));\n      };\n\n      // console.log('Approve',this.props.tokenConfig.token,this.props.contractInfo.address);\n\n      this.functionsUtil.enableERC20(this.props.tokenConfig.token,this.props.contractInfo.address,callbackApprove,callbackReceiptApprove);\n\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash:null,\n          loading:true\n        },\n        contractApproved:false\n      }));\n    } else {\n      this.setState({\n        contractApproved:true\n      });\n    }\n  }\n\n  executeTx = async () => {\n\n    const inputValue = this.state.inputValue ? this.functionsUtil.BNify(this.state.inputValue) : null;\n    if (!inputValue){\n      return false;\n    }\n\n    if (typeof this.props.checkLimit === 'function'){\n      const limitCheck = await this.props.checkLimit(inputValue);\n      if (!limitCheck){\n        return false;\n      }\n    }\n\n    const _amount = this.functionsUtil.normalizeTokenAmount(inputValue,this.props.tokenConfig.decimals);\n\n    // console.log('executeTx',params);\n\n    const callback = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventLabel: tx.status,\n        eventCategory: `CurveDeposit`,\n        eventValue: inputValue.toFixed(),\n        eventAction: this.props.tokenConfig.token,\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState({\n        txSucceeded,\n        processing: {\n          txHash:null,\n          loading:false\n        }\n      });\n\n      if (txSucceeded){\n        // Reset input\n        this.changeInputValue({\n          target:{\n            value:0\n          }\n        },false);\n        this.setState({\n          showPermitBox:false\n        });\n        // Call upper component callback\n        if (typeof this.props.callback === 'function'){\n          this.props.callback(tx,_amount,params);\n        }\n      }\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    const contractName = this.props.contractInfo.name;\n\n    let params = null;\n\n    // Check contract approved without permit\n    const contractApproved = await this.checkContractApproved(false);\n\n    const permitEnabled = this.props.permitEnabled && this.state.permitEnabled && !contractApproved;\n    if (permitEnabled){\n      const signedParameters = await this.functionsUtil.signPermit(this.props.tokenConfig.token, this.props.account, contractName);\n      // console.log('signedParameters',signedParameters);\n      if (signedParameters){\n        params = this.props.getPermitTransactionParams(_amount,signedParameters);\n      }\n    } else {\n      params = this.props.getTransactionParams(_amount,this.state.fastBalanceSelector);\n    }\n\n    if (params){\n      let {\n        methodName,\n        methodParams\n      } = params;\n\n      const value = params.value || null;\n\n      console.log('SendTxWithBalance',contractName, methodName, methodParams, value);\n\n      this.props.contractMethodSendWrapper(contractName, methodName, methodParams, value, callback, callbackReceipt);\n\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          loading:true\n        }\n      }));\n    } else {\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          loading:false\n        }\n      }));\n    }\n  }\n\n  cancelTransaction = async () => {\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  async checkContractApproved(checkPermit=true){\n\n    if (checkPermit && this.props.permitEnabled && this.state.permitEnabled){\n      return true;\n    }\n\n    if (this.props.approveEnabled !== undefined && !this.props.approveEnabled){\n      return true;\n    }\n    const contractInfo = await this.props.initContract(this.props.contractInfo.name,this.props.contractInfo.address,this.props.contractInfo.abi);\n\n    if (contractInfo){\n      const contractApproved = await this.functionsUtil.checkTokenApproved(this.props.tokenConfig.token,this.props.contractInfo.address,this.props.account);\n      return contractApproved;\n    }\n    \n    return false;\n  }\n\n  async loadData(){\n    const inputValue = null;\n    const fastBalanceSelector = null;\n    const contractApproved = await this.checkContractApproved();\n    const approveEnabled = this.props.approveEnabled !== false;\n\n    this.setState({\n      inputValue,\n      approveEnabled,\n      contractApproved,\n      fastBalanceSelector\n    });\n  }\n\n  approveCallback = () => {\n    this.loadData();\n  }\n\n  render() {\n\n    const viewOnly = this.props.connectorName === 'custom';\n    const action = this.props.action ? this.props.action : 'Deposit';\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'stretch'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          viewOnly ? (\n            <IconBox\n              cardProps={{\n                mt:3\n              }}\n              icon={'Visibility'}\n              text={'You are using Idle in \"Read-Only\" mode.<br />Logout and connect with your wallet to interact.'}\n            />\n          ) : !this.props.account ? (\n            <ConnectBox\n              {...this.props}\n            />\n          ) : this.props.tokenConfig && !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() && this.functionsUtil.BNify(this.props.tokenBalance).gt(0) ? (\n            <Box\n              width={1}\n            >\n              {\n                this.props.infoBox && (\n                  <IconBox\n                    cardProps={{\n                      mb:3\n                    }}\n                    {...this.props.infoBox}\n                  />\n                )\n              }\n              {\n                this.props.steps && this.props.steps.length>0 && (\n                  <DashboardCard\n                    cardProps={{\n                      p:3,\n                      px:[2,4]\n                    }}\n                  >\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                    > \n                      {\n                        this.props.steps.map( (step,stepIndex) => (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            key={`step_${stepIndex}`}\n                          >\n                            <Icon\n                              size={'1.5em'}\n                              name={ step.completed ? 'CheckBox' : step.icon}\n                              color={ step.completed ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                            />\n                            {\n                              step.link ? (\n                                <ExtLink\n                                  ml={2}\n                                  fontSize={2}\n                                  color={'blue'}\n                                  fontWeight={1}\n                                  href={step.link}\n                                  textAlign={'left'}\n                                  hoverColor={'blue'}\n                                >\n                                  {step.description}\n                                </ExtLink>\n                              ) : (\n                                <Text\n                                  ml={2}\n                                  fontSize={2}\n                                  fontWeight={1}\n                                  color={'cellText'}\n                                  textAlign={'left'}\n                                >\n                                  {step.description}\n                                </Text>\n                              )\n                            }\n                          </Flex>\n                        ) )\n                      }\n                    </Flex>\n                  </DashboardCard>\n                )\n              }\n              <Box\n                mt={2}\n                width={1}\n              >\n                {\n                  this.state.showPermitBox && this.props.permitEnabled ? (\n                    <DashboardCard\n                      cardProps={{\n                        py:3,\n                        px:3,\n                        mt:3,\n                        display:'flex',\n                        alignItems:'center',\n                        flexDirection:'column',\n                        justifyContent:'center',\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          name={'Warning'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={1}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Approve and Deposit in a single transaction is supported for this transaction, disable this feature and try again if you can't deposit.\n                        </Text>\n                      </Flex>\n                      <Checkbox\n                        mt={1}\n                        required={false}\n                        checked={this.state.permitEnabled}\n                        label={`Approve and Deposit in a single transaction`}\n                        onChange={ e => this.togglePermitEnabled(e.target.checked) }\n                      />\n                    </DashboardCard>\n                  ) : !this.state.showPermitBox && this.props.permitEnabled && (\n                    <Flex\n                      p={2}\n                      mt={3}\n                      width={1}\n                      borderRadius={2}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'center'}\n                      backgroundColor={'DashboardCard'}\n                      border={`1px solid ${this.props.theme.colors.primary}`}\n                    >\n                      <Link\n                        textAlign={'center'}\n                        hoverColor={'primary'}\n                        onClick={this.showPermitBox.bind(this)}\n                      >\n                        Having trouble with the Permit signature?\n                      </Link>\n                      <Icon\n                        ml={1}\n                        size={'1em'}\n                        name={'Warning'}\n                        color={'primary'}\n                      />\n                    </Flex>\n                  )\n                }\n              </Box>\n              {\n                this.state.approveEnabled && !this.state.contractApproved ?\n                  this.state.processing.loading ? (\n                    <Flex\n                      mt={3}\n                      flexDirection={'column'}\n                    >\n                      <TxProgressBar\n                        {...this.props}\n                        waitText={`Approve estimated in`}\n                        hash={this.state.processing.txHash}\n                        endMessage={`Finalizing approve request...`}\n                        cancelTransaction={this.cancelTransaction.bind(this)}\n                      />\n                    </Flex>\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          name={'LockOpen'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                          dangerouslySetInnerHTML={{\n                            __html:this.props.approveDescription\n                          }}\n                        />\n                        <RoundButton\n                          buttonProps={{\n                            mt:2,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.approve.bind(this)}\n                        >\n                          Approve\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  )\n                : this.state.processing.loading ? (\n                  <Flex\n                    mt={3}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      {...this.props}\n                      hash={this.state.processing.txHash}\n                      endMessage={`Finalizing ${action} request...`}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                      waitText={`${this.functionsUtil.capitalize(action)} estimated in`}\n                    />\n                  </Flex>\n                ) : (\n                  <Box\n                    mt={2}\n                    width={1}\n                  >\n                    <Flex\n                      mt={2}\n                      mb={3}\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        mb={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={this.props.balanceSelectorInfo ? 'space-between' : 'flex-end'}\n                      >\n                        {\n                          this.props.balanceSelectorInfo && (\n                            <Flex\n                              width={1}\n                              maxWidth={'50%'}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                            >\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                textAlign={'left'}\n                                style={{\n                                  maxWidth:'100%',\n                                  overflow:'hidden',\n                                  whiteSpace:'nowrap',\n                                  textOverflow:'ellipsis'\n                                }}\n                                color={this.props.balanceSelectorInfo.color ? this.props.balanceSelectorInfo.color : 'copyColor'}\n                              >\n                                {this.props.balanceSelectorInfo.text}\n                              </Text>\n                            </Flex>\n                          )\n                        }\n                        {\n                          !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() && (\n                            <Flex\n                              width={1}\n                              maxWidth={'50%'}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'flex-end'}\n                            >\n                              <Link\n                                fontSize={1}\n                                fontWeight={3}\n                                color={'dark-gray'}\n                                textAlign={'right'}\n                                hoverColor={'copyColor'}\n                                onClick={ (e) => this.setFastBalanceSelector(100) }\n                                style={{\n                                  maxWidth:'100%',\n                                  overflow:'hidden',\n                                  whiteSpace:'nowrap',\n                                  textOverflow:'ellipsis'\n                                }}\n                              >\n                                Balance: {this.functionsUtil.BNify(this.props.tokenBalance).toFixed(this.props.isMobile ? 2 : 4)} {this.props.tokenConfig.token}\n                              </Link>\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                      <Input\n                        min={0}\n                        type={\"number\"}\n                        required={true}\n                        height={'3.4em'}\n                        borderRadius={2}\n                        fontWeight={500}\n                        borderColor={'cardBorder'}\n                        backgroundColor={'cardBg'}\n                        boxShadow={'none !important'}\n                        placeholder={`Insert amount`}\n                        onChange={this.changeInputValue.bind(this)}\n                        border={`1px solid ${this.props.theme.colors.divider}`}\n                        value={this.state.inputValue !== null ? this.functionsUtil.BNify(this.state.inputValue).toFixed() : ''}\n                      />\n                      <Flex\n                        mt={2}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        {\n                          [25,50,75,100].map( percentage => (\n                            <FastBalanceSelector\n                              percentage={percentage}\n                              key={`selector_${percentage}`}\n                              onMouseDown={()=>this.setFastBalanceSelector(percentage)}\n                              isActive={this.state.fastBalanceSelector === parseInt(percentage)}\n                            />\n                          ))\n                        }\n                      </Flex>\n                      <Flex\n                        mt={2}\n                        justifyContent={'center'}\n                      >\n                        <RoundButton\n                          handleClick={this.executeTx.bind(this)}\n                          buttonProps={Object.assign({\n                            mt:2,\n                            width:[1,1/2],\n                            style:{\n                              textTransform:'capitalize'\n                            },\n                            disabled:this.state.buttonDisabled||this.props.buttonDisabled\n                          },this.props.buttonProps)}\n                        >\n                          {this.props.action}\n                        </RoundButton>\n                      </Flex>\n                    </Flex>\n                  </Box>\n                )\n              }\n            </Box>\n          ) : this.props.children\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default SendTxWithBalance;","import React from \"react\";\nimport ModalCard from './ModalCard';\nimport { Text, Modal, Flex } from \"rimble-ui\";\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\nimport RoundButton from '../../RoundButton/RoundButton.js';\n\nclass LimitReachedModal extends React.Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  constructor(props) {\n    super(props);\n    this.loadUtils();\n  }\n\n  componentDidUpdate = async () => {\n    this.loadUtils();\n  }\n\n  closeModal = async () => {\n    this.props.closeModal();\n  }\n\n  render() {\n\n    return (\n      <Modal\n        isOpen={this.props.isOpen}\n      >\n        <ModalCard\n          maxWidth={['960px','650px']}\n          closeFunc={this.props.closeModal}\n        >\n          <ModalCard.Header\n            pt={3}\n            iconHeight={'40px'}\n            title={'Limit Reached'}\n            icon={'images/warning.svg'}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              width={1}\n              flexDirection={'column'}\n            >\n              <Text\n                fontSize={2}\n                textAlign={'left'}\n                color={'dark-gray'}\n              >\n                The pool has reached the limit size of {this.props.limit}! Please wait for the limit to be increased before trying to deposit again!\n              </Text>\n            </Flex>\n            <Flex\n              my={3}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <RoundButton\n                handleClick={this.closeModal}\n                buttonProps={{\n                  width:['100%','40%']\n                }}\n              >\n                Got it\n              </RoundButton>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default LimitReachedModal;","import IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport { Flex, Text, Image, Button } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\nimport TrancheField from '../TrancheField/TrancheField';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport ShareModal from '../utilities/components/ShareModal';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport LimitReachedModal from '../utilities/components/LimitReachedModal';\n\nclass TrancheDetails extends Component {\n\n  state = {\n    infoText:null,\n    canUnstake:null,\n    canWithdraw:null,\n    activeModal:null,\n    balanceProp:null,\n    tokenConfig:null,\n    contractInfo:null,\n    tranchePrice:null,\n    tokenBalance:null,\n    stakedBalance:null,\n    trancheBalance:null,\n    approveEnabled:null,\n    buttonDisabled:false,\n    approveDescription:null,\n    selectedAction:'deposit',\n    userHasAvailableFunds:false\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = this.props.account !== prevProps.account;\n    if (accountChanged){\n      this.loadData();\n    }\n\n    const selectedActionChange = prevState.selectedAction !== this.state.selectedAction;\n    if (selectedActionChange){\n      this.loadActionData();\n    }\n  }\n\n  async loadData(){\n\n    if (!this.props.account){\n      return null;\n    }\n\n    const [\n      // blockNumber,\n      tokenBalance,\n      trancheBalance,\n      // cdoCoolingPeriod,\n      // latestHarvestBlock,\n      // stakeCoolingPeriod,\n      // rewardsTokensInfo,\n      // userStakeBlock,\n      stakedBalance,\n      trancheAPY,\n      tranchePrice\n    ] = await Promise.all([\n      // this.functionsUtil.getBlockNumber(),\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.getTokenBalance(this.props.trancheConfig.name,this.props.account),\n      // this.functionsUtil.genericContractCall(this.props.tokenConfig.CDO.name,'coolingPeriod'),\n      // this.functionsUtil.genericContractCall(this.props.tokenConfig.CDO.name,'latestHarvestBlock'),\n      // this.functionsUtil.genericContractCall(this.props.trancheConfig.CDORewards.name,'coolingPeriod'),\n      // this.functionsUtil.getTrancheRewardTokensInfo(this.props.tokenConfig,this.props.trancheConfig),\n      // this.functionsUtil.genericContractCall(this.props.trancheConfig.CDORewards.name,'usersStakeBlock',[this.props.account]),\n      this.functionsUtil.getTrancheStakedBalance(this.props.trancheConfig.CDORewards.name,this.props.account,this.props.trancheConfig.CDORewards.decimals),\n      this.functionsUtil.loadTrancheFieldRaw('trancheApy',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account),\n      this.functionsUtil.loadTrancheFieldRaw('lastTranchePrice',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account)\n    ]);\n\n    const userHasAvailableFunds = trancheBalance && trancheBalance.gt(0);\n\n\n    const canUnstake = true; // !stakeCoolingPeriod || this.functionsUtil.BNify(userStakeBlock).plus(stakeCoolingPeriod).lt(blockNumber);\n    const canWithdraw = true; // !cdoCoolingPeriod || !latestHarvestBlock || this.functionsUtil.BNify(latestHarvestBlock).plus(cdoCoolingPeriod).lt(blockNumber);\n    \n    // console.log('loadData',this.props.trancheConfig.tranche,blockNumber,cdoCoolingPeriod,latestHarvestBlock,stakeCoolingPeriod,userStakeBlock,canUnstake,canWithdraw);\n\n    this.setState({\n      trancheAPY,\n      canUnstake,\n      canWithdraw,\n      tokenBalance,\n      tranchePrice,\n      stakedBalance,\n      trancheBalance,\n      userHasAvailableFunds\n    }, () => {\n      this.loadActionData();\n    });\n  }\n\n  loadActionData(){\n    let infoBox = null;\n    let balanceProp = null;\n    let tokenConfig = null;\n    let contractInfo = null;\n    let approveEnabled = null;\n    let buttonDisabled = false;\n\n    const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',this.props.selectedTranche]);\n    let infoText = trancheDetails.description[this.state.selectedAction];\n\n    switch (this.state.selectedAction){\n      case 'deposit':\n        approveEnabled = true;\n        contractInfo = this.props.cdoConfig;\n        tokenConfig = this.props.tokenConfig;\n        balanceProp = this.state.tokenBalance;\n      break;\n      case 'stake':\n        approveEnabled = true;\n        tokenConfig = this.props.trancheConfig;\n        balanceProp = this.state.trancheBalance;\n        contractInfo = this.props.trancheConfig.CDORewards;\n      break;\n      case 'unstake':\n        approveEnabled = false;\n        tokenConfig = this.props.trancheConfig;\n        contractInfo = this.props.trancheConfig.CDORewards;\n        balanceProp = this.state.stakedBalance;\n        if (!this.state.canUnstake){\n          buttonDisabled = true;\n          infoText = trancheDetails.description.cantUnstake;\n        }\n      break;\n      case 'withdraw':\n        approveEnabled = false;\n        contractInfo = this.props.cdoConfig;\n        // tokenConfig = this.props.tokenConfig;\n        tokenConfig = this.props.trancheConfig;\n        balanceProp = this.state.trancheBalance;\n        // balanceProp = this.state.trancheBalance.times(this.state.tranchePrice);\n        // console.log('balanceProp',this.state.trancheBalance.toFixed(),this.state.tranchePrice.toFixed(),balanceProp.toFixed());\n        if (!this.state.canWithdraw){\n          buttonDisabled = true;\n          infoText = trancheDetails.description.cantWithdraw;\n          // infoBox = {\n          //   text:'You need to wait 1 block from the last ',\n          //   icon:'Warning',\n          //   iconProps:{\n          //     color:'cellText'\n          //   },\n          // };\n        }\n      break;\n      default:\n      break;\n    }\n\n    const approveDescription = `To ${this.state.selectedAction} your <strong>${tokenConfig.token}</strong> you need to approve the Smart-Contract first.`;\n\n    // console.log('loadActionData',approveEnabled);\n\n    this.setState({\n      infoBox,\n      infoText,\n      tokenConfig,\n      balanceProp,\n      contractInfo,\n      buttonDisabled,\n      approveEnabled,\n      approveDescription\n    })\n  }\n\n  changeInputCallback(){\n\n  }\n\n  contractApprovedCallback(){\n\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = null;\n\n    if (this.props.trancheConfig.functions[this.state.selectedAction]){\n      methodName = this.props.trancheConfig.functions[this.state.selectedAction];\n\n      // if (this.state.selectedAction === 'withdraw'){\n\n      // }\n\n      methodParams = [amount];\n    }\n\n    console.log('getTransactionParams',methodName,methodParams);\n\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async checkLimit(amount){\n    const trancheLimit = this.functionsUtil.BNify(this.props.tokenConfig.limit);\n    const poolSize = await this.functionsUtil.loadTrancheFieldRaw(`pool`,{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account);\n    if (poolSize.plus(amount).gt(trancheLimit)){\n      this.setState({\n        activeModal:'limit'\n      })\n      return false;\n    }\n    return true;\n  }\n\n  transactionSucceeded(){\n    this.loadData();\n    switch (this.state.selectedAction){\n      case 'stake':\n      case 'deposit':\n        this.setState({\n          activeModal:'share'\n        })\n      break;\n      default:\n      break;\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      activeModal: null\n    });\n  }\n\n  setSelectedAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  render() {\n    const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',this.props.selectedTranche]);\n    const otherTrancheType = this.props.selectedTranche === 'AA' ? 'BB' : 'AA';\n    const otherTrancheDetails = this.functionsUtil.getGlobalConfig(['tranches',otherTrancheType]);\n    const trancheLimit = this.functionsUtil.formatMoney(this.functionsUtil.BNify(this.props.tokenConfig.limit),0)+' '+this.props.selectedToken;\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        maxWidth={['100%','45em']}\n      >\n        {\n          !this.props.showSelectButton && (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'flex-end'}\n            >\n              <Button\n                mb={2}\n                size={'small'}\n                width={'auto'}\n                contrastColor={'cardBg'}\n                icon={otherTrancheDetails.icon}\n                mainColor={otherTrancheDetails.color.hex}\n                onClick={e => this.props.selectTrancheType(otherTrancheDetails.route)}\n              >\n                Switch to {otherTrancheDetails.name}\n              </Button>\n            </Flex>\n          )\n        }\n        <DashboardCard\n          cardProps={{\n            py:3,\n            px:3,\n            border:null,\n            // style:{\n            //   border:`1px solid ${trancheDetails.color.hex}`\n            // }\n          }}\n        >\n          <Flex\n            pb={2}\n            mb={2}\n            alignItems={'center'}\n            flexDirection={'row'}\n            borderBottom={`1px solid ${trancheDetails.color.hex}`}\n          > \n            <Image\n              mr={2}\n              src={trancheDetails.image}\n              size={this.props.isMobile ? '1.6em' : '1.8em'}\n            />\n            <Text\n              fontWeight={4}\n              fontSize={[3,4]}\n              color={'copyColor'}\n            >\n              {trancheDetails.name}\n            </Text>\n          </Flex>\n          <Flex\n            style={{\n              flexBasis:'0',\n              flex:'1 1 0px',\n              flexWrap:'wrap',\n              borderBottom:`1px solid ${this.props.theme.colors.divider}`\n            }}\n            alignItems={'flex-start'}\n            justifyContent={'flex-start'}\n          >\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Protocol\n              </Text>\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n              >\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'protocolIcon',\n                    props:{\n                      mr:2,\n                      height:['1.4em','2em']\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'protocolName',\n                    props:{\n                      fontSize:[2,3],\n                      color:'copyColor'\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n              </Flex>\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Token\n              </Text>\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n              >\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'tokenIcon',\n                    props:{\n                      mr:2,\n                      height:['1.4em','2em']\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'tokenName',\n                    props:{\n                      fontSize:[2,3],\n                      color:'copyColor'\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n              </Flex>\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <Text\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Pool Size\n              </Text>\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'tranchePool',\n                  props:{\n                    decimals:2,\n                    fontSize:[2,3],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n              alignItems={'flex-start'}\n            >\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Auto-Farming\n              </Text>\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'autoFarming',\n                  parentProps:{\n                    justifyContent:'flex-start'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Staking Rewards\n              </Text>\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'stakingRewards',\n                  props:{\n                    decimals:2,\n                    fontSize:[2,3],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <Text\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                APY\n              </Text>\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'trancheApy',\n                  props:{\n                    decimals:2,\n                    fontSize:[2,3],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n              <Flex\n                width={1}\n                alignItems={'center'}\n                flexDirection={'row'}\n              >\n                <Text\n                  fontSize={1}\n                  fontWeight={2}\n                  lineHeight={'1'}\n                  color={'cellText'}\n                >\n                  +\n                </Text>\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'trancheIDLELastHarvest',\n                    props:{\n                      decimals:4,\n                      fontSize:1,\n                      fontWeight:2,\n                      lineHeight:'1',\n                      color:'cellText'\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tranche={this.props.selectedTranche}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n              </Flex>\n            </Flex>\n          </Flex>\n          {\n            /*\n            (this.functionsUtil.BNify(this.state.stakedBalance).gt(0) || this.functionsUtil.BNify(this.state.trancheBalance).gt(0)) && (\n              <Flex\n                py={2}\n                style={{\n                  flexBasis:'0',\n                  flex:'1 1 0px',\n                  flexWrap:'wrap',\n                  borderBottom:`1px solid ${this.props.theme.colors.divider}`\n                }}\n                alignItems={'flex-start'}\n                justifyContent={'flex-start'}\n              >\n                <Flex\n                  width={0.33}\n                  flexDirection={'column'}\n                >\n                  <Text\n                    fontWeight={3}\n                    fontSize={[1,2]}\n                    color={'cellText'}\n                  >\n                    Deposited\n                  </Text>\n                  <TrancheField\n                    {...this.props}\n                    fieldInfo={{\n                      name:'trancheDeposited',\n                      props:{\n                        decimals:4,\n                        fontWeight:2,\n                        fontSize:[2,4],\n                        color:'copyColor'\n                      }\n                    }}\n                    token={this.props.selectedToken}\n                    tranche={this.props.selectedTranche}\n                    tokenConfig={this.props.tokenConfig}\n                    protocol={this.props.selectedProtocol}\n                    trancheConfig={this.props.trancheConfig}\n                  />\n                </Flex>\n                <Flex\n                  width={0.33}\n                  flexDirection={'column'}\n                >\n                  <Text\n                    fontWeight={3}\n                    fontSize={[1,2]}\n                    color={'cellText'}\n                  >\n                    Staked\n                  </Text>\n                  <TrancheField\n                    {...this.props}\n                    fieldInfo={{\n                      name:'trancheStaked',\n                      props:{\n                        decimals:4,\n                        fontWeight:2,\n                        fontSize:[2,4],\n                        color:'copyColor'\n                      }\n                    }}\n                    token={this.props.selectedToken}\n                    tranche={this.props.selectedTranche}\n                    tokenConfig={this.props.tokenConfig}\n                    protocol={this.props.selectedProtocol}\n                    trancheConfig={this.props.trancheConfig}\n                  />\n                </Flex>\n                <Flex\n                  width={0.33}\n                  flexDirection={'column'}\n                >\n                  <Text\n                    fontWeight={3}\n                    fontSize={[1,2]}\n                    color={'cellText'}\n                  >\n                    Redeemable\n                  </Text>\n                  <TrancheField\n                    {...this.props}\n                    fieldInfo={{\n                      name:'trancheRedeemable',\n                      props:{\n                        decimals:4,\n                        fontWeight:2,\n                        fontSize:[2,4],\n                        color:'copyColor'\n                      }\n                    }}\n                    token={this.props.selectedToken}\n                    tranche={this.props.selectedTranche}\n                    tokenConfig={this.props.tokenConfig}\n                    protocol={this.props.selectedProtocol}\n                    trancheConfig={this.props.trancheConfig}\n                  />\n                </Flex>\n              </Flex>\n            )\n            */\n          }\n          {\n            this.props.showSelectButton ? (\n                <Button\n                  mt={3}\n                  width={1}\n                  contrastColor={'cardBg'}\n                  icon={trancheDetails.icon}\n                  mainColor={trancheDetails.color.hex}\n                  onClick={e => this.props.selectTrancheType(trancheDetails.route)}\n                >\n                  {\n                    this.props.tokenConfig ? `Go to ${trancheDetails.name}` : `Start with ${trancheDetails.name}`\n                  }\n                </Button>\n            ) : this.state.balanceProp && this.state.tokenConfig ? (\n              <Flex\n                width={1}\n                flexDirection={'column'}\n              >\n                <Flex\n                  mt={3}\n                  alignItems={'center'}\n                  flexDirection={'row'}\n                  justifyContent={'space-between'}\n                >\n                  <CardIconButton\n                    {...this.props}\n                    textProps={{\n                      fontSize:[1,2]\n                    }}\n                    cardProps={{\n                      px:3,\n                      py:2,\n                      width:0.32\n                    }}\n                    text={'Deposit'}\n                    iconColor={'deposit'}\n                    icon={'ArrowDownward'}\n                    iconBgColor={'#ced6ff'}\n                    isActive={ this.state.selectedAction === 'deposit' }\n                    handleClick={ e => this.setSelectedAction('deposit') }\n                  />\n                  {\n                    this.state.stakedBalance && this.functionsUtil.BNify(this.state.stakedBalance).gt(0) ? (\n                      <CardIconButton\n                        {...this.props}\n                        textProps={{\n                          fontSize:[1,2]\n                        }}\n                        cardProps={{\n                          px:3,\n                          py:2,\n                          width:0.32\n                        }}\n                        text={'Unstake'}\n                        icon={'LayersClear'}\n                        iconColor={'redeem'}\n                        iconBgColor={'#ceeff6'}\n                        isActive={ this.state.selectedAction === 'unstake' }\n                        handleClick={ e => this.setSelectedAction('unstake') }\n                      />\n                    ) : (\n                      <CardIconButton\n                        {...this.props}\n                        textProps={{\n                          fontSize:[1,2]\n                        }}\n                        cardProps={{\n                          px:3,\n                          py:2,\n                          width:0.32\n                        }}\n                        text={'Stake'}\n                        icon={'Layers'}\n                        iconColor={'deposit'}\n                        iconBgColor={'#ced6ff'}\n                        isDisabled={ !this.state.userHasAvailableFunds }\n                        isActive={ this.state.selectedAction === 'stake' }\n                        handleClick={ e => this.state.userHasAvailableFunds ? this.setSelectedAction('stake') : null }\n                      />\n                    )\n                  }\n                  <CardIconButton\n                    {...this.props}\n                    textProps={{\n                      fontSize:[1,2]\n                    }}\n                    cardProps={{\n                      px:3,\n                      py:2,\n                      width:0.32\n                    }}\n                    text={'Withdraw'}\n                    icon={'ArrowUpward'}\n                    iconColor={'redeem'}\n                    iconBgColor={'#ceeff6'}\n                    isDisabled={ !this.state.userHasAvailableFunds }\n                    isActive={ this.state.selectedAction === 'withdraw' }\n                    handleClick={ e => this.state.userHasAvailableFunds ? this.setSelectedAction('withdraw') : null }\n                  />\n                </Flex>\n                {\n                  this.state.infoText && (\n                    <IconBox\n                      cardProps={{\n                        p:2,\n                        mt:3,\n                        width:1,\n                      }}\n                      isActive={true}\n                      isInteractive={false}\n                      iconProps={{\n                        size:'1.2em',\n                        color:'flashColor'\n                      }}\n                      textProps={{\n                        fontWeight:500,\n                        color:'flashColor',\n                        textAlign:'center',\n                        fontSize:['13px','15px']\n                      }}\n                      icon={'LightbulbOutline'}\n                      text={this.state.infoText}\n                    />\n                  )\n                }\n                <Flex\n                  mt={2}\n                >\n                  <SendTxWithBalance\n                    error={null}\n                    {...this.props}\n                    buttonProps={{\n                      width:[1,0.45]\n                    }}\n                    permitEnabled={false}\n                    tokenConfig={this.state.tokenConfig}\n                    tokenBalance={this.state.balanceProp}\n                    contractInfo={this.state.contractInfo}\n                    checkLimit={this.checkLimit.bind(this)}\n                    approveEnabled={this.state.approveEnabled}\n                    buttonDisabled={this.state.buttonDisabled}\n                    callback={this.transactionSucceeded.bind(this)}\n                    approveDescription={this.state.approveDescription}\n                    changeInputCallback={this.changeInputCallback.bind(this)}\n                    contractApproved={this.contractApprovedCallback.bind(this)}\n                    getTransactionParams={this.getTransactionParams.bind(this)}\n                    action={this.functionsUtil.capitalize(this.state.selectedAction)}\n                  >\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <BuyModal\n                        {...this.props}\n                        showInline={true}\n                        availableMethods={[]}\n                        buyToken={this.props.selectedToken}\n                      />\n                    </Flex>\n                  </SendTxWithBalance>\n                </Flex>\n              </Flex>\n            ) : !this.props.account ? (\n              <ConnectBox\n                {...this.props}\n              />\n            ) : (\n              <FlexLoader\n                flexProps={{\n                  mt:3,\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading Tranche Data...'}\n              />\n            )\n          }\n        </DashboardCard>\n        <LimitReachedModal\n          {...this.props}\n          limit={trancheLimit}\n          closeModal={this.resetModal}\n          isOpen={this.state.activeModal === 'limit'}\n        />\n        <ShareModal\n          confettiEnabled={true}\n          icon={`images/medal.svg`}\n          title={`Congratulations!`}\n          account={this.props.account}\n          closeModal={this.resetModal}\n          tokenName={this.props.selectedToken}\n          isOpen={this.state.activeModal === 'share'}\n          text={`You have successfully deposited in Idle!<br />Enjoy <strong>${this.state.trancheAPY ? this.state.trancheAPY.toFixed(2) : '0.00'}% APY</strong> on your <strong>${this.props.selectedToken}</strong>!`}\n          tweet={`I'm earning ${this.state.trancheAPY ? this.state.trancheAPY.toFixed(2) : '0.00'}% APY on my ${this.props.selectedToken} with @idlefinance tranches! Go to ${this.functionsUtil.getGlobalConfig(['baseURL'])}${this.props.selectedSection.route} and start earning now from your idle tokens!`}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default TrancheDetails;\n","import { Line } from '@nivo/line';\nimport React, { Component } from 'react';\n// import { linearGradientDef } from '@nivo/core'\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport ChartCustomTooltip from '../ChartCustomTooltip/ChartCustomTooltip';\nimport ChartCustomTooltipRow from '../ChartCustomTooltipRow/ChartCustomTooltipRow';\n\nclass PortfolioEquityTranches extends Component {\n  state = {\n    startDate:null,\n    chartData:null,\n    chartProps:null,\n    chartwidth:null,\n    chartHeight:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadChartData();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const quickDateSelectionChanged = prevProps.quickDateSelection !== this.props.quickDateSelection;\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n    if (tokenChanged || quickDateSelectionChanged){\n      this.setState({\n        chartData:null\n      },() => {\n        this.componentDidMount();\n      });\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    if (mobileChanged || themeModeChanged){\n      this.loadChartData();\n    }\n  }\n\n  async loadChartData() {\n    let enabledTokens = this.props.enabledTokens;\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTranches).reduce( (enabledTokens,protocol) => {\n        const tokens = Object.keys(this.props.availableTranches[protocol]);\n        tokens.forEach( token => {\n          if (!enabledTokens.includes(token)){\n            enabledTokens.push(token);\n          }\n        });\n        return enabledTokens;\n      },[]);\n    }\n\n    const transactions = this.props.transactionsList;\n\n    const chartData = [];\n    let tokensBalance = {};\n    let firstTxTimestamp = null;\n\n    await this.functionsUtil.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      tokensBalance[selectedToken] = [];\n\n      const filteredTxs = Object.values(transactions).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        let amountLent = this.functionsUtil.BNify(0);\n\n        filteredTxs.forEach((tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending')){\n            return false;\n          }\n          \n          firstTxTimestamp = firstTxTimestamp ? Math.min(firstTxTimestamp,parseInt(tx.timeStamp)) : parseInt(tx.timeStamp);\n\n          const tokenAmount = this.functionsUtil.BNify(tx.tokenAmount);\n\n          switch (tx.action){\n            case 'Deposit':\n              amountLent = amountLent.plus(tokenAmount);\n            break;\n            case 'Withdraw':\n              amountLent = amountLent.minus(tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.functionsUtil.BNify(0);\n          }\n\n          const action = tx.action;\n          const balance = amountLent;\n          const timeStamp = parseInt(tx.timeStamp);\n          const tranchePrice = this.functionsUtil.BNify(tx.tranchePrice);\n          const trancheTokens = this.functionsUtil.BNify(tx.trancheTokens);\n\n          if (!tranchePrice.isNaN() && !tranchePrice.isNaN()){\n            tokensBalance[selectedToken].push({\n              action,\n              balance,\n              timeStamp,\n              tokenAmount,\n              tranchePrice,\n              trancheTokens\n            });\n          }\n        });\n      }\n    });\n\n    // console.log('tokensBalance',tokensBalance);\n\n    // Calculate Start Date\n    let startDate = null;\n    const currentDate = this.functionsUtil.strToMoment(new Date());\n\n    switch (this.props.quickDateSelection){\n      case 'week':\n        startDate = currentDate.clone().subtract(1,'week');\n      break;\n      case 'month':\n        startDate = currentDate.clone().subtract(1,'month');\n      break;\n      case 'month3':\n        startDate = currentDate.clone().subtract(3,'month');\n      break;\n      case 'month6':\n        startDate = currentDate.clone().subtract(6,'month');\n      break;\n      default:\n        startDate = null;\n      break;\n    }\n\n    const days = {};\n    let prevBalances = {};\n    let prevTimestamp = null;\n    let minChartValue = null;\n    let maxChartValue = null;\n    let aggregatedBalance = null;\n    const aggregatedBalancesKeys = {};\n    const tokensBalancesPerDate = {};\n    const currTimestamp = parseInt(Date.now()/1000)+86400;\n\n    const tokensData = {};\n\n    await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      // tokensData[token] = await this.functionsUtil.getTokenApiData(this.props.availableTokens[token].address,isRisk,firstTxTimestamp,null,false,3600);\n      tokensData[token] = [];\n    });\n\n    const trancheTokenBalance = {};\n\n    if (!firstTxTimestamp){\n      firstTxTimestamp = currTimestamp;\n    }\n\n    for (let timeStamp=firstTxTimestamp;timeStamp<=currTimestamp;timeStamp+=this.props.frequencySeconds){\n\n      const foundBalances = {};\n      const tokensBalances = {};\n      if (timeStamp > currTimestamp){\n        timeStamp = currTimestamp;\n      }\n      // timeStamp = Math.min(currTimestamp,timeStamp);\n      aggregatedBalance = this.functionsUtil.BNify(0);\n\n      // await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      // eslint-disable-next-line\n      Object.keys(tokensBalance).forEach(token => {\n\n        let lastTokenData = null;\n        const lastTokenDataUnfiltered = Object.values(tokensData[token]).pop();\n        const filteredTokenData = tokensData[token].filter(tx => (tx.timestamp>=prevTimestamp && tx.timestamp<=timeStamp));\n        if (filteredTokenData && filteredTokenData.length){\n          lastTokenData = filteredTokenData.pop();\n        }\n\n        if (!trancheTokenBalance[token]){\n          trancheTokenBalance[token] = this.functionsUtil.BNify(0);\n        }\n\n        const tokenDecimals = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'decimals']);\n        let filteredBalances = tokensBalance[token].filter(tx => (tx.timeStamp<=timeStamp && (!prevTimestamp || tx.timeStamp>prevTimestamp)));\n        \n        if (!filteredBalances.length){\n          if (prevBalances && prevBalances[token]){\n            filteredBalances = prevBalances[token];\n            const lastFilteredTx = Object.assign([],filteredBalances).pop();\n            const currentBalance = parseFloat(lastFilteredTx.balance);\n\n            // Take idleToken price from API and calculate new balance\n            if (currentBalance>0 && timeStamp>firstTxTimestamp && lastTokenData){\n              const trancheTokens = trancheTokenBalance[token];\n              const tranchePrice = this.functionsUtil.fixTokenDecimals(lastTokenData.tranchePrice,tokenDecimals);\n              let newBalance = trancheTokens.times(tranchePrice);\n\n              // Set new balance and tranchePrice\n              lastFilteredTx.balance = newBalance;\n              lastFilteredTx.tranchePrice = tranchePrice;\n              filteredBalances = [lastFilteredTx];\n            }\n          } else {\n            filteredBalances = [{\n              balance:this.functionsUtil.BNify(0),\n              tranchePrice:this.functionsUtil.BNify(0)\n            }];\n          }\n        } else {\n          filteredBalances.forEach(tx => {\n            switch (tx.action){\n              case 'Deposit':\n                trancheTokenBalance[token] = trancheTokenBalance[token].plus(tx.trancheTokens);\n              break;\n              default:\n                trancheTokenBalance[token] = trancheTokenBalance[token].minus(tx.trancheTokens);\n                if (trancheTokenBalance[token].lt(0)){\n                  trancheTokenBalance[token] = this.functionsUtil.BNify(0);\n                }\n              break;\n            }\n          });\n        }\n\n        const lastTx = Object.assign([],filteredBalances).pop();\n        // let lastTxBalance = this.functionsUtil.BNify(lastTx.balance);\n        let lastTxBalance = trancheTokenBalance[token].times(lastTx.tranchePrice);\n\n        if (lastTxBalance.gt(0)){\n          // Convert token balance to USD\n          let tokenUsdConversionRate = null;\n          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'conversionRateField']);\n          if (!this.props.chartToken && conversionRateField){\n            const conversionRate = lastTokenData && lastTokenData[conversionRateField] ? lastTokenData[conversionRateField] : (lastTokenDataUnfiltered && lastTokenDataUnfiltered[conversionRateField] ? lastTokenDataUnfiltered[conversionRateField] : null);\n            if (conversionRate){\n              tokenUsdConversionRate = this.functionsUtil.fixTokenDecimals(conversionRate,18);\n              if (tokenUsdConversionRate.gt(0)){\n                lastTxBalance = lastTxBalance.times(tokenUsdConversionRate);\n              }\n            }\n          }\n          \n          tokensBalances[token] = lastTxBalance;\n          aggregatedBalance = aggregatedBalance.plus(lastTxBalance);\n        }\n\n        foundBalances[token] = filteredBalances;\n      });\n\n      let momentDate = this.functionsUtil.strToMoment(timeStamp*1000);\n\n      if (startDate === null || (momentDate.isSameOrAfter(startDate) && momentDate.isSameOrBefore(new Date(),'day'))){\n        \n        // if (momentDate.isAfter(new Date(),'day')){\n        //   momentDate = this.functionsUtil.strToMoment(new Date());\n        // }\n\n        // Force date to midnight\n        const formattedDate = momentDate.format('YYYY/MM/DD 00:00');\n\n        // Save days for axisBottom format\n        days[momentDate.format('YYYY/MM/DD')] = 1;\n\n        aggregatedBalance = parseFloat(parseFloat(aggregatedBalance.toFixed(6)));\n\n        tokensBalancesPerDate[formattedDate] = tokensBalances;\n        aggregatedBalancesKeys[formattedDate] = aggregatedBalance;\n\n        // console.log(timeStamp,formattedDate,tokensBalances);\n\n        minChartValue = minChartValue === null ? aggregatedBalance : Math.min(minChartValue,aggregatedBalance);\n        maxChartValue = maxChartValue === null ? aggregatedBalance : Math.max(maxChartValue,aggregatedBalance);\n      }\n\n      prevTimestamp = timeStamp;\n      prevBalances = foundBalances;\n    }\n\n    const aggregatedBalances = Object.keys(aggregatedBalancesKeys).map(date => ({\n      x:date,\n      y:aggregatedBalancesKeys[date],\n      balances:tokensBalancesPerDate[date]\n    }));\n\n    let itemIndex = 0;\n    aggregatedBalances.forEach( (item,index) => {\n      const itemPos = Math.floor(itemIndex/aggregatedBalances.length*100);\n      aggregatedBalances[index].itemPos = itemPos;\n      itemIndex++;\n    });\n\n    /*\n    aggregatedBalances.push({\n      x:momentDate.format('YYYY/MM/DD HH:mm'),\n      y:aggregatedBalance\n    });\n    */\n\n    // Add day before to start with zero balance\n    /*\n    const firstTxMomentDate = this.functionsUtil.strToMoment(firstTxTimestamp*1000);\n    if ((startDate === null || startDate.isSameOrBefore(firstTxMomentDate)) && aggregatedBalances.length){\n      const firstItem = aggregatedBalances[0];\n      const firstDate = this.functionsUtil.strToMoment(firstItem.x,'YYYY/MM/DD HH:mm');\n      firstDate.subtract(1,'day');\n      aggregatedBalances.unshift({\n        x:firstDate.format('YYYY/MM/DD HH:mm'),\n        y:0\n      });\n    }\n    */\n\n    const chartToken = this.props.chartToken ? this.props.chartToken.toUpperCase() : 'USD';\n\n    // Add token Data\n    chartData.push({\n      id:chartToken,\n      color: 'hsl('+ this.functionsUtil.getGlobalConfig(['stats','tokens',chartToken,'color','hsl']).join(',')+')',\n      data:aggregatedBalances\n    });\n\n    // console.log('PortfolioEquityTranches',chartData);\n\n    let yFormatDecimals = 2;\n    if (maxChartValue-minChartValue<1){\n      yFormatDecimals = 4;\n    }\n\n    if (maxChartValue === minChartValue){\n      minChartValue = Math.max(0,maxChartValue-1);\n    }\n\n    const maxGridLines = 5;\n    const gridYStep = (maxChartValue-minChartValue)/maxGridLines;\n    const gridYValues = [];\n    for (let i=0;i<=maxGridLines;i++){\n      const gridYValue = parseFloat(parseFloat(minChartValue+(i*gridYStep)).toFixed(6));\n      gridYValues.push(gridYValue);\n    }\n    \n    const axisBottomMaxValues = 10;\n    const daysCount = Object.values(days).length;    \n    const daysFrequency = Math.max(1,Math.ceil(daysCount/axisBottomMaxValues));\n\n    const chartProps = {\n      xScale:{\n        type: 'time',\n        format: '%Y/%m/%d %H:%M',\n      },\n      yScale:{\n        type: 'linear',\n        stacked: false,\n        min: minChartValue,\n        max: maxChartValue\n      },\n      xFormat:'time:%b %d %Y',\n      yFormat:value => this.functionsUtil.formatMoney(value,yFormatDecimals),\n      axisBottom: this.props.isMobile ? null : {\n        legend: '',\n        tickSize:0,\n        format: '%b %d',\n        tickPadding: 15,\n        orient: 'bottom',\n        legendOffset: 36,\n        legendPosition: 'middle',\n        tickValues:'every '+daysFrequency+' days'\n      },\n      gridYValues,\n      pointSize:0,\n      useMesh:true,\n      axisLeft: this.props.isMobile ? null : {\n        legend: '',\n        tickSize: 0,\n        orient: 'left',\n        tickPadding: 10,\n        tickRotation: 0,\n        legendOffset: -70,\n        tickValues:gridYValues,\n        legendPosition: 'middle',\n        format: v => this.functionsUtil.abbreviateNumber(v,2),\n      },\n      animate:true,\n      pointLabel:'y',\n      enableArea:true,\n      enableSlices:'x',\n      enableGridY:true,\n      curve:'monotoneX',\n      enableGridX:false,\n      pointBorderWidth:1,\n      colors:d => d.color,\n      pointLabelYOffset:-12,\n      areaBaselineValue:minChartValue,\n      pointColor:{ from: 'color', modifiers: []},\n      areaOpacity:this.props.themeMode === 'light' ? 0.1 : 0.5,\n      theme:{\n        axis: {\n          ticks: {\n            text: {\n              fontSize:12,\n              fontWeight:600,\n              fill:this.props.theme.colors.legend,\n              fontFamily:this.props.theme.fonts.sansSerif\n            }\n          }\n        },\n        grid: {\n          line: {\n            stroke: this.props.theme.colors.lineChartStroke, strokeDasharray: '8 4'\n          }\n        },\n      },\n      /*\n      defs:[\n        linearGradientDef('gradientA', [\n          { offset: 0, color: 'inherit' },\n          { offset: 100, color: 'inherit', opacity: 0 },\n        ]),\n      ],\n      fill:[{ match: '*', id: 'gradientA' }],\n      */\n      margin: this.props.isMobile ? { top: 20, right: 25, bottom: 25, left: 20 } : { top: 30, right: 50, bottom: 45, left: 60 },\n      sliceTooltip:(slideData) => {\n        const { slice } = slideData;\n        const point = slice.points[0];\n        return (\n          <ChartCustomTooltip\n            point={point}\n          >\n            <ChartCustomTooltipRow\n              color={point.color}\n              label={point.serieId}\n              value={`$ ${point.data.yFormatted}`}\n            />\n            {\n            (typeof point.data.balances === 'object' && Object.keys(point.data.balances).length>0) &&\n              Object.keys(point.data.balances).map(token => {\n                if (token === point.serieId){\n                  return null;\n                }\n                const color = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'color','hex']);\n                const balance = point.data.balances[token];\n                let formattedBalance = this.functionsUtil.formatMoney(balance,2);\n                if (parseFloat(balance)>=0.01){\n                  return (\n                    <ChartCustomTooltipRow\n                      label={token}\n                      color={color}\n                      key={`row_${token}`}\n                      value={`$ ${formattedBalance}`}\n                    />\n                  );\n                }\n                return null;\n              })\n            }\n          </ChartCustomTooltip>\n        );\n      }\n    };\n\n    this.setState({\n      chartData,\n      chartProps\n    });\n  }\n\n  render() {\n    return (\n      <GenericChart\n        type={Line}\n        showLoader={true}\n        {...this.state.chartProps}\n        data={this.state.chartData}\n        parentId={this.props.parentId}\n        height={this.props.chartHeight}\n        parentIdHeight={this.props.parentIdHeight}\n      />\n    );\n  }\n}\n\nexport default PortfolioEquityTranches;","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TrancheField from '../TrancheField/TrancheField';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport { Flex, Heading, Text, Tooltip, Icon } from \"rimble-ui\";\nimport PortfolioEquityTranches from '../PortfolioEquityTranches/PortfolioEquityTranches';\n\nclass FundsOverviewTranche extends Component {\n\n  state = {\n    // govTokensAprs:null,\n    aggregatedValues:[],\n    govTokensTotalApr:null,\n    govTokensUserBalance:null,\n    govTokensDistribution:null,\n    govTokensTotalBalance:null,\n    govTokensTotalAprTooltip:null,\n    idleTokenUserDistribution:null,\n    govTokensDistributionTooltip:null,\n    govTokensTotalBalanceTooltip:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  idleGovToken = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    this.idleGovToken = this.functionsUtil.getIdleGovToken();\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n\n    /*\n    const govTokenAvailableTokens = {};\n    govTokenAvailableTokens[this.props.selectedToken] = this.props.tokenConfig;\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const [\n      // govTokensAprs,\n      idleTokenUserDistribution,\n      govTokensUserBalance,\n      apy,\n      depositTimestamp,\n      days\n    ] = await Promise.all([\n      // this.functionsUtil.getGovTokensAprs(this.props.selectedToken,this.props.tokenConfig),\n      this.idleGovToken.getUserDistribution(this.props.account,govTokenAvailableTokens,true),\n      this.functionsUtil.getGovTokensUserBalances(this.props.account,govTokenAvailableTokens,null),\n      this.functionsUtil.loadTrancheField('apy',this.props.selectedToken,this.props.tokenConfig,this.props.account,false),\n      this.functionsUtil.loadTrancheField('depositTimestamp',this.props.selectedToken,this.props.tokenConfig,this.props.account),\n      this.functionsUtil.loadTrancheField('daysFirstDeposit',this.props.selectedToken,this.props.tokenConfig,this.props.account),\n    ]);\n\n    let avgAPY = await this.functionsUtil.getAvgAPYStats(this.props.tokenConfig.address,isRisk,depositTimestamp);\n\n    if (!avgAPY || this.functionsUtil.BNify(avgAPY).lte(0)){\n      avgAPY = apy;\n    }\n\n    const govTokensTotalBalance = govTokensUserBalance ? Object.values(govTokensUserBalance).reduce( (totBalance,govTokenBalance) => {\n      return totBalance.plus(this.functionsUtil.BNify(govTokenBalance));\n    },this.functionsUtil.BNify(0)) : null;\n\n    const govTokensTotalBalanceTooltip = govTokensUserBalance ? Object.keys(govTokensUserBalance).map( govToken => {\n      const balance = govTokensUserBalance[govToken];\n      if (balance.gt(0)){\n        return `+${balance.toFixed(2)} ${govToken}`;\n      } else {\n        return null;\n      }\n    }).filter(v => (v !== null)) : null;\n\n    const aggregatedValues = [\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Avg APY',\n          desc:this.functionsUtil.getGlobalConfig(['messages','apyLong']),\n          children:(\n            <Flex\n              width={1}\n              alignItems={'center'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Text\n                lineHeight={1}\n                fontWeight={[3,4]}\n                color={'copyColor'}\n                fontFamily={'counter'}\n                fontSize={['1.7em','1.7em']}\n                dangerouslySetInnerHTML={{ __html: (avgAPY ? avgAPY.toFixed(2)+'%' : '0.00%') }}\n              />\n            </Flex>\n          )\n        }\n      },\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Current Allocation',\n          children:(\n            <Flex\n              width={1}\n              id={'allocationChart'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n            >\n              <TrancheField\n                {...this.props}\n                showLoader={true}\n                fieldInfo={{\n                  name:'allocationChart'\n                }}\n                parentId={'allocationChart'}\n                token={this.props.selectedToken}\n                tokenConfig={this.props.tokenConfig}\n              />\n            </Flex>\n          ),\n          label:'',\n        }\n      },\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Days since first deposit',\n          children:(\n            <Flex\n              width={1}\n              alignItems={'center'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Text\n                lineHeight={1}\n                fontWeight={[3,4]}\n                color={'copyColor'}\n                fontFamily={'counter'}\n                fontSize={['1.7em','1.7em']}\n                dangerouslySetInnerHTML={{ __html: (days ? parseInt(days) : '-') }}\n              />\n            </Flex>\n          )\n        }\n      }\n    ];\n\n    this.setState({\n      // govTokensAprs,\n      aggregatedValues,\n      // govTokensTotalApr,\n      govTokensUserBalance,\n      govTokensTotalBalance,\n      // govTokensTotalAprTooltip,\n      idleTokenUserDistribution,\n      govTokensTotalBalanceTooltip\n    });\n    */\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n\n    return (\n      <Flex\n        width={1}\n        flexDirection={'column'}\n      >\n        {\n          this.state.aggregatedValues.length>0 && \n            <Flex\n              width={1}\n              mb={[0,3]}\n              mt={[2,0]}\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.aggregatedValues.map((v,i) => (\n                  <Flex\n                    {...v.flexProps}\n                    flexDirection={'column'}\n                    key={`aggregatedValue_${i}`}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        py:[2,3],\n                        mb:[3,0]\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        {\n                          v.props.children ? v.props.children : (\n                            <Text\n                              lineHeight={1}\n                              fontWeight={[3,4]}\n                              color={'copyColor'}\n                              fontFamily={'counter'}\n                              fontSize={[4,'1.7em']}\n                              dangerouslySetInnerHTML={{ __html: v.props.value }}\n                            >\n                            </Text>\n                          )\n                        }\n                        <Flex\n                          mt={2}\n                          width={1}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                        >\n                          <Text\n                            fontWeight={2}\n                            fontSize={[1,2]}\n                            color={'cellText'}\n                          >\n                            {v.props.title}\n                          </Text>\n                          {\n                            v.props.desc && \n                              <Tooltip\n                                placement={'bottom'}\n                                message={v.props.desc}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                          }\n                        </Flex>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                ))\n              }\n            </Flex>\n        }\n        <DashboardCard\n          cardProps={{\n            px:2,\n            py:3\n          }}\n        >\n          {\n            this.props.transactionsList && this.props.transactionsList.length>0 && (\n              <Flex\n                width={1}\n                ml={[0,3]}\n                id={\"funds-overview\"}\n              >\n                <PortfolioEquityTranches\n                  {...this.props}\n                  chartHeight={350}\n                  parentId={'funds-overview'}\n                  chartToken={this.props.selectedToken}\n                  enabledTokens={[this.props.selectedToken]}\n                  frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n                />\n              </Flex>\n            )\n          }\n          <Flex\n            width={1}\n            flexDirection={['column','row']}\n          >\n            <Flex\n              mb={[2,0]}\n              width={[1,1/6]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Deposited\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'trancheDeposited',\n                  props:{\n                    decimals:7,\n                    fontWeight:300,\n                    maxPrecision:8,\n                    fontSize:['1.8em','1.9em'],\n                    color:this.props.theme.colors.counter,\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,1/6]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Staked Amount\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'trancheStaked',\n                  props:{\n                    decimals:7,\n                    fontWeight:300,\n                    maxPrecision:8,\n                    fontSize:['1.8em','1.9em'],\n                    color:this.props.theme.colors.counter,\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,1/6]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Redeemable\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'trancheRedeemableWithStaked',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      color:this.props.theme.colors.counter,\n                      fontSize: this.props.isMobile ? '1.8em' : '1.9em',\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n              <Flex\n                width={1}\n                mt={'-8px'}\n                justifyContent={'center'}\n              >\n                <TrancheField\n                  {...this.props}\n                  addTokenName={false}\n                  fieldInfo={{\n                    name:'earningsPerc',\n                    props:{\n                      fontSize:1,\n                      fontWeight:2,\n                      color:'cellText',\n                      flexProps:{\n                        justifyContent:'center'\n                      }\n                    }\n                  }}\n                />\n              </Flex>\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,1/6]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Earnings\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'earningsCounter',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      fontSize:this.props.isMobile ? '1.8em' : '1.9em',\n                      color:this.props.theme.colors.counter\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n              {\n                this.state.govTokensTotalBalanceTooltip && this.state.govTokensTotalBalanceTooltip.length>0 && (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    {\n                      this.state.govTokensTotalBalanceTooltip.map((govTokenBalance,govTokenIndex) => (\n                        <Text\n                          fontSize={1}\n                          lineHeight={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                          mt={govTokenIndex ? 1 : 0}\n                          key={`govToken_${govTokenIndex}`}\n                        >\n                          {govTokenBalance}\n                        </Text>\n                      ))\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,1/6]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Fees\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'feesCounter',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      fontSize:this.props.isMobile ? '1.8em' : '1.9em',\n                      color:this.props.theme.colors.counter\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,1/6]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Realized APY\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'realizedApy',\n                  props:{\n                    decimals:2,\n                    fontWeight:300,\n                    fontSize:['1.8em','1.9em'],\n                    color:this.props.theme.colors.counter,\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n              {\n                this.state.idleTokenUserDistribution && (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      mt={1}\n                      fontSize={1}\n                      lineHeight={1}\n                      fontWeight={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      {this.state.idleTokenUserDistribution.toFixed(4)} {this.idleGovToken.tokenName}/{this.idleGovToken.tokenConfig.distributionFrequency}\n                    </Text>\n                  </Flex>\n                )\n              }\n            </Flex>\n          </Flex>\n        </DashboardCard>\n      </Flex>\n    );\n  }\n}\n\nexport default FundsOverviewTranche;","import Title from '../Title/Title';\nimport { Button, Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport CustomList from '../CustomList/CustomList';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\n\nclass StakingRewardsTranche extends Component {\n\n  state = {\n    stakingRewards:null,\n    stakingRewardsRows:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadUserRewards();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const portfolioChanged = JSON.stringify(prevProps.portfolio) !== JSON.stringify(this.props.portfolio);\n    const trancheConfigChanged = JSON.stringify(prevProps.trancheConfig) !== JSON.stringify(this.props.trancheConfig);\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (accountChanged || trancheConfigChanged || portfolioChanged || transactionsChanged){\n      this.loadUserRewards();\n    }\n  }\n\n  async loadUserRewards(){\n    if (!this.props.account || !this.props.trancheConfig || !this.props.portfolio){\n      return false;\n    }\n\n    const [\n      stakingRewards,\n      trancheBalance,\n      rewardTokensInfo,\n      trancheStakedAmount\n    ] = await Promise.all([\n      this.functionsUtil.getTrancheStakingRewards(this.props.account,this.props.trancheConfig),\n      this.functionsUtil.getTokenBalance(this.props.trancheConfig.name,this.props.account,false),\n      this.functionsUtil.getTrancheRewardTokensInfo(this.props.tokenConfig,this.props.trancheConfig),\n      this.functionsUtil.getTrancheStakedBalance(this.props.trancheConfig.CDORewards.name,this.props.account,this.props.trancheConfig.CDORewards.decimals)\n    ]);\n\n    const trancheBalanceInfo = this.props.portfolio.tranchesBalance.find( p => p.token === this.props.token && p.protocol === this.props.protocol && p.tranche === this.props.tranche );\n    \n    const stakingRewardsRows = [];\n    await this.functionsUtil.asyncForEach(Object.keys(stakingRewards), async (rewardToken) => {\n      const tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',rewardToken]);\n      const tokenAmount = this.functionsUtil.BNify(stakingRewards[rewardToken]);\n      const rewardTokenInfo = rewardTokensInfo[rewardToken];\n      const tokenBalance = await this.functionsUtil.getTokenBalance(rewardToken,this.props.account);\n      let distributionSpeed = rewardTokenInfo ? rewardTokenInfo.lastAmount : null;\n      if (trancheBalanceInfo){\n        distributionSpeed = distributionSpeed.times(trancheBalanceInfo.poolShare);\n      }\n      stakingRewardsRows.push({\n        token:rewardToken,\n        staked:trancheStakedAmount,\n        balance:tokenBalance.toFixed(8),\n        reedemable:tokenAmount.toFixed(8),\n        trancheBalance:this.functionsUtil.integerValue(trancheBalance),\n        tokenIcon:tokenConfig.icon || `images/tokens/${rewardToken}.svg`,\n        distributionSpeed:distributionSpeed ? distributionSpeed.toFixed(8)+` ${rewardToken} (last harvest)` : '-'\n      });\n    });\n\n    // console.log('stakingRewardsRows',stakingRewardsRows);\n\n    this.setState({\n      stakingRewardsRows\n    });\n  }\n\n  claimCallback(tx){\n    this.loadUserRewards();\n  }\n\n  stakeCallback(tx){\n    this.loadUserRewards();\n  }\n\n  render() {\n    return (\n      this.state.stakingRewardsRows ?\n        <Flex\n          mb={[0,4]}\n          width={1}\n          flexDirection={'column'}\n          id={'funds-overview-container'}\n        >\n          <Title my={[3,4]}>Staking Rewards</Title>\n          <CustomList\n            rows={this.state.stakingRewardsRows}\n            cols={[\n              {\n                title:'TOKEN',\n                props:{\n                  width:[0.18,0.16]\n                },\n                fields:[\n                  {\n                    type:'image',\n                    props:{\n                      mr:2,\n                      size:this.props.isMobile ? '1.2em' : '1.8em'\n                    },\n                    path:['tokenIcon']\n                  },\n                  {\n                    type:'text',\n                    path:['token'],\n                  }\n                ]\n              },\n              {\n                mobile:false,\n                title:'BALANCE',\n                props:{\n                  width:[0.27,0.24],\n                  justifyContent:['center','flex-start']\n                },\n                fields:[\n                  {\n                    type:'text',\n                    path:['balance'],\n                    props:{\n                      decimals: this.props.isMobile ? 4 : 8\n                    }\n                  },\n                ]\n              },\n              {\n                title:'REDEEMABLE',\n                desc:this.functionsUtil.getGlobalConfig(['messages','govTokenRedeemableBalance']),\n                props:{\n                  width:[0.29,0.24],\n                  justifyContent:['center','flex-start']\n                },\n                fields:[\n                  {\n                    type:'text',\n                    path:['reedemable'],\n                    props:{\n                      decimals: this.props.isMobile ? 4 : 8\n                    }\n                  },\n                ]\n              },\n              {\n                title:'DISTRIBUTION',\n                desc:this.functionsUtil.getGlobalConfig(['messages','userDistributionSpeed']),\n                props:{\n                  width:[0.29,0.24],\n                },\n                fields:[\n                  {\n                    type:'text',\n                    path:['distributionSpeed'],\n                    props:{\n                      decimals: this.props.isMobile ? 4 : 8\n                    }\n                  }\n                ]\n              },\n              {\n                title:'',\n                props:{\n                  width:[0.26,0.16],\n                },\n                parentProps:{\n                  width:1\n                },\n                fields:[\n                  {\n                    funcProps:{\n                      componentProps:{\n                        disabled:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? true : false ),\n                      },\n                      // value:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? 'stake' : 'claim') : 'claim'),\n                      // action:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? 'Stake' : 'Claim') : 'Claim'),\n                      // methodName:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? 'stake' : 'claim') : 'claim'),\n                      // transactionParams:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? [this.functionsUtil.BNify(props.row.trancheBalance).toFixed()] : []) : []),\n                      // callback:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? this.stakeCallback.bind(this) : this.claimCallback.bind(this)) : this.claimCallback.bind(this))\n                    },\n                    fieldComponent:ExecuteTransaction,\n                    props:{\n                      params:[],\n                      parentProps:{\n                        width:1\n                      },\n                      Component:Button,\n                      componentProps:{\n                        style:{\n                          width:'100%'\n                        },\n                        value:'Claim',\n                        borderRadius:4,\n                        mainColor:'redeem',\n                        size:this.props.isMobile ? 'small' : 'medium'\n                      },\n                      value:'Claim',\n                      action:'claim',\n                      methodName:'claim',\n                      callback:this.claimCallback.bind(this),\n                      contractName:this.props.trancheConfig.CDORewards.name\n                    }\n                  }\n                ]\n              }\n            ]}\n            {...this.props}\n          />\n        </Flex>\n      : this.props.children || null\n    );\n  }\n}\n\nexport default StakingRewardsTranche;\n","import Title from '../Title/Title';\nimport { Box, Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport GenericFaqs from '../GenericFaqs/GenericFaqs';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TrancheDetails from '../TrancheDetails/TrancheDetails';\n// import TrancheWelcome from '../TrancheWelcome/TrancheWelcome';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport FundsOverviewTranche from '../FundsOverviewTranche/FundsOverviewTranche';\nimport StakingRewardsTranche from '../StakingRewardsTranche/StakingRewardsTranche';\n\nclass TranchePage extends Component {\n\n  state = {\n    transactions:[],\n    componentLoaded:false\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTransactions();\n  }\n\n  async componentDidMount(){\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const portfolioChanged = (this.props.portfolio && !prevProps.portfolio) || JSON.stringify(this.props.portfolio) !== JSON.stringify(prevProps.portfolio);\n    if (portfolioChanged){\n      this.loadTransactions();\n    }\n  }\n\n  loadTransactions(){\n    const transactions = this.props.portfolio ? this.props.portfolio.transactions.filter( t => t.protocol.toLowerCase() === this.props.selectedProtocol.toLowerCase() && t.token.toLowerCase() === this.props.selectedToken.toLowerCase() && (!this.props.trancheType || t.tranche === this.props.trancheType) ) : [];\n\n    // console.log('loadTransactions',this.props.selectedProtocol,this.props.selectedToken,this.props.trancheType,transactions);\n    const componentLoaded = true;\n\n    this.setState({\n      transactions,\n      componentLoaded\n    });\n  }\n\n  render() {\n    const tranchesDetails = this.functionsUtil.getGlobalConfig(['tranches']);\n    const filteredTranchesTypes = Object.keys(tranchesDetails).filter( trancheType => !this.props.trancheType || this.props.trancheType === trancheType );\n    return (\n      <Box\n        mb={4}\n        width={1}\n      >\n        <Title\n          mb={3}\n        >\n          {this.functionsUtil.capitalize(this.props.selectedProtocol)} - {this.props.selectedToken} - {this.props.trancheDetails ? this.props.trancheDetails.name : 'Tranches'} \n        </Title>\n        {\n          /*\n          !this.props.trancheType ? (\n            <TrancheWelcome\n              {...this.props}\n              tokenConfig={this.props.tokenConfig}\n              selectTrancheType={this.props.selectTrancheType}\n            />\n          ) : (\n          */\n            <Flex\n              mt={2}\n              width={1}\n              flexDirection={['column','row']}\n              justifyContent={this.props.trancheType ? 'center' : 'space-between'}\n            >\n              {\n                filteredTranchesTypes.map( trancheType => (\n                  <Flex\n                    mb={[3,0]}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    key={`tranche_${trancheType}`}\n                    width={[1,(1/filteredTranchesTypes.length)-0.02]}\n                  >\n                    <TrancheDetails\n                      {...this.props}\n                      selectedTranche={trancheType}\n                      cdoConfig={this.props.tokenConfig.CDO}\n                      showSelectButton={!this.props.trancheType}\n                      selectTrancheType={this.props.selectTrancheType}\n                      trancheConfig={this.props.tokenConfig[trancheType]}\n                    />\n                  </Flex>\n                ))\n              }\n            </Flex>\n            /*\n          )\n        */\n        }\n        {\n          this.state.componentLoaded && this.props.account && this.props.userHasFunds && this.props.trancheType &&\n            <StakingRewardsTranche\n              {...this.props}\n              token={this.props.selectedToken}\n              tranche={this.props.trancheType}\n              tokenConfig={this.props.tokenConfig}\n              protocol={this.props.selectedProtocol}\n              transactionsList={this.state.transactions}\n              trancheConfig={this.props.tokenConfig[this.props.trancheType]}\n            />\n        }\n        {\n          this.state.componentLoaded && this.props.account && this.props.userHasFunds && this.props.trancheType &&\n            <Flex\n              mb={[0,4]}\n              width={1}\n              flexDirection={'column'}\n              id={'funds-overview-container'}\n            >\n              <Title my={[3,4]}>Funds Overview</Title>\n              <FundsOverviewTranche\n                {...this.props}\n                token={this.props.selectedToken}\n                tranche={this.props.trancheType}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                transactionsList={this.state.transactions}\n                trancheConfig={this.props.tokenConfig[this.props.trancheType]}\n              />\n            </Flex>\n        }\n        {\n          this.props.account && this.state.transactions && this.state.transactions.length>0 && \n            <Flex\n              mb={[3,4]}\n              width={1}\n              id={'transactions'}\n              flexDirection={'column'}\n            >\n              <Title my={[3,4]}>Transactions</Title>\n              <TransactionsList\n                {...this.props}\n                enabledTokens={[this.props.selectedToken]}\n                transactionsList={this.state.transactions}\n                availableActions={this.state.transactions.reduce( (availableActions,t) => {\n                  availableActions[t.action.toLowerCase()] = t.action;\n                  return availableActions;\n                },{})}\n                cols={[\n                  {\n                    title: this.props.isMobile ? '' : 'HASH',\n                    props:{\n                      width:[0.13,0.18]\n                    },\n                    fields:[\n                      {\n                        name:'icon',\n                        props:{\n                          mr:[0,2]\n                        }\n                      },\n                      {\n                        name:'hash',\n                        mobile:false\n                      }\n                    ]\n                  },\n                  {\n                    title:'ACTION',\n                    mobile:false,\n                    props:{\n                      width:0.12,\n                    },\n                    fields:[\n                      {\n                        name:'action'\n                      }\n                    ]\n                  },\n                  {\n                    title:'DATE',\n                    props:{\n                      width:[0.27,0.15],\n                    },\n                    fields:[\n                      {\n                        name:'date'\n                      }\n                    ]\n                  },\n                  {\n                    mobile:false,\n                    title:'STATUS',\n                    props:{\n                      width:[0.18,0.16],\n                      justifyContent:['center','flex-start']\n                    },\n                    fields:[\n                      {\n                        name:'statusIcon',\n                        props:{\n                          mr:[0,2]\n                        }\n                      },\n                      {\n                        mobile:false,\n                        name:'status'\n                      }\n                    ]\n                  },\n                  {\n                    title:'AMOUNT',\n                    props:{\n                      width:[0.23,0.11],\n                    },\n                    fields:[\n                      {\n                        name:'amount'\n                      },\n                    ]\n                  },\n                  {\n                    title:'PROTOCOL',\n                    props:{\n                      width:[0.21, 0.14],\n                    },\n                    fields:[\n                      {\n                        type:'image',\n                        name:'custom',\n                        path:['protocolIcon'],\n                        props:{\n                          mr:2,\n                          height:['1.4em','2em']\n                        }\n                      },\n                      {\n                        type:'text',\n                        mobile:false,\n                        name:'custom',\n                        path:['protocol']\n                      }\n                    ]\n                  },\n                  {\n                    title:'ASSET',\n                    props:{\n                      width:[0.16,0.14],\n                      justifyContent:['center','flex-start']\n                    },\n                    fields:[\n                      {\n                        name:'tokenIcon',\n                        props:{\n                          mr:[0,2],\n                          height:['1.4em','1.6em']\n                        }\n                      },\n                      {\n                        mobile:false,\n                        name:'tokenName'\n                      },\n                    ]\n                  },\n                ]}\n              />\n            </Flex>\n        }\n        {\n          this.props.trancheType && (\n            <Flex\n              width={1}\n              id={'faqs'}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Title\n                my={3}\n              >\n                Frequently asked questions\n              </Title>\n              <Flex\n                width={[1,0.5]}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <GenericFaqs\n                  showSections={false}\n                  questions={{\n                    '':[\n                      {\n                        q: 'Is there a locking period?',\n                        a: `There are no locking period or epochs and users are free to enter and exit at any time. The interest earned (and governance tokens, after being partially sold in the market) will be split between the two classes according to a predefined ratio called trancheAPRSplitRatio (eg 20% interest to Senior tranche holders and 80% to Junior tranche). Hence, the rate is variable for both classes of tranches.`\n                      },\n                      {\n                        q: 'How the APY is determined?',\n                        a: `The base APY, before being splitted between tranches, is provided by the underlying strategy that takes into account the reinvestment of the accrued governance tokens (except for eventual IDLE rewards). The actual APY of each tranche class is determined by the ratio between the current underlying TVL of Senior and Junior tranches (ie APY = share of yield allocated to senior tranches / Senior TVL). The APY has to be considered net of fees. For more info <a href=\"https://github.com/Idle-Labs/idle-tranches#idle-dynamic-tranches\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.link}\">view the readme</a>`\n                      },\n                      {\n                        q: 'What happens in case of hack?',\n                        a: `In case of hack, an emergency shutdown can be triggered (by both the guardian, which would be a multi-sig wallet, and the owner which will be the Idle governance) in order to pause both deposits and redeems.<br />The redistribution of remaining funds can happens selectively, by allowing only Senior tranche holders to withdraw first directly in the main contract, or through a separate contract for more complex cases and resolutions (managed by the Idle governance).`\n                      },\n                      {\n                        q: 'How are fees collected?',\n                        a: `Fees collected at each harvest event. When the strategy auto-reinvest accrued tokens, Idle protocol charges a 10% performance fee. Renevues get routed to FeeCollector address.`\n                      },\n                      {\n                        q: 'What are staking rewards?',\n                        a: `To keep a good ratio between Senior and Junior tranches and an healthy APY part of farmed governance tokens (eg IDLE) are redistributed to users who stakes their tranche tokens in specific tranche rewards contracts.`\n                      } \n                    ]\n                  }}\n                />\n              </Flex>\n            </Flex>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default TranchePage;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TrancheField from '../TrancheField/TrancheField';\n\nclass TranchesList extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n\n    let enabledProtocols = this.props.enabledProtocols;\n    if (!enabledProtocols || !enabledProtocols.length){\n      enabledProtocols = Object.keys(this.props.availableTranches);\n    }\n\n    return (\n      <Flex id=\"tranches-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"tranches-list\" flexDirection={'column'}>\n          {\n            enabledProtocols.map(protocol => {\n              const protocolConfig = this.props.availableTranches[protocol];\n              if (!protocolConfig){\n                return null;\n              }\n              const tranche = this.props.trancheType || null;\n              return Object.keys(protocolConfig).map( token => (\n                <TableRow\n                  {...this.props}\n                  token={token}\n                  tranche={tranche}\n                  protocol={protocol}\n                  key={`tranche-${protocol}`}\n                  rowId={`tranche-col-${protocol}`}\n                  tokenConfig={protocolConfig[token]}\n                  cardId={`tranche-card-${protocol}`}\n                  fieldComponent={this.props.fieldComponent || TrancheField}\n                />\n              ))\n            })\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TranchesList;\n","import React, { Component } from \"react\";\nimport RoundButton from \"../RoundButton/RoundButton\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\nimport TrancheField from \"../TrancheField/TrancheField\";\nimport { Box, Flex, Icon, Text, Image } from \"rimble-ui\";\n\n//import DashboardCard from \"../DashboardCard/DashboardCard\";\n\nclass Base extends Component {\n  // Utils\n  functionsUtil = null;\n\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n    const trancheDetails = this.props.trancheDetails;\n    const strategyInfo = this.functionsUtil.getGlobalConfig([\n      \"strategies\",\n      \"tranches\"\n    ]);\n\n    const tokenConfig =\n      this.props.tokenConfig ||\n      this.props.availableTranches[strategyInfo.protocol][strategyInfo.token];\n\n    return (\n      <Box my={[3, 0]} boxShadow={1} width={[1, 0.49]} borderRadius={2}>\n        <Flex\n          height={\"100%\"}\n          p={0}\n          mx={0}\n          borderColor={\"transparent\"}\n          border={\"0\"}\n          borderRadius={2}\n          overflow={\"hidden\"}\n          flexDirection={\"column\"}\n          backgroundColor={\"cardBg\"}\n          justifyContent={[\n            \"center\",\n            trancheDetails.type === \"AA\" ? \"left\" : \"right\"\n          ]}\n        >\n          <Flex\n            width={1}\n            borderBottom={`1px solid ${this.props.theme.colors.divider2}`}\n          >\n            <Flex pb={2} mx={2} my={3} flexDirection={\"column\"}>\n              <Flex mt={3} alignItems={\"center\"}>\n                <Image\n                  ml={3}\n                  mr={1}\n                  src={trancheDetails.image}\n                  alt={\"random unsplash image\"}\n                  size={this.props.isMobile ? \"2em\" : \"2.4em\"}\n                />\n                <Flex mx={1}>\n                  <Text\n                    ml={[2, 0]}\n                    fontWeight={4}\n                    fontSize={[4, 5]}\n                    lineHeight={1}\n                  >\n                    {trancheDetails.name}\n                  </Text>\n                </Flex>\n              </Flex>\n              <Flex\n                ml={5}\n                mr={3}\n                mt={3}\n                alignItems={\"flex-start\"}\n                flexDirection={\"column\"}\n              >\n                <Flex mr={1} flexDirection={\"row\"} alignItems={\"baseline\"}>\n                  <TrancheField\n                    fieldInfo={{\n                      name: `${trancheDetails.baseName}Apy`,\n                      showTooltip: false,\n                      props: {\n                        decimals: 2,\n                        fontWeight: 4,\n                        lineHeight: \"1\",\n                        fontSize: [3, 4],\n                        textAlign: \"center\",\n                        flexProps: {\n                          justifyItems: \"flex-end\"\n                        },\n                        color: this.props.trancheDetails.color.hex\n                      }\n                    }}\n                    {...this.props}\n                    tokenConfig={tokenConfig}\n                    token={strategyInfo.token}\n                    tranche={strategyInfo.tranche}\n                    protocol={strategyInfo.protocol}\n                  />\n                  <Text\n                    my={1}\n                    ml={[2, 3]}\n                    fontSize={1}\n                    lineHeight={\"1\"}\n                    textAlign={\"left\"}\n                    color={\"cellText\"}\n                  >\n                    Current APY (variable)\n                  </Text>\n                </Flex>\n                {/*\n                <TrancheField\n                  fieldInfo={{\n                    showLoader:false,\n                    name:'trancheIDLEDistribution',\n                    props:{\n                      decimals:2,\n                      fontWeight:2,\n                      fontSize:[0,1],\n                      color:'cellText',\n                      textAlign:'center',\n                      flexProps:{\n                        justifyContent:'center'\n                      }\n                    },\n                  }}\n                  {...this.props}\n                  tokenConfig={tokenConfig}\n                  token={strategyInfo.token}\n                  trancheConfig={tokenConfig.AA}\n                  tranche={strategyInfo.tranche}\n                  protocol={strategyInfo.protocol}\n                />\n                */}\n                <Text\n                  mt={3}\n                  fontWeight={2}\n                  fontSize={[1, 2]}\n                  textAlign={\"left\"}\n                  lineHeight={\"1.5\"}\n                  color={\"copyColor\"}\n                >\n                  {trancheDetails.description.long}\n                </Text>\n              </Flex>\n            </Flex>\n          </Flex>\n          <Flex bg={\"cardBgContrast\"} height={\"100%\"} flexDirection={\"column\"}>\n            <Flex mt={3} my={3} pl={2} width={1} flexDirection={\"column\"}>\n              {trancheDetails.features.map((feature, index) => (\n                <Flex\n                  mb={2}\n                  my={1}\n                  px={2}\n                  mt={[2, 1]}\n                  alignItems={\"center\"}\n                  flexDirection={\"row\"}\n                  key={`feature_${index}`}\n                >\n                  <Icon\n                    mr={2}\n                    ml={3}\n                    name={\"Done\"}\n                    color={\"tick\"}\n                    size={this.props.isMobile ? \"1.6em\" : \"1.8em\"}\n                  />\n                  <Text ml={[2, 1]} fontSize={[1, 2]} fontWeight={\"500\"}>\n                    {feature}\n                  </Text>\n                </Flex>\n              ))}\n            </Flex>\n            <Flex\n              height={\"100%\"}\n              alignItems={\"flex-end\"}\n              width={1}\n              justifyContent={\"center\"}\n            >\n              <RoundButton\n                buttonProps={{\n                  my: 3,\n                  width: 0.85,\n                  fontSize: 2,\n                  contrastColor: \"white\",\n                  mainColor: trancheDetails.color.hex\n                }}\n                handleClick={e =>\n                  this.props.selectTrancheType(trancheDetails.route)\n                }\n              >\n                {this.props.tokenConfig\n                  ? `Go to ${trancheDetails.name}`\n                  : `Enter the ${trancheDetails.name}`}\n              </RoundButton>\n            </Flex>\n          </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default Base;\n","import React, { Component } from \"react\";\nimport { Link, Flex, Text, Image } from \"rimble-ui\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\n\n//import DashboardCard from \"../DashboardCard/DashboardCard\";\n\nclass TrancheFlash extends Component {\n  // Utils\n  functionsUtil = null;\n\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n    const flashData = this.functionsUtil.getGlobalConfig([\"tranchflash\"]);\n    return (\n      <Flex\n        width={1}\n        mx={4}\n        flexDirection={[\"column\", \"row\"]}\n        justifyContent={\"center\"}\n      >\n        <Flex mx={2} my={[2, 4]} width={[1, 0.4]} flexDirection={\"column\"}>\n          <Flex justifyContent={\"left\"} my={3} width={[1, 0.7]}>\n            <Text\n              bold={\"true\"}\n              fontWeight={4}\n              lineHeight={1}\n              color={\"white\"}\n              fontSize={[5, 6]}\n              textAlign={\"left\"}\n            >\n              {flashData.subtitle}\n            </Text>\n          </Flex>\n          <Flex\n            mt={2}\n            width={1}\n            mb={[2, 3]}\n            justifyContent={\"left\"}\n          >\n            <Text\n              color={\"white\"}\n              textAlign={\"left\"}\n              fontWeight={2}\n              fontSize={2}\n            >\n              {flashData.desc}\n            </Text>\n          </Flex>\n          <Flex\n            mt={2}\n            mb={2}\n            width={1}\n            flexDirection={\"column\"}\n          >\n            {\n              flashData.questions.map( (question,index) => (\n                <Flex\n                  my={2}\n                  key={`question_${index}`}\n                  alignItems={\"flex-start\"}\n                >\n                  <Link\n                    fontSize={2}\n                    fontWeight={2}\n                    opacity={\"50%\"}\n                    color={\"white\"}\n                    textAlign={\"left\"}\n                    onClick={e =>\n                      this.props.openTooltipModal(question.desc, question.msg)\n                    }\n                  >\n                    <Flex\n                      flexDirection={'row'}\n                      alignItems={\"flex-start\"}\n                    >\n                      <Image\n                        mr={2}\n                        src={flashData.helpcircle}\n                      />\n                      {question.desc}\n                    </Flex>\n                  </Link>\n                </Flex>\n              ))\n            }\n          </Flex>\n        </Flex>\n        <Flex\n          mt={6}\n          width={0.2}\n          hidden={this.props.isMobile ? 1 : 0}\n          alignItems={\"flex-start\"}\n        >\n          <Image hidden={this.props.isMobile ? 1 : 0} src={flashData.arrows} />\n        </Flex>\n        <Flex ml={2} my={[3, 5]} width={[1, 0.4]} flexDirection={\"column\"}>\n          <Flex my={[1, 0]} flexDirection={\"row\"} alignItems={\"flex-start\"}>\n            <Image\n              my={[0, 2]}\n              width={[\"2.4em\", \"4.7em\"]}\n              src={this.functionsUtil.getGlobalConfig([\n                \"tranches\",\n                \"AA\",\n                \"bubble\"\n              ])}\n            />\n            <Text\n              mt={[0, 2]}\n              mx={2}\n              mb={[2, 1]}\n              color={\"white\"}\n              textAlign={\"left\"}\n              fontWeight={2}\n              fontSize={2}\n              dangerouslySetInnerHTML={{\n                __html: flashData.seniorinfo\n              }}\n            ></Text>\n          </Flex>\n          <Flex my={[1, 0]} flexDirection={\"row\"} alignItems={\"flex-start\"}>\n            <Image\n              my={[0, 2]}\n              ml={[0, 4]}\n              width={[\"2.4em\", \"4.7em\"]}\n              src={this.functionsUtil.getGlobalConfig([\n                \"tranches\",\n                \"BB\",\n                \"bubble\"\n              ])}\n            />\n            <Text\n              mt={[0, 2]}\n              mx={2}\n              mb={[2, 1]}\n              color={\"white\"}\n              textAlign={\"left\"}\n              fontWeight={2}\n              fontSize={2}\n              dangerouslySetInnerHTML={{\n                __html: flashData.juniorinfo\n              }}\n            ></Text>\n          </Flex>\n        </Flex>\n        {/*<Flex width={0.3}>\n          <Text>ABC</Text>\n        </Flex>*/}\n      </Flex>\n    );\n  }\n}\nexport default TrancheFlash;\n","import Title from \"../Title/Title\";\nimport { Flex, Text } from \"rimble-ui\";\nimport ExtLink from \"../ExtLink/ExtLink\";\nimport React, { Component } from \"react\";\nimport styles from \"./TrancheWelcome.module.scss\";\nimport TrancheBox from \"../TrancheBox/TrancheBox\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\nimport TrancheFlash from \"../TrancheFlash/TrancheFlash\";\n\nclass TrancheWelcome extends Component {\n  // Utils\n  functionsUtil = null;\n\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n    const tranchesDetails = this.functionsUtil.getGlobalConfig([\"tranches\"]);\n    return (\n      <Flex width={1} aligItems={\"center\"} justifyContent={\"center\"}>\n        <Flex\n          mb={3}\n          width={1}\n          maxWidth={8}\n          aligItems={\"center\"}\n          flexDirection={\"column\"}\n          justifyContent={\"space-between\"}\n        >\n          {!this.props.tokenConfig ? (\n            <>\n              <Title fontSize={[5, 6]}>Perpetual Yield Tranches</Title>\n              <Flex\n                width={1}\n                mb={[3, 4]}\n                mx={\"auto\"}\n                aligItems={\"center\"}\n                justifyContent={\"center\"}\n              ></Flex>\n              <Flex\n                border={1}\n                borderRadius={2}\n                borderColor={\"transparent\"}\n                backgroundColor={\"newblue\"}\n                className={[\n                  styles.trancheFlash,\n                  this.props.isMobile ? styles.mobile : null\n                ]}\n              >\n                <TrancheFlash {...this.props}></TrancheFlash>\n              </Flex>\n            </>\n          ) : (\n            <Title\n              mb={3}\n              fontWeight={2}\n              fontSize={[3, 4]}\n              color={\"copyColor\"}\n              textAlign={\"center\"}\n            >\n              Select your preferred Tranche\n            </Title>\n          )}\n          <Flex my={3} mx={0} justifyContent={\"center\"}>\n            <Flex\n              width={1}\n              flexDirection={[\"column\", \"row\"]}\n              justifyContent={\"space-between\"}\n            >\n              {Object.keys(tranchesDetails).map((trancheType, index) => (\n                <TrancheBox\n                  {...this.props}\n                  key={`tranche_${index}`}\n                  tokenConfig={this.props.tokenConfig}\n                  trancheDetails={tranchesDetails[trancheType]}\n                />\n              ))}\n            </Flex>\n          </Flex>\n          <Flex\n            mt={3}\n            width={1}\n            px={[0,5]}\n            justifyContent={\"center\"}\n          >\n            <Text\n              fontSize={[0,1]}\n              color={'statValue'}\n              textAlign={\"center\"}\n            >\n              If you're still unsure in which Tranche to pick, reach out to us on our <ExtLink fontSize={[0,1]} href={this.functionsUtil.getGlobalConfig(['forumURL'])}>Forum</ExtLink>, <ExtLink fontSize={[0,1]} href={this.functionsUtil.getGlobalConfig(['discordURL'])}>Discord</ExtLink>, <ExtLink fontSize={[0,1]} href={this.functionsUtil.getGlobalConfig(['telegramURL'])}>Telegram</ExtLink> or <ExtLink fontSize={[0,1]} href={this.functionsUtil.getGlobalConfig(['twitterURL'])}>Twitter</ExtLink>.<br />The team and the community would be happy to help!\n            </Text>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TrancheWelcome;\n","import { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass GenericPieChart extends Component {\n  state = {\n    chartProps:null,\n    selectedSlice:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    if (mobileChanged){\n      this.setStateSafe({\n        chartProps:null,\n        selectedSlice:null,\n      },() => {\n        this.loadData();\n      });\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async loadData(){\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth: 0,\n      cornerRadius:0,\n      motionDamping:15,\n      innerRadius: 0.65,\n      motionStiffness:90,\n      colors:d => d.color,\n      onMouseEnter:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:data\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:null\n        });\n      },\n      tooltipFormat: this.props.tooltipFormat || (v => v),\n      sliceLabel: this.props.sliceLabel || (d => d.value),\n      radialLabel: d => {\n        return null;\n      },\n      theme:{\n        tooltip: {\n          container: this.props.inline ? {\n            background: this.props.theme.colors.cardBg\n          } : {\n            display: 'none',\n          }\n        },\n        labels:{\n          text:{\n            fontWeight:600,\n            fontSize:this.props.isMobile ? 13 : 15,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      enableRadialLabels:false,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      enableSlicesLabels: !this.props.inline,\n      radialLabelsLinkColor:{ from: 'color' },\n      margin: this.props.margin || {top:0,right:0,bottom:0,left:0},\n      borderColor:{ from: 'color', modifiers: [ [ 'darker', 0.2 ] ] },\n    };\n\n    if (this.props.showLegend){\n      chartProps.legends = [\n        {\n          itemWidth: 60,\n          itemHeight: 18,\n          translateY: this.props.isMobile ? 25 : 50,\n          symbolSize: 10,\n          anchor: 'bottom',\n          direction: 'row',\n          itemTextColor: this.props.theme.colors.legend,\n          symbolShape: 'circle',\n          effects: [\n            {\n              on: 'hover',\n              style: {\n                itemTextColor: '#000'\n              }\n            }\n          ]\n        }\n      ];\n    }\n\n    this.setStateSafe({\n      chartProps\n    });\n  }\n\n  render() {\n\n    return (\n      <Flex\n        width={1}\n        position={'relative'}\n        alignItems={'center'}\n        justifyContent={'center'}\n      >\n        {\n          this.state.chartProps && !this.props.inline &&\n            <Flex\n              zIndex={0}\n              top={['23%','25%']}\n              left={['20%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              position={'absolute'}\n              width={['60%','46%']}\n              height={['53%','46%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                this.state.selectedSlice ? (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={this.state.selectedSlice.image}\n                    />\n                    <SmartNumber\n                      fontSize={[3,4]}\n                      decimals={3}\n                      fontWeight={4}\n                      maxPrecision={5}\n                      number={this.state.selectedSlice.value}\n                    />\n                    <Text\n                      fontSize={[1,2]}\n                      fontWeight={3}\n                      color={'cellTitle'}\n                    >\n                      {this.state.selectedSlice.label}\n                    </Text>\n                  </Flex>\n                ) : (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      height={'2.2em'}\n                      src={this.props.defaultImage}\n                    />\n                    <Text\n                      fontSize={[3,4]}\n                      fontWeight={[3,4]}\n                    >\n                      {this.props.defaultValue}\n                    </Text>\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      {this.props.defaultLabel}\n                    </Text>\n                  </Flex>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          showLoader={true}\n          {...this.props}\n          {...this.state.chartProps}\n          data={this.props.chartData}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default GenericPieChart;","import CountUp from 'react-countup';\nimport { Box, Loader } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TotalBalanceCounter extends Component {\n\n  state = {\n    counterEnd:null,\n    counterStart:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalEarnings();\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const styleChanged = JSON.stringify(prevProps.counterStyle) !== JSON.stringify(this.props.counterStyle);\n    if (styleChanged || themeModeChanged || mobileChanged){\n      const oldState = Object.assign({},this.state);\n      this.setState({\n        counterEnd:null,\n        counterStart:null\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  async loadTotalEarnings(){\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized){\n      return true;\n    }\n\n    const availableTokens = this.props.availableTokens || {};\n    const portfolio = this.props.portfolio || await this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account);\n\n    const counterStart = portfolio.totalAmountLent.plus(portfolio.totalEarnings);\n    const counterEnd = counterStart.plus(counterStart.times(portfolio.avgAPY.div(100)));\n\n    this.setState({\n      counterEnd,\n      counterStart\n    });\n  }\n\n  render() {\n\n    const counterStyle = {\n      lineHeight:1,\n      color:this.props.theme.colors.copyColor,\n      fontFamily:this.props.theme.fonts.counter,\n      fontWeight: this.props.isMobile ? 600 : 700,\n      fontSize:this.props.isMobile ? '21px' : '1.7em',\n    };\n\n    // Replace props\n    if (this.props.counterStyle && Object.keys(this.props.counterStyle).length){\n      Object.keys(this.props.counterStyle).forEach(p => {\n        counterStyle[p] = this.props.counterStyle[p];\n      });\n    }\n\n    const decimals = this.props.decimals || 8;\n\n    return this.state.counterStart && this.state.counterEnd ? (\n      <Box\n        width={1}\n      >\n        <CountUp\n          delay={0}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          decimals={decimals}\n          duration={31536000}\n          end={parseFloat(this.state.counterEnd)}\n          start={parseFloat(this.state.counterStart)}\n          formattingFn={ n => '$ '+this.functionsUtil.formatMoney(n,decimals) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              ref={countUpRef}\n              style={counterStyle}\n            />\n          )}\n        </CountUp>\n      </Box>\n    ) : (\n      <Loader size={\"20px\"} />\n    );\n  }\n}\n\nexport default TotalBalanceCounter;\n","import CountUp from 'react-countup';\nimport { Flex, Loader } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TotalEarningsCounter extends Component {\n\n  state = {\n    earningsEnd:null,\n    earningsStart:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalEarnings();\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const styleChanged = JSON.stringify(prevProps.counterStyle) !== JSON.stringify(this.props.counterStyle);\n    if (styleChanged || themeModeChanged || mobileChanged){\n      const oldState = Object.assign({},this.state);\n      this.setState({\n        earningsEnd:null,\n        earningsStart:null\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  async loadTotalEarnings(){\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized){\n      return true;\n    }\n\n    const availableTokens = this.props.availableTokens || {};\n    const portfolio = this.props.portfolio || await this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account);\n\n    const earningsStart = portfolio.totalEarnings;\n    const earningsEnd = earningsStart.plus(portfolio.totalAmountLent.times(portfolio.avgAPY.div(100)));\n\n    this.setState({\n      earningsEnd,\n      earningsStart\n    });\n  }\n\n  render() {\n\n    const counterStyle = {\n      lineHeight:1,\n      color:this.props.theme.colors.copyColor,\n      fontFamily:this.props.theme.fonts.counter,\n      fontWeight: this.props.isMobile ? 600 : 700,\n      fontSize:this.props.isMobile ? '21px' : '1.7em',\n    };\n\n    // Replace props\n    if (this.props.counterStyle && Object.keys(this.props.counterStyle).length){\n      Object.keys(this.props.counterStyle).forEach(p => {\n        counterStyle[p] = this.props.counterStyle[p];\n      });\n    }\n\n    const unit = this.props.unit || '$ ';\n    const decimals = this.props.decimals || 8;\n\n    return this.state.earningsStart && this.state.earningsEnd ? (\n      <Flex\n      >\n        <CountUp\n          delay={0}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          decimals={decimals}\n          duration={31536000}\n          end={parseFloat(this.state.earningsEnd)}\n          start={parseFloat(this.state.earningsStart)}\n          formattingFn={ n => unit+this.functionsUtil.formatMoney(n,decimals) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              ref={countUpRef}\n              style={counterStyle}\n            />\n          )}\n        </CountUp>\n      </Flex>\n    ) : (\n      <Loader size={\"20px\"} />\n    );\n  }\n}\n\nexport default TotalEarningsCounter;\n","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport Breadcrumb from '../Breadcrumb/Breadcrumb';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport TranchePage from '../TranchePage/TranchePage';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TranchesList from '../TranchesList/TranchesList';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TrancheWelcome from '../TrancheWelcome/TrancheWelcome';\nimport GenericPieChart from '../GenericPieChart/GenericPieChart';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport TotalBalanceCounter from '../TotalBalanceCounter/TotalBalanceCounter';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\nimport { Box, Flex, Heading, Loader, Text, Icon, Tooltip, Image } from \"rimble-ui\";\nimport PortfolioEquityTranches from '../PortfolioEquityTranches/PortfolioEquityTranches';\n\nclass Tranches extends Component {\n\n  state = {\n    portfolio:null,\n    transactions:[],\n    tokenConfig:null,\n    trancheType:null,\n    trancheRoute:null,\n    selectedToken:null,\n    userHasFunds:false,\n    depositedTokens:[],\n    trancheDetails:null,\n    useTrancheType:false,\n    portfolioLoaded:false,\n    componentLoaded:false,\n    selectedProtocol:null,\n    allocationChartData:null,\n    portfolioEquityQuickSelection:'week'\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n\n    this.loadPortfolio().then( () => {\n      const componentLoaded = true;\n      const trancheRoute = this.props.urlParams.param1;\n      const tranchesDetails = this.functionsUtil.getGlobalConfig(['tranches']);\n      const trancheDetails = Object.values(tranchesDetails).find( t => t.route === trancheRoute );\n\n      if (trancheDetails !== undefined){\n        const trancheType = trancheDetails.type;\n        const useTrancheType = !this.state.userHasFunds;\n        const selectedToken = this.props.urlParams.param3;\n        const selectedProtocol = this.props.urlParams.param2;\n        const tokenConfig = selectedProtocol ? (this.props.availableTranches[selectedProtocol] && this.props.availableTranches[selectedProtocol][selectedToken] ? this.props.availableTranches[selectedProtocol][selectedToken] : null) : null;\n\n        if (this.state.userHasFunds && !tokenConfig){\n          return this.props.goToSection(this.props.selectedSection.route);\n        }\n\n        this.setState({\n          trancheType,\n          tokenConfig,\n          trancheRoute,\n          selectedToken,\n          trancheDetails,\n          useTrancheType,\n          selectedProtocol\n        });\n      } else {\n        const selectedToken = this.props.urlParams.param2;\n        const selectedProtocol = this.props.urlParams.param1;\n        const tokenConfig = this.props.availableTranches[selectedProtocol] && this.props.availableTranches[selectedProtocol][selectedToken] ? this.props.availableTranches[selectedProtocol][selectedToken] : null;\n        if (tokenConfig){\n          this.setState({\n            tokenConfig,\n            selectedToken,\n            selectedProtocol\n          });\n        }\n      }\n\n      this.setState({\n        componentLoaded\n      });\n    });\n  }\n\n  async componentDidMount(){\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const availableTranchesChanged = JSON.stringify(prevProps.availableTranches) !== JSON.stringify(this.props.availableTranches);\n    if (accountChanged || availableTranchesChanged){\n      this.setState({\n        portfolioLoaded:false\n      },() => {\n        this.loadPortfolio();\n      });\n    }\n  }\n\n  async loadPortfolio(){\n    if (!this.props.account){\n      const userHasFunds = false;\n      const portfolioLoaded = true;\n      this.setState({\n        userHasFunds,\n        portfolioLoaded\n      });\n      return false;\n    }\n\n    const portfolio = await this.functionsUtil.getAccountPortfolioTranches(this.props.availableTranches,this.props.account);\n    // console.log('loadPortfolio',portfolio);\n\n    if (portfolio){\n      const portfolioLoaded = true;\n      const tranchesConfig = this.functionsUtil.getGlobalConfig(['tranches']);\n\n      const tranchesTokens = [];\n      const tranchesBalances = [];\n      portfolio.tranchesBalance.forEach( trancheInfo => {\n        if (!tranchesBalances[trancheInfo.tranche]){\n          tranchesBalances[trancheInfo.tranche] = {\n            weight:this.functionsUtil.BNify(0),\n            balance:this.functionsUtil.BNify(0)\n          };\n        }\n        tranchesBalances[trancheInfo.tranche].weight = tranchesBalances[trancheInfo.tranche].weight.plus(trancheInfo.trancheWeight);\n        tranchesBalances[trancheInfo.tranche].balance = tranchesBalances[trancheInfo.tranche].balance.plus(trancheInfo.tokenBalance);\n\n        if (!tranchesTokens[trancheInfo.token]){\n          tranchesTokens[trancheInfo.token] = this.functionsUtil.BNify(0);\n        }\n        tranchesTokens[trancheInfo.token] = tranchesTokens[trancheInfo.token].plus(trancheInfo.tokenBalance);\n      });\n\n      const depositedTokens = Object.keys(tranchesTokens);\n\n      const portfolioDonutData = Object.keys(tranchesTokens).map( token => {\n        const balanceValue = parseFloat(tranchesTokens[token].toFixed(4));\n        const tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',token]);\n        return {\n          id:token,\n          name:token,\n          label:token,\n          value:balanceValue,\n          description: `$ ${balanceValue} in ${token}`,\n          color:'hsl('+tokenConfig.color.hsl.join(',')+')',\n          image:tokenConfig.icon || `images/tokens/${token}.svg`,\n        };\n      });\n\n      const allocationChartData = Object.keys(tranchesBalances).map((trancheName,i)=>{\n        const trancheConfig = tranchesConfig[trancheName];\n        const balanceInfo = tranchesBalances[trancheName];\n        const weightValue = parseFloat(balanceInfo.weight.times(100).toFixed(2));\n        return {\n          id:trancheName,\n          name:trancheName,\n          value:weightValue,\n          label: trancheConfig.name,\n          color:'hsl('+trancheConfig.color.hsl.join(',')+')',\n          description: `$ ${balanceInfo.balance.toFixed(2)} in ${trancheConfig.name}`\n        };\n      });\n\n      // console.log('allocationChartData',allocationChartData,'portfolioDonutData',portfolioDonutData);\n      \n      const transactions = portfolio.transactions;\n      const userHasFunds = portfolio && this.functionsUtil.BNify(portfolio.totalBalance).gt(0);\n\n      this.setState({\n        portfolio,\n        userHasFunds,\n        transactions,\n        portfolioLoaded,\n        depositedTokens,\n        portfolioDonutData,\n        allocationChartData\n      });\n    }\n  }\n\n  selectTrancheType(trancheRoute){\n    let route = `${this.props.selectedSection.route}/${trancheRoute}`;\n    const tokenConfig = this.props.availableTranches[this.state.selectedProtocol] && this.props.availableTranches[this.state.selectedProtocol][this.state.selectedToken] ? this.props.availableTranches[this.state.selectedProtocol][this.state.selectedToken] : null;\n    if (tokenConfig){\n      route += `/${this.state.selectedProtocol}/${this.state.selectedToken}`;\n    }\n    this.props.goToSection(route);\n  }\n\n  selectTranche(protocol,token){\n    const tokenConfig = this.props.availableTranches[protocol] && this.props.availableTranches[protocol][token] ? this.props.availableTranches[protocol][token] : null;\n    if (tokenConfig){\n      let route = `${this.props.selectedSection.route}`;\n      if (this.state.trancheRoute){\n        route += `/${this.state.trancheRoute}`;\n      }\n      route += `/${protocol}/${token}`;\n\n      this.props.goToSection(route);\n    }\n  }\n\n  setPortfolioEquityQuickSelection(portfolioEquityQuickSelection){\n    this.setState({\n      portfolioEquityQuickSelection\n    });\n  }\n\n  goBack(){\n    if (this.state.tokenConfig && this.state.trancheType){\n      if (!this.state.userHasFunds){\n        this.props.goToSection(this.props.selectedSection.route+'/'+this.state.trancheDetails.route);\n      } else {\n        this.props.goToSection(this.props.selectedSection.route+'/'+this.state.selectedProtocol+'/'+this.state.selectedToken);\n      }\n    }/* else if (this.state.trancheType){\n      this.props.goToSection(this.props.selectedSection.route);\n    } */else {\n      this.props.goToSection(this.props.selectedSection.route);\n    }\n  }\n\n  render() {\n\n    const pathLink = [];\n    const breadcrumbPath = [];\n    if (this.state.trancheType){\n      breadcrumbPath.push(this.functionsUtil.capitalize(this.state.trancheDetails.baseName));\n      if (this.state.tokenConfig){\n        if (!this.state.userHasFunds){\n          pathLink.push(this.props.selectedSection.route+'/'+this.state.trancheDetails.route);\n        } else if (this.state.tokenConfig){\n          pathLink.push(this.props.selectedSection.route+'/'+this.state.selectedProtocol+'/'+this.state.selectedToken);\n        }\n      }\n    }\n    if (this.state.selectedProtocol){\n      breadcrumbPath.push(this.functionsUtil.getGlobalConfig(['stats','protocols',this.state.selectedProtocol,'label']));\n    }\n    if (this.state.selectedToken){\n      breadcrumbPath.push(this.state.selectedToken);\n    }\n\n    return (\n      <Box\n        width={1}\n      >\n        {\n          breadcrumbPath.length>0 && (\n            <Flex\n              width={1}\n              mb={[2,0]}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'flex-start'}\n            >\n              <Flex\n                width={0.5}\n              >\n                <Breadcrumb\n                  {...this.props}\n                  text={'Tranches'}\n                  pathLink={pathLink}\n                  path={breadcrumbPath}\n                  isMobile={this.props.isMobile}\n                  handleClick={this.goBack.bind(this)}\n                />\n              </Flex>\n              <Flex\n                width={0.5}\n                justifyContent={'flex-end'}\n              >\n                \n              </Flex>\n            </Flex>\n          )\n        }\n        {\n          !this.state.componentLoaded ? (\n            <FlexLoader\n              textProps={{\n                textSize:4,\n                fontWeight:2\n              }}\n              loaderProps={{\n                mb:3,\n                size:'40px'\n              }}\n              flexProps={{\n                my:3,\n                minHeight:'60vh',\n                flexDirection:'column'\n              }}\n              text={'Loading Portfolio...'}\n            />\n          ) : this.state.tokenConfig ? (\n            <TranchePage\n              {...this.props}\n              portfolio={this.state.portfolio}\n              trancheType={this.state.trancheType}\n              tokenConfig={this.state.tokenConfig}\n              userHasFunds={this.state.userHasFunds}\n              selectedToken={this.state.selectedToken}\n              trancheDetails={this.state.trancheDetails}\n              selectedProtocol={this.state.selectedProtocol}\n              availableTranches={this.props.availableTranches}\n              selectTrancheType={this.selectTrancheType.bind(this)}\n            />\n          ) : !this.state.trancheType && !this.state.userHasFunds ? (\n            <TrancheWelcome\n              {...this.props}\n              selectTrancheType={this.selectTrancheType.bind(this)}\n            />\n          ) : (\n            <Box\n              width={1}\n            >\n              {this.state.useTrancheType ? (\n                <Box\n                  width={1}\n                >\n                  <Flex\n                    mb={3}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  > \n                    {\n                    /*\n                      <Icon\n                        mr={2}\n                        name={this.state.trancheDetails.icon}\n                        color={this.state.trancheDetails.color.hex}\n                        size={this.props.isMobile ? '1.8em' : '2.2em'}\n                      />\n                    */\n                    }\n                    <Image\n                      mr={2}\n                      src={this.state.trancheDetails.image}\n                      size={this.props.isMobile ? '1.8em' : '2.2em'}\n                    />\n                    <Title\n                    >\n                      {this.functionsUtil.capitalize(this.state.trancheDetails.baseName)} Tranches\n                    </Title>\n                  </Flex>\n                  <Flex\n                    mb={3}\n                    mx={'auto'}\n                    width={[1,0.8]}\n                    aligItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      fontWeight={2}\n                      fontSize={[1,2]}\n                      textAlign={'center'}\n                    >\n                      {this.functionsUtil.getGlobalConfig(['tranches',this.state.trancheType,'description','long'])}\n                    </Text>\n                  </Flex>\n                </Box>\n              ) : (\n                <Title\n                  mb={3}\n                >\n                  Perpetual Yield Tranches\n                </Title>\n              )}\n              {\n                this.state.portfolioLoaded && this.state.userHasFunds && (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      mb={3}\n                      width={1}\n                      mt={[2,0]}\n                      alignItems={'center'}\n                      justifyContent={'center'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio.avgAPY ? (\n                                <Text\n                                  lineHeight={1}\n                                  fontWeight={[3,4]}\n                                  color={'copyColor'}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: this.state.portfolio.avgAPY.toFixed(2)+'<small>%</small>' }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Avg APY\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','apyLong'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio ? (\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <TotalBalanceCounter\n                                    decimals={5}\n                                    {...this.props}\n                                    portfolio={this.state.portfolio}\n                                  />\n                                  <Flex\n                                    width={1}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'center'}\n                                  >\n                                    <Flex\n                                      width={0.45}\n                                      alignItems={'center'}\n                                      justifyContent={'flex-end'}\n                                    >\n                                      <Text\n                                        fontSize={1}\n                                        fontWeight={3}\n                                        fontFamily={this.props.theme.fonts.counter}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >\n                                        +{this.state.portfolio.totalEarningsPerc.toFixed(2)}%\n                                      </Text>\n                                    </Flex>\n                                    <Text\n                                      mx={1}\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      fontFamily={this.props.theme.fonts.counter}\n                                      color={this.props.theme.colors.transactions.status.completed}\n                                    >|</Text>\n                                    <Flex\n                                      width={0.45}\n                                      alignItems={'center'}\n                                      justifyContent={'flex-start'}\n                                    >\n                                      <TotalEarningsCounter\n                                        {...this.props}\n                                        unit={'+$'}\n                                        decimals={5}\n                                        counterStyle={{\n                                          fontSize:14,\n                                          fontWeight:600,\n                                          color:this.props.theme.colors.transactions.status.completed\n                                        }}\n                                        portfolio={this.state.portfolio}\n                                      />\n                                    </Flex>\n                                  </Flex>\n                                </Flex>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Total Balance\n                              </Text>\n                              {\n                                /*\n                                this.state.govTokensTotalBalance && (\n                                  <Tooltip\n                                    placement={'bottom'}\n                                    message={'Total Balance does not include accrued governance tokens: '+(this.state.govTokensTotalBalance && this.state.govTokensTotalBalance.gt(0) ? ` (${this.state.govTokensTotalBalanceTooltip.join(' / ')})` : '')}\n                                  >\n                                    <Icon\n                                      ml={2}\n                                      name={\"Info\"}\n                                      size={'1em'}\n                                      color={'cellTitle'}\n                                    />\n                                  </Tooltip>\n                                )\n                                */\n                              }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.allocationChartData ? (\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  id={'allocationChart'}\n                                  height={['55px','59px']}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <GenericPieChart\n                                    {...this.props}\n                                    inline={true}\n                                    showLoader={false}\n                                    tooltipFormat={v => v+'%'}\n                                    sliceLabel={d => d.value+'%'}\n                                    width={ this.props.isMobile ? 55 : 59 }\n                                    height={ this.props.isMobile ? 55 : 59 }\n                                    chartData={this.state.allocationChartData}\n                                  />\n                                </Flex>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Portfolio Distribution\n                              </Text>\n                              {\n                                /*\n                                <Tooltip\n                                  placement={'bottom'}\n                                  message={this.functionsUtil.getGlobalConfig(['messages','riskScoreShort'])}\n                                >\n                                  <Icon\n                                    ml={2}\n                                    name={\"Info\"}\n                                    size={'1em'}\n                                    color={'cellTitle'}\n                                  />\n                                </Tooltip>\n                                */\n                              }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={3}\n                      width={1}\n                      id={\"portfolio-charts\"}\n                      justifyContent={'space-between'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        mb={[3,0]}\n                        width={[1,0.328]}\n                        flexDirection={'column'}\n                        id={\"portfolio-composition\"}\n                      >\n                        <DashboardCard\n                          title={'Composition'}\n                          titleProps={ !this.props.isMobile ? {\n                            style:{\n                              minHeight:'39px'\n                            }\n                          } : null}\n                        >\n                          <GenericPieChart\n                            {...this.props}\n                            showLegend={true}\n                            showLoader={false}\n                            sliceLabel={d => d.value}\n                            defaultLabel={'Total Funds'}\n                            parentId={'portfolio-composition'}\n                            chartData={this.state.portfolioDonutData}\n                            defaultImage={this.props.selectedSection.image}\n                            defaultValue={`$ ${this.functionsUtil.formatMoney(parseFloat(this.state.portfolio.totalBalance),4)}`}\n                            margin={this.props.isMobile ? { top: 15, right: 25, bottom: 30, left: 25 } : { top: 30, right: 50, bottom: 60, left: 50 }}\n                          />\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,0.666]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard>\n                          <Flex\n                            pt={[3,4]}\n                            px={[3,4]}\n                            aligItems={'center'}\n                            flexDirection={['column','row']}\n                          >\n                            <Flex\n                              width={[1,0.7]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-start'}\n                            >\n                              <Title\n                                fontWeight={4}\n                                fontSize={[2,3]}\n                                textAlign={'left'}\n                              >\n                                Performance\n                              </Title>\n                            </Flex>\n                            <Flex\n                              mt={[2,0]}\n                              width={[1,0.3]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-end'}\n                            >\n                              <GenericSelector\n                                innerProps={{\n                                  p:0,\n                                  px:1\n                                }}\n                                defaultValue={\n                                  {value:'week',label:'1W'}\n                                }\n                                name={'performance-time'}\n                                options={[\n                                  {value:'week',label:'1W'},\n                                  {value:'month',label:'1M'},\n                                  {value:'month3',label:'3M'},\n                                  {value:'month6',label:'6M'},\n                                  {value:'all',label:'MAX'},\n                                ]}\n                                onChange={ v => this.setPortfolioEquityQuickSelection(v) }\n                              />\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            ml={[0,3]}\n                            aligItems={'center'}\n                            justifyContent={'center'}\n                            id={\"portfolio-performance\"}\n                          >\n                            <PortfolioEquityTranches\n                              {...this.props}\n                              enabledTokens={[]}\n                              parentId={'portfolio-performance'}\n                              parentIdHeight={'portfolio-composition'}\n                              transactionsList={this.state.transactions}\n                              quickDateSelection={this.state.portfolioEquityQuickSelection}\n                              frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n                            />\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                )\n              }\n              <Flex\n                width={1}\n                mb={[3,4]}\n                id={\"migrate-assets\"}\n                flexDirection={'column'}\n              >\n                <Flex\n                  pb={2}\n                  width={1}\n                  mb={[2,3]}\n                  borderColor={'divider'}\n                  borderBottom={'1px solid transparent'}\n                >\n                  <Heading.h4\n                    fontSize={[2,4]}\n                    fontWeight={[3,4]}\n                  >\n                    Available Tranches\n                  </Heading.h4>\n                </Flex>\n                <TranchesList\n                  enabledProtocols={[]}\n                  trancheType={this.state.trancheType}\n                  availableTranches={this.props.availableTranches}\n                  handleClick={(props) => this.selectTranche(props.protocol,props.token)}\n                  cols={[\n                    {\n                      title:'PROTOCOL',\n                      props:{\n                        width:[0.25,0.15]\n                      },\n                      fields:[\n                        {\n                          name:'protocolIcon',\n                          props:{\n                            mr:2,\n                            height:['1.4em','2em']\n                          }\n                        },\n                        {\n                          name:'protocolName'\n                        }\n                      ]\n                    },\n                    {\n                      title:'TOKEN',\n                      props:{\n                        width:[0.16, 0.12],\n                      },\n                      fields:[\n                        {\n                          name:'tokenIcon',\n                          props:{\n                            mr:2,\n                            height:['1.4em','2em']\n                          }\n                        },\n                        {\n                          mobile:false,\n                          name:'tokenName'\n                        }\n                      ]\n                    },\n                    /*\n                    {\n                      title:'TYPE',\n                      props:{\n                        width:[0.29,0.13],\n                      },\n                      fields:[\n                        {\n                          name:'trancheTypeIcon',\n                          props:{\n                            flexProps:{\n                              mr:2\n                            },\n                            size:'1.4em'\n                          }\n                        },\n                        {\n                          name:'trancheType'\n                        }\n                      ],\n                      visible:this.state.useTrancheType\n                    },\n                    */\n                    {\n                      title:'POOL',\n                      props:{\n                        width:[0.21, 0.14],\n                      },\n                      fields:[\n                        {\n                          name:this.state.useTrancheType ? `${this.state.trancheDetails.baseName}Pool` : 'pool',\n                          props:{\n                            decimals:2\n                          }\n                        }\n                      ]\n                    },\n                    {\n                      title:this.state.useTrancheType ? 'APY' : 'SENIOR APY',\n                      visible:!this.state.useTrancheType || this.state.trancheType === 'AA',\n                      props:{\n                        width:[this.state.useTrancheType ? 0.16 : 0.29,this.state.useTrancheType ? 0.12 : 0.15],\n                      },\n                      parentProps:{\n                        flexDirection:'column',\n                        alignItems:'flex-start',\n                      },\n                      fields:[\n                        {\n                          name:'seniorApy',\n                          showTooltip:true\n                        },\n                      ],\n                    },\n                    {\n                      title:this.state.useTrancheType ? 'APY' : 'JUNIOR APY',\n                      visible:!this.state.useTrancheType || this.state.trancheType === 'BB',\n                      props:{\n                        width:[this.state.useTrancheType ? 0.16 : 0.29,this.state.useTrancheType ? 0.12 : 0.15],\n                      },\n                      parentProps:{\n                        flexDirection:'column',\n                        alignItems:'flex-start',\n                      },\n                      fields:[\n                        {\n                          name:'juniorApy',\n                          showTooltip:true\n                        },\n                      ],\n                    },\n                    {\n                      mobile:false,\n                      title:'AUTO-FARMING',\n                      props:{\n                        width:[0.25,this.state.useTrancheType ? 0.18 : 0.15],\n                      },\n                      fields:[\n                        {\n                          name:'autoFarming'\n                        }\n                      ]\n                    },\n                    {\n                      mobile:false,\n                      title:'STAKING REWARDS',\n                      props:{\n                        width:[0.25,this.state.useTrancheType ? 0.18 : 0.13],\n                      },\n                      fields:[\n                        {\n                          name:'stakingRewards'\n                        }\n                      ]\n                    },\n                    {\n                      mobile:true,\n                      title:'TOKENS',\n                      props:{\n                        width:[0.17],\n                      },\n                      fields:[\n                        {\n                          name:'govTokens'\n                        }\n                      ]\n                    },\n                    {\n                      title:'',\n                      mobile:false,\n                      props:{\n                        width:[0.29, 0.16],\n                      },\n                      parentProps:{\n                        width:1\n                      },\n                      fields:[\n                        {\n                          name:'button',\n                          label: 'Deposit',\n                          props:{\n                            width:1,\n                            fontSize:3,\n                            fontWeight:3,\n                            height:'45px',\n                            borderRadius:4,\n                            boxShadow:null,\n                            mainColor:'deposit',\n                            size: this.props.isMobile ? 'small' : 'medium',\n                            handleClick:(props) => this.selectTranche(props.protocol,props.token)\n                          }\n                        }\n                      ]\n                    }\n                  ]}\n                  {...this.props}\n                />\n              </Flex>\n              {\n                this.props.account && this.state.userHasFunds && \n                  <Flex\n                    mb={[3,4]}\n                    width={1}\n                    id={'transactions'}\n                    flexDirection={'column'}\n                  >\n                    <Title mb={[3,4]}>Transactions</Title>\n                    <TransactionsList\n                      {...this.props}\n                      enabledTokens={this.state.depositedTokens}\n                      transactionsList={this.state.transactions}\n                      availableActions={this.state.transactions.reduce( (availableActions,t) => {\n                        availableActions[t.action.toLowerCase()] = t.action;\n                        return availableActions;\n                      },{})}\n                      cols={[\n                        {\n                          title: this.props.isMobile ? '' : 'HASH',\n                          props:{\n                            width:[0.13,0.18]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              name:'hash',\n                              mobile:false\n                            }\n                          ]\n                        },\n                        {\n                          title:'ACTION',\n                          mobile:false,\n                          props:{\n                            width:0.12,\n                          },\n                          fields:[\n                            {\n                              name:'action'\n                            }\n                          ]\n                        },\n                        {\n                          title:'DATE',\n                          props:{\n                            width:[0.27,0.15],\n                          },\n                          fields:[\n                            {\n                              name:'date'\n                            }\n                          ]\n                        },\n                        {\n                          mobile:false,\n                          title:'STATUS',\n                          props:{\n                            width:[0.18,0.16],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'statusIcon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'status'\n                            }\n                          ]\n                        },\n                        {\n                          title:'AMOUNT',\n                          props:{\n                            width:[0.23,0.11],\n                          },\n                          fields:[\n                            {\n                              name:'amount'\n                            },\n                          ]\n                        },\n                        {\n                          title:'PROTOCOL',\n                          props:{\n                            width:[0.21, 0.14],\n                          },\n                          fields:[\n                            {\n                              type:'image',\n                              name:'custom',\n                              path:['protocolIcon'],\n                              props:{\n                                mr:2,\n                                height:['1.4em','2em']\n                              }\n                            },\n                            {\n                              type:'text',\n                              mobile:false,\n                              name:'custom',\n                              path:['protocol']\n                            }\n                          ]\n                        },\n                        {\n                          title:'ASSET',\n                          props:{\n                            width:[0.16,0.14],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'tokenIcon',\n                              props:{\n                                mr:[0,2],\n                                height:['1.4em','1.6em']\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'tokenName'\n                            },\n                          ]\n                        },\n                      ]}\n                    />\n                  </Flex>\n              }\n            </Box>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default Tranches;\n","import React, { Component } from 'react';\nimport { Flex, Box, Text, Button } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\n\nclass TokenSwap extends Component {\n\n  state = {\n    tokenConfig:null,\n    selectedFromToken:null,\n    selectedDestToken:null,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async loadKyberWidget(){\n\n    if (!this.state.selectedFromToken || !this.state.selectedDestToken){\n      return false;\n    }\n\n    const provider = 'kyberSwap';\n    const providerInfo = this.functionsUtil.getGlobalConfig(['payments','providers',provider]);\n    if (providerInfo.enabled && providerInfo.remoteResources){\n\n      const globalConfigs = this.functionsUtil.getGlobalConfigs();\n      const remoteResources = providerInfo.remoteResources;\n\n      Object.keys(remoteResources).forEach((url,j) => {\n\n        const resourceType = url.split('.').pop().toLowerCase();\n\n        switch (resourceType){\n          case 'js':\n            const scriptID = `script_${provider}_${j}_${this.state.selectedFromToken}_${this.state.selectedDestToken}`;\n\n            if (!document.getElementById(scriptID)){\n              const script = document.createElement(\"script\");\n              const remoteResourceParams = remoteResources[url];\n              const callback = remoteResourceParams && remoteResourceParams.callback ? remoteResourceParams.callback : null;\n              const precall = remoteResourceParams && remoteResourceParams.precall ? remoteResourceParams.precall : null;\n\n              if (precall && typeof precall === 'function'){\n                const precallProps = {\n                  baseToken:this.state.selectedFromToken,\n                  selectedToken:this.state.selectedDestToken,\n                  buttonId:`kyber-swapper-${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n                };\n                precall(precallProps,globalConfigs,providerInfo);\n              }\n\n              if (callback && typeof callback === 'function'){\n                if (script.readyState) {  // only required for IE <9\n                  script.onreadystatechange = function() {\n                    if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n                      script.onreadystatechange = null;\n                      callback();\n                    }\n                  };\n                } else {  //Others\n                  script.onload = callback;\n                }\n              }\n\n              script.id = scriptID;\n              script.className = `script_${provider}`;\n              script.src = url;\n              script.async = true;\n\n              if (remoteResourceParams && remoteResourceParams.parentElement){\n                remoteResourceParams.parentElement.appendChild(script)\n              } else {\n                document.head.appendChild(script);\n              }\n            }\n          break;\n          case 'css':\n            const stylesheetId = `stylesheet_${provider}_${j}`;\n\n            if (!document.getElementById(stylesheetId)){\n              const style = document.createElement(\"link\");\n\n              style.id = stylesheetId;\n              style.rel = 'stylesheet';\n              style.href = url;\n\n              document.head.appendChild(style);\n            }\n          break;\n          default:\n          break;\n        }\n      });\n    }\n\n    this.setState({\n      providerInfo\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async loadTokens(){\n    const selectedFromToken = Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    this.selectFromToken(selectedFromToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const fromTokenChanged = prevState.selectedFromToken !== this.state.selectedFromToken;\n    const destTokenChanged = prevState.selectedDestToken !== this.state.selectedDestToken;\n    if ((fromTokenChanged ||  destTokenChanged) && this.state.selectedFromToken && this.state.selectedDestToken){\n      this.loadKyberWidget();\n    }\n  }\n\n  selectFromToken = async (selectedFromToken) => {\n    let selectedDestToken = null;\n    const availableDestinationTokens = {};\n    const supportedTokens = this.functionsUtil.getGlobalConfig(['payments','providers','kyberSwap','supportedTokens']);\n\n    supportedTokens.forEach( token => {\n      if (token !== selectedFromToken){\n        if (!selectedDestToken){\n          selectedDestToken = token;\n        }\n        availableDestinationTokens[token] = {\n          token\n        };\n      }\n    });\n\n    const baseToken = this.functionsUtil.getGlobalConfig(['baseToken']);\n    if (baseToken !== selectedFromToken){\n      availableDestinationTokens[baseToken] = {\n        token:baseToken\n      };\n    }\n\n    this.setState({\n      selectedFromToken,\n      availableDestinationTokens\n    },() => {\n      this.selectDestToken(selectedDestToken);\n    });\n  }\n\n  selectDestToken = async (selectedDestToken) => {\n    this.setState({\n      selectedDestToken\n    });\n  }\n\n  swap = () => {\n    const globalConfigs = this.functionsUtil.getGlobalConfigs();\n    const paymentProvider = this.state.providerInfo;\n    const initProps = {\n      baseToken:this.state.selectedFromToken,\n      selectedToken:this.state.selectedDestToken,\n      buttonId:`kyber-swapper-${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n    };\n    const initParams = paymentProvider && paymentProvider.getInitParams ? paymentProvider.getInitParams(initProps,globalConfigs) : null;\n\n    // Render the Payment Provider\n    if (typeof paymentProvider.render === 'function'){\n      paymentProvider.render(initParams,null,initProps);\n    }\n\n    // Send GA event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Tools',\n      eventAction: 'TokenSwap',\n      eventLabel: `${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedFromToken){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to swap:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              showBalance={false}\n              isSearchable={true}\n              onChange={this.selectFromToken}\n              selectedToken={this.state.selectedFromToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            this.state.availableDestinationTokens && this.state.selectedDestToken && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text mb={1}>\n                  Select destination asset:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  showBalance={false}\n                  isSearchable={true}\n                  onChange={this.selectDestToken}\n                  selectedToken={this.state.selectedDestToken}\n                  availableTokens={this.state.availableDestinationTokens}\n                />\n              </Box>\n          }\n          <Flex\n            mt={2}\n            width={1}\n            justifyContent={'center'}\n          >\n            <Button\n              my={2}\n              mx={[0, 2]}\n              size={'medium'}\n              borderRadius={4}\n              mainColor={'blue'}\n              onClick={ e => this.swap(e) }\n              disabled={ !this.state.selectedFromToken || !this.state.selectedDestToken }\n            >\n              SWAP TOKENS\n            </Button>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenSwap;\n","import ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass LpStaking extends Component {\n\n  state = {\n    stats:[],\n    steps:null,\n    infoBox:null,\n    globalStats:[],\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    balanceProp:null,\n    statsLoaded:false,\n    tokenBalance:null,\n    contractInfo:null,\n    programEnded:false,\n    stakedBalance:null,\n    selectedToken:null,\n    rewardMultiplier:1,\n    accountingData:null,\n    programEndDate:null,\n    selectedAction:null,\n    selectedOption:null,\n    successMessage:null,\n    permitEnabled:false,\n    poolTokenPrice:null,\n    availableTokens:null,\n    approveEnabled:false,\n    rewardTokenPrice:null,\n    contractApproved:false,\n    tokenWrapperProps:null,\n    distributionSpeed:null,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    transactionSucceeded:false,\n    showTokenWrapperEnabled:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.setState({\n      selectedAction:'Stake'\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async componentDidMount(){\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    const contractInfoChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    if (selectedActionChanged || contractApprovedChanged || tokenConfigChanged){\n      this.setState({\n        tokenWrapperProps:null,\n        showTokenWrapperEnabled:false\n      },() => {\n        this.updateData(selectedActionChanged);\n      });\n    }\n\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async changeInputCallback(inputValue=null){\n\n    let infoBox = null;\n\n    if (inputValue && this.functionsUtil.BNify(inputValue).gt(0)){\n      inputValue = this.functionsUtil.BNify(inputValue);\n      switch (this.state.selectedAction){\n        case 'Stake':\n          const userStakedBalance = this.functionsUtil.fixTokenDecimals(this.state.stakedBalance,this.props.tokenConfig.decimals).plus(inputValue);\n          const totalStakedBalance = this.functionsUtil.fixTokenDecimals(this.state.totalStakingShares,this.props.contractInfo.decimals).plus(inputValue);\n          const userTotalStakingShare = userStakedBalance.div(totalStakedBalance);\n          const rewardsPerDay = this.state.distributionSpeed.times(86400).times(userTotalStakingShare);//.times(this.state.distributionSpeedMultiplier);\n\n          const stakedBalanceUSD = userStakedBalance.times(this.state.poolTokenPrice);\n          const rewardsPerYearUSD = rewardsPerDay.times(365).times(this.state.rewardTokenPrice);\n          const apy = stakedBalanceUSD.gt(0) ? rewardsPerYearUSD.div(stakedBalanceUSD).times(100) : this.functionsUtil.BNify(0);\n\n          // console.log(parseFloat(userStakedBalance),parseFloat(this.state.poolTokenPrice),parseFloat(stakedBalanceUSD),parseFloat(rewardsPerDay),parseFloat(this.state.rewardTokenPrice),parseFloat(rewardsPerYearUSD),parseFloat(apy));\n          infoBox = {\n            icon:'FileDownload',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`By staking <strong>${inputValue.toFixed(4)} ${this.props.tokenConfig.token}</strong> you will get <strong>${rewardsPerDay.toFixed(4)} ${this.props.contractInfo.rewardToken} / day</strong> with an average APY of <strong>${apy.toFixed(2)}%</strong><br /><small style=\"color:#ff9900\">assuming you have achieved the maximum reward multiplier</small>`\n          };\n        break;\n        case 'Withdraw':\n          const normalizedInputValue = this.functionsUtil.normalizeTokenAmount(inputValue,this.props.tokenConfig.decimals);\n          let unstakeRewards = await this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unstakeQuery',[normalizedInputValue],{from:this.props.account});\n          unstakeRewards = this.functionsUtil.formatMoney(this.functionsUtil.fixTokenDecimals(unstakeRewards,this.props.tokenConfig.decimals));\n          infoBox = {\n            icon:'FileUpload',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`By unstaking <strong>${inputValue.toFixed(4)} ${this.props.tokenConfig.token}</strong> you will get <strong>${unstakeRewards} ${this.props.contractInfo.rewardToken}</strong>`\n          };\n        break;\n        default:\n        break;\n      }\n    }\n\n    this.setState({\n      infoBox\n    });\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = [];\n    amount = this.functionsUtil.toBN(amount);\n    switch (this.state.selectedAction){\n      case 'Stake':\n        methodName = 'wrapAndStake';\n        methodParams = [amount];\n      break;\n      case 'Withdraw':\n        methodName = 'unstakeAndUnwrap';\n        methodParams = [amount];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  getPermitTransactionParams(amount,signedParameters){\n    let methodName = null;\n    let methodParams = [];\n    const { expiry, r, s, v } = signedParameters;\n    amount = this.functionsUtil.toBN(amount);\n    switch (this.state.selectedAction){\n      case 'Stake':\n        methodName = 'permitWrapAndStakeUnlimited';\n        methodParams = [amount, expiry, v, r, s];\n      break;\n      case 'Withdraw':\n        methodName = 'unstakeAndUnwrap';\n        methodParams = [amount];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async loadStats(){\n    const stats = [];\n\n    const [\n      totalLocked,\n      totalUnlocked,\n      totalStakingShares,\n      unlockScheduleCount,\n      accountingData,\n      collectedRewards\n    ] = await Promise.all([\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalLocked'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalUnlocked'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalStakingShares'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unlockScheduleCount'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'updateAccounting',[],{from:this.props.account}),\n      this.state.stakedBalance.gt(0) ? this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unstakeQuery',[this.functionsUtil.integerValue(this.state.stakedBalance)],{from:this.props.account}) : this.functionsUtil.BNify(0)\n    ]);\n\n    const unlockSchedulesPromises = [];\n    for (let i = 0; i < unlockScheduleCount ; i++){\n      unlockSchedulesPromises.push(this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unlockSchedules',[i]));\n    }\n\n    const unlockSchedules = await Promise.all(unlockSchedulesPromises);\n\n    const totalRewards = this.functionsUtil.fixTokenDecimals(this.functionsUtil.BNify(totalLocked).plus(this.functionsUtil.BNify(totalUnlocked)),this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Total Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(totalRewards))+' '+this.props.contractInfo.rewardToken\n    });\n\n    const totalDeposits = this.functionsUtil.fixTokenDecimals(totalStakingShares,this.props.contractInfo.decimals);\n    stats.push({\n      title:'Total Deposits',\n      value:this.functionsUtil.formatMoney(parseFloat(totalDeposits))+' '+this.props.tokenConfig.token\n    });\n\n    const lockedRewards = this.functionsUtil.fixTokenDecimals(totalLocked,this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Locked Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(lockedRewards))+' '+this.props.contractInfo.rewardToken\n    });\n\n    const unlockedRewards = this.functionsUtil.fixTokenDecimals(totalUnlocked,this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Unlocked Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(unlockedRewards))+' '+this.props.contractInfo.rewardToken\n    });\n\n    const programEndTime = unlockSchedules.length>0 ? unlockSchedules.reduce( (endTime,s) => {\n      endTime = Math.max(s.endAtSec,endTime);\n      return endTime;\n    },0) : null;\n\n    const programEndDate = programEndTime ? `${this.functionsUtil.strToMoment(programEndTime*1000).utc().format('DD MMM, YYYY @ HH:mm')} UTC` : 'None';\n    stats.push({\n      title:'Program End-Date',\n      value:programEndDate\n    });\n\n    const programEnded = programEndTime && programEndTime*1000<=Date.now();\n\n    const distributionSpeed = unlockSchedules.reduce( (distributionSpeed,s) => {\n      if (this.functionsUtil.BNify(s.initialLockedShares).gt(0) && this.functionsUtil.BNify(s.durationSec).gt(0)){\n        const tokensPerSecond = this.functionsUtil.fixTokenDecimals(s.initialLockedShares,this.props.contractInfo.decimals).div(s.durationSec);\n        if (!tokensPerSecond.isNaN()){\n          distributionSpeed = distributionSpeed.plus(tokensPerSecond);\n        }\n      }\n      return distributionSpeed;\n    },this.functionsUtil.BNify(0));\n\n    stats.push({\n      title:'Reward unlock rate',\n      value:this.functionsUtil.formatMoney(distributionSpeed.times(86400))+' '+this.props.contractInfo.rewardToken+' / day'\n    });\n\n    const globalStats = [];\n\n    const stakedBalance = this.functionsUtil.fixTokenDecimals(this.state.stakedBalance,this.props.tokenConfig.decimals);\n    const stakingShare = stakedBalance.div(totalDeposits); // accountingData && accountingData[2] && this.functionsUtil.BNify(accountingData[3]).gt(0) ? this.functionsUtil.BNify(accountingData[2]).div(this.functionsUtil.BNify(accountingData[3])) : this.functionsUtil.BNify(0);\n\n    const rewardMultiplier = accountingData && this.functionsUtil.BNify(accountingData[4]).gt(0) ? this.functionsUtil.BNify(Math.max(1,parseFloat(this.functionsUtil.BNify(collectedRewards).div(this.functionsUtil.BNify(accountingData[4])).times(this.props.contractInfo.maxMultiplier)))) : this.functionsUtil.BNify(1);\n\n    const distributionSpeedMultiplier = this.functionsUtil.BNify(1).div(this.props.contractInfo.maxMultiplier).times(rewardMultiplier);\n    const userDistributionSpeed = distributionSpeed.times(stakingShare).times(distributionSpeedMultiplier);\n    const rewardsPerDay = userDistributionSpeed.times(86400);\n\n    // console.log(parseFloat(this.functionsUtil.BNify(collectedRewards)),parseFloat(this.functionsUtil.BNify(accountingData[4])),this.props.contractInfo.maxMultiplier,parseFloat(this.functionsUtil.BNify(collectedRewards).div(this.functionsUtil.BNify(accountingData[4])).times(this.props.contractInfo.maxMultiplier)),parseFloat(rewardMultiplier));\n\n    // globalStats.push({\n    //   title:'Distribution rate',\n    //   description:'Your daily rewards distribution based on your current multiplier',\n    //   value:this.functionsUtil.formatMoney(rewardsPerDay)+' '+this.props.contractInfo.rewardToken+' / day',\n    // });\n\n    const stakedBalanceUSD = stakedBalance.times(this.state.poolTokenPrice);\n    const rewardsPerYearUSD = rewardsPerDay.times(365).times(this.state.rewardTokenPrice);\n    const apy = stakedBalanceUSD.gt(0) ? rewardsPerYearUSD.div(stakedBalanceUSD).times(100) : this.functionsUtil.BNify(0);\n\n    // console.log(parseFloat(this.state.stakedBalance),parseFloat(this.state.poolTokenPrice),parseFloat(stakedBalanceUSD),parseFloat(rewardsPerDay),parseFloat(this.state.rewardTokenPrice),parseFloat(rewardsPerYearUSD),parseFloat(apy));\n\n    globalStats.push({\n      title:'APY',\n      value:`${apy.toFixed(2)}%`,\n      description:'Annualized rewards based on your current multiplier',\n    });\n\n    globalStats.push({\n      title:'Share',\n      value:`${stakingShare.times(100).toFixed(2)}%`,\n      description:'Your share of the total deposits',\n    });\n\n    globalStats.push({\n      title:'Multiplier',\n      value:`${rewardMultiplier.toFixed(2)}x`,\n      description:`Deposit liquidity tokens for ${this.props.contractInfo.maxBonusDays} days to achieve a ${this.props.contractInfo.maxMultiplier}x reward multiplier`\n    });\n\n    const currentRewards = this.functionsUtil.formatMoney(this.functionsUtil.fixTokenDecimals(collectedRewards,this.props.tokenConfig.decimals));\n    globalStats.push({\n      title:'Rewards',\n      value:currentRewards+' '+this.props.contractInfo.rewardToken,\n      description:'Your share of the total unlocked reward pool. Larger your deposit and for longer, higher your share'\n    });\n\n    // console.log('loadStats',stats,globalStats);\n\n    const statsLoaded = true;\n\n    this.setState({\n      stats,\n      statsLoaded,\n      globalStats,\n      stakingShare,\n      programEnded,\n      totalRewards,\n      programEndDate,\n      accountingData,\n      rewardMultiplier,\n      distributionSpeed,\n      totalStakingShares,\n      userDistributionSpeed,\n      distributionSpeedMultiplier\n    });\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    // console.log('transactionSucceeded',tx);\n    let infoBox = null;\n    switch (this.state.selectedAction){\n      case 'Stake':\n        const stakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const stakedTokens = stakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(stakedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully staked <strong>${stakedTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n        }\n      break;\n      case 'Withdraw':\n        const unstakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() ) : null;\n        const unstakedTokens = unstakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(unstakedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        const rewardTokenConfig = {\n          address:this.functionsUtil.getContractByName(this.props.contractInfo.rewardToken)._address\n        };\n        const receivedRewardsLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => (log.address.toLowerCase() === rewardTokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) )) ) : null;\n        const receivedRewards = receivedRewardsLog ? this.functionsUtil.fixTokenDecimals(parseInt(receivedRewardsLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully withdrawn <strong>${unstakedTokens.toFixed(4)} ${this.props.selectedToken}</strong> and received <strong>${receivedRewards.toFixed(4)} ${this.props.contractInfo.rewardToken}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    const transactionSucceeded = true;\n\n    this.setState({\n      infoBox,\n      transactionSucceeded\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async updateData(selectedActionChanged=false){\n    const newState = {};\n\n    const DAITokenConfig = {\n      address:this.functionsUtil.getContractByName('DAI')._address\n    };\n    const rewardTokenConfig = {\n      address:this.functionsUtil.getContractByName(this.props.contractInfo.rewardToken)._address\n    };\n\n    const [\n      poolTokenPrice,\n      rewardTokenPrice,\n      tokenBalance,\n      stakedBalance,\n    ] = await Promise.all([\n      this.functionsUtil.getSushiswapPoolTokenPrice(this.props.selectedToken),\n      this.functionsUtil.getSushiswapConversionRate(DAITokenConfig,rewardTokenConfig),\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalStakedFor',[this.props.account]),\n    ]);\n\n    newState.balanceProp = this.functionsUtil.BNify(0);\n    newState.tokenBalance = !this.functionsUtil.BNify(tokenBalance).isNaN() ? this.functionsUtil.BNify(tokenBalance) : this.functionsUtil.BNify(0);\n    newState.stakedBalance = !this.functionsUtil.BNify(stakedBalance).isNaN() ? this.functionsUtil.BNify(stakedBalance) : this.functionsUtil.BNify(0);\n    newState.poolTokenPrice = !this.functionsUtil.BNify(poolTokenPrice).isNaN() ? this.functionsUtil.BNify(poolTokenPrice) : this.functionsUtil.BNify(0);\n    newState.rewardTokenPrice = !this.functionsUtil.BNify(rewardTokenPrice).isNaN() ? this.functionsUtil.BNify(rewardTokenPrice) : this.functionsUtil.BNify(0);\n\n    switch (this.state.selectedAction){\n      case 'Stake':\n        newState.permitEnabled = true;\n        newState.approveEnabled = true;\n        newState.balanceProp = newState.tokenBalance;\n        newState.approveDescription = 'Approve the Staking contract to stake your LP tokens';\n        newState.tokenWrapperProps = {\n          startContract:{\n            name:'ETH',\n            token:'ETH',\n            decimals:18,\n            wrapMethod:'deposit',\n          },\n          destContract:{\n            unwrapMethod:'withdraw',\n            ...this.props.tokenConfig\n          },\n        };\n      break;\n      case 'Withdraw':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = this.functionsUtil.fixTokenDecimals(newState.stakedBalance,this.props.tokenConfig.decimals);\n        newState.tokenWrapperProps = {\n          startContract:{\n            name:'ETH',\n            token:'ETH',\n            decimals:18,\n            wrapMethod:'deposit',\n          },\n          destContract:{\n            unwrapMethod:'withdraw',\n            ...this.props.tokenConfig\n          },\n        };\n      break;\n      default:\n      break;\n    }\n\n    if (newState.balanceProp.lte(0)){\n      newState.showTokenWrapperEnabled = true;\n    }\n\n    if (selectedActionChanged){\n      newState.infoBox = null;\n      newState.transactionSucceeded = false;\n    }\n\n    this.setState(newState,() => {\n      this.loadStats();\n    });\n  }\n\n  render() {\n\n    const StatsCard = props => {\n      const cardProps = {\n        p:3,\n        mb:2,\n        width:'49%',\n        ...props.cardProps\n      };\n      return (\n        <DashboardCard\n          title={props.title}\n          cardProps={cardProps}\n          titleProps={{\n            fontSize:1,\n            fontWeight:3,\n          }}\n          titleParentProps={{\n            mt:0,\n            ml:0\n          }}\n          description={props.description}\n        >\n          <Text\n            mt={1}\n            fontSize={[2,3]}\n            color={'statValue'}\n            {...props.textProps}\n          >\n            {props.value}\n          </Text>\n        </DashboardCard>\n      );\n    };\n\n    const isStake = this.state.selectedAction === 'Stake';\n    const isUnstake = this.state.selectedAction === 'Withdraw';\n    const isStats = this.state.selectedAction === 'Stats';\n    const txAction = this.state.selectedAction;\n\n    return (\n      <Box\n        width={1}\n      >\n      {\n        this.props.tokenConfig && this.props.tokenConfig.poolLink && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Pool link:\n            </Text>\n            <ExtLink\n              mt={1}\n              color={'link'}\n              hoverColor={'link'}\n              href={this.props.tokenConfig.poolLink}\n            >\n              <Text\n                color={'link'}\n                style={{\n                  maxWidth:'100%',\n                  overflow:'hidden',\n                  whiteSpace:'nowrap',\n                  textOverflow:'ellipsis'\n                }}\n              >\n                {this.props.tokenConfig.poolLink}\n              </Text>\n            </ExtLink>\n          </Box>\n        )\n      }\n      {\n        this.state.stakedBalance && this.functionsUtil.BNify(this.state.stakedBalance).gt(0) && this.state.globalStats.length>0 && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Your Stats:\n            </Text>\n            <Flex\n              mt={1}\n              width={1}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.globalStats.map( (statInfo,index) =>\n                  <StatsCard\n                    key={`globalStats_${index}`}\n                    cardProps={{\n                      mb:[2,0],\n                      mr:[0,index<this.state.globalStats.length-1 ? 1 : 0],\n                      width:[1,'100%']\n                    }}\n                    textProps={{\n                      fontSize:[1,2]\n                    }}\n                    {...statInfo}\n                  />\n                )\n              }\n            </Flex>\n          </Box>\n        )\n      }\n      {\n        this.props.selectedToken && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text mb={1}>\n              Select Action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isStake ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Stake'}\n                imageSrc={'images/mint.svg'}\n                isMobile={this.props.isMobile}\n                // subcaption={'stake LP Tokens'}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isStake}\n                handleClick={ e => this.setAction('Stake') }\n              />\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isUnstake ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Withdraw'}\n                imageSrc={'images/upload.svg'}\n                isMobile={this.props.isMobile}\n                // subcaption={'withdraw LP tokens'}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isUnstake}\n                handleClick={ e => this.setAction('Withdraw') }\n              />\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isStats ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Stats'}\n                imageSrc={'images/stats.svg'}\n                // subcaption={'view some stats'}\n                isMobile={this.props.isMobile}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isStats}\n                handleClick={ e => this.setAction('Stats') }\n              />\n            </Flex>\n            {\n              (isStake || isUnstake) ?\n                isStake && this.state.programEnded ? (\n                  <DashboardCard\n                    cardProps={{\n                      p:3,\n                      mt:1\n                    }}\n                  >\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                    >\n                      <Icon\n                        name={'Warning'}\n                        color={'cellText'}\n                        size={this.props.isMobile ? '1.8em' : '2.3em'}\n                      />\n                      <Text\n                        mt={1}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'center'}\n                      >\n                        The {this.props.selectedToken} staking program ended on {this.state.programEndDate}.\n                      </Text>\n                    </Flex>\n                  </DashboardCard>\n                ) : (this.props.tokenConfig && this.state.balanceProp && this.state.statsLoaded && this.props.contractInfo ? (\n                  <Box\n                    mt={1}\n                    width={1}\n                    mb={[4,3]}\n                  >\n                    <SendTxWithBalance\n                      error={null}\n                      {...this.props}\n                      action={txAction}\n                      steps={this.state.steps}\n                      infoBox={this.state.infoBox}\n                      tokenConfig={this.props.tokenConfig}\n                      tokenBalance={this.state.balanceProp}\n                      contractInfo={this.props.contractInfo}\n                      permitEnabled={this.state.permitEnabled}\n                      approveEnabled={this.state.approveEnabled}\n                      callback={this.transactionSucceeded.bind(this)}\n                      approveDescription={this.state.approveDescription}\n                      contractApproved={this.contractApproved.bind(this)}\n                      balanceSelectorInfo={this.state.balanceSelectorInfo}\n                      changeInputCallback={this.changeInputCallback.bind(this)}\n                      getTransactionParams={this.getTransactionParams.bind(this)}\n                      getPermitTransactionParams={this.getPermitTransactionParams.bind(this)}\n                    >\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            name={'MoneyOff'}\n                            color={'cellText'}\n                            size={this.props.isMobile ? '1.8em' : '2.3em'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            {\n                              isStake ? (\n                                `You don't have any ${this.props.selectedToken} in your wallet.`\n                              ) : isUnstake && (\n                                `You don't have any staked ${this.props.selectedToken} to withdraw.`\n                              )\n                            }\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    </SendTxWithBalance>\n                  </Box>\n                ) : (\n                  <Flex\n                    mt={3}\n                    mb={3}\n                    width={1}\n                  >\n                    <FlexLoader\n                      flexProps={{\n                        flexDirection:'row'\n                      }}\n                      loaderProps={{\n                        size:'30px'\n                      }}\n                      textProps={{\n                        ml:2\n                      }}\n                      text={'Loading info...'}\n                    />\n                  </Flex>\n                )\n              ) : isStats && (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  width={1}\n                  style={{\n                    flexWrap:'wrap'\n                  }}\n                  justifyContent={'space-between'}\n                >\n                  {\n                    (!this.state.stats || !this.state.stats.length) ? (\n                      <Flex\n                        mt={3}\n                        mb={3}\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading stats...'}\n                        />\n                      </Flex>\n                    ) : this.state.stats.map( (statInfo,index) =>\n                      <StatsCard\n                        key={`stats_${index}`}\n                        cardProps={{\n                          width:[1,'49%']\n                        }}\n                        {...statInfo}\n                      />\n                    )\n                  }\n                </Flex>\n              )\n            }\n          </Box>\n        )\n      }\n      </Box>\n    );\n  }\n}\n\nexport default LpStaking;","import ExtLink from '../ExtLink/ExtLink';\nimport IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport { Flex, Box, Text, Icon, Input, Button } from \"rimble-ui\";\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\n\nclass IdleStaking extends Component {\n\n  state = {\n    stats:[],\n    steps:null,\n    maxApr:null,\n    infoBox:null,\n    globalStats:[],\n    lockPeriods:[\n      {\n        value:14,\n        type:'day',\n        label:'2 weeks'\n      },\n      {\n        value:1,\n        type:'month',\n        label:'1 month'\n      },\n      {\n        value:1,\n        type:'year',\n        label:'1 year'\n      },\n      {\n        value:4,\n        type:'year',\n        label:'4 years'\n      },\n    ],\n    lockedEnd:null,\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    balanceProp:null,\n    lockExpired:false,\n    statsLoaded:false,\n    tokenBalance:null,\n    contractInfo:null,\n    stakedBalance:null,\n    selectedToken:null,\n    rewardMultiplier:1,\n    claimedRewards:null,\n    accountingData:null,\n    increaseAction:null,\n    selectedAction:null,\n    selectedOption:null,\n    successMessage:null,\n    permitEnabled:false,\n    poolTokenPrice:null,\n    lockPeriodInput:null,\n    buttonDisabled:false,\n    internalInfoBox:null,\n    availableTokens:null,\n    approveEnabled:false,\n    rewardTokenPrice:null,\n    contractApproved:false,\n    tokenWrapperProps:null,\n    distributionSpeed:null,\n    distributedRewards:null,\n    selectedLockPeriod:null,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    lockPeriodTimestamp:null,\n    transactionSucceeded:false,\n    showTokenWrapperEnabled:false,\n    lockEndDateIsMaxEndDate:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.setState({\n      selectedAction:'Lock'\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async componentDidMount(){\n    const feeDistributorConfig = this.props.tokenConfig.feeDistributor;\n    await this.props.initContract(feeDistributorConfig.name,feeDistributorConfig.address,feeDistributorConfig.abi);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    const contractInfoChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    if (selectedActionChanged || accountChanged || contractApprovedChanged || tokenConfigChanged){\n      const increaseAction = selectedActionChanged ? null : this.state.increaseAction;\n      this.setState({\n        increaseAction,\n        tokenWrapperProps:null,\n        showTokenWrapperEnabled:false,\n      },() => {\n        this.updateData(selectedActionChanged);\n      });\n    }\n\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n\n    const lockPeriodChanged = prevState.lockPeriodTimestamp !== this.state.lockPeriodTimestamp;\n    const increaseActionChanged = prevState.increaseAction !== this.state.increaseAction;\n    if (lockPeriodChanged || increaseActionChanged || selectedActionChanged){\n      if (increaseActionChanged){\n        this.setState({\n          internalInfoBox:null\n        });\n      } else if (lockPeriodChanged){\n        this.calculateStkIDLEAmount();\n      }\n      this.checkButtonDisabled();\n    }\n  }\n\n  checkButtonDisabled(){\n    let buttonDisabled = false;\n    const minLockPeriod = this.state.lockPeriods[0];\n    const maxLockPeriod = Object.assign([],this.state.lockPeriods).pop();\n    const minDate = this.state.lockedEnd ? this.functionsUtil.strToMoment(this.state.lockedEnd*1000).add(minLockPeriod.value,minLockPeriod.type) : this.functionsUtil.strToMoment().add(minLockPeriod.value,minLockPeriod.type);\n    const mDate = this.functionsUtil.strToMoment(this.state.lockPeriodTimestamp*1000);\n    const maxDate = this.functionsUtil.strToMoment().add(maxLockPeriod.value,maxLockPeriod.type);\n    switch (this.state.selectedAction){\n      default:\n      case 'Lock':\n        buttonDisabled = mDate.isAfter(maxDate) || mDate.isSameOrBefore(minDate);\n      break;\n      case 'Increase Lock':\n        if (this.state.increaseAction === 'time'){\n          buttonDisabled = mDate.isAfter(maxDate) || mDate.isSameOrBefore(minDate);\n        }\n      break;\n    }\n\n    // console.log('checkButtonDisabled',this.state.selectedAction,this.state.increaseAction,buttonDisabled);\n\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  async changeInputCallback(inputValue=null){\n    inputValue = this.functionsUtil.BNify(inputValue);\n    this.setState({\n      inputValue\n    },() => {\n      this.calculateStkIDLEAmount();\n    });\n  }\n\n  calculateStkIDLEAmount(){\n    let internalInfoBox = null;\n    if (this.state.inputValue && this.functionsUtil.BNify(this.state.inputValue).gt(0) && this.state.lockPeriodTimestamp !== null){\n      switch (this.state.selectedAction){\n        case 'Lock':\n          const currTime = parseInt(Date.now()/1000);\n          const maxDate = this.functionsUtil.strToMoment().add(4,'year');\n          let endDate = this.functionsUtil.strToMoment(this.state.lockPeriodTimestamp*1000);\n          if (endDate.isAfter(maxDate)){\n            endDate = maxDate;\n          }\n          const endDateTime = parseInt(endDate._d.getTime()/1000)-currTime;\n          const maxDateTime = parseInt(maxDate._d.getTime()/1000)-currTime;\n          const stkIDLEAmount = this.state.inputValue.times(endDateTime).div(maxDateTime);\n\n          const percentage = stkIDLEAmount.div(this.state.inputValue).times(100);\n\n          // console.log(this.state.inputValue.toString(),endDate.format('YYYY-MM-DD HH:mm:ss'),maxDate.format('YYYY-MM-DD HH:mm:ss'),endDateTime,maxDateTime,stkIDLEAmount.toFixed());\n\n          let text = `By staking <strong>${this.state.inputValue.toFixed(4)} ${this.props.selectedToken}</strong> until <strong>${endDate.utc().format('YYYY-MM-DD HH:mm')} UTC</strong> you will get back <strong>${stkIDLEAmount.toFixed(4)} ${this.props.tokenConfig.contract.name}</strong> (${Math.ceil(percentage)}% of staking power).`;\n          if (Math.ceil(percentage)<100){\n            text += `<br />Stake your tokens for <strong>4 years</strong> to reach the maximum staking power.`;\n          }\n          text += `<br /><span style=\"color:${this.props.theme.colors.alert};font-size:14px\">Keep in mind that once you lock ${this.props.selectedToken} you cannot reverse the operation until the lock end date has been reached.</span>`;\n          internalInfoBox = {\n            text,\n            icon:'LockOutline',\n            iconProps:{\n              color:'cellText'\n            },\n          };\n        break;\n        default:\n        break;\n      }\n    }\n    this.setState({\n      internalInfoBox\n    });\n  }\n\n  getIncreaseTimeParams(){\n    const _unlock_time = parseInt(this.state.lockPeriodTimestamp);\n    // console.log('getIncreaseTimeParams',_unlock_time);\n    return [_unlock_time];\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = [];\n    const _value = this.functionsUtil.toBN(amount);\n    const _unlock_time = parseInt(this.state.lockPeriodTimestamp);\n    switch (this.state.selectedAction){\n      case 'Lock':\n        methodName = 'create_lock';\n        methodParams = [_value,_unlock_time];\n        // console.log('getTransactionParams',methodName,methodParams);\n      break;\n      case 'Increase Lock':\n        methodName = 'increase_amount';\n        methodParams = [_value];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async loadStats(){\n\n    const stats = [];\n    const globalStats = [];\n    const statsLoaded = true;\n\n    let [\n      etherscanRewardsTxs,\n      totalSupply,\n      tokenTotalSupply,\n      claimableRewards,\n      lockedInfo,\n      tokenUserBalance,\n      claimable,\n      claimEvents,\n      // checkpointEvents,\n      depositEvents\n    ] = await Promise.all([\n      this.functionsUtil.getIdleStakingRewardsTxs(),\n      this.functionsUtil.genericContractCallCached(this.props.contractInfo.name,'supply'),\n      this.functionsUtil.genericContractCallCached(this.props.contractInfo.name, 'totalSupply'),\n      this.functionsUtil.getTokenBalance(this.props.contractInfo.rewardToken,this.props.tokenConfig.feeDistributor.address),\n      this.props.account ? this.functionsUtil.genericContractCall(this.props.contractInfo.name,'locked',[this.props.account]) : null,\n      this.props.account ? this.functionsUtil.getContractBalance(this.props.contractInfo.name,this.props.account) : this.functionsUtil.BNify(0),\n      this.props.account ? this.functionsUtil.genericContractCall(this.props.tokenConfig.feeDistributor.name,'claim',[this.props.account]) : this.functionsUtil.BNify(0),\n      this.functionsUtil.getContractEvents(this.props.tokenConfig.feeDistributor.name,'Claimed',{fromBlock: this.props.tokenConfig.feeDistributor.fromBlock, toBlock:'latest'}),\n      // this.functionsUtil.getContractEvents(this.props.tokenConfig.feeDistributor.name,'CheckpointToken',{fromBlock: this.props.tokenConfig.feeDistributor.fromBlock, toBlock:'latest'}),\n      this.props.account ? this.functionsUtil.getContractEvents(this.props.contractInfo.name,'Deposit',{fromBlock: this.props.contractInfo.fromBlock, toBlock:'latest',filter:{provider:this.props.account}}) : []\n    ]);\n\n    // console.log('etherscanRewardsTxs',etherscanRewardsTxs);\n\n    const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.props.contractInfo.rewardToken]);\n\n    let distributedRewards = [];\n    let totalRewards = this.functionsUtil.BNify(0);\n    let totalRewardsDays = this.functionsUtil.BNify(0);\n\n    if (etherscanRewardsTxs && etherscanRewardsTxs.length){\n      totalRewardsDays = Math.abs(etherscanRewardsTxs[0].timeStamp-etherscanRewardsTxs[etherscanRewardsTxs.length-1].timeStamp)/86400;\n      distributedRewards = etherscanRewardsTxs.map( tx => {\n        const amount = this.functionsUtil.fixTokenDecimals(tx.value,rewardTokenConfig.decimals);\n        totalRewards = totalRewards.plus(amount);\n        return {\n          amount,\n          hash:tx.hash,\n          timeStamp:tx.timeStamp,\n          tokenName:tx.tokenSymbol,\n          date:this.functionsUtil.strToMoment(parseInt(tx.timeStamp)*1000).utc().format('YYYY-MM-DD HH:mm')+' UTC'\n        };\n      });\n    }\n\n    const claimedRewards = [];\n    let totalClaimedUser = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(claimEvents, async (e) => {\n      if (this.props.account && e.returnValues && e.returnValues.recipient && e.returnValues.recipient.toLowerCase() === this.props.account.toLowerCase()){\n        const blockInfo = await this.functionsUtil.getBlockInfo(e.blockNumber);\n        if (blockInfo){\n          const claimedAmount = this.functionsUtil.fixTokenDecimals(e.returnValues.amount,rewardTokenConfig.decimals);\n          totalClaimedUser = totalClaimedUser.plus(claimedAmount);\n          claimedRewards.push({\n            amount:claimedAmount,\n            hash:e.transactionHash,\n            tokenName:this.props.contractInfo.rewardToken,\n            date:this.functionsUtil.strToMoment(parseInt(blockInfo.timestamp)*1000).utc().format('YYYY-MM-DD HH:mm')+' UTC'\n          });\n        }\n      }\n    });\n\n    tokenUserBalance = this.functionsUtil.fixTokenDecimals(tokenUserBalance,this.props.contractInfo.decimals);\n\n    const totalDeposited = totalSupply ? this.functionsUtil.fixTokenDecimals(totalSupply,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const totalLockedFunds = totalSupply ? this.functionsUtil.formatMoney(totalDeposited,4)+' '+this.props.selectedToken : (this.state.stats.length ? this.state.stats[0] : this.functionsUtil.formatMoney(totalDeposited,4)+' '+this.props.selectedToken);\n    stats.push({\n      title:'Total Locked Funds',\n      value:totalLockedFunds\n    });\n\n    tokenTotalSupply = tokenTotalSupply ? this.functionsUtil.fixTokenDecimals(tokenTotalSupply,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const stkTokenTotalSupply = tokenTotalSupply ? this.functionsUtil.formatMoney(tokenTotalSupply,4)+' '+this.props.contractInfo.name : (this.state.stats.length ? this.state.stats[1] : this.functionsUtil.formatMoney(tokenTotalSupply,4)+' '+this.props.contractInfo.name);\n    stats.push({\n      title:`${this.props.contractInfo.name} Total Supply`,\n      value:stkTokenTotalSupply\n    });\n\n    const claimableRewardsFormatted = claimableRewards ? this.functionsUtil.formatMoney(claimableRewards,4)+' '+this.props.contractInfo.rewardToken : (this.state.stats.length ? this.state.stats[2] : this.functionsUtil.formatMoney(claimableRewards,4)+' '+this.props.contractInfo.rewardToken);\n    stats.push({\n      title:'Claimable Rewards',\n      value:claimableRewardsFormatted\n    });\n\n    // const totalClaimed = claimEvents.reduce( (totalClaimed,event) => {\n    //   const claimedAmount = this.functionsUtil.fixTokenDecimals(event.returnValues.amount,rewardTokenConfig.decimals);\n    //   totalClaimed = totalClaimed.plus(claimedAmount);\n    //   return totalClaimed;\n    // },this.functionsUtil.BNify(0));\n\n    const totalRewardsFormatted = this.functionsUtil.formatMoney(totalRewards,4)+' '+this.props.contractInfo.rewardToken;\n    stats.push({\n      title:'Total Rewards',\n      value:totalRewardsFormatted\n    });\n\n    const maxApr = totalRewards.div(tokenTotalSupply).times(365.2425).div(totalRewardsDays);\n    stats.push({\n      title:'APR (1 year staking)',\n      value:maxApr.div(4).times(100).toFixed(2)+'%'\n    });\n    stats.push({\n      title:'APR (4 years staking)',\n      value:maxApr.times(100).toFixed(2)+'%'\n    });\n\n    const stakedBalance = lockedInfo && lockedInfo.amount ? this.functionsUtil.fixTokenDecimals(lockedInfo.amount,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const userDeposited = this.functionsUtil.formatMoney(stakedBalance,4);\n    globalStats.push({\n      title:'Total Deposited',\n      description:'Your total deposited amount',\n      value:userDeposited+' '+this.props.contractInfo.rewardToken,\n    });\n\n    const stakingShare = tokenUserBalance.div(tokenTotalSupply);\n    globalStats.push({\n      title:'Share',\n      value:`${stakingShare.times(100).toFixed(2)}%`,\n      description:'Your share of the total deposits',\n    });\n\n    globalStats.push({\n      title:`${this.props.contractInfo.name} balance`,\n      value:`${this.functionsUtil.formatMoney(tokenUserBalance,4)} ${this.props.contractInfo.name}`,\n    });\n    \n    claimable = claimable ? this.functionsUtil.fixTokenDecimals(claimable,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const currentRewards = this.functionsUtil.formatMoney(claimable,4);\n    globalStats.push({\n      title:'Claimable Rewards',\n      value:`${currentRewards} ${this.props.contractInfo.rewardToken}`,\n      // description:'Your claimable rewards'\n    });\n\n    const totalCollectedRewards = claimable.plus(totalClaimedUser);\n\n    let stakeStartTime = depositEvents.reduce( (stakedTime,event) => {\n      const depositTimestamp = this.functionsUtil.BNify(event.returnValues.ts);\n      const depositValue = this.functionsUtil.fixTokenDecimals(event.returnValues.value,this.props.tokenConfig.decimals);\n      if (depositValue.gt(0)){\n        stakedTime = stakedTime.plus(depositValue.times(depositTimestamp));\n        // console.log(depositTimestamp.toString(),depositValue.toFixed(),stakedTime.toString());\n      }\n      return stakedTime;\n    },this.functionsUtil.BNify(0));\n\n    // console.log('stakeStartTime',stakeStartTime,stakedBalance.toFixed());\n\n    stakeStartTime = stakedBalance.gt(0) ? Math.ceil(stakeStartTime.div(stakedBalance)) : 0;\n    // const latestCheckpoint = checkpointEvents.length ? checkpointEvents[checkpointEvents.length-1] : null;\n    // const latestDistribution = etherscanRewardsTxs[0];\n    // const latestDistributionTime = latestDistribution ? this.functionsUtil.BNify(latestDistribution.timeStamp) : this.functionsUtil.BNify(parseInt(Date.now()/1000));\n    // const latestDistributionTime = latestCheckpoint ? this.functionsUtil.BNify(latestCheckpoint.returnValues.time) : this.functionsUtil.BNify(parseInt(Date.now()/1000));\n    const currTime = parseInt(Date.now()/1000);\n    const stakePeriod = this.functionsUtil.BNify(currTime).minus(stakeStartTime);\n    const currentProfit = stakedBalance.gt(0) ? totalCollectedRewards.div(stakedBalance) : this.functionsUtil.BNify(0);\n    const weeksPerYear = 52.14;\n    const secondsPerWeek = 604800;\n    const stakePeriodWeeks = Math.max(1,Math.floor(stakePeriod.div(secondsPerWeek)));\n    const apr = stakePeriod.gt(0) ? currentProfit.times(weeksPerYear).div(stakePeriodWeeks).times(100) : this.functionsUtil.BNify(0);\n    \n    // console.log('APR',currTime,stakeStartTime,apr.toFixed(),currentProfit.toFixed(),stakePeriod.toFixed(),stakePeriodWeeks,totalCollectedRewards.toFixed(),stakedBalance.toFixed());\n\n    globalStats.push({\n      title:'APR',\n      value:`${apr.toFixed(2)}%`,\n      description:'APR is based on your Claimable Rewards and Total Deposited'\n    });\n\n    const lockEndDate = this.state.lockedEnd ? this.functionsUtil.strToMoment(this.state.lockedEnd*1000).utc().format('YYYY/MM/DD HH:mm') : '';\n    globalStats.push({\n      value:lockEndDate,\n      title:'Lock End Date (UTC)',\n      description:'Ending date of your Lock'\n    });\n\n    this.setState({\n      stats,\n      maxApr,\n      claimable,\n      globalStats,\n      statsLoaded,\n      stakedBalance,\n      claimedRewards,\n      distributedRewards\n    });\n  }\n\n  async contractApprovedCallback(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  setIncreaseAction(increaseAction){\n    this.setState({\n      increaseAction\n    });\n  }\n\n  changelockPeriodInput(e){\n    const selectedLockPeriod = null;\n    const lockPeriodInput = e.target.value;\n    const currDate = this.functionsUtil.strToMoment();\n    const mDate = this.functionsUtil.strToMoment(lockPeriodInput+' '+currDate.format('HH:mm:ss'),'YYYY-MM-DD HH:mm:ss').add(1,'second');\n    if (mDate.isValid()){\n      const lockPeriodTimestamp = parseInt(mDate._d.getTime()/1000);\n      // console.log('changelockPeriodInput',lockPeriodTimestamp);\n      this.setState({\n        lockPeriodInput,\n        selectedLockPeriod,\n        lockPeriodTimestamp\n      });\n    }\n  }\n\n  selectLockPeriod(selectedLockPeriod){\n    const minDate = this.state.lockedEnd ? this.functionsUtil.strToMoment(this.state.lockedEnd*1000) : this.functionsUtil.strToMoment();\n    const maxDate = this.functionsUtil.strToMoment().add(4,'year');\n    let mDate = minDate.add(selectedLockPeriod.value,selectedLockPeriod.type).add(1,'second');\n\n    // Check if after 4 years from now\n    if (mDate.isAfter(maxDate)){\n      mDate = maxDate;\n    }\n\n    const lockPeriodInput = mDate.format('YYYY-MM-DD');\n    const lockPeriodTimestamp = parseInt(mDate._d.getTime()/1000);\n\n    // console.log('selectLockPeriod',lockPeriodInput,lockPeriodTimestamp);\n\n    this.setState({\n      lockPeriodInput,\n      selectedLockPeriod,\n      lockPeriodTimestamp\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    // console.log('transactionSucceeded',tx);\n    let infoBox = null;\n    let internalInfoBox = null;\n    switch (this.state.selectedAction){\n      case 'Lock':\n        const lockedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const lockedTokens = lockedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(lockedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        internalInfoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully locked <strong>${lockedTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n        }\n      break;\n      case 'Increase Lock':\n        switch (this.state.increaseAction){\n          case 'time':\n            internalInfoBox = {\n              icon:'DoneAll',\n              iconProps:{\n                color:this.props.theme.colors.transactions.status.completed\n              },\n              text:`You have successfully increased the lock until <strong>${this.functionsUtil.strToMoment(this.state.lockPeriodTimestamp*1000).utc().format('YYYY/MM/DD HH:mm')} UTC</strong>`\n            }\n          break;\n          case 'amount':\n            const increaseAmountTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n            const increaseTokens = increaseAmountTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(increaseAmountTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n            internalInfoBox = {\n              icon:'DoneAll',\n              iconProps:{\n                color:this.props.theme.colors.transactions.status.completed\n              },\n              text:`You have successfully increased the lock by <strong>${increaseTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n            }\n          break;\n          default:\n          break;\n        }\n      break;\n      case 'Withdraw':\n        const unstakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() ) : null;\n        const unstakedTokens = unstakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(unstakedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        internalInfoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully withdrawn <strong>${unstakedTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n        }\n      break;\n      case 'Claim':\n        const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.props.contractInfo.rewardToken]);\n        const receivedRewardsLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => (log.address.toLowerCase() === rewardTokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) )) ) : null;\n        const receivedRewards = receivedRewardsLog ? this.functionsUtil.fixTokenDecimals(parseInt(receivedRewardsLog.data,16),rewardTokenConfig.decimals) : this.functionsUtil.BNify(0);\n        internalInfoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully claimed <strong>${receivedRewards.toFixed(4)} ${this.props.contractInfo.rewardToken}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    const transactionSucceeded = true;\n\n    this.setState({\n      infoBox,\n      internalInfoBox,\n      transactionSucceeded\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async updateData(selectedActionChanged=false){\n    const newState = {};\n\n    // const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.contractInfo.rewardToken]);\n\n    const [\n      tokenBalance,\n      lockedEnd,\n    ] = await Promise.all([\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'locked__end',[this.props.account])\n    ]);\n\n    newState.lockedEnd = lockedEnd && parseInt(lockedEnd)>0 ? parseInt(lockedEnd) : null;\n    newState.lockExpired = newState.lockedEnd && newState.lockedEnd<=parseInt(Date.now()/1000);\n    newState.tokenBalance = !this.functionsUtil.BNify(tokenBalance).isNaN() ? this.functionsUtil.BNify(tokenBalance) : this.functionsUtil.BNify(0);\n\n    let selectedAction = this.state.selectedAction;\n\n    if (selectedAction==='Withdraw' && !newState.lockExpired){\n      selectedAction = 'Lock';\n      newState.selectedAction = selectedAction;\n    }\n\n    // Select Increase if already created a lock\n    if (newState.lockedEnd && selectedAction==='Lock'){\n      selectedAction = 'Increase Lock';\n      newState.increaseAction = 'time';\n      newState.selectedAction = selectedAction;\n    } else if (selectedAction==='Increase Lock' && !newState.increaseAction && !this.state.increaseAction){\n      newState.increaseAction = 'time';\n    }\n\n    // Select Withdraw if the lock has expired\n    if (selectedAction==='Increase Lock' && newState.lockExpired){\n      selectedAction = 'Withdraw';\n      newState.selectedAction = selectedAction;\n    }\n\n    switch (selectedAction){\n      case 'Lock':\n        newState.permitEnabled = false;\n        newState.approveEnabled = true;\n        newState.balanceProp = newState.tokenBalance;\n        newState.approveDescription = `Approve the Staking contract to stake your ${this.props.selectedToken} tokens`;\n      break;\n      case 'Increase Lock':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = newState.tokenBalance;\n        newState.lockPeriodInput = this.functionsUtil.strToMoment(newState.lockedEnd*1000).format('YYYY-MM-DD');\n      break;\n      case 'Withdraw':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = this.functionsUtil.fixTokenDecimals(newState.stakedBalance,this.props.tokenConfig.decimals);\n      break;\n      default:\n      break;\n    }\n\n    if (selectedActionChanged){\n      newState.infoBox = null;\n      newState.internalInfoBox = null;\n      newState.transactionSucceeded = false;\n    }\n\n    const maxDate = this.functionsUtil.strToMoment().add(4,'year').format('YYYY-MM-DD');\n    newState.lockEndDateIsMaxEndDate = newState.lockedEnd ? this.functionsUtil.strToMoment(newState.lockedEnd*1000).format('YYYY-MM-DD')===maxDate : false;\n\n    // console.log('lockEndDateIsMaxEndDate',newState.lockEndDateIsMaxEndDate,maxDate,this.functionsUtil.strToMoment(newState.lockedEnd*1000).format('YYYY-MM-DD'));\n\n    this.setState(newState,() => {\n      this.loadStats();\n    });\n  }\n\n  render() {\n\n    const StatsCard = props => {\n      const cardProps = {\n        p:3,\n        mb:2,\n        width:'49%',\n        ...props.cardProps\n      };\n      return (\n        <DashboardCard\n          title={props.title}\n          cardProps={cardProps}\n          titleProps={{\n            fontSize:1,\n            fontWeight:3,\n          }}\n          titleParentProps={{\n            mt:0,\n            ml:0\n          }}\n          description={props.description}\n        >\n          <Text\n            mt={1}\n            fontSize={[2,3]}\n            color={'statValue'}\n            {...props.textProps}\n          >\n            {props.value}\n          </Text>\n        </DashboardCard>\n      );\n    };\n\n    const isLock = this.state.selectedAction === 'Lock';\n    const isStats = this.state.selectedAction === 'Stats';\n    const isClaim = this.state.selectedAction === 'Claim';\n    const isUnstake = this.state.selectedAction === 'Withdraw';\n    const isIncrease = this.state.selectedAction === 'Increase Lock';\n    const txAction = this.state.selectedAction;\n    const canIncrease = !this.state.lockExpired;\n\n    return (\n      <Box\n        width={1}\n      >\n      {\n        this.props.tokenConfig && this.props.tokenConfig.poolLink && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Token link:\n            </Text>\n            <ExtLink\n              mt={1}\n              color={'link'}\n              hoverColor={'link'}\n              href={this.props.tokenConfig.poolLink}\n            >\n              <Text\n                color={'link'}\n                style={{\n                  maxWidth:'100%',\n                  overflow:'hidden',\n                  whiteSpace:'nowrap',\n                  textOverflow:'ellipsis'\n                }}\n              >\n                {this.props.tokenConfig.poolLink}\n              </Text>\n            </ExtLink>\n          </Box>\n        )\n      }\n      {\n        this.state.stakedBalance && this.functionsUtil.BNify(this.state.stakedBalance).gt(0) && this.state.globalStats.length>0 && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Your Stats:\n            </Text>\n            <Flex\n              mt={1}\n              mb={1}\n              width={1}\n              style={{\n                flexBasis:'0',\n                flex:'1 1 0px',\n                flexWrap:'wrap'\n              }}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.globalStats.map( (statInfo,index) =>\n                  <StatsCard\n                    key={`globalStats_${index}`}\n                    cardProps={{\n                      mb:2,\n                      width:['49%','33%'],\n                      // mr:[0,index<this.state.globalStats.length-1 ? 1 : 0]\n                    }}\n                    textProps={{\n                      fontSize:[1,2]\n                    }}\n                    {...statInfo}\n                  />\n                )\n              }\n            </Flex>\n          </Box>\n        )\n      }\n      {\n        this.props.selectedToken && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text mb={1}>\n              Select Action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.lockedEnd === null ? (\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isLock ? 2 : 0\n                    }}\n                    caption={'Lock'}\n                    width={[1,'32%']}\n                    imageSrc={'images/lock.svg'}\n                    isMobile={this.props.isMobile}\n                    // subcaption={'stake LP Tokens'}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isLock}\n                    handleClick={ e => this.setAction('Lock') }\n                  />\n                ) : !this.state.lockExpired ? (\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isIncrease ? 2 : 0\n                    }}\n                    width={[1,'32%']}\n                    isActive={isIncrease}\n                    caption={'Increase Lock'}\n                    imageSrc={'images/lock.svg'}\n                    isMobile={this.props.isMobile}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '54px'\n                    }}\n                    handleClick={ e => this.setAction('Increase Lock') }\n                  />\n                ) : (\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isUnstake ? 2 : 0\n                    }}\n                    width={[1,'32%']}\n                    caption={'Withdraw'}\n                    imageSrc={'images/upload.svg'}\n                    isMobile={this.props.isMobile}\n                    // subcaption={'withdraw LP tokens'}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isUnstake}\n                    handleClick={ e => this.setAction('Withdraw') }\n                  />\n                )\n              }\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isClaim ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Claim'}\n                imageSrc={'images/reward.png'}\n                isMobile={this.props.isMobile}\n                // subcaption={'withdraw LP tokens'}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isClaim}\n                handleClick={ e => this.setAction('Claim') }\n              />\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isStats ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Stats'}\n                imageSrc={'images/stats.svg'}\n                isMobile={this.props.isMobile}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isStats}\n                handleClick={ e => this.setAction('Stats') }\n              />\n            </Flex>\n            {\n              this.state.internalInfoBox && (\n                <IconBox\n                  cardProps={{\n                    mt:1,\n                    mb:3\n                  }}\n                  {...this.state.internalInfoBox}\n                />\n              )\n            }\n            {\n              isStats ? (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  width={1}\n                  style={{\n                    flexWrap:'wrap'\n                  }}\n                  justifyContent={'space-between'}\n                >\n                  {\n                    (!this.state.stats || !this.state.stats.length) ? (\n                      <Flex\n                        mt={3}\n                        mb={3}\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading stats...'}\n                        />\n                      </Flex>\n                    ) : this.state.stats.map( (statInfo,index) =>\n                      <StatsCard\n                        key={`stats_${index}`}\n                        cardProps={{\n                          width:[1,'49%']\n                        }}\n                        {...statInfo}\n                      />\n                    )\n                  }\n                  <Text\n                    mb={1}\n                  >\n                    Distributed Rewards:\n                  </Text>\n                  <Flex\n                    mb={3}\n                    width={1}\n                    justifyContent={'center'}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        pt:2,\n                        pb:3,\n                        px:3,\n                        width:1,\n                        display:'flex',\n                        justifyContent:'center'\n                      }}\n                      isActive={false}\n                      isInteractive={false}\n                    >\n                      {\n                        this.state.distributedRewards && this.state.distributedRewards.length ? (\n                          <Flex\n                            width={1}\n                            flexDirection={'column'}\n                          >\n                            <Flex\n                              pt={0}\n                              pb={1}\n                              width={1}\n                              flexDirection={'row'}\n                              borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                            >\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                width={this.props.isMobile ? 0.45 : 0.4}\n                              >\n                                Date\n                              </Text>\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                width={this.props.isMobile ? 0.4 : 0.3}\n                                textAlign={this.props.isMobile ? 'right' : 'left'}\n                              >\n                                Amount\n                              </Text>\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                width={this.props.isMobile ? 0.15 : 0.3}\n                              >\n                                { this.props.isMobile ? '' : 'Hash' }\n                              </Text>\n                            </Flex>\n                            <Flex\n                              flexDirection={'column'}\n                              alignItems={'flex-start'}\n                              overflow={['visible','scroll']}\n                              maxHeight={['initial','500px']}\n                            >\n                              {\n                                this.state.distributedRewards.map( (reward,index) => (\n                                  <Flex\n                                    width={1}\n                                    py={[2,1]}\n                                    flexDirection={'row'}\n                                    key={`rewards_${index}`}\n                                    borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                                  >\n                                    <Text\n                                      fontWeight={2}\n                                      color={'statValue'}\n                                      fontSize={this.props.isMobile ? 1 : 2}\n                                      width={this.props.isMobile ? 0.45 : 0.4}\n                                    >\n                                      {reward.date}\n                                    </Text>\n                                    <Text\n                                      fontWeight={2}\n                                      color={'statValue'}\n                                      fontSize={this.props.isMobile ? 1 : 2}\n                                      width={this.props.isMobile ? 0.4 : 0.3}\n                                      textAlign={this.props.isMobile ? 'right' : 'left'}\n                                    >\n                                      {reward.amount.toFixed(4)} {reward.tokenName}\n                                    </Text>\n                                    <Flex\n                                      width={this.props.isMobile ? 0.15 : 0.13}\n                                      justifyContent={this.props.isMobile ? 'flex-end' : 'flex-start'}\n                                    >\n                                      <ExtLink\n                                        color={'link'}\n                                        hoverColor={'link'}\n                                        href={this.functionsUtil.getEtherscanTransactionUrl(reward.hash)}\n                                      >\n                                        <Flex\n                                          alignItems={'center'}\n                                          flexDirection={'row'}\n                                        >\n                                          {\n                                            !this.props.isMobile && (\n                                              <Text\n                                                fontSize={2}\n                                                fontWeight={2}\n                                                color={'link'}\n                                              >\n                                                {this.functionsUtil.shortenHash(reward.hash)}\n                                              </Text>\n                                            )\n                                          }\n                                          <Icon\n                                            ml={1}\n                                            color={'link'}\n                                            name={'OpenInNew'}\n                                            size={this.props.isMobile ? '1.4em' : '1.2em'}\n                                          />\n                                        </Flex>\n                                      </ExtLink>\n                                    </Flex>\n                                  </Flex>\n                                ))\n                              }\n                            </Flex>\n                          </Flex>\n                        ) : (\n                          <Text\n                            fontSize={2}\n                            color={'statValue'}\n                          >\n                            No reward distributed yet.\n                          </Text>\n                        )\n                      }\n                    </DashboardCard>\n                  </Flex>\n                </Flex>\n              ) : (this.props.account && this.props.tokenConfig && this.state.balanceProp && this.state.statsLoaded && this.props.contractInfo) ? (\n                <Box\n                  mt={1}\n                  width={1}\n                  mb={[4,3]}\n                >\n                  {\n                    (isIncrease && canIncrease) && (\n                      <Box\n                        mb={2}\n                        width={1}\n                      >\n                        <Text mb={1}>\n                          Choose increase value:\n                        </Text>\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'space-between'}\n                        >\n                          <CardIconButton\n                            {...this.props}\n                            textProps={{\n                              fontSize:[1,2]\n                            }}\n                            cardProps={{\n                              px:3,\n                              py:2,\n                              width:0.49\n                            }}\n                            icon={'AccessTime'}\n                            iconColor={'deposit'}\n                            iconBgColor={'#ced6ff'}\n                            isActive={ this.state.increaseAction === 'time' }\n                            handleClick={ e => this.setIncreaseAction('time') }\n                            text={this.props.isMobile ? 'Time' : 'Increase Time'}\n                          />\n                          <CardIconButton\n                            {...this.props}\n                            textProps={{\n                              fontSize:[1,2]\n                            }}\n                            cardProps={{\n                              px:3,\n                              py:2,\n                              width:0.49\n                            }}\n                            icon={'AttachMoney'}\n                            iconColor={'redeem'}\n                            iconBgColor={'#ceeff6'}\n                            isActive={ this.state.increaseAction === 'amount' }\n                            handleClick={ e => this.setIncreaseAction('amount') }\n                            text={this.props.isMobile ? 'Amount' : 'Increase Amount'}\n                          />\n                        </Flex>\n                      </Box>\n                    )\n                  }\n                  {\n                    ((isLock && this.state.balanceProp && this.state.contractApproved && this.state.balanceProp.gt(0)) || (isIncrease && canIncrease)) && (\n                      <Box\n                        width={1}\n                      > \n                        {\n                          (isLock || this.state.increaseAction === 'time') && (\n                            <Box\n                              width={1}\n                            >\n                              <Text mb={1}>\n                                Choose lock period:\n                              </Text>\n                              {\n                                !this.state.lockEndDateIsMaxEndDate ? (\n                                  <Flex\n                                    width={1}\n                                    alignItems={'center'}\n                                    justifyContent={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Input\n                                      mb={2}\n                                      width={1}\n                                      type={\"date\"}\n                                      required={true}\n                                      height={'3.4em'}\n                                      borderRadius={2}\n                                      fontWeight={500}\n                                      borderColor={'cardBorder'}\n                                      backgroundColor={'cardBg'}\n                                      boxShadow={'none !important'}\n                                      value={this.state.lockPeriodInput || ''}\n                                      onChange={this.changelockPeriodInput.bind(this)}\n                                      border={`1px solid ${this.props.theme.colors.divider}`}\n                                    />\n                                    <Flex\n                                      mb={3}\n                                      width={1}\n                                      alignItems={'center'}\n                                      flexDirection={'row'}\n                                      justifyContent={'space-between'}\n                                    >\n                                      {\n                                        this.state.lockPeriods.map( (p,index) => {\n                                          const isActive = this.state.selectedLockPeriod ? this.state.selectedLockPeriod.value===p.value && this.state.selectedLockPeriod.type === p.type : false;\n                                          return (\n                                            <DashboardCard\n                                              cardProps={{\n                                                p:2,\n                                                width:0.24,\n                                              }}\n                                              isActive={isActive}\n                                              isInteractive={true}\n                                              key={`lockPeriod_${index}`}\n                                              handleClick={e => this.selectLockPeriod(p)}\n                                            >\n                                              <Text \n                                                fontWeight={3}\n                                                fontSize={[1,2]}\n                                                textAlign={'center'}\n                                                color={isActive ? 'copyColor' : 'cellText'}\n                                              >\n                                                {p.label}\n                                              </Text>\n                                            </DashboardCard>\n                                          );\n                                        })\n                                      }\n                                    </Flex>\n                                    {\n                                      isIncrease && (\n                                        <ExecuteTransaction\n                                          params={[]}\n                                          {...this.props}\n                                          parentProps={{\n                                            width:1,\n                                            alignItems:'center',\n                                            justifyContent:'center'\n                                          }}\n                                          Component={Button}\n                                          componentProps={{\n                                            fontSize:3,\n                                            fontWeight:3,\n                                            size:'medium',\n                                            width:[1,1/2],\n                                            borderRadius:4,\n                                            mainColor:'deposit',\n                                            value:'Increase Time',\n                                            disabled:this.state.buttonDisabled\n                                          }}\n                                          action={'Increase Time'}\n                                          methodName={'increase_unlock_time'}\n                                          contractName={this.props.contractInfo.name}\n                                          callback={this.transactionSucceeded.bind(this)}\n                                          getTransactionParams={this.getIncreaseTimeParams.bind(this)}\n                                        />\n                                      )\n                                    }\n                                  </Flex>\n                                ) : (\n                                  <IconBox\n                                    cardProps={{\n                                      mt:1,\n                                      mb:3\n                                    }}\n                                    icon={'Warning'}\n                                    iconProps={{\n                                      color:'cellText'\n                                    }}\n                                    text={`Your tokens are locked for the maxumum allowed period.`}\n                                  />\n                                )\n                              }\n                            </Box>\n                          )\n                        }\n                      </Box>\n                    )\n                  }\n                  {\n                    (isLock || this.state.increaseAction==='amount') ? (\n                      <SendTxWithBalance\n                        error={null}\n                        {...this.props}\n                        action={txAction}\n                        steps={this.state.steps}\n                        infoBox={this.state.infoBox}\n                        tokenConfig={this.props.tokenConfig}\n                        tokenBalance={this.state.balanceProp}\n                        contractInfo={this.props.contractInfo}\n                        permitEnabled={this.state.permitEnabled}\n                        buttonDisabled={this.state.buttonDisabled}\n                        approveEnabled={this.state.approveEnabled}\n                        callback={this.transactionSucceeded.bind(this)}\n                        approveDescription={this.state.approveDescription}\n                        balanceSelectorInfo={this.state.balanceSelectorInfo}\n                        changeInputCallback={this.changeInputCallback.bind(this)}\n                        contractApproved={this.contractApprovedCallback.bind(this)}\n                        getTransactionParams={this.getTransactionParams.bind(this)}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              {\n                                (isLock || isIncrease) ? (\n                                  `You don't have any ${this.props.selectedToken} in your wallet.`\n                                ) : isUnstake && (\n                                  `You don't have any staked ${this.props.selectedToken} to withdraw.`\n                                )\n                              }\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </SendTxWithBalance>\n                    ) : (isIncrease && !canIncrease) ? (\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            name={'LockOpen'}\n                            color={'cellText'}\n                            size={this.props.isMobile ? '1.8em' : '2.3em'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            You cannot increase an expired lock, please Withdraw.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    ) : isUnstake ? (\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        {\n                          this.state.lockExpired ? (\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                            >\n                              <Icon\n                                name={'LockOpen'}\n                                color={'cellText'}\n                                size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              />\n                              <Text\n                                mt={1}\n                                mb={3}\n                                fontSize={2}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                The lock has expired, you can withdraw your {this.props.selectedToken}.\n                              </Text>\n                              <ExecuteTransaction\n                                params={[]}\n                                {...this.props}\n                                Component={Button}\n                                parentProps={{\n                                  width:1,\n                                  alignItems:'center',\n                                  justifyContent:'center'\n                                }}\n                                componentProps={{\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  size:'medium',\n                                  width:[1,1/2],\n                                  borderRadius:4,\n                                  mainColor:'redeem',\n                                  value:'Withdraw',\n                                }}\n                                action={'Withdraw'}\n                                methodName={'withdraw'}\n                                contractName={this.props.contractInfo.name}\n                                callback={this.transactionSucceeded.bind(this)}\n                              />\n                            </Flex>\n                          ) : (\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                            >\n                              <Icon\n                                name={'LockOpen'}\n                                color={'cellText'}\n                                size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              />\n                              <Text\n                                mt={1}\n                                fontSize={2}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                The lock is not expired yet, please wait until {this.functionsUtil.strToMoment(this.state.lockedEnd*1000).utc().format('YYYY/MM/DD HH:mm')} UTC to withdraw your {this.props.selectedToken}.\n                              </Text>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    ) : isClaim && (\n                      <Flex\n                        width={1}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mb:1\n                          }}\n                        >\n                          {\n                            (this.state.claimable && this.state.claimable.gt(0)) ? (\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  color={'cellText'}\n                                  name={'MonetizationOn'}\n                                  size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                />\n                                <Text\n                                  mt={1}\n                                  mb={3}\n                                  fontSize={[2,3]}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You can claim <strong>{this.state.claimable.toFixed(8)} {this.props.contractInfo.rewardToken}</strong>.\n                                </Text>\n                                <ExecuteTransaction\n                                  params={[]}\n                                  {...this.props}\n                                  Component={Button}\n                                  parentProps={{\n                                    width:1,\n                                    alignItems:'center',\n                                    justifyContent:'center'\n                                  }}\n                                  componentProps={{\n                                    fontSize:3,\n                                    fontWeight:3,\n                                    size:'medium',\n                                    width:[1,1/3],\n                                    value:'Claim',\n                                    borderRadius:4,\n                                    mainColor:'redeem',\n                                  }}\n                                  action={'Claim'}\n                                  methodName={'claim'}\n                                  callback={this.transactionSucceeded.bind(this)}\n                                  contractName={this.props.tokenConfig.feeDistributor.name}\n                                />\n                              </Flex>\n                            ) : (\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  name={'MoneyOff'}\n                                  color={'cellText'}\n                                  size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                />\n                                <Text\n                                  mt={1}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You don't have rewards to Claim yet.\n                                </Text>\n                              </Flex>\n                            )\n                          }\n                        </DashboardCard>\n                        <Text\n                          mb={1}\n                        >\n                          Claimed Rewards:\n                        </Text>\n                        <Flex\n                          mb={3}\n                          width={1}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                        >\n                          <DashboardCard\n                            cardProps={{\n                              pt:2,\n                              pb:3,\n                              px:3,\n                              width:1,\n                              display:'flex',\n                              alignItems:'center',\n                              justifyContent:'center'\n                            }}\n                            isActive={false}\n                            isInteractive={false}\n                          >\n                            {\n                              this.state.claimedRewards && this.state.claimedRewards.length ? (\n                                <Flex\n                                  width={1}\n                                  flexDirection={'column'}\n                                >\n                                  <Flex\n                                    pt={0}\n                                    pb={1}\n                                    width={1}\n                                    flexDirection={'row'}\n                                    borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                                  >\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      width={this.props.isMobile ? 0.5 : 0.4}\n                                    >\n                                      Date\n                                    </Text>\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      width={this.props.isMobile ? 0.5 : 0.3}\n                                      textAlign={this.props.isMobile ? 'right' : 'left'}\n                                    >\n                                      Amount\n                                    </Text>\n                                    {\n                                      !this.props.isMobile && (\n                                        <Text\n                                          width={0.3}\n                                          fontSize={1}\n                                          fontWeight={3}\n                                        >\n                                          Hash\n                                        </Text>\n                                      )\n                                    }\n                                  </Flex>\n                                  {\n                                    this.state.claimedRewards.map( (claim,index) => (\n                                      <Flex\n                                        py={1}\n                                        width={1}\n                                        flexDirection={'row'}\n                                        key={`claim_${index}`}\n                                        borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                                      >\n                                        <Text\n                                          fontWeight={2}\n                                          color={'statValue'}\n                                          fontSize={this.props.isMobile ? 1 : 2}\n                                          width={this.props.isMobile ? 0.5 : 0.4}\n                                        >\n                                          {claim.date}\n                                        </Text>\n                                        <Text\n                                          fontWeight={2}\n                                          color={'statValue'}\n                                          fontSize={this.props.isMobile ? 1 : 2}\n                                          width={this.props.isMobile ? 0.5 : 0.3}\n                                          textAlign={this.props.isMobile ? 'right' : 'left'}\n                                        >\n                                          {claim.amount.toFixed(4)} {claim.tokenName}\n                                        </Text>\n                                        {\n                                          !this.props.isMobile && (\n                                            <ExtLink\n                                              width={0.3}\n                                              color={'link'}\n                                              hoverColor={'link'}\n                                              href={this.functionsUtil.getEtherscanTransactionUrl(claim.hash)}\n                                            >\n                                              <Flex\n                                                alignItems={'center'}\n                                                flexDirection={'row'}\n                                              >\n                                                <Text\n                                                  fontSize={2}\n                                                  fontWeight={2}\n                                                  color={'link'}\n                                                >\n                                                  {this.functionsUtil.shortenHash(claim.hash)}\n                                                </Text>\n                                                <Icon\n                                                  ml={1}\n                                                  size={'1.2em'}\n                                                  color={'link'}\n                                                  name={'OpenInNew'}\n                                                />\n                                              </Flex>\n                                            </ExtLink>\n                                          )\n                                        }\n                                      </Flex>\n                                    ))\n                                  }\n                                </Flex>\n                              ) : (\n                                <Text\n                                  fontSize={2}\n                                  color={'statValue'}\n                                >\n                                  No reward claimed yet.\n                                </Text>\n                              )\n                            }\n                          </DashboardCard>\n                        </Flex>\n                      </Flex>\n                    )\n                  }\n                </Box>\n              ) : !this.props.account ? (\n                <ConnectBox\n                  cardProps={{\n                    mt:2\n                  }}\n                  {...this.props}\n                />\n              ) : (\n                <Flex\n                  mt={3}\n                  mb={3}\n                  width={1}\n                >\n                  <FlexLoader\n                    flexProps={{\n                      flexDirection:'row'\n                    }}\n                    loaderProps={{\n                      size:'30px'\n                    }}\n                    textProps={{\n                      ml:2\n                    }}\n                    text={'Loading info...'}\n                  />\n                </Flex>\n              )\n            }\n          </Box>\n        )\n      }\n      </Box>\n    );\n  }\n}\n\nexport default IdleStaking;","import ExtLink from '../ExtLink/ExtLink';\nimport IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\n// import NXMaster from '../abis/nexus/NXMaster.json';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ButtonLoader from '../ButtonLoader/ButtonLoader';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\nimport { Flex, Box, Text, Input, Link, Progress, Button, Icon, Tooltip } from \"rimble-ui\";\n\nclass NexusMutual extends Component {\n\n  state = {\n    step:1,\n    quote:null,\n    steps:{\n      1:'Get Quote',\n      2:'Buy Cover'\n    },\n    periodOptions:{\n      30:{\n        label:'30d'\n      },\n      60:{\n        label:'60d'\n      },\n      90:{\n        label:'90d'\n      },\n      365:{\n        label:'1y'\n      }\n    },\n    coverId:null,\n    claimId:null,\n    capacity:null,\n    loading:false,\n    coverCost:null,\n    amountValue:'',\n    periodValue:'',\n    yearlyCost:null,\n    maxCapacity:null,\n    amountValid:true,\n    periodValid:true,\n    tokenConfig:null,\n    tokenBalance:null,\n    selectedToken:null,\n    claimableCovers:[],\n    tokenApproved:false,\n    selectedPeriod:null,\n    maxPriceWithFee:null,\n    transactionParams:[],\n    transactionValue:null,\n    yieldTokenBalance:null,\n    selectedUnderlying:null,\n    selectedAction:'deposit',\n    yieldTokenApproved:false,\n    claimButtonDisabled:false,\n    selectedCoverToClaim:null,\n    defaultClaimableCover:null,\n    selectedUnderlyingConfig:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadContracts();\n  }\n\n  async loadContracts(){\n    const claimableCovers = [];\n    const nexusMutualCoverages = await this.functionsUtil.getNexusMutualCoverages(this.props.account);\n    nexusMutualCoverages.forEach( coverage => {\n      if (coverage.incident){\n        claimableCovers.push(coverage);\n      }\n    });\n\n    const validClaimableCoverFromParam = this.props.urlParams.param3 ? claimableCovers.find( cover => parseInt(cover.value) === parseInt(this.props.urlParams.param3) ) : null;\n\n    const defaultClaimableCover = claimableCovers.length>0 ? claimableCovers[0] : null;\n    const selectedCoverToClaim = validClaimableCoverFromParam ? validClaimableCoverFromParam : defaultClaimableCover || null;\n\n    this.setState({\n      claimableCovers,\n      selectedCoverToClaim,\n      defaultClaimableCover\n    });\n\n    const selectedAction = ['deposit','claim'].includes(this.props.urlParams.param2) ? this.props.urlParams.param2 : this.state.selectedAction;\n    const paramIsValidToken = this.props.urlParams.param3 && Object.keys(this.props.toolProps.availableTokens).includes(this.props.urlParams.param3);\n    const selectedToken = paramIsValidToken ? this.props.urlParams.param3 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    this.setSelectedAction(selectedAction);\n    this.changeSelectedToken(selectedToken);\n    // console.log('coverBoughtEvents',coverBoughtEvents,'claimSubmittedEvents',claimSubmittedEvents,'claimableCovers',claimableCovers);\n  }\n\n  async getPoolCapacity(selectedUnderlying,tokenConfig){\n    const requiredNetwork = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    const baseEndpoint = this.functionsUtil.getGlobalConfig(['network','providers','nexus','endpoints',requiredNetwork]);\n    const response = await this.functionsUtil.makeRequest(`${baseEndpoint}contracts/${tokenConfig.address}/capacity`);\n    if (response && response.data){\n      const capacity = response.data;\n      // console.log('getPoolCapacity',capacity);\n      const maxCapacity = capacity && capacity[`capacity${selectedUnderlying}`] ? this.functionsUtil.fixTokenDecimals(capacity[`capacity${selectedUnderlying}`],tokenConfig.decimals) : this.functionsUtil.BNify(0);\n      return maxCapacity;\n    }\n    return false;\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const selectedUnderlyingChanged = prevState.selectedUnderlying !== this.state.selectedUnderlying;\n    if (selectedTokenChanged || selectedUnderlyingChanged){\n      this.loadTokenData();\n    }\n  }\n\n  async loadTokenData(){\n\n    const isETH = this.state.selectedToken === 'ETH';\n    const selectedUnderlyingConfig = this.state.tokenConfig.underlying[this.state.selectedUnderlying];\n\n    // Init Underlying Contract\n    await Promise.all([\n      this.props.initContract(this.state.tokenConfig.token, this.state.tokenConfig.realAddress, this.state.tokenConfig.abi),\n      this.props.initContract(selectedUnderlyingConfig.name, selectedUnderlyingConfig.address, selectedUnderlyingConfig.abi)\n    ]);\n\n    let [\n      maxCapacity,\n      yieldTokenBalance,\n      yieldTokenApproved,\n      tokenApproved,\n      tokenBalance\n    ] = await Promise.all([\n      this.getPoolCapacity(this.state.selectedUnderlying,this.state.tokenConfig),\n      this.functionsUtil.getTokenBalance(this.state.tokenConfig.token,this.props.account),\n      this.functionsUtil.checkTokenApproved(this.state.selectedToken,this.props.contractInfo.address,this.props.account),\n      this.functionsUtil.checkTokenApproved(selectedUnderlyingConfig.name,this.props.contractInfo.address,this.props.account),\n      isETH ? this.functionsUtil.getETHBalance(this.props.account,false) : this.functionsUtil.getTokenBalance(selectedUnderlyingConfig.name,this.props.account,false),\n    ]);\n\n    tokenBalance = tokenBalance || this.functionsUtil.BNify(0);\n    yieldTokenBalance = yieldTokenBalance || this.functionsUtil.BNify(0);\n\n    this.setState({\n      maxCapacity,\n      tokenBalance,\n      tokenApproved,\n      yieldTokenBalance,\n      yieldTokenApproved,\n      selectedUnderlyingConfig\n    });\n  }\n\n  async changeSelectedToken(selectedToken){\n    const periodValue = '';\n    const amountValue = '';\n    const tokenConfig = this.props.toolProps.availableTokens[selectedToken];\n    const selectedUnderlying = Object.keys(tokenConfig.underlying)[0];\n\n    this.setState({\n      amountValue,\n      periodValue,\n      tokenConfig,\n      selectedToken,\n      selectedUnderlying\n    });\n  }\n\n  changeSelectedUnderlying(selectedUnderlying){\n    this.setState({\n      selectedUnderlying\n    });\n  }\n\n  setMaxCoverAmount(){\n    const amountValue = this.state.maxCapacity.toFixed();\n    this.changeAmount({\n      target:{\n        value:amountValue\n      }\n    });\n  }\n\n  changeAmount = (e) => {\n    const amountValue = e.target.value.length && !isNaN(e.target.value) ? Math.floor(e.target.value) : '';\n    const amountValid = this.functionsUtil.BNify(amountValue).gt(0) && this.functionsUtil.BNify(amountValue).lte(this.state.maxCapacity);\n    this.setState({\n      amountValue,\n      amountValid\n    });\n  }\n\n  changePeriod = (e) => {\n    const periodValue = e.target.value.length && !isNaN(e.target.value) ? e.target.value : '';\n    const periodValid = parseInt(periodValue)>=30 && parseInt(periodValue)<=365;\n    this.setState({\n      periodValue,\n      periodValid,\n      selectedPeriod:null\n    });\n  }\n\n  selectPeriod = (selectedPeriod) => {\n    this.changePeriod({\n      target:{\n        value:selectedPeriod\n      }\n    });\n  }\n\n  async getQuote() {\n\n    this.setState({\n      loading:true\n    });\n\n    // Setup your cover data.\n    const coverData = {\n      period: this.state.periodValue, // days\n      coverAmount: this.state.amountValue, // ETH in units not wei\n      currency: this.state.selectedUnderlying,\n      contractAddress: this.state.tokenConfig.address, // the contract you will be buying cover for\n      asset: this.state.tokenConfig.underlying[this.state.selectedUnderlying].address\n    };\n\n    // URL to request a quote for.\n    // const quoteURL = 'https://api.nexusmutual.io/v1/quote?' +\n    const requiredNetwork = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    const baseEndpoint = this.functionsUtil.getGlobalConfig(['network','providers','nexus','endpoints',requiredNetwork]);\n    const quoteURL = `${baseEndpoint}quote?coverAmount=${coverData.coverAmount}&currency=${coverData.currency}&period=${coverData.period}&contractAddress=${coverData.contractAddress}`;\n\n    const response = await this.functionsUtil.makeRequest(quoteURL);\n\n    const quote = response && response.data ? response.data : null;\n\n    if (!quote){\n      this.setState({\n        loading:false\n      });\n      return false;\n    }\n\n    // encode the signature result in the data field\n    const data = this.props.web3.eth.abi.encodeParameters(\n      ['uint', 'uint', 'uint', 'uint', 'uint8', 'bytes32', 'bytes32'],\n      [quote.price, quote.priceInNXM, quote.expiresAt, quote.generatedAt, quote.v, quote.r, quote.s],\n    );\n\n    const COVER_TYPE = this.functionsUtil.toBN(0);\n    const feePercentage = await this.functionsUtil.genericContractCall(this.props.contractInfo.name,'feePercentage');\n    const basePrice = this.functionsUtil.toBN(quote.price);\n    const priceWithFee = basePrice.mul(this.functionsUtil.toBN(feePercentage)).divn(10000).add(basePrice);\n    const amountInWei = this.functionsUtil.toWei(coverData.coverAmount.toString());\n    const maxPriceWithFee = priceWithFee;\n    const coverCost = this.functionsUtil.fixTokenDecimals(maxPriceWithFee,this.state.tokenConfig.decimals);\n    const yearlyCost = coverCost.div(this.state.amountValue).times(365).div(this.state.periodValue).times(100);\n\n    // console.log('coverCost',maxPriceWithFee,coverCost.toFixed(),this.state.amountValue.toFixed(),this.state.periodValue,yearlyCost.toFixed());\n\n    const transactionParams = [\n      coverData.contractAddress,\n      coverData.asset,\n      amountInWei,\n      coverData.period,\n      COVER_TYPE,\n      maxPriceWithFee,\n      data\n    ];\n\n    const transactionValue = this.state.selectedUnderlying === 'ETH' ? priceWithFee : null;\n\n    // console.log(feePercentage,transactionParams,transactionValue,quote);\n\n    // debugger;\n\n    const step = 2;\n    const loading = false;\n\n    this.setState({\n      step,\n      quote,\n      loading,\n      coverCost,\n      yearlyCost,\n      maxPriceWithFee,\n      transactionValue,\n      transactionParams\n    });\n  }\n\n  approveSucceeded = (tx) => {\n    const tokenApproved = true;\n    this.setState({\n      tokenApproved\n    });\n  }\n\n  yieldTokenApproveSucceeded = (tx) => {\n    const yieldTokenApproved = true;\n    this.setState({\n      yieldTokenApproved\n    });\n  }\n\n  claimInputChange = (amount) => {\n    const normalizedAmount = this.functionsUtil.normalizeTokenAmount(amount,this.state.tokenConfig.decimals);\n    const claimButtonDisabled = this.functionsUtil.BNify(amount).lte(0) || this.functionsUtil.BNify(normalizedAmount).gt(this.state.selectedCoverToClaim.coveredTokenAmount);\n    this.setState({\n      claimButtonDisabled\n    });\n  }\n\n  getClaimTransactionParams = (coveredTokenAmount) => {\n    return {\n      methodName:'claimTokens',\n      methodParams:[this.state.selectedCoverToClaim.value,this.state.selectedCoverToClaim.incident.id,coveredTokenAmount,this.state.tokenConfig.realAddress]\n    };\n  }\n\n  claimTransactionSucceeded = (tx) => {\n    // const claimId = this.functionsUtil.getGlobalConfig(['txReceipt','events','ClaimSubmitted','returnValues','claimId'],tx);\n    // this.setState({\n    //   claimId\n    // });\n    this.loadContracts();\n  }\n\n  buyCoverTransactionSucceeded = (tx) => {\n    const coverId = this.functionsUtil.getGlobalConfig(['txReceipt','events','CoverBought','returnValues','coverId'],tx);\n    this.setState({\n      coverId\n    });\n  }\n\n  setSelectedAction(selectedAction){\n    if (selectedAction !== this.state.selectedAction){\n      this.setState({\n        selectedAction\n      });\n    }\n  }\n\n  selectCoverToClaim(coverId){\n    const selectedCoverToClaim = this.state.selectedCoverToClaim ? this.state.claimableCovers.find( cover => parseInt(cover.value) === coverId ) : null;\n    // console.log('selectCoverToClaim',selectedCoverToClaim);\n    this.setState({\n      selectedCoverToClaim\n    });\n  }\n\n  reset(){\n    const step = 1;\n    const quote = null;\n    const coverId = null;\n    const periodValue = '';\n    const amountValue = '';\n    const transactionParams = [];\n    this.setState({\n      step,\n      quote,\n      coverId,\n      periodValue,\n      amountValue,\n      transactionParams\n    });\n  }\n\n  render() {\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          mb={3}\n          width={[1,0.36]}\n          flexDirection={'column'}\n        >\n          <Box\n            mb={2}\n            width={1}\n          >\n            <Text mb={1}>\n              Choose action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'space-between'}\n            >\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:2,\n                  width:0.49\n                }}\n                textProps={{\n                  fontSize:[1,2]\n                }}\n                icon={'Security'}\n                iconColor={'deposit'}\n                text={'Buy Coverage'}\n                iconBgColor={'#ced6ff'}\n                isActive={ this.state.selectedAction === 'deposit' }\n                handleClick={ e => this.setSelectedAction('deposit') }\n              />\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:2,\n                  width:0.49\n                }}\n                textProps={{\n                  fontSize:[1,2]\n                }}\n                icon={'FileUpload'}\n                iconColor={'redeem'}\n                text={'Claim Tokens'}\n                iconBgColor={'#ceeff6'}\n                isActive={ this.state.selectedAction === 'claim' }\n                handleClick={ e => this.setSelectedAction('claim') }\n              />\n            </Flex>\n          </Box>\n          {\n            this.state.selectedAction === 'deposit' &&\n              <IconBox\n                cardProps={{\n                  py:2,\n                  px:3,\n                  my:2,\n                  width:1,\n                }}\n                isActive={true}\n                isInteractive={false}\n                icon={'LightbulbOutline'}\n                iconProps={{\n                  color:'flashColor'\n                }}\n                textProps={{\n                  color:'flashColor'\n                }}\n                text={`If your yield bearing token de-pegs in value by more than 10%, claim up to 90% of your loss by swapping your yield bearing token for a claim payment.`}\n              >\n                <ExtLink\n                  ml={1}\n                  fontWeight={500}\n                  color={'primary'}\n                  fontSize={'15px'}\n                  hoverColor={'primary'}\n                  href={'https://nexusmutual.io/pages/YieldTokenCoverv1.0.pdf'}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    Read More\n                    <Icon\n                      ml={1}\n                      size={'0.9em'}\n                      color={'primary'}\n                      name={'OpenInNew'}\n                    />\n                    .\n                  </Flex>\n                </ExtLink>\n              </IconBox>\n          }\n          {\n            this.state.selectedAction === 'deposit' ? (\n              <Flex\n                width={1}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Flex\n                  mb={1}\n                  width={1}\n                  flexDirection={'row'}\n                  justifyContent={'space-between'}\n                >\n                  {\n                    Object.keys(this.state.steps).map( stepIndex => (\n                      <Link\n                        style={{\n                          flexBasis:'0',\n                          flex:'1 1 0px',\n                          textDecoration:'none',\n                          cursor:this.state.step>=stepIndex ? 'pointer' : 'default'\n                        }}\n                        fontSize={2}\n                        textAlign={'center'}\n                        key={`step_${stepIndex}`}\n                        color={ this.state.step>=stepIndex ? 'primary' : 'cellText' }\n                        hoverColor={ this.state.step>=stepIndex ? 'primary' : 'cellText' }\n                        activeColor={ this.state.step>=stepIndex ? 'primary' : 'cellText' }\n                      >\n                        {this.state.steps[stepIndex]}\n                      </Link>\n                    ) )\n                  }\n                </Flex>\n                <Flex\n                  mb={2}\n                  width={1}\n                  flexDirection={'column'}\n                >\n                  <Progress\n                    style={{\n                      width:'100%',\n                      height:'15px'\n                    }}\n                    value={(1/Object.keys(this.state.steps).length)*this.state.step}\n                  />\n                </Flex>\n                {\n                  !this.state.selectedToken || !this.state.tokenBalance ? (\n                    <FlexLoader\n                      flexProps={{\n                        mt:2,\n                        flexDirection:'row'\n                      }}\n                      loaderProps={{\n                        size:'25px',\n                      }}\n                      textProps={{\n                        ml:2\n                      }}\n                      text={'Loading assets...'}\n                    />\n                  ) : this.state.coverId ? (\n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <IconBox\n                        cardProps={{\n                          mt:1,\n                        }}\n                        icon={'DoneAll'}\n                        iconProps={{\n                          color:this.props.theme.colors.transactions.status.completed\n                        }}\n                        text={`You have successfully bought your Cover! Your Cover ID is <strong>${this.state.coverId}</strong>`}\n                      />\n                      <Link\n                        mt={2}\n                        color={'link'}\n                        hoverColor={'primary'}\n                        onClick={this.reset.bind(this)}\n                      >\n                        Get New Quote\n                      </Link>\n                    </Flex>\n                  ) : !this.state.quote ? (\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Box\n                        width={1}\n                      >\n                        <Text mb={1}>\n                          Select Token to Cover:\n                        </Text>\n                        <AssetSelector\n                          {...this.props}\n                          id={'token-from'}\n                          showBalance={false}\n                          isSearchable={false}\n                          selectedToken={this.state.selectedToken}\n                          onChange={this.changeSelectedToken.bind(this)}\n                          availableTokens={this.props.toolProps.availableTokens}\n                        />\n                      </Box>\n                      <Box\n                        mt={2}\n                        width={1}\n                      >\n                        <Flex\n                          mb={1}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                        >\n                          <Text>\n                            Select Payment Asset:\n                          </Text>\n                          <Tooltip\n                            placement={'top'}\n                            message={`This is the asset that you will use as payment method for the coverage premium`}\n                          >\n                            <Icon\n                              ml={1}\n                              size={'1em'}\n                              name={\"Info\"}\n                              color={'cellTitle'}\n                            />\n                          </Tooltip>\n                        </Flex>\n                        <AssetSelector\n                          {...this.props}\n                          showBalance={false}\n                          selectedToken={this.state.selectedUnderlying}\n                          onChange={this.changeSelectedUnderlying.bind(this)}\n                          availableTokens={this.state.tokenConfig.underlying}\n                        />\n                      </Box>\n                      {\n                        this.functionsUtil.BNify(this.state.maxCapacity).gt(0) ? (\n                          <Box\n                            width={1}\n                          >\n                            <Box\n                              mt={2}\n                              width={1}\n                            >\n                              <Text\n                                mb={1}\n                              >\n                                How much do you want to cover?\n                              </Text>\n                              <Input\n                                min={0}\n                                step={1}\n                                width={'100%'}\n                                type={\"number\"}\n                                required={true}\n                                height={'3.4em'}\n                                borderRadius={2}\n                                fontWeight={500}\n                                borderColor={'cardBorder'}\n                                backgroundColor={'cardBg'}\n                                boxShadow={'none !important'}\n                                value={this.state.amountValue}\n                                onChange={this.changeAmount.bind(this)}\n                                border={`1px solid ${this.props.theme.colors.divider}`}\n                                placeholder={`Insert ${this.state.selectedUnderlying.toUpperCase()} amount`}\n                              />\n                              <Flex\n                                width={1}\n                                maxWidth={'100%'}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'flex-end'}\n                              >\n                                <Link\n                                  mt={1}\n                                  fontSize={1}\n                                  fontWeight={3}\n                                  color={'dark-gray'}\n                                  textAlign={'right'}\n                                  hoverColor={'copyColor'}\n                                  onClick={ (e) => this.setMaxCoverAmount() }\n                                  style={{\n                                    maxWidth:'100%',\n                                    overflow:'hidden',\n                                    whiteSpace:'nowrap',\n                                    textOverflow:'ellipsis'\n                                  }}\n                                >\n                                  Max Available: {this.state.maxCapacity.toFixed(this.props.isMobile ? 2 : 4)} {this.state.selectedUnderlying}\n                                </Link>\n                              </Flex>\n                            </Box>\n                            <Box\n                              mt={2}\n                              width={1}\n                            >\n                              <Text\n                                mb={1}\n                              >\n                                For how many days?\n                              </Text>\n                              <Input\n                                min={0}\n                                width={'100%'}\n                                type={\"number\"}\n                                required={true}\n                                height={'3.4em'}\n                                borderRadius={2}\n                                fontWeight={500}\n                                borderWidth={'1px'}\n                                borderStyle={'solid'}\n                                backgroundColor={'cardBg'}\n                                boxShadow={'none !important'}\n                                value={this.state.periodValue}\n                                placeholder={'Insert days of coverage'}\n                                onChange={this.changePeriod.bind(this)}\n                                borderColor={this.state.periodValid ? 'cardBorder' : 'red'}\n                              />\n                              {\n                                !this.state.periodValid && (\n                                  <Text\n                                    my={1}\n                                    fontSize={2}\n                                    color={'red'}\n                                  >\n                                    Enter a period between 30 and 365 days!\n                                  </Text>\n                                )\n                              }\n                              <Flex\n                                mt={2}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'space-between'}\n                              >\n                                {\n                                  Object.keys(this.state.periodOptions).map( period => {\n                                    const periodInfo = this.state.periodOptions[period];\n                                    const isActive = this.state.selectedPeriod===period;\n                                    const width = (1/Object.keys(this.state.periodOptions).length)-0.01;\n                                    return (\n                                      <DashboardCard\n                                        cardProps={{\n                                          p:2,\n                                          width:width,\n                                        }}\n                                        isActive={isActive}\n                                        isInteractive={true}\n                                        key={`coverPeriod_${period}`}\n                                        handleClick={e => this.selectPeriod(period)}\n                                      >\n                                        <Text\n                                          fontSize={2}\n                                          fontWeight={3}\n                                          textAlign={'center'}\n                                          color={this.props.isActive ? 'copyColor' : 'legend'}\n                                        >\n                                          {periodInfo.label}\n                                        </Text>\n                                      </DashboardCard>\n                                    );\n                                  })\n                                }\n                              </Flex>\n                            </Box>\n                            <Flex\n                              mt={2}\n                              width={1}\n                              justifyContent={'center'}\n                            >\n                              <ButtonLoader\n                                buttonProps={{\n                                  my:2,\n                                  mx:[0, 2],\n                                  size:'medium',\n                                  borderRadius:4,\n                                  mainColor:'blue',\n                                  disabled:(!this.state.amountValid || !this.state.selectedUnderlying || !this.state.periodValue || !this.state.periodValid)\n                                }}\n                                buttonText={'GET QUOTE'}\n                                isLoading={this.state.loading}\n                                handleClick={ e => this.getQuote(e) }\n                              />\n                            </Flex>\n                          </Box>\n                        ) : (\n                          <IconBox\n                            cardProps={{\n                              mt:3\n                            }}\n                            icon={'MoneyOff'}\n                            iconProps={{\n                              color:'cellText'\n                            }}\n                            text={`Coverage for ${this.state.selectedToken} is not available at the moment.`}\n                          />\n                        )\n                      }\n                    </Flex>\n                  ) : (\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Text\n                        mb={2}\n                        fontSize={3}\n                        fontWeight={3}\n                        color={'primary'}\n                      >\n                        Cover Summary:\n                      </Text>\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          mb:2,\n                          px:3\n                        }}\n                        isActive={false}\n                        isInteractive={false}\n                      >\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Protocol:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          Idle Finance\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Yield Token:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.selectedToken}\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Cover Amount:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.amountValue} {this.state.selectedUnderlying}\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Cover Period:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.periodValue} days\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Cover Price:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.coverCost.toFixed(6)} {this.state.selectedUnderlying}\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Yearly Cost:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.yearlyCost.toFixed(2)}%\n                        </Text>\n                      </DashboardCard>\n                      <Flex\n                        mt={2}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        {\n                          this.functionsUtil.BNify(this.state.tokenBalance).lt(this.functionsUtil.BNify(this.state.quote.price)) ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mb:3\n                              }}\n                            >\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Icon\n                                  size={'2em'}\n                                  name={'MoneyOff'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mt={1}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You don't have enough {this.state.selectedUnderlying} in your wallet.\n                                </Text>\n                                <Link\n                                  mt={1}\n                                  color={'link'}\n                                  hoverColor={'primary'}\n                                  onClick={this.reset.bind(this)}\n                                >\n                                  Get New Quote\n                                </Link>\n                              </Flex>\n                            </DashboardCard>\n                          ) : !this.state.tokenApproved ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mb:3\n                              }}\n                            >\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Icon\n                                  size={'2em'}\n                                  name={'MoneyOff'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mb={2}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  To buy the coverage you need to approve the Smart-Contract.\n                                </Text>\n                                <ExecuteTransaction\n                                  {...this.props}\n                                  parentProps={{\n                                    width:1,\n                                    alignItems:'center',\n                                    justifyContent:'center'\n                                  }}\n                                  Component={Button}\n                                  componentProps={{\n                                    fontSize:3,\n                                    fontWeight:3,\n                                    size:'medium',\n                                    width:[1,1/2],\n                                    borderRadius:4,\n                                    value:'Approve',\n                                    mainColor:'deposit'\n                                  }}\n                                  action={'Approve'}\n                                  methodName={'approve'}\n                                  callback={this.approveSucceeded.bind(this)}\n                                  contractName={this.state.selectedUnderlyingConfig.name}\n                                  params={[this.props.contractInfo.address,this.props.web3.utils.toTwosComplement('-1')]}\n                                />\n                                <Link\n                                  mt={1}\n                                  color={'link'}\n                                  hoverColor={'primary'}\n                                  onClick={this.reset.bind(this)}\n                                >\n                                  Get New Quote\n                                </Link>\n                              </Flex>\n                            </DashboardCard>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <ExecuteTransaction\n                                {...this.props}\n                                parentProps={{\n                                  width:1,\n                                  alignItems:'center',\n                                  justifyContent:'center'\n                                }}\n                                Component={Button}\n                                componentProps={{\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  size:'medium',\n                                  width:[1,1/2],\n                                  borderRadius:4,\n                                  mainColor:'deposit',\n                                  value:'Buy Coverage',\n                                  disabled:this.state.buttonDisabled\n                                }}\n                                action={'Buy Coverage'}\n                                methodName={'buyCover'}\n                                value={this.state.transactionValue}\n                                params={this.state.transactionParams}\n                                contractName={this.props.contractInfo.name}\n                                callback={this.buyCoverTransactionSucceeded.bind(this)}\n                              />\n                              <Link\n                                mt={1}\n                                color={'link'}\n                                hoverColor={'primary'}\n                                onClick={this.reset.bind(this)}\n                              >\n                                Get New Quote\n                              </Link>\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                    </Flex>\n                  )\n                }\n              </Flex>\n            ) : this.state.selectedAction === 'claim' && (\n              <Box\n                width={1}\n              >\n                {\n                  this.state.claimableCovers.length>0 ? (\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Text mb={1}>\n                        Select Cover:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        isSearchable={false}\n                        name={'claimable_covers'}\n                        options={this.state.claimableCovers}\n                        onChange={this.selectCoverToClaim.bind(this)}\n                        defaultValue={this.state.defaultClaimableCover}\n                      />\n                      {\n                        this.state.selectedCoverToClaim.claimId ? (\n                          <IconBox\n                            cardProps={{\n                              mt:2,\n                            }}\n                            icon={'DoneAll'}\n                            iconProps={{\n                              color:this.props.theme.colors.transactions.status.completed\n                            }}\n                            text={`You've successfully claimed <strong>${this.state.selectedCoverToClaim.claimedAmount.toFixed(4)} ${this.state.selectedCoverToClaim.coverAsset}</strong> for this Cover!`}\n                          />\n                        ) : (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mt:3,\n                                mb:1\n                              }}\n                            >\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Icon\n                                  size={'2em'}\n                                  color={'cellText'}\n                                  name={'FileUpload'}\n                                />\n                                <Text\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You can Claim up to <strong>{this.state.selectedCoverToClaim.claimableAmount.toFixed(4)} {this.state.selectedCoverToClaim.coverAsset}</strong> for this Cover!\n                                </Text>\n                                <Text\n                                  fontSize={1}\n                                  color={'alert'}\n                                  textAlign={'center'}\n                                >\n                                  Keep in mind that the cover becomes inactive once any amount of tokens are claimed.\n                                </Text>\n                              </Flex>\n                            </DashboardCard>\n                            <SendTxWithBalance\n                              error={null}\n                              {...this.props}\n                              permitEnabled={false}\n                              approveEnabled={true}\n                              action={'Claim Token'}\n                              tokenConfig={this.state.tokenConfig}\n                              contractInfo={this.props.contractInfo}\n                              buttonDisabled={this.state.claimButtonDisabled}\n                              callback={this.claimTransactionSucceeded.bind(this)}\n                              changeInputCallback={this.claimInputChange.bind(this)}\n                              contractApproved={this.yieldTokenApproveSucceeded.bind(this)}\n                              getTransactionParams={this.getClaimTransactionParams.bind(this)}\n                              approveDescription={'To claim your tokens you need to approve the Smart-Contract.'}\n                              tokenBalance={this.functionsUtil.BNify(this.state.yieldTokenBalance).gt(this.state.selectedCoverToClaim.maxCoveredAmount) ? this.state.selectedCoverToClaim.maxCoveredAmount : this.state.yieldTokenBalance }\n                            >\n                              <DashboardCard\n                                cardProps={{\n                                  p:3,\n                                  mt:2\n                                }}\n                              >\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                >\n                                  <Icon\n                                    name={'MoneyOff'}\n                                    color={'cellText'}\n                                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                  />\n                                  <Text\n                                    mt={1}\n                                    fontSize={2}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    You don't have any {this.state.selectedToken} in your wallet.\n                                  </Text>\n                                </Flex>\n                              </DashboardCard>\n                            </SendTxWithBalance>\n                          </Flex>\n                        )\n                      }\n                    </Flex>\n                  ) : (\n                    <IconBox\n                      cardProps={{\n                        mt:1,\n                      }}\n                      icon={'Warning'}\n                      iconProps={{\n                        color:'cellText'\n                      }}\n                      text={`You cannot submit any Claim for your Covers.`}\n                    />\n                  )\n                }\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default NexusMutual;\n","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Box, Flex, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass TokenWrapper extends Component {\n\n  state = {\n    action:null,\n    infoBox:null,\n    balanceDest:null,\n    tokenConfig:null,\n    balanceStart:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    approveEnabled:true,\n    approveDescription:null,\n    showTokenWrapperEnabled:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const actionChanged = (prevState.action !== this.state.action) || (this.props.action !== prevProps.action);\n    const startContractChanged = JSON.stringify(this.props.startContract) !== JSON.stringify(prevProps.startContract);\n    const destContractChanged = JSON.stringify(this.props.destContract) !== JSON.stringify(prevProps.destContract);\n    if (actionChanged || startContractChanged || destContractChanged){\n      this.loadData();\n    }\n  }\n\n  async loadData(){\n    const action = this.props.action || this.state.action || 'wrap';\n    this.setState({\n      action\n    },() => {\n      this.loadBalance();\n      this.updateActionData();\n    });\n  }\n\n  async getTokenBalance(contractInfo){\n\n    if (!contractInfo){\n      return false;\n    }\n\n    let tokenBalance = null;\n    switch (contractInfo.name){\n      case 'ETH':\n        tokenBalance = await this.functionsUtil.getETHBalance(this.props.account);\n      break;\n      default:\n        // Init Contract\n        await this.props.initContract(contractInfo.name,contractInfo.address,contractInfo.abi);\n        tokenBalance = await this.functionsUtil.getTokenBalance(contractInfo.name,this.props.account);\n      break;\n    }\n\n    tokenBalance = tokenBalance || this.functionsUtil.BNify(0);\n\n    return tokenBalance;\n  }\n\n  async loadBalance(){\n\n    if (!this.props.toolProps.startContract || !this.props.toolProps.destContract){\n      return false;\n    }\n\n    // Load Balances\n    const [\n      balanceDest,\n      balanceStart\n    ] = await Promise.all([\n      this.getTokenBalance(this.props.toolProps.destContract),\n      this.getTokenBalance(this.props.toolProps.startContract)\n    ]);\n\n    const tokenBalance = this.state.action === 'wrap' ? balanceStart : balanceDest;\n    // console.log('loadBalance',this.props.toolProps.startContract,parseFloat(balanceStart),this.props.toolProps.destContract,parseFloat(balanceDest));\n\n    this.setState({\n      balanceDest,\n      balanceStart,\n      tokenBalance\n    });\n  }\n\n  updateActionData(){\n    let infoBox = null;\n    let tokenConfig = null;\n    let tokenBalance = null;\n    let selectedToken = null;\n    let approveEnabled = true;\n    let approveDescription = null;\n\n    switch (this.state.action){\n      case 'wrap':\n        approveEnabled = true;\n        tokenBalance = this.state.balanceStart;\n        tokenConfig = this.props.toolProps.startContract;\n        selectedToken = this.props.toolProps.startContract.name;\n        approveDescription = `To Mint new ${this.props.toolProps.destContract.name} you need to approve the Smart-Contract first`;\n        infoBox = {\n          icon:'FileDownload',\n          // iconProps:{\n          //   color:this.props.theme.colors.transactions.action.deposit\n          // },\n          text:`Wrap your ${this.props.toolProps.startContract.name} and get ${this.props.toolProps.destContract.name}`\n        };\n      break;\n      case 'unwrap':\n        selectedToken = this.props.toolProps.destContract.name;\n        approveEnabled = false;\n        tokenBalance = this.state.balanceDest;\n        tokenConfig = this.props.toolProps.destContract;\n        approveDescription = `To withdraw your ${this.props.toolProps.startContract.name} you need to approve the Smart-Contract first`;\n        infoBox = {\n          icon:'FileUpload',\n          // iconProps:{\n          //   color:this.props.theme.colors.transactions.action.redeem\n          // },\n          text:`Unwrap your ${this.props.toolProps.destContract.name} and get back ${this.props.toolProps.startContract.name}`\n        };\n      break;\n      default:\n      break;\n    }\n\n    this.setState({\n      infoBox,\n      tokenConfig,\n      tokenBalance,\n      selectedToken,\n      approveEnabled,\n      approveDescription\n    },() => {\n      this.loadBalance();\n    });\n  }\n\n  setAction(action){\n    this.setState({\n      action\n    });\n  }\n\n  transactionSucceeded(tx,amount,params){\n    let infoBox = null;\n\n    switch (this.state.action){\n      case 'wrap':\n        const mintLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.destContract.address.toLowerCase() ) : null;\n        let mintedAmount = mintLog ? parseInt(mintLog.data,16) : amount;\n        mintedAmount = this.functionsUtil.fixTokenDecimals(mintedAmount,this.state.tokenConfig.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have received <strong>${mintedAmount.toFixed(4)} ${this.props.toolProps.destContract.name}</strong>`\n        }\n      break;\n      case 'unwrap':\n        const withdrawLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.destContract.address.toLowerCase() ) : null;\n        let withdrawnAmount = withdrawLog ? parseInt(withdrawLog.data,16) : amount;\n        withdrawnAmount = this.functionsUtil.fixTokenDecimals(withdrawnAmount,this.state.tokenConfig.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have received <strong>${withdrawnAmount.toFixed(4)} ${this.props.toolProps.startContract.name}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    // Update balances\n    this.loadBalance();\n\n    this.setState({\n      infoBox\n    });\n  }\n\n  getTransactionParams(amount){\n    const params = {};\n    switch (this.state.action){\n      case 'wrap':\n        params.value = amount;\n        params.methodParams = [];\n        params.methodName = this.props.toolProps.startContract.wrapMethod;\n      break;\n      case 'unwrap':\n        params.value = null;\n        params.methodParams = [amount];\n        params.methodName = this.props.toolProps.destContract.unwrapMethod;\n      break;\n      default:\n      break;\n    }\n    return params;\n  }\n\n  render() {\n\n    const fullWidth = !!this.props.fullWidth;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        mt={[2,fullWidth ? 2 : 3]}\n      >\n        <Flex\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n          width={[1,fullWidth ? 1 : 0.36]}\n        >\n          {\n            !this.props.account ? (\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mt:3\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                    name={'Input'}\n                    color={'cellText'}\n                  />\n                  <Text\n                    mt={[1,2]}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Please connect with your wallet interact with Idle.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:2,\n                      width:[1,1/2]\n                    }}\n                    handleClick={this.props.connectAndValidateAccount}\n                  >\n                    Connect\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            ) : (\n              <Box\n                width={1}\n              >\n                {\n                  !this.props.action && (\n                    <Flex\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        mb={2}\n                      >\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <CardIconButton\n                          {...this.props}\n                          cardProps={{\n                            px:3,\n                            py:3,\n                            width:0.48\n                          }}\n                          text={'Wrap'}\n                          iconColor={'deposit'}\n                          icon={'ArrowDownward'}\n                          iconBgColor={'#ced6ff'}\n                          isActive={ this.state.action === 'wrap' }\n                          handleClick={ e => this.setAction('wrap') }\n                        />\n                        <CardIconButton\n                          {...this.props}\n                          cardProps={{\n                            px:3,\n                            py:3,\n                            width:0.48\n                          }}\n                          text={'Unwrap'}\n                          iconColor={'redeem'}\n                          icon={'ArrowUpward'}\n                          iconBgColor={'#ceeff6'}\n                          isActive={ this.state.action === 'unwrap' }\n                          handleClick={ e => this.setAction('unwrap') }\n                        />\n                      </Flex>\n                    </Flex>\n\n                  )\n                }\n                <Box\n                  width={1}\n                  my={fullWidth ? 2 : 3}\n                >\n                  {\n                    this.state.tokenBalance!==null ? (\n                      <SendTxWithBalance\n                        {...this.props}\n                        approveEnabled={false}\n                        action={this.state.action}\n                        infoBox={this.state.infoBox}\n                        tokenConfig={this.state.tokenConfig}\n                        tokenBalance={this.state.tokenBalance}\n                        contractInfo={this.props.toolProps.destContract}\n                        callback={this.transactionSucceeded.bind(this)}\n                        approveDescription={this.state.approveDescription}\n                        // changeInputCallback={this.changeInputCallback.bind(this)}\n                        getTransactionParams={this.getTransactionParams.bind(this)}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedToken} to {this.state.action} in your wallet.\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </SendTxWithBalance>\n                    ) : (\n                      <Flex\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading Balance...'}\n                        />\n                      </Flex>\n                    )\n                  }\n                </Box>\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenWrapper;","import theme from '../theme';\nimport { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport AssetField from '../AssetField/AssetField';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass PortfolioDonut extends Component {\n  state = {\n    chartData:null,\n    totalFunds:null,\n    parentWidth:null,\n    selectedToken:null,\n    selectedTokenConfig:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentWillUnmount() {\n    \n  }\n\n  async componentDidMount(){\n    this.loadPortfolio();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  async loadPortfolio() {\n\n    const portfolio = {};\n    let totalFunds = this.functionsUtil.BNify(0);\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.availableTokens),async (token) => {\n      const tokenConfig = this.props.availableTokens[token];\n      const idleTokenBalance = await this.functionsUtil.getTokenBalance(tokenConfig.idle.token,this.props.account);\n\n      if (idleTokenBalance){\n        const tokenPrice = await this.functionsUtil.getIdleTokenPrice(tokenConfig);\n        const tokenBalance = await this.functionsUtil.convertTokenBalance(idleTokenBalance.times(tokenPrice),token,tokenConfig,isRisk);\n\n        if (tokenBalance.gt(0)){\n          portfolio[token] = tokenBalance;\n\n          // Increment total balance\n          totalFunds = totalFunds.plus(tokenBalance);\n        }\n      }\n    });\n\n    // Add Gov Tokens\n    const govTokensUserBalances = await this.functionsUtil.getGovTokensUserBalances(this.props.account,this.props.availableTokens,'DAI',null,true);\n    if (govTokensUserBalances){\n      Object.keys(govTokensUserBalances).forEach( govToken => {\n        const govTokenBalance = this.functionsUtil.BNify(govTokensUserBalances[govToken]);\n        portfolio[govToken] = govTokenBalance;\n        totalFunds = totalFunds.plus(govTokenBalance);\n      });\n    }\n\n    const chartData = [];\n\n    Object.keys(portfolio).forEach(token => {\n      const tokenBalance = portfolio[token];\n      if (tokenBalance.gt(0)){\n        const tokenPercentage = tokenBalance.div(totalFunds).times(100);\n        let tokenColorHsl = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'color','hsl']);\n        tokenColorHsl = tokenColorHsl ? tokenColorHsl.join(',') : '0,0%,0%';\n        chartData.push({\n          id:token,\n          color:'hsl('+tokenColorHsl+')',\n          value:Math.round(tokenPercentage),\n          label:token.substr(0,1).toUpperCase()+token.substr(1),\n        });\n      }\n    });\n\n    this.setState({\n      portfolio,\n      chartData,\n      totalFunds\n    });\n  }\n\n  render() {\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth:0,\n      cornerRadius:0,\n      innerRadius:0.65,\n      motionDamping:15,\n      motionStiffness:90,\n      colors:d => d.color,\n      tooltipFormat: v => v+'%',\n      sliceLabel: d => {\n        if (parseFloat(d.value)>=5){\n          return d.value+'%';\n        } else {\n          return null;\n        }\n      },\n      radialLabel: d => {\n        return null;//Object.keys(this.props.availableTokens).indexOf(d.label.toUpperCase());\n      },\n      theme:{\n        tooltip: {\n          container: {\n            display: 'none'\n          },\n        },\n        labels:{\n          text:{\n            fontSize:16,\n            fontWeight:500,\n            fontFamily: theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      radialLabelsLinkColor:{ from: 'color' },\n      radialLabelsLinkOffset:-parseInt(this.state.parentWidth*0.2),\n      margin: this.props.isMobile ? { top: 15, right: 25, bottom: 30, left: 25 } : { top: 30, right: 50, bottom: 60, left: 50 },\n      onMouseEnter:(data, e) => {\n        const selectedToken = data.id;\n        const selectedTokenConfig = selectedToken ? this.props.availableTokens[selectedToken] || this.functionsUtil.getGlobalConfig(['stats','tokens',selectedToken]) : null;\n        this.setState({\n          selectedToken,\n          selectedTokenConfig\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setState({\n          selectedToken:null,\n          selectedTokenConfig:null\n        });\n      },\n      legends:[\n        {\n          itemWidth: 60,\n          itemHeight: 18,\n          translateY: this.props.isMobile ? 25 : 50,\n          symbolSize: 10,\n          anchor: 'bottom',\n          direction: 'row',\n          itemTextColor: theme.colors.legend,\n          symbolShape: 'circle',\n          effects: [\n            {\n              on: 'hover',\n              style: {\n                itemTextColor: '#000'\n              }\n            }\n          ]\n        }\n      ]\n    };\n\n    const selectedToken = this.state.selectedToken !== null && this.state.portfolio[this.state.selectedToken] ? this.state.portfolio[this.state.selectedToken] : false;\n    const strategyIcon = this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'icon']);\n    const convertToken = this.state.selectedToken ? this.functionsUtil.getGlobalConfig(['stats','tokens',this.state.selectedToken,'conversionRateField']) : false;\n\n    return (\n      <Flex\n        width={1}\n      >\n        { \n          (this.state.totalFunds || selectedToken) && \n            <Flex\n              zIndex={0}\n              top={['32%','35%']}\n              left={['23%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              width={['55%','46%']}\n              position={'absolute'}\n              height={['40%','35%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                selectedToken ? (\n                  <>\n                    <AssetField\n                      fieldInfo={{\n                        name:'icon',\n                        props:{\n                          mb:1,\n                          height:'2.2em'\n                        }\n                      }}\n                      token={this.state.selectedToken}\n                      tokenConfig={this.state.selectedTokenConfig}\n                    />\n                    <SmartNumber\n                      unitProps={{\n                        ml:2,\n                        fontSize:4,\n                        fontWeight:3\n                      }}\n                      decimals={2}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      fontWeight={[3,4]}\n                      unit={ convertToken ? '$' : null}\n                      number={this.state.portfolio[this.state.selectedToken]}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      {this.state.selectedToken}\n                    </Text>\n                  </>\n                ) : (\n                  <>\n                    <Image\n                      mb={1}\n                      height={'2.2em'}\n                      src={strategyIcon}\n                    />\n                    <SmartNumber\n                      unit={'$'}\n                      unitProps={{\n                        ml:2,\n                        fontSize:4,\n                        fontWeight:3\n                      }}\n                      decimals={2}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      fontWeight={[3,4]}\n                      number={this.state.totalFunds}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      Total funds\n                    </Text>\n                  </>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          {...chartProps}\n          showLoader={true}\n          data={this.state.chartData}\n          parentId={this.props.parentId}\n          parentIdHeight={this.props.parentId}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default PortfolioDonut;\n","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport { Card, Flex, Image, Text } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\n\nclass EarningsEstimation extends Component {\n  state = {\n    tokensEarnings:null,\n    estimationStepsPerc:null,\n    estimationStepsOptions:null,\n    estimationStepsDefaultOption:null,\n    estimationSteps:{\n      0:{\n        'Month':{\n          perc:1/12,\n          width:1/3\n        },\n        '2 months':{\n          perc:1/6,\n          width:1/3\n        },\n        '3 months':{\n          perc:1/4,\n          width:1/3,\n          optionName:'3M'\n        }\n      },\n      25:{\n        '3 months':{\n          perc:3/12,\n          width:3/12\n        },\n        '8 months':{\n          perc:8/12,\n          width:5/12\n        },\n        'Year':{\n          perc:1,\n          width:4/12,\n          optionName:'1Y'\n        }\n      },\n      90:{\n        'Year':{\n          perc:1,\n          width:1/3,\n        },\n        '2 Years':{\n          perc:2,\n          width:1/3,\n        },\n        '5 Years':{\n          perc:5,\n          width:3/5,\n          optionName:'5Y'\n        }\n      }\n    }\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  setEstimationStepsPerc(estimationStepsPerc){\n    this.setState({\n      estimationStepsPerc\n    });\n  }\n\n  async loadEarnings(){\n    let stepsCount = {};\n    let tokensEarnings = {};\n    // let estimationStepsPerc = 0;\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const aggregatedEarnings = {\n      earnings:this.functionsUtil.BNify(0),\n      amountLent:this.functionsUtil.BNify(0),\n      earningsYear:this.functionsUtil.BNify(0),\n    };\n\n    await this.functionsUtil.asyncForEach(this.props.enabledTokens,async (token) => {\n      const tokenConfig = this.props.availableTokens[token];\n      const amountDeposited = await this.functionsUtil.getAmountDeposited(tokenConfig,this.props.account);\n\n      const [amountLent,avgBuyPrice,idleTokenPrice] = await Promise.all([\n        this.functionsUtil.convertTokenBalance(amountDeposited,token,tokenConfig,isRisk),\n        this.functionsUtil.getAvgBuyPrice([token],this.props.account),\n        this.functionsUtil.getIdleTokenPrice(tokenConfig)\n      ]);\n\n      const earningsPerc = idleTokenPrice.div(avgBuyPrice[token]).minus(1);\n      const earnings = amountLent.times(earningsPerc);\n\n      let earningsYear = 0;\n      let tokenAPY = 0;\n      const tokenAprs = await this.functionsUtil.getTokenAprs(tokenConfig);\n      if (tokenAprs && tokenAprs.avgApr !== null){\n        tokenAPY = tokenAprs.avgApy;\n        earningsYear = amountLent.times(tokenAPY.div(100));\n      }\n\n      const earningsPercStep = Math.floor(earnings.div(earningsYear).times(100));\n      \n      const possibleSteps = Object.keys(this.state.estimationSteps).filter(perc => perc<=earningsPercStep);\n      const maxPossibleStep = parseInt(possibleSteps.pop());\n\n      stepsCount[maxPossibleStep] = stepsCount[maxPossibleStep] ? stepsCount[maxPossibleStep]+1 : 1;\n\n      if (!this.functionsUtil.BNify(amountLent).isNaN() && !this.functionsUtil.BNify(idleTokenPrice).isNaN() && !this.functionsUtil.BNify(earnings).isNaN() && !this.functionsUtil.BNify(earningsYear).isNaN()){\n        tokensEarnings[token] = {\n          earnings,\n          amountLent,\n          earningsYear,\n          idleTokenPrice\n        };\n\n        // const earningsUSD = await this.functionsUtil.convertTokenBalance(earningsYearings,token,tokenConfig,isRisk);\n        // const amountLentUSD = await this.functionsUtil.convertTokenBalance(amountLent,token,tokenConfig,isRisk);\n        // const earningsYearUSD = await this.functionsUtil.convertTokenBalance(earningsYear,token,tokenConfig,isRisk);\n\n        aggregatedEarnings.earnings = aggregatedEarnings.earnings.plus(earnings);\n        aggregatedEarnings.amountLent = aggregatedEarnings.amountLent.plus(amountLent);\n        aggregatedEarnings.earningsYear = aggregatedEarnings.earningsYear.plus(earningsYear);\n      }\n    });\n\n    const maxCountStep = Object.keys(stepsCount).reduce( (maxCountStep,step) => {\n      const count = stepsCount[step];\n      if (count>maxCountStep.count){\n        maxCountStep.step = parseInt(step);\n        maxCountStep.count = parseInt(count);\n      }\n      return maxCountStep;\n    },{\n      step:0,\n      count:0\n    });\n\n    const estimationStepsPerc = maxCountStep.step || parseInt(Object.keys(this.state.estimationSteps)[1]);\n\n    const orderedTokensEarnings = {};\n    this.props.enabledTokens.forEach( token => {\n      if (tokensEarnings[token]){\n        orderedTokensEarnings[token] = tokensEarnings[token];\n      }\n    });\n\n    tokensEarnings = orderedTokensEarnings;\n\n    // Add USD aggregated earnings\n    if (Object.keys(tokensEarnings).length>1){\n      tokensEarnings['USD'] = aggregatedEarnings;\n    }\n\n    let estimationStepsDefaultOption = null;\n    const estimationStepsOptions = Object.keys(this.state.estimationSteps).map( step => {\n      const estimationStep = Object.values(this.state.estimationSteps[step]).pop();\n      const label = estimationStep.optionName ? estimationStep.optionName : Object.keys(this.state.estimationSteps[step]).pop();\n      const value = parseInt(step);\n      const option = { value, label };\n\n      if (value === estimationStepsPerc){\n        estimationStepsDefaultOption = option;\n      }\n      return option;\n    });\n\n    this.setState({\n      tokensEarnings,\n      estimationStepsPerc,\n      estimationStepsOptions,\n      estimationStepsDefaultOption,\n    });\n  }\n\n  render() {\n\n    if (!this.state.tokensEarnings){\n      return (\n        <FlexLoader\n          flexProps={{\n            flexDirection:'row',\n            minHeight:this.props.height\n          }}\n          loaderProps={{\n            size:'30px'\n          }}\n          textProps={{\n            ml:2\n          }}\n          text={'Loading estimations...'}\n        />\n      );\n    }\n\n    const estimationSteps = this.state.estimationSteps[this.state.estimationStepsPerc] ? this.state.estimationSteps[this.state.estimationStepsPerc] : this.state.estimationSteps[0];\n\n    return (\n      <Card\n        pr={0}\n        my={1}\n        width={1}\n        px={[3,4]}\n        py={[2,3]}\n        boxShadow={1}\n        borderRadius={2}\n        borderColor={'cardBorder'}\n        backgroundColor={'cardBg'}\n      >\n        <Flex\n          mt={2}\n          mb={3}\n          zIndex={9999}\n          justifyContent={'flex-end'}\n        >\n          <Flex\n            zIndex={9999}\n            width={[1,0.2]}\n            flexDirection={'column'}\n          >\n            <GenericSelector\n              innerProps={{\n                p:0,\n                px:1\n              }}\n              name={'estimation-step'}\n              options={this.state.estimationStepsOptions}\n              onChange={ v => this.setEstimationStepsPerc(v) }\n              defaultValue={this.state.estimationStepsDefaultOption}\n            />\n          </Flex>\n        </Flex>\n        {\n          Object.keys(this.state.tokensEarnings).map((token,tokenIndex) => {\n            const tokenConfig = this.props.availableTokens[token];\n            const tokenEarnings = this.state.tokensEarnings[token];\n            const estimationStepPerc = this.functionsUtil.BNify(Object.values(estimationSteps).pop().perc);\n            const finalEarnings = tokenEarnings.earningsYear.times(estimationStepPerc);\n            const cursorPerc = finalEarnings.gt(0) ? Math.min(1,parseFloat(tokenEarnings.earnings.div(finalEarnings))) : 1;\n            const tokenIcon = tokenConfig && tokenConfig.icon ? tokenConfig.icon :`images/tokens/${token}.svg`;\n            const tokenRGBColor = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'color','rgb']).join(',');\n            // console.log(tokenEarnings.earnings.toFixed(10),tokenEarnings.earningsYear.toFixed(10),finalEarnings.toFixed(10),cursorPerc.toFixed(10),estimationStepPerc.toFixed(10));\n            return (\n              <Flex\n                id={`asset-${token}`}\n                flexDirection={'row'}\n                key={`asset-${token}`}\n                borderTop={ token === 'USD' ? `1px solid ${this.props.theme.colors.divider}` : null }\n              >\n                <Flex\n                  width={[1,0.93]}\n                  position={'relative'}\n                >\n                  <Flex\n                    width={1}\n                    height={'100%'}\n                    position={'absolute'}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    <Flex\n                      width={[0.15,0.1]}\n                    >\n                    </Flex>\n                    <Flex\n                      width={[0.85,0.9]}\n                      height={'100%'}\n                      flexDirection={'row'}\n                    >\n                      {\n                        Object.keys(estimationSteps).map((label,estimateIndex) => {\n                          const estimationStep = estimationSteps[label];\n                          const estimationStepEarnings = tokenEarnings.earningsYear.times(this.functionsUtil.BNify(estimationStep.perc));\n                          let estimationStepEarningsFormatted = this.functionsUtil.formatMoney(estimationStepEarnings,this.props.isMobile ? 2 : estimationStepEarnings.lt(1) ? 3 : 2);\n                          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'conversionRateField']);\n                          if (conversionRateField){\n                            estimationStepEarningsFormatted = '$ '+estimationStepEarningsFormatted;\n                          }\n                          return (\n                            <Flex\n                              pr={2}\n                              justifyContent={'flex-end'}\n                              width={estimationStep.width}\n                              pt={ token === 'USD' ? 2 : null }\n                              key={`asset-estimate-${token}-${estimateIndex}`}\n                              borderRight={`1px solid ${this.props.theme.colors.divider}`}\n                            >\n                              {\n                                (token === 'USD' || (estimateIndex === Object.keys(estimationSteps).length-1)) && \n                                  <Text\n                                    fontWeight={3}\n                                    fontSize={[0,'1em']}\n                                    style={{\n                                      wordBreak:'break-all'\n                                    }}\n                                    color={tokenEarnings.earnings.gte(estimationStepEarnings) ? 'copyColor' : 'legend'}\n                                  >\n                                    {estimationStepEarningsFormatted}\n                                  </Text>\n                              }\n                            </Flex>\n                          );\n                        })\n                      }\n                    </Flex>\n                  </Flex>\n                  <Flex\n                    width={1}\n                    zIndex={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                    pt={ token === 'USD' ? ['2em','2.8em'] : '1.4em' }\n                    pb={ tokenIndex<Object.keys(this.state.tokensEarnings).length-1 ? '1em' : 0 }\n                  >\n                    <Flex\n                      width={[0.15,0.1]}\n                      justifyContent={['flex-start','flex-end']}\n                    >\n                      <Text\n                        pr={[0,2]}\n                        fontSize={[0,3]}\n                        fontWeight={[3,4]}\n                      >\n                        {token}\n                      </Text>\n                    </Flex>\n                    <Flex\n                      width={[0.85,0.9]}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      height={['20px','35px']}\n                      justifyContent={'flex-start'}\n                    >\n                      <Flex\n                        height={'100%'}\n                        width={cursorPerc}\n                        backgroundColor={'cardBg'}\n                      >\n                        <Flex\n                          height={'100%'}\n                          width={'100%'}\n                          borderRadius={['0 20px 20px 0','0 35px 35px 0']}\n                          style={{background:`linear-gradient(90deg, rgba(${tokenRGBColor},0) 0%, rgba(${tokenRGBColor},0.1) 30%, rgba(${tokenRGBColor},1) 100%)`}}\n                        ></Flex>\n                      </Flex>\n                      <Flex\n                        pl={2}\n                        width={'auto'}\n                        height={'100%'}\n                        alignItems={'center'}\n                        justifyContent={'flex-start'}\n                      >\n                        <Image src={tokenIcon} height={['1.4em','2.2em']} />\n                      </Flex>\n                      {\n                        <Flex\n                          pl={2}\n                          alignItems={'center'}\n                        >\n                          {\n                            token !== 'USD' ? (\n                              <AssetField\n                                {...this.props}\n                                token={token}\n                                tokenConfig={tokenConfig}\n                                fieldInfo={{\n                                  name:'earningsCounter',\n                                  props:{\n                                    decimals:this.props.isMobile ? 6 : 7,\n                                    maxPrecision:this.props.isMobile ? 9 : 10,\n                                    style:{\n                                      color:this.props.theme.colors.copyColor,\n                                      fontWeight:this.props.isMobile ? 500 : 700,\n                                      fontSize:this.props.isMobile ? '14px' : '22px',\n                                    }\n                                  }\n                                }}\n                              />\n                            ) : (\n                              <TotalEarningsCounter\n                                {...this.props}\n                                decimals={this.props.isMobile ? 6 : 7}\n                                maxPrecision={this.props.isMobile ? 9 : 10}\n                                counterStyle={{\n                                  color:this.props.theme.colors.copyColor,\n                                  fontWeight:this.props.isMobile ? 500 : 700,\n                                  fontFamily:this.props.theme.fonts.sansSerif,\n                                  fontSize:this.props.isMobile ? '14px' : '22px',\n                                }}\n                              />\n                            )\n                          }\n                        </Flex>\n                      }\n                    </Flex>\n                  </Flex>\n                </Flex>\n                {\n                  !this.props.isMobile && \n                    <Flex width={0.07} alignItems={'flex-start'} justifyContent={'flex-end'}>\n                    </Flex>\n                }\n              </Flex>\n            )\n          })\n        }\n        <Flex\n          flexDirection={'row'}\n        >\n          <Flex\n            width={[1,0.93]}\n            position={'relative'}\n          >\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'center'}\n            >\n              <Flex width={[0.15,0.1]}></Flex>\n              <Flex\n                width={[0.85,0.9]}\n                flexDirection={'row'}\n              >\n                {\n                  Object.keys(estimationSteps).map((estimationLabel,estimateIndex) => {\n                    const estimationStep = estimationSteps[estimationLabel];\n                    return (\n                      <Flex\n                        pt={2}\n                        pr={[1,2]}\n                        justifyContent={'flex-end'}\n                        width={estimationStep.width}\n                        key={`estimate-label-${estimateIndex}`}\n                        borderRight={`1px solid ${this.props.theme.colors.divider}`}\n                      >\n                        <Text\n                          fontWeight={3}\n                          fontSize={[0,2]}\n                          color={'legend'}\n                        >\n                          {estimationLabel}\n                        </Text>\n                      </Flex>\n                    );\n                  })\n                }\n              </Flex>\n            </Flex>\n          </Flex>\n          {\n            !this.props.isMobile && \n              <Flex width={0.07} alignItems={'flex-start'} justifyContent={'center'}>\n                <Text fontWeight={4} fontSize={3}></Text>\n              </Flex>\n          }\n        </Flex>\n      </Card>\n    );\n  }\n}\n\nexport default EarningsEstimation;\n","import React, { Component } from 'react';\nimport { Flex, Icon, Text, Image } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass DashboardIconButton extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          pr:2,\n          py:[2,3],\n          pl:[2,3],\n        }}\n        isActive={false}\n        isInteractive={true}\n        handleClick={this.props.handleClick}\n      >\n        <Flex\n          height={'100%'}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'center'}\n        > \n          <Flex\n            px={[1,0]}\n          >\n            {\n              this.props.icon ? (\n                <Icon\n                  name={this.props.icon}\n                  size={this.props.isMobile ? '1.8em' : '3em'}\n                  color={this.props.iconColor ? this.props.iconColor : 'redeem'}\n                />\n              ) : this.props.image && (\n                <Image\n                  src={this.props.image}\n                  width={this.props.isMobile ? '1.8em' : '2.7em'}\n                  height={this.props.isMobile ? '1.8em' : '2.7em'}\n                />\n              )\n            }\n          </Flex>\n          <Flex\n            ml={[2,3]}\n            flexDirection={'column'}\n            alignItems={'flex-start'}\n            justifyContent={'center'}\n          >\n            <Text\n              fontWeight={3}\n              fontSize={[1,3]}\n            >\n              {this.props.title}\n            </Text>\n            <Text\n              fontWeight={2}\n              fontSize={[0,2]}\n              color={'cellText'}\n            >\n              {this.props.text}\n            </Text>\n          </Flex>\n          <Icon\n            align={'center'}\n            color={'cellText'}\n            name={'KeyboardArrowRight'}\n            size={this.props.isMobile ? '1.8em' : '2.5em'}\n          />\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default DashboardIconButton;\n","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetsList from '../AssetsList/AssetsList';\nimport CustomList from '../CustomList/CustomList';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport PortfolioDonut from '../PortfolioDonut/PortfolioDonut';\nimport ActiveCoverages from '../ActiveCoverages/ActiveCoverages';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport PortfolioEquity from '../PortfolioEquity/PortfolioEquity';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport EarningsEstimation from '../EarningsEstimation/EarningsEstimation';\nimport { Flex, Box, Heading, Text, Tooltip, Icon, Loader } from \"rimble-ui\";\nimport DashboardIconButton from '../DashboardIconButton/DashboardIconButton';\nimport TotalBalanceCounter from '../TotalBalanceCounter/TotalBalanceCounter';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\n\n// const env = process.env;\n\nclass StrategyPage extends Component {\n\n  state = {\n    portfolio:null,\n    depositedTokens:[],\n    tokensToMigrate:{},\n    aggregatedValues:[],\n    remainingTokens:null,\n    batchedDeposits:null,\n    portfolioLoaded:false,\n    portfolioLoading:false,\n    availableGovTokens:null,\n    polygonTransactions:null,\n    portfolioEquityStartDate:null,\n    batchedDepositsAvailableTokens:null,\n    portfolioEquityQuickSelection:'week',\n    polygonTransactionsAvailableTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    await this.loadPortfolio();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const availableTokensChanged = JSON.stringify(prevProps.availableTokens) !== JSON.stringify(this.props.availableTokens);\n    if (accountChanged || availableTokensChanged){\n      this.setState({\n        portfolioLoaded:false\n      },() => {\n        this.loadPortfolio();\n      });\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return await this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  setPortfolioEquityQuickSelection(portfolioEquityQuickSelection){\n    this.setStateSafe({\n      portfolioEquityQuickSelection\n    });\n  }\n\n  async loadPortfolio(){\n    const availableTokens = this.props.availableTokens || {};\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n\n    if (this.state.portfolioLoaded || this.state.portfolioLoading || currentNetwork.id === 137){\n      return false;\n    }\n\n    await this.setStateSafe({\n      portfolioLoading:true\n    });\n\n    // Load portfolio if account is set\n    if (this.props.account){\n      const newState = {};\n      const firstBlockNumber = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n      const polygonBridgeConfig = this.functionsUtil.getGlobalConfig(['tools','polygonBridge']);\n\n      // Load data\n      const [\n        batchedDeposits,\n        tokensToMigrate,\n        portfolio,\n        polygonTransactions\n      ] = await Promise.all([\n        // Load claimable batches\n        [],//this.functionsUtil.getBatchedDeposits(this.props.account),\n        // Load tokens to be migrated\n        this.functionsUtil.getTokensToMigrate(this.props.selectedStrategy),\n        // Load portfolio\n        this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account),\n        // Get Polygon deposits\n        polygonBridgeConfig.enabled ? this.functionsUtil.getPolygonBridgeTxs(this.props.account) : null,\n        // Load and process Etherscan Txs\n        this.functionsUtil.getEtherscanTxs(this.props.account,firstBlockNumber,'latest',Object.keys(availableTokens))\n      ]);\n\n      newState.portfolio = portfolio;\n\n      newState.batchedDeposits = batchedDeposits && Object.keys(batchedDeposits).length>0 ? batchedDeposits : null;\n\n      if (newState.batchedDeposits){\n        newState.batchedDepositsAvailableTokens = Object.keys(newState.batchedDeposits).reduce( (batchedDepositsAvailableTokens,token) => {\n          const batchInfo = newState.batchedDeposits[token];\n          const tokenConfig = this.functionsUtil.getGlobalConfig(['tools','batchDeposit','props','availableTokens',token]);\n          if (tokenConfig.strategy === this.props.selectedStrategy){\n            switch (batchInfo.status){\n              case 'pending':\n                tokenConfig.statusIcon = 'Timelapse';\n                tokenConfig.statusIconProps = {\n                  color:this.props.theme.colors.transactions.status.pending\n                };\n              break;\n              case 'executed':\n                tokenConfig.statusIcon = 'Done';\n                tokenConfig.statusIconProps = {\n                  color:this.props.theme.colors.transactions.status.completed\n                };\n              break;\n              default:\n              break;\n            }\n            tokenConfig.token = token;\n            tokenConfig.status = batchInfo.status;\n            tokenConfig.deposited = batchInfo.batchDeposits;\n            tokenConfig.redeemable = batchInfo.batchRedeems;\n            batchedDepositsAvailableTokens[tokenConfig.baseToken] = tokenConfig;\n          }\n          return batchedDepositsAvailableTokens;\n        },{});\n      }\n\n      newState.polygonTransactions = polygonTransactions && polygonTransactions.length>0 ? polygonTransactions : null;\n      if (newState.polygonTransactions){\n        newState.polygonTransactionsAvailableTokens = polygonTransactions.map( (tx) => {\n          const tokenConfig = this.functionsUtil.getGlobalConfig(['tools','polygonBridge','props','availableTokens',tx.tokenSymbol]);\n          let actionIcon = null;\n          switch (tx.action){\n            default:\n            case 'Deposit':\n              actionIcon = 'ArrowDownward';\n            break;\n            case 'Withdraw':\n              actionIcon = 'ArrowUpward';\n            break;\n            case 'Exit':\n              actionIcon = 'Undo';\n            break;\n          }\n          const depositInfo = {\n            actionIcon,\n            amount:tx.value,\n            token:tx.tokenSymbol,\n            action:tx.action.toUpperCase(),\n            bridgeType:tx.bridgeType.toUpperCase(),\n            status:tx.included ? 'Completed' : 'pending',\n            hash:this.functionsUtil.shortenHash(tx.hash),\n            statusIcon:tx.included ? 'Done' : 'Timelapse',\n            actionIconProps:{\n              color:this.props.theme.colors.transactions.action[tx.action.toLowerCase()],\n              bgColor:this.props.theme.colors.transactions.actionBg[tx.action.toLowerCase()]\n            },\n            url:this.functionsUtil.getEtherscanTransactionUrl(tx.hash,tx.networkId),\n            date:this.functionsUtil.strToMoment(parseInt(tx.timeStamp)*1000).format('DD MMM, YYYY'),\n            statusIconProps:{\n              color:tx.included ? this.props.theme.colors.transactions.status.completed : this.props.theme.colors.transactions.status.pending\n            },\n            tokenIcon:tokenConfig.icon || this.functionsUtil.getGlobalConfig(['stats','tokens',tx.tokenSymbol,'icon']) || `images/tokens/${tx.tokenSymbol}.svg`\n          };\n          return depositInfo;\n        });\n      }\n\n      if (portfolio){\n        const depositedTokens = Object.keys(portfolio.tokensBalance).filter(token => ( this.functionsUtil.BNify(portfolio.tokensBalance[token].idleTokenBalance).gt(0) ));\n\n        newState.depositedTokens = depositedTokens;\n\n        const isRisk = this.props.selectedStrategy === 'risk';\n\n        let avgAPY = this.functionsUtil.BNify(0);\n        // let avgScore = this.functionsUtil.BNify(0);\n        let totalAmountLent = this.functionsUtil.BNify(0);\n        // let totalBalanceWithScore = this.functionsUtil.BNify(0);\n\n        await this.functionsUtil.asyncForEach(depositedTokens,async (token) => {\n          const tokenConfig = availableTokens[token];\n\n          const [\n            tokenAprs,\n            // tokenScore,\n            amountLent,\n          ] = await Promise.all([\n            this.functionsUtil.getTokenAprs(tokenConfig),\n            // this.functionsUtil.getTokenScore(tokenConfig,isRisk),\n            this.functionsUtil.getAmountDeposited(tokenConfig,this.props.account)\n          ]);\n\n          const amountLentToken = await this.functionsUtil.convertTokenBalance(amountLent,token,tokenConfig,isRisk);\n\n          const tokenBalance = portfolio.tokensBalance[token].tokenBalance;\n          const tokenWeight = tokenBalance.div(portfolio.totalBalance);\n          const tokenAPY = tokenAprs.avgApy && !this.functionsUtil.BNify(tokenAprs.avgApy).isNaN() ? this.functionsUtil.BNify(tokenAprs.avgApy) : this.functionsUtil.BNify(0);\n\n          if (!tokenAPY.isNaN()){\n            avgAPY = avgAPY.plus(tokenAPY.times(tokenWeight));\n          }\n\n          // if (!tokenScore.isNaN() && tokenScore.gt(0)){\n          //   avgScore = avgScore.plus(tokenScore.times(tokenBalance));\n          //   totalBalanceWithScore = totalBalanceWithScore.plus(tokenBalance);\n          // }\n\n          if (amountLentToken){\n            totalAmountLent = totalAmountLent.plus(amountLentToken);\n          }\n        });\n\n        // if (!totalBalanceWithScore.isNaN() && totalBalanceWithScore.gt(0)){\n        //   avgScore = avgScore.div(totalBalanceWithScore);\n        // }\n\n        // console.log('avgAPY',avgAPY.toFixed());\n\n        // Add gov tokens to earnings\n        const govTokensTotalBalance = await this.functionsUtil.getGovTokensUserTotalBalance(this.props.account,availableTokens,'DAI');\n        const govTokensUserBalance = await this.functionsUtil.getGovTokensUserBalances(this.props.account,availableTokens,null);\n        const govTokensTotalBalanceTooltip = govTokensUserBalance ? Object.keys(govTokensUserBalance).map( govToken => {\n          const balance = govTokensUserBalance[govToken];\n          if (balance.gt(0)){\n            return `+${balance.toFixed(2)} ${govToken}`;\n          } else {\n            return null;\n          }\n        }).filter(v => (v !== null)) : null;\n\n        newState.avgAPY = avgAPY;\n        // newState.avgScore = avgScore;\n        newState.govTokensTotalBalance = govTokensTotalBalance;\n        newState.govTokensTotalBalanceTooltip = govTokensTotalBalanceTooltip;\n      }\n\n      newState.tokensToMigrate = tokensToMigrate;\n      newState.portfolioLoaded = true;\n      newState.portfolioLoading = false;\n\n      const remainingTokens = Object.keys(availableTokens).filter(token => (!newState.depositedTokens.includes(token) && !Object.keys(newState.tokensToMigrate).includes(token)) );\n      newState.remainingTokens = remainingTokens;\n\n      // Portfolio loaded\n      this.setStateSafe(newState);\n    // Show available assets for not logged users\n    } else {\n      this.setStateSafe({\n        tokensToMigrate:{},\n        depositedTokens:[],\n        portfolioLoaded:true,\n        portfolioLoading:false,\n        remainingTokens:Object.keys(availableTokens),\n      });\n    }\n  }\n\n  render(){\n    const viewOnly = this.props.connectorName === 'custom';\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    const govTokens = this.functionsUtil.getGlobalConfig(['govTokens']);\n    const apyLong = this.functionsUtil.getGlobalConfig(['messages','apyLong']);\n    const yieldFarming = this.functionsUtil.getGlobalConfig(['messages','yieldFarming']);\n    const nexusMutualConfig = this.functionsUtil.getGlobalConfig(['tools','nexusMutual']);\n    const batchDepositConfig = this.functionsUtil.getGlobalConfig(['tools','batchDeposit']);\n    const strategyName = this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'title']);\n\n    return (\n      <Box\n        width={1}\n      >\n        <Title\n          mb={3}\n        >\n          {strategyName} strategy\n        </Title>\n        {\n          currentNetwork.id === 137 ? (\n            <Flex\n              width={1}\n              minHeight={'45vh'}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'center'}\n            >\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  width:[1,0.5],\n                }}\n              >\n                <Flex\n                  aligItems={'center'}\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={'2.3em'}\n                    color={'cellText'}\n                    name={'AccessTime'}\n                  />\n                  <Text\n                    mt={2}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Hang on, please!<br />The {strategyName} strategy has not yet been activated in Polygon.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:3,\n                      width:[1,1/2]\n                    }}\n                    handleClick={e => this.props.goToSection(`stake`)}\n                  >\n                    Go to Staking\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            </Flex>\n          ) : !this.state.portfolioLoaded ? (\n            <FlexLoader\n              textProps={{\n                textSize:4,\n                fontWeight:2\n              }}\n              loaderProps={{\n                mb:3,\n                size:'40px'\n              }}\n              flexProps={{\n                minHeight:'50vh',\n                flexDirection:'column'\n              }}\n              text={'Loading portfolio...'}\n            />\n          ) : (\n            <Box\n              width={1}\n            >\n              {\n                this.props.account && this.state.depositedTokens.length>0 ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      mb={3}\n                      width={1}\n                      mt={[2,0]}\n                      alignItems={'center'}\n                      justifyContent={'center'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.avgAPY ? (\n                                <Text\n                                  lineHeight={1}\n                                  fontWeight={[3,4]}\n                                  color={'copyColor'}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: this.state.avgAPY.toFixed(2)+'<small>%</small>' }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Avg APY\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','apyLong'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio ? (\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <TotalBalanceCounter\n                                    decimals={5}\n                                    {...this.props}\n                                    portfolio={this.state.portfolio}\n                                  />\n                                  <Flex\n                                    mt={1}\n                                    width={1}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'center'}\n                                  >\n                                    {\n                                      /*\n                                      <Flex\n                                        width={0.45}\n                                        alignItems={'center'}\n                                        justifyContent={'flex-end'}\n                                      >\n                                        <Text\n                                          fontSize={1}\n                                          fontWeight={3}\n                                          fontFamily={this.props.theme.fonts.counter}\n                                          color={this.props.theme.colors.transactions.status.completed}\n                                        >\n                                          +{this.state.portfolio.totalEarningsPerc.toFixed(2)}%\n                                        </Text>\n                                      </Flex>\n                                      <Text\n                                        mx={1}\n                                        fontSize={1}\n                                        fontWeight={3}\n                                        fontFamily={this.props.theme.fonts.counter}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >|</Text>\n                                      */\n                                    }\n                                    <TotalEarningsCounter\n                                      {...this.props}\n                                      unit={'+$'}\n                                      decimals={4}\n                                      counterStyle={{\n                                        fontSize:14,\n                                        fontWeight:600,\n                                        color:this.props.theme.colors.transactions.status.completed\n                                      }}\n                                      portfolio={this.state.portfolio}\n                                    />\n                                  </Flex>\n                                </Flex>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Total Balance\n                              </Text>\n                              {\n                                this.state.govTokensTotalBalance && (\n                                  <Tooltip\n                                    placement={'bottom'}\n                                    message={'Total Balance does not include accrued governance tokens: '+(this.state.govTokensTotalBalance && this.state.govTokensTotalBalance.gt(0) ? ` (${this.state.govTokensTotalBalanceTooltip.join(' / ')})` : '')}\n                                  >\n                                    <Icon\n                                      ml={2}\n                                      name={\"Info\"}\n                                      size={'1em'}\n                                      color={'cellTitle'}\n                                    />\n                                  </Tooltip>\n                                )\n                              }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio ? (\n                                <Text\n                                  lineHeight={1}\n                                  fontWeight={[3,4]}\n                                  color={'copyColor'}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: '<small>+</small>'+this.state.portfolio.totalEarningsPerc.toFixed(2)+'<small>%</small>' }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Total Profit\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','totalProfitPerc'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      width={1}\n                      id={\"portfolio-charts\"}\n                      justifyContent={'space-between'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        mb={[3,0]}\n                        width={[1,0.328]}\n                        flexDirection={'column'}\n                        id={\"portfolio-composition\"}\n                      >\n                        <DashboardCard\n                          title={'Composition'}\n                          titleProps={ !this.props.isMobile ? {\n                            style:{\n                              minHeight:'39px'\n                            }\n                          } : null}\n                        >\n                          <PortfolioDonut\n                            {...this.props}\n                            parentId={'portfolio-composition'}\n                          />\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,0.666]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard>\n                          <Flex\n                            pt={[3,4]}\n                            px={[3,4]}\n                            aligItems={'center'}\n                            flexDirection={['column','row']}\n                          >\n                            <Flex\n                              width={[1,0.7]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-start'}\n                            >\n                              <Title\n                                fontWeight={4}\n                                fontSize={[2,3]}\n                                textAlign={'left'}\n                              >\n                                Performance\n                              </Title>\n                            </Flex>\n                            <Flex\n                              mt={[2,0]}\n                              width={[1,0.3]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-end'}\n                            >\n                              <GenericSelector\n                                innerProps={{\n                                  p:0,\n                                  px:1\n                                }}\n                                defaultValue={\n                                  {value:'week',label:'1W'}\n                                }\n                                name={'performance-time'}\n                                options={[\n                                  {value:'week',label:'1W'},\n                                  {value:'month',label:'1M'},\n                                  {value:'month3',label:'3M'},\n                                  {value:'month6',label:'6M'},\n                                  {value:'all',label:'MAX'},\n                                ]}\n                                onChange={ v => this.setPortfolioEquityQuickSelection(v) }\n                              />\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            ml={[0,3]}\n                            aligItems={'center'}\n                            justifyContent={'center'}\n                            id={\"portfolio-performance\"}\n                          >\n                            <PortfolioEquity\n                              {...this.props}\n                              enabledTokens={[]}\n                              parentId={'portfolio-performance'}\n                              parentIdHeight={'portfolio-composition'}\n                              quickDateSelection={this.state.portfolioEquityQuickSelection}\n                              frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n                            />\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Flex\n                    mb={3}\n                    mx={'auto'}\n                    width={[1,0.8]}\n                    aligItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      fontWeight={2}\n                      fontSize={[1,2]}\n                      textAlign={'center'}\n                    >\n                      {\n                        this.props.isMobile ?\n                          this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'descShort'])\n                        :\n                          this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'descLong'])\n                      }\n                    </Text>\n                  </Flex>\n                )\n              }\n              {\n                !viewOnly && this.state.depositedTokens.length>0 && this.props.account && nexusMutualConfig.enabled && (\n                  <Flex\n                    mt={3}\n                    width={1}\n                    id={\"tools\"}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      pb={2}\n                      width={1}\n                      mb={[2,3]}\n                      borderColor={'divider'}\n                      borderBottom={'1px solid transparent'}\n                    >\n                      <Heading.h4\n                        fontSize={[2,4]}\n                        fontWeight={[3,4]}\n                      >\n                        Tools\n                      </Heading.h4>\n                    </Flex>\n                    <Flex\n                      flexDirection={['column','row']}\n                    >\n                      {\n                        ['addFunds','nexusMutual','tokenSwap'].map( (toolName,toolIndex) => {\n                          const toolConfig = this.functionsUtil.getGlobalConfig(['tools',toolName]);\n                          return (\n                            <Flex\n                              width={[1,1/3]}\n                              key={`tool_${toolIndex}`}\n                              mb={toolIndex<2 ? [2,0] : 0}\n                              pr={toolIndex<2 ? [0,3] : 0}\n                            >\n                              <DashboardIconButton\n                                {...this.props}  \n                                icon={toolConfig.icon}\n                                text={toolConfig.desc}\n                                image={toolConfig.image}\n                                title={toolConfig.label}\n                                handleClick={ e => this.props.goToSection(`tools/${toolConfig.route}`) }\n                              />\n                            </Flex>\n                          );\n                        })\n                      }\n                    </Flex>\n                  </Flex>\n                )\n              }\n              {\n                nexusMutualConfig.enabled && nexusMutualConfig.availableNetworks.includes(currentNetwork.id) && this.state.portfolio && this.state.portfolio.totalBalance.gt(0) && (\n                  <Flex\n                    width={1}\n                    id={'active-coverages'}\n                    flexDirection={'column'}\n                  >\n                    <ActiveCoverages\n                      {...this.props}\n                      title={'Coverage'}\n                      titleProps={{\n                        my:4\n                      }}\n                    />\n                  </Flex>\n                )\n              }\n              {\n                this.state.batchedDeposits && (\n                  <Flex\n                    width={1}\n                    mb={[0,3]}\n                    id={'batched-deposits'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Batched Deposits</Title>\n                    <Flex\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <AssetsList\n                        enabledTokens={Object.keys(this.state.batchedDepositsAvailableTokens)}\n                        cols={[\n                          {\n                            title:'TOKEN',\n                            props:{\n                              width:[0.3,0.2]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'DEPOSITED',\n                            props:{\n                              width:[0.33, 0.21],\n                            },\n                            fields:[\n                              {\n                                name:'custom',\n                                type:'number',\n                                path:['deposited'],\n                                props:{\n                                  decimals: 4\n                                }\n                              },\n                              {\n                                name:'tokenName',\n                                props:{\n                                  ml:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'REDEEMABLE',\n                            props:{\n                              width:[0.44,0.23],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                name:'custom',\n                                type:'number',\n                                path:['redeemable'],\n                                props:{\n                                  decimals: 4\n                                }\n                              },\n                              {\n                                type:'text',\n                                name:'custom',\n                                path:['token'],\n                                props:{\n                                  ml:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'STATUS',\n                            props:{\n                              width:[0.26,0.19],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                type:'icon',\n                                mobile:false,\n                                name:'custom',\n                                path:['statusIcon'],\n                                props:{\n                                  mr:2,\n                                  size:this.props.isMobile ? '1.2em' : '1.8em'\n                                }\n                              },\n                              {\n                                name:'custom',\n                                path:['status'],\n                                props:{\n                                  style:{\n                                    textTransform:'capitalize'\n                                  }\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[0.35,0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label:'Claim',\n                                funcProps:{\n                                  disabled:(props) => (props.tokenConfig.status === 'pending')\n                                },\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'migrate',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.goToSection(`tools/${batchDepositConfig.route}/${props.tokenConfig.token}`)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                        availableTokens={this.state.batchedDepositsAvailableTokens}\n                      />\n                    </Flex>\n                  </Flex>\n                )\n              }\n              <Flex\n                width={1}\n                id={'available-assets'}\n                flexDirection={'column'}\n                mb={!this.state.depositedTokens.length ? 4 : 0}\n              >\n                {\n                  (this.state.depositedTokens.length>0 || Object.keys(this.state.tokensToMigrate).length>0 || this.state.remainingTokens.length>0 ) &&\n                    <Title my={[3,4]}>Available assets</Title>\n                }\n                <Flex width={1} flexDirection={'column'}>\n                  {\n                    Object.keys(this.state.tokensToMigrate).length>0 &&\n                    <Flex\n                      width={1}\n                      mb={[3,4]}\n                      id={\"migrate-assets\"}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Assets to migrate\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={Object.keys(this.state.tokensToMigrate)}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.15]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account !== null,\n                            props:{\n                              width:[0.21, 0.12],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.26,0.15],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                showLoader:false,\n                                name:'idleDistribution',\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                },\n                                visible:currentNetwork.provider==='infura' ? true : false\n                              },\n                            ]\n                          },\n                          {\n                            title:'OLD APY',\n                            props:{\n                              width:[0.26,0.12],\n                            },\n                            fields:[\n                              {\n                                name:'oldApy'\n                              }\n                            ]\n                          },\n                          {\n                            title:'BALANCE',\n                            mobile:false,\n                            props:{\n                              width:[0.16,0.14],\n                            },\n                            parentProps:{\n                              width:1,\n                              pr:[2,4]\n                            },\n                            fields:[\n                              {\n                                name:'amountToMigrate',\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.15],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens'\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[ this.props.account === null ? 0.29 : 0 ,0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label: 'Migrate',\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'migrate',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                  {\n                  this.state.depositedTokens.length>0 &&\n                    <Flex\n                      mb={ this.state.remainingTokens.length>0 ? [3,4] : 0 }\n                      width={1}\n                      id={\"deposited-assets\"}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Deposited assets\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={this.state.depositedTokens}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.13]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            props:{\n                              width:[0.21,0.11],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.30,0.16],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                },\n                                visible:currentNetwork.provider==='infura' ? true : false\n                              },\n                            ]\n                          },\n                          {\n                            title:'DEPOSITED',\n                            props:{\n                              width:[0.22,0.15],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                name:'amountLent'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.13],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'EARNINGS',\n                            props:{\n                              width:[0.15,0.15],\n                              textAlign:'center'\n                            },\n                            parentProps:{\n                              alignItems:'center',\n                              flexDirection:'column',\n                            },\n                            fields:[\n                              {\n                                name:'earnings',\n                                props:{\n                                  decimals:3\n                                }\n                              },\n                              {\n                                name:'earningsPerc',\n                                showLoader:false,\n                                showDirection:false,\n                                props:{\n                                  fontSize:0,\n                                  decimals:3\n                                }\n                              }\n                            ]\n                          },\n                          /*\n                          {\n                            title:'EARNINGS %',\n                            props:{\n                              width:[0.27,0.14],\n                            },\n                            fields:[\n                              {\n                                name:'earningsPerc'\n                              }\n                            ]\n                          },\n                          */\n                          {\n                            title:'',\n                            mobile:false,\n                            props:{\n                              width:0.17,\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label:'Manage',\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'redeem',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                  {\n                    this.state.remainingTokens.length>0 &&\n                    <Flex id=\"remaining-assets\" width={1} flexDirection={'column'}>\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Available assets\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={this.state.remainingTokens}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.13]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:true,\n                            title:'POOL',\n                            visibleOnDesktop:true,\n                            props:{\n                              width:[0.21, 0.13],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.31,0.16],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                },\n                                visible:currentNetwork.provider==='infura' ? true : false\n                              },\n                            ]\n                          },\n                          {\n                            title:'FARMING',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account !== null,\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.22,0.16],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APR LAST WEEK',\n                            mobile:false,\n                            props:{\n                              width:0.25,\n                            },\n                            parentProps:{\n                              width:1,\n                              pr:[2,4]\n                            },\n                            fields:[\n                              {\n                                name:'aprChart',\n                                style:{\n                                  overflow:'visible',\n                                },\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[ this.props.account === null ? 0.26 : 0 , 0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label: (props) => {\n                                  return Object.keys(this.state.tokensToMigrate).includes(props.token) ? 'Migrate' : 'Deposit';\n                                },\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                },\n                                funcProps:{\n                                  mainColor: (props) => {\n                                    return Object.keys(this.state.tokensToMigrate).includes(props.token) ? 'migrate' : 'deposit'\n                                  }\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                </Flex>\n              </Flex>\n              {\n                this.state.depositedTokens.length>0 &&\n                  <Flex\n                    width={1}\n                    id={\"yield-farming\"}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Yield Farming</Title>\n                    <AssetsList\n                      enabledTokens={Object.keys(this.functionsUtil.getGovTokensFarming())}\n                      cols={[\n                        {\n                          title:'TOKEN',\n                          props:{\n                            width:[0.3,0.15]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:2,\n                                height:['1.4em','2.3em']\n                              }\n                            },\n                            {\n                              name:'tokenName'\n                            }\n                          ]\n                        },\n                        {\n                          mobile:false,\n                          title:'BALANCE',\n                          props:{\n                            width:[0.33, 0.25],\n                          },\n                          fields:[\n                            {\n                              name:'tokenBalance',\n                              props:{\n                                decimals: this.props.isMobile ? 6 : 8\n                              }\n                            }\n                          ]\n                        },\n                        {\n                          title:'REDEEMABLE',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','govTokenRedeemableBalance']),\n                          props:{\n                            width:[0.35,0.30],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'redeemableBalance',\n                              props:{\n                                decimals: this.props.isMobile ? 6 : 8\n                              }\n                            },\n                          ]\n                        },\n                        {\n                          title:'DISTRIBUTION',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','userDistributionSpeed']),\n                          props:{\n                            width:[0.35,0.30],\n                          },\n                          fields:[\n                            {\n                              name:'userDistributionSpeed',\n                              props:{\n                                decimals:6\n                              }\n                            }\n                          ]\n                        },\n                        /*\n                        {\n                          mobile:false,\n                          title:'APR',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','govTokenApr']),\n                          props:{\n                            width:[0.2,0.15],\n                          },\n                          fields:[\n                            {\n                              name:'apr',\n                            }\n                          ]\n                        },\n                        {\n                          title:'TOKEN PRICE',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','tokenPrice']),\n                          mobile:false,\n                          props:{\n                            width: 0.17,\n                          },\n                          parentProps:{\n                            width:1,\n                            pr:[2,4]\n                          },\n                          fields:[\n                            {\n                              name:'tokenPrice',\n                              props:{\n                                unit:'$',\n                                unitPos:'left',\n                                unitProps:{\n                                  mr:1,\n                                  fontWeight:3,\n                                  fontSize:[0,2],\n                                  color:'cellText'\n                                }\n                              }\n                            }\n                          ]\n                        },\n                        */\n                      ]}\n                      {...this.props}\n                      availableTokens={govTokens}\n                    />\n                  </Flex>\n              }\n              {\n                this.state.depositedTokens.length>0 &&\n                  <Flex\n                    width={1}\n                    id=\"earnings-estimation\"\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Estimated earnings</Title>\n                    <EarningsEstimation\n                      {...this.props}\n                      enabledTokens={this.state.depositedTokens}\n                    />\n                  </Flex>\n              }\n              {\n                this.props.account && this.state.polygonTransactions && (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                    id={'polygon-transactions'}\n                  >\n                    <Title my={[3,4]}>Polygon Bridge Transactions</Title>\n                    <Flex\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <CustomList\n                        paginationEnabled={true}\n                        handleClick={(props) => this.functionsUtil.openWindow(props.row.url)}\n                        cols={[\n                          {\n                            title:'HASH',\n                            mobile:false,\n                            props:{\n                              width:[0.44,0.18],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                type:'bgIcon',\n                                path:['actionIcon'],\n                              },\n                              {\n                                type:'text',\n                                path:['hash'],\n                                props:{\n                                  ml:[0,2]\n                                }\n                              },\n                            ]\n                          },\n                          {\n                            title:'ACTION',\n                            props:{\n                              width:[0.25,0.14],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                type:'text',\n                                path:['action'],\n                              },\n                            ]\n                          },\n                          {\n                            title:'DATE',\n                            props:{\n                              width:[0.25,0.15],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                type:'text',\n                                path:['date'],\n                              },\n                            ]\n                          },\n                          {\n                            title:'BRIDGE',\n                            mobile:false,\n                            props:{\n                              width:[0.44,0.12],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                type:'text',\n                                path:['bridgeType'],\n                              },\n                            ]\n                          },\n                          {\n                            title:'STATUS',\n                            props:{\n                              width:[0.25,0.15],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                type:'icon',\n                                mobile:false,\n                                path:['statusIcon'],\n                                props:{\n                                  mr:2,\n                                  size:this.props.isMobile ? '1.2em' : '1.8em'\n                                }\n                              },\n                              {\n                                name:'custom',\n                                path:['status'],\n                                props:{\n                                  style:{\n                                    textTransform:'capitalize'\n                                  }\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'AMOUNT',\n                            props:{\n                              width:[0.25, 0.15],\n                            },\n                            fields:[\n                              {\n                                type:'number',\n                                path:['amount'],\n                                props:{\n                                  decimals: 4\n                                }\n                              },\n                              {\n                                name:'tokenName',\n                                props:{\n                                  ml:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'TOKEN',\n                            props:{\n                              width:[0.25,0.13]\n                            },\n                            fields:[\n                              {\n                                type:'image',\n                                path:['tokenIcon'],\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','1.6em']\n                                }\n                              },\n                              {\n                                type:'text',\n                                path:['token'],\n                              }\n                            ]\n                          },\n                        ]}\n                        {...this.props}\n                        rows={this.state.polygonTransactionsAvailableTokens}\n                      />\n                    </Flex>\n                  </Flex>\n                )\n              }\n              {\n                this.props.account && this.state.depositedTokens.length>0 && \n                  <Flex\n                    mb={[3,4]}\n                    width={1}\n                    id={'transactions'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Transactions</Title>\n                    <TransactionsList\n                      {...this.props}\n                      enabledTokens={[]}\n                      cols={[\n                        {\n                          title: this.props.isMobile ? '' : 'HASH',\n                          props:{\n                            width:[0.15,0.24]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              name:'hash',\n                              mobile:false\n                            }\n                          ]\n                        },\n                        {\n                          title:'ACTION',\n                          mobile:false,\n                          props:{\n                            width:0.15,\n                          },\n                          fields:[\n                            {\n                              name:'action'\n                            }\n                          ]\n                        },\n                        {\n                          title:'DATE',\n                          props:{\n                            width:[0.32,0.23],\n                          },\n                          fields:[\n                            {\n                              name:'date'\n                            }\n                          ]\n                        },\n                        {\n                          title:'STATUS',\n                          props:{\n                            width:[0.18,0.22],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'statusIcon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'status'\n                            }\n                          ]\n                        },\n                        {\n                          title:'AMOUNT',\n                          props:{\n                            width:0.19,\n                          },\n                          fields:[\n                            {\n                              name:'amount'\n                            },\n                          ]\n                        },\n                        {\n                          title:'ASSET',\n                          props:{\n                            width:[0.15,0.20],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'tokenIcon',\n                              props:{\n                                mr:[0,2],\n                                height:['1.4em','1.6em']\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'tokenName'\n                            },\n                          ]\n                        },\n                      ]}\n                    />\n                  </Flex>\n              }\n            </Box>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default StrategyPage;","/*\n// batchDeposits[user][batchId] = amount\nmapping (address => mapping (uint256 => uint256)) public batchDeposits;\nmapping (uint256 => uint256) batchTotals; // in idleToken\nmapping (uint256 => uint256) batchRedeemedTotals; // in newIdleToken\n\nuint256 public currBatch;\naddress public idleToken;\naddress public newIdleToken;\naddress public underlying;\n\nfunction deposit() external\nfunction withdraw(uint256 batchId) external\n*/\n\nimport Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TransactionField from '../TransactionField/TransactionField';\nimport { Flex, Box, Text, Icon, Link, Checkbox, Tooltip } from \"rimble-ui\";\n\nclass BatchDeposit extends Component {\n\n  state = {\n    canClaim:false,\n    batchTotals:{},\n    canDeposit:true,\n    action:'deposit',\n    batchDeposits:{},\n    tokenConfig:null,\n    processing:{\n      execute:{\n        txHash:null,\n        loading:false\n      },\n      claim:{\n        txHash:null,\n        loading:false\n      },\n    },\n    usePermit:false,\n    batchRedeems:{},\n    lastExecution:null,\n    permitEnabled:true,\n    hasDeposited:false,\n    permitSigned:false,\n    selectedToken:null,\n    showPermitBox:false,\n    currBatchIndex:null,\n    batchCompleted:false,\n    claimSucceeded:false,\n    availableTokens:null,\n    selectedStrategy:null,\n    componentLoaded:false,\n    executeSucceeded:false,\n    migrationEnabled:false,\n    migrationSucceeded:false,\n    selectedTokenConfig:null,\n    availableStrategies:null,\n    batchDepositEnabled:false,\n    migrationContractApproved:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadStrategies();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      this.setState({\n        componentLoaded:false\n      },async () => {\n        await this.loadTokens();\n      });\n    }\n\n    const selectedStrategyChanged = prevState.selectedStrategy !== this.state.selectedStrategy;\n    if (selectedStrategyChanged){\n      const selectedToken = Object.keys(this.state.availableTokens)[0];\n      this.selectToken(selectedToken);\n    }\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const executeSucceededChanged = prevState.executeSucceeded !== this.state.executeSucceeded;\n    const contractApprovedChanged = prevState.migrationContractApproved !== this.state.migrationContractApproved;\n    if (selectedTokenChanged || contractApprovedChanged || executeSucceededChanged){\n      this.checkBatchs();\n    }\n\n  }\n\n  async execute () {\n\n    const loading = true;\n\n    const callbackExecute = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'Execute',\n        eventCategory: 'BatchDeposit',\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        executeSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          execute:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptExecute = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          execute:{\n            ...prevState.processing.execute,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'executeBatch', [true], null, callbackExecute, callbackReceiptExecute);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        execute:{\n          ...prevState.processing.execute,\n          loading\n        }\n      }\n    }));\n  }\n\n  async checkBatchs(migrationSucceeded=false){\n\n    const migrationContractInfo = this.state.selectedTokenConfig.migrationContract;\n\n    await Promise.all([\n      this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi),\n      this.props.initContract(this.state.tokenConfig.name,this.state.tokenConfig.address,this.state.tokenConfig.abi)\n    ]);\n\n    let [\n      batchExecutions,\n      currBatchIndex,\n      migrationContractApproved\n    ] = await Promise.all([\n      this.functionsUtil.getBatchedDepositExecutions(migrationContractInfo.address),\n      this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'currBatch'),\n      this.functionsUtil.checkTokenApproved(this.state.tokenConfig.name,migrationContractInfo.address,this.props.account)\n    ]);\n\n    // If use Permit don't ask for Approve\n    let usePermit = false;\n    if (!migrationContractApproved && migrationContractInfo.functions && migrationContractInfo.functions.length === 1){\n      const functionInfo = migrationContractInfo.functions[0];\n      usePermit = typeof functionInfo.usePermit !== 'undefined' ? functionInfo.usePermit : false;\n      const nonceMethod = this.functionsUtil.getGlobalConfig(['permit',this.state.tokenConfig.name,'nonceMethod']);\n      const permitContract = this.functionsUtil.getContractByName(this.state.tokenConfig.name);\n      usePermit = usePermit && permitContract && (!nonceMethod || permitContract.methods[nonceMethod] !== undefined);\n    }\n\n    const newState = {};\n    const batchTotals = {};\n    const batchRedeems = {};\n    const batchDeposits = {};\n    let batchCompleted = false;\n\n    currBatchIndex = currBatchIndex || 0;\n    for (let batchIndex = 0; batchIndex <= parseInt(currBatchIndex) ; batchIndex++){\n      let [\n        batchTotal,\n        batchRedeem,\n        batchDeposit\n      ] = await Promise.all([\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchTotals',[batchIndex]),\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchRedeemedTotals',[batchIndex]),\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n      ]);\n      if (batchTotal && batchTotal !== null){\n        batchTotals[batchIndex] = this.functionsUtil.fixTokenDecimals(batchTotal,this.state.tokenConfig.decimals);\n      }\n      if (batchDeposit !== null){\n        batchRedeem = this.functionsUtil.fixTokenDecimals(batchRedeem,18);\n        batchDeposit = this.functionsUtil.fixTokenDecimals(batchDeposit,this.state.tokenConfig.decimals);\n        if (batchDeposit.gt(0)){\n          batchDeposits[batchIndex] = batchDeposit;\n          // Calculate redeemable idleTokens\n          batchRedeems[batchIndex] = batchDeposit.times(batchRedeem).div(batchTotals[batchIndex]);\n          if (batchRedeems[batchIndex].gt(batchRedeem)){\n            batchRedeems[batchIndex] = batchRedeem;\n          }\n          // Check claimable\n          if (batchIndex < currBatchIndex){\n            batchCompleted = true;\n          }\n        }\n      }\n    }\n\n    newState.batchDeposits = batchDeposits;\n\n    const hasDeposited = (batchDeposits && Object.keys(batchDeposits).length>0);\n\n    const lastExecution = batchExecutions && batchExecutions.length ? batchExecutions[0] : null;\n    const batchDepositInfo = this.functionsUtil.getGlobalConfig(['tools','batchDeposit']);\n    const batchDepositEnabled = batchDepositInfo.depositEnabled;\n\n    newState.usePermit = usePermit;\n    newState.showPermitBox = false;\n    newState.claimSucceeded = false;\n    newState.componentLoaded = true;\n    newState.executeSucceeded = false;\n    newState.batchTotals = batchTotals;\n    newState.hasDeposited = hasDeposited;\n    newState.batchRedeems = batchRedeems;\n    newState.lastExecution = lastExecution;\n    newState.currBatchIndex = currBatchIndex;\n    newState.batchCompleted = batchCompleted;\n    newState.migrationSucceeded = migrationSucceeded;\n    newState.batchDepositEnabled = batchDepositEnabled;\n    newState.canClaim = batchCompleted || hasDeposited;\n    // Prevent user to deposit if the batch has been completed\n    newState.canDeposit = batchDepositEnabled && !batchCompleted;\n    newState.migrationContractApproved = migrationContractApproved;\n    newState.action = hasDeposited || newState.canClaim ? 'redeem' : 'deposit';\n\n    this.setState(newState);\n  }\n\n  async loadStrategies(){\n\n    // Init tokens contracts\n    const availableStrategiesKeys = {};\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n      availableStrategiesKeys[tokenConfig.strategy] = true;\n    });\n\n    const availableStrategies = Object.keys(availableStrategiesKeys).map( strategy => {\n      const strategyConfig = this.functionsUtil.getGlobalConfig(['strategies',strategy]);\n      return {\n        value:strategy,\n        icon:strategyConfig.icon,\n        label:strategyConfig.title\n      };\n    });\n\n    // console.log('availableStrategies',availableStrategies);\n\n    if (availableStrategies && availableStrategies.length>0){\n      let selectedStrategy = availableStrategies[0].value;\n      let selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : null;\n      if (selectedToken){\n        const selectedTokenConfig = this.props.toolProps.availableTokens[selectedToken];\n        selectedToken = selectedTokenConfig.baseToken;\n        selectedStrategy = selectedTokenConfig.strategy;\n      }\n\n      this.setState({\n        availableStrategies\n      },() => {\n        this.selectStrategy(selectedStrategy,selectedToken);\n      });\n    }\n  }\n\n  /*\n  async loadTokens(){\n    const selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : null;\n    if (selectedToken){\n      this.selectToken(selectedToken);\n    }\n  }\n  */\n\n  async selectStrategy (selectedStrategy,selectedToken=null) {\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens)\n      .filter(key => this.props.toolProps.availableTokens[key].strategy === selectedStrategy )\n      .reduce((obj, key) => {\n        const tokenConfig = this.props.toolProps.availableTokens[key];\n        const baseTokenConfig = this.props.availableStrategies[selectedStrategy][tokenConfig.baseToken];\n\n        tokenConfig.abi = baseTokenConfig.abi;\n        tokenConfig.token = baseTokenConfig.token;\n        tokenConfig.address = baseTokenConfig.address;\n        tokenConfig.decimals = baseTokenConfig.decimals;\n        obj[tokenConfig.baseToken] = tokenConfig;\n        return obj;\n      }, {});\n\n    this.setState({\n      availableTokens,\n      selectedStrategy\n    },() => {\n      if (selectedToken){\n        this.selectToken(selectedToken);\n      }\n    });\n  }\n\n  async selectToken (selectedToken) {\n    const selectedTokenConfig = this.state.availableTokens[selectedToken];\n    const strategyAvailableTokens = this.props.availableStrategies[selectedTokenConfig.strategy];\n\n    const baseTokenConfig = strategyAvailableTokens[selectedTokenConfig.token];\n\n    const tokenConfig = {\n      name:baseTokenConfig.token,\n      token:baseTokenConfig.token,\n      address:baseTokenConfig.address,\n      decimals:baseTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = baseTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:baseTokenConfig.abi,\n      name:baseTokenConfig.token,\n      token:baseTokenConfig.token,\n      address:baseTokenConfig.address\n    };\n    \n    const migrationContract = selectedTokenConfig.migrationContract;\n\n    // Add migration function\n    if (baseTokenConfig.migrateFunction){\n      migrationContract.functions[0].name = baseTokenConfig.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(selectedTokenConfig.strategy,baseTokenConfig.token);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedTokenConfig\n    },() => {\n      // Select strategy and available tokens\n      if (selectedTokenConfig.strategy !== this.state.selectedStrategy){\n        const selectedStrategy = selectedTokenConfig.strategy;\n        this.selectStrategy(selectedStrategy);\n      }\n    });\n  }\n\n  async claim () {\n    if (!this.state.batchCompleted){\n      return null;\n    }\n\n    const loading = true;\n    const claimableValue = 0;\n    const batchId = Object.keys(this.state.batchDeposits)[0];\n\n    const callbackClaim = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'Claim',\n        eventCategory: `BatchDeposit`,\n        eventValue: parseInt(claimableValue),\n        eventLabel: this.props.selectedToken,\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        claimSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          claim:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptClaim = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          claim:{\n            ...prevState.processing.claim,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'withdraw', [batchId], null, callbackClaim, callbackReceiptClaim);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        claim:{\n          ...prevState.processing.claim,\n          loading\n        }\n      }\n    }));\n  }\n\n  async callbackPermit(){\n    this.setState({\n      permitSigned:true\n    });\n  }\n\n  showPermitBox(){\n    this.setState({\n      showPermitBox:true\n    });\n  }\n\n  async callbackApprove(migrationContractApproved){\n    // console.log('callbackApprove',this.state.migrationContractApproved,migrationContractApproved);\n    if (migrationContractApproved !== this.state.migrationContractApproved){\n      this.setState({\n        migrationContractApproved\n      });\n    }\n  }\n\n  setAction = (action) => {\n    if (action !== null && ['deposit','redeem'].includes(action.toLowerCase())){\n      const migrationSucceeded = false;\n      this.setState({\n        action,\n        migrationSucceeded\n      });\n    }\n  }\n\n  togglePermitEnabled(permitEnabled){\n    this.setState({\n      permitEnabled\n    });\n  }\n\n  migrationEnabledCallback = (migrationEnabled) => {\n    this.setState({\n      migrationEnabled\n    });\n  }\n\n  migrationCallback = (tx) => {\n    this.checkBatchs(true);\n  }\n\n  render() {\n\n    if (!this.state.selectedStrategy){\n      return null;\n    }\n\n    const usePermit = this.state.permitEnabled && this.state.usePermit;\n    // const batchId = this.state.batchDeposits && Object.keys(this.state.batchDeposits).length>0 ? Object.keys(this.state.batchDeposits)[0] : null;\n    const batchRedeem = this.state.batchRedeems && Object.values(this.state.batchRedeems).length>0 ? Object.values(this.state.batchRedeems)[0] : null;\n    const batchDeposit = this.state.batchDeposits && Object.values(this.state.batchDeposits).length>0 ? Object.values(this.state.batchDeposits)[0] : null;\n    const contractApproved = (usePermit && this.state.permitSigned) || (!usePermit && this.state.migrationContractApproved);\n    const canExecuteBatch = this.state.batchTotals && this.state.batchTotals[this.state.currBatchIndex] && this.state.batchTotals[this.state.currBatchIndex].gt(0);\n    const strategyDefaultValue = this.state.selectedStrategy ? this.state.availableStrategies.find( s => s.value === this.state.selectedStrategy ) : this.state.availableStrategies[0];\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Choose the strategy:\n            </Text>\n            <GenericSelector\n              {...this.props}\n              name={'strategy'}\n              isSearchable={false}\n              defaultValue={strategyDefaultValue}\n              CustomOptionValue={CustomOptionValue}\n              options={this.state.availableStrategies}\n              onChange={this.selectStrategy.bind(this)}\n              CustomValueContainer={CustomValueContainer}\n            />\n          </Box>\n          {\n            this.state.availableTokens && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Select asset to deposit:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  id={'token-from'}\n                  showBalance={true}\n                  isSearchable={false}\n                  onChange={this.selectToken.bind(this)}\n                  selectedToken={this.state.selectedToken}\n                  availableTokens={this.state.availableTokens}\n                />\n              </Box>\n          }\n          {\n            !this.state.componentLoaded && (\n              <Flex\n                mt={4}\n                flexDirection={'column'}\n              >\n                <FlexLoader\n                  flexProps={{\n                    flexDirection:'row'\n                  }}\n                  loaderProps={{\n                    size:'30px'\n                  }}\n                  textProps={{\n                    ml:2\n                  }}\n                  text={'Loading asset info...'}\n                />\n              </Flex>\n            )\n          }\n          {\n            !this.props.account ? (\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mt:3\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                    name={'Input'}\n                    color={'cellText'}\n                  />\n                  <Text\n                    mt={[1,2]}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Please connect with your wallet interact with Idle.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:2,\n                      width:[1,1/2]\n                    }}\n                    handleClick={this.props.connectAndValidateAccount}\n                  >\n                    Connect\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            ) : this.state.componentLoaded &&  this.state.selectedTokenConfig && (this.state.canDeposit || this.state.canClaim) && (\n              <Box\n                width={1}\n              >\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                    px:4,\n                    mt:3,\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  > \n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ contractApproved ? 'CheckBox' : 'LooksOne'}\n                        color={ contractApproved ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        {\n                          usePermit ? 'Sign Approve message' : 'Approve the batch deposit contract'\n                        }\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ (this.state.hasDeposited || this.state.batchCompleted) ? 'CheckBox' : 'LooksTwo'}\n                        color={ (this.state.hasDeposited || this.state.batchCompleted) ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        Deposit your {this.state.selectedToken}\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ this.state.batchCompleted ? 'CheckBox' : 'Looks3'}\n                        color={ this.state.batchCompleted ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        Wait for batch execution\n                        <Link\n                          ml={1}\n                          fontWeight={2}\n                          color={'primary'}\n                          display={'inline'}\n                          hoverColor={'primary'}\n                          onClick={ e => this.props.openTooltipModal('Batch Execution Schedule',this.functionsUtil.getGlobalConfig(['messages','batchDepositExecutionSchedule'])) }\n                        >\n                          (Read More)\n                        </Link>\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ this.state.claimSucceeded ? 'CheckBox' : 'Looks4'}\n                        color={ this.state.claimSucceeded ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'flex-start'}\n                      >\n                        <Text\n                          ml={1}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'left'}\n                        >\n                          Claim your {this.state.tokenConfig.idle.token}\n                        </Text>\n                        <Tooltip\n                          placement={'top'}\n                          message={`You will start earning gov tokens after the batch is executed and you claim your ${this.state.tokenConfig.idle.token}`}\n                        >\n                          <Icon\n                            ml={1}\n                            size={'1.2em'}\n                            name={'Warning'}\n                            color={'#ffe000'}\n                            style={{\n                              cursor:'pointer'\n                            }}\n                          />\n                        </Tooltip>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                </DashboardCard>\n              </Box>\n            )\n          }\n          {\n            this.state.componentLoaded && this.props.account && this.state.availableTokens && this.state.selectedToken && (\n              <Box width={1}>\n                {\n                  (contractApproved || this.state.canClaim) && \n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text mb={2}>\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canDeposit ? this.setAction('deposit') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canDeposit }\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canClaim ? this.setAction('redeem') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canClaim }\n                          isActive={ this.state.action === 'redeem' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Claim\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                }\n                {\n                  this.state.showPermitBox && this.state.action === 'deposit' && this.state.usePermit && this.state.migrationEnabled && !this.state.migrationSucceeded ? (\n                    <DashboardCard\n                      cardProps={{\n                        py:3,\n                        px:2,\n                        mt:3,\n                        display:'flex',\n                        alignItems:'center',\n                        flexDirection:'column',\n                        justifyContent:'center',\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          color={'cellText'}\n                          name={'LightbulbOutline'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={1}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          {this.state.selectedToken} supports Approve and Deposit in a single transaction, disable this feature and try again if you can't deposit in the batch.\n                        </Text>\n                      </Flex>\n                      <Checkbox\n                        mt={1}\n                        required={false}\n                        checked={this.state.permitEnabled}\n                        label={`Approve and Deposit in a single transaction`}\n                        onChange={ e => this.togglePermitEnabled(e.target.checked) }\n                      />\n                    </DashboardCard>\n                  ) : !this.state.showPermitBox && this.state.action === 'deposit' && this.state.usePermit && this.state.migrationEnabled && !this.state.migrationSucceeded && (\n                    <Flex\n                      p={0}\n                      mt={3}\n                      width={1}\n                      borderRadius={2}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'center'}\n                    >\n                      <Link\n                        textAlign={'center'}\n                        hoverColor={'primary'}\n                        onClick={this.showPermitBox.bind(this)}\n                      >\n                        Having trouble with the Batch Deposit?\n                      </Link>\n                    </Flex>\n                  )\n                }\n                {\n                  this.state.action === 'deposit' ? \n                    this.state.batchDepositEnabled ? (\n                      <Migrate\n                        {...this.props}\n                        useMetaTx={false}\n                        showActions={false}\n                        usePermit={usePermit}\n                        getTokenPrice={false}\n                        isMigrationTool={true}\n                        showBalanceSelector={true}\n                        migrationIcon={'FileDownload'}\n                        waitText={'Deposit estimated in'}\n                        tokenConfig={this.state.tokenConfig}\n                        selectedToken={this.state.selectedToken}\n                        migrationParams={toMigrate => [toMigrate]}\n                        selectedStrategy={this.props.selectedStrategy}\n                        callbackPermit={this.callbackPermit.bind(this)}\n                        callbackApprove={this.callbackApprove.bind(this)}\n                        migrationCallback={this.migrationCallback.bind(this)}\n                        migrationEnabledCallback={this.migrationEnabledCallback.bind(this)}\n                        migrationText={`Deposit your ${this.state.selectedToken} and wait until it is converted to the new ${this.state.tokenConfig.idle.token}.`}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:3\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedToken} in your wallet.\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Migrate>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          my:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Text\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            Batch Deposit is disabled for this asset.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      {\n                        this.state.processing.claim.loading ? (\n                          <Flex\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar {...this.props} web3={this.props.web3} waitText={`Claim estimated in`} endMessage={`Finalizing approve request...`} hash={this.state.processing.claim.txHash} />\n                          </Flex>\n                        ) : this.state.claimSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'DoneAll'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You have successfully withdrawn your {this.state.tokenConfig.idle.token}!\n                            </Text>\n                            <Link\n                              mt={2}\n                              textAlign={'center'}\n                              hoverColor={'primary'}\n                              onClick={ e => this.props.goToSection(this.state.selectedTokenConfig.strategy+'/'+this.state.selectedTokenConfig.baseToken) }\n                            >\n                              Go to the Dashboard\n                            </Link>\n                          </Flex>\n                        ) : this.state.batchCompleted ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              color={'cellText'}\n                              name={'FileUpload'}\n                            />\n                            <Text\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The Batch has been executed!<br />You can now claim your {batchRedeem.toFixed(4)} {this.state.tokenConfig.idle.token}\n                            </Text>\n                            <Text\n                              fontSize={1}\n                              color={'#ff9900'}\n                              textAlign={'center'}\n                            >\n                              (You need to claim your {this.state.tokenConfig.idle.token} to start earning Gov Tokens)\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                              <RoundButton\n                                buttonProps={{\n                                  mt:2,\n                                  width:[1,0.5],\n                                  mainColor:this.props.theme.colors.redeem\n                                }}\n                                handleClick={ e => this.claim() }\n                              >\n                                Claim\n                              </RoundButton>\n                            </Flex>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'1.8em'}\n                              color={'cellText'}\n                              name={'HourglassEmpty'}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              <Text.span\n                                color={'cellText'}\n                              >\n                                You have successfully deposited <strong>{batchDeposit.toFixed(4)} {this.state.selectedToken}</strong>, please wait until the batch is executed to claim your {this.state.tokenConfig.idle.token}.\n                              </Text.span>\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n                {\n                  this.state.batchTotals[this.state.currBatchIndex] && \n                    <DashboardCard\n                      cardProps={{\n                        p:2,\n                        my:3\n                      }}\n                    >\n                      {\n                        this.state.processing.execute.loading ? (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <TxProgressBar {...this.props} waitText={`Batch execution estimated in`} endMessage={`Finalizing batch execution request...`} hash={this.state.processing.execute.txHash} />\n                          </Flex>\n                        ) : this.state.executeSucceeded ? (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Icon\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The Batch has been executed!\n                            </Text>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Text\n                              fontWeight={500}\n                              color={'copyColor'}\n                              textAlign={'center'}\n                            >\n                              Batch Pool: {this.state.batchTotals[this.state.currBatchIndex].toFixed(4)} {this.state.selectedToken}\n                            </Text>\n                            {\n                              canExecuteBatch && \n                                <Link\n                                  textAlign={'center'}\n                                  hoverColor={'primary'}\n                                  onClick={this.execute.bind(this)}\n                                >\n                                  Execute Batch\n                                </Link>\n                            }\n                            {\n                              this.state.batchTotals[this.state.currBatchIndex].lt(this.state.selectedTokenConfig.minPoolSize) && (\n                                <Text\n                                  mb={1}\n                                  fontSize={1}\n                                  color={'alert'}\n                                  textAlign={'center'}\n                                >\n                                  (The pool size has to reach at least {this.functionsUtil.formatMoney(this.state.selectedTokenConfig.minPoolSize,0)} {this.state.selectedToken} to be executed)\n                                </Text>\n                              )\n                            }\n                            {\n                              this.state.lastExecution && (\n                                <Text\n                                  fontSize={0}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  Last Batch Execution: {this.functionsUtil.strToMoment(this.state.lastExecution.timeStamp*1000).utc().format('YYYY-MM-DD HH:mm UTC')}\n                                </Text>\n                              )\n                            }\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                }\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default BatchDeposit;","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\n// import TokenWrapper from '../TokenWrapper/TokenWrapper';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\n\nclass PolygonBridge extends Component {\n\n  state = {\n    stats:[],\n    steps:null,\n    txsToExit:[],\n    infoBox:null,\n    polygonTxs:[],\n    inputValue:null,\n    dataLoaded:false,\n    description:null,\n    tokenConfig:null,\n    balanceProp:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    selectedAction:null,\n    selectedOption:null,\n    successMessage:null,\n    permitEnabled:false,\n    availableTokens:null,\n    availableNetworks:[],\n    approveEnabled:false,\n    contractApproved:false,\n    defaultTransaction:null,\n    approveDescription:null,\n    selectedTransaction:null,\n    balanceSelectorInfo:null,\n    transactionSucceeded:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentDidMount(){\n    this.loadData();\n  }\n\n  async loadPolygonTxs(){\n    const polygonTxs = await this.functionsUtil.getPolygonBridgeTxs();\n    this.setState({\n      polygonTxs,\n      dataLoaded:true\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      const tokenConfig = this.props.toolProps.availableTokens[this.state.selectedToken];\n      const rootTokenConfig = tokenConfig.rootToken;\n      const childTokenConfig = tokenConfig.childToken;\n\n      // Init contracts\n      await Promise.all([\n        rootTokenConfig ? this.props.initContract(rootTokenConfig.name,rootTokenConfig.address,rootTokenConfig.abi) : null,\n        childTokenConfig ? this.props.initContract(childTokenConfig.name,childTokenConfig.address,childTokenConfig.abi) : null\n      ]);\n\n      this.setState({\n        tokenConfig\n      },() => {\n        this.updateData();\n      });\n    } else {\n      const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n      const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n      if (selectedActionChanged || contractApprovedChanged){\n        this.updateData();\n      }\n    }\n\n    const contractInfoChanged = JSON.stringify(prevState.contractInfo) !== JSON.stringify(this.state.contractInfo);\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async changeInputCallback(inputValue=null){\n\n  }\n\n  getTransactionParams(amount){\n    let value = null;\n    let methodName = null;\n    let methodParams = [];\n    let contractName = null;\n    amount = this.functionsUtil.toBN(amount);\n    const bridgeType = this.state.tokenConfig.bridgeType;\n    switch (this.state.selectedAction){\n      case 'Deposit':\n        switch (this.state.selectedToken){\n          case 'ETH':\n            methodName = 'depositEtherFor';\n            contractName = 'RootChainManager';\n            value = this.props.web3.eth.abi.encodeParameter('uint256', amount);\n            methodParams = [this.props.account];\n          break;\n          default:\n            const depositData = this.props.web3.eth.abi.encodeParameter('uint256', amount);\n            switch (bridgeType){\n              case 'plasma':\n                contractName = 'DepositManager';\n                methodName = 'depositERC20ForUser';\n                methodParams = [this.state.tokenConfig.rootToken.address,this.props.account,depositData];\n              break;\n              default:\n              case 'pos':\n                methodName = 'depositFor';\n                contractName = 'RootChainManager';\n                methodParams = [this.props.account,this.state.tokenConfig.rootToken.address,depositData];\n              break;\n            }\n          break;\n        }\n      break;\n      case 'Withdraw':\n        methodName = 'withdraw';\n        methodParams = [amount];\n        contractName = this.state.tokenConfig.childToken.name;\n        if (this.state.tokenConfig.sendValue){\n          value = this.props.web3.eth.abi.encodeParameter('uint256', amount);\n        }\n      break;\n      default:\n      break;\n    }\n\n    // console.log('getTransactionParams',{\n    //   value,\n    //   methodName,\n    //   methodParams,\n    //   contractName\n    // });\n\n    return {\n      value,\n      methodName,\n      methodParams,\n      contractName\n    };\n  }\n\n  exitCallback(){\n\n  }\n\n  async getExitTransactionParams(){\n    const txHash = this.state.selectedTransaction;\n    const exitCalldata = await this.props.maticPOSClient.exitERC20(txHash, { from:this.props.account, encodeAbi: true })\n    if (exitCalldata && exitCalldata.data){\n      return exitCalldata.data;\n    }\n    return null;\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  async selectTransaction(selectedTransaction){\n    this.setState({\n      selectedTransaction\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    /*\n    switch (this.state.selectedAction){\n      case 'Deposit':\n        const depositedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const depositedTokens = depositedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(depositedTokensLog.data,16),this.state.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n      break;\n      case 'Withdraw':\n        const withdrawnTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const withdrawnTokens = withdrawnTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(withdrawnTokensLog.data,16),this.state.tokenConfig.decimals) : (tx.txReceipt && tx.txReceipt.events && tx.txReceipt.events.Transfer ? this.functionsUtil.fixTokenDecimals(tx.txReceipt.events.Transfer.returnValues.value,this.state.tokenConfig.decimals) : this.functionsUtil.BNify(0));\n      break;\n      default:\n      break;\n    }\n    */\n    const transactionSucceeded = tx;\n    this.setState({\n      transactionSucceeded\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async updateData(){\n    const newState = {};\n    const isETH = this.state.tokenConfig.token==='ETH';\n    const bridgeType = this.state.tokenConfig.bridgeType;\n    switch (this.state.selectedAction){\n      case 'Deposit':\n        newState.steps = [];\n        newState.permitEnabled = false;\n        newState.availableNetworks = [1,5];\n        newState.approveEnabled = !isETH;\n        newState.approveDescription = `Approve the contract to deposit your ${this.state.selectedToken}`;\n        newState.contractInfo = bridgeType === 'pos' ? this.props.toolProps.contracts.ERC20Predicate : this.props.toolProps.contracts.DepositManager;\n        newState.balanceProp = isETH ? await this.functionsUtil.getETHBalance(this.props.account) : await this.functionsUtil.getTokenBalance(this.state.tokenConfig.rootToken.name,this.props.account);\n        if (this.state.transactionSucceeded){\n          let depositedTokensLog = null;\n          let depositedTokensEvent = null;\n          if (!isETH){\n            depositedTokensEvent = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.events ? Object.values(this.state.transactionSucceeded.txReceipt.events).find( event => event.address.toLowerCase() === this.state.tokenConfig.rootToken.address.toLowerCase() && event.raw.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && event.raw.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && event.raw.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n            depositedTokensLog = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.logs ? this.state.transactionSucceeded.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.rootToken.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n          } else {\n            depositedTokensEvent = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.events ? Object.values(this.state.transactionSucceeded.txReceipt.events).find( event => event.address.toLowerCase() === this.props.toolProps.contracts.EtherPredicate.address.toLowerCase() && event.raw.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && event.raw.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n            depositedTokensLog = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.logs ? this.state.transactionSucceeded.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.contracts.EtherPredicate.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n          }\n          const depositedTokens = depositedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(depositedTokensLog.data,16),this.state.tokenConfig.decimals) : ( depositedTokensEvent ? this.functionsUtil.fixTokenDecimals(parseInt(depositedTokensEvent.raw.data,16),this.state.tokenConfig.decimals) : this.functionsUtil.BNify(0));\n          newState.infoBox = {\n            icon:'DoneAll',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`You have successfully deposited <strong>${depositedTokens.toFixed(4)} ${this.state.selectedToken}</strong> in the Polygon chain. Please wait ~7-8 minutes for your balance to be accounted in the Polygon chain.`\n          }\n        } else {\n          newState.infoBox = {\n            icon:'InfoOutline',\n            iconProps:{\n              color:'cellText'\n            },\n            text:`Please note that deposit of funds takes ~7-8 minutes to be accounted in the Polygon chain.`\n          }\n        }\n      break;\n      case 'Withdraw':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.availableNetworks = [137,80001];\n        newState.contractInfo = this.state.tokenConfig.childToken;\n        newState.balanceProp = await this.functionsUtil.getTokenBalance(this.state.tokenConfig.childToken.name,this.props.account);\n\n        const currentNetwork = this.functionsUtil.getRequiredNetwork();\n        const maticNetwork = currentNetwork.name;\n        const mainNetworkId = this.functionsUtil.getGlobalConfig(['network','providers','polygon','networkPairs',currentNetwork.id]);\n        const mainNetworkName = this.functionsUtil.getGlobalConfig(['network','availableNetworks',mainNetworkId,'name']);\n        newState.steps = [\n          {\n            icon:'LooksOne',\n            completed:false,\n            description:`Withdraw ${this.state.selectedToken} from ${maticNetwork} network`\n          },\n          {\n            icon:'LooksTwo',\n            completed:false,\n            description:`Wait for the checkpoint to be submitted`\n          },\n          {\n            icon:'Looks3',\n            completed:false,\n            description:`Exit ${this.state.selectedToken} from ${mainNetworkName} network`\n          },\n        ];\n        if (this.state.transactionSucceeded){\n          const withdrawnTokensEvent = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.events ? Object.values(this.state.transactionSucceeded.txReceipt.events).find( event => event.address.toLowerCase() === this.state.tokenConfig.childToken.address.toLowerCase() && event.raw.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && event.raw.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && event.raw.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n          const withdrawnTokensLog = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.logs ? this.state.transactionSucceeded.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.childToken.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n          const withdrawnTokens = withdrawnTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(withdrawnTokensLog.data,16),this.state.tokenConfig.decimals) : (this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.events && this.state.transactionSucceeded.txReceipt.events.Transfer ? this.functionsUtil.fixTokenDecimals(this.state.transactionSucceeded.txReceipt.events.Transfer.returnValues.value,this.state.tokenConfig.decimals) : ( withdrawnTokensEvent ? this.functionsUtil.fixTokenDecimals(parseInt(withdrawnTokensEvent.raw.data,16),this.state.tokenConfig.decimals)  : this.functionsUtil.BNify(0)));\n          newState.infoBox = {\n            icon:'DoneAll',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`You have successfully withdrawn <strong>${withdrawnTokens.toFixed(4)} ${this.state.selectedToken}</strong> from the Polygon chain. Please wait up to 2-3 hours to be able to complete the withdrawal.`\n          }\n        } else {\n          let text = '';\n          switch (bridgeType){\n            case 'plasma':\n              text = `Please note that withdraw of funds takes ~7 days in Plasma.`;\n            break;\n            default:\n            case 'pos':\n              text = `Please note that withdraw of funds takes ~45 mins to 1 hour in PoS.`;\n            break;\n          }\n          newState.infoBox = {\n            text,\n            icon:'InfoOutline',\n            iconProps:{\n              color:'cellText'\n            },\n          }\n        }\n      break;\n      case 'Exit':\n        newState.availableNetworks = [1,5];\n        newState.txsToExit = this.state.polygonTxs.filter( tx => tx.included && tx.action === 'Withdraw' && !tx.exited && tx.tokenSymbol === this.state.selectedToken ).map( tx => {\n          const label = this.functionsUtil.strToMoment(tx.timeStamp*1000).format('DD-MM-YYYY HH:mm')+' - '+tx.value.toFixed(6)+' '+tx.token;\n          return {\n            label,\n            data:tx,\n            value:tx.hash\n          }\n        });\n\n        newState.defaultTransaction = newState.txsToExit.length>0 ? newState.txsToExit[0] : null;\n        newState.selectedTransaction = newState.defaultTransaction ? newState.defaultTransaction.data.hash : null;\n      break;\n      default:\n      break;\n    }\n\n    if (!newState.balanceProp){\n      newState.balanceProp = this.functionsUtil.BNify(0);\n    }\n\n    // console.log('updateData',newState);\n\n    this.setState(newState);\n  }\n\n  async loadData(){\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens).reduce( (output,token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      if (tokenConfig.enabled){\n        output.push({\n          value:token,\n          label:token,\n          ...tokenConfig\n        });\n      }\n      return output;\n    },[]);\n\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    const paramIsToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2];\n    const selectedToken = paramIsToken ? this.props.urlParams.param2 : (this.props.selectedToken || this.state.selectedToken || availableTokens[0].value);\n    const selectedOption = availableTokens.find( t => t.value === selectedToken );\n    const defaultAction = !paramIsToken ? (currentNetwork.provider === 'infura' ? 'Deposit' : 'Withdraw') : 'Deposit';\n    const selectedAction = this.props.action || this.state.action || defaultAction;\n    const tokenConfig = this.props.toolProps.availableTokens[selectedToken];\n\n    // console.log('loadData',this.props.urlParams);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedOption,\n      selectedAction,\n      availableTokens\n    },() => {\n      this.loadPolygonTxs();\n    });\n  }\n\n  async exitSelectedTransaction(){\n\n  }\n\n  selectToken(selectedToken){\n    this.setState({\n      selectedToken\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  render() {\n    const fullWidth = !!this.props.fullWidth;\n    const isExit = this.state.selectedAction === 'Exit';\n    const isDeposit = this.state.selectedAction === 'Deposit';\n    const isWithdraw = this.state.selectedAction === 'Withdraw';\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    const currentNetworkId = currentNetwork.id;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.availableTokens ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading tokens...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.availableTokens.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active tokens.\n                  </Text>\n                ) : (\n                  <Flex\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                    width={[1,fullWidth ? 1 : 0.38]}\n                  >\n                    {\n                      !this.props.selectedToken && (\n                        <Box\n                          width={1}\n                        >\n                          <Text\n                            mb={1}\n                          >\n                            Select Token:\n                          </Text>\n                          <AssetSelector\n                            id={'tokens'}\n                            {...this.props}\n                            showBalance={false}\n                            isSearchable={false}\n                            onChange={this.selectToken.bind(this)}\n                            selectedToken={this.state.selectedToken}\n                            availableTokens={this.props.toolProps.availableTokens}\n                          />\n                        </Box>\n                      )\n                    }\n                    {\n                      this.state.selectedToken && (\n                        <Box\n                          mt={2}\n                          width={1}\n                        >\n                          {\n                            !this.props.action && (\n                              <Box\n                                width={1}\n                              >\n                                <Text\n                                  mb={2}\n                                >\n                                  Choose the action:\n                                </Text>\n                                <Flex\n                                  mb={3}\n                                  alignItems={'center'}\n                                  flexDirection={'row'}\n                                  justifyContent={'space-between'}\n                                >\n                                  <CardIconButton\n                                    {...this.props}\n                                    cardProps={{\n                                      px:3,\n                                      py:2,\n                                      width:0.325\n                                    }}\n                                    textProps={{\n                                      fontWeight:2,\n                                      fontSize:[1,2]\n                                    }}\n                                    text={'Deposit'}\n                                    iconColor={'deposit'}\n                                    icon={'ArrowDownward'}\n                                    iconBgColor={'#ced6ff'}\n                                    handleClick={ e => this.setAction('Deposit') }\n                                    isActive={ this.state.selectedAction === 'Deposit' }\n                                  />\n                                  <CardIconButton\n                                    {...this.props}\n                                    cardProps={{\n                                      px:3,\n                                      py:2,\n                                      width:0.325\n                                    }}\n                                    textProps={{\n                                      fontWeight:2,\n                                      fontSize:[1,2]\n                                    }}\n                                    text={'Withdraw'}\n                                    iconColor={'redeem'}\n                                    icon={'ArrowUpward'}\n                                    iconBgColor={'#ceeff6'}\n                                    handleClick={ e => this.setAction('Withdraw') }\n                                    isActive={ this.state.selectedAction === 'Withdraw' }\n                                  />\n                                  <CardIconButton\n                                    {...this.props}\n                                    cardProps={{\n                                      px:3,\n                                      py:2,\n                                      width:0.325\n                                    }}\n                                    textProps={{\n                                      fontWeight:2,\n                                      fontSize:[1,2]\n                                    }}\n                                    text={'Exit'}\n                                    icon={'SwapHoriz'}\n                                    iconColor={'redeem'}\n                                    iconBgColor={'#ceeff6'}\n                                    handleClick={ e => this.setAction('Exit') }\n                                    isActive={ this.state.selectedAction === 'Exit' }\n                                  />\n                                </Flex>\n                              </Box>\n                            )\n                          }\n                          {\n                            !this.state.availableNetworks.includes(currentNetworkId) ? (\n                              <DashboardCard\n                                cardProps={{\n                                  p:3,\n                                  mb:3,\n                                  width:1\n                                }}\n                              >\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                >\n                                  <Icon\n                                    size={'1.8em'}\n                                    name={'Warning'}\n                                    color={'cellText'}\n                                  />\n                                  <Text\n                                    mt={1}\n                                    fontSize={2}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    The <strong>{this.functionsUtil.capitalize(currentNetwork.name)} network</strong> is not supported for this function, please switch to <strong>{this.functionsUtil.getGlobalConfig(['network','availableNetworks',this.functionsUtil.getGlobalConfig(['network','providers','polygon','networkPairs',currentNetworkId]),'name'])} network</strong>.\n                                  </Text>\n                                  <RoundButton\n                                    buttonProps={{\n                                      mt:3,\n                                      width:[1,1/2],\n                                      fontSize:[1,2]\n                                    }}\n                                    handleClick={e => this.props.setRequiredNetwork(this.functionsUtil.getGlobalConfig(['network','providers','polygon','networkPairs',currentNetworkId]))}\n                                  >\n                                    Switch Network\n                                  </RoundButton>\n                                </Flex>\n                              </DashboardCard>\n                            ) : (this.state.tokenConfig && this.state.balanceProp && this.state.contractInfo) ? (\n                              <Box\n                                mt={1}\n                                width={1}\n                                mb={[4,3]}\n                              >\n                                {\n                                  (isDeposit || isWithdraw) ? (\n                                    <SendTxWithBalance\n                                      {...this.props}\n                                      error={this.state.error}\n                                      steps={this.state.steps}\n                                      infoBox={this.state.infoBox}\n                                      action={this.state.selectedAction}\n                                      tokenConfig={this.state.tokenConfig}\n                                      tokenBalance={this.state.balanceProp}\n                                      contractInfo={this.state.contractInfo}\n                                      permitEnabled={this.state.permitEnabled}\n                                      approveEnabled={this.state.approveEnabled}\n                                      callback={this.transactionSucceeded.bind(this)}\n                                      approveDescription={this.state.approveDescription}\n                                      contractApproved={this.contractApproved.bind(this)}\n                                      balanceSelectorInfo={this.state.balanceSelectorInfo}\n                                      changeInputCallback={this.changeInputCallback.bind(this)}\n                                      getTransactionParams={this.getTransactionParams.bind(this)}\n                                    >\n                                      {\n                                        isDeposit ? (\n                                          <Flex\n                                            width={1}\n                                            alignItems={'stretch'}\n                                            flexDirection={'column'}\n                                            justifyContent={'center'}\n                                          >\n                                            <BuyModal\n                                              {...this.props}\n                                              showInline={true}\n                                              availableMethods={[]}\n                                              buyToken={this.state.selectedToken}\n                                            />\n                                          </Flex>\n                                          // `You don't have any ${this.state.selectedToken} in your wallet.`\n                                        ) : isWithdraw && (\n                                          <DashboardCard\n                                            cardProps={{\n                                              p:3\n                                            }}\n                                          >\n                                            <Flex\n                                              alignItems={'center'}\n                                              flexDirection={'column'}\n                                            >\n                                              <Icon\n                                                name={'MoneyOff'}\n                                                color={'cellText'}\n                                                size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                              />\n                                              <Text\n                                                mt={1}\n                                                fontSize={2}\n                                                color={'cellText'}\n                                                textAlign={'center'}\n                                              >\n                                                You don't have any {this.state.selectedToken} to withdraw.\n                                              </Text>\n                                            </Flex>\n                                          </DashboardCard>\n                                        )\n                                      }\n                                    </SendTxWithBalance>\n                                  ) : isExit && (\n                                    <Box\n                                      width={1}\n                                    >\n                                      {\n                                        !this.state.dataLoaded ? (\n                                          <Flex\n                                            mt={4}\n                                            flexDirection={'column'}\n                                          >\n                                            <FlexLoader\n                                              flexProps={{\n                                                flexDirection:'row'\n                                              }}\n                                              loaderProps={{\n                                                size:'30px'\n                                              }}\n                                              textProps={{\n                                                ml:2\n                                              }}\n                                              text={'Loading transactions...'}\n                                            />\n                                          </Flex>\n                                        ) : this.state.txsToExit.length ? (\n                                          <Box\n                                            width={1}\n                                          >\n                                            <Text mb={1}>\n                                              Select Transaction:\n                                            </Text>\n                                            <GenericSelector\n                                              {...this.props}\n                                              isSearchable={false}\n                                              name={'transactions'}\n                                              options={this.state.txsToExit}\n                                              onChange={this.selectTransaction.bind(this)}\n                                              defaultValue={this.state.defaultTransaction}\n                                            />\n                                            {\n                                              this.state.selectedTransaction && (\n                                                <ExecuteTransaction\n                                                  action={'Exit'}\n                                                  Component={RoundButton}\n                                                  parentProps={{\n                                                    mt:3,\n                                                    alignItems:'center',\n                                                    justifyContent:'center'\n                                                  }}\n                                                  componentProps={{\n                                                    buttonProps:{\n                                                      value:'Exit',\n                                                      width:[1,1/3],\n                                                      size:'medium',\n                                                      mainColor:'redeem'\n                                                    },\n                                                    value:'Exit Transaction',\n                                                  }}\n                                                  params={[]}\n                                                  methodName={'exit'}\n                                                  sendRawTransaction={true}\n                                                  contractName={'RootChainManager'}\n                                                  callback={this.exitCallback.bind(this)}\n                                                  getTransactionParamsAsync={this.getExitTransactionParams.bind(this)}\n                                                  {...this.props}\n                                                >\n                                                  <Flex\n                                                    flexDirection={'row'}\n                                                    alignItems={'center'}\n                                                    justifyContent={'center'}\n                                                  >\n                                                    <Icon\n                                                      mr={1}\n                                                      name={'Done'}\n                                                      size={'1.4em'}\n                                                      color={this.props.theme.colors.transactions.status.completed}\n                                                    />\n                                                    <Text\n                                                      fontWeight={500}\n                                                      fontSize={'15px'}\n                                                      color={'copyColor'}\n                                                      textAlign={'center'}\n                                                    >\n                                                      Transaction successfully exited!\n                                                    </Text>\n                                                  </Flex>\n                                                </ExecuteTransaction>\n                                              )\n                                            }\n                                          </Box>\n                                        ) : (\n                                          <DashboardCard\n                                            cardProps={{\n                                              p:3,\n                                              width:1\n                                            }}\n                                          >\n                                            <Flex\n                                              alignItems={'center'}\n                                              flexDirection={'column'}\n                                            >\n                                              <Icon\n                                                size={'1.8em'}\n                                                name={'Warning'}\n                                                color={'cellText'}\n                                              />\n                                              <Text\n                                                mt={1}\n                                                fontSize={2}\n                                                color={'cellText'}\n                                                textAlign={'center'}\n                                              >\n                                                You cannot exit any transaction yet.\n                                              </Text>\n                                            </Flex>\n                                          </DashboardCard>\n                                        )\n                                      }\n                                    </Box>\n                                  )\n                                }\n                              </Box>\n                            ) : (\n                              <Flex\n                                mt={3}\n                                mb={3}\n                                width={1}\n                              >\n                                <FlexLoader\n                                  flexProps={{\n                                    flexDirection:'row'\n                                  }}\n                                  loaderProps={{\n                                    size:'30px'\n                                  }}\n                                  textProps={{\n                                    ml:2\n                                  }}\n                                  text={'Loading info...'}\n                                />\n                              </Flex>\n                            )\n                          }\n                        </Box>\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default PolygonBridge;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass CoverProtocol extends Component {\n\n  state = {\n    steps:null,\n    infoBox:null,\n    swapInfo:null,\n    portfolio:null,\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    selectedAction:null,\n    successMessage:null,\n    activeCoverages:null,\n    defaultCoverage:null,\n    selectedCoverage:null,\n    contractApproved:false,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    transactionSucceeded:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n    // window.transactionSucceeded = this.transactionSucceeded.bind(this);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedCoverageChanged = prevState.selectedCoverage !== this.state.selectedCoverage;\n    if (selectedCoverageChanged){\n      const selectedToken = this.state.selectedCoverage.collateral;\n      const tokenConfig = Object.values(this.props.availableStrategies)[0][selectedToken];\n      const tokenBalance = await this.functionsUtil.getTokenBalance(selectedToken,this.props.account);\n      const selectedAction = !this.state.selectedAction ? (this.props.urlParams.param2 || 'Claim') : this.state.selectedAction;\n      this.setState({\n        tokenConfig,\n        tokenBalance,\n        selectedToken,\n        selectedAction\n      });\n    }\n\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue && this.state.inputValue.gt(0);\n    const swapInfoChanged = JSON.stringify(prevState.swapInfo) !== JSON.stringify(this.state.swapInfo) && this.state.inputValue && this.state.inputValue.gt(0);\n    if (selectedActionChanged || inputValueChanged || swapInfoChanged || contractApprovedChanged){\n      this.updateData();\n    }\n\n    const contractInfoChanged = JSON.stringify(prevState.contractInfo) !== JSON.stringify(this.state.contractInfo);\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async getSwapInfo(amount){\n    amount = this.functionsUtil.BNify(amount);\n    if (!amount.isNaN() && amount.gt(0)){\n      // console.log('getSwapInfo',this.state.contractInfo.name,this.state.tokenConfig.address,balancerTokenConfig.address,swapFee,covTokens,tokenPrice);\n\n      if (this.state.tokenPrice && this.state.swapFee && this.state.covTokens){\n\n        const swapFee = this.state.swapFee;\n        const tokenPrice = this.state.tokenPrice;\n        let tokenAmountOut = amount.div(tokenPrice);\n        tokenAmountOut = tokenAmountOut.minus(tokenAmountOut.times(swapFee));\n\n        return {\n          amount,\n          tokenAmountOut\n        };\n      }\n    }\n\n    return null;\n  }\n\n  async changeInputCallback(inputValue=null){\n    let swapInfo = null;\n    let balanceSelectorInfo = null;\n    inputValue = inputValue || this.state.inputValue;\n\n    if (inputValue && this.functionsUtil.BNify(inputValue).gt(0)){\n      switch (this.state.selectedAction){\n        case 'Mint':\n          balanceSelectorInfo = {\n            color:this.props.theme.colors.transactions.status.completed,\n            text:`You will Mint: ${inputValue.toFixed(4)} CLAIM and NOCLAIM`\n          };\n        break;\n        case 'Claim':\n        case 'NoClaim':\n          const amount = this.functionsUtil.normalizeTokenAmount(inputValue,this.state.tokenConfig.decimals);\n          swapInfo = await this.getSwapInfo(amount);\n          if (swapInfo){\n            if (swapInfo.tokenAmountOut.lte(this.state.covTokens)){\n              balanceSelectorInfo = {\n                color:this.props.theme.colors.transactions.status.completed,\n                text:`You will Buy: ~${this.functionsUtil.fixTokenDecimals(swapInfo.tokenAmountOut,18).toFixed(4)} ${this.state.selectedAction}`\n              };\n            } else {\n              balanceSelectorInfo = {\n                text:`Not enough liquidity`,\n                color:this.props.theme.colors.transactions.status.failed,\n              };\n            }\n          }\n        break;\n        default:\n        break;\n      }\n    }\n\n    this.setState({\n      swapInfo,\n      inputValue,\n      balanceSelectorInfo\n    });\n  }\n\n  async getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = null;\n    amount = this.functionsUtil.BNify(amount);\n    const MAX_UINT256 = this.functionsUtil.BNify(2).pow(256).minus(1).toFixed(0);\n    switch (this.state.selectedAction){\n      case 'Mint':\n        methodName = 'addCover';\n        methodParams = [this.state.tokenConfig.address,parseInt(this.state.selectedCoverage.expirationTimestamp),this.functionsUtil.integerValue(amount)];\n      break;\n      case 'Claim':\n      case 'NoClaim':\n        methodName = 'swapExactAmountOut';\n        const balancerTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const swapInfo = await this.getSwapInfo(amount);\n        if (swapInfo){\n          if (swapInfo.tokenAmountOut.lte(this.state.covTokens)){\n            methodParams = [this.state.tokenConfig.address,this.functionsUtil.integerValue(amount),balancerTokenConfig.address, this.functionsUtil.integerValue(swapInfo.tokenAmountOut), MAX_UINT256];\n          } else {\n            return null;\n          }\n        }\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    let infoBox = null;\n    const dashboardUrl = `#${this.functionsUtil.getGlobalConfig(['dashboard','baseRoute'])}/best`;\n    const fixedAmount = this.functionsUtil.fixTokenDecimals(amount,this.state.tokenConfig.decimals);\n    switch (this.state.selectedAction){\n      case 'Mint':\n        const mintedClaimLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.selectedCoverage.tokens['Claim'].address ) : null;\n        const mintedNoClaimLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.selectedCoverage.tokens['NoClaim'].address ) : null;\n        const mintedClaimAmount = mintedClaimLog ? this.functionsUtil.fixTokenDecimals(parseInt(mintedClaimLog.data,16),this.state.contractInfo.decimals) : fixedAmount;\n        const mintedNoClaimAmount = mintedNoClaimLog ? this.functionsUtil.fixTokenDecimals(parseInt(mintedNoClaimLog.data,16),this.state.contractInfo.decimals) : fixedAmount;\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully minted <strong>${mintedClaimAmount.toFixed(4)} CLAIM</strong> and <strong>${mintedNoClaimAmount.toFixed(4)} NOCLAIM</strong> tokens<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      case 'Claim':\n        const claimTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const claimTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === claimTokenConfig.address ) : null;\n        const receivedClaimAmount = claimTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(claimTokensLog.data,16),claimTokenConfig.balancerPool.decimals) : this.functionsUtil.fixTokenDecimals(params[3],claimTokenConfig.balancerPool.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully bought <strong>${receivedClaimAmount.toFixed(4)} ${this.state.selectedAction}</strong> tokens, you are now covered in the event that there is a successful attack on the protocol<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      case 'NoClaim':\n        debugger;\n        const noClaimTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const noClaimTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === noClaimTokenConfig.address ) : null;\n        const receivedNoClaimAmount = noClaimTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(noClaimTokensLog.data,16),noClaimTokenConfig.balancerPool.decimals) : this.functionsUtil.fixTokenDecimals(params[3],noClaimTokenConfig.balancerPool.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully bought <strong>${receivedNoClaimAmount.toFixed(4)} ${this.state.selectedAction}</strong> tokens, you will be rewarded if there is no successful attack on the protocol by the expiry date<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    // Set second step completed\n    let steps = this.state.steps;\n    steps[1].completed = true;\n\n    const transactionSucceeded = true;\n    const tokenBalance = await this.functionsUtil.getTokenBalance(this.state.selectedToken,this.props.account);\n\n    // console.log('transactionSucceeded',infoBox);\n\n    this.setState({\n      steps,\n      infoBox,\n      tokenBalance,\n      transactionSucceeded\n    });\n  }\n\n  async updateData(){\n    let apy = null;\n    const steps = [];\n    let infoBox = null;\n    let swapFee = null;\n    let covTokens = null;\n    let tokenPrice = null;\n    let tokenAmount = null;\n    let contractInfo = null;\n    let collateralAmount = null;\n    let approveDescription = null;\n\n    const claimTokenConfig = this.state.selectedCoverage.tokens['Claim'];\n    const noClaimTokenConfig = this.state.selectedCoverage.tokens['NoClaim'];\n    const balancerClaimConfig = claimTokenConfig.balancerPool;\n    const balancerNoClaimConfig = noClaimTokenConfig.balancerPool;\n\n    await Promise.all([\n      this.props.initContract(claimTokenConfig.name,claimTokenConfig.address,claimTokenConfig.abi),\n      this.props.initContract(noClaimTokenConfig.name,noClaimTokenConfig.address,noClaimTokenConfig.abi),\n      this.props.initContract(balancerClaimConfig.name,balancerClaimConfig.address,balancerClaimConfig.abi),\n      this.props.initContract(balancerNoClaimConfig.name,balancerNoClaimConfig.address,balancerNoClaimConfig.abi)\n    ]);\n\n    const [\n      claimTokenBalance,\n      noClaimTokenBalance,\n      balancerPoolClaimBalance,\n      balancerPoolNoClaimBalance\n    ] = await Promise.all([\n      // Get Claim token balance\n      this.functionsUtil.getTokenBalance(claimTokenConfig.name,this.props.account),\n      // Get NOCLAIM token balance\n      this.functionsUtil.getTokenBalance(noClaimTokenConfig.name,this.props.account),\n      // Get Balancer Claim token Pool balance\n      this.functionsUtil.getTokenBalance(balancerClaimConfig.name,this.props.account),\n      // Get Balancer NOCLAIM token Pool balance\n      this.functionsUtil.getTokenBalance(balancerNoClaimConfig.name,this.props.account)\n    ]);\n\n    // Check if user has both Claim and NOCLAIM tokens\n    const hasMintedTokens = claimTokenBalance && noClaimTokenBalance && claimTokenBalance.gt(0) && noClaimTokenBalance.gt(0);\n\n    // Set Contract Info\n    switch (this.state.selectedAction){\n      case 'Mint':\n        contractInfo = this.props.toolProps.contract;\n      break;\n      case 'NoClaim':\n        contractInfo = noClaimTokenConfig.balancerPool;\n      break;\n      case 'Claim':\n        contractInfo = claimTokenConfig.balancerPool;\n      break;\n      default:\n      break;\n    }\n\n    const balancerTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n\n    if (contractInfo){\n      if (balancerTokenConfig){\n        [\n          swapFee,\n          covTokens,\n          tokenPrice\n        ] = await Promise.all([\n          this.functionsUtil.genericContractCall(contractInfo.name,'getSwapFee'),\n          this.functionsUtil.genericContractCall(contractInfo.name,'getBalance',[balancerTokenConfig.address]),\n          this.functionsUtil.genericContractCall(contractInfo.name,'getSpotPrice',[this.state.tokenConfig.address,balancerTokenConfig.address])\n        ]);\n\n        // Calculate yearly returns\n        if (tokenPrice){\n          const isClaim = this.state.selectedAction === 'Claim';\n          const expirationTimestamp = this.state.selectedCoverage.expirationTimestamp;\n          const days =  (expirationTimestamp*1000 - Date.now())/(60 * 60 * 24 * 1000);\n          tokenPrice = this.functionsUtil.fixTokenDecimals(tokenPrice,this.state.tokenConfig.decimals);\n          const apyPrice = isClaim ? tokenPrice : this.functionsUtil.BNify(1).minus(tokenPrice).div(tokenPrice);\n          apy = this.functionsUtil.BNify(100).times(apyPrice).times(365).div(days);\n        }\n\n        // Fix swap Fees\n        if (swapFee){\n          swapFee = this.functionsUtil.fixTokenDecimals(swapFee,18);\n        }\n      }\n\n      switch (this.state.selectedAction){\n        case 'Mint':\n          approveDescription = `Approve the Cover Protocol contract`;\n          infoBox = {\n            icon:'MonetizationOn',\n            text:`Stake ${this.state.selectedToken} to mint both CLAIM and NOCLAIM tokens in a 1:1 ratio then add them to the respective Balancer Pool to earn trading fees.<br /><small>Prior to expiry or an accepted claim, users can redeem back their collateral with both their CLAIM and NOCLAIM tokens. <a href=\"https://docs.coverprotocol.com/user-guide/redemption\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a></small>`\n          };\n          // Add Approve Step\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:hasMintedTokens,\n            description:`Mint CLAIM and NOCLAIM tokens`\n          });\n          // Add Liquidity to Balancer Step\n          steps.push({\n            icon:'Looks3',\n            description:`Add your CLAIM tokens to the Balancer Pool`,\n            completed:balancerPoolClaimBalance && balancerPoolClaimBalance.gt(0),\n            link:`https://pools.balancer.exchange/#/pool/${this.state.selectedCoverage.tokens['Claim'].balancerPool.address}/`,\n          });\n          // Add Liquidity to Balancer Step\n          steps.push({\n            icon:'Looks4',\n            description:`Add your NOCLAIM tokens to the Balancer Pool`,\n            completed:balancerPoolNoClaimBalance && balancerPoolNoClaimBalance.gt(0),\n            link:`https://pools.balancer.exchange/#/pool/${this.state.selectedCoverage.tokens['NoClaim'].balancerPool.address}/`,\n          });\n        break;\n        case 'NoClaim':\n          if (this.state.swapInfo){\n            collateralAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.amount,this.state.tokenConfig.decimals);\n            tokenAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.tokenAmountOut,contractInfo.decimals);\n            infoBox = {\n              icon:'VerifiedUser',\n              text:`By providing <strong>${collateralAmount.toFixed(4)} ${this.state.selectedToken}</strong> your NOCLAIM tokens will pay out <strong>~${tokenAmount.toFixed(4)} ${this.state.selectedToken}</strong> if there is no successful attack on the protocol by the expiry date.`\n            };\n          } else {\n            infoBox = {\n              icon:'VerifiedUser',\n              text:`NOCLAIM tokens will pay out 1 ${this.state.selectedToken} for each token you hold if there is no successful attack on the protocol by the expiry date.`\n            };\n          }\n\n          // Add Yearly cost and read more\n          infoBox.text+=`${apy ? `<br /><span style=\"color:${this.props.theme.colors.primary}\">The yearly return of buying and holding NOCLAIM until expiration is <strong>${apy.toFixed(2)}%</strong>` : null}</span><br /><small><a href=\"https://docs.coverprotocol.com/product/claims-guidelines\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a> to understand how claims are assessed and paid out by Cover Protocol.</small>`;\n\n          // Add Approve Step\n          approveDescription = `Approve the NOCLAIM Balancer Pool contract`;\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:noClaimTokenBalance && noClaimTokenBalance.gt(0),\n            description:`Buy NOCLAIM tokens with your ${this.state.selectedToken}`\n          });\n        break;\n        case 'Claim':\n          if (this.state.swapInfo){\n            collateralAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.amount,this.state.tokenConfig.decimals);\n            tokenAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.tokenAmountOut,contractInfo.decimals);\n            const portfolioCoveredPerc = 32;//this.state.portfolio && this.state.portfolio.totalBalance.gt(0) ? tokenAmount.div(this.state.portfolio.totalBalance).times(100) : null;\n            infoBox = {\n              icon:'BeachAccess',\n              text:`By providing <strong>${collateralAmount.toFixed(4)} ${this.state.selectedToken}</strong> your CLAIM tokens will pay out <strong>~${tokenAmount.toFixed(4)} ${this.state.selectedToken}</strong>${ portfolioCoveredPerc ? ` <strong>(${portfolioCoveredPerc}% of your portfolio)</strong>` : '' } in the event that there is a successful attack on the protocol before the expiry date.`\n            };\n          } else {\n            infoBox = {\n              icon:'BeachAccess',\n              text:`CLAIM tokens will pay out 1 ${this.state.selectedToken} for each token you hold in the event that there is a successful attack on the protocol before the expiry date.`\n            };\n          }\n\n          infoBox.text+=`${apy ? `<br /><span style=\"color:${this.props.theme.colors.primary}\">The yearly cost of buying and holding CLAIM until expiration is <strong>${apy.toFixed(2)}%` : null}</strong></span><br /><small><a href=\"https://docs.coverprotocol.com/product/claims-guidelines\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a> to understand how claims are assessed and paid out by Cover Protocol.</small>`;\n\n          // Add Approve Step\n          approveDescription = `Approve the CLAIM Balancer Pool contract`;\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:claimTokenBalance && claimTokenBalance.gt(0),\n            description:`Buy CLAIM tokens with your ${this.state.selectedToken}`\n          });\n        break;\n        default:\n        break;\n      }\n\n      const transactionSucceeded = false;\n      this.setState({\n        apy,\n        steps,\n        infoBox,\n        swapFee,\n        covTokens,\n        tokenPrice,\n        contractInfo,\n        approveDescription,\n        transactionSucceeded\n      });\n    }\n  }\n\n  async loadData(){\n    const currTime = parseInt(Date.now()/1000);\n    const activeCoverages = this.props.toolProps.coverages.reduce( (output,c,index) => {\n      if (c.expirationTimestamp>currTime){\n        const expirationDate = this.functionsUtil.strToMoment(c.expirationTimestamp*1000).utc().format('YYYY-MM-DD HH:mm:ss')+' UTC';\n        const icon = `images/tokens/${c.collateral}.svg`;\n        const label = `Collateral: ${c.collateral} - Expiration: ${expirationDate}`;\n        output.push({\n          icon,\n          label,\n          data:c,\n          value:expirationDate,\n        });\n      }\n      return output;\n    },[]);\n\n    const portfolio = await this.functionsUtil.getAccountPortfolio();\n    const defaultCoverage = activeCoverages.length ? activeCoverages[0] : null;\n\n    this.setState({\n      portfolio,\n      defaultCoverage,\n      activeCoverages\n    },() => {\n      if (defaultCoverage){\n        this.selectCoverage(defaultCoverage);\n      }\n    });\n  }\n\n  async selectCoverage(coverage){\n    const selectedCoverage = coverage.data;\n    this.setState({\n      selectedCoverage\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  render() {\n\n    const isMint = this.state.selectedAction === 'Mint';\n    const isBuyClaim = this.state.selectedAction === 'Claim';\n    const isBuyNoClaim = this.state.selectedAction === 'NoClaim';\n    const txAction = isMint ? this.state.selectedAction : `Buy ${this.state.selectedAction}`;\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.activeCoverages ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading active coverages...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.activeCoverages.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active coverages.\n                  </Text>\n                ) : (\n                  <Flex\n                    width={[1,0.46]}\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Box\n                      width={1}\n                    >\n                      <Text mb={1}>\n                        Select Coverage:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        name={'strategy'}\n                        isSearchable={false}\n                        options={this.state.activeCoverages}\n                        CustomOptionValue={CustomOptionValue}\n                        defaultValue={this.state.defaultCoverage}\n                        onChange={this.selectCoverage.bind(this)}\n                        CustomValueContainer={CustomValueContainer}\n                      />\n                    </Box>\n                    {\n                      this.state.selectedCoverage && (\n                        <Box\n                          mt={3}\n                          width={1}\n                        >\n                          <Text mb={1}>\n                            Select Action:\n                          </Text>\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={['column','row']}\n                            justifyContent={'space-between'}\n                          >\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isMint ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Add Liquidity'}\n                              imageSrc={'images/mint.svg'}\n                              isMobile={this.props.isMobile}\n                              subcaption={'mint CLAIM and NOCLAIM\\nand stake in Balancer Pool'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isMint}\n                              handleClick={ e => this.setAction('Mint') }\n                            />\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isBuyClaim ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Buy CLAIM'}\n                              imageSrc={'images/claim.svg'}\n                              isMobile={this.props.isMobile}\n                              subcaption={'protect in case of attacks\\nagainst the Idle protocol'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isBuyClaim}\n                              handleClick={ e => this.setAction('Claim') }\n                            />\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isBuyNoClaim ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Buy NOCLAIM'}\n                              isMobile={this.props.isMobile}\n                              imageSrc={'images/noclaim.svg'}\n                              subcaption={'get rewarded if no attack\\noccurs on the Idle protocol'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isBuyNoClaim}\n                              handleClick={ e => this.setAction('NoClaim') }\n                            />\n                          </Flex>\n                          {\n                            this.state.tokenConfig && this.state.tokenBalance && this.state.contractInfo &&\n                              <Box\n                                mt={2}\n                                mb={3}\n                                width={1}\n                              >\n                                <SendTxWithBalance\n                                  {...this.props}\n                                  action={txAction}\n                                  error={this.state.error}\n                                  steps={this.state.steps}\n                                  infoBox={this.state.infoBox}\n                                  tokenConfig={this.state.tokenConfig}\n                                  tokenBalance={this.state.tokenBalance}\n                                  contractInfo={this.state.contractInfo}\n                                  callback={this.transactionSucceeded.bind(this)}\n                                  contractApproved={this.contractApproved.bind(this)}\n                                  approveDescription={this.state.approveDescription}\n                                  balanceSelectorInfo={this.state.balanceSelectorInfo}\n                                  changeInputCallback={this.changeInputCallback.bind(this)}\n                                  getTransactionParams={this.getTransactionParams.bind(this)}\n                                >\n                                  <BuyModal\n                                    {...this.props}\n                                    showInline={true}\n                                    availableMethods={[]}\n                                    buyToken={this.state.selectedToken}\n                                  />\n                                </SendTxWithBalance>\n                              </Box>\n                          }\n                        </Box>\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default CoverProtocol;\n","import Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass TokenMigration extends Component {\n\n  state = {\n    tokenConfig:null,\n    selectedFromToken:null,\n    selectedDestToken:null,\n    migrationSucceeded:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async loadTokens(){\n    const selectedFromToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    if (selectedFromToken && selectedFromToken !== this.props.urlParams.param2){\n      this.changeFromToken(selectedFromToken);\n    }\n\n    this.selectFromToken(selectedFromToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      await this.loadTokens();\n    }\n  }\n\n  changeFromToken = (selectedToken) => {\n    const convertTool = this.functionsUtil.getGlobalConfig(['tools','tokenMigration']);\n    this.props.goToSection(`tools/${convertTool.route}/${selectedToken}`);\n  }\n\n  selectFromToken = async (selectedFromToken) => {\n    const tokenInfo = this.props.toolProps.availableTokens[selectedFromToken];\n\n    let selectedDestToken = null;\n    const availableDestinationTokens = {};\n\n    const availableStrategies = typeof this.props.toolProps.availableStrategies !== 'undefined' ? this.props.toolProps.availableStrategies : Object.keys(this.props.availableStrategies);\n\n    availableStrategies.forEach( strategy => {\n      const strategyAvailableTokens =  this.props.availableStrategies[strategy];\n      const baseTokenConfig = strategyAvailableTokens[tokenInfo.baseToken];\n      if (!baseTokenConfig){\n        return false;\n      }\n\n      // Remove icon\n      delete baseTokenConfig.icon;\n\n      if (!selectedDestToken){\n        selectedDestToken = baseTokenConfig.idle.token;\n      }\n      baseTokenConfig.strategy = strategy;\n      baseTokenConfig.baseToken = tokenInfo.baseToken;\n      availableDestinationTokens[baseTokenConfig.idle.token] = baseTokenConfig;\n    });\n\n    this.setState({\n      tokenConfig:null,\n      selectedFromToken,\n      availableDestinationTokens\n    },() => {\n      this.selectDestToken(selectedDestToken);\n    });\n  }\n\n  selectDestToken = async (selectedDestToken) => {\n\n    const destTokenConfig = this.state.availableDestinationTokens[selectedDestToken];\n    const tokenInfo = this.props.toolProps.availableTokens[this.state.selectedFromToken];\n\n    const tokenConfig = {\n      token:destTokenConfig.baseToken,\n      address:destTokenConfig.address,\n      decimals:destTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = destTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:tokenInfo.abi,\n      name:tokenInfo.token,\n      token:tokenInfo.token,\n      address:tokenInfo.address\n    };\n    \n    const migrationContract = this.props.toolProps.migrationContract;\n\n    // Add migration function\n    if (tokenInfo.migrateFunction){\n      migrationContract.functions[0].name = tokenInfo.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(destTokenConfig.strategy,tokenInfo.baseToken);\n\n    this.setState({\n      tokenConfig,\n      selectedDestToken\n    });\n  }\n\n  migrationCallback = () => {\n    this.setState({\n      migrationSucceeded:true\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedFromToken){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to migrate:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              id={'token-from'}\n              showBalance={true}\n              isSearchable={true}\n              onChange={this.changeFromToken}\n              selectedToken={this.state.selectedFromToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            this.state.availableDestinationTokens && this.state.selectedDestToken && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text mb={1}>\n                  Select destination asset:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  id={'token-dest'}\n                  showBalance={false}\n                  onChange={this.selectDestToken}\n                  selectedToken={this.state.selectedDestToken}\n                  availableTokens={this.state.availableDestinationTokens}\n                />\n              </Box>\n          }\n          {\n            this.state.selectedFromToken && this.state.selectedDestToken ? (\n              <Migrate\n                {...this.props}\n                showActions={false}\n                getTokenPrice={false}\n                isMigrationTool={true}\n                tokenConfig={this.state.tokenConfig}\n                migrationCallback={this.migrationCallback}\n                selectedToken={this.state.selectedFromToken}\n                selectedStrategy={this.props.selectedStrategy}\n              >\n                {\n                  !this.props.account ? (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'2.3em'}\n                          name={'Input'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={2}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Please connect with your wallet interact with Idle.\n                        </Text>\n                        <RoundButton\n                          buttonProps={{\n                            mt:2,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.props.connectAndValidateAccount}\n                        >\n                          Connect\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      {\n                        this.state.migrationSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              Your {this.state.selectedFromToken} have been successfully migrated!\n                            </Text>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedFromToken} in your wallet.\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n              </Migrate>\n            ) : null\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenMigration;\n","/*\n// batchDeposits[user][batchId] = amount\nmapping (address => mapping (uint256 => uint256)) public batchDeposits;\nmapping (uint256 => uint256) batchTotals; // in idleToken\nmapping (uint256 => uint256) batchRedeemedTotals; // in newIdleToken\n\nuint256 public currBatch;\naddress public idleToken;\naddress public newIdleToken;\naddress public underlying;\n\nfunction deposit() external\nfunction withdraw(uint256 batchId) external\n*/\n\nimport Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Box, Text, Icon, Link } from \"rimble-ui\";\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport TransactionField from '../TransactionField/TransactionField';\n\nclass BatchMigration extends Component {\n\n  state = {\n    canClaim:false,\n    batchTotals:{},\n    canDeposit:true,\n    action:'deposit',\n    batchDeposits:{},\n    tokenConfig:null,\n    processing:{\n      claim:{\n        txHash:null,\n        loading:false\n      },\n    },\n    hasDeposited:false,\n    selectedToken:null,\n    batchCompleted:false,\n    claimSucceeded:false,\n    migrationSucceeded:false,\n    selectedTokenConfig:null,\n    migrationContractApproved:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async checkBatchs(){\n\n    const migrationContractInfo = this.state.selectedTokenConfig.migrationContract;\n\n    await Promise.all([\n      this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi),\n      this.props.initContract(this.state.selectedTokenConfig.name,this.state.selectedTokenConfig.address,this.state.selectedTokenConfig.abi)\n    ]);\n\n    const [currBatchIndex,migrationContractApproved] = await Promise.all([\n      this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'currBatch'),\n      this.functionsUtil.checkTokenApproved(this.state.selectedTokenConfig.name,migrationContractInfo.address,this.props.account)\n    ]);\n\n    const newState = {};\n    const batchDeposits = {};\n    const batchTotals = {};\n    let batchCompleted = false;\n\n    if (currBatchIndex !== null){\n      for (let batchIndex = 0; batchIndex <= currBatchIndex ; batchIndex++){\n        let [batchTotal,batchDeposit] = await Promise.all([\n          this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchTotals',[batchIndex]),\n          this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n        ]);\n        if (batchTotal && batchTotal !== null){\n          batchTotals[batchIndex] = this.functionsUtil.fixTokenDecimals(batchTotal,this.state.selectedTokenConfig.decimals);\n        }\n        if (batchDeposit !== null){\n          batchDeposit = this.functionsUtil.fixTokenDecimals(batchDeposit,this.state.selectedTokenConfig.decimals);\n          if (batchDeposit.gt(0)){\n\n            batchDeposits[batchIndex] = batchDeposit;\n            // Check claimable\n            if (batchIndex < currBatchIndex){\n              batchCompleted = true;\n            }\n          }\n        }\n      }\n\n      newState.batchDeposits = batchDeposits;\n    }\n\n    const hasDeposited = (batchDeposits && Object.keys(batchDeposits).length>0);\n\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    newState.claimSucceeded = false;\n    newState.batchTotals = batchTotals;\n    newState.batchCompleted = batchCompleted;\n    newState.hasDeposited = hasDeposited;\n    newState.canDeposit = !hasDeposited && batchMigrationDepositEnabled;\n    newState.canClaim = batchCompleted || hasDeposited;\n    newState.action = hasDeposited ? 'redeem' : 'deposit';\n    newState.migrationContractApproved = migrationContractApproved;\n\n    this.setState(newState);\n  }\n\n  async loadTokens(){\n    const selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    this.selectFromToken(selectedToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      await this.loadTokens();\n    }\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      this.checkBatchs();\n    }\n  }\n\n  selectFromToken = async (selectedToken) => {\n\n    const selectedTokenConfig = this.props.toolProps.availableTokens[selectedToken];\n    const strategyAvailableTokens =  this.props.availableStrategies[selectedTokenConfig.strategy];\n\n    const baseTokenConfig = strategyAvailableTokens[selectedTokenConfig.baseToken];\n\n    const tokenConfig = {\n      token:selectedTokenConfig.baseToken,\n      address:selectedTokenConfig.address,\n      decimals:selectedTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = baseTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:selectedTokenConfig.abi,\n      name:selectedTokenConfig.name,\n      token:selectedTokenConfig.token,\n      address:selectedTokenConfig.address\n    };\n    \n    const migrationContract = selectedTokenConfig.migrationContract;\n\n    // Add migration function\n    if (baseTokenConfig.migrateFunction){\n      migrationContract.functions[0].name = baseTokenConfig.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(selectedTokenConfig.strategy,baseTokenConfig.baseToken);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedTokenConfig\n    });\n  }\n\n  claim = async () => {\n    if (!this.state.batchCompleted){\n      return null;\n    }\n\n    const loading = true;\n    const claimableValue = 0;\n    const batchId = Object.keys(this.state.batchDeposits)[0];\n\n    const callbackClaim = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: `BatchMigration`,\n        eventAction: 'Claim',\n        eventLabel: this.props.selectedToken,\n        eventValue: parseInt(claimableValue)\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        claimSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          claim:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptClaim = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          claim:{\n            ...prevState.processing.claim,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'withdraw', [batchId], null, callbackClaim, callbackReceiptClaim);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        claim:{\n          ...prevState.processing.claim,\n          loading\n        }\n      }\n    }));\n  }\n\n  setAction = (action) => {\n    if (action !== null && ['deposit','redeem'].includes(action.toLowerCase())){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  migrationCallback = () => {\n    this.checkBatchs();\n    this.setState({\n      migrationSucceeded:true\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedToken){\n      return null;\n    }\n\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    const batchId = this.state.batchDeposits && Object.keys(this.state.batchDeposits).length>0 ? Object.keys(this.state.batchDeposits)[0] : null;\n    const batchDeposit = this.state.batchDeposits && Object.values(this.state.batchDeposits).length>0 ? Object.values(this.state.batchDeposits)[0] : null;\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to migrate:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              id={'token-from'}\n              showBalance={true}\n              isSearchable={false}\n              onChange={this.selectFromToken}\n              selectedToken={this.state.selectedToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            (this.state.canDeposit || this.state.canClaim) && \n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  px:4,\n                  mt:3,\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                > \n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.migrationContractApproved ? 'CheckBox' : 'LooksOne'}\n                      color={ this.state.migrationContractApproved ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Approve the batch migration contract\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.hasDeposited ? 'CheckBox' : 'LooksTwo'}\n                      color={ this.state.hasDeposited ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Deposit your {this.state.selectedTokenConfig.token}\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.batchCompleted ? 'CheckBox' : 'Looks3'}\n                      color={ this.state.batchCompleted ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Wait for the batch to be migrated\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.claimSucceeded ? 'CheckBox' : 'Looks4'}\n                      color={ this.state.claimSucceeded ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Claim your {this.state.selectedToken}V4\n                    </Text>\n                  </Flex>\n                </Flex>\n              </DashboardCard>\n          }\n          {\n            this.state.selectedToken ? (\n              <Box width={1}>\n                {\n                  this.state.migrationContractApproved && (this.state.canDeposit || this.state.canClaim) && \n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text mb={2}>\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canDeposit ? this.setAction('deposit') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canDeposit }\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canClaim ? this.setAction('redeem') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canClaim }\n                          isActive={ this.state.action === 'redeem' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Claim\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                }\n                {\n                  this.state.action === 'deposit' ? \n                    batchMigrationDepositEnabled ? (\n                      <Migrate\n                        {...this.props}\n                        showActions={false}\n                        migrationParams={[]}\n                        getTokenPrice={false}\n                        isMigrationTool={true}\n                        migrationIcon={'FileDownload'}\n                        waitText={'Deposit estimated in'}\n                        tokenConfig={this.state.tokenConfig}\n                        selectedToken={this.state.selectedToken}\n                        callbackApprove={this.checkBatchs.bind(this)}\n                        selectedStrategy={this.props.selectedStrategy}\n                        migrationCallback={this.migrationCallback.bind(this)}\n                        migrationText={`Deposit your ${this.state.selectedTokenConfig.token} and wait until it is converted to the new ${this.state.tokenConfig.idle.token}.`}\n                      >\n                        {\n                          !this.props.account ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mt:3\n                              }}\n                            >\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  size={'2.3em'}\n                                  name={'Input'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mt={2}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  Please connect with your wallet interact with Idle.\n                                </Text>\n                                <RoundButton\n                                  buttonProps={{\n                                    mt:2,\n                                    width:[1,1/2]\n                                  }}\n                                  handleClick={this.props.connectAndValidateAccount}\n                                >\n                                  Connect\n                                </RoundButton>\n                              </Flex>\n                            </DashboardCard>\n                          ) : (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                my:3\n                              }}\n                            >\n                              {\n                                batchId ? (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      color={'cellText'}\n                                      name={'HourglassEmpty'}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      {\n                                        this.state.batchCompleted ? (\n                                          <Text.span\n                                            color={'cellText'}\n                                          >The batch has been migrated, click on the \"Claim\" button to withdraw your tokens.</Text.span>\n                                        ) : (\n                                          <Text.span\n                                            color={'cellText'}\n                                          >\n                                            You have successfully deposited {batchDeposit.toFixed(4)} {this.state.selectedTokenConfig.token}, please wait until the batch is migrated to claim your tokens.\n                                            {\n                                              typeof this.state.batchTotals[batchId] !== 'undefined' && \n                                              <Text.span\n                                                color={'cellText'}\n                                              >\n                                                <br />Batch pool: {this.state.batchTotals[batchId].toFixed(4)} {this.state.selectedTokenConfig.token}\n                                              </Text.span>\n                                            }\n                                          </Text.span>\n                                        )\n                                      }\n                                    </Text>\n                                  </Flex>\n                                ) : this.state.migrationSucceeded ? (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      name={'DoneAll'}\n                                      color={this.props.theme.colors.transactions.status.completed}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      You have successfully deposited your {this.state.selectedTokenConfig.token} into the batch!\n                                    </Text>\n                                  </Flex>\n                                ) : (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      name={'MoneyOff'}\n                                      color={'cellText'}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      You don't have any {this.state.selectedTokenConfig.token} in your wallet.\n                                    </Text>\n                                  </Flex>\n                                )\n                              }\n                            </DashboardCard>\n                          )\n                        }\n                      </Migrate>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          my:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Text\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            Batch migration is disabled for this asset.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        my:3\n                      }}\n                    >\n                      {\n                        this.state.processing.claim.loading ? (\n                          <Flex\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar {...this.props} waitText={`Claim estimated in`} endMessage={`Finalizing approve request...`} hash={this.state.processing.claim.txHash} />\n                          </Flex>\n                        ) : this.state.claimSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You have successfully withdrawn your {this.state.selectedToken} V4!\n                            </Text>\n                            <Link\n                              mt={2}\n                              textAlign={'center'}\n                              hoverColor={'primary'}\n                              onClick={ e => this.props.goToSection(this.state.selectedTokenConfig.strategy+'/'+this.state.selectedTokenConfig.baseToken) }\n                            >\n                              Go to the Dashboard\n                            </Link>\n                          </Flex>\n                        ) : this.state.batchCompleted ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              color={'cellText'}\n                              name={'FileUpload'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The batch has been migrated!<br />You can now claim your {this.state.tokenConfig.idle.token} V4.\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                              <RoundButton\n                                buttonProps={{\n                                  mt:3,\n                                  width:[1,0.5],\n                                  mainColor:this.props.theme.colors.redeem\n                                }}\n                                handleClick={ e => this.claim() }\n                              >\n                                Claim\n                              </RoundButton>\n                            </Flex>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              color={'cellText'}\n                              name={'HourglassEmpty'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              <Text.span\n                                color={'cellText'}\n                              >\n                                You have successfully deposited {batchDeposit.toFixed(4)} {this.state.selectedTokenConfig.token}, please wait until the batch is migrated to claim your V4 tokens.\n                                {\n                                  typeof this.state.batchTotals[batchId] !== 'undefined' && \n                                  <Text.span\n                                    color={'cellText'}\n                                  >\n                                    <br />Batch pool: {this.state.batchTotals[batchId].toFixed(4)} {this.state.selectedTokenConfig.token}\n                                  </Text.span>\n                                }\n                              </Text.span>\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n              </Box>\n            ) : null\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default BatchMigration;","import ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\nimport { Flex, Text, Heading, Input, Form, Field, Icon, Link, Loader, Button } from \"rimble-ui\";\n\nclass DeployB2BVesting extends Component {\n\n  state = {\n    actions:[],\n    processing: {\n      txHash:null,\n      loading:false,\n      actionIndex:[]\n    },\n    action:'deploy',\n    validated:false,\n    viewAction:null,\n    editAction:null,\n    newAction:false,\n    maxContracts:10,\n    tokenConfig:null,\n    tokenBalance:null,\n    contractInfo:null,\n    actionValid:false,\n    actionInputs:null,\n    claimedTokens:null,\n    deployedContracts:[],\n    contractDeployed:false,\n    inputs:[\n      {\n        name:'owner',\n        type:'address'\n      },\n      {\n        name:'recipient',\n        type:'address'\n      },\n      {\n        name:'vestingPeriod',\n        type:'uint256'\n      }\n    ]\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  setAction(action){\n    this.setState({\n      action,\n      editAction:null,\n      viewAction:null,\n      claimedTokens:null,\n      contractDeployed:null\n    });\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false,\n        actionIndex:[]\n      }\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadContracts();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    this.validateForm();\n    this.checkInputs();\n\n    const contractDeployed = prevState.contractDeployed !== this.state.contractDeployed && this.state.contractDeployed;\n    if (contractDeployed){\n      this.loadContracts();\n    }\n  }\n\n  async loadContracts(){\n    const tokenConfig = this.functionsUtil.getGlobalConfig(['govTokens','IDLE']);\n    const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n    const fromBlock = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n    const proxyCreated = await this.functionsUtil.getContractPastEvents('ProxyFactory', 'ProxyCreated', {fromBlock, toBlock: 'latest'});\n    const deployedContractsAddresses = proxyCreated.filter( p => p.returnValues.implementation.toLowerCase() === vesterImplementation.address.toLowerCase() ).map( p => p.returnValues.proxy );\n    // console.log('proxyCreated',proxyCreated,'deployedContractsAddresses',deployedContractsAddresses);\n\n    const deployedContracts = [];\n    await this.functionsUtil.asyncForEach(deployedContractsAddresses, async (contractAddress) => {\n      const contractName = `b2bVesting_${contractAddress}`;\n      await this.props.initContract(contractName,contractAddress,vesterImplementation.abi);\n      const [\n        // initialized,\n        owner,\n        recipient,\n        vestingPeriod,\n        availableBalance,\n        depositAmounts,\n      ] = await Promise.all([\n          // this.functionsUtil.genericContractCall(contractName,'initialized'),\n          this.functionsUtil.genericContractCall(contractName,'owner'),\n          this.functionsUtil.genericContractCall(contractName,'recipient'),\n          this.functionsUtil.genericContractCall(contractName,'vestingPeriod'),\n          this.functionsUtil.getTokenBalance(tokenConfig.token,contractAddress),\n          this.functionsUtil.genericContractCall(contractName,'getDepositAmounts')\n      ]);\n\n      let totalDeposited = this.functionsUtil.BNify(0);\n      if (depositAmounts) {\n        totalDeposited = depositAmounts.reduce( (total,amount) => {\n          total = total.plus(amount);\n          return total;\n        },this.functionsUtil.BNify(0));\n\n        totalDeposited = this.functionsUtil.fixTokenDecimals(totalDeposited,tokenConfig.decimals);\n      }\n\n      // console.log(contractName,initialized,owner,recipient,vestingPeriod,depositAmounts,parseFloat(totalDeposited));\n\n      deployedContracts.push({\n        owner,\n        recipient,\n        contractName,\n        vestingPeriod,\n        totalDeposited,\n        contractAddress,\n        availableBalance\n      });\n    });\n    const tokenBalance = await this.functionsUtil.getTokenBalance('IDLE',this.props.account);\n\n    // console.log(deployedContracts);\n\n    this.setState({\n      tokenConfig,\n      tokenBalance,\n      deployedContracts\n    });\n  }\n\n  validateForm(){\n    const validated = Object.values(this.state.actions).length>0;\n    if (validated !== this.state.validated){\n      this.setState({\n        validated\n      });\n    }\n  }\n\n  getTransactionParams(amount){\n    const params = {\n      value:null,\n      methodName:'deposit',\n      methodParams:[amount]\n    };\n    return params;\n  }\n\n  claimCallback(tx){\n    // console.log('claimCallback',tx);\n    if (tx.status === 'success'){\n      this.loadContracts();\n\n      const claimedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.address.toLowerCase() ) : null;\n      if (claimedTokensLog){\n        const claimedTokens = this.functionsUtil.fixTokenDecimals(parseInt(claimedTokensLog.data,16),this.state.tokenConfig.decimals);\n        this.setState({\n          claimedTokens\n        });\n      }\n    }\n  }\n\n  depositCallback(tx,amount,params){\n    // console.log('depositCallback',tx,amount,params);\n    if (tx.status === 'success'){\n      this.loadContracts();\n    }\n  }\n\n  getPatternByFieldType(type,returnString=false){\n    let fieldPattern = null;\n    switch (type){\n      case 'address':\n        fieldPattern = '^0x[a-fA-F0-9]{40}$';\n      break;\n      case 'address[]':\n        fieldPattern = '^((0x[a-fA-F0-9]{40})[,]?)+$';\n      break;\n      case 'string':\n        fieldPattern = '[\\\\w]+';\n      break;\n      case 'bool':\n        fieldPattern = '(0|1)';\n      break;\n      case 'uint256':\n      case 'uint8':\n        fieldPattern = '[\\\\d]+';\n      break;\n      default:\n        fieldPattern = null;\n      break;\n    }\n\n    if (!returnString && fieldPattern){\n      fieldPattern = new RegExp(fieldPattern);\n    }\n\n    return fieldPattern;\n  }\n\n  checkInputs(){\n\n    if (!this.state.actionInputs){\n      return false;\n    }\n\n    const inputs = this.state.inputs;\n    let actionValid = Object.values(this.state.actionInputs).length === inputs.length;\n\n    if (actionValid){\n      Object.values(this.state.actionInputs).forEach( (inputValue,inputIndex) => {\n        const inputInfo = inputs[inputIndex];\n        const fieldPattern = this.getPatternByFieldType(inputInfo.type);\n        const inputValid = fieldPattern ? inputValue.match(fieldPattern) !== null : true;\n        actionValid = actionValid && inputValid;\n        // console.log('checkInputs',inputInfo.name,inputInfo.type,inputValue,inputValid,actionValid);\n      });\n    }\n\n    if (actionValid !== this.state.actionValid){\n      this.setState({\n        actionValid\n      });\n    }\n  }\n\n  valueChange(e,inputIndex){\n    let actionValue = e.target.value;\n    this.setState({\n      actionValue\n    });\n  }\n\n  inputChange(e,inputIndex){\n    let inputValue = e.target.value;\n\n    this.setState((prevState) => ({\n      actionInputs:{\n        ...prevState.actionInputs,\n        [inputIndex]:inputValue\n      }\n    }));\n  }\n\n  deleteAction(){\n    if (this.state.editAction !== null){\n      let actions = this.state.actions;\n      if (actions[this.state.editAction]){\n        delete actions[this.state.editAction];\n        actions = Object.values(actions);\n        const editAction = null;\n        const actionInputs = null;\n\n        this.setState({\n          actions,\n          editAction,\n          actionInputs\n        });\n      }\n    }\n  }\n\n  addAction(){\n\n    // Check inputs number\n    const inputs = Object\n                    .values(this.state.actionInputs).filter( v => v.length>0 )\n                    .map( (inputValue,inputIndex) => {\n                      const inputInfo = this.state.inputs[inputIndex];\n                      switch (inputInfo.type){\n                        case 'address[]':\n                          inputValue = inputValue.split(',');\n                        break;\n                        case 'uint256[]':\n                          inputValue = inputValue.split(',').map( n => this.functionsUtil.toBN(n) );\n                        break;\n                        case 'uint256':\n                          inputValue = this.functionsUtil.toBN(inputValue);\n                        break;\n                        default:\n                          if (inputInfo.type.substr(-2) === '[]'){\n                            inputValue = inputValue.split(',');\n                          }\n                        break;\n                      }\n\n                      return inputValue;\n                    });\n\n    if (inputs.length<this.state.inputs.length){\n      return false;\n    }\n\n    const action = {\n      txError:null,\n      contractAddress:null,\n      inputs:this.state.actionInputs,\n    };\n\n    const newAction = false;\n    const actions = Object.values(this.state.actions);\n\n    if (this.state.editAction === null){\n      actions.push(action);\n    } else {\n      actions[this.state.editAction] = action;\n    }\n\n    const editAction = null;\n    const actionInputs = null;\n\n    this.setState({\n      actions,\n      newAction,\n      editAction,\n      actionInputs\n    });\n  }\n\n  setEditAction(editAction){\n\n    if (!this.state.actions[editAction]){\n      return false;\n    }\n\n    if (editAction === this.state.editAction){\n      return false;\n    }\n\n    const action = this.state.actions[editAction];\n\n    const newAction = false;\n    const actionInputs = action.inputs;\n\n    this.setState({\n      newAction,\n      editAction,\n      actionInputs\n    });\n  }\n\n  setViewAction(viewAction){\n\n    if (viewAction !== this.state.viewAction){\n      const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n      const deployedContract = this.state.deployedContracts[viewAction];\n      const contractInfo = {\n        abi:vesterImplementation.abi,\n        name:deployedContract.contractName,\n        address:deployedContract.contractAddress\n      };\n      this.setState({\n        viewAction,\n        contractInfo,\n        claimedTokens:null\n      });\n    }\n  }\n\n  setNewAction(newAction){\n    if (newAction === this.state.newAction){\n      return false;\n    }\n\n    const editAction = null;\n\n    this.setState({\n      newAction,\n      editAction,\n    });\n  }\n\n  async handleSubmit(e){\n    e.preventDefault();\n\n    const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n    const idleAddress = this.functionsUtil.getGlobalConfig(['govTokens','IDLE','address']);\n\n    const callback = (tx,error,actionIndex) => {\n      const txSucceeded = tx.status === 'success';\n      const actions = Object.values(this.state.actions);\n      const isLastAction = parseInt(actionIndex)===parseInt(this.state.actions.length)-1;\n      const contractDeployed = txSucceeded && isLastAction;\n      // console.log('callback_1 -',actionIndex,txSucceeded,contractDeployed,tx);\n      if (txSucceeded){\n        const clonedVesterAddress = tx.txReceipt.events && tx.txReceipt.events.ProxyCreated ? tx.txReceipt.events.ProxyCreated.returnValues[1] : `0x${tx.txReceipt.logs[0].data.substr(-40)}`;\n        actions[actionIndex].contractAddress = clonedVesterAddress;\n        // console.log('callback_2 -',actionIndex,actions[actionIndex].contractAddress);\n      } else {\n        actions[actionIndex].txError = true;\n      }\n\n      // console.log('callback_3 -',actionIndex,actions);\n\n      this.setState({\n        actions,\n        contractDeployed\n      },()=>{\n        if (isLastAction){\n          this.cancelTransaction();\n        }\n      });\n    };\n\n    const callbackReceipt = (tx,actionIndex) => {\n      const txHash = tx.transactionHash;\n      // console.log('callbackReceipt',actionIndex,tx);\n      const processing = Object.assign({},this.state.processing);\n      processing.txHash = txHash;\n      processing.actionIndex.push(actionIndex);\n      this.setState({\n        processing\n      });\n    };\n\n    this.state.actions.forEach((action,actionIndex) => {\n      const ownerAddress = action.inputs[0];\n      const recipientAddress = action.inputs[1];\n      const vestingPeriod = action.inputs[2];\n      const initSig = \"initialize(address,address,address,uint256)\";\n      const initData = this.props.web3.eth.abi.encodeParameters(\n        ['address','address','address','uint256'],\n        [ownerAddress,idleAddress,recipientAddress,vestingPeriod]\n      );\n      const methodParams = [vesterImplementation.address,initSig,initData];\n      this.functionsUtil.contractMethodSendWrapper('ProxyFactory', 'createAndCall', methodParams, (tx,error) => callback(tx,error,actionIndex), (tx) => callbackReceipt(tx,actionIndex) );\n    });\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n\n    return false;\n  }\n\n  render() {\n\n    const depositContracts = this.props.account ? this.state.deployedContracts.filter( c => c.owner.toLowerCase() === this.props.account.toLowerCase() ) : [];\n    const claimContracts = this.props.account ? this.state.deployedContracts.filter( c => c.recipient.toLowerCase() === this.props.account.toLowerCase() ) : [];\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.42]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Flex\n            width={1}\n            flexDirection={'column'}\n          >\n            <Text\n              mb={2}\n            >\n              Choose the action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'space-between'}\n            >\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Deploy'}\n                icon={'CloudUpload'}\n                iconColor={'deposit'}\n                iconBgColor={'#ced6ff'}\n                isActive={ this.state.action === 'deploy' }\n                handleClick={ e => this.setAction('deploy') }\n              />\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Deposit'}\n                iconColor={'deposit'}\n                icon={'ArrowDownward'}\n                iconBgColor={'#ced6ff'}\n                isActive={ this.state.action === 'deposit' }\n                handleClick={ e => this.setAction('deposit') }\n              />\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Claim'}\n                iconColor={'redeem'}\n                icon={'ArrowUpward'}\n                iconBgColor={'#ceeff6'}\n                isActive={ this.state.action === 'claim' }\n                handleClick={ e => this.setAction('claim') }\n              />\n            </Flex>\n          </Flex>\n          <Flex\n            pb={2}\n            width={1}\n            my={[2,3]}\n            borderColor={'divider'}\n            borderBottom={'1px solid transparent'}\n          >\n            <Heading.h4\n              fontSize={[2,3]}\n              fontWeight={[2,3]}\n              style={{\n                textTransform:'capitalize'\n              }}\n            >\n              {this.state.action}\n            </Heading.h4>\n          </Flex>\n          <Flex\n            flexDirection={'column'}\n          >\n            {\n              this.state.action === 'deploy' ? (\n                <Form\n                  width={1}\n                  validated={this.state.validated}\n                  onSubmit={this.handleSubmit.bind(this)}\n                >\n                  {\n                    Object.values(this.state.actions).map( (action,actionIndex) => {\n                      return (\n                        <DashboardCard\n                          cardProps={{\n                            py:2,\n                            px:3,\n                            mb:3,\n                            width:1\n                          }}\n                          titleParentProps={{\n                            ml:0,\n                            my:1,\n                            justifyContent:'center'\n                          }}\n                          titleProps={{\n                            fontSize:2,\n                            fontWeight:3\n                          }}\n                          isInteractive={true}\n                          key={`action_${actionIndex}`}\n                          title={ this.state.editAction === actionIndex ? 'Edit Contract' : null }\n                          handleClick={ e => /*action.contractAddress ? this.functionsUtil.openWindow(this.functionsUtil.getEtherscanAddressUrl(action.contractAddress)) : */this.setEditAction(actionIndex) }\n                        >\n                          {\n                            this.state.editAction === actionIndex ? (\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                {\n                                  this.state.inputs.map( (input,inputIndex) => {\n                                    const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                    const fieldPattern = this.getPatternByFieldType(input.type,true);\n                                    return (\n                                      <Field\n                                        style={{\n                                          width:'100%',\n                                          display:'flex',\n                                          alignItems:'stretch',\n                                          flexDirection:'column'\n                                        }}\n                                        key={`input_${inputIndex}`}\n                                        label={`${input.name} (${input.type})`}\n                                      >\n                                        <Input\n                                          required\n                                          width={1}\n                                          type={fieldType}\n                                          pattern={fieldPattern}\n                                          borderColor={'cardBorder'}\n                                          backgroundColor={'cardBg'}\n                                          placeholder={`${input.name} (${input.type})`}\n                                          onChange={ e => this.inputChange(e,inputIndex) }\n                                          value={this.state.actionInputs && this.state.actionInputs[inputIndex] ? this.state.actionInputs[inputIndex] : ''}\n                                        />\n                                      </Field>\n                                    )\n                                  })\n                                }\n                                <Flex\n                                  mb={2}\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  {\n                                    action.contractAddress ? (\n                                      <ExtLink\n                                        fontSize={1}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                        hoverColor={this.props.theme.colors.transactions.status.completed}\n                                        href={this.functionsUtil.getEtherscanAddressUrl(action.contractAddress)}\n                                      >\n                                        Deployed at {action.contractAddress}\n                                      </ExtLink>\n                                    ) : !this.state.processing.loading && (\n                                      <Flex\n                                        width={1}\n                                        alignItems={'center'}\n                                        flexDirection={'column'}\n                                        justifyContent={'center'}\n                                      >\n                                        <RoundButton\n                                          buttonProps={{\n                                            px:[0,4],\n                                            type:'button',\n                                            width:[1,'auto'],\n                                            disabled:!this.state.actionValid\n                                          }}\n                                          handleClick={this.addAction.bind(this)}\n                                        >\n                                          Save Contract\n                                        </RoundButton>\n                                        <Link\n                                          mt={2}\n                                          color={'red'}\n                                          hoverColor={'red'}\n                                          onClick={this.deleteAction.bind(this)}\n                                        >\n                                          Delete Contract\n                                        </Link>\n                                      </Flex>\n                                    )\n                                  }\n                                </Flex>\n                              </Flex>\n                            ) : (\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'space-between'}\n                              >\n                                <Text>\n                                  {this.functionsUtil.shortenHash(action.inputs[0])} - {this.functionsUtil.shortenHash(action.inputs[1])} - {action.inputs[2]} { action.contractAddress ? '- DEPLOYED' : '' }\n                                </Text>\n                                { \n                                  action.contractAddress ? (\n                                    <Flex\n                                      p={'3px'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                    >\n                                      <Icon\n                                        name={'Done'}\n                                        align={'center'}\n                                        size={this.props.isMobile ? '1.2em' : '1.8em'}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      />\n                                    </Flex>\n                                  ) : this.state.processing.loading && this.state.processing.actionIndex && this.state.processing.actionIndex.includes(parseInt(actionIndex)) ? (\n                                    <Loader size=\"28px\" />\n                                  ) : action.txError ? (\n                                    <Flex\n                                      p={'3px'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                    >\n                                      <Icon\n                                        color={'red'}\n                                        name={'Error'}\n                                        align={'center'}\n                                        size={ this.props.isMobile ? '1.2em' : '1.8em' }\n                                      />\n                                    </Flex>\n                                  ) : (\n                                    <Flex\n                                      p={['4px','7px']}\n                                      borderRadius={'50%'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                      backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                                    >\n                                      <Icon\n                                        name={'Edit'}\n                                        align={'center'}\n                                        color={'redeem'}\n                                        size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                      />\n                                    </Flex>\n                                  )\n                                }\n                              </Flex>\n                            )\n                          }\n                        </DashboardCard>\n                      );\n                    })\n                  }\n                  {\n                    (!this.state.contractDeployed && !this.state.processing.loading && (!this.state.actions || Object.values(this.state.actions).length<this.state.maxContracts)) && (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        handleClick={ e => this.setNewAction(true) }\n                        title={ this.state.newAction ? 'Add Contract' : null }\n                      >\n                        {\n                          this.state.newAction ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  const fieldPattern = this.getPatternByFieldType(input.type,true);\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        width={1}\n                                        type={fieldType}\n                                        pattern={fieldPattern}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        placeholder={`${input.name} (${input.type})`}\n                                        onChange={ e => this.inputChange(e,inputIndex) }\n                                        value={this.state.actionInputs && this.state.actionInputs[inputIndex] ? this.state.actionInputs[inputIndex] : ''}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                              >\n                                <RoundButton\n                                  buttonProps={{\n                                    px:[0,4],\n                                    type:'button',\n                                    width:[1,'auto'],\n                                    disabled:!this.state.actionValid\n                                  }}\n                                  handleClick={this.addAction.bind(this)}\n                                >\n                                  Add Contract\n                                </RoundButton>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                Add Contract\n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'Add'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    )\n                  }\n                  <Flex\n                    mb={3}\n                    width={1}\n                    alignItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    {\n                      this.state.contractDeployed ? (\n                        <DashboardCard\n                          cardProps={{\n                            py:3,\n                            px:4,\n                            width:[1,'100%']\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Icon\n                              name={'DoneAll'}\n                              align={'center'}\n                              size={ this.props.isMobile ? '1.4em' : '2.2em' }\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={1}\n                              fontWeight={3}\n                              fontSize={[2,3]}\n                              color={'dark-gray'}\n                              textAlign={'center'}\n                            >\n                              B2B Vesting contracts have been deployed\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      ) : this.state.processing && this.state.processing.loading ? (\n                        <TxProgressBar\n                          {...this.props}\n                          hash={this.state.processing.txHash}\n                          waitText={`Deployment estimated in`}\n                          endMessage={`Finalizing deployment request...`}\n                          cancelTransaction={this.cancelTransaction.bind(this)}\n                        />\n                      ) : (\n                        <RoundButton\n                          buttonProps={{\n                            type:'submit',\n                            width:[1,'15em'],\n                            disabled:!this.state.validated\n                          }}\n                        >\n                          Deploy Contracts\n                        </RoundButton>\n                      )\n                    }\n                  </Flex>\n                </Form>\n              ) : this.state.action === 'deposit' ?\n                depositContracts.length>0 ?\n                  depositContracts.map( (contractInfo,actionIndex) => {\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        key={`action_${actionIndex}`}\n                        handleClick={ e => this.setViewAction(actionIndex) }\n                        title={ this.state.viewAction === actionIndex ? 'View Contract' : null }\n                      >\n                        {\n                          this.state.viewAction === actionIndex ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Contract Address`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.contractAddress}\n                                />\n                              </Field>\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        readOnly\n                                        width={1}\n                                        type={fieldType}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        value={contractInfo[input.name]}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Total Deposited`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.totalDeposited.toFixed(6)}\n                                />\n                              </Field>\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Available Balance`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.availableBalance.toFixed(6)}\n                                />\n                              </Field>\n                              <Flex\n                                mb={2}\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                                borderTop={'1px solid transparent'}\n                              >\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <SendTxWithBalance\n                                    {...this.props}\n                                    action={this.state.action}\n                                    tokenConfig={this.state.tokenConfig}\n                                    tokenBalance={this.state.tokenBalance}\n                                    contractInfo={this.state.contractInfo}\n                                    callback={this.depositCallback.bind(this)}\n                                    getTransactionParams={this.getTransactionParams.bind(this)}\n                                    approveDescription={'You need to approve the Smart-Contract first'}\n                                  >\n                                    <DashboardCard\n                                      cardProps={{\n                                        p:3,\n                                      }}\n                                    >\n                                      <Flex\n                                        alignItems={'center'}\n                                        flexDirection={'column'}\n                                      >\n                                        <Icon\n                                          size={'2.3em'}\n                                          name={'MoneyOff'}\n                                          color={'cellText'}\n                                        />\n                                        <Text\n                                          mt={2}\n                                          fontSize={2}\n                                          color={'cellText'}\n                                          textAlign={'center'}\n                                        >\n                                          You don't have any $IDLE in your wallet.\n                                        </Text>\n                                      </Flex>\n                                    </DashboardCard>\n                                  </SendTxWithBalance>\n                                </Flex>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                {this.functionsUtil.shortenHash(contractInfo.owner)} - {this.functionsUtil.shortenHash(contractInfo.recipient)} - {contractInfo.vestingPeriod} \n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'ZoomIn'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    );\n                  })\n                : (\n                  <Text\n                    textAlign={'center'}\n                  >\n                    You can't deposit in any contract yet.\n                  </Text>\n                )\n              : this.state.action === 'claim' &&\n                claimContracts.length>0 ?\n                  claimContracts.map( (contractInfo,actionIndex) => {\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        key={`action_${actionIndex}`}\n                        handleClick={ e => this.setViewAction(actionIndex) }\n                        title={ this.state.viewAction === actionIndex ? 'View Contract' : null }\n                      >\n                        {\n                          this.state.viewAction === actionIndex ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Contract Address`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.contractAddress}\n                                />\n                              </Field>\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        readOnly\n                                        width={1}\n                                        type={fieldType}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        value={contractInfo[input.name]}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Total Deposited`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.totalDeposited.toFixed(6)}\n                                />\n                              </Field>\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Available Balance`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.availableBalance.toFixed(6)}\n                                />\n                              </Field>\n                              <Flex\n                                mb={2}\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                                borderTop={'1px solid transparent'}\n                              >\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  {\n                                    this.state.claimedTokens && (\n                                      <Text\n                                        mb={2}\n                                        fontSize={2}\n                                        fontWeight={3}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >\n                                        You have successfully claimed {this.state.claimedTokens.toFixed(4)} {this.state.tokenConfig.token}\n                                      </Text>\n                                    )\n                                  }\n                                  {\n                                    contractInfo.availableBalance && contractInfo.availableBalance.gt(0.00000001) ? (\n                                      <ExecuteTransaction\n                                        params={[]}\n                                        {...this.props}\n                                        Component={Button}\n                                        componentProps={{\n                                          size:'medium',\n                                          value:'Claim',\n                                          mainColor:'redeem',\n                                        }}\n                                        methodName={'claim'}\n                                        action={this.state.action}\n                                        callback={this.claimCallback.bind(this)}\n                                        contractName={contractInfo.contractName}\n                                      />\n                                    ) : (\n                                      <Text\n                                        mb={2}\n                                        fontSize={2}\n                                        fontWeight={3}\n                                        color={'cellText'}\n                                      >\n                                        No balance available.\n                                      </Text>\n                                    )\n                                  }\n                                </Flex>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                {this.functionsUtil.shortenHash(contractInfo.owner)} - {this.functionsUtil.shortenHash(contractInfo.recipient)} - {contractInfo.vestingPeriod} \n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'ZoomIn'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    );\n                  })\n                : (\n                  <Text\n                    textAlign={'center'}\n                  >\n                    You can't claim from any contract yet.\n                  </Text>\n                )\n            }\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default DeployB2BVesting;\n","import Staking from \"../Staking/Staking\";\nimport DAI from '../abis/tokens/DAI.json';\nimport IDLE from '../contracts/IDLE.json';\nimport Tranches from '../Tranches/Tranches';\nimport USDC from '../abis/tokens/USDC.json';\nimport WETH from '../abis/tokens/WETH.json';\nimport COMP from '../abis/compound/COMP.json';\nimport aToken from '../abis/aave/AToken.json';\nimport ERC20 from '../abis/tokens/ERC20.json';\nimport TokenSwap from '../TokenSwap/TokenSwap';\nimport yDAIv3 from '../abis/iearn/yDAIv3.json';\nimport LpStaking from '../LpStaking/LpStaking';\nimport stkIDLE from '../contracts/stkIDLE.json';\nimport yUSDCv3 from '../abis/iearn/yUSDCv3.json';\nimport yUSDTv3 from '../abis/iearn/yUSDTv3.json';\nimport ySUSDv3 from '../abis/iearn/ySUSDv3.json';\nimport yTUSDv3 from '../abis/iearn/yTUSDv3.json';\nimport Timelock from '../contracts/Timelock.json';\nimport CurveZap from '../abis/curve/CurveZap.json';\nimport CovToken from '../abis/cover/CovToken.json';\nimport B2BVester from '../contracts/B2BVester.json';\nimport IdleStaking from '../IdleStaking/IdleStaking';\n// import CurveSwap from '../abis/curve/CurveSwap.json';\nimport CurvePool from \"../abis/curve/CurvePool.json\";\nimport NexusMutual from \"../NexusMutual/NexusMutual\";\nimport CoverMint from \"../abis/cover/CoverMint.json\";\nimport LockedIDLE from \"../contracts/LockedIDLE.json\";\nimport LpStakingAbi from \"../contracts/LpStaking.json\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\nimport TokenWrapper from \"../TokenWrapper/TokenWrapper\";\nimport PriceOracle from \"../contracts/PriceOracle.json\";\nimport FeeTreasury from \"../contracts/FeeTreasury.json\";\nimport IdleTokenV2 from \"../contracts/IdleTokenV2.json\";\nimport StrategyPage from \"../StrategyPage/StrategyPage\";\nimport BuyModal from \"../utilities/components/BuyModal\";\nimport IdleTokenV3 from \"../contracts/IdleTokenV3.json\";\nimport IdleTokenV4 from \"../contracts/IdleTokenV4.json\";\nimport BatchDeposit from \"../BatchDeposit/BatchDeposit\";\nimport ChildERC20 from '../abis/polygon/ChildERC20.json';\nimport EarlyRewards from '../contracts/EarlyRewards.json';\nimport PolygonBridge from '../PolygonBridge/PolygonBridge';\nimport CoverProtocol from '../CoverProtocol/CoverProtocol';\nimport CurveDeposit from '../abis/curve/CurveDeposit.json';\nimport VesterFactory from '../contracts/VesterFactory.json';\nimport GovernorAlpha from '../contracts/GovernorAlpha.json';\nimport EcosystemFund from '../contracts/EcosystemFund.json';\nimport Comptroller from '../abis/compound/Comptroller.json';\nimport erc20Forwarder from '../contracts/erc20Forwarder.json';\nimport BalancerPool from '../abis/balancer/BalancerPool.json';\nimport IdleController from '../contracts/IdleController.json';\nimport TokenMigration from '../TokenMigration/TokenMigration';\nimport BatchMigration from '../BatchMigration/BatchMigration';\nimport IdleBatchedMint from '../contracts/IdleBatchedMint.json';\nimport { RampInstantSDK } from '@ramp-network/ramp-instant-sdk';\nimport IdleProxyMinter from '../contracts/IdleProxyMinter.json';\nimport DepositManager from '../abis/polygon/DepositManager.json';\nimport IdleRebalancerV3 from '../contracts/IdleRebalancerV3.json';\nimport LiquidityGaugeV2 from '../abis/curve/LiquidityGaugeV2.json';\nimport DeployB2BVesting from '../DeployB2BVesting/DeployB2BVesting';\nimport RootChainManager from '../abis/polygon/RootChainManager.json';\nimport SushiV2Router02 from \"../abis/sushiswap/SushiV2Router02.json\";\nimport IdleBatchConverter from \"../contracts/IdleBatchConverter.json\";\nimport UniswapV2Router02 from \"../abis/uniswap/UniswapV2Router02.json\";\nimport ChildChainManager from '../abis/polygon/ChildChainManager.json';\nimport IdleDepositForwarder from \"../contracts/IdleDepositForwarder.json\";\nimport ProtocolDataProvider from '../abis/aave/ProtocolDataProvider.json';\nimport SushiLiquidityPool from \"../abis/sushiswap/SushiLiquidityPool.json\";\nimport NexusMutualIncidents from \"../abis/nexus/NexusMutualIncidents.json\";\nimport StakingFeeDistributor from \"../contracts/StakingFeeDistributor.json\";\nimport NexusMutualDistributor from \"../abis/nexus/NexusMutualDistributor.json\";\nimport BalancerExchangeProxy from \"../abis/balancer/BalancerExchangeProxy.json\";\nimport IdleConverterPersonalSignV4 from \"../contracts/IdleConverterPersonalSignV4.json\";\nimport MinimalInitializableProxyFactory from \"../contracts/MinimalInitializableProxyFactory.json\";\n\nconst env = process.env;\n\nconst globalConfigs = {\n  appName: \"Idle\",\n  version: \"v6.0\",\n  baseToken: \"ETH\",\n  baseURL: \"https://idle.finance\",\n  forumURL: \"https://gov.idle.finance\",\n  telegramURL: \"https://t.me/idlefinance\",\n  discordURL: \"https://discord.gg/mpySAJp\",\n  twitterURL: \"https://twitter.com/idlefinance\",\n  theme: {\n    darkModeEnabled: true\n  },\n  betaURL: \"https://beta.idle.finance\",\n  countries: {\n    USA: \"United States of America\",\n    GBR: \"United Kingdom\",\n    AUS: \"Australia\",\n    BRA: \"Brazil\",\n    CHN: \"China\",\n    CAN: \"Canada\",\n    EUR: \"Europe\",\n    HKG: \"Hong Kong\",\n    IND: \"India\",\n    MEX: \"Mexico\",\n    RUS: \"Russia\",\n    ZAF: \"South Africa\",\n    KOR: \"South Korea\"\n  },\n  logs: {\n    // Enable logs levels\n    errorsEnabled: false,\n    messagesEnabled: false\n  },\n  connectors: {\n    // Connectors props\n    metamask: {\n      enabled: true,\n      subcaption: \"Browser extension\"\n    },\n    opera: {\n      enabled: true,\n      subcaption: \"Opera injected wallet\"\n    },\n    dapper: {\n      enabled: true,\n      icon: \"dapper.png\",\n      subcaption: \"Browser extension\"\n    },\n    coinbase: {\n      enabled: true,\n      icon: \"coinbase.png\",\n      subcaption: \"Connect with Coinbase wallet\"\n    },\n    trustwallet: {\n      enabled: true,\n      subcaption: \"Connect with Trust Wallet\"\n    },\n    walletconnect: {\n      enabled: true,\n      iconModal: \"walletconnect.png\",\n      subcaption: \"Connect with QR code\"\n    },\n    walletlink: {\n      enabled: true,\n      icon: \"coinbase.png\",\n      name: \"Coinbase Wallet\",\n      subcaption: \"Connect with QR code\"\n    },\n    gnosis: {\n      enabled: true,\n      // icon:'coinbase.png',\n      name: \"Gnosis Safe App\",\n      subcaption: \"Connect with Gnosis Safe App\"\n    },\n    fortmatic: {\n      enabled: true,\n      subcaption: \"Login with phone-number\"\n    },\n    portis: {\n      enabled: true,\n      subcaption: \"Login with e-mail\"\n    },\n    authereum: {\n      enabled: true,\n      subcaption: \"Cross-device wallet\"\n    },\n    torus: {\n      enabled: true,\n      icon: \"torus.png\",\n      subcaption: \"One-Click login for Web 3.0\"\n    },\n    trezor: {\n      enabled: true,\n      subcaption: \"Hardware wallet\"\n    },\n    ledger: {\n      enabled: true,\n      subcaption: \"Hardware wallet\"\n    },\n    ledgerlive: {\n      enabled: true,\n      subcaption: \"Ledger Live Browser\"\n    },\n    custom: {\n      enabled: true,\n      subcaption: \"Custom address\"\n    }\n  },\n  newsletterSubscription: {\n    endpoint: \"https://dev.lapisgroup.it/idle/newsletter.php\"\n  },\n  messages: {\n    scoreShort: \"Protocol Risk Score\",\n    apyShort: \"Annual Percentage Yield\",\n    totalProfitPerc: \"Total percentage profit generated on your balance\",\n    tokenPrice: \"The token price is calculated using Uniswap spot prices.\",\n    cheapRedeem: \"Amount of unlent funds available for low gas fees redeem\",\n    curveBonusSlippage: \"Slippage or bonus depending on if the coin is low or high in the Curve Pool\",\n    distributionSpeed: \"The distribution indicates the amount of tokens distributed for the entire pool.\",\n    directMint: \"Pay an additional gas fee to rebalance the pool and help all users gain an additional APR\",\n    performanceFee: \"This fee is charged on positive returns generated by Idle including accrued gov tokens except IDLE\",\n    userDistributionSpeed: \"The distribution indicates the amount of tokens distributed for your account based on your current pool share.\",\n    govTokenApr: \"Governance Token APR is calculated using the spot price from Uniswap and the current distribution speed for the specific pool.\",\n    govTokenRedeemableBalance: \"The redeemable balance is re-calculated on every interaction with the smart-contract so, the shown balance may be lower than the real one.\",\n    riskScoreShort: \"It's a single, consistently, comparable value for measuring protocol risk, based on factors including smart contract risk, collateralization and liquidity.\",\n    redeemSkipGov: \"This feature allows you to save some gas by skipping the redeem of all or some of your accrued governance tokens, the skipped governance tokens will be given away to the entire pool\",\n    batchDepositExecutionSchedule: \"Batches are executed twice a week, usually on Sunday and Wednesday, and only when the pool size reaches at least 20,000$. The time of each execution will vary depending on the gas price of the Ethereum network.\",\n    riskAdjustedDisabledMessageDeposit: `The Risk Adjusted strategy is no longer available.<br />Please consider to deposit in the <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://beta.idle.finance/#/dashboard/tranches/senior/idle\" class=\"link\">Senior Tranche</a> to have a similar risk profile.`,\n    apyLong: \"APY is based on (I) the current yield advertised by the underlying protocol, (II) the current distribution rate of governance tokens provided by underlying lending protocols (III) the current estimated price of governance tokens from Uniswap spot prices. (IV) IDLE token distribution is referred to the entire pool.\",\n    riskScore: `It's a single, consistently, comparable value for measuring protocol risk, based on factors including smart contract risk, collateralization and liquidity.<br /><br />The model outputs a 0-10 score, where <strong>0 is the most risky and 10 is the most safe.</strong> Visit <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://defiscore.io/overview\">https://defiscore.io/overview</a> for further information.`,\n    curveInstructions: `<strong>Depositing into the pool:</strong><br />By depositing your funds into the Curve Pool you may incur in slippage or bonus depending on if the coin is low or high in the pool.<br /><br /><strong>Withdrawing share from the pool:</strong><br />When you redeem your tokens previously deposited in the Curve Pool you get back an uneven amounts of tokens, that can give slippage or bonus depending on if the coin is low or high in the pool.`,\n    yieldFarming: 'Strategies in Idle now will be able to support and distribute a vast range of yield opportunities across multiple protocols. Users will be able to receive their equivalent share of governance token that the protocol is receiving while allocating liquidity to yield farming opportunities. <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://idlefinance.medium.com/idle-yield-farming-upgrade-18e4bc483c8f\" class=\"link\">Read more here</a>.',\n    riskAdjustedDisabledMessageRedeem: `The Risk Adjusted strategy is no longer available, please redeem your funds from this strategy. You can deposit in the <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://beta.idle.finance/#/dashboard/tranches/senior/idle\" class=\"link\">Senior Tranche</a> to maintain a similar risk profile and receive an incentive. <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://gov.idle.finance/t/risk-adjusted-removal-for-tranches-migration/673\" class=\"link\">Read more here</a>.`,\n  },\n  analytics: {\n    google: {\n      events: {\n        enabled: true, // Enable Google Analytics events\n        debugEnabled: false, // Enable sending for test environments\n        addPostfixForTestnet: true // Append testnet to eventCategory\n      },\n      pageView: {\n        enabled: true\n      }\n    }\n  },\n  modals: {\n    // Enable modals\n    first_deposit_referral: false, // Referral share modal\n    first_deposit_share: true, // First deposit share modal\n    migrate: {\n      enabled: true,\n      availableNetworks: [1]\n    },\n    welcome: {\n      // Welcome modal\n      enabled: true,\n      frequency: 604800 // One week\n    }\n  },\n  dashboard: {\n    baseRoute: \"/dashboard\",\n    theme: {\n      mode: \"light\",\n      darkModeEnabled: true\n    }\n  },\n  governance:{\n    test:false,\n    enabled:true,\n    startBlock:11333729,\n    availableNetworks:[1],\n    baseRoute:'/governance',\n    props:{\n      tokenName:'IDLE',\n      availableContracts:{\n        IDLE,\n        FeeTreasury,\n        PriceOracle,\n        GovernorAlpha,\n        EcosystemFund,\n        IdleController\n      }\n    },\n    proposals: {\n      12: {\n        description: 'Details in the gov forum post: <a class=\"link\" href=\"https://gov.idle.finance/t/iip-12-enable-idle-lm-on-idlerai-and-fund-leagues-mandate/620\">https://gov.idle.finance/t/iip-12-enable-idle-lm-on-idlerai-and-fund-leagues-mandate/620</a>'\n      },\n      7: {\n        description: `Upgrade of IdleTokenGovernance contract to include the following changes:<br />\n        <ul>\n          <li>support for EIP 3165 flashLoans (fee is set to 0.08% of the flash loaned amount redistributed to LP)</li>\n          <li>support for stkAAVE distribution</li>\n          <li>support for new cWBCT distribution</li>\n          <li>other minor updates for gas and redeems</li>\n        </ul>\n        See more in the gov forum post: <a class=\"link\" href=\"https://gov.idle.finance/t/iip-7-idletoken-upgrade-stkaave-distribution/466\">https://gov.idle.finance/t/iip-7-idletoken-upgrade-stkaave-distribution/466</a>`\n      }\n    },\n    contracts: {\n      delegates: \"IDLE\",\n      governance: \"GovernorAlpha\"\n    }\n  },\n  curve: {\n    enabled: false,\n    params: {\n      n_coins: 3,\n      label: \"Curve\",\n      route: \"/dashboard/curve\",\n      image: \"images/protocols/curve.svg\",\n      imageInactive: \"images/protocols/curve-off.svg\"\n    },\n    rates: {\n      path: [\"apy\", \"day\", \"idle\"],\n      endpoint: \"https://www.curve.fi/raw-stats/apys.json\"\n    },\n\n    poolContract: {\n      decimals: 18,\n      abi: CurvePool,\n      name: \"idleDAI+idleUSDC+idleUSDT\",\n      token: \"idleDAI+idleUSDC+idleUSDT\",\n      address: \"0x09f4b84a87fc81fc84220fd7287b613b8a9d4c05\"\n    },\n    depositContract: {\n      abi: CurveDeposit,\n      name: \"idleCurveDeposit\",\n      address: \"0x83f252f036761a1e3d10daca8e16d7b21e3744d7\"\n    },\n    gaugeContract: {\n      abi: LiquidityGaugeV2,\n      name: \"LiquidityGaugeV2\",\n      address: \"0xd69ac8d9D25e99446171B5D0B3E4234dAd294890\"\n    },\n    zapContract: {\n      abi: CurveZap,\n      name: \"idleCurveZap\",\n      address: \"0x456974df1042ba7a46fd49512a8778ac3b840a21\"\n    },\n    migrationContract: {\n      abi: CurveDeposit,\n      name: \"idleCurveDeposit\",\n      address: \"0x83f252f036761a1e3d10daca8e16d7b21e3744d7\",\n      functions: [\n        {\n          label: \"Deposit\",\n          name: \"add_liquidity\"\n        }\n      ]\n    },\n    availableTokens: {\n      idleDAIYield: {\n        decimals: 18,\n        enabled: true,\n        baseToken: \"DAI\",\n        token: \"idleDAIYield\",\n        address: \"0x3fe7940616e5bc47b0775a0dccf6237893353bb4\",\n        migrationParams: {\n          n_coins: 3,\n          coinIndex: 0\n        }\n      },\n      idleUSDCYield: {\n        decimals: 18,\n        enabled: true,\n        baseToken: \"USDC\",\n        token: \"idleUSDCYield\",\n        address: \"0x5274891bEC421B39D23760c04A6755eCB444797C\",\n        migrationParams: {\n          n_coins: 3,\n          coinIndex: 1\n        }\n      },\n      idleUSDTYield: {\n        decimals: 18,\n        enabled: true,\n        baseToken: \"USDT\",\n        token: \"idleUSDTYield\",\n        address: \"0xF34842d05A1c888Ca02769A633DF37177415C2f8\",\n        migrationParams: {\n          n_coins: 3,\n          coinIndex: 2\n        }\n      }\n    }\n  },\n  permit: {\n    DAI: {\n      version: 1,\n      EIPVersion: null,\n      nonceMethod: \"nonces\",\n      name: \"Dai Stablecoin\",\n      type: [\n        { name: \"holder\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"expiry\", type: \"uint256\" },\n        { name: \"allowed\", type: \"bool\" }\n      ]\n    },\n    USDC: {\n      version: 2,\n      name: \"USD Coin\",\n      EIPVersion: 2612,\n      nonceMethod: \"nonces\",\n      type: [\n        { name: \"owner\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"value\", type: \"uint256\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"deadline\", type: \"uint256\" }\n      ]\n    },\n    SLP: {\n      version: 1,\n      EIPVersion: 2612,\n      nonceMethod: \"nonces\",\n      name: \"SushiSwap LP Token\",\n      type: [\n        { name: \"owner\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"value\", type: \"uint256\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"deadline\", type: \"uint256\" }\n      ]\n    }\n  },\n  govTokens:{\n    IDLE: {\n      abi: IDLE,\n      decimals: 18,\n      token: \"IDLE\",\n      enabled: true,\n      showAUM: false, // Include IDLE balance in AUM\n      showAPR: false, // Include IDLE Apr\n      protocol: \"idle\",\n      showPrice: false, // Show price in Yield Farming section\n      showBalance: false, // Include IDLE balance in Portfolio Donut\n      aprTooltipMode: false,\n      availableNetworks:[1,137],\n      distributionMode: \"block\",\n      distributionFrequency: \"day\", // Multiply distribution per block\n      color: \"hsl(162, 100%, 41%)\",\n      icon: \"images/tokens/IDLE.svg\",\n      addresses:{\n        1:\"0x875773784Af8135eA0ef43b5a374AaD105c5D39e\",\n        137:\"0xc25351811983818c9fe6d8c580531819c8ade90f\"\n      },\n      address: \"0x875773784Af8135eA0ef43b5a374AaD105c5D39e\", // MAIN\n      disabledTokens:{\n        137:[\"idleDAIYield\",\"idleUSDCYield\",\"idleWETHYield\"],\n        1:[\"idleFEIYield\",\"idleDAISafe\",\"idleUSDCSafe\",\"idleUSDTSafe\"]\n      }\n    },\n    COMP: {\n      abi: COMP,\n      decimals: 18,\n      token: \"COMP\",\n      enabled: true,\n      showAUM: true, // Include IDLE balance in AUM\n      showAPR: true, // Include COMP Apr\n      showPrice: true,\n      showBalance: true, // Include COMP balance in Portfolio Donut\n      disabledTokens: [],\n      protocol: \"compound\",\n      aprTooltipMode: false,\n      availableNetworks:[1],\n      distributionMode: \"block\",\n      distributionFrequency: \"day\",\n      color: \"hsl(162, 100%, 41%)\",\n      address: \"0xc00e94cb662c3520282e6f5717214004a7f26888\" // MAIN\n      // address:'0x61460874a7196d6a22d1ee4922473664b3e95270' // KOVAN\n    },\n    stkAAVE:{\n      abi:aToken,\n      decimals:18,\n      showAUM:true, // Include stkAAVE balance in AUM\n      showAPR:true, // Include stkAAVE Apr\n      enabled:true,\n      showPrice:true,\n      token:'stkAAVE',\n      showBalance:true, // Include stkAAVE balance in Portfolio Donut\n      protocol:'aavev2',\n      aprTooltipMode:false,\n      availableNetworks:[1],\n      distributionMode:'second',\n      color:'hsl(314, 41%, 51%)',\n      distributionFrequency:'day',\n      address:'0x4da27a545c0c5b758a6ba100e3a049001de870f5', // MAIN\n      addressForPrice:'0x7Fc66500c84A76Ad7e9c93437bFc5Ac33E2DDaE9', // MAIN\n      disabledTokens:{\n        1:[\"idleTUSDYield\", \"idleSUSDYield\", \"idleFEIYield\"]\n      }\n    },\n    WMATIC:{\n      abi:ERC20,\n      decimals:18,\n      showAUM:true, // Include stkAAVE balance in AUM\n      showAPR:true, // Include stkAAVE Apr\n      enabled:true,\n      token:'WMATIC',\n      showPrice:true,\n      showBalance:true, // Include stkAAVE balance in Portfolio Donut\n      protocol:'aavev2',\n      disabledTokens:[],\n      aprTooltipMode:false,\n      distributionMode:'second',\n      color:'hsl(314, 41%, 51%)',\n      distributionFrequency:'day',\n      availableNetworks:[137,80001],\n      // address:'0x9c3C9283D3e44854697Cd22D3Faa240Cfb032889', // Mumbai\n      address:'0x0d500B1d8E8eF31E21C99d1Db9A6444d3ADf1270', // Polygon\n      addressForPrice:'0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0' // Mainnet\n    }\n  },\n  contracts:{\n    137:{\n      ProtocolDataProvider:{\n        useInfuraProvider:false,\n        abi:ProtocolDataProvider,\n        address:'0x7551b5D2763519d4e37e8B81929D336De671d46d'\n      },\n      ChildChainManager:{\n        abi:ChildChainManager,\n        useInfuraProvider:false,\n        // address:'0x2e5e27d50EFa501D90Ad3638ff8441a0C0C0d75e' // Mumbai\n        address:'0xA6FA4fB5f76172d178d61B04b0ecd319C5d1C0aa' // Matic\n      },\n      UniswapRouter:{\n        abi:UniswapV2Router02,\n        useInfuraProvider:true,\n        address:'0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D'\n      },\n      SushiswapRouter:{\n        abi:SushiV2Router02,\n        address:'0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506'\n      },\n    },\n    1:{\n      DepositManager:{\n        abi:DepositManager,\n        address:'0x401f6c983ea34274ec46f84d70b31c151321188b'\n      },\n      RootChainManager:{\n        abi:RootChainManager,\n        // address:'0xBbD7cBFA79faee899Eaf900F13C9065bF03B1A74' // Goerli\n        address:'0xA0c68C638235ee32657e8f720a23ceC1bFc77C77' // Mainnet\n      },\n      ProxyFactory: {\n        abi: MinimalInitializableProxyFactory,\n        address: \"0x91baced76e3e327ba7850ef82a7a8251f6e43fb8\"\n      },\n      LockedIDLE:{\n        abi:LockedIDLE,\n        address:'0xF241a0151841AE2E6ea750D50C5794b5EDC31D99'\n      },\n      FeeTreasury:{\n        abi:FeeTreasury,\n        address:'0x69a62c24f16d4914a48919613e8ee330641bcb94' // MAIN\n      },\n      PriceOracle:{\n        abi:PriceOracle,\n        address:'0x972A64d108e250dF98dbeac8170678501f5EF181' // MAIN\n        // address:'0xCab5760688db837Bb453FE1DFBC5eDeE6fa8F0FF' // KOVAN\n      },\n      Timelock:{\n        abi:Timelock,\n        address:'0xD6dABBc2b275114a2366555d6C481EF08FDC2556' // MAIN\n        // address:'0xfD88D7E737a06Aa9c62B950C1cB5eE63DA379AFd' // KOVAN\n      },\n      EcosystemFund:{\n        abi:EcosystemFund,\n        address:'0xb0aA1f98523Ec15932dd5fAAC5d86e57115571C7' // MAIN\n        // address:'0x125d3D6A8e546BD13802c309429CBB4db5737d57' // KOVAN\n      },\n      VesterFactory:{\n        abi:VesterFactory,\n        address:'0xbF875f2C6e4Cc1688dfe4ECf79583193B6089972' // MAIN\n        // address:'0x9b52f91578c8AfA8e2DF07d4D7726bB6b73Ec1FE' // KOVAN\n      },\n      IdleController:{\n        abi:IdleController,\n        address:'0x275DA8e61ea8E02d51EDd8d0DC5c0E62b4CDB0BE' // MAIN\n        // address:'0x8Ad5F0644b17208c81bA5BDBe689c9bcc7143d87' // KOVAN\n      },\n      EarlyRewards:{\n          abi:EarlyRewards,\n          address:'0xa1F71ED24ABA6c8Da8ca8C046bBc9804625d88Fc' // MAIN\n          // address:'0x07A94A60B54c6b2Da19e23D6E9123180Bf92ED40' // KOVAN\n      },\n      GovernorAlpha:{\n        abi:GovernorAlpha,\n        address:'0x2256b25CFC8E35c3135664FD03E77595042fe31B' // MAIN\n        // address:'0x782cB1dbd0bD4df95c2497819be3984EeA5c2c25' // KOVAN\n      },\n      Comptroller:{\n        abi:Comptroller,\n        address:'0x3d9819210a31b4961b30ef54be2aed79b9c9cd3b', // Main\n        // address:'0x5eae89dc1c671724a672ff0630122ee834098657' // Kovan\n      },\n      SushiswapRouter:{\n        abi:SushiV2Router02,\n        address:'0xd9e1cE17f2641f24aE83637ab66a2cca9C378B9F'\n      },\n      UniswapRouter:{\n        abi:UniswapV2Router02,\n        address:'0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D'\n      },\n      BalancerExchangeProxy:{\n        abi:BalancerExchangeProxy,\n        address:'0x3E66B66Fd1d0b02fDa6C811Da9E0547970DB2f21'\n      }\n    }\n  },\n  tokens: {\n    DAI: {\n      zeroExInstant: {\n        orderSource: \"https://api.0x.org/sra/\",\n        assetData:\n          \"0xf47261b00000000000000000000000006b175474e89094c44da98b954eedeac495271d0f\",\n        affiliateInfo: {\n          feeRecipient: \"0x4215606a720477178AdFCd5A59775C63138711e8\",\n          feePercentage: 0.0025\n        }\n      }\n    },\n    USDC: {\n      zeroExInstant: {\n        orderSource: \"https://api.0x.org/sra/\",\n        assetData:\n          \"0xf47261b0000000000000000000000000a0b86991c6218b36c1d19d4a2e9eb0ce3606eb48\",\n        affiliateInfo: {\n          feeRecipient: \"0x4215606a720477178AdFCd5A59775C63138711e8\",\n          feePercentage: 0.0025\n        }\n      }\n    }\n  },\n  tranchflash: {\n    name: \"perpetual yield tranches\",\n    subtitle: \"Make yield your own.\",\n    desc:\"Choose the benefits of high-yield or low-risk, while enjoying the flexibility of Tranches. This comes with auto-compounding for accrued governance tokens and no locking period.\",\n    arrows: \"images/idlearrows.svg\",\n    juniorinfo:\n      \"<b>Junior Tranches</b><br>Higher risk, leveraged for variable rate rewards\",\n    seniorinfo:\n      \"<b>Senior Tranches</b><br>Lower risk, built-in coverage for variable rate rewards\",\n    helpcircle: \"images/help-circle.svg\",\n    questions: [\n      {\n        desc: \"How it Works?\",\n        msg:\"This product aggregates user deposits into underlying markets and allocates the accrued yield on the sum between two different risk profile subsets. You get to choose the strategy according to your risk tolerance. Users are able to deposit funds into either the Junior or Senior Tranches in exchange for a token indicating their claim on their principal and whatever yield is allocated for them. These aggregated holdings are then deposited into the specified originating lending market, in this current version Idle Best-Yield strategy.\"\n      },\n      {\n        desc: \"What happens in a case of a default?\",\n        msg:\"In case of hack, an emergency shutdown can be triggered (by both the guardian, which would be a multi-sig wallet, and the owner which will be the Idle governance) in order to pause both deposits and redeems.<br />The redistribution of remaining funds can happens selectively, by allowing only Senior tranche holders to withdraw first directly in the main contract, or through a separate contract for more complex cases and resolutions (managed by the Idle governance).\"\n      }\n    ]\n  },\n  tranches: {\n    AA: {\n      color: {\n        hex: \"#337de5\",\n        rgb: [51, 125, 229],\n        hsl: [\"215\", \"77%\", \"55%\"]\n      },\n      type: \"AA\",\n      route: \"senior\",\n      icon: \"Security\",\n      image: \"images/SeniorTranche.svg\",\n      bubble: \"images/SeniorBubble.svg\",\n      baseName: \"senior\",\n      name: \"Senior Tranche\",\n      features: [\n        \"Covered by Junior tranches funds\",\n        \"Minimized risk exposure\",\n        \"No locking period or epochs\",\n        \"Auto-Reinvest accrued tokens\",\n        \"Stake to receive $IDLE tokens\"\n      ],\n      description: {\n        long:\n          \"Senior Tranches provide a shielded access to optimized DeFi yields, thanks to an integrated funds' coverage given by Junior Tranches\",\n        deposit:\n          \"By depositing in the Senior Tranche in case of Smart-Contract breach your funds are covered by the funds deposited in the Junior Tranche.\",\n        stake:\n          \"Stake your tranche tokens to earn additional rewards and boost the APY.\",\n        unstake:\n          \"By unstaking your tranche tokens you will no more get additional rewards.\",\n        withdraw: \"You can withdraw your funds at any time from the tranche.\",\n        cantUnstake:\n          \"To unstake your funds you just need to wait 10 blocks after your last stake transaction.\",\n        cantWithdraw:\n          \"To withdraw your funds you just need to wait at least 1 block from the latest harvest transaction.\"\n      }\n    },\n    BB: {\n      color: {\n        hex: \"#FAB325\",\n        rgb: [250, 179, 37],\n        hsl: [\"40\", \"95%\", \"56%\"]\n      },\n      type: \"BB\",\n      route: \"junior\",\n      icon: \"TrendingUp\",\n      image: \"images/JuniorTranche.svg\",\n      bubble: \"images/JuniorBubble.svg\",\n      baseName: \"junior\",\n      name: \"Junior Tranche\",\n      features: [\n        \"Leverage yield using Senior tranches funds\",\n        \"Higher risk exposure by protecting senior tranches\",\n        \"No locking period or epochs\",\n        \"Auto-Reinvest accrued tokens\",\n        \"Stake to receive $IDLE tokens\"\n      ],\n      description: {\n        long:\n          \"The Junior Tranches provide amplified optimized DeFi yields by carrying a higher grade of risks and protecting Senior Tranches\",\n        deposit:\n          \"By depositing in the Junior Tranche in case of Smart-Contract breach your funds will be used to cover eventual losses on the Senior Tranche.\",\n        stake:\n          \"Stake your tranche tokens to earn additional rewards and boost the APY.\",\n        unstake:\n          \"By unstaking your tranche tokens you will no more get additional rewards.\",\n        withdraw: \"You can withdraw your funds at any time from the tranche.\",\n        cantUnstake:\n          \"To unstake your funds you just need to wait 10 blocks after your last stake transaction.\",\n        cantWithdraw:\n          \"To withdraw your funds you just need to wait at least 1 block from the latest harvest transaction.\"\n      }\n    }\n  },\n  extraicons: {\n    best: {\n      icon: \"images/sidebar/best-on.svg\",\n      iconDark: \"images/sidebar/best-on-dark.svg\",\n      iconInactive: \"images/sidebar/best-off.svg\",\n      iconInactiveDark: \"images/sidebar/best-off-dark.svg\",\n    },\n    tranches: {\n      icon: \"images/sidebar/tranches-on.svg\",\n      iconDark: \"images/sidebar/tranches-on-dark.svg\",\n      iconInactive: \"images/strategies/tranches-off.svg\",\n      iconInactiveDark: \"images/strategies/tranches-off-dark.svg\"\n    },\n    risk: {\n      icon: \"images/sidebar/risk-on.svg\",\n      iconDark: \"images/sidebar/risk-on-dark.svg\",\n      iconInactive: \"images/sidebar/risk-off.svg\",\n      iconInactiveDark: \"images/sidebar/risk-off-dark.svg\"\n    },\n    stats: {\n      icon: \"images/sidebar/stats-on.svg\",\n      iconDark: \"images/sidebar/stats-on-dark.svg\",\n      iconInactive: \"images/sidebar/stats-off.svg\",\n      iconInactiveDark: \"images/sidebar/stats-off-dark.svg\"\n    },\n    tools: {\n      icon: \"images/sidebar/tools-on.svg\",\n      iconDark: \"images/sidebar/tools-on-dark.svg\",\n      iconInactive: \"images/sidebar/tools-off.svg\",\n      iconInactiveDark: \"images/sidebar/tools-off-dark.svg\"\n    },\n    forum: {\n      icon: \"images/sidebar/forum-on.svg\",\n      iconDark: \"images/sidebar/forum-on-dark.svg\",\n      iconInactive: \"images/sidebar/forum-off.svg\",\n      iconInactiveDark: \"images/sidebar/forum-off-dark.svg\"\n    },\n    stake: {\n      icon: \"images/sidebar/stake-on.svg\",\n      iconDark: \"images/sidebar/stake-on-dark.svg\",\n      iconInactive: \"images/sidebar/stake-off.svg\",\n      iconInactiveDark: \"images/sidebar/stake-off-dark.svg\"\n    },\n    leaderboard: {\n      icon: \"images/sidebar/leaderboard-on.svg\",\n      iconDark: \"images/sidebar/leaderboard-on-dark.svg\",\n      iconInactive: \"images/sidebar/leaderboard-off.svg\",\n      iconInactiveDark: \"images/sidebar/leaderboard-off-dark.svg\"\n    }, overview: {\n      icon: \"images/sidebar/overview-on.svg\",\n      iconDark: \"images/sidebar/overview-on-dark.svg\",\n      iconInactive: \"images/sidebar/overview-off.svg\",\n      iconInactiveDark: \"images/sidebar/overview-off-dark.svg\"\n    }, proposals: {\n      icon: \"images/sidebar/proposals-on.svg\",\n      iconDark: \"images/sidebar/proposals-on-dark.svg\",\n      iconInactive: \"images/sidebar/proposals-off.svg\",\n      iconInactiveDark: \"images/sidebar/proposals-off-dark.svg\"\n    }, delegate: {\n      icon: \"images/sidebar/delegate-on.svg\",\n      iconDark: \"images/sidebar/delegate-on-dark.svg\",\n      iconInactive: \"images/sidebar/delegate-off.svg\",\n      iconInactiveDark: \"images/sidebar/delegate-off-dark.svg\"\n    },\n  },\n  strategies: {\n    tranches: {\n      token: \"DAI\",\n      visible: true,\n      type: \"tranche\",\n      protocol: \"idle\",\n      color: \"#f32121\",\n      comingSoon: false,\n      title: \"Tranches\",\n      addGovTokens: true,\n      titlePostfix: null,\n      component: Tranches,\n      iconName: \"Whatshot\",\n      enabledEnvs: ['beta'],\n      availableNetworks:[1],\n      govTokensEnabled: true,\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/tranches-on.png\",\n      iconInactive: \"images/strategies/tranches-off.png\",\n      iconInactiveDark: \"images/strategies/tranches-white.png\",\n      desc:\"Diversify your risk profile with dynamic tranched yield derivatives\",\n      descShort:\"Tranches deposit assets (eg DAI) into yield sources (eg Idle Finance) and split the accrued interest between 2 classes of products with different risk profiles.\",\n      descLong:\"Choose the benefits of high-yield or low-risk, while enjoying the flexibility of Tranches. This comes with auto-compounding for accrued governance tokens and no locking period.\"\n    },\n    best: {\n      token: \"DAI\",\n      visible: true,\n      enabledEnvs: [],\n      color: \"#f32121\",\n      type: \"strategy\",\n      comingSoon: false,\n      addGovTokens: true,\n      titlePostfix: null,\n      title: \"Best-Yield\",\n      iconName: \"Whatshot\",\n      govTokensEnabled: true,\n      component: StrategyPage,\n      availableNetworks:[1,137],\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/best-on.svg\",\n      iconInactive: \"images/strategies/best-off.svg\",\n      iconInactiveDark: \"images/strategies/best-white.svg\",\n      desc: \"Maximize your returns across DeFi protocols\",\n      descLong:\"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols. Idle’s monitoring system automatically triggers a rebalance if it spots a better-performing allocation: this includes taking account of the total liquidity within the pool, incorporating underlying protocol rate functions and levels of supply and demand. As a user, you will end up with an higher return without constantly checking rates and burning gas on every transfer. Unlock your funds from a single protocol performance with this strategy.\",\n      descShort:\"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols.\"\n    },\n    risk: {\n      token: \"DAI\",\n      visible: true,\n      enabledEnvs: [],\n      color: \"#2196F3\",\n      type: \"strategy\",\n      comingSoon: false,\n      titlePostfix: null,\n      addGovTokens: true,\n      iconName: \"Security\",\n      availableNetworks:[1],\n      title: \"Risk-Adjusted\",\n      govTokensEnabled: true,\n      component: StrategyPage,\n      chartColor: \"hsl(211,67%,47%)\",\n      icon: \"images/strategies/risk-on.svg\",\n      iconInactive: \"images/strategies/risk-off.svg\",\n      iconInactiveDark: \"images/strategies/risk-white.svg\",\n      desc: \"Optimize your risk exposure across DeFi protocols\",\n      descLong:\"The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level. The risk-management algorithm takes account of the total assets within a pool, incorporates underlying protocol rate functions and levels of supply and demand, skimming protocols with a bad score/rate mix, and finally determining an allocation that achieves the highest risk-return score possible after the rebalance happens.\",\n      descShort:\"The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level.\"\n    }\n    /*\n    new:{\n      token:'DAI',\n      color:'#2196F3',\n      comingSoon:true,\n      addGovTokens:true,\n      iconName:'Adjust',\n      title:'Coming Soon',\n      chartColor:'hsl(211,67%,47%)',\n      icon:'images/strategies/solr-on.svg',\n      desc:'More strategies are coming soon!',\n      iconInactive:'images/strategies/solr-off.svg',\n      descLong:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level. The risk-management algorithm takes account of the total assets within a pool, incorporates underlying protocol rate functions and levels of supply and demand, skimming protocols with a bad score/rate mix, and finally determining an allocation that achieves the highest risk-return score possible after the rebalance happens.',\n      descShort:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level.'\n    }\n    */\n  },\n  stats: {\n    enabled: true, // Enable endpoint\n    availableNetworks:[1],\n    rates: {\n      TTL: 300, // 5 minutes\n      endpoint:{\n        1:\"https://api.idle.finance/rates/\",\n        137:\"https://api-polygon.idle.finance/rates/\"\n      }\n    },\n    tvls: {\n      TTL: 120,\n      endpoint:{\n        1:\"https://api.idle.finance/tvls/\",\n        137:\"https://api-polygon.idle.finance/tvls/\"\n      }\n    },\n    substack: {\n      TTL: 1800,\n      endpoint:{\n        1:\"https://api.idle.finance/substack/\",\n        137:\"https://api-polygon.idle.finance/substack/\"\n      }\n    },\n    scores: {\n      TTL: 300, // 5 minutes\n      endpoint:{\n        1:\"https://api.idle.finance/scores/\"\n      }\n    },\n    config: {\n      headers: env.REACT_APP_IDLE_KEY ? { Authorization: `Bearer ${env.REACT_APP_IDLE_KEY}` } : {}\n    },\n    versions: {\n      /*\n      v2:{\n        label:'Idle V2',\n        startTimestamp:null,\n        additionalProtocols:[],\n        endTimestamp:1589752999,\n        enabledStrategies:['best'],\n        showPerformanceTooltip:false,\n        enabledTokens:['DAI','USDC'],\n      },\n      */\n      v3: {\n        label: \"Idle V3\",\n        additionalProtocols: [],\n        endTimestamp: 1597237542,\n        startTimestamp: 1589801874,\n        showPerformanceTooltip: false,\n        strategiesParams: {\n          risk: {\n            endTimestamp: 1597233922\n          }\n        },\n        enabledStrategies: [\"best\", \"risk\"],\n        enabledTokens: [\"DAI\", \"USDC\", \"USDT\", \"TUSD\", \"SUSD\", \"WBTC\"]\n      },\n      v4: {\n        label: \"Idle V4\",\n        endTimestamp: null,\n        startTimestamp: 1597442400, // 1598220000\n        enabledStrategies: [\"best\", \"risk\"],\n        showPerformanceTooltip: true,\n        strategiesParams: {\n          risk: {\n            startTimestamp: 1599183170\n          }\n        },\n        enabledTokens: ['DAI', 'USDC', 'USDT', 'TUSD', 'SUSD', 'WBTC', 'WETH', 'RAI', 'FEI'],\n        additionalProtocols: [\n          {\n            decimals: 16,\n            protocol: \"compound\",\n            name: \"compoundWithCOMP\",\n            enabledTokens: [\n              \"DAI\",\n              \"USDC\",\n              \"USDT\",\n              \"TUSD\",\n              \"SUSD\",\n              \"WBTC\",\n              \"WETH\"\n            ]\n          },\n          {\n            decimals: 18,\n            protocol: \"aavev2\",\n            name: \"aavev2WithStkAAVE\",\n            enabledTokens: [\n              \"DAI\",\n              \"USDC\",\n              \"USDT\",\n              \"TUSD\",\n              \"SUSD\",\n              \"WBTC\",\n              \"WETH\",\n              \"RAI\"\n            ]\n          }\n        ]\n      }\n    },\n    tokens:{\n      DAI:{\n        decimals:18,\n        enabled:true,\n        color:{\n          rgb:[250,184,51],\n          hex:'#F7B24A',\n          hsl:['40', '95%', '59%']\n        },\n        chart:{\n          labelTextColorModifiers:['darker', 2]\n        },\n        startTimestamp:'2020-02-11',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      MATIC:{\n        decimals:18,\n        enabled:true,\n        address:'0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0'\n      },\n      USD: {\n        enabled: true,\n        color: {\n          hex: \"#85bb65\",\n          rgb: [133, 187, 101],\n          hsl: [\"98\", \"39%\", \"56%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"brighter\", 2]\n        },\n        address: null,\n        startTimestamp: \"2020-02-04\"\n      },\n      USDC: {\n        decimals: 6,\n        enabled: true,\n        color: {\n          hex: \"#2875C8\",\n          rgb: [40, 117, 200],\n          hsl: [\"211\", \"67%\", \"47%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"brighter\", 2]\n        },\n        startTimestamp: \"2020-02-04\",\n        address: \"0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48\",\n        performanceTooltip:\n          \"APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.\"\n      },\n      USDT: {\n        decimals: 6,\n        enabled: true,\n        color: {\n          hex: \"#22a079\",\n          rgb: [34, 160, 121],\n          hsl: [\"161\", \"65%\", \"38%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        startTimestamp: \"2020-02-04\",\n        address: \"0xdac17f958d2ee523a2206206994597c13d831ec7\",\n        performanceTooltip:\n          \"APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.\"\n      },\n      TUSD: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"0340a1\",\n          rgb: [3, 64, 161],\n          hsl: [\"217\", \"96%\", \"32%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"brighter\", 5]\n        },\n        startTimestamp: \"2020-06-22\",\n        address: \"0x0000000000085d4780b73119b644ae5ecd22b376\"\n      },\n      SUSD: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#1e1a31\",\n          rgb: [30, 26, 49],\n          hsl: [\"250\", \"31%\", \"15%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"brighter\", 5]\n        },\n        startTimestamp: \"2020-06-22\",\n        address: \"0x57ab1ec28d129707052df4df418d58a2d46d5f51\"\n      },\n      WBTC: {\n        decimals: 8,\n        enabled: true,\n        color: {\n          hex: \"#eb9444\",\n          rgb: [235, 148, 68],\n          hsl: [\"29\", \"81%\", \"59%\"]\n        },\n        startTimestamp: \"2020-06-15\",\n        conversionRateField: \"wbtcDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0x2260fac5e5542a773aa44fbcfedf7c193bc2c599\",\n        performanceTooltip:\n          \"APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.\"\n      },\n      WETH: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#ee1f79\",\n          rgb: [238, 31, 121],\n          hsl: [\"334\", \"86%\", \"53%\"]\n        },\n        startTimestamp: \"2021-02-16\",\n        conversionRateField: \"wethDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\",\n        performanceTooltip:\n          \"APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.\"\n      },\n      COMP: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#00d395\",\n          rgb: [0, 211, 149],\n          hsl: [\"162\", \"100%\", \"41%\"]\n        },\n        startTimestamp: \"2020-06-15\",\n        conversionRateField: \"compDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0xc00e94cb662c3520282e6f5717214004a7f26888\"\n      },\n      stkAAVE: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#B6509E\",\n          rgb: [182, 80, 158],\n          hsl: [\"314\", \"41%\", \"51%\"]\n        },\n        startTimestamp: \"2021-04-30\",\n        conversionRateField: \"aaveDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0x4da27a545c0c5b758a6ba100e3a049001de870f5\"\n      },\n      IDLE: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#0d55bb\",\n          rgb: [13, 85, 187],\n          hsl: [\"215\", \"87%\", \"39%\"]\n        },\n        startTimestamp: \"2020-11-10\",\n        conversionRateField: \"idleDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0x875773784Af8135eA0ef43b5a374AaD105c5D39e\"\n      },\n      RAI: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#378879\",\n          rgb: [55, 136, 121],\n          hsl: [\"169\", \"42%\", \"37%\"]\n        },\n        disabledCharts: [\"score\"],\n        startTimestamp: \"2021-05-25\",\n        icon: \"images/tokens/RAI.png\",\n        conversionRateField: \"raiDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0x03ab458634910aad20ef5f1c8ee96f1d6ac54919\"\n      },\n      FEI: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: '#229b6e',\n          rgb: [34, 155, 110],\n          hsl: ['158', '64%', '37%']\n        },\n        disabledCharts: ['score'],\n        startTimestamp: '2021-09-24',\n        conversionRateField: 'feiDAIPrice',\n        chart: {\n          labelTextColorModifiers: ['darker', 4]\n        },\n        address: '0x956f47f50a910163d8bf957cf5846d573e7f87ca',\n      },\n      WMATIC:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#2891f8',\n          rgb:[40, 145, 248],\n          hsl:['210', '94%', '56%']\n        },\n        startTimestamp:'2021-05-25',\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        address:'0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0',\n      },\n      'idleDAI+idleUSDC+idleUSDT':{\n        decimals:18,\n        enabled:false,\n        name:'Curve.fi',\n        color:{\n          hex:'#ff0000',\n          rgb:[255, 0, 0],\n          hsl:['0', '100%', '50%']\n        },\n        startTimestamp: \"2020-06-15\"\n      }\n    },\n    protocols: {\n      compound: {\n        legend: true,\n        enabled: true,\n        label: \"Compound\",\n        color: {\n          rgb: [0, 209, 146],\n          hsl: [\"162\", \"100%\", \"41%\"]\n        }\n      },\n      aavev2WithStkAAVE: {\n        enabled: true,\n        label: \"Aave V2 + stkAAVE\",\n        startTimestamp: \"2021-05-08 14:30:00\",\n        // tokensProps:{\n        //   WETH:{\n        //     startTimestamp:'2021-05-19 12:20:00',\n        //   }\n        // },\n        color: {\n          hex: \"#B6509E\",\n          rgb: [182, 80, 158],\n          hsl: [\"314\", \"41%\", \"51%\"]\n        },\n        rateField: [\"rate\", \"aaveAdditionalAPR\"]\n      },\n      compoundWithCOMP: {\n        enabled: true,\n        label: \"Compound + COMP\",\n        color: {\n          rgb: [0, 153, 107],\n          hsl: [\"162\", \"100%\", \"30%\"]\n        },\n        rateField: [\"rate\", \"compoundAdditionalAPR\"]\n      },\n      fulcrum: {\n        legend: false,\n        enabled: false,\n        label: \"Fulcrum\",\n        color: {\n          rgb: [2, 138, 192],\n          hsl: [\"197\", \"98%\", \"38%\"]\n        }\n      },\n      dsr: {\n        label: \"DSR\",\n        enabled: false,\n        icon: \"CHAI.png\",\n        color: {\n          rgb: [222, 52, 67],\n          hsl: [\"355\", \"72%\", \"54%\"]\n        }\n      },\n      dydx: {\n        legend: true,\n        label: \"DyDx\",\n        enabled: true,\n        color: {\n          rgb: [87, 87, 90],\n          hsl: [\"240\", \"2%\", \"35%\"]\n        }\n      },\n      iearn: {\n        label: \"Yearn\",\n        enabled: true\n      },\n      aave: {\n        label: \"Aave V1\",\n        legend: false,\n        enabled: false,\n        color: {\n          rgb: [230, 131, 206],\n          hsl: [\"315\", \"66%\", \"71%\"]\n        }\n      },\n      aavev2: {\n        legend: true,\n        enabled: true,\n        icon: \"aave.svg\",\n        label: \"Aave V2\",\n        color: {\n          rgb: [151, 79, 141],\n          hsl: [\"308\", \"31%\", \"45%\"]\n        }\n      },\n      cream: {\n        legend: true,\n        enabled: true,\n        label: \"Cream\",\n        icon: \"cream.svg\",\n        color: {\n          rgb: [105, 226, 220],\n          hsl: [\"177\", \"68%\", \"65%\"]\n        }\n      },\n      fuse: {\n        legend: true,\n        enabled: true,\n        label: \"Fuse\",\n        icon: \"fuse.png\",\n        color: {\n          rgb: [0, 0, 0],\n          hsl: [\"0\", \"0%\", \"0%\"]\n        }\n      },\n      curve: {\n        label: \"\",\n        enabled: true,\n        color: {\n          rgb: [0, 55, 255],\n          hsl: [\"227\", \"100%\", \"50%\"]\n        }\n      },\n      idle: {\n        label: \"Idle\",\n        enabled: true,\n        color: {\n          rgb: [0, 55, 255],\n          hsl: [\"227\", \"100%\", \"50%\"]\n        }\n      }\n    }\n  },\n  contract: {\n    methods: {\n      refreshIdleSpeed:{\n        enabled:true,\n        availableNetworks:[1]\n      },\n      redeem: {\n        skipRebalance: true,\n        metaTransactionsEnabled: false\n      },\n      deposit: {\n        skipMint: true,\n        minAmountForMint: 100000,\n        erc20ForwarderEnabled: true,\n        skipMintCheckboxEnabled: true,\n        metaTransactionsEnabled: false,\n        // Proxy contract for Meta Tx or ERC20 Forwarder\n        erc20ForwarderProxyContract: {\n          forwarder: {\n            enabled: true,\n            abi: erc20Forwarder,\n            name: \"erc20Forwarder\",\n            function: \"emitMessage\",\n            address: \"0xfaadbe5f0a19f0ebf92aeb73534cbc96b96e2bda\" // Main\n            // address:'0xCB3F801C91DEcaaE9b08b1eDb915F9677D8fdB4A' // Kovan\n          },\n          tokens: {\n            DAI: {\n              enabled: true,\n              permitType: \"DAI_Permit\",\n              abi: IdleDepositForwarder,\n              function: \"permitAndDeposit\", // foo\n              name: \"IdleDepositForwarderDAI\",\n              address: \"0xDe3c769cCD1878372864375e9f89956806B86daA\" // Main\n              // address:'0x1E32F1E96B9735E5D31a23e12fe8e6D9845a9072', // Kovan\n            },\n            USDC: {\n              enabled: true,\n              abi: IdleDepositForwarder,\n              permitType: \"EIP2612_Permit\",\n              name: \"IdleDepositForwarderUSDC\",\n              function: \"permitEIP2612AndDeposit\", // 'foo'\n              address: \"0x43bD6a78b37b50E3f52CAcec53F1202dbDe6a761\" // Main\n              // address:'0x8f9048CFAa27b1A1b77c32a0b87D2DcF5D016cb5', // Kovan\n            }\n          }\n        },\n        proxyContract: {\n          enabled: false,\n          abi: IdleProxyMinter,\n          name: \"IdleProxyMinter\",\n          function: \"mintIdleTokensProxy\",\n          address: \"0x7C4414aA6B0c6CB1Bc7e5BFb7433138426AC637a\"\n        }\n      },\n      migrate: {\n        skipRebalance: true,\n        minAmountForRebalance: 10000,\n        minAmountForRebalanceMetaTx: 10000\n      },\n      redeemGovTokens: {\n        enabled: true\n      },\n      redeemSkipGov: {\n        enabled: true,\n        disabledTokens: [\"idleDAISafe\", \"idleUSDCSafe\", \"idleUSDTSafe\"]\n      },\n      rebalance: {\n        enabled: true,\n        abi: IdleRebalancerV3\n      }\n    }\n  },\n  network:{ // Network configurations\n    availableNetworks:{\n      1:{\n        version:'v1',\n        name:'Mainnet',\n        baseToken:'ETH',\n        provider:'infura',\n        network:'mainnet',\n        explorer:'etherscan',\n        chainName:'Ethereum Mainnet',\n      },\n      42:{\n        name:'Kovan',\n        baseToken:'ETH',\n        provider:'infura',\n        explorer:'etherscan',\n        chainName:'Ethereum Testnet Kovan',\n      },\n      3:{\n        name:'Ropsten',\n        baseToken:'ETH',\n        provider:'infura',\n        explorer:'etherscan',\n        chainName:'Ethereum Testnet Ropsten',\n      },\n      4:{\n        name:'Rinkeby',\n        baseToken:'ETH',\n        provider:'infura',\n        explorer:'etherscan',\n        chainName:'Ethereum Testnet Rinkeby',\n      },\n      137:{\n        version:'v1',\n        name:'Polygon',\n        network:'mainnet',\n        baseToken:'MATIC',\n        explorer:'polygon',\n        provider:'polygon',\n        chainName:'Matic(Polygon) Mainnet',\n      },\n      5:{\n        name:'Görli',\n        baseToken:'ETH',\n        version:'mumbai',\n        network:'testnet',\n        provider:'infura',\n        explorer:'etherscan',\n        chainName:'Ethereum Testnet Görli',\n      },\n      1337:{\n        name:'Hardhat',\n        baseToken:'ETH',\n        provider:'infura',\n        explorer:'etherscan',\n        chainName:'Ethereum Mainnet',\n      },\n      80001:{\n        name:'Mumbai',\n        version:'mumbai',\n        network:'testnet',\n        baseToken:'MATIC',\n        explorer:'polygon',\n        provider:'polygon',\n        chainName:'Matic Testnet Mumbai',\n      }\n    },\n    isForked: false, // If TRUE the tx confirmation callback is fired on the receipt\n    requiredNetwork: 1, // { 1: Mainnet, 3: Ropsten, 42: Kovan }\n    blocksPerYear: 2371428,\n    secondsPerYear: 31536000,\n    requiredConfirmations: 1,\n    firstBlockNumber: 8119247,\n    enabledNetworks: [1, 137],\n    accountBalanceMinimum: 0, // in ETH for gas fees\n    providers:{\n      infura:{\n        key:env.REACT_APP_INFURA_KEY,\n        rpc:{\n          5: 'https://goerli.infura.io/v3/',\n          42: 'https://kovan.infura.io/v3/',\n          1: 'https://mainnet.infura.io/v3/',\n          1337: 'https://mainnet.infura.io/v3/',\n          137: 'https://mainnet.infura.io/v3/',\n          80001: 'https://goerli.infura.io/v3/'\n        }\n      },\n      polygon:{\n        enabled:true,\n        // key:env.REACT_APP_POLYGON_KEY,\n        key:env.REACT_APP_INFURA_KEY,\n        baseUrl:{\n          137:'https://polygonscan.com',\n          80001:'https://explorer-mumbai.maticvigil.com'\n        },\n        networkPairs:{\n          1:137,\n          137:1,\n          5:80001,\n          80001:5\n        },\n        publicRpc:{\n          137:'https://rpc-mainnet.matic.network'\n        },\n        rpc:{\n          // 1:'https://rpc-mainnet.maticvigil.com/v1/',\n          // 5:'https://rpc-mumbai.maticvigil.com/v1/',\n          // 137:'https://rpc-mainnet.maticvigil.com/v1/',\n          // 80001:'https://rpc-mumbai.maticvigil.com/v1/'\n\n          1:'https://polygon-mainnet.infura.io/v3/',\n          5:'https://polygon-mainnet.infura.io/v3/',\n          137:'https://polygon-mainnet.infura.io/v3/',\n          80001:'https://polygon-mainnet.infura.io/v3/'\n\n          // 1:'https://matic-mainnet.chainstacklabs.com/',\n          // 137:'https://matic-mainnet.chainstacklabs.com/',\n          // 5:'https://matic-mumbai.chainstacklabs.com/',\n          // 80001:'https://matic-mumbai.chainstacklabs.com/' \n        }\n      },\n      nexus: {\n        endpoints: {\n          1: \"https://api.nexusmutual.io/v1/\",\n          42: \"https://api.staging.nexusmutual.io/v1/\"\n        }\n      },\n      ens:{\n        enabled:true,\n        supportedNetworks:[1]\n      },\n      covalent:{\n        enabled:true,\n        key:env.REACT_APP_COVALENT_KEY,\n        endpoints:{\n          137:'https://api.covalenthq.com/v1/137/',\n          80001:'https://api.covalenthq.com/v1/80001/'\n        }\n      },\n      etherscan:{\n        enabled:true, // False for empty txs list (try new wallet)\n        keys: [\n          env.REACT_APP_ETHERSCAN_KEY,\n          env.REACT_APP_ETHERSCAN_KEY2,\n          env.REACT_APP_ETHERSCAN_KEY3,\n          env.REACT_APP_ETHERSCAN_KEY4\n        ],\n        endpoints:{\n          1: 'https://api.etherscan.io/api',\n          1337: 'https://api.etherscan.io/api',\n          5: 'https://api-goerli.etherscan.io/api',\n          42: 'https://api-kovan.etherscan.io/api'\n        },\n        baseUrl:{\n          1: 'https://etherscan.io',\n          1337: 'https://etherscan.io',\n          5: 'https://goerli.etherscan.io',\n          42: 'https://kovan.etherscan.io',\n        }\n      },\n      snapshot: {\n        whitelist: [\n          \"0x9993ADB62085AcB05Fc493f7A1D10C11227A78fa\",\n          \"0xf12ce5807e3d3128B876aa1Cec0632D63547E22E\"\n        ],\n        endpoints: {\n          proposals: \"https://hub.snapshot.page/api/idlefinance.eth/proposals\"\n        },\n        urls: {\n          proposals: \"https://signal.idle.finance/#/idlefinance.eth/proposal/\"\n        }\n      },\n      biconomy: {\n        enabled: true,\n        enableLogin: false,\n        supportedNetworks: [1, 42],\n        disabledWallets: [\"authereum\"],\n        endpoints: {\n          limits: \"https://api.biconomy.io/api/v1/dapp/checkLimits\"\n        },\n        params: {\n          debug: false,\n          apiKey: env.REACT_APP_BICONOMY_KEY, // Mainnet\n          dappId: env.REACT_APP_BICONOMY_APPID,\n          apiId: \"36572ec9-ae5c-4c4a-9530-f3ae7c7ac829\"\n          // apiKey: env.REACT_APP_BICONOMY_KEY_KOVAN, // Kovan\n        }\n      },\n      simpleID: {\n        enabled: false,\n        supportedNetworks: [1],\n        getNetwork: (networkId, availableNetworks) => {\n          let networkName = null;\n          switch (networkId) {\n            case 1:\n              networkName = \"mainnet\";\n              break;\n            default:\n              networkName = availableNetworks[networkId]\n                ? availableNetworks[networkId].toLowerCase()\n                : \"mainnet\";\n              break;\n          }\n          return networkName;\n        },\n        params: {\n          appOrigin: window.location.origin,\n          appName: \"Idle\",\n          appId: \"eb4d1754-a76e-4c58-8422-54b5ca2395e7\",\n          renderNotifications: false,\n          network: \"mainnet\"\n        }\n      }\n    }\n  },\n  events: {\n    DAI: {\n      fields: {\n        to: \"dst\",\n        from: \"src\",\n        value: \"wad\"\n      }\n    }\n  },\n  notifications: [\n    {\n      enabled: false,\n      end: 1612282726374,\n      start: 1611677841027,\n      date: \"Jan 26, 2021 16:18 UTC\",\n      title: \"Cover Protocol Available\",\n      hash: \"/dashboard/tools/cover-protocol\",\n      image: \"/images/protocols/cover-logo.svg\",\n      text: \"Protect your portfolio with Cover Protocol\"\n    }\n  ],\n  tools: {\n    stake: {\n      enabled: true,\n      icon: \"Layers\",\n      label: \"Staking\",\n      route: \"staking\",\n      subComponent: Staking,\n      availableNetworks:[1],\n      desc: \"Stake your IDLE / Sushi Swap LP tokens and earn $IDLE rewards\",\n      props: {\n        availableTokens: {\n          IDLE: {\n            component: IdleStaking,\n            contract: {\n              abi: stkIDLE,\n              decimals: 18,\n              name: \"stkIDLE\",\n              fromBlock: 12561464,\n              rewardToken: \"IDLE\",\n              address: \"0xaac13a116ea7016689993193fce4badc8038136f\" // Mainnet\n            },\n            feeDistributor: {\n              fromBlock: 12649361,\n              abi: StakingFeeDistributor,\n              name: \"StakingFeeDistributor\",\n              address: \"0xbabb82456c013fd7e3f25857e0729de8207f80e2\" // Mainnet\n            },\n            abi: IDLE,\n            name: \"IDLE\",\n            token: \"IDLE\",\n            decimals: 18,\n            enabled: true,\n            label: \"IDLE Token\",\n            icon: \"images/tokens/IDLE.svg\",\n            address: \"0x875773784Af8135eA0ef43b5a374AaD105c5D39e\", // Mainnet\n            poolLink:\n              \"https://etherscan.com/address/0x875773784Af8135eA0ef43b5a374AaD105c5D39e\"\n          },\n          SLP: {\n            component: LpStaking,\n            contract: {\n              decimals: 24,\n              name: \"LpStaking\",\n              maxMultiplier: 3,\n              abi: LpStakingAbi,\n              maxBonusDays: 120,\n              rewardToken: \"IDLE\",\n              address: \"0xcc0b9f7ed0e6bc7c2e69dbd247e8420f29aeb48d\" // Mainnet\n            },\n            name: \"SLP\",\n            token: \"SLP\",\n            decimals: 18,\n            enabled: true,\n            abi: SushiLiquidityPool,\n            label: \"SushiSwap IDLE/ETH LP Token\",\n            icon: \"images/protocols/sushiswap.png\",\n            address: \"0xa7f11e026a0af768d285360a855f2bded3047530\", // Mainnet\n            poolLink:\n              \"https://analytics.sushi.com/pairs/0xa7f11e026a0af768d285360a855f2bded3047530\"\n          }\n        }\n      }\n    },\n    stakePolygon: {\n      enabled: true,\n      icon: \"Layers\",\n      label: \"Staking\",\n      subComponent: Staking,\n      availableNetworks:[137],\n      route: \"staking-polygon\",\n      desc: \"Stake your Sushi Swap LP tokens and earn $IDLE rewards\",\n      props: {\n        availableTokens: {\n          SLP: {\n            component: LpStaking,\n            contract: {\n              decimals: 24,\n              name: \"LpStaking\",\n              maxMultiplier: 3,\n              abi: LpStakingAbi,\n              maxBonusDays: 60,\n              rewardToken: \"IDLE\",\n              address: \"0x59CDF902b6A964CD5dB04d28f12b774bFB876Be9\" // Polygon\n            },\n            name: \"SLP\",\n            token: \"SLP\",\n            decimals: 18,\n            enabled: true,\n            abi: SushiLiquidityPool,\n            label: \"SushiSwap IDLE/WETH LP Token\",\n            icon: \"images/protocols/sushiswap.png\",\n            address: \"0x5518a3af961eee8771657050c5cb23d2b3e2f6ee\", // Polygon\n            poolLink: \"https://analytics-polygon.sushi.com/pairs/0x5518a3af961eee8771657050c5cb23d2b3e2f6ee\"\n          }\n        }\n      }\n    },\n    nexusMutual: {\n      enabled: true,\n      icon: \"Security\",\n      route: \"coverage\",\n      label: \"Coverage\",\n      availableNetworks:[1],\n      desc: \"Buy Nexus Mutual coverage without KYC for your deposits\",\n      subComponent: NexusMutual,\n      props: {\n        availableTokens: {\n          idleDAIYield: {\n            decimals: 18,\n            abi: IdleTokenV4,\n            name: \"idleDAIYield\",\n            token: \"idleDAIYield\", // Mainnet\n            // token:'idleDAIYieldMock', // Kovan\n            address: \"0x0000000000000000000000000000000000000011\",\n            realAddress: \"0x3fe7940616e5bc47b0775a0dccf6237893353bb4\", // Mainnet\n            // realAddress:'0xbd0b0205408509544815d377214d8f2cbe3e5381', // Kovan\n            underlying: {\n              DAI: {\n                abi: ERC20,\n                name: \"DAI\", // Mainnet\n                token: \"DAI\",\n                decimals: 18,\n                // name:'DAIMock', // Kovan\n                address: \"0x6b175474e89094c44da98b954eedeac495271d0f\" // Mainnet\n                // address:'0x5C422252C6a47CdacF667521566Bf7bD5b0d769B' // Kovan\n              }\n            }\n          },\n          idleUSDTYield: {\n            decimals: 18,\n            abi: IdleTokenV4,\n            name: \"idleUSDTYield\",\n            token: \"idleUSDTYield\", // Mainnet\n            // token:'idleUSDTYieldMock', // Kovan\n            address: \"0x0000000000000000000000000000000000000012\",\n            realAddress: \"0xF34842d05A1c888Ca02769A633DF37177415C2f8\",\n            underlying: {\n              DAI: {\n                abi: ERC20,\n                name: \"DAI\", // Mainnet\n                token: \"DAI\",\n                decimals: 18,\n                // name:'DAIMock', // Kovan\n                address: \"0x6b175474e89094c44da98b954eedeac495271d0f\" // Mainnet\n                // address:'0x5C422252C6a47CdacF667521566Bf7bD5b0d769B' // Kovan\n              }\n            }\n          }\n        }\n      },\n      directProps: {\n        // startBlock:25858186, // Kovan\n        startBlock: 12783137, // Mainnet\n        // Yield token covers have a 14 days grace period\n        yieldTokenCoverGracePeriod: 14 * 24 * 60 * 60 * 1000,\n        contractInfo: {\n          abi: NexusMutualDistributor,\n          name: \"NexusMutualDistributor\",\n          // address:'0xe2d569dc064b3b91f514e775c6026e04d2c887a9' // Kovan\n          address: \"0xf2b36f823eae36e53a5408d8bd452748b24fbf76\" // Mainnet\n        },\n        incidentsInfo: {\n          abi: NexusMutualIncidents,\n          name: \"NexusMutualIncidents\",\n          // address:'0x322f9a880189E3FFFf59b74644e13e5763C5AdB9' // Kovan\n          address: \"0x8ceba69a8e96a4ce71aa65859dbdb180b489a719\" // Mainnet\n        }\n      }\n    },\n    b2bVesting: {\n      enabled: true,\n      visible: true,\n      icon: \"CloudUpload\",\n      label: \"B2B Vesting\",\n      availableNetworks:[1],\n      route: \"b2b-vesting-contract\",\n      subComponent: DeployB2BVesting,\n      desc:'Deploy/Deposit/Claim for B2B Vesting Contracts<br /><small style=\"color:#ff9900\">(only for partners that joined the B2B Affiliate program)</small>',\n      props: {\n        contracts: {\n          vesterImplementation: {\n            abi: B2BVester,\n            address: \"0x3024656ae91d7bf724f613c314bc56030ba2344c\"\n          }\n        }\n      }\n    },\n    polygonBridge:{\n      enabled:true,\n      route:'polygon-bridge',\n      availableNetworks:[1,137],\n      subComponent:PolygonBridge,\n      image:'images/protocols/polygon.svg',\n      label:'Ethereum ⇔ Polygon Bridge',\n      desc:'Transfer your tokens from Ethereum to Polygon and vice versa with Plasma and PoS Bridge.',\n      props:{\n        contracts:{\n          ERC20Predicate:{\n            abi:null,\n            name:'ERC20Predicate',\n            // address:'0xdD6596F2029e6233DEFfaCa316e6A95217d4Dc34', // Goerli\n            address:'0x40ec5B33f54e0E8A33A975908C5BA1c14e5BbbDf' // Mainnet\n          },\n          EtherPredicate:{\n            abi:null,\n            name:'EtherPredicate',\n            // address:'0xdD6596F2029e6233DEFfaCa316e6A95217d4Dc34', // Goerli\n            address:'0x8484Ef722627bf18ca5Ae6BcF031c23E6e922B30' // Mainnet\n          },\n          DepositManager:{\n            name:'DepositManager',\n            address:'0x401f6c983ea34274ec46f84d70b31c151321188b'\n          },\n          RootChainManager:{\n            name:'RootChainManager',\n            address:'0xA0c68C638235ee32657e8f720a23ceC1bFc77C77' // Mainnet\n          },\n          StateSender:{\n            name:'StateSender',\n            address:'0x28e4F3a7f651294B9564800b2D01f35189A5bFbE'\n          }\n        },\n        availableTokens:{\n          /*\n          DERC20:{\n            decimals:18,\n            enabled:true,\n            name:'DERC20',\n            token:'DERC20',\n            rootToken:{\n              name:'DERC20',\n              abi:DummyERC20,\n              address:'0x655F2166b0709cd575202630952D71E2bB0d61Af' // Goerli\n            },\n            childToken:{\n              abi:ChildERC20,\n              name:'DummyERC20',\n              address:'0xfe4F5145f6e09952a5ba9e956ED0C25e3Fa4c7F1' // Mumbai\n            }\n          },\n          */\n          MATIC:{\n            name:'MATIC',\n            token:'MATIC',\n            decimals:18,\n            enabled:true,\n            sendValue:true,\n            bridgeType:'plasma',\n            rootToken:{\n              abi:ERC20,\n              name:'MATIC',\n              address:'0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0', // Mainnet\n            },\n            childToken:{\n              abi:ChildERC20,\n              name:'childMATIC',\n              address:'0x0000000000000000000000000000000000001010' // Matic\n            }\n          },\n          WETH:{\n            name:'WETH',\n            token:'ETH',\n            decimals:18,\n            enabled:true,\n            bridgeType:'pos',\n            childToken:{\n              abi:ChildERC20,\n              name:'maticWETH',\n              address:'0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619' // Matic\n            }\n          },\n          /*\n          WETH:{\n            name:'WETH',\n            token:'WETH',\n            decimals:18,\n            enabled:true,\n            sendValue:false,\n            bridgeType:'pos',\n            rootToken:{\n              abi:ERC20,\n              name:'WETH',\n              address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2', // Mainnet\n            },\n            childToken:{\n              abi:ChildERC20,\n              name:'childWETH',\n              address:'0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619' // Matic\n            }\n          },\n          */\n          DAI:{\n            name:'DAI',\n            token:'DAI',\n            decimals:18,\n            enabled:true,\n            sendValue:false,\n            bridgeType:'pos',\n            rootToken:{\n              abi:DAI,\n              name:'DAI',\n              // address:'0x6311344B50D2077BF9804d376EA4C2cEDcB75C1f', // Goerli\n              address:'0x6b175474e89094c44da98b954eedeac495271d0f', // Mainnet\n            },\n            childToken:{\n              abi:ChildERC20,\n              name:'childDAI',\n              // address:'0x001B3B4d0F3714Ca98ba10F6042DaEbF0B1B7b6F', // Mumbai\n              address:'0x8f3Cf7ad23Cd3CaDbD9735AFf958023239c6A063' // Matic\n            }\n          },\n          USDC:{\n            decimals:6,\n            name:'USDC',\n            token:'USDC',\n            enabled:true,\n            bridgeType:'pos',\n            rootToken:{\n              abi:USDC,\n              name:'USDC',\n              // address:'0x98339D8C260052B7ad81c28c16C0b98420f2B46a' // Goerli\n              address:'0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48', // Mainnet\n            },\n            childToken:{\n              abi:ChildERC20,\n              name:'childUSDC',\n              // address:'0x6D4dd09982853F08d9966aC3cA4Eb5885F16f2b2' // Mubai\n              address:'0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174' // Matic\n            }\n          },\n          IDLE:{\n            decimals:18,\n            name:'IDLE',\n            token:'IDLE',\n            enabled:true,\n            bridgeType:'pos',\n            rootToken:{\n              abi:IDLE,\n              name:'IDLE',\n              address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e', // Mainnet\n            },\n            childToken:{\n              abi:ChildERC20,\n              name:'childUSDC',\n              address:'0xc25351811983818c9fe6d8c580531819c8ade90f' // Matic\n            }\n          },\n          /*\n          AAVE:{\n            decimals:18,\n            name:'AAVE',\n            token:'AAVE',\n            enabled:true,\n            bridgeType:'pos',\n            rootToken:{\n              abi:ERC20,\n              name:'AAVE',\n              address:'0x7fc66500c84a76ad7e9c93437bfc5ac33e2ddae9', // Mainnet\n            },\n            childToken:{\n              abi:ChildERC20,\n              name:'childAAVE',\n              address:'0xD6DF932A45C0f255f85145f286eA0b292B21C90B' // Matic\n            }\n          }\n          */\n        }\n      }\n    },\n    ethWrapper:{\n      enabled:true,\n      label:'ETH Wrapper',\n      route:'eth-wrapper',\n      availableNetworks:[1,42],\n      subComponent:TokenWrapper,\n      image:'images/tokens/WETH.svg',\n      desc:'Wrap your ETH and get WETH. Unwrap your WETH and get back ETH.',\n      props:{\n        startContract:{\n          name:'ETH',\n          token:'ETH',\n          decimals:18,\n          wrapMethod:'deposit',\n        },\n        destContract:{\n          abi:WETH,\n          name:'WETH',\n          decimals:18,\n          token:'WETH',\n          unwrapMethod:'withdraw',\n          address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2'\n        },\n      }\n    },\n    coverProtocol:{\n      enabled:false,\n      availableNetworks:[1],\n      label:'Cover Protocol',\n      route:'cover-protocol',\n      subComponent:CoverProtocol,\n      image:'images/protocols/cover-logo.svg',\n      desc:'Get your Idle Portfolio covered against Smart Contract risk',\n      fileClaimUrl:'https://app.coverprotocol.com/app/claims/new?protocol=IDLE',\n      props:{\n        contract:{\n          decimals:18,\n          abi:CoverMint,\n          name:'CoverMint',\n          address:'0x46f2f34742c1d9b9b220aabf0ff26bf59ec9f8a0'\n        },\n        coverages:[\n          {\n            collateral: \"DAI\",\n            expirationTimestamp: 1714470400,\n            tokens: {\n              Claim: {\n                abi: CovToken,\n                name: \"COVER_IDLE_2021_02_28_DAI_0_CLAIM\",\n                address: \"0xa7dac6774e5e40f56a0bf06af6cf9b1f3d037bcc\",\n                balancerPool: {\n                  decimals: 18,\n                  abi: BalancerPool,\n                  name: \"BAL_COVER_IDLE_2021_02_28_DAI_0_CLAIM\",\n                  address: \"0xeb2b9959c7943eb3c0bdb69ede25247bab4d1c6c\"\n                }\n              },\n              NoClaim: {\n                abi: CovToken,\n                name: \"COVER_IDLE_2021_02_28_DAI_0_NOCLAIM\",\n                address: \"0x53df0bfa014b7522299c129c5a7b318f02adb469\",\n                balancerPool: {\n                  decimals: 18,\n                  abi: BalancerPool,\n                  name: \"BAL_COVER_IDLE_2021_02_28_DAI_0_NOCLAIM\",\n                  address: \"0xce0e9e7a1163badb7ee79cfe96b5148e178cab73\"\n                }\n              }\n            }\n          }\n        ]\n      }\n    },\n    batchDeposit:{\n      enabled: true,\n      icon: \"Storage\",\n      claimEnabled: true,\n      depositEnabled: true,\n      availableNetworks:[1],\n      route: \"batch-deposit\",\n      label: \"Batch Deposit\",\n      subComponent: BatchDeposit,\n      desc:\"Deposit your tokens in the batch and wait until its execution to claim your Idle Tokens V4\",\n      props: {\n        availableTokens: {\n          idleDAIYield: {\n            decimals: 18,\n            strategy: \"best\",\n            baseToken: \"DAI\",\n            minPoolSize: 20000,\n            migrationContract: {\n              abi: IdleBatchedMint,\n              name: \"IdleBatchedMintDAI\",\n              address: \"0x633fb4d38B24dC890b11Db2AE2B248D13F996A79\", // Main\n              // address:'0x1B7bA0361A15CCF62521cF7d2Cbb2Ba90b1521a7', // Kovan\n              functions: [\n                {\n                  name: \"deposit\",\n                  usePermit: true,\n                  label: \"Deposit\",\n                  permitName: \"permitAndDeposit\"\n                }\n              ]\n            }\n          },\n          idleUSDCYield: {\n            decimals: 6,\n            strategy: \"best\",\n            baseToken: \"USDC\",\n            minPoolSize: 20000,\n            migrationContract: {\n              abi: IdleBatchedMint,\n              name: \"IdleBatchedMintUSDC\",\n              address: \"0x562C4fd96F0652F5Fcfa96b0a33088B5a6eAeE9B\", // Main\n              // address:'0x3F35eB839f91b614195a47A593dB46b14cd7EaF8', // Kovan\n              functions: [\n                {\n                  name: \"deposit\",\n                  label: \"Deposit\",\n                  usePermit: true,\n                  permitName: \"permitEIP2612AndDepositUnlimited\"\n                }\n              ]\n            }\n          }\n        }\n      }\n    },\n    batchMigration: {\n      enabled: true,\n      claimEnabled: true,\n      icon: \"FileDownload\",\n      depositEnabled:false,\n      availableNetworks:[1],\n      route: \"batch-migration\",\n      label: \"Batch Migration\",\n      subComponent: BatchMigration,\n      desc:\"Deposit your Idle Tokens V3 into a batch and wait until its conversion to the Idle Token V4\",\n      props: {\n        availableTokens: {\n          idleDAIYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"DAI\",\n            name: \"idleDAIYieldV3\",\n            token: \"idleDAIYieldV3\",\n            address: \"0x78751b12da02728f467a44eac40f5cbc16bd7934\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterDAI\",\n              address: \"0xe0BfD08dA4DAf8f8BA11d1c3802009E75f963497\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleUSDCYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"USDC\",\n            name: \"idleUSDCYieldV3\",\n            token: \"idleUSDCYieldV3\",\n            address: \"0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterUSDC\",\n              address: \"0x86c8b56d124c2a8e7ea8a9e6a7f8ed99dde5cca8\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleUSDTYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"USDT\",\n            name: \"idleUSDTYieldV3\",\n            token: \"idleUSDTYieldV3\",\n            address: \"0x63D27B3DA94A9E871222CB0A32232674B02D2f2D\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterUSDT\",\n              address: \"0xee5c50c7c49dec47dde2f9b0233b9e14a8f00cf2\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleSUSDYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"SUSD\",\n            name: \"idleSUSDYieldV3\",\n            token: \"idleSUSDYieldV3\",\n            address: \"0xe79e177d2a5c7085027d7c64c8f271c81430fc9b\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterSUSD\",\n              address: \"0xE2eE519399a49f1A2004a25DA61e82867A69b9b1\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleTUSDYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"TUSD\",\n            name: \"idleTUSDYieldV3\",\n            token: \"idleTUSDYieldV3\",\n            address: \"0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterTUSD\",\n              address: \"0x174a273f0ea28e55b6dd13259aa43d262b863a86\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleWBTCYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"WBTC\",\n            name: \"idleWBTCYieldV3\",\n            token: \"idleWBTCYieldV3\",\n            address: \"0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterWBTC\",\n              address: \"0xbfDC7d97559173B52EF2A2f1bC9BeCf97B0D401D\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleDAISafe: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"risk\",\n            baseToken: \"DAI\",\n            name: \"idleDAISafeV3\",\n            token: \"idleDAISafeV3\",\n            address: \"0x1846bdfDB6A0f5c473dEc610144513bd071999fB\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterDAISafe\",\n              address: \"0x08db226d63cE724A6091Ba82D28dFc76ceCa23d8\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleUSDCSafe: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"risk\",\n            baseToken: \"USDC\",\n            name: \"idleUSDCSafeV3\",\n            token: \"idleUSDCSafeV3\",\n            address: \"0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterUSDCSafe\",\n              address: \"0xA6C89A31D59f9C68D9Cba28d690C5E52058fb472\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleUSDTSafe: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"risk\",\n            baseToken: \"USDT\",\n            name: \"idleUSDTSafeV3\",\n            token: \"idleUSDTSafeV3\",\n            address: \"0x42740698959761baf1b06baa51efbd88cb1d862b\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterUSDTSafe\",\n              address: \"0xd47B96Fb33b79a4Dd81a2bfa676eBB669166f619\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          }\n        }\n      }\n    },\n    tokenMigration: {\n      enabled: true,\n      icon: \"SwapHoriz\",\n      route: \"convert\",\n      availableNetworks:[1],\n      label: \"Token Migration\",\n      desc:\"Easily convert your Compound, Fulcrum, Aave and iEarn tokens into Idle\",\n      subComponent: TokenMigration,\n      props: {\n        migrationContract: {\n          name: \"IdleConverterV4\",\n          abi: IdleConverterPersonalSignV4,\n          address: \"0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743\",\n          oldAddresses: [],\n          functions: [\n            {\n              label: \"Migrate\",\n              name: \"migrateFromToIdle\"\n            }\n          ]\n        },\n        availableStrategies: [\"best\", \"risk\"],\n        availableTokens: {\n          idleDAIv2: {\n            decimals: 18,\n            enabled: true,\n            protocol: \"idle\",\n            baseToken: \"DAI\",\n            abi: IdleTokenV2,\n            token: \"idleDAIOld\",\n            icon: \"images/tokens/idleDAI.svg\",\n            migrateFunction: \"migrateFromToIdle\",\n            address: \"0x10eC0D497824e342bCB0EDcE00959142aAa766dD\"\n          },\n          cDAI: {\n            decimals: 8,\n            enabled: true,\n            token: \"cDAI\",\n            baseToken: \"DAI\",\n            protocol: \"compound\",\n            migrateFunction: \"migrateFromCompoundToIdle\",\n            address: \"0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643\"\n          },\n          iDAI: {\n            decimals: 18,\n            enabled: false,\n            token: \"iDAI\",\n            baseToken: \"DAI\",\n            protocol: \"fulcrum\",\n            migrateFunction: \"migrateFromFulcrumToIdle\",\n            address: \"0x493c57c4763932315a328269e1adad09653b9081\"\n          },\n          aDAI: {\n            decimals: 18,\n            enabled: true,\n            token: \"aDAI\",\n            protocol: \"aave\",\n            baseToken: \"DAI\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d\"\n          },\n          yDAIv3: {\n            decimals: 18,\n            enabled: true,\n            token: \"yDAIv3\",\n            abi: yDAIv3.abi,\n            baseToken: \"DAI\",\n            protocol: \"iearn\",\n            icon: \"images/tokens/yDAI.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0xC2cB1040220768554cf699b0d863A3cd4324ce32\"\n          },\n          yDAIv2: {\n            decimals: 18,\n            enabled: true,\n            token: \"yDAIv2\",\n            baseToken: \"DAI\",\n            abi: yDAIv3.abi,\n            protocol: \"iearn\",\n            icon: \"images/tokens/yDAI.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0x16de59092dAE5CcF4A1E6439D611fd0653f0Bd01\"\n          },\n          idleUSDCv2: {\n            decimals: 18,\n            enabled: true,\n            protocol: \"idle\",\n            abi: IdleTokenV2,\n            baseToken: \"USDC\",\n            token: \"idleUSDCOld\",\n            icon: \"images/tokens/idleUSDC.svg\",\n            migrateFunction: \"migrateFromToIdle\",\n            address: \"0xeB66ACc3d011056B00ea521F8203580C2E5d3991\"\n          },\n          cUSDC: {\n            decimals: 8,\n            enabled: true,\n            token: \"cUSDC\",\n            baseToken: \"USDC\",\n            protocol: \"compound\",\n            migrateFunction: \"migrateFromCompoundToIdle\",\n            address: \"0x39aa39c021dfbae8fac545936693ac917d5e7563\"\n          },\n          iUSDC: {\n            decimals: 6,\n            enabled: false,\n            token: \"iUSDC\",\n            baseToken: \"USDC\",\n            protocol: \"fulcrum\",\n            migrateFunction: \"migrateFromFulcrumToIdle\",\n            address: \"0xf013406a0b1d544238083df0b93ad0d2cbe0f65f\"\n          },\n          aUSDC: {\n            decimals: 6,\n            enabled: true,\n            token: \"aUSDC\",\n            protocol: \"aave\",\n            baseToken: \"USDC\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0x9bA00D6856a4eDF4665BcA2C2309936572473B7E\"\n          },\n          yUSDCv3: {\n            decimals: 6,\n            enabled: true,\n            token: \"yUSDCv3\",\n            protocol: \"iearn\",\n            abi: yUSDCv3.abi,\n            baseToken: \"USDC\",\n            icon: \"images/tokens/yUSDC.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0x26EA744E5B887E5205727f55dFBE8685e3b21951\"\n          },\n          yUSDCv2: {\n            decimals: 6,\n            enabled: true,\n            token: \"yUSDCv2\",\n            protocol: \"iearn\",\n            abi: yUSDCv3.abi,\n            baseToken: \"USDC\",\n            icon: \"images/tokens/yUSDC.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0xd6aD7a6750A7593E092a9B218d66C0A814a3436e\"\n          },\n          cUSDT: {\n            decimals: 8,\n            enabled: true,\n            token: \"cUSDT\",\n            baseToken: \"USDT\",\n            protocol: \"compound\",\n            migrateFunction: \"migrateFromCompoundToIdle\",\n            address: \"0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9\"\n          },\n          iUSDT: {\n            decimals: 6,\n            enabled: false,\n            token: \"iUSDT\",\n            baseToken: \"USDT\",\n            protocol: \"fulcrum\",\n            migrateFunction: \"migrateFromFulcrumToIdle\",\n            address: \"0x8326645f3aa6de6420102fdb7da9e3a91855045b\"\n          },\n          aUSDT: {\n            decimals: 6,\n            enabled: true,\n            token: \"aUSDT\",\n            protocol: \"aave\",\n            baseToken: \"USDT\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0x71fc860F7D3A592A4a98740e39dB31d25db65ae8\"\n          },\n          yUSDTv3: {\n            decimals: 6,\n            enabled: true,\n            token: \"yUSDTv3\",\n            abi: yUSDTv3.abi,\n            protocol: \"iearn\",\n            baseToken: \"USDT\",\n            icon: \"images/tokens/yUSDT.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0xE6354ed5bC4b393a5Aad09f21c46E101e692d447\"\n          },\n          yUSDTv2: {\n            decimals: 6,\n            enabled: true,\n            token: \"yUSDTv2\",\n            abi: yUSDTv3.abi,\n            protocol: \"iearn\",\n            baseToken: \"USDT\",\n            icon: \"images/tokens/yUSDT.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0x83f798e925BcD4017Eb265844FDDAbb448f1707D\"\n          },\n          idleSUSDv2: {\n            decimals: 18,\n            enabled: true,\n            abi: IdleTokenV2,\n            protocol: \"idle\",\n            baseToken: \"SUSD\",\n            token: \"idleSUSDYieldOld\",\n            availableStrategies: [\"best\"],\n            migrateFunction: \"migrateFromToIdle\",\n            icon: \"images/tokens/idleSUSDYield.svg\",\n            address: \"0xb39ca0261a1b2986a6a9Fe38d344B56374963dE5\"\n          },\n          aSUSD: {\n            decimals: 6,\n            enabled: true,\n            token: \"aSUSD\",\n            protocol: \"aave\",\n            baseToken: \"SUSD\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0x625aE63000f46200499120B906716420bd059240\"\n          },\n          ySUSDv3: {\n            decimals: 18,\n            enabled: true,\n            token: \"ySUSDv3\",\n            abi: ySUSDv3,\n            baseToken: \"SUSD\",\n            protocol: \"iearn\",\n            availableStrategies: [\"best\"],\n            icon: \"images/tokens/ySUSDv3.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0xf61718057901f84c4eec4339ef8f0d86d2b45600\"\n          },\n          idleTUSDv2: {\n            decimals: 18,\n            enabled: true,\n            abi: IdleTokenV2,\n            protocol: \"idle\",\n            baseToken: \"TUSD\",\n            token: \"idleTUSDYieldOld\",\n            availableStrategies: [\"best\"],\n            migrateFunction: \"migrateFromToIdle\",\n            icon: \"images/tokens/idleTUSDYield.svg\",\n            address: \"0x7DB7A4a50b26602E56536189Aa94678C80F8E5b6\"\n          },\n          aTUSD: {\n            decimals: 6,\n            enabled: true,\n            token: \"aTUSD\",\n            protocol: \"aave\",\n            baseToken: \"TUSD\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0x4DA9b813057D04BAef4e5800E36083717b4a0341\"\n          },\n          yTUSDv3: {\n            decimals: 18,\n            enabled: true,\n            abi: yTUSDv3,\n            token: \"yTUSDv3\",\n            baseToken: \"TUSD\",\n            protocol: \"iearn\",\n            icon: \"images/tokens/yTUSDv3.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0x73a052500105205d34daf004eab301916da8190f\"\n          },\n          cWBTC: {\n            decimals: 8,\n            enabled: true,\n            token: \"cWBTC\",\n            baseToken: \"WBTC\",\n            protocol: \"compound\",\n            migrateFunction: \"migrateFromCompoundToIdle\",\n            address: \"0xc11b1268c1a384e55c48c2391d8d480264a3a7f4\"\n          },\n          iWBTC: {\n            decimals: 8,\n            enabled: false,\n            token: \"iWBTC\",\n            baseToken: \"WBTC\",\n            protocol: \"fulcrum\",\n            migrateFunction: \"migrateFromFulcrumToIdle\",\n            address: \"0xba9262578efef8b3aff7f60cd629d6cc8859c8b5\"\n          },\n          aWBTC: {\n            decimals: 8,\n            enabled: true,\n            token: \"aWBTC\",\n            protocol: \"aave\",\n            baseToken: \"WBTC\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0xfc4b8ed459e00e5400be803a9bb3954234fd50e3\"\n          }\n        }\n      }\n    },\n    addFunds:{\n      enabled:true,\n      route:'add-funds',\n      label:'Add Funds',\n      availableNetworks:[1],\n      icon:'AddCircleOutline',\n      desc:'Buy tokens with your Bank account, Credit card or Ethereum Wallet',\n      subComponent:BuyModal,\n      directProps:{\n        showInline:true,\n        showAllTokens:true\n      }\n    },\n    tokenSwap: {\n      enabled: true,\n      icon: \"Sync\",\n      route: \"token-swap\",\n      label: \"Token Swap\",\n      availableNetworks:[1],\n      desc: \"Easily swap your tokens using Kyber Swap widget\",\n      subComponent: TokenSwap,\n      props: {\n        availableTokens: {\n          ETH: { token: \"ETH\" },\n          DAI: { token: \"DAI\" },\n          SUSD: { token: \"SUSD\" },\n          TUSD: { token: \"TUSD\" },\n          USDC: { token: \"USDC\" },\n          USDS: { token: \"USDS\" },\n          USDT: { token: \"USDT\" },\n          WBTC: { token: \"WBTC\" },\n          WETH: { token: \"WETH\" },\n          BUSD: { token: \"BUSD\" },\n          EURS: { token: \"EURS\" },\n          \"2KEY\": { token: \"2KEY\" },\n          ABT: { token: \"ABT\" },\n          ABYSS: { token: \"ABYSS\" },\n          AMPL: { token: \"AMPL\" },\n          ANT: { token: \"ANT\" },\n          BAM: { token: \"BAM\" },\n          BAND: { token: \"BAND\" },\n          BAT: { token: \"BAT\" },\n          BLZ: { token: \"BLZ\" },\n          BNT: { token: \"BNT\" },\n          BQX: { token: \"BQX\" },\n          BTU: { token: \"BTU\" },\n          CDT: { token: \"CDT\" },\n          CVC: { token: \"CVC\" },\n          DAT: { token: \"DAT\" },\n          DGX: { token: \"DGX\" },\n          EKG: { token: \"EKG\" },\n          ELF: { token: \"ELF\" },\n          ENJ: { token: \"ENJ\" },\n          EQUAD: { token: \"EQUAD\" },\n          FXC: { token: \"FXC\" },\n          GDC: { token: \"GDC\" },\n          GEN: { token: \"GEN\" },\n          GHT: { token: \"GHT\" },\n          GNO: { token: \"GNO\" },\n          IOST: { token: \"IOST\" },\n          KEY: { token: \"KEY\" },\n          KNC: { token: \"KNC\" },\n          LEND: { token: \"LEND\" },\n          LINK: { token: \"LINK\" },\n          LOOM: { token: \"LOOM\" },\n          LRC: { token: \"LRC\" },\n          MANA: { token: \"MANA\" },\n          MCO: { token: \"MCO\" },\n          MET: { token: \"MET\" },\n          MFG: { token: \"MFG\" },\n          MKR: { token: \"MKR\" },\n          MLN: { token: \"MLN\" },\n          MTL: { token: \"MTL\" },\n          MYB: { token: \"MYB\" },\n          NEXXO: { token: \"NEXXO\" },\n          NPXS: { token: \"NPXS\" },\n          OGN: { token: \"OGN\" },\n          OMG: { token: \"OMG\" },\n          OST: { token: \"OST\" },\n          PAX: { token: \"PAX\" },\n          PBTC: { token: \"PBTC\" },\n          PLR: { token: \"PLR\" },\n          PNK: { token: \"PNK\" },\n          POLY: { token: \"POLY\" },\n          POWR: { token: \"POWR\" },\n          PT: { token: \"PT\" },\n          QKC: { token: \"QKC\" },\n          QNT: { token: \"QNT\" },\n          RAE: { token: \"RAE\" },\n          REN: { token: \"REN\" },\n          REP: { token: \"REP\" },\n          REQ: { token: \"REQ\" },\n          RLC: { token: \"RLC\" },\n          RSR: { token: \"RSR\" },\n          RSV: { token: \"RSV\" },\n          SAN: { token: \"SAN\" },\n          SNT: { token: \"SNT\" },\n          SNX: { token: \"SNX\" },\n          SPIKE: { token: \"SPIKE\" },\n          SPN: { token: \"SPN\" },\n          TKN: { token: \"TKN\" },\n          TKX: { token: \"TKX\" },\n          TRYB: { token: \"TRYB\" },\n          UBT: { token: \"UBT\" },\n          UPP: { token: \"UPP\" },\n          ZRX: { token: \"ZRX\" }\n        }\n      },\n      directProps: {}\n    }\n  },\n  insurance: {\n    nexusMutual: {\n      label: \"Nexus Mutual\",\n      image: \"images/protocols/nexus-mutual.png\",\n      imageDark: \"images/protocols/nexus-mutual-white.png\"\n    },\n    coverProtocol: {\n      label: \"Cover Protocol\",\n      image: \"images/protocols/cover-logo.svg\",\n      imageDark: \"images/protocols/cover-logo.svg\"\n    }\n  },\n  payments: {\n    // Payment methods & providers\n    methods: {\n      bank: {\n        defaultProvider: null,\n        showDefaultOnly: false,\n        props: {\n          imageSrc: \"images/bank.png\",\n          caption: \"Bank Account\"\n        }\n      },\n      card: {\n        defaultProvider: null,\n        showDefaultOnly: false,\n        props: {\n          imageSrc: \"images/debit-card.png\",\n          caption: \"Credit Card\"\n        }\n      },\n      wallet: {\n        defaultProvider: \"zeroExInstant\",\n        showDefaultOnly: false,\n        props: {\n          imageSrc: \"images/ethereum-wallet.svg\",\n          caption: \"Ethereum Wallet\",\n          imageProps: {\n            padding: [\"0\", \"5px\"]\n          }\n        }\n      }\n    },\n    providers: {\n      wyre: {\n        enabled: true,\n        imageSrc: \"images/payments/wyre.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0.75% fee ~\",\n        supportedMethods: [\"card\"],\n        supportedCountries: [\"USA\", \"GBR\", \"AUS\", \"BRA\", \"CHN\", \"MEX\", \"EUR\"],\n        supportedTokens: [\"USDC\", \"DAI\", \"ETH\"],\n        remoteResources: {},\n        env: \"prod\",\n        envParams: {\n          test: {\n            accountId: \"AC_Q2Y4AARC3TP\"\n          },\n          prod: {\n            accountId: \"AC_PQQBX33XVEQ\"\n          }\n        },\n        getInfo: props => {\n          const info = {};\n          if (props.selectedMethod && props.selectedMethod) {\n            switch (props.selectedMethod) {\n              case \"bank\":\n                info.subcaption = `~ 0.75% fee ~\\nKYC REQUIRED`;\n                break;\n              case \"card\":\n                info.subcaption = `~ 3.2% fee ~\\n$250.00/day`;\n                break;\n              default:\n                break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props, globalConfigs, buyParams) => {\n          const env = globalConfigs.payments.providers.wyre.env;\n          const envParams = globalConfigs.payments.providers.wyre.envParams[env];\n          const referrerAccountId = envParams.accountId;\n          const url = \"https://pay.sendwyre.com/purchase\";\n\n          const params = {\n            dest: `ethereum:${props.account}`,\n            destCurrency: buyParams.selectedToken ? buyParams.selectedToken : props.tokenConfig.wyre && props.tokenConfig.wyre.destCurrency ? props.tokenConfig.wyre.destCurrency : props.selectedToken,\n            referrerAccountId,\n            redirectUrl: globalConfigs.baseURL\n            // failureRedirectUrl:globalConfigs.baseURL\n          };\n\n          return (\n            `${url}?` +\n            Object.keys(params)\n              .map(\n                k => encodeURIComponent(k) + \"=\" + encodeURIComponent(params[k])\n              )\n              .join(\"&\")\n          );\n        },\n        render: (initParams, amount, props, globalConfigs) => {\n          const wyreWidget = document.getElementById(\"wyre-widget\");\n          if (!wyreWidget) {\n            const iframeBox = document.createElement(\"div\");\n            iframeBox.innerHTML = `\n              <div id=\"wyre-widget\" class=\"wyre-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                <div id=\"wyre-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\"></div>\n                <a class=\"wyre-close-button\" href=\"javascript:void(0);\" onclick=\"document.getElementById('wyre-widget').remove();\" style=\"position:absolute;width:30px;height:30px;top:10px;right:10px;font-size:22px;line-height:30px;text-align:center;color:#fff;font-weight:bold;z-index:10;text-decoration:none\">✕</a>\n                <div id=\"wyre-widget-container\" style=\"position:relative;z-index:2;width:400px;height:650px\">\n                  <iframe\n                    style=\"position:relative;z-index:2;\"\n                    frameborder=\"0\"\n                    height=\"100%\"\n                    src=\"${initParams}\"\n                    width=\"100%\"\n                  >\n                    <p>Your browser does not support iframes.</p>\n                  </iframe>\n                  <div id=\"wyre-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                    <div style=\"display:flex;flex-direction:row;align-items:center\">\n                      <img src=\"${globalConfigs.payments.providers.wyre.imageSrc}\" style=\"height:50px;\" />\n                      <h3 style=\"font-weight:600;font-style:italic;color:#000;padding-left:10px\">is loading...</h3>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            `;\n            document.body.appendChild(iframeBox);\n\n            // Add wyre Widget style (mobile)\n            if (!document.getElementById(\"wyreWidget_style\")) {\n              const wyreStyle = document.createElement(\"style\");\n              wyreStyle.id = \"wyreWidget_style\";\n              wyreStyle.innerHTML = `\n              @media (max-width: 40em){\n                #wyre-widget {\n                  align-items: flex-start !important;\n                }\n                #wyre-widget-overlay{\n                  background:#fff !important;\n                }\n                #wyre-widget-container{\n                  width:100vw;\n                  min-height: calc( 100vh - 60px ) !important;\n                }\n              }`;\n              document.body.appendChild(wyreStyle);\n            }\n          }\n        }\n      },\n      ramp: {\n        enabled: true,\n        imageSrc: \"images/payments/ramp.png\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: `~ 2.5% fee ~\\nEUR / GBP`,\n        supportedMethods: [\"bank\", \"card\"],\n        badge: {\n          text: \"NO ID REQUIRED\",\n          color: \"#fff\",\n          bgColor: \"#0cade4\"\n        },\n        supportedTokens: [\"ETH\", \"DAI\", \"USDC\"],\n        supportedCountries: [\n          \"USA\",\n          \"GBR\",\n          \"AUS\",\n          \"BRA\",\n          \"CAN\",\n          \"EUR\",\n          \"HKG\",\n          \"IND\",\n          \"MEX\",\n          \"RUS\",\n          \"ZAF\",\n          \"KOR\"\n        ],\n        getInfo: props => {\n          const info = {};\n          switch (props.selectedMethod) {\n            case \"bank\":\n              info.supportedCountries = [\"GBR\", \"EUR\"];\n              info.subcaption = `~ 1.49-1.99% fee ~`;\n              break;\n            case \"card\":\n              info.supportedCountries = [\n                \"USA\",\n                \"GBR\",\n                \"AUS\",\n                \"BRA\",\n                \"CAN\",\n                \"EUR\",\n                \"HKG\",\n                \"IND\",\n                \"MEX\",\n                \"RUS\",\n                \"ZAF\",\n                \"KOR\"\n              ];\n              info.subcaption = `~ 2.90% fee ~`;\n              break;\n            default:\n              break;\n          }\n          return info;\n        },\n        getInitParams: (props, globalConfigs, buyParams) => {\n          return {\n            hostAppName: \"Idle\",\n            userAddress: props.account,\n            hostApiKey: env.REACT_APP_RAMP_KEY,\n            variant: props.isMobile ? \"mobile\" : \"desktop\",\n            hostLogoUrl: `${globalConfigs.baseURL}/images/idle-round.png`,\n            swapAsset: buyParams.selectedToken\n              ? buyParams.selectedToken\n              : props.tokenConfig.ramp && props.tokenConfig.ramp.swapAsset\n                ? props.tokenConfig.ramp.swapAsset\n                : props.selectedToken\n          };\n        },\n        render: (initParams, amount, props, globalConfigs) => {\n          new RampInstantSDK(initParams)\n            .on(\"*\", async event => {\n              const functionsUtil = new FunctionsUtil(props);\n              let tokenDecimals = null;\n              let tokenAmount = null;\n\n              switch (event.type) {\n                case \"PURCHASE_SUCCESSFUL\":\n                  // Update balance\n                  props.getAccountBalance();\n\n                  tokenDecimals = await props.getTokenDecimals();\n\n                  tokenAmount = event.payload.purchase.tokenAmount;\n                  tokenAmount = functionsUtil\n                    .BNify(tokenAmount.toString())\n                    .div(\n                      functionsUtil.BNify(\n                        Math.pow(10, parseInt(tokenDecimals)).toString()\n                      )\n                    )\n                    .toString();\n\n                  // Toast message\n                  window.toastProvider.addMessage(`Payment completed`, {\n                    secondaryMessage: `${tokenAmount} ${props.selectedToken} are now in your wallet`,\n                    colorTheme: \"light\",\n                    actionHref: \"\",\n                    actionText: \"\",\n                    variant: \"success\"\n                  });\n\n                  break;\n                default:\n                  break;\n              }\n            })\n            .show();\n        }\n      },\n      transak: {\n        enabled: true,\n        imageSrc: \"images/payments/transak.png\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: `~ 1.5% fee ~\\nALL CURRENCIES`,\n        supportedMethods: [\"bank\", \"card\"],\n        supportedCountries: [\n          \"USA\",\n          \"GBR\",\n          \"AUS\",\n          \"BRA\",\n          \"CHN\",\n          \"MEX\",\n          \"EUR\",\n          \"IND\"\n        ],\n        supportedTokens: [\"ETH\", \"DAI\", \"USDC\", \"USDT\", \"TUSD\", \"SUSD\", \"WBTC\"],\n        remoteResources: { \"https://global.transak.com/v1/widget.js\": {} },\n        env: \"prod\",\n        badge: {\n          text: \"INSTANT\",\n          bgColor: \"#0069ee\"\n        },\n        envParams: {\n          test: {\n            apiKey: env.REACT_APP_TRANSAK_KEY_TEST,\n            url: \"https://global.transak.com\"\n          },\n          prod: {\n            apiKey: env.REACT_APP_TRANSAK_KEY_PROD,\n            url: \"https://global.transak.com\"\n          }\n        },\n        getInfo: props => {\n          const info = {};\n\n          const selectedMethod = props.selectedMethod && props.selectedMethod;\n          let fee = selectedMethod === \"bank\" ? \"1.5%\" : \"4.5%\";\n\n          if (props.selectedCountry && props.selectedCountry.value) {\n            switch (props.selectedCountry.value.toUpperCase()) {\n              case \"GBR\":\n                info.badge = {\n                  text: \"INSTANT\",\n                  bgColor: \"#0069ee\"\n                };\n                info.subcaption = `~ ${fee} fee ~\\nGBP ONLY`;\n                break;\n              case \"IND\":\n                fee = \"1.0%\";\n                info.badge = {\n                  text: \"INSTANT\",\n                  bgColor: \"#0069ee\"\n                };\n                info.subcaption = `~ ${fee} fee ~\\nINR ONLY`;\n                break;\n              case \"EUR\":\n                if (selectedMethod === \"bank\") {\n                  info.badge = {\n                    text: \"SEPA\",\n                    color: \"#f7cb05 \",\n                    bgColor: \"#10288a\"\n                  };\n                } else {\n                  info.badge = {\n                    text: \"INSTANT\",\n                    bgColor: \"#0069ee\"\n                  };\n                }\n                info.subcaption = `~ ${fee} fee ~\\nEUR ONLY`;\n                break;\n              default:\n                break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props, globalConfigs, buyParams) => {\n          const env = globalConfigs.payments.providers.transak.env;\n          const envParams =\n            globalConfigs.payments.providers.transak.envParams[env];\n\n          let fiatCurrency = null;\n\n          if (buyParams.selectedCountry && buyParams.selectedCountry.value) {\n            switch (buyParams.selectedCountry.value.toUpperCase()) {\n              case \"IND\":\n                fiatCurrency = \"INR\";\n                break;\n              case \"GBR\":\n                fiatCurrency = \"GBP\";\n                break;\n              case \"EUR\":\n                fiatCurrency = \"EUR\";\n                break;\n              case \"USA\":\n                fiatCurrency = \"USD\";\n                break;\n              default:\n                fiatCurrency = \"GBP\";\n                break;\n            }\n          }\n\n          let cryptoCurrencyCode = buyParams.selectedToken\n            ? buyParams.selectedToken.toLowerCase()\n            : props.tokenConfig.transak &&\n              props.tokenConfig.transak.currencyCode\n              ? props.tokenConfig.transak.currencyCode\n              : props.selectedToken;\n          cryptoCurrencyCode = cryptoCurrencyCode.toUpperCase();\n\n          const apiKey = envParams.apiKey;\n          const walletAddress = props.account;\n          const partnerCustomerId = props.account;\n          const disableWalletAddressForm = false;\n\n          return {\n            apiKey,\n            cryptoCurrencyCode,\n            walletAddress,\n            fiatCurrency,\n            partnerCustomerId,\n            disableWalletAddressForm,\n            width: \"100%\",\n            height: \"100%\"\n            // email,\n          };\n        },\n        render: (initParams, amount, props, globalConfigs) => {\n          if (window.transakGlobal) {\n            const transakWidget = document.getElementById(\"transak-widget\");\n            if (!transakWidget) {\n              const iframeBox = document.createElement(\"div\");\n              iframeBox.innerHTML = `\n                <div id=\"transak-widget\" class=\"transak-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                  <div id=\"transak-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\" onclick=\"document.getElementById('transak-widget').remove();\"></div>\n                  <a class=\"transak-close-button\" href=\"javascript:void(0);\" onclick=\"document.getElementById('transak-widget').remove();\" style=\"position:absolute;width:30px;height:30px;top:10px;right:10px;font-size:22px;line-height:30px;text-align:center;color:#fff;font-weight:bold;z-index:10;text-decoration:none\">✕</a>\n                  <div class=\"transak-widget-container\" style=\"position:relative;z-index:2;width:500px;height:550px\">\n                    <div id=\"transak-widget-container\" style=\"position:relative;z-index:2;width:500px;height:550px\"></div>\n                    <div id=\"transak-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                      <div style=\"display:flex;flex-direction:row;align-items:center\">\n                        <img src=\"${globalConfigs.payments.providers.transak.imageSrc}\" style=\"height:50px;\" />\n                        <h3 style=\"font-weight:600;font-style:italic;color:#0040ca\">is loading...</h3>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              `;\n              document.body.appendChild(iframeBox);\n\n              // Add transak Widget style (mobile)\n              if (!document.getElementById(\"transakWidget_style\")) {\n                const transakStyle = document.createElement(\"style\");\n                transakStyle.id = \"transakWidget_style\";\n                transakStyle.innerHTML = `\n                @media (max-width: 40em){\n                  #transak-widget {\n                    align-items: flex-start !important;\n                  }\n                  #transak-widget-overlay{\n                    background:#fff !important;\n                  }\n                  #transak-widget-container{\n                    width:100vw;\n                    min-height: calc( 100vh - 60px ) !important;\n                  }\n                }`;\n                document.body.appendChild(transakStyle);\n              }\n            }\n\n            window.transakGlobal.render(initParams, \"transak-widget-container\");\n          }\n        }\n      },\n      moonpay: {\n        enabled: true,\n        imageSrc: \"images/payments/moonpay.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 4.5% fee ~\",\n        supportedMethods: [\"card\", \"bank\"],\n        supportedCountries: [\n          \"GBR\",\n          \"EUR\",\n          \"AUS\",\n          \"BRA\",\n          \"CHN\",\n          \"MEX\",\n          \"CAN\",\n          \"HKG\",\n          \"RUS\",\n          \"ZAF\",\n          \"KOR\"\n        ],\n        supportedTokens: [\"USDC\", \"DAI\", \"ETH\"],\n        env: \"prod\",\n        envParams: {\n          test: {\n            url: \"https://buy-staging.moonpay.io\",\n            apiKey: env.REACT_APP_MOONPAY_KEY_TEST\n          },\n          prod: {\n            url: \"https://buy.moonpay.io\",\n            apiKey: env.REACT_APP_MOONPAY_KEY_PROD\n          }\n        },\n        getInfo: props => {\n          const info = {};\n          if (props.selectedMethod && props.selectedMethod) {\n            switch (props.selectedMethod) {\n              case \"bank\":\n                if (props.selectedCountry && props.selectedCountry.value) {\n                  switch (props.selectedCountry.value.toUpperCase()) {\n                    case \"EUR\":\n                      info.badge = {\n                        text: \"SEPA\",\n                        color: \"#f7cb05 \",\n                        bgColor: \"#10288a\"\n                      };\n                      info.subcaption = `~ 1.5% fee ~\\nEUR ONLY`;\n                      break;\n                    case \"GBR\":\n                      info.badge = {\n                        text: \"GBP\"\n                      };\n                      info.subcaption = `~ 1.5% fee ~\\nGBP ONLY`;\n                      break;\n                    default:\n                      info.badge = null;\n                      info.subcaption = `~ 1.5% fee ~\\nEUR/GBP ONLY`;\n                      break;\n                  }\n                }\n                break;\n              case \"card\":\n                info.badge = null;\n                info.subcaption = `~ 5% fee ~`;\n                break;\n              default:\n                break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props, globalConfigs, buyParams) => {\n          const env = globalConfigs.payments.providers.moonpay.env;\n          const envParams =\n            globalConfigs.payments.providers.moonpay.envParams[env];\n          const apiKey = envParams.apiKey;\n          const params = {\n            apiKey,\n            currencyCode: buyParams.selectedToken\n              ? buyParams.selectedToken.toLowerCase()\n              : props.tokenConfig.moonpay &&\n                props.tokenConfig.moonpay.currencyCode\n                ? props.tokenConfig.moonpay.currencyCode\n                : props.selectedToken.toLowerCase(),\n            walletAddress: props.account,\n            baseCurrencyCode: \"USD\",\n            showWalletAddressForm: true\n          };\n\n          const methods = {\n            bank: {\n              GBR: \"gbp_bank_transfer\",\n              EUR: \"sepa_bank_transfer\"\n            },\n            card: \"credit_debit_card\"\n          };\n\n          const selectedCountry =\n            buyParams.selectedCountry && buyParams.selectedCountry.value\n              ? buyParams.selectedCountry.value.toUpperCase()\n              : null;\n\n          // Set payment method\n          if (buyParams.selectedMethod) {\n            switch (buyParams.selectedMethod) {\n              case \"bank\":\n                params.enabledPaymentMethods =\n                  methods[buyParams.selectedMethod][\"EUR\"];\n                switch (selectedCountry) {\n                  case \"GBR\":\n                  case \"EUR\":\n                    params.enabledPaymentMethods =\n                      methods[buyParams.selectedMethod][selectedCountry];\n                    break;\n                  default:\n                    params.enabledPaymentMethods = Object.values(\n                      methods[buyParams.selectedMethod]\n                    ).join(\",\");\n                    break;\n                }\n                break;\n              case \"card\":\n              default:\n                params.enabledPaymentMethods =\n                  methods[buyParams.selectedMethod];\n                break;\n            }\n          }\n\n          // Set baseCurrencyCode\n          switch (selectedCountry) {\n            case \"GBR\":\n              params.baseCurrencyCode = \"GBP\";\n              break;\n            case \"EUR\":\n              params.baseCurrencyCode = \"EUR\";\n              break;\n            default:\n              params.baseCurrencyCode = \"USD\";\n              break;\n          }\n\n          let url = envParams.url;\n\n          // Safari Fix\n          var isSafari = navigator.userAgent.indexOf(\"Safari\") > -1;\n          if (isSafari) {\n            if (\n              !document.cookie.match(\n                /^(.*;)?\\s*moonpay-fixed\\s*=\\s*[^;]+(.*)?$/\n              )\n            ) {\n              document.cookie =\n                \"moonpay-fixed=fixed; expires=Tue, 19 Jan 2038 03:14:07 UTC; path=/\";\n              url += \"/safari_fix\";\n            }\n          }\n\n          return (\n            `${url}?` +\n            Object.keys(params)\n              .map(\n                k => encodeURIComponent(k) + \"=\" + encodeURIComponent(params[k])\n              )\n              .join(\"&\")\n          );\n        },\n        render: (initParams, amount, props, globalConfigs) => {\n          const moonpayWidget = document.getElementById(\"moonpay-widget\");\n          if (!moonpayWidget) {\n            const iframeBox = document.createElement(\"div\");\n            iframeBox.innerHTML = `\n              <div id=\"moonpay-widget\" class=\"moonpay-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                <div id=\"moonpay-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\"></div>\n                  <div id=\"moonpay-widget-container\" style=\"position:relative;z-index:2;width:500px;height:490px\">\n                    <iframe\n                      style=\"position:relative;z-index:2;\"\n                      frameborder=\"0\"\n                      height=\"100%\"\n                      src=\"${initParams}\"\n                      width=\"100%\"\n                    >\n                      <p>Your browser does not support iframes.</p>\n                    </iframe>\n                    <div id=\"moonpay-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                      <div style=\"display:flex;flex-direction:row;align-items:end\">\n                        <img src=\"${globalConfigs.payments.providers.moonpay.imageSrc}\" style=\"height:50px;\" />\n                        <h3 style=\"padding-left:5px;font-weight:600;font-style:italic;\">is loading...</h3>\n                      </div>\n                    </div>\n                    <div id=\"moonpay-widget-footer\" style=\"position:relative;display:flex;justify-content:center;align-items:center;padding:8px 16px;width:100%;background:#fff;top:-20px;z-index:3\">\n                      <button style=\"background:#000;color:#fff;text-align:center;border-radius:5px;width:100%;height:51px;line-height:51px;font-weight:500;border:0;cursor:pointer\" onclick=\"document.getElementById('moonpay-widget').remove();\">Close</button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            `;\n            document.body.appendChild(iframeBox);\n\n            // Add Moonpay Widget style (mobile)\n            if (!document.getElementById(\"moonpayWidget_style\")) {\n              const moonpayStyle = document.createElement(\"style\");\n              moonpayStyle.id = \"moonpayWidget_style\";\n              moonpayStyle.innerHTML = `\n              @media (max-width: 40em){\n                #moonpay-widget {\n                  align-items: flex-start !important;\n                }\n                #moonpay-widget-overlay{\n                  background:#fff !important;\n                }\n                #moonpay-widget-container{\n                  width:100vw;\n                  min-height: calc( 100vh - 60px ) !important;\n                }\n              }`;\n              document.body.appendChild(moonpayStyle);\n            }\n          }\n        }\n      },\n      zeroExInstant: {\n        enabled: true,\n        imageSrc: \"images/payments/zeroexinstant.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0.25% fee ~\",\n        supportedMethods: [\"wallet\"],\n        supportedTokens: [\"USDC\", \"DAI\"],\n        remoteResources: { \"https://instant.0x.org/v3/instant.js\": {} },\n        getInitParams: (\n          props,\n          globalConfigs,\n          buyParams,\n          onSuccess,\n          onClose\n        ) => {\n          const tokenParams = globalConfigs.tokens[buyParams.selectedToken];\n          const connectorName = window.RimbleWeb3_context\n            ? window.RimbleWeb3_context.connectorName\n            : null;\n\n          if (!tokenParams.zeroExInstant) {\n            return null;\n          }\n\n          return {\n            networkId: globalConfigs.network.requiredNetwork,\n            chainId: globalConfigs.network.requiredNetwork,\n            provider:\n              connectorName &&\n                connectorName !== \"Injected\" &&\n                window.RimbleWeb3_context.connector[connectorName.toLowerCase()]\n                ? window.RimbleWeb3_context.connector[\n                  window.RimbleWeb3_context.connectorName.toLowerCase()\n                ].provider\n                : window.ethereum,\n            orderSource: tokenParams.zeroExInstant.orderSource,\n            affiliateInfo: tokenParams.zeroExInstant.affiliateInfo,\n            defaultSelectedAssetData: tokenParams.zeroExInstant.assetData,\n            availableAssetDatas: [tokenParams.zeroExInstant.assetData],\n            shouldDisableAnalyticsTracking: true,\n            onSuccess: onSuccess ? onSuccess : () => { },\n            onClose: onClose ? onClose : () => { }\n          };\n        },\n        render: (initParams, amount) => {\n          if (window.zeroExInstant && initParams) {\n            if (amount) {\n              initParams.defaultAssetBuyAmount = parseFloat(amount);\n            }\n            window.zeroExInstant.render(initParams, \"body\");\n          }\n        }\n      },\n      kyberSwap: {\n        enabled: true,\n        imageSrc: \"images/payments/kyber.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Swap with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0.25% fee ~\",\n        supportedMethods: [\"wallet\"],\n        supportedTokens: [\n          \"WETH\",\n          \"USDC\",\n          \"DAI\",\n          \"USDT\",\n          \"TUSD\",\n          \"SUSD\",\n          \"WBTC\",\n          \"RAI\",\n          \"FEI\"\n        ],\n        web3Subscription: {\n          // Data for web3 subscription\n          enabled: true,\n          contractAddress: \"0x818e6fecd516ecc3849daf6845e3ec868087b755\",\n          decodeLogsData: [\n            {\n              internalType: \"address\",\n              name: \"_startAddress\",\n              type: \"address\"\n            },\n            {\n              internalType: \"address\",\n              name: \"_tokenAddress\",\n              type: \"address\"\n            },\n            {\n              internalType: \"uint256\",\n              name: \"_startAmount\",\n              type: \"uint256\"\n            },\n            {\n              internalType: \"uint256\",\n              name: \"_tokenAmount\",\n              type: \"uint256\"\n            }\n          ]\n        },\n        remoteResources: {\n          \"https://widget.kyber.network/v0.7.5/widget.css\": {},\n          \"https://widget.kyber.network/v0.7.5/widget.js\": {\n            parentElement: document.body,\n            precall: (props, globalConfigs, providerInfo) => {\n              // Remove previous elements\n              const buttons = document.querySelectorAll(\".kyber-widget-button\");\n              for (let i = 0; i < buttons.length; i++) {\n                buttons[i].remove();\n              }\n\n              // const kyberWidgetScript = document.getElementById('kyber-widget-script');\n              // if (kyberWidgetScript){\n              //   kyberWidgetScript.remove();\n              // }\n\n              const scripts = document.querySelectorAll(\".script_kyberSwap\");\n              for (let i = 0; i < scripts.length; i++) {\n                scripts[i].remove();\n              }\n\n              const buttonId = props.buttonId\n                ? props.buttonId\n                : `kyber-swapper-${props.selectedToken}`;\n              if (!document.getElementById(buttonId)) {\n                const a = document.createElement(\"a\");\n                a.id = buttonId;\n                a.href = providerInfo.getInitParams(props, globalConfigs);\n                a.target = \"_blank\";\n                a.rel = \"nofollow noopener noreferrer\";\n                a.className = \"kyber-widget-button theme-ocean theme-supported\";\n                a.title = \"Swap with Kyber\";\n                a.style = \"display:none;\";\n                document.body.appendChild(a);\n              }\n            }\n          }\n        },\n        getInitParams: (props, globalConfigs, buyParams = null) => {\n          const baseToken = props.baseToken ? props.baseToken : \"ETH\";\n          const params = {\n            lang: \"en\",\n            type: \"swap\",\n            mode: \"iframe\",\n            theme: \"theme-ocean\",\n            paramForwarding: true,\n            // callback:globalConfigs.baseURL,\n            pinnedTokens: `${baseToken}_${props.selectedToken}`,\n            title: `Swap ${baseToken} for ${props.selectedToken}`,\n            defaultPair: `${baseToken}_${props.selectedToken}`,\n            commissionId: \"0x4215606a720477178AdFCd5A59775C63138711e8\",\n            network:\n              globalConfigs.network.requiredNetwork === 1 ? \"mainnet\" : \"test\"\n          };\n\n          const url = \"https://widget.kyber.network/v0.7.5/\";\n\n          return (\n            `${url}?` +\n            Object.keys(params)\n              .map(\n                k => encodeURIComponent(k) + \"=\" + encodeURIComponent(params[k])\n              )\n              .join(\"&\")\n          );\n        },\n        render: (initParams, amount, props) => {\n          const buttonId = props.buttonId\n            ? props.buttonId\n            : `kyber-swapper-${props.selectedToken}`;\n          const a = document.getElementById(buttonId);\n          if (a) {\n            a.click();\n\n            // Observe for pending transaction\n            /*\n            if (window.MutationObserver){\n              setTimeout(() => {\n\n                const observer = new window.MutationObserver(function(mutations) {\n                  mutations.forEach((m,i) => {\n                    if (m.addedNodes.length && m.target.className === 'kyber_widget-broadcast'){\n\n                      // Show persistent toast message\n                      window.showToastMessage({\n                        variant:'processing',\n                        message:'Pending deposit',\n                        secondaryMessage:'kyberSwap is processing your request'\n                      });\n\n                      observer.disconnect();\n                    } else if (m.target.id === 'kyber-widget' && m.removedNodes.length && m.removedNodes[0].firstChild.className.includes('kyber_widget-widget-container')) {\n                      observer.disconnect();\n                    }\n                  });\n                });\n                const target = document.querySelector('#kyber-widget');\n                observer.observe(target, { childList: true, subtree: true });\n              },1000);\n            }\n            */\n          }\n        }\n      },\n      airSwap: {\n        enabled: false,\n        imageSrc: \"images/payments/airswap.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0% fee ~\",\n        supportedMethods: [\"wallet\"],\n        supportedTokens: [\"USDC\", \"DAI\"],\n        env: \"production\",\n        remoteResources: {\n          \"https://cdn.airswap.io/airswap-instant-widget.js\": {}\n        },\n        getInitParams: (\n          props,\n          globalConfigs,\n          buyParams,\n          onComplete,\n          onClose\n        ) => {\n          return {\n            env: \"production\",\n            mode: \"buy\",\n            token: props.tokenConfig.address,\n            baseToken: \"ETH\",\n            onComplete: onComplete ? onComplete : () => { },\n            onClose: onClose ? onClose : () => { }\n          };\n        },\n        render: (initParams, amount, props) => {\n          if (window.AirSwapInstant) {\n            if (amount) {\n              initParams.amount = amount.toString();\n            }\n            window.AirSwapInstant.render(initParams, \"body\");\n          }\n        }\n      },\n      totle: {\n        enabled: false,\n        imageSrc: \"images/payments/totle.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0% fee ~\",\n        supportedMethods: [\"wallet\"],\n        supportedTokens: [\"USDC\", \"DAI\"],\n        env: \"production\",\n        remoteResources: { \"https://widget.totle.com/latest/dist.js\": {} },\n        getInitParams: (\n          props,\n          globalConfigs,\n          buyParams,\n          onComplete,\n          onClose\n        ) => {\n          return {\n            sourceAssetAddress: null,\n            sourceAmountDecimal: null,\n            destinationAssetAddress: null,\n            destinationAmountDecimal: null,\n            apiKey: null,\n            partnerContractAddress: null\n          };\n        },\n        render: (initParams, amount, props) => {\n          if (window.TotleWidget) {\n            const nodeId = \"totle-widget\";\n            if (!document.getElementById(nodeId)) {\n              const totleWidgetContainer = document.createElement(\"div\");\n              totleWidgetContainer.id = nodeId;\n              document.body.appendChild(totleWidgetContainer);\n            }\n\n            window.TotleWidget.default.run(\n              initParams,\n              document.getElementById(nodeId)\n            );\n          }\n        }\n      }\n    }\n  }\n};\n\nexport default globalConfigs;\n","var map = {\n\t\"./mainnet/v1/index.json\": 1873,\n\t\"./testnet/mumbai/index.json\": 1874\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 4439;","var map = {\n\t\"./mainnet/v1/artifacts/fx-portal/FxChild.json\": 4441,\n\t\"./mainnet/v1/artifacts/fx-portal/FxERC1155ChildTunnel.json\": 4442,\n\t\"./mainnet/v1/artifacts/fx-portal/FxERC1155RootTunnel.json\": 4443,\n\t\"./mainnet/v1/artifacts/fx-portal/FxERC20ChildToken.json\": 4444,\n\t\"./mainnet/v1/artifacts/fx-portal/FxERC20ChildTunnel.json\": 4445,\n\t\"./mainnet/v1/artifacts/fx-portal/FxERC20RootToken.json\": 4446,\n\t\"./mainnet/v1/artifacts/fx-portal/FxERC20RootTunnel.json\": 4447,\n\t\"./mainnet/v1/artifacts/fx-portal/FxERC721ChildTunnel.json\": 4448,\n\t\"./mainnet/v1/artifacts/fx-portal/FxERC721RootTunnel.json\": 4449,\n\t\"./mainnet/v1/artifacts/fx-portal/FxRoot.json\": 4450,\n\t\"./mainnet/v1/artifacts/genesis/BorValidatorSet.json\": 4451,\n\t\"./mainnet/v1/artifacts/genesis/IStateReceiver.json\": 4452,\n\t\"./mainnet/v1/artifacts/genesis/Migrations.json\": 4453,\n\t\"./mainnet/v1/artifacts/genesis/StateReceiver.json\": 4454,\n\t\"./mainnet/v1/artifacts/genesis/System.json\": 4455,\n\t\"./mainnet/v1/artifacts/genesis/TestBorValidatorSet.json\": 4456,\n\t\"./mainnet/v1/artifacts/genesis/TestCommitState.json\": 4457,\n\t\"./mainnet/v1/artifacts/genesis/TestStateReceiver.json\": 4458,\n\t\"./mainnet/v1/artifacts/genesis/TestSystem.json\": 4459,\n\t\"./mainnet/v1/artifacts/genesis/ValidatorSet.json\": 4460,\n\t\"./mainnet/v1/artifacts/genesis/ValidatorVerifier.json\": 4461,\n\t\"./mainnet/v1/artifacts/plasma/BaseERC20.json\": 4462,\n\t\"./mainnet/v1/artifacts/plasma/ChainIdMixin.json\": 4463,\n\t\"./mainnet/v1/artifacts/plasma/ChildChain.json\": 4464,\n\t\"./mainnet/v1/artifacts/plasma/ChildERC20.json\": 4465,\n\t\"./mainnet/v1/artifacts/plasma/ChildERC20Proxified.json\": 4466,\n\t\"./mainnet/v1/artifacts/plasma/ChildERC721.json\": 4467,\n\t\"./mainnet/v1/artifacts/plasma/ChildERC721Mintable.json\": 4468,\n\t\"./mainnet/v1/artifacts/plasma/ChildERC721Proxified.json\": 4469,\n\t\"./mainnet/v1/artifacts/plasma/ChildToken.json\": 4470,\n\t\"./mainnet/v1/artifacts/plasma/ChildTokenProxy.json\": 4471,\n\t\"./mainnet/v1/artifacts/plasma/Common.json\": 4472,\n\t\"./mainnet/v1/artifacts/plasma/ContractReceiver.json\": 4473,\n\t\"./mainnet/v1/artifacts/plasma/ContractWitRevertingFallback.json\": 4474,\n\t\"./mainnet/v1/artifacts/plasma/ContractWithFallback.json\": 4475,\n\t\"./mainnet/v1/artifacts/plasma/ContractWithoutFallback.json\": 4476,\n\t\"./mainnet/v1/artifacts/plasma/DelegateProxy.json\": 4477,\n\t\"./mainnet/v1/artifacts/plasma/DepositManager.json\": 4478,\n\t\"./mainnet/v1/artifacts/plasma/DepositManagerHeader.json\": 4479,\n\t\"./mainnet/v1/artifacts/plasma/DepositManagerProxy.json\": 4480,\n\t\"./mainnet/v1/artifacts/plasma/DepositManagerStorage.json\": 4481,\n\t\"./mainnet/v1/artifacts/plasma/DrainStakeManager.json\": 4482,\n\t\"./mainnet/v1/artifacts/plasma/Drainable.json\": 4483,\n\t\"./mainnet/v1/artifacts/plasma/ECVerify.json\": 4484,\n\t\"./mainnet/v1/artifacts/plasma/ERC165.json\": 4485,\n\t\"./mainnet/v1/artifacts/plasma/ERC20.json\": 4486,\n\t\"./mainnet/v1/artifacts/plasma/ERC20Detailed.json\": 4487,\n\t\"./mainnet/v1/artifacts/plasma/ERC20Mintable.json\": 4488,\n\t\"./mainnet/v1/artifacts/plasma/ERC20NonTransferable.json\": 4489,\n\t\"./mainnet/v1/artifacts/plasma/ERC20Predicate.json\": 4490,\n\t\"./mainnet/v1/artifacts/plasma/ERC20PredicateBurnOnly.json\": 4491,\n\t\"./mainnet/v1/artifacts/plasma/ERC721.json\": 4492,\n\t\"./mainnet/v1/artifacts/plasma/ERC721Enumerable.json\": 4493,\n\t\"./mainnet/v1/artifacts/plasma/ERC721Full.json\": 4494,\n\t\"./mainnet/v1/artifacts/plasma/ERC721Metadata.json\": 4495,\n\t\"./mainnet/v1/artifacts/plasma/ERC721MetadataMintable.json\": 4496,\n\t\"./mainnet/v1/artifacts/plasma/ERC721Mintable.json\": 4497,\n\t\"./mainnet/v1/artifacts/plasma/ERC721PlasmaMintable.json\": 4498,\n\t\"./mainnet/v1/artifacts/plasma/ERC721Predicate.json\": 4499,\n\t\"./mainnet/v1/artifacts/plasma/ERC721PredicateBurnOnly.json\": 4500,\n\t\"./mainnet/v1/artifacts/plasma/ERCProxy.json\": 4501,\n\t\"./mainnet/v1/artifacts/plasma/ExitNFT.json\": 4502,\n\t\"./mainnet/v1/artifacts/plasma/FallbackManager.json\": 4503,\n\t\"./mainnet/v1/artifacts/plasma/GnosisSafe.json\": 4504,\n\t\"./mainnet/v1/artifacts/plasma/GnosisSafeProxy.json\": 4505,\n\t\"./mainnet/v1/artifacts/plasma/Governable.json\": 4506,\n\t\"./mainnet/v1/artifacts/plasma/Governance.json\": 4507,\n\t\"./mainnet/v1/artifacts/plasma/GovernanceLockable.json\": 4508,\n\t\"./mainnet/v1/artifacts/plasma/GovernanceLockableTest.json\": 4509,\n\t\"./mainnet/v1/artifacts/plasma/GovernanceProxy.json\": 4510,\n\t\"./mainnet/v1/artifacts/plasma/IDepositManager.json\": 4511,\n\t\"./mainnet/v1/artifacts/plasma/IERC165.json\": 4512,\n\t\"./mainnet/v1/artifacts/plasma/IERC20.json\": 4513,\n\t\"./mainnet/v1/artifacts/plasma/IERC721.json\": 4514,\n\t\"./mainnet/v1/artifacts/plasma/IERC721Enumerable.json\": 4515,\n\t\"./mainnet/v1/artifacts/plasma/IERC721Metadata.json\": 4516,\n\t\"./mainnet/v1/artifacts/plasma/IERC721Receiver.json\": 4517,\n\t\"./mainnet/v1/artifacts/plasma/IErcPredicate.json\": 4518,\n\t\"./mainnet/v1/artifacts/plasma/IGovernance.json\": 4519,\n\t\"./mainnet/v1/artifacts/plasma/IParentToken.json\": 4520,\n\t\"./mainnet/v1/artifacts/plasma/IPredicate.json\": 4521,\n\t\"./mainnet/v1/artifacts/plasma/IRootChain.json\": 4522,\n\t\"./mainnet/v1/artifacts/plasma/ISignatureValidator.json\": 4523,\n\t\"./mainnet/v1/artifacts/plasma/ISlashingManager.json\": 4524,\n\t\"./mainnet/v1/artifacts/plasma/IStakeManager.json\": 4525,\n\t\"./mainnet/v1/artifacts/plasma/IStakeManagerLocal.json\": 4526,\n\t\"./mainnet/v1/artifacts/plasma/IValidatorShare.json\": 4527,\n\t\"./mainnet/v1/artifacts/plasma/IWithdrawManager.json\": 4528,\n\t\"./mainnet/v1/artifacts/plasma/LibEIP712Domain.json\": 4529,\n\t\"./mainnet/v1/artifacts/plasma/LibTokenTransferOrder.json\": 4530,\n\t\"./mainnet/v1/artifacts/plasma/Lockable.json\": 4531,\n\t\"./mainnet/v1/artifacts/plasma/MRC20.json\": 4532,\n\t\"./mainnet/v1/artifacts/plasma/Marketplace.json\": 4533,\n\t\"./mainnet/v1/artifacts/plasma/MarketplacePredicate.json\": 4534,\n\t\"./mainnet/v1/artifacts/plasma/MarketplacePredicateTest.json\": 4535,\n\t\"./mainnet/v1/artifacts/plasma/MarketplaceToken.json\": 4536,\n\t\"./mainnet/v1/artifacts/plasma/MasterCopy.json\": 4537,\n\t\"./mainnet/v1/artifacts/plasma/MaticWETH.json\": 4538,\n\t\"./mainnet/v1/artifacts/plasma/Merkle.json\": 4539,\n\t\"./mainnet/v1/artifacts/plasma/Migrations.json\": 4540,\n\t\"./mainnet/v1/artifacts/plasma/MintableERC721Predicate.json\": 4541,\n\t\"./mainnet/v1/artifacts/plasma/MinterRole.json\": 4542,\n\t\"./mainnet/v1/artifacts/plasma/Module.json\": 4543,\n\t\"./mainnet/v1/artifacts/plasma/ModuleManager.json\": 4544,\n\t\"./mainnet/v1/artifacts/plasma/Ownable.json\": 4545,\n\t\"./mainnet/v1/artifacts/plasma/OwnableLockable.json\": 4546,\n\t\"./mainnet/v1/artifacts/plasma/OwnerManager.json\": 4547,\n\t\"./mainnet/v1/artifacts/plasma/ParentTokenMock.json\": 4548,\n\t\"./mainnet/v1/artifacts/plasma/PredicateUtils.json\": 4549,\n\t\"./mainnet/v1/artifacts/plasma/PriorityQueue.json\": 4550,\n\t\"./mainnet/v1/artifacts/plasma/Proxy.json\": 4551,\n\t\"./mainnet/v1/artifacts/plasma/ProxyStorage.json\": 4552,\n\t\"./mainnet/v1/artifacts/plasma/ProxyTestImpl.json\": 4553,\n\t\"./mainnet/v1/artifacts/plasma/ProxyTestImplStorageLayoutChange.json\": 4554,\n\t\"./mainnet/v1/artifacts/plasma/Registry.json\": 4555,\n\t\"./mainnet/v1/artifacts/plasma/RootChain.json\": 4556,\n\t\"./mainnet/v1/artifacts/plasma/RootChainHeader.json\": 4557,\n\t\"./mainnet/v1/artifacts/plasma/RootChainProxy.json\": 4558,\n\t\"./mainnet/v1/artifacts/plasma/RootChainStorage.json\": 4559,\n\t\"./mainnet/v1/artifacts/plasma/RootChainable.json\": 4560,\n\t\"./mainnet/v1/artifacts/plasma/RootERC721.json\": 4561,\n\t\"./mainnet/v1/artifacts/plasma/SlashingManager.json\": 4562,\n\t\"./mainnet/v1/artifacts/plasma/StakeManager.json\": 4563,\n\t\"./mainnet/v1/artifacts/plasma/StakeManagerProxy.json\": 4564,\n\t\"./mainnet/v1/artifacts/plasma/StakeManagerStorage.json\": 4565,\n\t\"./mainnet/v1/artifacts/plasma/StakeManagerTest.json\": 4566,\n\t\"./mainnet/v1/artifacts/plasma/StakeManagerTestable.json\": 4567,\n\t\"./mainnet/v1/artifacts/plasma/StakingInfo.json\": 4568,\n\t\"./mainnet/v1/artifacts/plasma/StakingNFT.json\": 4569,\n\t\"./mainnet/v1/artifacts/plasma/StateReceiver.json\": 4570,\n\t\"./mainnet/v1/artifacts/plasma/StateSender.json\": 4571,\n\t\"./mainnet/v1/artifacts/plasma/StateSyncerVerifier.json\": 4572,\n\t\"./mainnet/v1/artifacts/plasma/TestMRC20.json\": 4573,\n\t\"./mainnet/v1/artifacts/plasma/TestToken.json\": 4574,\n\t\"./mainnet/v1/artifacts/plasma/TransferWithSigPredicate.json\": 4575,\n\t\"./mainnet/v1/artifacts/plasma/TransferWithSigUtils.json\": 4576,\n\t\"./mainnet/v1/artifacts/plasma/UpgradableProxy.json\": 4577,\n\t\"./mainnet/v1/artifacts/plasma/ValidatorShare.json\": 4578,\n\t\"./mainnet/v1/artifacts/plasma/ValidatorShareFactory.json\": 4579,\n\t\"./mainnet/v1/artifacts/plasma/ValidatorShareProxy.json\": 4580,\n\t\"./mainnet/v1/artifacts/plasma/ValidatorShareTest.json\": 4581,\n\t\"./mainnet/v1/artifacts/plasma/WETH.json\": 4582,\n\t\"./mainnet/v1/artifacts/plasma/WithdrawManager.json\": 4583,\n\t\"./mainnet/v1/artifacts/plasma/WithdrawManagerHeader.json\": 4584,\n\t\"./mainnet/v1/artifacts/plasma/WithdrawManagerProxy.json\": 4585,\n\t\"./mainnet/v1/artifacts/plasma/WithdrawManagerStorage.json\": 4586,\n\t\"./mainnet/v1/artifacts/pos/AccessControl.json\": 4587,\n\t\"./mainnet/v1/artifacts/pos/AccessControlMixin.json\": 4588,\n\t\"./mainnet/v1/artifacts/pos/ChainConstants.json\": 4589,\n\t\"./mainnet/v1/artifacts/pos/ChildChainManager.json\": 4590,\n\t\"./mainnet/v1/artifacts/pos/ChildChainManagerProxy.json\": 4591,\n\t\"./mainnet/v1/artifacts/pos/ChildERC1155.json\": 4592,\n\t\"./mainnet/v1/artifacts/pos/ChildERC20.json\": 4593,\n\t\"./mainnet/v1/artifacts/pos/ChildERC721.json\": 4594,\n\t\"./mainnet/v1/artifacts/pos/ChildMintableERC721.json\": 4595,\n\t\"./mainnet/v1/artifacts/pos/ChildTunnel.json\": 4596,\n\t\"./mainnet/v1/artifacts/pos/DummyERC1155.json\": 4597,\n\t\"./mainnet/v1/artifacts/pos/DummyERC20.json\": 4598,\n\t\"./mainnet/v1/artifacts/pos/DummyERC721.json\": 4599,\n\t\"./mainnet/v1/artifacts/pos/DummyMintableERC721.json\": 4600,\n\t\"./mainnet/v1/artifacts/pos/DummyStateSender.json\": 4601,\n\t\"./mainnet/v1/artifacts/pos/EIP712Base.json\": 4602,\n\t\"./mainnet/v1/artifacts/pos/ERC1155.json\": 4603,\n\t\"./mainnet/v1/artifacts/pos/ERC1155Predicate.json\": 4604,\n\t\"./mainnet/v1/artifacts/pos/ERC1155PredicateProxy.json\": 4605,\n\t\"./mainnet/v1/artifacts/pos/ERC1155Receiver.json\": 4606,\n\t\"./mainnet/v1/artifacts/pos/ERC165.json\": 4607,\n\t\"./mainnet/v1/artifacts/pos/ERC20.json\": 4608,\n\t\"./mainnet/v1/artifacts/pos/ERC20Predicate.json\": 4609,\n\t\"./mainnet/v1/artifacts/pos/ERC20PredicateProxy.json\": 4610,\n\t\"./mainnet/v1/artifacts/pos/ERC721.json\": 4611,\n\t\"./mainnet/v1/artifacts/pos/ERC721Predicate.json\": 4612,\n\t\"./mainnet/v1/artifacts/pos/ERC721PredicateProxy.json\": 4613,\n\t\"./mainnet/v1/artifacts/pos/EtherPredicate.json\": 4614,\n\t\"./mainnet/v1/artifacts/pos/EtherPredicateProxy.json\": 4615,\n\t\"./mainnet/v1/artifacts/pos/ICheckpointManager.json\": 4616,\n\t\"./mainnet/v1/artifacts/pos/IChildChainManager.json\": 4617,\n\t\"./mainnet/v1/artifacts/pos/IChildToken.json\": 4618,\n\t\"./mainnet/v1/artifacts/pos/IERC1155.json\": 4619,\n\t\"./mainnet/v1/artifacts/pos/IERC1155MetadataURI.json\": 4620,\n\t\"./mainnet/v1/artifacts/pos/IERC1155Receiver.json\": 4621,\n\t\"./mainnet/v1/artifacts/pos/IERC165.json\": 4622,\n\t\"./mainnet/v1/artifacts/pos/IERC20.json\": 4623,\n\t\"./mainnet/v1/artifacts/pos/IERC721.json\": 4624,\n\t\"./mainnet/v1/artifacts/pos/IERC721Enumerable.json\": 4625,\n\t\"./mainnet/v1/artifacts/pos/IERC721Metadata.json\": 4626,\n\t\"./mainnet/v1/artifacts/pos/IERC721Receiver.json\": 4627,\n\t\"./mainnet/v1/artifacts/pos/IERCProxy.json\": 4628,\n\t\"./mainnet/v1/artifacts/pos/IMintableERC721.json\": 4629,\n\t\"./mainnet/v1/artifacts/pos/IRootChainManager.json\": 4630,\n\t\"./mainnet/v1/artifacts/pos/IStateSender.json\": 4631,\n\t\"./mainnet/v1/artifacts/pos/ITokenPredicate.json\": 4632,\n\t\"./mainnet/v1/artifacts/pos/MaticWETH.json\": 4633,\n\t\"./mainnet/v1/artifacts/pos/Merkle.json\": 4634,\n\t\"./mainnet/v1/artifacts/pos/MerklePatriciaTest.json\": 4635,\n\t\"./mainnet/v1/artifacts/pos/Migrations.json\": 4636,\n\t\"./mainnet/v1/artifacts/pos/MintableERC1155Predicate.json\": 4637,\n\t\"./mainnet/v1/artifacts/pos/MintableERC1155PredicateProxy.json\": 4638,\n\t\"./mainnet/v1/artifacts/pos/MintableERC20Predicate.json\": 4639,\n\t\"./mainnet/v1/artifacts/pos/MintableERC20PredicateProxy.json\": 4640,\n\t\"./mainnet/v1/artifacts/pos/MintableERC721Predicate.json\": 4641,\n\t\"./mainnet/v1/artifacts/pos/MintableERC721PredicateProxy.json\": 4642,\n\t\"./mainnet/v1/artifacts/pos/MockCheckpointManager.json\": 4643,\n\t\"./mainnet/v1/artifacts/pos/NativeMetaTransaction.json\": 4644,\n\t\"./mainnet/v1/artifacts/pos/NetworkAgnostic.json\": 4645,\n\t\"./mainnet/v1/artifacts/pos/Proxy.json\": 4646,\n\t\"./mainnet/v1/artifacts/pos/ProxyTestImpl.json\": 4647,\n\t\"./mainnet/v1/artifacts/pos/ProxyTestImplStorageLayoutChange.json\": 4648,\n\t\"./mainnet/v1/artifacts/pos/RootChainManager.json\": 4649,\n\t\"./mainnet/v1/artifacts/pos/RootChainManagerProxy.json\": 4650,\n\t\"./mainnet/v1/artifacts/pos/RootChainManagerStorage.json\": 4651,\n\t\"./mainnet/v1/artifacts/pos/RootTunnel.json\": 4652,\n\t\"./mainnet/v1/artifacts/pos/UpgradableProxy.json\": 4653,\n\t\"./mainnet/v1/index.json\": 1873,\n\t\"./networks.json\": 1872,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxChild.json\": 4654,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxERC1155ChildTunnel.json\": 4655,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxERC1155RootTunnel.json\": 4656,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxERC20ChildToken.json\": 4657,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxERC20ChildTunnel.json\": 4658,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxERC20RootToken.json\": 4659,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxERC20RootTunnel.json\": 4660,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxERC721ChildTunnel.json\": 4661,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxERC721RootTunnel.json\": 4662,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxRoot.json\": 4663,\n\t\"./testnet/mumbai/artifacts/genesis/BorValidatorSet.json\": 4664,\n\t\"./testnet/mumbai/artifacts/genesis/IStateReceiver.json\": 4665,\n\t\"./testnet/mumbai/artifacts/genesis/Migrations.json\": 4666,\n\t\"./testnet/mumbai/artifacts/genesis/StateReceiver.json\": 4667,\n\t\"./testnet/mumbai/artifacts/genesis/System.json\": 4668,\n\t\"./testnet/mumbai/artifacts/genesis/TestBorValidatorSet.json\": 4669,\n\t\"./testnet/mumbai/artifacts/genesis/TestCommitState.json\": 4670,\n\t\"./testnet/mumbai/artifacts/genesis/TestStateReceiver.json\": 4671,\n\t\"./testnet/mumbai/artifacts/genesis/TestSystem.json\": 4672,\n\t\"./testnet/mumbai/artifacts/genesis/ValidatorSet.json\": 4673,\n\t\"./testnet/mumbai/artifacts/genesis/ValidatorVerifier.json\": 4674,\n\t\"./testnet/mumbai/artifacts/plasma/BaseERC20.json\": 4675,\n\t\"./testnet/mumbai/artifacts/plasma/ChainIdMixin.json\": 4676,\n\t\"./testnet/mumbai/artifacts/plasma/ChildChain.json\": 4677,\n\t\"./testnet/mumbai/artifacts/plasma/ChildERC20.json\": 4678,\n\t\"./testnet/mumbai/artifacts/plasma/ChildERC20Proxified.json\": 4679,\n\t\"./testnet/mumbai/artifacts/plasma/ChildERC721.json\": 4680,\n\t\"./testnet/mumbai/artifacts/plasma/ChildERC721Mintable.json\": 4681,\n\t\"./testnet/mumbai/artifacts/plasma/ChildERC721Proxified.json\": 4682,\n\t\"./testnet/mumbai/artifacts/plasma/ChildToken.json\": 4683,\n\t\"./testnet/mumbai/artifacts/plasma/ChildTokenProxy.json\": 4684,\n\t\"./testnet/mumbai/artifacts/plasma/Common.json\": 4685,\n\t\"./testnet/mumbai/artifacts/plasma/ContractReceiver.json\": 4686,\n\t\"./testnet/mumbai/artifacts/plasma/ContractWitRevertingFallback.json\": 4687,\n\t\"./testnet/mumbai/artifacts/plasma/ContractWithFallback.json\": 4688,\n\t\"./testnet/mumbai/artifacts/plasma/ContractWithoutFallback.json\": 4689,\n\t\"./testnet/mumbai/artifacts/plasma/DelegateProxy.json\": 4690,\n\t\"./testnet/mumbai/artifacts/plasma/DepositManager.json\": 4691,\n\t\"./testnet/mumbai/artifacts/plasma/DepositManagerHeader.json\": 4692,\n\t\"./testnet/mumbai/artifacts/plasma/DepositManagerProxy.json\": 4693,\n\t\"./testnet/mumbai/artifacts/plasma/DepositManagerStorage.json\": 4694,\n\t\"./testnet/mumbai/artifacts/plasma/DrainStakeManager.json\": 4695,\n\t\"./testnet/mumbai/artifacts/plasma/Drainable.json\": 4696,\n\t\"./testnet/mumbai/artifacts/plasma/ECVerify.json\": 4697,\n\t\"./testnet/mumbai/artifacts/plasma/ERC165.json\": 4698,\n\t\"./testnet/mumbai/artifacts/plasma/ERC20.json\": 4699,\n\t\"./testnet/mumbai/artifacts/plasma/ERC20Detailed.json\": 4700,\n\t\"./testnet/mumbai/artifacts/plasma/ERC20Mintable.json\": 4701,\n\t\"./testnet/mumbai/artifacts/plasma/ERC20NonTransferable.json\": 4702,\n\t\"./testnet/mumbai/artifacts/plasma/ERC20Predicate.json\": 4703,\n\t\"./testnet/mumbai/artifacts/plasma/ERC20PredicateBurnOnly.json\": 4704,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721.json\": 4705,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721Enumerable.json\": 4706,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721Full.json\": 4707,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721Metadata.json\": 4708,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721MetadataMintable.json\": 4709,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721Mintable.json\": 4710,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721PlasmaMintable.json\": 4711,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721Predicate.json\": 4712,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721PredicateBurnOnly.json\": 4713,\n\t\"./testnet/mumbai/artifacts/plasma/ERCProxy.json\": 4714,\n\t\"./testnet/mumbai/artifacts/plasma/ExitNFT.json\": 4715,\n\t\"./testnet/mumbai/artifacts/plasma/FallbackManager.json\": 4716,\n\t\"./testnet/mumbai/artifacts/plasma/GnosisSafe.json\": 4717,\n\t\"./testnet/mumbai/artifacts/plasma/GnosisSafeProxy.json\": 4718,\n\t\"./testnet/mumbai/artifacts/plasma/Governable.json\": 4719,\n\t\"./testnet/mumbai/artifacts/plasma/Governance.json\": 4720,\n\t\"./testnet/mumbai/artifacts/plasma/GovernanceLockable.json\": 4721,\n\t\"./testnet/mumbai/artifacts/plasma/GovernanceLockableTest.json\": 4722,\n\t\"./testnet/mumbai/artifacts/plasma/GovernanceProxy.json\": 4723,\n\t\"./testnet/mumbai/artifacts/plasma/IDepositManager.json\": 4724,\n\t\"./testnet/mumbai/artifacts/plasma/IERC165.json\": 4725,\n\t\"./testnet/mumbai/artifacts/plasma/IERC20.json\": 4726,\n\t\"./testnet/mumbai/artifacts/plasma/IERC721.json\": 4727,\n\t\"./testnet/mumbai/artifacts/plasma/IERC721Enumerable.json\": 4728,\n\t\"./testnet/mumbai/artifacts/plasma/IERC721Metadata.json\": 4729,\n\t\"./testnet/mumbai/artifacts/plasma/IERC721Receiver.json\": 4730,\n\t\"./testnet/mumbai/artifacts/plasma/IErcPredicate.json\": 4731,\n\t\"./testnet/mumbai/artifacts/plasma/IGovernance.json\": 4732,\n\t\"./testnet/mumbai/artifacts/plasma/IParentToken.json\": 4733,\n\t\"./testnet/mumbai/artifacts/plasma/IPredicate.json\": 4734,\n\t\"./testnet/mumbai/artifacts/plasma/IRootChain.json\": 4735,\n\t\"./testnet/mumbai/artifacts/plasma/ISignatureValidator.json\": 4736,\n\t\"./testnet/mumbai/artifacts/plasma/ISlashingManager.json\": 4737,\n\t\"./testnet/mumbai/artifacts/plasma/IStakeManager.json\": 4738,\n\t\"./testnet/mumbai/artifacts/plasma/IStakeManagerLocal.json\": 4739,\n\t\"./testnet/mumbai/artifacts/plasma/IValidatorShare.json\": 4740,\n\t\"./testnet/mumbai/artifacts/plasma/IWithdrawManager.json\": 4741,\n\t\"./testnet/mumbai/artifacts/plasma/LibEIP712Domain.json\": 4742,\n\t\"./testnet/mumbai/artifacts/plasma/LibTokenTransferOrder.json\": 4743,\n\t\"./testnet/mumbai/artifacts/plasma/Lockable.json\": 4744,\n\t\"./testnet/mumbai/artifacts/plasma/MRC20.json\": 4745,\n\t\"./testnet/mumbai/artifacts/plasma/Marketplace.json\": 4746,\n\t\"./testnet/mumbai/artifacts/plasma/MarketplacePredicate.json\": 4747,\n\t\"./testnet/mumbai/artifacts/plasma/MarketplacePredicateTest.json\": 4748,\n\t\"./testnet/mumbai/artifacts/plasma/MarketplaceToken.json\": 4749,\n\t\"./testnet/mumbai/artifacts/plasma/MasterCopy.json\": 4750,\n\t\"./testnet/mumbai/artifacts/plasma/MaticWETH.json\": 4751,\n\t\"./testnet/mumbai/artifacts/plasma/Merkle.json\": 4752,\n\t\"./testnet/mumbai/artifacts/plasma/Migrations.json\": 4753,\n\t\"./testnet/mumbai/artifacts/plasma/MintableERC721Predicate.json\": 4754,\n\t\"./testnet/mumbai/artifacts/plasma/MinterRole.json\": 4755,\n\t\"./testnet/mumbai/artifacts/plasma/Module.json\": 4756,\n\t\"./testnet/mumbai/artifacts/plasma/ModuleManager.json\": 4757,\n\t\"./testnet/mumbai/artifacts/plasma/Ownable.json\": 4758,\n\t\"./testnet/mumbai/artifacts/plasma/OwnableLockable.json\": 4759,\n\t\"./testnet/mumbai/artifacts/plasma/OwnerManager.json\": 4760,\n\t\"./testnet/mumbai/artifacts/plasma/ParentTokenMock.json\": 4761,\n\t\"./testnet/mumbai/artifacts/plasma/PredicateUtils.json\": 4762,\n\t\"./testnet/mumbai/artifacts/plasma/PriorityQueue.json\": 4763,\n\t\"./testnet/mumbai/artifacts/plasma/Proxy.json\": 4764,\n\t\"./testnet/mumbai/artifacts/plasma/ProxyStorage.json\": 4765,\n\t\"./testnet/mumbai/artifacts/plasma/ProxyTestImpl.json\": 4766,\n\t\"./testnet/mumbai/artifacts/plasma/ProxyTestImplStorageLayoutChange.json\": 4767,\n\t\"./testnet/mumbai/artifacts/plasma/Registry.json\": 4768,\n\t\"./testnet/mumbai/artifacts/plasma/RootChain.json\": 4769,\n\t\"./testnet/mumbai/artifacts/plasma/RootChainHeader.json\": 4770,\n\t\"./testnet/mumbai/artifacts/plasma/RootChainProxy.json\": 4771,\n\t\"./testnet/mumbai/artifacts/plasma/RootChainStorage.json\": 4772,\n\t\"./testnet/mumbai/artifacts/plasma/RootChainable.json\": 4773,\n\t\"./testnet/mumbai/artifacts/plasma/RootERC721.json\": 4774,\n\t\"./testnet/mumbai/artifacts/plasma/SlashingManager.json\": 4775,\n\t\"./testnet/mumbai/artifacts/plasma/StakeManager.json\": 4776,\n\t\"./testnet/mumbai/artifacts/plasma/StakeManagerProxy.json\": 4777,\n\t\"./testnet/mumbai/artifacts/plasma/StakeManagerStorage.json\": 4778,\n\t\"./testnet/mumbai/artifacts/plasma/StakeManagerTest.json\": 4779,\n\t\"./testnet/mumbai/artifacts/plasma/StakeManagerTestable.json\": 4780,\n\t\"./testnet/mumbai/artifacts/plasma/StakingInfo.json\": 4781,\n\t\"./testnet/mumbai/artifacts/plasma/StakingNFT.json\": 4782,\n\t\"./testnet/mumbai/artifacts/plasma/StateReceiver.json\": 4783,\n\t\"./testnet/mumbai/artifacts/plasma/StateSender.json\": 4784,\n\t\"./testnet/mumbai/artifacts/plasma/StateSyncerVerifier.json\": 4785,\n\t\"./testnet/mumbai/artifacts/plasma/TestMRC20.json\": 4786,\n\t\"./testnet/mumbai/artifacts/plasma/TestToken.json\": 4787,\n\t\"./testnet/mumbai/artifacts/plasma/TransferWithSigPredicate.json\": 4788,\n\t\"./testnet/mumbai/artifacts/plasma/TransferWithSigUtils.json\": 4789,\n\t\"./testnet/mumbai/artifacts/plasma/UpgradableProxy.json\": 4790,\n\t\"./testnet/mumbai/artifacts/plasma/ValidatorShare.json\": 4791,\n\t\"./testnet/mumbai/artifacts/plasma/ValidatorShareFactory.json\": 4792,\n\t\"./testnet/mumbai/artifacts/plasma/ValidatorShareProxy.json\": 4793,\n\t\"./testnet/mumbai/artifacts/plasma/ValidatorShareTest.json\": 4794,\n\t\"./testnet/mumbai/artifacts/plasma/WETH.json\": 4795,\n\t\"./testnet/mumbai/artifacts/plasma/WithdrawManager.json\": 4796,\n\t\"./testnet/mumbai/artifacts/plasma/WithdrawManagerHeader.json\": 4797,\n\t\"./testnet/mumbai/artifacts/plasma/WithdrawManagerProxy.json\": 4798,\n\t\"./testnet/mumbai/artifacts/plasma/WithdrawManagerStorage.json\": 4799,\n\t\"./testnet/mumbai/artifacts/pos/AccessControl.json\": 4800,\n\t\"./testnet/mumbai/artifacts/pos/AccessControlMixin.json\": 4801,\n\t\"./testnet/mumbai/artifacts/pos/ChainConstants.json\": 4802,\n\t\"./testnet/mumbai/artifacts/pos/ChildChainManager.json\": 4803,\n\t\"./testnet/mumbai/artifacts/pos/ChildChainManagerProxy.json\": 4804,\n\t\"./testnet/mumbai/artifacts/pos/ChildERC1155.json\": 4805,\n\t\"./testnet/mumbai/artifacts/pos/ChildERC20.json\": 4806,\n\t\"./testnet/mumbai/artifacts/pos/ChildERC721.json\": 4807,\n\t\"./testnet/mumbai/artifacts/pos/ChildMintableERC721.json\": 4808,\n\t\"./testnet/mumbai/artifacts/pos/ChildTunnel.json\": 4809,\n\t\"./testnet/mumbai/artifacts/pos/DummyERC1155.json\": 4810,\n\t\"./testnet/mumbai/artifacts/pos/DummyERC20.json\": 4811,\n\t\"./testnet/mumbai/artifacts/pos/DummyERC721.json\": 4812,\n\t\"./testnet/mumbai/artifacts/pos/DummyMintableERC721.json\": 4813,\n\t\"./testnet/mumbai/artifacts/pos/DummyStateSender.json\": 4814,\n\t\"./testnet/mumbai/artifacts/pos/EIP712Base.json\": 4815,\n\t\"./testnet/mumbai/artifacts/pos/ERC1155.json\": 4816,\n\t\"./testnet/mumbai/artifacts/pos/ERC1155Predicate.json\": 4817,\n\t\"./testnet/mumbai/artifacts/pos/ERC1155PredicateProxy.json\": 4818,\n\t\"./testnet/mumbai/artifacts/pos/ERC1155Receiver.json\": 4819,\n\t\"./testnet/mumbai/artifacts/pos/ERC165.json\": 4820,\n\t\"./testnet/mumbai/artifacts/pos/ERC20.json\": 4821,\n\t\"./testnet/mumbai/artifacts/pos/ERC20Predicate.json\": 4822,\n\t\"./testnet/mumbai/artifacts/pos/ERC20PredicateProxy.json\": 4823,\n\t\"./testnet/mumbai/artifacts/pos/ERC721.json\": 4824,\n\t\"./testnet/mumbai/artifacts/pos/ERC721Predicate.json\": 4825,\n\t\"./testnet/mumbai/artifacts/pos/ERC721PredicateProxy.json\": 4826,\n\t\"./testnet/mumbai/artifacts/pos/EtherPredicate.json\": 4827,\n\t\"./testnet/mumbai/artifacts/pos/EtherPredicateProxy.json\": 4828,\n\t\"./testnet/mumbai/artifacts/pos/ICheckpointManager.json\": 4829,\n\t\"./testnet/mumbai/artifacts/pos/IChildChainManager.json\": 4830,\n\t\"./testnet/mumbai/artifacts/pos/IChildToken.json\": 4831,\n\t\"./testnet/mumbai/artifacts/pos/IERC1155.json\": 4832,\n\t\"./testnet/mumbai/artifacts/pos/IERC1155MetadataURI.json\": 4833,\n\t\"./testnet/mumbai/artifacts/pos/IERC1155Receiver.json\": 4834,\n\t\"./testnet/mumbai/artifacts/pos/IERC165.json\": 4835,\n\t\"./testnet/mumbai/artifacts/pos/IERC20.json\": 4836,\n\t\"./testnet/mumbai/artifacts/pos/IERC721.json\": 4837,\n\t\"./testnet/mumbai/artifacts/pos/IERC721Enumerable.json\": 4838,\n\t\"./testnet/mumbai/artifacts/pos/IERC721Metadata.json\": 4839,\n\t\"./testnet/mumbai/artifacts/pos/IERC721Receiver.json\": 4840,\n\t\"./testnet/mumbai/artifacts/pos/IERCProxy.json\": 4841,\n\t\"./testnet/mumbai/artifacts/pos/IMintableERC721.json\": 4842,\n\t\"./testnet/mumbai/artifacts/pos/IRootChainManager.json\": 4843,\n\t\"./testnet/mumbai/artifacts/pos/IStateSender.json\": 4844,\n\t\"./testnet/mumbai/artifacts/pos/ITokenPredicate.json\": 4845,\n\t\"./testnet/mumbai/artifacts/pos/MaticWETH.json\": 4846,\n\t\"./testnet/mumbai/artifacts/pos/Merkle.json\": 4847,\n\t\"./testnet/mumbai/artifacts/pos/MerklePatriciaTest.json\": 4848,\n\t\"./testnet/mumbai/artifacts/pos/Migrations.json\": 4849,\n\t\"./testnet/mumbai/artifacts/pos/MintableERC1155Predicate.json\": 4850,\n\t\"./testnet/mumbai/artifacts/pos/MintableERC1155PredicateProxy.json\": 4851,\n\t\"./testnet/mumbai/artifacts/pos/MintableERC20Predicate.json\": 4852,\n\t\"./testnet/mumbai/artifacts/pos/MintableERC20PredicateProxy.json\": 4853,\n\t\"./testnet/mumbai/artifacts/pos/MintableERC721Predicate.json\": 4854,\n\t\"./testnet/mumbai/artifacts/pos/MintableERC721PredicateProxy.json\": 4855,\n\t\"./testnet/mumbai/artifacts/pos/MockCheckpointManager.json\": 4856,\n\t\"./testnet/mumbai/artifacts/pos/NativeMetaTransaction.json\": 4857,\n\t\"./testnet/mumbai/artifacts/pos/NetworkAgnostic.json\": 4858,\n\t\"./testnet/mumbai/artifacts/pos/Proxy.json\": 4859,\n\t\"./testnet/mumbai/artifacts/pos/ProxyTestImpl.json\": 4860,\n\t\"./testnet/mumbai/artifacts/pos/ProxyTestImplStorageLayoutChange.json\": 4861,\n\t\"./testnet/mumbai/artifacts/pos/RootChainManager.json\": 4862,\n\t\"./testnet/mumbai/artifacts/pos/RootChainManagerProxy.json\": 4863,\n\t\"./testnet/mumbai/artifacts/pos/RootChainManagerStorage.json\": 4864,\n\t\"./testnet/mumbai/artifacts/pos/RootTunnel.json\": 4865,\n\t\"./testnet/mumbai/artifacts/pos/UpgradableProxy.json\": 4866,\n\t\"./testnet/mumbai/index.json\": 1874\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 4440;","import React, { Component } from 'react';\nimport { Flex, Icon, Text } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass ConnectBox extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          p:3,\n          mt:3,\n          ...this.props.cardProps\n        }}\n      >\n        <Flex\n          alignItems={'center'}\n          flexDirection={'column'}\n        >\n          <Icon\n            size={'1.8em'}\n            name={'Input'}\n            color={'cellText'}\n          />\n          <Text\n            mt={2}\n            fontSize={2}\n            color={'cellText'}\n            textAlign={'center'}\n          >\n            Please connect with your wallet interact with Idle.\n          </Text>\n          <RoundButton\n            buttonProps={{\n              mt:2,\n              width:[1,1/2]\n            }}\n            handleClick={this.props.connectAndValidateAccount}\n          >\n            Connect\n          </RoundButton>\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default ConnectBox;\n","import theme from '../theme';\nimport React, { Component } from 'react';\nimport styles from './TransactionListFilters.module.scss';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TableCellHeader from '../TableCellHeader/TableCellHeader';\nimport { Flex, Text, Icon, Radio, Button, Link } from \"rimble-ui\";\n\nclass TransactionListFilters extends Component {\n\n  state = {\n    maxWidth:0.4,\n    minWidth:0.18,\n    maxHeight:425,\n    isOpened:false,\n    activeFilters:{\n      status:null,\n      assets:null,\n      actions:null\n    }\n  }\n\n  setFilter = (filter,value) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:value\n      }\n    }));\n  }\n\n  applyFilters = (toggle=true) => {\n    if (typeof this.props.applyFilters === 'function'){\n      this.props.applyFilters(this.state.activeFilters);\n    }\n    if (toggle){\n      this.toggleOpened();\n    }\n  }\n\n  resetFilter = (filter) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:null\n      }\n    }),() => {\n      this.applyFilters(false);\n    });\n  }\n\n  resetFilters = (toggle=true) => {\n    this.setState({\n      activeFilters:{\n        status:null,\n        assets:null,\n        actions:null\n      }\n    },() => {\n      if (typeof this.props.resetFilters === 'function'){\n        this.props.resetFilters();\n      }\n      if (toggle){\n        this.toggleOpened();\n      }\n    })\n  }\n\n  toggleOpened = () => {\n    this.setState((prevState) => ({\n      isOpened: !prevState.isOpened\n    }));\n  }\n\n  render() {\n    return (\n      <Flex\n        mb={3}\n        top={0}\n        width={1}\n        zIndex={1}\n        flexDirection={'column'}\n        alignItems={'flex-start'}\n        justifyContent={'center'}\n        position={['relative','absolute']}\n      >\n        <DashboardCard\n          cardProps={{\n            py:2,\n            px:3,\n            width:[1, this.state.isOpened ? this.state.maxWidth : this.state.minWidth ],\n            style:{\n              transition:'width 0.3s ease-in-out'\n            }\n          }}\n          isInteractive={ !this.state.isOpened }\n          handleClick={ !this.state.isOpened ? this.toggleOpened : null }\n        >\n          <Flex\n            width={1}\n            style={{\n              cursor:'pointer'\n            }}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'space-between'}\n            onClick={ this.state.isOpened ? this.toggleOpened : null }\n          >\n            <Text\n              fontSize={2}\n              fontWeight={500}\n              color={'copyColor'}\n            >\n              Filters\n            </Text>\n            <Icon\n              color={'copyColor'}\n              size={ this.props.isMobile ? '1.3em' : '1.5em'}\n              name={ this.state.isOpened ? 'Close' : 'Tune' }\n            />\n          </Flex>\n          <Flex\n            flexDirection={'column'}\n            style={{\n              overflow:'hidden',\n              transition:'max-height 0.3s ease-in-out',\n              maxHeight:this.state.isOpened ? this.state.maxHeight : 0\n            }}\n          >\n            <Flex\n              mt={2}\n              py={2}\n              width={1}\n              flexDirection={'row'}\n              borderTop={`1px solid ${theme.colors.divider}`}\n            >\n              {\n                Object.keys(this.props.filters).map((filterCategory) => {\n                  const filterValues = this.props.filters[filterCategory];\n                  return (\n                    <Flex\n                      flexDirection={'column'}\n                      key={`filter_${filterCategory}`}\n                      style={{\n                        flexBasis:'0',\n                        flex:'1 1 0px'\n                      }}\n                    >\n                      <TableCellHeader\n                        pb={2}\n                        fontWeight={3}\n                        fontSize={[0,2]}\n                        color={'cellText'}\n                      >\n                        {filterCategory.toUpperCase()}\n                      </TableCellHeader>\n                      {\n                        Object.keys(filterValues).map((filterValue) => {\n                          const filterLabel = filterValues[filterValue];\n                          const isChecked = this.state.activeFilters[filterCategory]===filterValue;\n                          return (\n                            <Radio\n                              my={2}\n                              fontSize={[0,2]}\n                              label={filterLabel}\n                              checked={isChecked}\n                              className={styles.radioBtn}\n                              key={`filter_${filterCategory}_${filterValue}`}\n                              onChange={ e => this.setFilter(filterCategory,filterValue) }\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                  );\n                })\n              }\n            </Flex>\n            <Flex\n              flexDirection={'row'}\n            >\n              <Button.Text\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.applyFilters}\n              >\n                Apply filters\n              </Button.Text>\n              <Button.Text\n                ml={3}\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.resetFilters}\n              >\n                Reset\n              </Button.Text>\n            </Flex>\n          </Flex>\n        </DashboardCard>\n        {\n          !this.state.isOpened && this.props.activeFilters && Object.values(this.props.activeFilters).filter( v => (v !== null) ).length>0 &&\n            <Flex\n              mt={3}\n              width={1}\n              flexDirection={['column','row']}\n              alignItems={['flex-start','flex-end']}\n              justifyContent={['flex-end','flex-start']}\n            >\n              {\n                Object.keys(this.props.activeFilters).map((filterName) => {\n                  const filterValue = this.props.activeFilters[filterName];\n                  if (filterValue !== null){\n                    const filterLabel = this.props.filters[filterName][filterValue];\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:[2,0],\n                          mr:[0,3],\n                          width:[1,this.state.minWidth]\n                        }}\n                        isInteractive={true}\n                        key={`filter_${filterName}`}\n                      >\n                        <Flex\n                          width={1}\n                          style={{\n                            cursor:'pointer'\n                          }}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'space-between'}\n                          onClick={e => this.resetFilter(filterName)}\n                        >\n                          <Text\n                            fontSize={2}\n                            fontWeight={500}\n                            color={'cellText'}\n                            style={{\n                              textTransform:'capitalize'\n                            }}\n                          >\n                            {filterLabel}\n                          </Text>\n                          <Icon\n                            name={'Close'}\n                            color={'cellText'}\n                            size={ this.props.isMobile ? '1.3em' : '1.5em'}\n                          />\n                        </Flex>\n                      </DashboardCard>\n                    );\n                  }\n                  return null;\n                })\n              }\n              <Link\n                mt={[2,0]}\n                fontSize={[3,2]}\n                fontWeight={[3]}\n                color={'dark-gray'}\n                hoverColor={'copyColor'}\n                textAlign={['center','left']}\n                onClick={ e => this.resetFilters(false) }\n              >\n                Clear all filters\n              </Link>\n            </Flex>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TransactionListFilters;","import React, { Component } from 'react';\n// import style from './TransactionsList.module.scss';\nimport TableRow from '../TableRow/TableRow';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Heading, Text, Link, Icon } from \"rimble-ui\";\nimport TransactionField from '../TransactionField/TransactionField';\nimport TransactionListFilters from '../TransactionListFilters/TransactionListFilters';\n\nclass TransactionsList extends Component {\n\n  state = {\n    page:1,\n    prevTxs:{},\n    txsPerPage:5,\n    loading:false,\n    totalTxs:null,\n    totalPages:null,\n    activeFilters:{\n      status:null,\n      assets:null,\n      actions:null,\n    },\n    filters:{\n      actions:{\n        deposit:'Deposit',\n        redeem:'Redeem',\n        send:'Send',\n        receive:'Receive',\n        migrate:'Migrate',\n        swap:'Swap-In',\n        swapout:'Swap-Out',\n        withdraw:'Withdraw',\n        // curvein:'CurveIn',\n        // curveout:'CurveOut',\n        // curvezapin:'CurveZapIn',\n        // curvezapout:'CurveZapOut',\n      },\n      status:{\n        completed:'Completed',\n        pending:'Pending',\n        failed:'Failed'\n      },\n      assets:{}\n    },\n    renderedTxs:null,\n    processedTxs:null,\n    lastBlockNumber:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  prevPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.max(1,this.state.page-1);\n    this.setState({\n      page\n    });\n  }\n\n  nextPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.min(this.state.totalPages,this.state.page+1);this.processTxs(page);\n    this.setState({\n      page\n    });\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadTxs();\n  }\n\n  applyFilters = activeFilters => {\n    this.setState({\n      activeFilters\n    },() => {\n      this.processTxs();\n    });\n  }\n\n  resetFilters = () => {\n    this.setState({\n      activeFilters:{\n        status:null,\n        assets:null,\n        actions:null,\n      }\n    },() => {\n      this.processTxs();\n    });\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n    const transactionsChanged = JSON.stringify(prevProps.transactions) !== JSON.stringify(this.props.transactions);\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n\n    if (tokenChanged || transactionsChanged){\n      this.setState({\n        page:1,\n        prevTxs:{}\n      },()=>{\n        this.loadTxs();\n      })\n      return false;\n    }\n    const pageChanged = prevState.page !== this.state.page;\n    if (pageChanged){\n      this.processTxs();\n    }\n  }\n\n  async loadTxs(count,endBlockNumber='latest'){\n    if (!this.props.account){\n      return false;\n    }\n\n    count = count ? count : 0;\n\n    this.setState({\n      loading:true\n    });\n\n    const firstBlockNumber = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n\n    // Take last block number, is null take first block number\n    let prevTxs = {...this.state.prevTxs};\n    let lastBlockNumber = Math.max(firstBlockNumber,this.state.lastBlockNumber);\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    const assets = {...this.state.filters.assets};\n\n    enabledTokens.forEach((token) => {\n      assets[token] = token;\n    });\n\n    let actions = this.props.availableActions || {...this.state.filters.actions};\n    \n    const enabledActions = typeof this.props.enabledActions !== 'undefined' ? this.props.enabledActions : [];\n\n    if (enabledActions.length){\n      actions = {};\n      enabledActions.forEach( action => {\n        actions[action.toLowerCase()] = action;\n      });\n    }\n\n    const etherscanTxs = this.props.transactionsList || await this.functionsUtil.getEtherscanTxs(this.props.account,lastBlockNumber,'latest',enabledTokens);\n\n    // console.log('TransactionsList',etherscanTxs);\n\n    // Merge new txs with previous ones\n    if (etherscanTxs && etherscanTxs.length){\n      etherscanTxs.forEach((tx) => {\n        if (tx.hashKey){\n          prevTxs[tx.hashKey] = tx;\n        } else {\n          prevTxs[`t${tx.timeStamp}`] = tx;\n        }\n      });\n    }\n\n    const lastTx = Object.values(prevTxs).pop();\n\n    // Update last block number\n    if (lastTx && lastTx.blockNumber && (!this.state.lastBlockNumber || lastTx.blockNumber>this.state.lastBlockNumber)){\n      lastBlockNumber = parseInt(lastTx.blockNumber)+1;\n    }\n\n    return this.setState( prevState => ({\n      prevTxs,\n      loading:false,\n      lastBlockNumber,\n      filters:{\n        ...prevState.filters,\n        assets,\n        actions\n      }\n    }), () => {\n      this.processTxs()\n    });\n  };\n\n  processTxs = (page=null) => {\n\n    page = page ? page : this.state.page;\n\n    const availableActions = Object.keys(this.state.filters.actions).map( action => (action.toLowerCase()) );\n\n    // Sort prevTxs by timeStamp\n    const txsIndexes = Object.values(this.state.prevTxs)\n                        .filter(tx => (!!parseFloat(tx.value))) // Filter txs with value\n                        .filter(tx => (\n                          (this.state.activeFilters.status === null || (tx.status && tx.status.toLowerCase() === this.state.activeFilters.status.toLowerCase())) && \n                          (this.state.activeFilters.assets === null || (tx.token && tx.token.toLowerCase() === this.state.activeFilters.assets.toLowerCase())) &&\n                          ( tx.action && availableActions.includes(tx.action.toLowerCase()) && (this.state.activeFilters.actions === null || (tx.action.toLowerCase() === this.state.activeFilters.actions.toLowerCase()) ))\n                        )) // Filter by activeFilters\n                        .sort((a,b) => (a.timeStamp > b.timeStamp) ? -1 : 1 );\n\n    // Calculate max number of pages\n    const totalTxs = txsIndexes.length;\n    const totalPages = Math.ceil(totalTxs/this.state.txsPerPage);\n\n    const processedTxs = [];\n\n    // console.log(this.state.prevTxs,txsIndexes);\n\n    txsIndexes.forEach((tx, i) => {\n      const selectedToken = tx.token;\n      const tokenConfig = this.props.availableTokens && this.props.availableTokens[selectedToken] ? this.props.availableTokens[selectedToken] : this.functionsUtil.getGlobalConfig(['stats','tokens',selectedToken]);\n      const decimals = Math.min(tokenConfig.decimals,8);\n      \n      const date = new Date(tx.timeStamp*1000);\n      const action = tx.action ? tx.action : this.functionsUtil.getTxAction(tx,tokenConfig);\n\n      const parsedValue = parseFloat(tx.tokenAmount);\n\n      const amount = parsedValue ? (this.props.isMobile ? parsedValue.toFixed(4) : parsedValue.toFixed(decimals)) : '-';\n      const momentDate = this.functionsUtil.strToMoment(date);\n\n      // Save new params\n      tx.action = action;\n      tx.amount = amount;\n      tx.momentDate = momentDate;\n      tx.status = tx.status ? tx.status : 'Completed';\n\n      if (i>=((page-1)*this.state.txsPerPage) && i<((page-1)*this.state.txsPerPage)+this.state.txsPerPage) {\n        processedTxs.push(tx);\n      }\n    });\n\n    // console.log('processedTxs',this.state.page,txsIndexes,processedTxs);\n\n    const loading = false;\n  \n    this.setState({\n      loading,\n      totalTxs,\n      totalPages,\n      processedTxs\n    });\n  }\n\n  render() {\n\n    const hasActiveFilters = Object.values(this.state.activeFilters).filter( v => (v !== null) ).length>0;\n\n    // console.log('processedTxs',this.state.processedTxs);\n    const processedTxs = this.state.processedTxs ? Object.values(this.state.processedTxs) : null;\n\n    return (\n      <Flex flexDirection={'column'} width={1} m={'0 auto'}>\n        {\n          this.state.loading ? (\n            <FlexLoader\n              flexProps={{\n                flexDirection:'row',\n                minHeight:this.props.height\n              }}\n              loaderProps={{\n                size:'30px'\n              }}\n              textProps={{\n                ml:2\n              }}\n              text={'Loading transactions...'}\n            />\n          ) : (\n            <Flex\n              width={1}\n              position={'relative'}\n              flexDirection={'column'}\n              id={'transactions-list-container'}\n              pt={[0, hasActiveFilters ? '116px' : 5]}\n            >\n              <TransactionListFilters\n                {...this.props}\n                filters={this.state.filters}\n                activeFilters={this.state.activeFilters}\n                resetFilters={this.resetFilters.bind(this)}\n                applyFilters={this.applyFilters.bind(this)}\n              />\n              {\n                processedTxs && processedTxs.length ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <TableHeader\n                      cols={this.props.cols}\n                      isMobile={this.props.isMobile}\n                    />\n                    <Flex\n                      id={'transactions-list'}\n                      flexDirection={'column'}\n                    >\n                      {\n                        processedTxs.map( (tx,index) => {\n                          const txHash = tx.hash;\n                          const txHashKey = tx.hashKey;\n                          const handleClick = (e) => {\n                            return (txHash ? window.open(this.functionsUtil.getEtherscanTransactionUrl(txHash)) : null);\n                          };\n\n                          return (\n                            <TableRow\n                              {...this.props}\n                              rowProps={{\n                                isInteractive:true\n                              }}\n                              hash={txHash}\n                              transaction={tx}\n                              key={`tx-${index}`}\n                              handleClick={handleClick}\n                              rowId={`tx-col-${txHashKey}`}\n                              cardId={`tx-card-${txHashKey}`}\n                              fieldComponent={TransactionField}\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                    <Flex\n                      height={'50px'}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'flex-end'}\n                      id={'transactions-list-pagination'}\n                    >\n                      <Flex mr={3}>\n                        <Link mr={1} onClick={ e => this.prevPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowLeft'}\n                            size={'2em'}\n                            color={ this.state.page>1 ? 'arrowActive' : 'arrowInactive' }\n                          />\n                        </Link>\n                        <Link onClick={ e => this.nextPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowRight'}\n                            size={'2em'}\n                            color={ this.state.page<this.state.totalPages ? 'arrowActive' : 'arrowInactive' }\n                          />\n                        </Link>\n                      </Flex>\n                      <Flex alignItems={'center'}>\n                        <Text \n                          fontSize={1}\n                          fontWeight={3}\n                          color={'cellText'}\n                        >\n                          Page {this.state.page} of {this.state.totalPages}\n                        </Text>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Heading.h3 textAlign={'center'} fontFamily={'sansSerif'} fontWeight={2} fontSize={[2]} color={'dark-gray'}>\n                    There are no transactions\n                  </Heading.h3>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TransactionsList;\n","import React, { Component } from 'react';\nimport styles from './Migrate.module.scss';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport TransactionField from '../TransactionField/TransactionField';\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\nimport { Box, Flex, Text, Icon, Checkbox, Input, Link, Image } from \"rimble-ui\";\n\nclass Migrate extends Component {\n\n  state = {\n    nonce:0,\n    loading:true,\n    action:'migrate',\n    processing:{\n      approve:{\n        txHash:null,\n        loading:false\n      },\n      migrate:{\n        txHash:null,\n        loading:false\n      },\n      redeem:{\n        txHash:null,\n        loading:false\n      }\n    },\n    inputValue:{},\n    usePermit:false,\n    oldTokenName:null,\n    oldIdleTokens:null,\n    skipMigration:false,\n    buttonDisabled:true,\n    migrationEnabled:null,\n    fastBalanceSelector:{},\n    oldContractBalance:null,\n    biconomyLimitReached:false,\n    metaTransactionsEnabled:true,\n    oldContractTokenDecimals:null,\n    migrationContractApproved:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  setAction = (action) => {\n    if (action !== null){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  toggleSkipMigration = (skipMigration) => {\n    this.setState({\n      skipMigration\n    });\n\n    if (typeof this.props.toggleSkipMigration === 'function'){\n      this.props.toggleSkipMigration(skipMigration);\n    }\n  }\n\n  changeInputValue = (e) => {\n    if (!this.state.action){\n      return false;\n    }\n    const amount = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: null\n      },\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  checkButtonDisabled = (amount=null) => {\n    if (!this.state.action){\n      return false;\n    }\n    if (!amount){\n      amount = this.state.inputValue[this.state.action];\n    }\n    let buttonDisabled = true;\n    if (amount){\n      buttonDisabled = amount.lte(0);\n      switch (this.state.action){\n        case 'migrate':\n        case 'redeem':\n          buttonDisabled = buttonDisabled || amount.gt(this.state.oldIdleTokens);\n        break;\n        default:\n        break;\n      }\n    }\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  setInputValue = () => {\n    if (!this.state.action || this.state.fastBalanceSelector[this.state.action] === null){\n      return false;\n    }\n\n    let amount = null;\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector[this.state.action]).div(100);\n\n    switch(this.state.action){\n      case 'migrate':\n      case 'redeem':\n        amount = this.state.oldIdleTokens ? this.functionsUtil.BNify(this.state.oldIdleTokens).times(selectedPercentage) : null;\n      break;\n      default:\n      break;\n    }\n\n    this.setState((prevState) => ({\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  setFastBalanceSelector = (percentage) => {\n    if (!this.state.action){\n      return false;\n    }\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: percentage\n      }\n    }));\n  }\n\n  executeAction = async () => {\n\n    const inputValue = this.state.inputValue[this.state.action];\n\n    if (this.state.buttonDisabled || !inputValue || this.functionsUtil.BNify(inputValue).lte(0)){\n      return false;\n    }\n\n    const loading = true;\n\n    switch (this.state.action){\n      case 'redeem':\n\n        if (!this.props.tokenConfig.migration || !this.props.tokenConfig.migration.oldContract){\n          return false;\n        }\n\n        const oldContractName = this.props.tokenConfig.migration.oldContract.name;\n\n        const idleTokenToRedeem = this.functionsUtil.normalizeTokenAmount(inputValue,18);\n\n        // Get amounts for best allocations\n        const _skipRebalance = true;\n        let paramsForRedeem = null;\n\n        /*\n        if (this.props.account){\n          const callParams = { from: this.props.account, gas: this.props.web3.utils.toBN(5000000) };\n          paramsForRedeem = await this.functionsUtil.genericContractCall(oldContractName,'getParamsForRedeemIdleToken',[idleTokenToRedeem, _skipRebalance],callParams);\n        }\n        */\n\n        const _clientProtocolAmountsRedeem = paramsForRedeem && paramsForRedeem.length ? paramsForRedeem[1] : [];\n        const gasLimitRedeem = _clientProtocolAmountsRedeem.length && _clientProtocolAmountsRedeem.indexOf('0') === -1 ? this.functionsUtil.BNify(1500000) : this.functionsUtil.BNify(1000000);\n\n        const callbackRedeem = (tx,error) => {\n          const txSucceeded = tx.status === 'success';\n\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: `Redeem_old`,\n            eventAction: this.props.selectedToken,\n            eventLabel: tx.status,\n            eventValue: parseInt(inputValue)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (txSucceeded){\n            this.setState((prevState) => ({\n              inputValue:{\n                ...prevState.inputValue,\n                [this.state.action]: this.functionsUtil.BNify(0)\n              }\n            }));\n          }\n        };\n\n        const callbackReceiptRedeem = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                ...prevState.processing[this.state.action],\n                txHash\n              }\n            }\n          }));\n        };\n\n        this.props.contractMethodSendWrapper(oldContractName, 'redeemIdleToken', [\n          idleTokenToRedeem, _skipRebalance, _clientProtocolAmountsRedeem\n        ], null, callbackRedeem, callbackReceiptRedeem, gasLimitRedeem);\n      break;\n      default:\n      break;\n    }\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        [this.state.action]:{\n          ...prevState.processing[this.state.action],\n          loading\n        }\n      }\n    }));\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n    this.checkMigration();\n  }\n\n  componentDidMount(){\n    \n  }\n\n  componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const biconomyChanged = prevProps.biconomy !== this.props.biconomy;\n    const usePermitChanged = prevProps.usePermit !== this.props.usePermit;\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken || (!prevProps.tokenConfig && this.props.tokenConfig);\n\n    if (tokenChanged || accountChanged || biconomyChanged || usePermitChanged){\n      this.checkMigration();\n    }\n\n    const actionChanged = this.state.action !== prevState.action;\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector[this.state.action] !== prevState.fastBalanceSelector[this.state.action];\n    if (actionChanged || fastBalanceSelectorChanged){\n      this.setInputValue();\n    }\n\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue;\n    if (inputValueChanged){\n      this.checkButtonDisabled();\n    }\n\n    const contractApprovedChanged = prevState.migrationContractApproved !== this.state.migrationContractApproved;\n    if (contractApprovedChanged){\n      // console.log(this.props.selectedToken,'contractApprovedChanged',this.state.migrationContractApproved);\n      if (typeof this.props.callbackApprove === 'function'){\n        this.props.callbackApprove(this.state.migrationContractApproved);\n      }\n    }\n  }\n\n  toggleMetaTransactionsEnabled = (metaTransactionsEnabled) => {\n    this.setState({\n      metaTransactionsEnabled\n    });\n  }\n\n  checkMigrationContractApproved = async () => {\n    if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.migrationContract){\n      const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n      const migrationContractName = migrationContractInfo.name;\n      const migrationContract = this.functionsUtil.getContractByName(migrationContractName);\n      if (migrationContract){\n        const oldContractName = this.props.tokenConfig.migration.oldContract.name;\n        const tokenApproved = await this.functionsUtil.checkTokenApproved(oldContractName,migrationContractInfo.address,this.props.account);\n        return tokenApproved;\n      }\n    }\n    return false;\n  }\n\n  checkMigration = async () => {\n\n    if (!this.props.tokenConfig || !this.props.account){\n      return false;\n    }\n\n    let loading = true;\n    this.setState({\n      loading,\n      processing:{\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        migrate:{\n          txHash:null,\n          loading:false\n        },\n        redeem:{\n          txHash:null,\n          loading:false\n        }\n      },\n    });\n\n    let migrationEnabled = false;\n    let oldTokenName = 'idleTokens';\n    let oldIdleTokensConverted = null;\n    let oldContractTokenDecimals = null;\n    let migrationContractApproved = false;\n    let oldTokenPrice = this.functionsUtil.BNify(0);\n    let oldIdleTokens = this.functionsUtil.BNify(0);\n    let oldContractBalance = this.functionsUtil.BNify(0);\n    const getTokenPrice = this.props.getTokenPrice !== undefined ? this.props.getTokenPrice : true;\n\n    // Check migration contract enabled and balance\n    if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.enabled){\n      const oldContractInfo = this.props.tokenConfig.migration.oldContract;\n      const oldContractABI = oldContractInfo.abi;\n      const oldContractName = oldContractInfo.name;\n      let oldContract = this.functionsUtil.getContractByName(oldContractName);\n\n      // Initialize contract\n      if (!oldContract && oldContractABI){\n        oldContract = await this.props.initContract(oldContractName,oldContractInfo.address,oldContractABI);\n      }\n\n      let migrationContract = this.functionsUtil.getContractByName(this.props.tokenConfig.migration.migrationContract.name);\n\n      if (!migrationContract && this.props.tokenConfig.migration.migrationContract.abi){\n        migrationContract = await this.props.initContract(this.props.tokenConfig.migration.migrationContract.name,this.props.tokenConfig.migration.migrationContract.address,this.props.tokenConfig.migration.migrationContract.abi);\n      }\n\n      if (oldContract && migrationContract){\n\n        oldTokenName = this.props.tokenConfig.migration.oldContract.token;\n\n        [\n          oldContractTokenDecimals,\n          migrationContractApproved,\n          oldContractBalance,\n          oldTokenPrice,\n        ] = await Promise.all([\n          // Get old contract token decimals\n          this.functionsUtil.getTokenDecimals(oldContractName),\n          // Check migration contract approval\n          this.checkMigrationContractApproved(),\n          // Check old contractBalance\n          this.functionsUtil.getContractBalance(oldContractName,this.props.account),\n          // Get token price\n          (getTokenPrice ? this.functionsUtil.genericContractCall(oldContractName,'tokenPrice') : null)\n        ]);\n\n        // console.log('Migration',oldContractName,migrationContractApproved,this.props.selectedToken,oldContractBalance ? oldContractBalance.toString() : null,oldTokenPrice ? oldTokenPrice.toString() : null);\n\n        if (oldContractBalance){\n          // Convert old idleTokens\n          oldIdleTokens = this.functionsUtil.fixTokenDecimals(oldContractBalance,oldContractTokenDecimals);\n          if (oldTokenPrice){\n            oldTokenPrice = this.functionsUtil.fixTokenDecimals(oldTokenPrice,this.props.tokenConfig.decimals);\n            oldIdleTokensConverted = this.functionsUtil.BNify(oldIdleTokens).times(this.functionsUtil.BNify(oldTokenPrice));\n          }\n          // Enable migration if old contract balance if greater than 0\n          migrationEnabled = this.functionsUtil.BNify(oldContractBalance).gt(0);\n        }\n      }\n    }\n    \n    loading = false;\n\n    // If use Permit don't ask for Approve\n    const usePermit = this.props.usePermit;\n\n    const newState = {\n      loading,\n      usePermit,\n      oldTokenName,\n      oldIdleTokens,\n      migrationEnabled,\n      oldContractBalance,\n      oldIdleTokensConverted,\n      oldContractTokenDecimals,\n      migrationContractApproved\n    };\n\n    if (this.props.biconomy){\n      const biconomyLimits = await this.functionsUtil.checkBiconomyLimits(this.props.account);\n      if (biconomyLimits && !biconomyLimits.allowed){\n        newState.biconomyLimitReached = true;\n      }\n    }\n\n    if (typeof this.props.migrationEnabledCallback === 'function'){\n      this.props.migrationEnabledCallback(migrationEnabled);\n    }\n\n    // console.log('checkMigration',this.props.selectedToken,'usePermit',this.props.usePermit,'migrationContractApproved',newState.migrationContractApproved);\n\n    // Set migration contract balance\n    return this.setState(newState);\n  }\n\n  disapproveMigration = async (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n      this.disableERC20(null,this.props.tokenConfig.migration.oldContract.name,migrationContractInfo.address);\n    }\n  }\n\n  cancelTransaction = async () => {\n    this.setState({\n      processing: {\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        migrate:{\n          txHash:null,\n          loading:false\n        },\n        redeem:{\n          txHash:null,\n          loading:false\n        }\n      },\n    });\n  }\n\n  approveMigration = async (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n\n      // Check if the migration contract is approved\n      const migrationContractApproved = await this.checkMigrationContractApproved();\n\n      if (!migrationContractApproved){\n\n        const callbackApprove = (tx,error) => {\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: 'Migrate',\n            eventAction: 'approve',\n            eventLabel: tx ? tx.status : null\n          };\n\n          const txSucceeded = tx && tx.status === 'success';\n\n          // console.log('callbackApprove',tx,error);\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            migrationContractApproved: txSucceeded, // True\n            processing: {\n              ...prevState.processing,\n              approve:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (typeof this.props.callbackApprove === 'function' && txSucceeded){\n            this.props.callbackApprove(tx);\n          }\n\n          this.checkMigration();\n        };\n\n        const callbackReceiptApprove = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              approve:{\n                ...prevState.processing.approve,\n                txHash\n              }\n            }\n          }));\n        };\n\n        this.functionsUtil.enableERC20(this.props.tokenConfig.migration.oldContract.name,migrationContractInfo.address,callbackApprove,callbackReceiptApprove);\n\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            approve:{\n              txHash:null,\n              loading:true\n            }\n          },\n          migrationContractApproved:false\n        }));\n      } else {\n        this.setState({\n          migrationContractApproved:true\n        });\n      }\n    }\n  }\n\n  migrate = async (e,migrationMethod) => {\n    e.preventDefault();\n\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n\n      // Check if the migration contract is approved\n      // const migrationContractApproved = await this.checkMigrationContractApproved();\n\n      // if (!migrationContractApproved){\n      //   return this.approveMigration();\n      // } else {\n        const callbackMigrate = (tx,error) => {\n\n          if (!error && tx && tx.status === 'error'){\n            error = {\n              message:'Unknown error'\n            };\n          } else if (!tx && error){\n            tx = {\n              status:'error'\n            };\n          }\n\n          const txSucceeded = tx && tx.status === 'success';\n\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: 'Migrate',\n            eventAction: migrationMethod,\n            eventLabel: tx ? tx.status : null,\n            eventValue: parseInt(oldIdleTokens)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          // console.log('callbackMigrate',tx,tx.status,txSucceeded,error,this.props.migrationCallback);\n\n          if (txSucceeded){\n            // Toast message\n            window.toastProvider.addMessage(`Migration completed`, {\n              secondaryMessage: `Your funds has been migrated`,\n              colorTheme: 'light',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"success\",\n            });\n\n            if (this.props.migrationCallback && typeof this.props.migrationCallback === 'function'){\n              this.props.migrationCallback(tx);\n            }\n\n          } else { // Show migration error toast only for real error\n            window.toastProvider.addMessage(`Migration error`, {\n              secondaryMessage: `The migration has failed, try again...`,\n              colorTheme: 'light',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"failure\",\n            });\n\n            // Check migration if failed\n            this.checkMigration();\n          }\n\n          this.setState((prevState) => ({\n            migrationEnabled:txSucceeded ? false : true,\n            processing: {\n              ...prevState.processing,\n              migrate:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n        }\n\n        const callbackReceiptMigrate = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              migrate:{\n                ...prevState.processing.migrate,\n                txHash\n              }\n            }\n          }));\n        };\n\n        const callbackPermit = () => {\n          if (typeof this.props.callbackPermit === 'function'){\n            this.props.callbackPermit();\n          }\n        }\n\n        const useMetaTx = this.props.useMetaTx !== false && this.props.biconomy && this.state.metaTransactionsEnabled && !this.state.biconomyLimitReached;\n\n        // Call migration contract function to migrate funds\n        const oldIdleTokens = this.state.oldIdleTokens;\n        const toMigrate = this.props.showBalanceSelector ? this.functionsUtil.integerValue(this.functionsUtil.normalizeTokenAmount(this.state.inputValue[this.state.action],this.state.oldContractTokenDecimals)) : this.functionsUtil.integerValue(this.state.oldContractBalance);\n        // const toMigrate =  this.functionsUtil.normalizeTokenAmount('1',this.state.oldContractTokenDecimals).toString(); // TEST AMOUNT\n\n        let _skipRebalance = typeof this.props.tokenConfig.skipMintForDeposit !== 'undefined' ? this.props.tokenConfig.skipMintForDeposit : this.functionsUtil.getGlobalConfig(['contract','methods','migrate','skipRebalance']);\n\n        // Mint if someone mint over X amount\n        let minAmountForRebalance = null;\n        \n        if (_skipRebalance){\n\n          // Check if the amount is over a certain amount to rebalance the pool\n          if (useMetaTx){\n            minAmountForRebalance = this.functionsUtil.getGlobalConfig(['contract','methods','migrate','minAmountForRebalanceMetaTx']);\n          } else {\n            minAmountForRebalance = this.functionsUtil.getGlobalConfig(['contract','methods','migrate','minAmountForRebalance']);\n          }\n\n          if (minAmountForRebalance){\n            const amountToDeposit = await this.functionsUtil.convertTokenBalance(oldIdleTokens,this.props.selectedToken,this.props.tokenConfig,false);\n            if (amountToDeposit.gte(this.functionsUtil.BNify(minAmountForRebalance))){\n              _skipRebalance = false;\n            }\n          }\n        }\n\n        let migrationParams = this.props.migrationParams ? this.props.migrationParams : [toMigrate,this.props.tokenConfig.migration.oldContract.address,this.props.tokenConfig.idle.address,this.props.tokenConfig.address,_skipRebalance];\n\n        if (typeof migrationParams === 'function'){\n          migrationParams = migrationParams(toMigrate);\n        }\n\n        // Check if Biconomy is enabled\n        if (useMetaTx){\n          const functionSignature = migrationContract.methods[migrationMethod](...migrationParams).encodeABI();\n          this.functionsUtil.sendBiconomyTxWithPersonalSign(migrationContractInfo.name, functionSignature, callbackMigrate, callbackReceiptMigrate);\n          // this.functionsUtil.sendBiconomyTx(migrationContractInfo.name, migrationContractInfo.address, functionSignature, callbackMigrate, callbackReceiptMigrate);\n        } else {\n          const permitContract = this.functionsUtil.getContractByName(this.props.tokenConfig.name);\n          const functionInfo = migrationContractInfo.functions.find( f => f.name === migrationMethod );\n          if (this.props.usePermit && permitContract){\n            this.functionsUtil.sendTxWithPermit(this.props.tokenConfig.name, this.props.account, migrationContractInfo.name, functionInfo.permitName, migrationParams, callbackMigrate, callbackReceiptMigrate, callbackPermit);\n          } else {\n            // Send migration tx\n            this.functionsUtil.contractMethodSendWrapper(migrationContractInfo.name, migrationMethod, migrationParams, callbackMigrate, callbackReceiptMigrate);\n          }\n        }\n\n        // debugger;\n\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            migrate:{\n              txHash:null,\n              loading:true\n            }\n          }\n        }));\n      // }\n    }\n\n    return false;\n  }\n\n  render() {\n\n    if (!this.props.tokenConfig || !this.props.selectedToken){\n      return null;\n    }\n\n    const contractApproved = this.props.usePermit || this.state.migrationContractApproved;\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationEnabled = batchMigrationInfo.enabled && typeof batchMigrationInfo.props.availableTokens[this.props.tokenConfig.idle.token] !== 'undefined';\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    // console.log('contractApproved',contractApproved,this.props.usePermit,this.state.migrationContractApproved);\n\n    const SkipMigrationComponent = (props) => (\n      <DashboardCard\n        cardProps={{\n          pt:2,\n          pb:3,\n          px:2,\n          mb:2,\n          display:'flex',\n          alignItems:'center',\n          flexDirection:'column',\n          justifyContent:'center',\n          mt:this.state.skipMigration ? 3 : 2,\n        }}\n      >\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Icon\n            size={'1.8em'}\n            color={'cellText'}\n            name={'FastForward'}\n          />\n        </Flex>\n        <Checkbox\n          required={false}\n          checked={this.state.skipMigration}\n          label={`Skip migration and deposit in Idle v4`}\n          onChange={ e => this.toggleSkipMigration(e.target.checked) }\n        />\n      </DashboardCard>\n    );\n\n    const biconomyEnabled = this.functionsUtil.getGlobalConfig(['network','providers','biconomy','enabled']) && !this.state.biconomyLimitReached;\n\n    return (\n      this.state.loading && this.props.account ? (\n        <DashboardCard\n          cardProps={{\n            p:3,\n            mt:3,\n            minHeight:'195px',\n            style:{\n              display:'flex',\n              alignItems:'center',\n              justifyContent:'center'\n            }\n          }}\n        >\n          <FlexLoader\n            flexProps={{\n              flexDirection:'row'\n            }}\n            loaderProps={{\n              size:'30px'\n            }}\n            textProps={{\n              ml:2\n            }}\n            text={'Checking migration...'}\n          />\n        </DashboardCard>\n      ) : (\n        (this.state.migrationEnabled && !this.state.skipMigration) ? (\n          <Box width={1}>\n            {\n              !this.props.isMigrationTool &&\n              <Flex\n                mt={3}\n                flexDirection={'column'}\n              >\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  >\n                    <Icon\n                      size={'2.3em'}\n                      color={'cellText'}\n                      name={ this.props.isMigrationTool ? 'SwapHoriz' : 'Warning' }\n                    />\n                    <Text\n                      mt={1}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      { this.props.migrateTextBefore !== null ? this.props.migrateTextBefore : null }\n                      { this.props.migrateTextBefore !== null &&\n                        <br />\n                      }\n                      You { !this.props.isMigrationTool ? 'still' : '' } have <strong>{this.state.oldIdleTokens.toFixed(4)} {this.state.oldTokenName} {this.state.oldIdleTokensConverted ? `(${this.state.oldIdleTokensConverted.toFixed(4)} ${this.props.selectedToken})` : ''}</strong> to migrate.<br />\n                      { this.props.migrateText !== null ? this.props.migrateText : 'Please use the section below to migrate or redeem your old tokens.' }\n                    </Text>\n                  </Flex>\n                </DashboardCard>\n              </Flex>\n            }\n            {\n              (this.props.showActions === undefined || this.props.showActions) && \n                <Flex\n                  mt={2}\n                  flexDirection={'column'}\n                >\n                  {\n                    !this.props.isMigrationTool && \n                      <SkipMigrationComponent />\n                  }\n                  <Text mb={2}>\n                    Choose the action:\n                  </Text>\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'space-between'}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        width:0.48,\n                        onMouseDown:() => {\n                          this.setAction('migrate');\n                        }\n                      }}\n                      isInteractive={true}\n                      isActive={ this.state.action === 'migrate' }\n                    >\n                      <Flex\n                        my={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <TransactionField\n                          transaction={{\n                            action:'migrate'\n                          }}\n                          fieldInfo={{\n                            name:'icon',\n                            props:{\n                              mr:3\n                            }\n                          }}\n                        />\n                        <Text\n                          fontSize={3}\n                          fontWeight={3}\n                        >\n                          Migrate\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        width:0.48,\n                        onMouseDown:() => {\n                          this.setAction('redeem');\n                        }\n                      }}\n                      isInteractive={true}\n                      isActive={ this.state.action === 'redeem' }\n                    >\n                      <Flex\n                        my={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <TransactionField\n                          transaction={{\n                            action:'redeem'\n                          }}\n                          fieldInfo={{\n                            name:'icon',\n                            props:{\n                              mr:3\n                            }\n                          }}\n                        />\n                        <Text\n                          fontSize={3}\n                          fontWeight={3}\n                        >\n                          Redeem\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                </Flex>\n            }\n            {\n              this.state.action === 'migrate' ? (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  flexDirection={'column'}\n                >\n                  {\n                    (batchMigrationEnabled && batchMigrationDepositEnabled && !this.props.isMigrationTool) &&\n                      <Flex\n                        mb={3}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <Link\n                          textAlign={'center'}\n                          hoverColor={'primary'}\n                          href={`/#/dashboard/tools/${batchMigrationInfo.route}/${this.props.tokenConfig.idle.token}`}\n                        >\n                          Gas fees too high? Save gas with our Batch Migrator!\n                        </Link>\n                        <Icon\n                          ml={1}\n                          size={'1em'}\n                          color={'primary'}\n                          name={'LocalGasStation'}\n                        />\n                      </Flex>\n                  }\n                  {\n                    contractApproved ? (\n                      this.state.processing.migrate.loading ? (\n                        <Flex\n                          mt={3}\n                          flexDirection={'column'}\n                        >\n                          <TxProgressBar\n                            {...this.props}\n                            hash={this.state.processing.migrate.txHash}\n                            endMessage={`Finalizing migration request...`}\n                            cancelTransaction={this.cancelTransaction.bind(this)}\n                            waitText={ this.props.waitText ? this.props.waitText : 'Migration estimated in'}\n                            sendingMessage={ this.props.biconomy && this.state.metaTransactionsEnabled ? 'Sending meta-transaction...' : 'Sending transaction...' }\n                          />\n                        </Flex>\n                      ) : this.props.showBalanceSelector ? (\n                        <Flex\n                          mt={1}\n                          flexDirection={'column'}\n                        >\n                          <Flex\n                            mb={3}\n                            width={1}\n                            flexDirection={'column'}\n                          >\n                            <Flex\n                              mb={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={this.props.balanceSelectorInfo ? 'space-between' : 'flex-end'}\n                            >\n                              {\n                                this.props.balanceSelectorInfo && (\n                                  <Flex\n                                    width={1}\n                                    maxWidth={'50%'}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                  >\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      textAlign={'left'}\n                                      style={{\n                                        maxWidth:'100%',\n                                        overflow:'hidden',\n                                        whiteSpace:'nowrap',\n                                        textOverflow:'ellipsis'\n                                      }}\n                                      color={this.props.balanceSelectorInfo.color ? this.props.balanceSelectorInfo.color : 'copyColor'}\n                                    >\n                                      {this.props.balanceSelectorInfo.text}\n                                    </Text>\n                                  </Flex>\n                                )\n                              }\n                              {\n                                this.state.oldIdleTokens && (\n                                  <Flex\n                                    width={1}\n                                    maxWidth={'50%'}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'flex-end'}\n                                  >\n                                    <Link\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      color={'dark-gray'}\n                                      textAlign={'right'}\n                                      hoverColor={'copyColor'}\n                                      onClick={ (e) => this.setFastBalanceSelector(100) }\n                                    >\n                                      Balance: {this.state.oldIdleTokens.toFixed(6)} {this.props.selectedToken}\n                                    </Link>\n                                  </Flex>\n                                )\n                              }\n                            </Flex>\n                            <Input\n                              min={0}\n                              type={\"number\"}\n                              required={true}\n                              height={'3.4em'}\n                              borderRadius={2}\n                              fontWeight={500}\n                              borderColor={'cardBorder'}\n                              backgroundColor={'cardBg'}\n                              boxShadow={'none !important'}\n                              placeholder={'Insert amount'}\n                              onChange={this.changeInputValue.bind(this)}\n                              border={`1px solid ${this.props.theme.colors.divider}`}\n                              value={this.state.inputValue[this.state.action] ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]).toFixed() : ''}\n                            />\n                            <Flex\n                              mt={2}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              {\n                                [25,50,75,100].map( percentage => (\n                                  <FastBalanceSelector\n                                    percentage={percentage}\n                                    key={`selector_${percentage}`}\n                                    onMouseDown={()=>this.setFastBalanceSelector(percentage)}\n                                    isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(percentage)}\n                                  />\n                                ))\n                              }\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            mt={1}\n                            width={1}\n                            alignItems={'center'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.props.tokenConfig.migration.migrationContract.functions.map((functionInfo,i) => {\n                                const functionName = functionInfo.name;\n                                return (\n                                  <RoundButton\n                                    buttonProps={{\n                                      width:[1,0.5],\n                                      disabled:this.state.buttonDisabled,\n                                      mainColor:this.props.theme.colors.migrate\n                                    }}\n                                    key={`migrate_${i}`}\n                                    handleClick={ e => this.migrate(e,functionName) }\n                                  >\n                                    { functionInfo.label }\n                                  </RoundButton>\n                                )\n                              })\n                            }\n                          </Flex>\n                        </Flex>\n                      ) : (\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:2,\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            {\n                              this.props.migrationImage ? (\n                                <Image\n                                  {...this.props.migrationImage}\n                                />\n                              ) : (\n                                <Icon\n                                  size={'2.3em'}\n                                  color={'cellText'}\n                                  name={ this.props.migrationIcon ? this.props.migrationIcon : (this.props.isMigrationTool ? 'SwapHoriz' : 'Repeat') }\n                                />\n                              )\n                            }\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              {\n                                this.props.migrationText ? (\n                                  <Text.span\n                                    migrationTextProps={this.props.migrationTextProps}\n                                    dangerouslySetInnerHTML={{\n                                      __html:this.props.migrationText\n                                    }}\n                                  >\n                                  </Text.span>\n                                ) : (\n                                  <Text.span\n                                    color={'cellText'}\n                                  >\n                                    You are one step away from the migration of your { this.props.isMigrationTool ? this.state.oldIdleTokens.toFixed(4) : 'old' } {this.state.oldTokenName}{ this.props.isMigrationTool ? ` into the Idle ${this.props.tokenConfig.token} ${this.props.selectedStrategy} strategy` : '' }!\n                                  </Text.span>\n                                )\n                              }\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                            {\n                              biconomyEnabled && \n                                <Flex\n                                  py={3}\n                                  px={2}\n                                  mt={2}\n                                  width={1}\n                                  borderRadius={2}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                  backgroundColor={'dashboardBg'}\n                                  border={`1px solid ${this.props.theme.colors.boxBorder}`}\n                                >\n                                  <Text\n                                    mt={1}\n                                    fontSize={1}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    {\n                                      this.props.biconomy ?\n                                        `Meta-Transactions allow you to migrate without spending a dime! But, if you are stuck, please disable it and try again.`\n                                      :\n                                        'Your wallet does not support Meta-transactions, you are still able to migrate with a normal transaction.'\n                                    }\n                                  </Text>\n                                  {\n                                  this.props.biconomy &&\n                                    <Checkbox\n                                      mt={2}\n                                      required={false}\n                                      label={\"Migrate with Meta-Transaction\"}\n                                      checked={this.state.metaTransactionsEnabled}\n                                      onChange={ e => this.toggleMetaTransactionsEnabled(e.target.checked) }\n                                    />\n                                  }\n                                </Flex>\n                            }\n                            {\n                              this.props.tokenConfig.migration.migrationContract.functions.map((functionInfo,i) => {\n                                const functionName = functionInfo.name;\n                                return (\n                                  <RoundButton\n                                    buttonProps={{\n                                      mt:3,\n                                      width:[1,0.5],\n                                      mainColor:this.props.theme.colors.migrate\n                                    }}\n                                    key={`migrate_${i}`}\n                                    handleClick={ e => this.migrate(e,functionName) }\n                                  >\n                                    { functionInfo.label }\n                                  </RoundButton>\n                                )\n                              })\n                            }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      )\n                    ) : this.state.processing.approve.loading ? (\n                      <Flex\n                        mt={3}\n                        flexDirection={'column'}\n                      >\n                        <TxProgressBar\n                          {...this.props}\n                          waitText={`Approve estimated in`}\n                          hash={this.state.processing.approve.txHash}\n                          endMessage={`Finalizing approve request...`}\n                          cancelTransaction={this.cancelTransaction.bind(this)}\n                        />\n                      </Flex>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          mt:2,\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            size={'2.3em'}\n                            name={'LockOpen'}\n                            color={'cellText'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            {\n                              this.props.approveText ? this.props.approveText : `To migrate your ${ !this.props.isMigrationTool ? 'old' : '' } ${this.state.oldTokenName} you need to approve our Smart-Contract first.`\n                            }\n                          </Text>\n                          <RoundButton\n                            buttonProps={{\n                              mt:3,\n                              width:[1,1/2]\n                            }}\n                            handleClick={this.approveMigration.bind(this)}\n                          >\n                            Approve\n                          </RoundButton>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  }\n                </Flex>\n              ) : (\n                !this.state.processing[this.state.action].loading ? (\n                  <Flex\n                    mt={3}\n                    flexDirection={'column'}\n                  >\n                    <Input\n                      min={0}\n                      type={\"number\"}\n                      required={true}\n                      height={'3.4em'}\n                      borderRadius={2}\n                      fontWeight={500}\n                      className={styles.input}\n                      borderColor={'cardBorder'}\n                      backgroundColor={'cardBg'}\n                      boxShadow={'none !important'}\n                      onChange={this.changeInputValue.bind(this)}\n                      border={`1px solid ${this.props.theme.colors.divider}`}\n                      placeholder={`Insert ${this.state.oldTokenName} amount`}\n                      value={this.state.inputValue[this.state.action] !== null ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]).toString() : ''}\n                    />\n                    <Flex\n                      mt={3}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'space-between'}\n                    >\n                      <FastBalanceSelector\n                        percentage={25}\n                        onMouseDown={()=>this.setFastBalanceSelector(25)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(25)}\n                      />\n                      <FastBalanceSelector\n                        percentage={50}\n                        onMouseDown={()=>this.setFastBalanceSelector(50)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(50)}\n                      />\n                      <FastBalanceSelector\n                        percentage={75}\n                        onMouseDown={()=>this.setFastBalanceSelector(75)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(75)}\n                      />\n                      <FastBalanceSelector\n                        percentage={100}\n                        onMouseDown={()=>this.setFastBalanceSelector(100)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(100)}\n                      />\n                    </Flex>\n                    <Flex\n                      mt={3}\n                      justifyContent={'center'}\n                    >\n                      <RoundButton\n                        buttonProps={{\n                          width:[1,1/2],\n                          disabled:this.state.buttonDisabled,\n                          style:{\n                            textTransform:'capitalize'\n                          }\n                        }}\n                        handleClick={this.state.buttonDisabled ? null : this.executeAction.bind(this) }\n                      >\n                        {this.state.action}\n                      </RoundButton>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Flex\n                    mt={4}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      {...this.props}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                      hash={this.state.processing[this.state.action].txHash}\n                      endMessage={`Finalizing ${this.state.action} request...`}\n                      waitText={`${this.functionsUtil.capitalize(this.state.action)} estimated in`}\n                    />\n                  </Flex>\n                )\n              )\n            }\n          </Box>\n        ) : (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'column'}\n            justifyContent={'center'}\n          >\n            {\n              (!this.props.isMigrationTool && this.state.migrationEnabled) && \n                <SkipMigrationComponent />\n            }\n            {\n              this.props.children ? this.props.children : null\n            }\n          </Flex>\n        )\n      )\n    )\n  }\n}\n\nexport default Migrate;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\n\nclass ChartCustomTooltipRow extends Component {\n\n  async componentWillMount(){\n    \n  }\n\n  async componentDidUpdate(prevProps,prevState){\n\n  }\n\n  render() {\n    return (\n      <Flex\n        mb={2}\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n      >\n        <Flex\n          pr={2}\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-start'}\n        > \n          {\n            this.props.color && \n            <Box\n              mr={2}\n              width={'10px'}\n              height={'10px'}\n              borderRadius={'50%'}\n              backgroundColor={this.props.color}\n            >\n            </Box>\n          }\n          <Text\n            fontSize={1}\n            fontWeight={2}\n            textAlign={'left'}\n            color={'dark-gray'}\n            style={{\n              textTransform:'capitalize'\n            }}\n          >\n            {this.props.label}\n          </Text>\n        </Flex>\n        <Flex\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-end'}\n        >\n          <Text\n            fontSize={1}\n            fontWeight={3}\n            color={'cellText'}\n            textAlign={'right'}\n            style={{\n              whiteSpace:'nowrap'\n            }}\n            dangerouslySetInnerHTML={{\n              __html: this.props.value\n            }}\n          >\n          </Text>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default ChartCustomTooltipRow;\n","import React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport { Flex, Link, Icon, Text } from \"rimble-ui\";\nimport CustomField from '../CustomField/CustomField';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass CustomList extends Component {\n\n  state = {\n    page:1,\n    rowsPerPage:5,\n    totalPages:null,\n    processedRows:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.processRows();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const rowsChanged = JSON.stringify(prevProps.rows) !== JSON.stringify(this.props.rows);\n\n    if (rowsChanged){\n      this.setState({\n        page:1,\n      },()=>{\n        this.processRows();\n      })\n      return false;\n    }\n    const pageChanged = prevState.page !== this.state.page;\n    if (pageChanged){\n      this.processRows();\n    }\n  }\n\n  processRows = (page=null) => {\n    page = page ? page : this.state.page;\n\n    const totalRows = this.props.rows.length;\n    const totalPages = Math.ceil(totalRows/this.state.rowsPerPage);\n    \n    let processedRows = [];\n    if (this.props.paginationEnabled){\n      this.props.rows.forEach((row, i) => {\n        if (i>=((page-1)*this.state.rowsPerPage) && i<((page-1)*this.state.rowsPerPage)+this.state.rowsPerPage) {\n          processedRows.push(row);\n        }\n      });\n    } else {\n      processedRows = this.props.rows;\n    }\n\n    this.setState({\n      totalPages,\n      processedRows\n    });\n  }\n\n  prevPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.max(1,this.state.page-1);\n    this.setState({\n      page\n    });\n  }\n\n  nextPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.min(this.state.totalPages,this.state.page+1);this.processRows(page);\n    this.setState({\n      page\n    });\n  }\n\n  render() {\n\n    return (\n      <Flex id=\"custom-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"custom-list\" flexDirection={'column'}>\n          {\n            this.state.processedRows.map( (row,rowIndex) => {\n              return (\n                <TableRow\n                  row={row}\n                  {...this.props}\n                  key={`asset-${rowIndex}`}\n                  fieldComponent={CustomField}\n                  rowId={`asset-col-${rowIndex}`}\n                  cardId={`asset-card-${rowIndex}`}\n                />\n              );\n            })\n          }\n        </Flex>\n        {\n          this.props.paginationEnabled && (\n            <Flex\n              height={'50px'}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'flex-end'}\n              id={'transactions-list-pagination'}\n            >\n              <Flex mr={3}>\n                <Link mr={1} onClick={ e => this.prevPage(e) }>\n                  <Icon\n                    name={'KeyboardArrowLeft'}\n                    size={'2em'}\n                    color={ this.state.page>1 ? 'arrowActive' : 'arrowInactive' }\n                  />\n                </Link>\n                <Link onClick={ e => this.nextPage(e) }>\n                  <Icon\n                    name={'KeyboardArrowRight'}\n                    size={'2em'}\n                    color={ this.state.page<this.state.totalPages ? 'arrowActive' : 'arrowInactive' }\n                  />\n                </Link>\n              </Flex>\n              <Flex alignItems={'center'}>\n                <Text \n                  fontSize={1}\n                  fontWeight={3}\n                  color={'cellText'}\n                >\n                  Page {this.state.page} of {this.state.totalPages}\n                </Text>\n              </Flex>\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default CustomList;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport AssetField from '../AssetField/AssetField';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass AssetsList extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    return (\n      <Flex id=\"assets-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"assets-list\" flexDirection={'column'}>\n          {\n            enabledTokens.map(token => {\n              const tokenConfig = this.props.availableTokens ? this.props.availableTokens[token] : null;\n              if (!tokenConfig){\n                return null;\n              }\n              return (\n                <TableRow\n                  token={token}\n                  {...this.props}\n                  key={`asset-${token}`}\n                  tokenConfig={tokenConfig}\n                  rowId={`asset-col-${token}`}\n                  cardId={`asset-card-${token}`}\n                  fieldComponent={this.props.fieldComponent || AssetField}\n                />\n              );\n            })\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default AssetsList;\n","import Footer from '../Footer/Footer';\nimport styles from './Tos.module.scss';\nimport React, { Component } from 'react';\nimport { Box, Flex, Text, Heading } from 'rimble-ui'\n\nclass Tos extends Component {\n  state = {};\n\n  render() {\n    return (\n      <Box>\n        <Box className={styles.headerContainer} pb={[3,5]} px={[3,6]} pt={['2em', '3em']}>\n          <Box className={styles.headerBgFiller}></Box>\n          <Box position={'relative'} zIndex={10}>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"60em\"]} mx={'auto'} pb={3} textAlign={'center'} pt={['8vh', '8vh']}>\n              <Heading.h1 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.2em'} fontSize={['2.5em',7]} textAlign={'center'} color={'white'}>\n                Terms of Service\n              </Heading.h1>\n              <Heading.h2 fontWeight={'400'} lineHeight={['1.4em', '2em']} fontSize={[2,3]} textAlign={'center'} color={'white'}>\n                Updated: November 28, 2019\n              </Heading.h2>\n            </Flex>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"70em\"]} mx={'auto'} textAlign={'center'}>\n              <Box className={styles.textContainer} alignItems={'center'} width={'100%'} minHeight={['auto','20em']} backgroundColor={'white'} color={'dark-gray'} p={[3,4]} boxShadow={'0 0 25px 5px rgba(102, 139, 255, 0.7)'} borderRadius={'15px'} style={{position:'relative'}}>\n                <Box id={'first-paragraph'} pb={3}>\n                  <Text pb={3}>\n                    These terms of service, together with any documents and additional terms they expressly incorporate by reference (collectively, these “Terms”), are entered into between Idle Labs Inc. (“Idle,” “we,” “us” and “our”) and you or the company or other legal entity you represent (“you” or “your”), and constitute a binding legal agreement.\n                  </Text>\n                  <Text pb={3}>\n                    Please read these Terms carefully, as these Terms govern your use of our Portal and our Services, and expressly cover your rights and obligations, and our disclaimers and limitations of legal liability, relating to such use. By accessing or using the Interface, you signify that you have read, understand, and agree to be bound by and to comply with these Terms, including the mandatory arbitration provision in Section 12. If you do not agree to these Terms, you must not access or use our Portal or the Services.\n                  </Text>\n                  <Text pb={3}>\n                    You must be able to form a legally binding contract online either on behalf of a company or as an individual. Accordingly, you represent that: (a) if you are agreeing to these Terms on behalf of a company or other legal entity, you have the legal authority to bind the company or other legal entity to these Terms; and (b) you are at least 18 years old (or the age of majority where you reside, whichever is older), can form a legally binding contract online, and have the full, right, power and authority to enter into and to comply with the obligations under these Terms.\n                  </Text>\n                  <Text pb={3}>\n                    In addition to the foregoing, you also represent and warrant that you are not a citizen or resident of a state, country, territory or other jurisdiction that is embargoed by the United States or where your use of the Portal or the Services would be illegal or otherwise violate any applicable law.  Specifically, you represent that you are not located in, organized in, or a resident of New York, Cuba, Iran, Syria, North Korea, the Crimea region, Venezuela, or any other jurisdiction where Applicable law prohibits you from accessing or using the Services; and you represent that you are not be named on the Office of Foreign Asset Control of the U.S. Department of the Treasury’s Specially Designated and Blocked Persons List.\n                   </Text>\n                  <Text>\n                    Please carefully review the disclosures and disclaimers set forth in Section 9 in their entirety before using any software developed by Idle. The information in Section 9 provides important details about the legal obligations associated with your use of the Idle open-source software. By accessing or using our Portal or our Services, you agree that Idle is a provider of open-source software that optimizes the allocation of your digital assets to third-party decentralized web protocols.  Idle is not affiliated with and has no control over these third-party protocols and is not responsible for any losses that occur as a result of interconnection with these third-party protocols. The Protocol is open-source software deployed on the Ethereum Blockchain.  While Idle developed and deployed the Protocol, the software operates in an autonomous fashion on a decentralized network and, as a result, Idle has no control over user transactions. You accordingly acknowledge that you use the Services at your own risk and agree that Idle will not be responsible for any losses that occur as a result of your use of the Services.\n                  </Text>\n                </Box>\n\n                <Box id={'key-definitions'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    1. KEY DEFINITIONS\n                  </Heading.h3>\n\n                  <Text py={2}>\n                    For the purpose of these Terms, the following capitalized terms shall have the following meanings:\n                  </Text>\n\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>1.1. “Affiliate”</strong> means, with respect to a party to these Terms, any legal entity that, directly or indirectly controls, is controlled by, or is under common control with such party.\n                    </li>\n                    <li>\n                      <strong>1.2. “Applicable Law”</strong> means any domestic or foreign law, rule, statute, regulation, by-law, order, protocol, code, decree, or other directive, requirement or guideline, published or in force which applies to or is otherwise intended to govern or regulate any person, property, transaction, activity, event or other matter, including any rule, order, judgment, directive or other requirement or guideline issued by any Governmental Authority having jurisdiction over Idle, you, the Portal or the Services, or as otherwise duly enacted, enforceable by law, the common law or equity.\n                    </li>\n                    <li>\n                      <strong>1.3. “Ether”</strong> means the Ethereum Blockchain utility token that may be used to purchase computational resources to run decentralized applications or perform actions on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.4. “Ethereum Address”</strong> means the unique public key digital asset identifier that points to an Ethereum-compatible wallet to which Ether may be sent or stored.\n                    </li>\n                    <li>\n                      <strong>1.5. “Ethereum Blockchain”</strong> means the underlying blockchain infrastructure which the Portal leverages to perform portions of the Services.\n                    </li>\n                    <li>\n                      <strong>1.6. “Governmental Authority”</strong> includes any domestic or foreign federal, provincial or state, municipal, local or other governmental, regulatory, judicial or administrative authority.\n                    </li>\n                    <li>\n                      <strong>1.7. “Portal”</strong> means the Idle site located at https://idle.finance and all associated sites linked thereto by Idle and its Affiliates, which includes, for certainty, Idle’s decentralized application layer on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.8. “Protocol”</strong> means the Idle decentralized web protocol, which optimizes the allocation of users’ digital assets to third-party decentralized web protocols.\n                    </li>\n                    <li>\n                      <strong>1.9. “Token”</strong> means an “ERC-20” digital asset issued on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.10. “Services”</strong> has the meaning set out in Section 3.1.\n                    </li>\n                    <li>\n                      <strong>1.11. “Third-Parties Services”</strong> means other services (such as fiat-to-token gateway, or token-to-token swap) provided by third parties services running on Ethereum Blockchain.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'modifications-terms'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    2. MODIFICATIONS TO THESE TERMS\n                  </Heading.h3>\n\n                  <Text py={2}>\n                    We reserve the right, in our sole discretion, to modify these Terms from time to time. If we make changes, we will provide you with notice of such changes, such as by sending an email, providing a notice through our Services or updating the date at the top of these Terms. Unless we say otherwise in our notice, any and all such modifications are effective immediately, and your continued use of our Services after we provide such notice will confirm your acceptance of the changes. If you do not agree to the amended Terms, you must stop using our Services.\n                  </Text>\n                </Box>\n\n                <Box id={'services'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    3. SERVICES\n                  </Heading.h3>\n                </Box>\n\n                <ul className={styles.list}>\n                  <li>\n                    <strong>3.1. Services</strong><br />\n                    The primary purpose of the Portal and Protocol is to enable users to interact with smart contracts that allocate their digital assets to third-party decentralized web protocols and enable users to receive an optimized allocation of digital assets from these protocols in return (the “Services”).\n                  </li>\n                  <li>\n                    <strong>3.2. Fees</strong><br />\n                    Use of the Services is provided to you at no charge. Fees are charged on-top of Third-Parties.\n                  </li>\n                  <li>\n                    <strong>3.3. Ethereum Gas Charges</strong><br />\n                    Some Services involve the use of the Ethereum Blockchain, which may require that you pay a fee, commonly known as “Ethereum Gas Charges,” for the computational resources required to perform a transaction on the Ethereum Blockchain. You acknowledge and agree that Idle has no control over: (a) any Ethereum Blockchain transactions; (b) the method of payment of any Ethereum Gas Charges; or (c) any actual payments of Ethereum Gas Charges. Accordingly, you must ensure that you have a sufficient balance of Ether stored at your Ethereum Address to complete any transaction on the Ethereum Blockchain before initiating such Ethereum Blockchain transaction. We will make reasonable efforts to notify you of any Ethereum Gas Charges before initiating any Services that require the use of the Ethereum Blockchain.\n                  </li>\n                  <li>\n                    <strong>3.4. Conditions and Restrictions</strong><br />\n                    We may, at any time and in our sole discretion, restrict your access to, or otherwise impose conditions or restrictions upon your use of, the Services or the Portal, with or without prior notice.\n                  </li>\n                  <li>\n                    <strong>3.5. No Broker, Legal or Fiduciary Relationship</strong><br />\n                    Idle is not your broker, lawyer, intermediary, agent, or advisor and has no fiduciary relationship or obligation to you regarding any other decisions or activities that you effect when using the Portal or the Services. Neither our communications nor any information that we provide to you is intended as, or shall be considered or construed as, advice.\n                  </li>\n                  <li>\n                    <strong>3.6. Your Responsibilities</strong><br />\n                    As a condition to accessing or using the Services or the Portal, you shall:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>only use the Services and the Portal for lawful purposes and in accordance with these Terms;</li>\n                      <li>ensure that, at all times, all information that you provide on the Portal is current, complete and accurate; and maintain the security and confidentiality of your Ethereum Address.</li>\n                      <li>shall be responsible for payment of all applicable taxes, if any, to which the Services might be subject and any and all other taxes which may apply to you.</li>\n                    </ul>\n                  </li>\n                  <li>\n                    <strong>3.7. Unacceptable Use or Conduct</strong><br />\n                    As a condition to accessing or using the Portal or the Services, you will not:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>violate any Applicable Law, including, without limitation, any relevant and applicable anti-money laundering and anti-terrorist financing laws, such as the Bank Secrecy Act, each as may be amended;</li>\n                      <li>infringe on or misappropriate any contract, intellectual property or other third-party right, or commit a tort while using the Portal or the Services;</li>\n                      <li>use the Services in any manner that could interfere with, disrupt, negatively affect, or inhibit other users from fully enjoying the Services, or that could damage, disable, overburden, or impair the functioning of the Services in any manner;</li>\n                      <li>attempt to circumvent any content filtering techniques or security measures that Idle employs on the Portal, or attempt to access any service or area of the Portal or the Services that you are not authorized to access;</li>\n                      <li>use the Services to pay for, support, or otherwise engage in any illegal gambling activities, fraud, money-laundering, or terrorist activities, or other illegal activities;</li>\n                      <li>use any robot, spider, crawler, scraper, or other automated means or interface not provided by us, to access the Services or to extract data;</li>\n                      <li>introduce any malware, virus, Trojan horse, worm, logic bomb, drop-dead device, backdoor, shutdown mechanism or other harmful material into the Portal or the Services;</li>\n                      <li>provide false, inaccurate, or misleading information;</li>\n                      <li>post content or communications on the Portal that are, in our sole discretion, libelous, defamatory, profane, obscene, pornographic, sexually explicit, indecent, lewd, vulgar, suggestive, harassing, hateful, threatening, offensive, discriminatory, bigoted, abusive, inflammatory, fraudulent, deceptive or otherwise objectionable;</li>\n                      <li>post content on the Portal containing unsolicited promotions, political campaigning, or commercial messages or any chain messages or user content designed to deceive or trick the user of the Service;</li>\n                      <li>use the Portal or the Services from a jurisdiction that we have, in our sole discretion, or a relevant Governmental Authority has determined is a jurisdiction where the use of the Portal or the Services is prohibited; or</li>\n                      <li>encourage or induce any third party to engage in any of the activities prohibited under this Section 3.7.</li>\n                    </ul>\n                  </li>\n\n                  <li>\n                    <strong>3.8. Your Assumption of Risks</strong><br />\n                    You represent and warrant that you:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>have the necessary technical expertise and ability to review and evaluate the security, integrity and operation of any transactions that you engage in through the Protocol;</li>\n                      <li>have the knowledge, experience, understanding, professional advice and information to make your own evaluation of the merits, risks and applicable compliance requirements under Applicable Law of engaging in transactions through the Protocol;</li>\n                      <li>acknowledge and understand that the Protocol allocates your digital assets to third-party decentralized web protocols to facilitate your lending and borrowing through these third-party protocols and that Idle is not responsible or liable for these transactions or the operation of these third-party protocols;</li>\n                      <li>know, understand and accept the risks associated with your Ethereum Address, the Ethereum Blockchain, Ether and Tokens; and</li>\n                      <li>accept the risks associated with lending, borrowing and trading Ether and Tokens, and are responsible for conducting your own independent analysis of the risks specific to any Ether and Tokens lent, borrowed or traded by you and your use of the Services.</li>\n                    </ul>\n                    You hereby assume, and agree that Idle will have no responsibility or liability for, such risks. You hereby irrevocably waive, release and discharge all claims, whether known or unknown to you, against Idle, its affiliates and their respective shareholders, members, directors, officers, employees, agents and representatives related to any of the risks set forth herein.\n                  </li>\n                  <li>\n                    <strong>3.9. Additional Representations</strong><br />\n                    You represent and warrant that you:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>are not using the Protocol to engage in the leveraged, margined, or financed purchase of digital assets; and</li>\n                      <li>are using the Protocol for the purpose of accessing third-party decentralized web protocols.</li>\n                    </ul>\n                  </li>\n                  <li>\n                    <strong>3.10. Your Content</strong><br />\n                    You hereby grant to us a royalty-free, fully paid-up, sublicensable, transferable, perpetual, irrevocable, non-exclusive, worldwide license to use, copy, modify, create derivative works of, display, perform, publish and distribute, in any form, medium or manner, any content that is available to other users via the Idle Platform as a result of your use of the Portal (collectively, “Your Content”) through your use of the Services or the Portal, including, without limitation, for promoting Idle (or its Affiliates), the Services or the Portal. You represent and warrant that: (a) you own Your Content or have the right to grant the rights and licenses in these Terms; and (b) Your Content and our use of Your Content, as licensed herein, does not and will not violate, misappropriate or infringe on any third party’s rights.\n                  </li>\n                </ul>\n\n                <Box id={'privacy-policy'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    4. PRIVACY POLICY\n                  </Heading.h3>\n                  <Text py={2}>\n                    Please refer to our privacy policy available at https://idle.finance/privacy-policy for information about how we collect, use, share and otherwise process information about you.\n                  </Text>\n                </Box>\n\n                <Box id={'proprietary-rights'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    5. PROPRIETARY RIGHTS\n                  </Heading.h3>\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>5.1. Ownership of Services; License to Services</strong><br />\n                      Excluding any open source software (as further described in Section 5.2) or third-party software that the Portal or the Services incorporates, as between you and Idle, Idle owns the Portal and the Services, including all technology, content and other materials used, displayed or provided on the Portal or in connection with the Services (including all intellectual property rights subsisting therein), and hereby grants you a limited, revocable, transferable, license to access and use those portions of the Portal and the Services that are proprietary to Idle.\n                    </li>\n                    <li>\n                      <strong>5.2. Idle License; Open Source Software License; Limitations</strong><br />\n                      The Portal and the Services are governed by the most recent version of the open source license commonly known as the Apache 2.0 a copy of which (as it applies to the Portal and the Services) can be found at:  https://apache.org/licenses/LICENSE-2.0 (as of the date these Terms were last updated) and any other applicable licensing terms for the Portal and the Services in these Terms (collectively, the “Idle License”). You acknowledge that the Portal or the Services may use, incorporate or link to certain open-source components and that your use of the Portal or Services is subject to, and you will comply with any, applicable open-source licenses that govern any such open-source components (collectively, “Open-Source Licenses”). Without limiting the generality of the foregoing, you may not: (a) resell, lease, lend, share, distribute or otherwise permit any third party to use the Portal or the Services; (b) use the Portal or the Services for time-sharing or service bureau purposes; or (c) otherwise use the Portal or the Services in a manner that violates the Idle License or any other Open-Source Licenses.\n                    </li>\n                    <li>\n                      <strong>5.3. Trademarks</strong><br />\n                      Any of Idle’s product or service names, logos, and other marks used in the Portal or as a part of the Services, including Idle's name and logo are trademarks owned by Idle, its Affiliates or its applicable licensors. You may not copy, imitate or use them without Idle’s (or the applicable licensor’s) prior written consent.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'changes-suspension-termination'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    6. CHANGES; SUSPENSION; TERMINATION\n                  </Heading.h3>\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>6.1. Changes to Services</strong><br />\n                      We may, at our sole discretion, from time to time and with or without prior notice to you, modify, suspend or disable, temporarily or permanently, the Services, in whole or in part, for any reason whatsoever, including, but not limited to, as a result of a security incident.\n                    </li>\n                    <li>\n                      <strong>6.2. No Liability</strong><br />\n                      We will not be liable for any losses suffered by you resulting from any modification to any Services or from any suspension or termination, for any reason, of your access to all or any portion of the Portal or the Services.\n                    </li>\n                    <li>\n                      <strong>6.3. Survival</strong><br />\n                      The following sections will survive any termination of your access to the Portal or the Services, regardless of the reasons for its expiration or termination, in addition to any other provision which by law or by its nature should survive: Sections 1, 4, 5, 6.3, and 7-14.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'electronic-notices'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    7. ELECTRONIC NOTICES\n                  </Heading.h3>\n                  <Text py={2}>\n                    You consent to receive all communications, agreements, documents, receipts, notices, and disclosures electronically (collectively, our “Communications”) that we provide in connection with these Terms or any Services. You agree that we may provide our Communications to you by posting them on the Portal or by emailing them to you at the email address you provide in connection with using the Services, if any. You should maintain copies of our Communications by printing a paper copy or saving an electronic copy. You may also contact our support team to request additional electronic copies of our Communications by filing a support request at info@idle.finance.\n                  </Text>\n                </Box>\n\n                <Box id={'indemnification'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    8. INDEMNIFICATION\n                  </Heading.h3>\n                  <Text py={2}>\n                    You will defend, indemnify, and hold harmless us, our Affiliates, and our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers and contractors (collectively, “Indemnified Parties”) from any claim, demand, lawsuit, action, proceeding, investigation, liability, damage, loss, cost or expense, including without limitation reasonable attorneys’ fees, arising out of or relating to (a) your use of, or conduct in connection with, the Portal, Services or Margin Tokens; (b) Ethereum Blockchain assets associated with your Ethereum Address; (c) any feedback or user content you provide to the Portal, if any; (d) your violation of these Terms; or (e) your infringement or misappropriation of the rights of any other person or entity. If you are obligated to indemnify any Indemnified Party, Idle (or, at its discretion, the applicable Indemnified Party) will have the right, in its sole discretion, to control any action or proceeding and to determine whether Idle wishes to settle, and if so, on what terms.\n                  </Text>\n                </Box>\n\n                <Box id={'disclosures-disclaimers'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    9. Disclosures; DISCLAIMERS\n                  </Heading.h3>\n                  <Text py={2}>\n                    Idle is a developer of open-source software. Idle does not operate a digital asset exchange platform or execute peer-to-peer transactions through its Protocol and therefore has no oversight, involvement, or control with respect to your transactions, which are executed through third-party protocols and the Ethereum Blockchain.  The Protocol is an autonomous decentralized web protocol deployed to the Ethereum Blockchain that operates in a disintermediated fashion, and, as such, Idle does not participate in any of these transactions.  In each instance, when you interact with the Protocol, you are interacting with a smart contract that transfers your digital assets to a third-party protocol.\n                  </Text>\n                  <Text py={2}>\n                    [Under U.S. federal law, unless you are an “eligible contract participant” as defined in 7 U.S.C. § 1a(18), your transaction must settle within 28 days. Individuals who do not have more than $10 million invested on a discretionary basis (or $5 million if the transaction is for the purpose of managing risk associated with an asset owned or liability incurred, or reasonably likely to be owned or incurred) are not eligible contract participants and may not enter into transactions using the Idle open-source software that do not result in actual delivery of digital assets within 28 days.]\n                  </Text>\n                  <Text py={2}>\n                    You are responsible for complying with all laws and regulations applicable to your transactions, including, but not limited to, the Commodity Exchange Act and the regulations promulgated thereunder by the U.S. Commodity Futures Trading Commission (“CFTC”), and the federal securities laws and the regulations promulgated thereunder by the U.S. Securities and Exchange Commission (“SEC”).\n                  </Text>\n                  <Text py={2}>\n                    You understand that Idle is not registered or licensed by the CFTC, SEC, the Financial Crimes Enforcement Network or any financial regulatory authority. No financial regulatory authority has reviewed or approved the use of the Idle open-source software. This website and the Idle open-source software do not constitute advice or a recommendation concerning any commodity, security or other asset. Idle is not acting as an investment adviser or commodity trading adviser to any person.\n                  </Text>\n                  <Text py={2}>\n                    Idle does not own or control the underlying software protocols that enable the Protocol to function. In general, the underlying protocols are open-source and anyone can use, copy, modify, and distribute them. Idle is not responsible for operation of the underlying protocols, and Idle makes no guarantee of their functionality, security, or availability.\n                  </Text>\n                  <Text py={2}>\n                    To the maximum extent permitted under Applicable Law, the Portal and the Services (and any of their content or functionality) provided by or on behalf of us are provided on an “AS IS” and “AS AVAILABLE” basis, and we expressly disclaim, and you hereby waive, any representations, conditions or warranties of any kind, whether express or implied, legal, statutory or otherwise, or arising from statute, otherwise in law, course of dealing, or usage of trade, including, without limitation, the implied or legal warranties and conditions of merchantability, merchantable quality, quality or fitness for a particular purpose, title, security, availability, reliability, accuracy, quiet enjoyment and non-infringement of third party rights. Without limiting the foregoing, we do not represent or warrant that the Portal or the Services (including any data relating thereto) will be uninterrupted, available at any particular time or error-free. Further, we do not warrant that errors in the Portal or the Service are correctable or will be correctable.\n                  </Text>\n                  <Text py={2}>\n                    You acknowledge that your data on the Portal may become irretrievably lost or corrupted or temporarily unavailable due to a variety of causes, and agree that, to the maximum extent permitted under Applicable Law, we will not be liable for any loss or damage caused by denial-of-service attacks, software failures, viruses or other technologically harmful materials (including those which may infect your computer equipment), protocol changes by third party providers, Internet outages, force majeure events or other disasters, scheduled or unscheduled maintenance, or other causes either within or outside our control.\n                  </Text>\n                  <Text py={2}>\n                    The disclaimer of implied warranties contained herein may not apply if and to the extent such warranties cannot be excluded or limited under the Applicable Law of the jurisdiction in which you reside.\n                  </Text>\n                </Box>\n\n                <Box id={'exclusion-consequential-related-damages'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    10. EXCLUSION OF CONSEQUENTIAL AND RELATED DAMAGES\n                  </Heading.h3>\n                  <Text py={2}>\n                    In no event shall we (together with our Affiliates, including our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers or contractors) be liable for any incidental, indirect, special, punitive, consequential or similar damages or liabilities whatsoever (including, without limitation, damages for loss of data, information, revenue, goodwill, profits or other business or financial benefit) arising out of or in connection with the Portal and the Services (and any of their content and functionality), any execution or settlement of a transaction, any performance or non-performance of the Services, your Ether, Margin Tokens or any other product, service or other item provided by or on behalf of us, whether under contract, tort (including negligence), civil liability, statute, strict liability, breach of warranties, or under any other theory of liability, and whether or not we have been advised of, knew of or should have known of the possibility of such damages and notwithstanding any failure of the essential purpose of these Terms or any limited remedy hereunder nor is Idle in any way responsible for the execution or settlement of transactions between users of Idle open-source software.\n                  </Text>\n                </Box>\n\n                <Box id={'exclusion-consequential-related-damages'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    11. LIMITATION OF LIABILITY\n                  </Heading.h3>\n                  <Text py={2}>\n                    In no event shall our aggregate liability (together with our Affiliates, including our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers or contractors) arising out of or in connection with the Portal and the Services (and any of their content and functionality), any performance or non-performance of the Services, your Ether, Margin Tokens or any other product, service or other item provided by or on behalf of us, whether under contract, tort (including negligence), civil liability, statute, strict liability or other theory of liability exceed the amount of fees paid by you to us under these Terms, if any, in the twelve (12) month period immediately preceding the event giving rise to the claim for liability.\n                  </Text>\n                </Box>\n\n                <Box id={'dispute-resolution-arbitration'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    12. DISPUTE RESOLUTION AND ARBITRATION\n                  </Heading.h3>\n                  <Text py={2}>\n                    Please read the following section carefully because it requires you to arbitrate certain disputes and claims with Idle and limits the manner in which you can seek relief from us, unless you opt out of arbitration by following the instructions set forth below. In addition, arbitration precludes you from suing in court or having a jury trial.\n                    You and Idle agree that any dispute arising out of or related to these Terms or our Services is personal to you and Idle and that any dispute will be resolved solely through individual action, and will not be brought as a class arbitration, class action or any other type of representative proceeding.\n                  </Text>\n                  <Text py={2}>\n                    Except for small claims disputes in which you or Idle seeks to bring an individual action in small claims court located in the county of your billing address or disputes in which you or Idle seeks injunctive or other equitable relief for the alleged unlawful use of intellectual property, you and Idle waive your rights to a jury trial and to have any dispute arising out of or related to these Terms or our Services resolved in court. Instead, for any dispute or claim that you have against Idle or relating in any way to the Services, you agree to first contact Idle and attempt to resolve the claim informally by sending a written notice of your claim (“Notice”) to Idle by email at info@idle.finance or by certified mail addressed to info@idle.finance. The Notice must (a) include your name, residence address, email address, and telephone number; (b) describe the nature and basis of the claim; (c) set forth the specific relief sought. Our notice to you will be similar in form to that described above. If you and Idle cannot reach an agreement to resolve the claim within thirty (30) days after such Notice is received, then either party may submit the dispute to binding arbitration administered by JAMS or, under the limited circumstances set forth above, in court. All disputes submitted to JAMS will be resolved through confidential, binding arbitration before one arbitrator. Arbitration proceedings will be held in New York City, New York, in accordance with the JAMS Streamlined Arbitration Rules and Procedures (“JAMS Rules”). The most recent version of the JAMS Rules are available on the JAMS website and are hereby incorporated by reference. You either acknowledge and agree that you have read and understand the JAMS Rules or waive your opportunity to read the JAMS Rules and waive any claim that the JAMS Rules are unfair or should not apply for any reason.\n                  </Text>\n                  <Text py={2}>\n                    You and Idle agree that these Terms affect interstate commerce and that the enforceability of this Section 12 will be substantively and procedurally governed by the Federal Arbitration Act, 9 U.S.C. § 1, et seq. (the “FAA”), to the maximum extent permitted by applicable law. As limited by the FAA, these Terms and the JAMS Rules, the arbitrator will have exclusive authority to make all procedural and substantive decisions regarding any dispute and to grant any remedy that would otherwise be available in court, including the power to determine the question of arbitrability. The arbitrator may conduct only an individual arbitration and may not consolidate more than one individual’s claims, preside over any type of class or representative proceeding or preside over any proceeding involving more than one individual.\n                  </Text>\n                  <Text py={2}>\n                    The arbitrator, Idle, and you will maintain the confidentiality of any arbitration proceedings, judgments and awards, including, but not limited to, all information gathered, prepared and presented for purposes of the arbitration or related to the dispute(s) therein. The arbitrator will have the authority to make appropriate rulings to safeguard confidentiality, unless the law provides to the contrary. The duty of confidentiality does not apply to the extent that disclosure is necessary to prepare for or conduct the arbitration hearing on the merits, in connection with a court application for a preliminary remedy or in connection with a judicial challenge to an arbitration award or its enforcement, or to the extent that disclosure is otherwise required by law or judicial decision.\n                  </Text>\n                  <Text py={2}>\n                    You and Idle agree that for any arbitration you initiate, you will pay the filing fee and Idle will pay the remaining JAMS fees and costs. For any arbitration initiated by Idle, Idle will pay all JAMS fees and costs. You and Idle agree that the state or federal courts of the State of New York and the United States sitting in New York City, New York have exclusive jurisdiction over any appeals and the enforcement of an arbitration award.\n                  </Text>\n                  <Text py={2}>\n                    Any claim arising out of or related to these Terms or our Services must be filed within one year after such claim arose; otherwise, the claim is permanently barred, which means that you and Idle will not have the right to assert the claim.\n                  </Text>\n                  <Text py={2}>\n                    You have the right to opt out of binding arbitration within 30 days of the date you first accepted the terms of this Section 12 by emailing us at info@idle.finance. In order to be effective, the opt-out notice must include your full name and address and clearly indicate your intent to opt out of binding arbitration. By opting out of binding arbitration, you are agreeing to resolve disputes in accordance with Section 13.\n                  </Text>\n                  <Text py={2}>\n                    If any portion of this Section 12 is found to be unenforceable or unlawful for any reason, (a) the unenforceable or unlawful provision shall be severed from these Terms; (b) severance of the unenforceable or unlawful provision shall have no impact whatsoever on the remainder of this Section 12 or the parties’ ability to compel arbitration of any remaining claims on an individual basis pursuant to this Section 12; and (c) to the extent that any claims must therefore proceed on a class, collective, consolidated, or representative basis, such claims must be litigated in a civil court of competent jurisdiction and not in arbitration, and the parties agree that litigation of those claims shall be stayed pending the outcome of any individual claims in arbitration. Further, if any part of this Section 12 is found to prohibit an individual claim seeking public injunctive relief, that provision will have no effect to the extent such relief is allowed to be sought out of arbitration, and the remainder of this Section 12 will be enforceable.\n                  </Text>\n                </Box>\n\n                <Box id={'governing-law'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    13. GOVERNING LAW\n                  </Heading.h3>\n                  <Text py={2}>\n                    The interpretation and enforcement of these Terms, and any dispute related to these Terms, the Portal or the Services, will be governed by and construed and enforced in accordance with the laws of the State of Delaware, as applicable, without regard to conflict of law rules or principles (whether of the State of Delaware or any other jurisdiction) that would cause the application of the laws of any other jurisdiction. You agree that we may initiate a proceeding related to the enforcement or validity of our intellectual property rights in any court having jurisdiction. With respect to any other proceeding that is not subject to arbitration under these Terms, the state and federal courts located in Wilmington, Delaware, will have exclusive jurisdiction. You waive any objection to venue in any such courts.\n                  </Text>\n                </Box>\n\n                <Box id={'miscellaneous'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    14. MISCELLANEOUS\n                  </Heading.h3>\n                  <Text py={2}>\n                    Any right or remedy of Idle set forth in these Terms is in addition to, and not in lieu of, any other right or remedy whether described in these Terms, under Applicable Law, at law or in equity. Our failure or delay in exercising any right, power, or privilege under these Terms shall not operate as a waiver thereof. The invalidity or unenforceability of any of these Terms shall not affect the validity or enforceability of any other of these Terms, all of which shall remain in full force and effect. We will have no responsibility or liability for any failure or delay in performance of the Portal or any of the Services, or any loss or damage that you may incur, due to any circumstance or event beyond our control, including without limitation any flood, extraordinary weather conditions, earthquake, or other act of God, fire, war, insurrection, riot, labor dispute, accident, action of government, communications, power failure, or equipment or software malfunction. You may not assign or transfer any right to use the Portal or the Services, or any of your rights or obligations under these Terms, without our express prior written consent, including by operation of law or in connection with any change of control. We may assign or transfer any or all of our rights or obligations under these Terms, in whole or in part, without notice or obtaining your consent or approval. Headings of sections are for convenience only and shall not be used to limit or construe such sections. These Terms contain the entire agreement and supersede all prior and contemporaneous understandings between the parties regarding the Portal and the Services. In the event of any conflict between these Terms and any other agreement you may have with us, these Terms will control unless the other agreement specifically identifies these Terms and declares that the other agreement supersedes these Terms.\n                  </Text>\n                </Box>\n\n              </Box>\n            </Flex>\n          </Box>\n        </Box>\n        <Footer />\n      </Box>\n    );\n  }\n}\n\nexport default Tos;\n","import baseColors, { blue, green, yellow, red } from \"./colors\";\nimport { tint, shade } from 'polished';\n\n// theme.js\nexport default {\n  breakpoints: ['52em', '64em'],\n  // breakpoints: ['40em', '52em', '64em', '80em'],\n  fontSizes: [12, 14, 16, 18, 21, 32, 38, 48, 54, 64, 72, 84],\n  fontWeights: [0, 300, 400, 600, 700, 800],\n  letterSpacings: [0, 1, 2, 4, 8],\n  lineHeights: {\n    solid: 1,\n    title: 1.25,\n    copy: 1.5,\n  },\n  fonts: {\n    serif: '\"georgia regular\", athelas, times, serif',\n    sansSerif: '\"Inter\", -apple-system, sans-serif',\n    counter: '\"Roboto Mono\", Arial, -apple-system, sans-serif'\n  },\n  space: [0, 4, 8, 16, 32, 64, 128, 256],\n  radii: ['0', '4px', '8px', '16px', '2rem'],\n  width: [0, 16, 32, 64, 128, 256],\n  minWidths: [0, 16, 32, 64, 128, 256],\n  maxWidths: [0, 16, 32, 64, 128, 256, 512, 768, 1024, 1536],\n  heights: [0, 16, 32, 64, 128, 256],\n  minHeights: [0, 16, 32, 64, 128, 256],\n  maxHeights: [0, 16, 32, 64, 128, 256],\n  borders: [0, '1px solid #0d2034','1px solid #475d7c'],\n  borderWidths: ['0', '1px', '2px', '4px'],\n  shadows: [\n    '0',\n    '0px 2px 4px rgba(0, 0, 0, 0.1)',\n    '0 7px 14px rgba(50,50,93,.1)',\n    '1px 1px 0px rgba(0,0,0,0.2)',\n    '0px 0px 16px 2px rgb(71,93,123,0.6)'\n  ],\n  opacity: {\n    disabled: 0.4,\n  },\n  colors: {\n    primary: '#fcfcfc',\n    'gradient-bg': 'linear-gradient(120deg, #f6d365 0%, #ea0d73 100%)',\n    'primary-light': blue.light[1],\n    'primary-dark': blue.dark[1],\n    bgBlue: '#0030e0',\n    blue: '#0036ff',\n    tick: \"#00b84a\",\n    'dark-blue': '#00219a',\n    skyBlue: '#00abfe',\n    lightBlue: '#79f4e1',\n    copyColor: '#fcfcfc',\n    subColor: '#a7a7a7',\n    black: baseColors.black,\n    'near-black': '#1e3657',\n    'dark-gray': '#fcfcfc',\n    'mid-gray': '#999',\n    gray: ' #e0e0e0',\n    grey: '#CCC',\n    silver: '#999',\n    'light-silver': '#aaa',\n    'moon-gray': '#ccc',\n    'light-gray': '#eee',\n    'near-white': '#a4aec6',\n    white: '#fff',\n    transparent: 'transparent',\n    green:'#00b84a',\n    /*\n    NEW COLORS\n    */\n    newblue: \"#2B65D9\",\n    alert:'#ff9900',\n    arrowActive:'#d8d8d8',\n    arrowInactive:'#4f4f4f',\n    selectBgFocused:'#1e3657',\n    selectBg:'#162e4d',\n    backButtonBg:'#162e4d',\n    lineChartStroke:'#a4aec6',\n    wrongNetworkBannerBg:'#0e2133',\n    dashboardBg: '#13273f',\n    statValue: '#a4aec6',\n    boxBorder: '#eeeeee',\n    cellTitle: '#a4aec6',\n    cellText: '#a4aec6',\n    divider: '#a4aec6',\n    counter: '#a4aec6',\n    redeem: '#00a9fe',\n    link:'#00a9fe',\n    deposit: '#0239ff',\n    migrate: '#00a9fe',\n    legend: '#c9c9c9',\n    cardBg:'#162e4d',\n    menuBg:'#162e4d',\n    menuHover:'#1e3657',\n    flashColor:'#bac5ff',\n    cardBgHover:'#1e3657',\n    cardBorder:'#0d2034',\n    pageActive:'#d8d8d8',\n    pageInactive:'#4f4f4f',\n    menuIconActive:'#2a65d9',\n    cardBgContrast:\"#1e3657\",\n    menuRightBorder:'#0d2034',\n    cardHoverShadow:'0px 0px 0px 1px rgb(45 74 114)',\n    transactions:{\n      action:{\n        send:'#10a0dd',\n        swap:'#3d53c0',\n        exit:'#10a0dd',\n        boost:'#ffff00',\n        redeem:'#10a0dd',\n        swapout:'#10a0dd',\n        deposit:'#3d53c0',\n        curvein:'#10a0dd',\n        receive:'#3d53c0',\n        migrate:'#3d53c0',\n        default:'#4f4f4f',\n        curveout:'#3d53c0',\n        withdraw:'#10a0dd',\n        curvedepositin:'#10a0dd',\n        curvedepositout:'#3d53c0'\n      },\n      actionBg:{\n        send:'#ceeff6',\n        swap:'#ced6ff',\n        exit:'#ceeff6',\n        boost:'#ff7979',\n        redeem:'#ceeff6',\n        swapout:'#ceeff6',\n        deposit:'#ced6ff',\n        curvein:'#ceeff6',\n        default:'#dadada',\n        receive:'#ced6ff',\n        migrate:'#ced6ff',\n        withdraw:'#ceeff6',\n        curveout:'#ced6ff',\n        curvedepositin:'#ceeff6',\n        curvedepositout:'#ced6ff'\n      },\n      status:{\n        completed:'#00b84a',\n        pending:'#a5a5a5',\n        failed:'#fa0000'\n      }\n    },\n    blacks: [\n      'rgba(0,0,0,.0125)',\n      'rgba(0,0,0,.025)',\n      'rgba(0,0,0,.05)',\n      'rgba(0,0,0,.1)',\n      'rgba(0,0,0,.2)',\n      'rgba(0,0,0,.3)',\n      'rgba(0,0,0,.4)',\n      'rgba(0,0,0,.5)',\n      'rgba(0,0,0,.6)',\n      'rgba(0,0,0,.7)',\n      'rgba(0,0,0,.8)',\n      'rgba(0,0,0,.9)',\n    ],\n    whites: [\n      'rgba(255,255,255,.0125)',\n      'rgba(255,255,255,.025)',\n      'rgba(255,255,255,.05)',\n      'rgba(255,255,255,.1)',\n      'rgba(255,255,255,.2)',\n      'rgba(255,255,255,.3)',\n      'rgba(255,255,255,.4)',\n      'rgba(255,255,255,.5)',\n      'rgba(255,255,255,.6)',\n      'rgba(255,255,255,.7)',\n      'rgba(255,255,255,.8)',\n      'rgba(255,255,255,.9)',\n    ],\n  },\n  zIndices: [0, 9, 99, 999, 9999],\n  messageStyle: {\n    base: {\n      color: '#fcfcfc',\n      borderColor: '#0d2034',\n      backgroundColor: '#162e4d',\n    },\n    success: {\n      color: shade(0.4, green.base),\n      backgroundColor: tint(0.9, green.base),\n      borderColor: green.base,\n    },\n    warning: {\n      color: shade(0.4, yellow.base),\n      backgroundColor: tint(0.9, yellow.base),\n      borderColor: yellow.base,\n    },\n    danger: {\n      color: shade(0.4, red.base),\n      backgroundColor: tint(0.9, red.base),\n      borderColor: red.base,\n    },\n    info: {\n      color: '#fcfcfc',\n      borderColor: '#0d2034',\n      backgroundColor: '#162e4d',\n    },\n  },\n  buttons: {\n    primary: {\n      color: blue.text,\n      backgroundColor: blue.base,\n      // use css custom props\n      '--main-color': blue.base,\n      '--contrast-color': blue.text,\n    },\n    normal: {\n      color: baseColors.black,\n      '--contrast-color': baseColors.black,\n    },\n    success: {\n      '--main-color': green.base,\n      '--contrast-color': green.text,\n    },\n    danger: {\n      '--main-color': red.base,\n      '--contrast-color': red.text,\n    },\n  },\n  buttonSizes: {\n    small: {\n      fontSize: '0.75rem',\n      height: '2rem',\n      minWidth: '2rem',\n      padding: '0 1rem',\n    },\n    medium: {\n      fontSize: '1rem',\n      height: '3rem',\n      minWidth: '3rem',\n    },\n    large: {\n      fontSize: '1.5rem',\n      height: '4rem',\n      minWidth: '4rem',\n      borderRadius: '2rem'\n    },\n  },\n};\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class TorusConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: Torus, initParams, ...rest } = kwargs;\n    super(rest);\n\n    this.torus = null;\n    this.Torus = Torus;\n    this.initParams = initParams;\n  }\n\n  async onActivation() {\n    if (!this.torus) {\n      this.torus = new this.Torus({\n        buttonPosition: \"bottom-right\" // default: bottom-left\n      });\n    }\n    await this.torus.init();\n    await this.torus.login();\n  }\n\n  async getProvider(){\n    return new Promise( async (resolve, reject) => {\n      resolve(this.torus.provider);\n    });\n  }\n\n  async getAccount(provider) {\n    const userInfo = await this.torus.getUserInfo();\n    if (userInfo){\n      return await this.torus.getPublicAddress({\n        verifier:userInfo.verifier,\n        verifierId:userInfo.verifierId\n      });\n    }\n    return null;\n  }\n\n  async onDeactivation() {\n    await this.torus.logout();\n  }\n\n  changeNetwork(network) {\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class AuthereumConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: Authereum, network, ...rest } = kwargs;\n    super(rest);\n\n    this.authereum = null;\n    this.Authereum = Authereum;\n    this.network = network;\n  }\n\n  async onActivation() {\n    if (!this.authereum) {\n      this.authereum = new this.Authereum(this.network);\n    }\n    const provider = await this.getProvider();\n    if (provider){\n      await provider.enable();\n      return provider;\n    }\n  }\n\n  async getProvider(){\n    return new Promise( async (resolve, reject) => {\n      resolve(this.authereum.getProvider());\n    });\n  }\n\n  async getAccount(provider) {\n    if (provider){\n      const accounts = await provider.getAccounts();\n      if (accounts && accounts.length){\n        return accounts[0];\n      }\n    }\n    return null;\n  }\n\n  async disable() {\n    const provider = await this.getProvider();\n    if (provider){\n      await provider.disable();\n      return provider;\n    }\n  }\n\n  changeNetwork(network) {\n    this.constructor({\n      api: this.Authereum,\n      network\n    })\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class GnosisSafeConnector extends Connector {\n\n  constructor(SafeAppConnector) {\n    super(...arguments);\n    this.safeLoaded = false;\n    this.SafeAppConnector = SafeAppConnector;\n    this.provider = new this.SafeAppConnector();\n    this.checkSafeApp();\n  }\n\n  async onActivation() {\n    if (!this.provider) {\n      this.provider = new this.SafeAppConnector();\n    }\n\n    if (this.provider){\n      await this.provider.activate();\n      return this.provider;\n    }\n  }\n\n  async getAccount() {\n    if (this.provider){\n      return await this.provider.getAccount();\n    }\n  }\n\n  async getProvider(){\n    if (this.provider){\n      return await this.provider.getProvider();\n    }\n  }\n\n  async getSafeInfo() {\n    if (this.provider){\n      return await this.provider.getSafeInfo();\n    }\n  }\n\n  async getChainId() {\n    if (this.provider){\n      return await this.provider.getChainId();\n    }\n  }\n\n  async checkSafeApp() {\n    if (this.provider){\n      const isSafeApp = await this.provider.isSafeApp();\n      this.safeLoaded = true;\n      return isSafeApp;\n    }\n  }\n\n  async disable() {\n    if (this.provider){\n      this.provider.deactivate();\n      return this.provider;\n    }\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class WalletLinkConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: WalletLink, appName, infuraUrl, chainId, appLogoUrl, ...rest } = kwargs;\n    super(rest);\n\n    this.provider = null;\n    this.walletLink = null;\n    this.appName = appName;\n    this.chainId = chainId;\n    this.infuraUrl = infuraUrl;\n    this.appLogoUrl = appLogoUrl;\n    this.WalletLink = WalletLink;\n  }\n\n  async onActivation() {\n    if (!this.walletLink){\n      this.walletLink = new this.WalletLink({\n        darkMode: false,\n        appName: this.appName,\n        infuraUrl: this.infuraUrl,\n        appLogoUrl: this.appLogoUrl,\n      });\n    }\n\n    const provider = this.getProvider();\n    if (provider){\n      await provider.enable();\n      return provider;\n    }\n  }\n\n  getProvider(){\n    if (!this.provider){\n      this.provider = this.walletLink.makeWeb3Provider(this.infuraUrl, this.chainId);\n    }\n    return this.provider;\n  }\n\n  async getAccount(provider) {\n    if (provider){\n      // Use eth_RequestAccounts\n      const accounts = await provider.send('eth_requestAccounts');\n      if (accounts && accounts.length){\n        return accounts[0];\n      }\n    }\n    return null;\n  }\n\n  async disable() {\n    const provider = this.getProvider();\n    if (provider){\n      this.walletLink.disconnect();\n      await provider.close();\n      return provider;\n    }\n  }\n\n  changeNetwork(network) {\n    this.constructor({\n      network,\n      api: this.WalletLink,\n      appName: this.appName,\n      chainId: this.chainId,\n      infuraUrl: this.infuraUrl,\n      appLogoUrl: this.appLogoUrl,\n    })\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class WalletConnectConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: WalletConnectProvider, defaultNetwork, infuraId, ...rest } = kwargs;\n    super(rest);\n\n    this.provider = null;\n    this.WalletConnectProvider = WalletConnectProvider;\n    this.infuraId = infuraId;\n  }\n\n  async onActivation() {\n    if (!this.provider) {\n      this.provider = new this.WalletConnectProvider({\n        infuraId:this.infuraId\n      });\n    }\n\n    if (this.provider){\n      await this.provider.enable();\n      return this.provider;\n    }\n  }\n\n  async getProvider(){\n    return this.provider;\n  }\n\n  async disable() {\n    if (this.provider){\n      this.provider.close();\n      return this.provider;\n    }\n  }\n}\n","import WalletLink from 'walletlink';\nimport AuthereumApi from 'authereum';\nimport PortisApi from \"@portis/web3\";\nimport FortmaticApi from \"fortmatic\";\nimport TrezorApi from \"trezor-connect\";\nimport { Connectors } from \"web3-react\";\nimport TorusApi from '@toruslabs/torus-embed';\nimport globalConfigs from '../configs/globalConfigs';\nimport TorusConnector from './connectors/TorusConnector';\nimport AuthereumConnector from './connectors/AuthereumConnector';\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport GnosisSafeConnector from './connectors/GnosisSafeConnector';\nimport WalletLinkConnector from './connectors/WalletLinkConnector';\nimport { SafeAppConnector } from '@gnosis.pm/safe-apps-web3-react';\nimport WalletConnectConnector from './connectors/WalletConnectConnector';\n\nconst {\n  InjectedConnector,\n  NetworkOnlyConnector,\n  TrezorConnector,\n  LedgerConnector,\n  FortmaticConnector,\n  PortisConnector\n} = Connectors;\n\nconst env = process.env;\n\nconst manifestEmail = env.REACT_APP_TREZOR_MANIFEST_EMAIL; // trezor\nconst manifestAppUrl = env.REACT_APP_TREZOR_MANIFEST_URL; // trezor\nconst defaultNetwork = globalConfigs.network.requiredNetwork;\nconst fortmaticApiKey = env.REACT_APP_FORTMATIC_KEY_MAINNET;\nconst portisDAppId = env.REACT_APP_PORTIS_DAPP_ID;\nconst portisNetwork = env.REACT_APP_PORTIS_NETWORK;\n\nconst supportedNetworkURLs = {};\n  \nObject.keys(globalConfigs.network.providers.infura).forEach((networkId,index) => {\n  supportedNetworkURLs[networkId] = globalConfigs.network.providers.infura[networkId]+env.REACT_APP_INFURA_KEY;\n});\n\nconst Injected = new InjectedConnector({\n  supportedNetworks: globalConfigs.network.enabledNetworks\n});\n\nconst Infura = new NetworkOnlyConnector({\n  providerURL: globalConfigs.network.providers.infura[defaultNetwork]+env.REACT_APP_INFURA_KEY\n});\n\n\nconst Trezor = new TrezorConnector({\n  api: TrezorApi,\n  supportedNetworkURLs,\n  defaultNetwork,\n  manifestEmail,\n  manifestAppUrl\n});\n\nconst Ledger = new LedgerConnector({\n  supportedNetworkURLs,\n  defaultNetwork\n});\n\nconst WalletConnect = new WalletConnectConnector({\n  defaultNetwork,\n  supportedNetworkURLs,\n  api: WalletConnectProvider,\n  infuraId:env.REACT_APP_INFURA_KEY,\n  bridge: \"https://bridge.walletconnect.org\",\n});\n\nconst Fortmatic = new FortmaticConnector({\n  api: FortmaticApi,\n  apiKey: fortmaticApiKey,\n  logoutOnDeactivation: false\n});\n\nconst Portis = new PortisConnector({\n  api: PortisApi,\n  dAppId: portisDAppId,\n  network: portisNetwork\n});\n\nconst Authereum = new AuthereumConnector({\n  api: AuthereumApi,\n  network: globalConfigs.network.availableNetworks[defaultNetwork].name.toLowerCase()\n});\n\nconst walletLink = new WalletLinkConnector({\n  api: WalletLink,\n  darkMode: false,\n  chainId: defaultNetwork,\n  appName: globalConfigs.appName,\n  infuraUrl: supportedNetworkURLs[defaultNetwork],\n  appLogoUrl: 'https://idle.finance/images/idle-mark.png',\n});\n\nconst Torus = new TorusConnector({\n  api: TorusApi,\n  initParams:{\n    buildEnv: 'production', // default: production\n    enableLogging: false, // default: false\n    network: {\n      host: globalConfigs.network.availableNetworks[defaultNetwork].name.toLowerCase(), // default: mainnet\n      chainId: defaultNetwork, // default: 1\n      networkName: globalConfigs.network.availableNetworks[defaultNetwork].name.toLowerCase() // default: Main Ethereum Network\n    },\n    showTorusButton: false // default: true\n  }\n});\n\nconst gnosis = new GnosisSafeConnector(SafeAppConnector);\n\nexport default {\n  Injected,\n  Infura,\n  WalletConnect,\n  gnosis,\n  walletLink,\n  Fortmatic,\n  Portis,\n  Authereum,\n  Torus,\n  Trezor,\n  Ledger,\n};","import React from \"react\";\nimport { Box, Flex, Text, Icon } from \"rimble-ui\";\n\nclass WrongNetworkBanner extends React.Component {\n  render() {\n    const bannerStyle = {\n      position: \"fixed\",\n      bottom: 0,\n      left: 0,\n      right: 0,\n      width: \"100%\",\n      zIndex: 9999\n    };\n\n    return (\n      <Box style={bannerStyle} backgroundColor={'wrongNetworkBannerBg'} p={3}>\n        <Flex alignItems={\"center\"}>\n          <Box p={4}>\n            <Icon name=\"Warning\" color=\"gold\" size=\"30\" />\n          </Box>\n          <Flex flexDirection={\"column\"}>\n            <Text fontWeight={\"bold\"}>\n              Looks like you're on the wrong network\n            </Text>\n            <Text>\n              You should be on the {this.props.network.required.name} Ethereum\n              network. You are currently connected to the{\" \"}\n              <Text.span style={{ textTransform: \"capitalize\" }}>\n                {this.props.network.current.name}\n              </Text.span>{\" \"}\n              Network - please switch to the correct network.\n            </Text>\n          </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default WrongNetworkBanner;\n","import React from \"react\";\n\nimport WrongNetworkBanner from \"./components/WrongNetworkBanner\";\n\nclass NetworkUtil extends React.Component {\n  render() {\n    return (\n      <div>\n        { this.props.network.isCorrectNetwork === false && this.props.web3\n          ?\n            <WrongNetworkBanner\n              network={this.props.network}\n            />\n          :\n            null\n        }\n      </div>\n    );\n  }\n}\n\nexport default NetworkUtil;\n","import React from \"react\";\nimport { Box, Heading, Text, Modal, Link } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport RimbleUtil from \"@rimble/utils\";\n\nclass NoWeb3BrowserModal extends React.Component {\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2\n          fontSize={4}\n          fontWeight={3}\n          lineHeight={\"1.375em\"}\n          my={3}\n        >\n          Switch browsers to use the Idle App\n        </Heading.h2>\n\n        {RimbleUtil.isMobileDevice() ? (\n          <Text my={4}>\n            You can't use our blockchain features, like increasing the count\n            value, in this browser. We recommend using{\" \"}\n            <Link\n              href=\"https://status.im/\"\n              title=\"status.im website\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Status\n            </Link>\n            ,{\" \"}\n            <Link\n              href=\"https://www.cipherbrowser.com/\"\n              title=\"Cipher Wallet\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Cipher\n            </Link>{\" \"}\n            or{\" \"}\n            <Link\n              href=\"https://wallet.coinbase.com/\"\n              title=\"Coinbase Wallet\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Coinbase wallet\n            </Link>{\" \"}\n            browsers.\n          </Text>\n        ) : (\n          <Box>\n            <Text my={4}>\n              You can't use our blockchain features, like increasing the\n              count value, in this browser. Switch to{\" \"}\n              <Link\n                href=\"https://brave.com/download/\"\n                title=\"Download Brave browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Brave\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.mozilla.org/\"\n                title=\"Download FireFox browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                FireFox\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.opera.com/download\"\n                title=\"Download Opera Browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Opera\n              </Link>\n              , or{\" \"}\n              <Link\n                href=\"https://www.google.com/chrome/\"\n                title=\"Download Chrome browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Chrome\n              </Link>{\" \"}\n              to continue.\n            </Text>\n\n            <Text>\n              <Text.span bold>Rather use your phone?</Text.span> You can use\n              the Idle App in mobile browser wallets like{\" \"}\n              <Link\n                href=\"https://status.im/\"\n                title=\"status.im website\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Status\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.cipherbrowser.com/\"\n                title=\"Cipher Wallet\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Cipher\n              </Link>{\" \"}\n              or{\" \"}\n              <Link\n                href=\"https://wallet.coinbase.com/\"\n                title=\"Coinbase Wallet\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Coinbase wallet\n              </Link>\n              .\n            </Text>\n          </Box>\n        )}\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default NoWeb3BrowserModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Flex,\n  Icon,\n  Modal,\n  Link,\n  Button\n} from \"rimble-ui\";\n\nclass NoWalletModal extends React.Component {\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card p={5} maxWidth={\"600px\"}>\n          <Button.Text\n            icononly\n            icon={\"Close\"}\n            color={\"moon-gray\"}\n            position={\"absolute\"}\n            top={0}\n            right={0}\n            mt={3}\n            mr={3}\n            onClick={this.props.closeModal}\n          />\n\n          <Flex flexDirection={\"column\"} justifyContent={\"space-between\"}>\n            <Flex justifyContent={\"center\"} my={4}>\n              <Icon name=\"Warning\" color=\"gold\" size=\"40\" />\n            </Flex>\n\n            <Heading.h2 my={3}>No Wallet Available</Heading.h2>\n\n            <Text my={4}>\n              Your current browser does not have a blockchain connected wallet.\n              Try using MetaMask, Fortmatic, Portis.\n            </Text>\n\n            <Link\n              href=\"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              <Button.Outline size=\"small\">Get MetaMask Extension</Button.Outline>\n            </Link>\n          </Flex>\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default NoWalletModal;\n","// Checks for MetaMask\nconst GeneralUtil = {\n  hasMetaMask: () => {\n    let hasMetaMask = false;\n\n    if (typeof window.ethereum !== \"undefined\") {\n      hasMetaMask = typeof window.ethereum.isMetaMask !== \"undefined\";\n    } else if (typeof window.web3 !== 'undefined') {\n      hasMetaMask = typeof window.web3.currentProvider.isMetaMask !== 'undefined' && window.web3.currentProvider.isMetaMask;\n    }\n\n    return hasMetaMask;\n  },\n  isTrustWallet: () => {\n    if (typeof window.web3 !== \"undefined\" && typeof window.web3.currentProvider !== 'undefined'){\n      return typeof window.web3.currentProvider.isTrust !== 'undefined' && window.web3.currentProvider.isTrust;\n    }\n    return false;\n  },\n  isCoinbaseWallet: () => {\n    if (typeof window.web3 !== \"undefined\" && typeof window.web3.currentProvider !== 'undefined'){\n      return typeof window.web3.currentProvider.isCoinbaseWallet !== 'undefined' && window.web3.currentProvider.isCoinbaseWallet;\n    }\n    return false;\n  },\n  hasDapper: () => {\n    let hasDapper = typeof window.DapperEthereum !== 'undefined';\n\n    if (typeof window.ethereum !== \"undefined\") {\n      hasDapper = typeof window.ethereum.isDapper !== \"undefined\" && window.ethereum.isDapper;\n    }\n\n    return hasDapper;\n  },\n  isOpera: () => {\n    return /Opera|OPR\\//.test(navigator.userAgent);\n  },\n  // Current device is Android\n  isAndroid: () => {\n    const isAndroid = /android/i.test(navigator.userAgent) ? true : false;\n\n    return isAndroid;\n  },\n  // Current device is iOS\n  isIos() {\n    const isIos =\n      /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream\n        ? true\n        : false;\n\n    return isIos;\n  }\n};\n\nexport default GeneralUtil;\n","import React from \"react\";\nimport {\n  Heading,\n  Text,\n  Flex,\n  Modal,\n  Button,\n  Box,\n  Loader\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport GeneralUtil from \"../GeneralUtil\";\nimport RimbleUtils from \"@rimble/utils\";\n\nclass WrongNetworkModal extends React.Component {\n  renderContent = () => {\n    return (\n      <ModalCard.Body>\n        <Heading.h2 my={3}>\n          Switch to the {this.props.network.required.name} network in{\" \"}\n          {GeneralUtil.hasMetaMask() ? `MetaMask` : `Settings`}\n        </Heading.h2>\n\n        <Text my={4}>\n          The Idle App only works on the{\" \"}\n          <Text.span style={{ textTransform: \"capitalize\" }}>\n            {this.props.network.required.name}\n          </Text.span>{\" \"}\n          network. You’re currently on the{\" \"}\n          <Text.span style={{ textTransform: \"capitalize\" }}>\n            {\" \"}\n            {this.props.network.current.name}\n          </Text.span>{\" \"}\n          network.\n        </Text>\n\n        {GeneralUtil.hasMetaMask() && !RimbleUtils.isMobileDevice() ? (\n          <Box bg={\"#f6f6fc\"} p={3} display={[\"none\", \"block\"]}>\n            <Flex alignItems={\"center\"}>\n              <Box position={\"relative\"} width={\"4em\"}>\n                <Box>\n                  <Loader size={\"3em\"} />\n                </Box>\n              </Box>\n              <Box>\n                <Text fontWeight={4}>Waiting for the right network...</Text>\n                <Text fontWeight={2}>\n                  Go to your Wallet and to switch\n                </Text>\n              </Box>\n            </Flex>\n          </Box>\n        ) : null}\n\n        <Box display={[\"block\", \"none\"]}>\n          <Button onClick={this.props.closeModal} width={1}>\n            OK\n          </Button>\n        </Box>\n      </ModalCard.Body>\n    )\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <React.Fragment>\n            {this.renderContent()}\n          </React.Fragment>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default WrongNetworkModal;\n","import React from \"react\";\nimport { Heading, Text, Box, Flex, Icon } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\n\nfunction TransactionFeeModal(props) {\n  return (\n    <Box>\n      <ModalCard.Header title={'Transaction fees, what are you paying for?'} subtitle={'You need to pay a fee to use the Ethereum blockchain.'} subtitle2={'This pays for someone to process your transaction and store the data.'}></ModalCard.Header>\n      <ModalCard.Body>\n        <Flex flexDirection={['column', 'row']}\n          justifyContent={\"space-between\"}\n          my={[0, 4]}>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"Fingerprint\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Undeniable proof</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              You get a public record of any funds you send or receive, a bit like\n              a deed for a house.\n            </Text>\n          </Box>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"EnhancedEncryption\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Unbreakable encryption</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              Your funds can only ever go to your intended recipients.\n            </Text>\n          </Box>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"AccountBalance\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n              <Icon\n                name=\"NotInterested\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Unparalleled control</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              You can pay or get paid without using any banks or companies.\n            </Text>\n          </Box>\n        </Flex>\n      </ModalCard.Body>\n    </Box>\n  );\n}\n\nexport default TransactionFeeModal;\n","import React from 'react'\nimport moment from 'moment';\nimport connectors from '../App/connectors';\nimport { useWeb3Context } from 'web3-react';\nimport GeneralUtil from \"../utilities/GeneralUtil\";\nimport ImageButton from '../ImageButton/ImageButton';\nimport globalConfigs from '../configs/globalConfigs';\nimport styles from './Web3ConnectionButtons.module.scss';\nimport { Button, Box, Text, Flex, Link } from 'rimble-ui';\n\nconst LOG_ENABLED = false;\nconst customLog = (...props) => { if (LOG_ENABLED) console.log(moment().format('HH:mm:ss'),...props); };\n\nexport default function Web3ConnectionButtons(props) {\n  const context = useWeb3Context();\n\n  if (!context.active && !context.error) {\n    customLog('context loading', context);\n  } else if (context.error) {\n    customLog('context error', context);\n  } else {\n    customLog('context success', context);\n  }\n\n  const setConnector = async (connectorName,name) => {\n    let walletProvider = connectorName === 'Injected' ? name : connectorName;\n    if (localStorage) {\n      localStorage.setItem('walletProvider', walletProvider);\n      localStorage.setItem('connectorName', connectorName);\n    }\n\n    if (props.setConnector && typeof props.setConnector === 'function'){\n      props.setConnector(connectorName,walletProvider);\n    }\n    \n    // Close modal\n    if (typeof props.connectionCallback === 'function'){\n      props.connectionCallback();\n    }\n\n    return connectorName;\n    // return await context.setConnector(connectorName);\n  };\n\n  const unsetConnector = async () => {\n    context.unsetConnector();\n    if (props.setConnector && typeof props.setConnector === 'function'){\n      props.setConnector('Infura','Infura');\n    }\n  };\n\n  // Show provider fields to detect in-app browser\n  // alert(JSON.stringify(Object.keys(window.web3.currentProvider)));\n    \n  const isOpera = GeneralUtil.isOpera();\n  const isDapper = GeneralUtil.hasDapper();\n  const isMetamask = GeneralUtil.hasMetaMask();\n  const isTrustWallet = GeneralUtil.isTrustWallet();\n  const isGnosisSafe = !!connectors.gnosis.provider.safe;\n  const isCoinbaseWallet = GeneralUtil.isCoinbaseWallet();\n  const browserWalletDetected = isMetamask || isOpera || isDapper || isCoinbaseWallet || isTrustWallet;\n  \n  const allowedConnectors = props.allowedConnectors;\n  const registerPage = props.registerPage;\n\n  if (connectors.Portis) {\n    if (registerPage) {\n      connectors.Portis.options = connectors.Portis.options || {};\n      connectors.Portis.options.registerPageByDefault = true;\n    } else {\n      connectors.Portis.options = connectors.Portis.options || {};\n      connectors.Portis.options.registerPageByDefault = false;\n    }\n  }\n\n  let basicConnectorsName = Object.keys(connectors).filter(c => c !== 'Infura');\n\n  if (allowedConnectors) {\n    basicConnectorsName = basicConnectorsName.filter(n => allowedConnectors.map((v) => { return v.toLowerCase(); }).indexOf(n.toLowerCase()) !== -1 );\n  }\n\n  // Handle Gnosis Safe connector\n  if (isGnosisSafe){\n    const injectedIndex = basicConnectorsName.indexOf('Injected');\n    // Remove Injected\n    basicConnectorsName.splice(injectedIndex,1);\n    // Remove Gnosis\n    const gnosisIndex = basicConnectorsName.indexOf('gnosis');\n    basicConnectorsName.splice(gnosisIndex,1);\n    // Insert Gnosis in first place\n    basicConnectorsName.unshift('gnosis');\n  } else {\n    const gnosisIndex = basicConnectorsName.indexOf('gnosis');\n    // Remove Gnosis\n    basicConnectorsName.splice(gnosisIndex,1);\n  }\n\n  const buttons = basicConnectorsName.map( (connectorName,index) => {\n    switch (connectorName) {\n      case 'Injected':\n        if (browserWalletDetected) {\n          let name = null;\n          if (isMetamask) {\n            name = 'Metamask';\n          } else if (isOpera) {\n            name = 'Opera';\n          } else if (isDapper){\n            name = 'Dapper';\n          } else if (isCoinbaseWallet){\n            name = 'Coinbase';\n          } else if (isTrustWallet){\n            name = 'TrustWallet';\n          }\n\n          const connectorInfo = globalConfigs.connectors[name.toLowerCase()];\n          if (connectorInfo && connectorInfo.enabled){\n            const walletIcon = connectorInfo.icon ? connectorInfo.icon : `${name.toLowerCase()}.svg`;\n            return (\n              <Flex\n                width={1}\n                key={`wallet_${name}`}\n                justifyContent={'space-between'}\n                style={{\n                  flex:'0 100%',\n                }}\n                flexDirection={['column','row']}\n              >\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={name}\n                  isMobile={true}\n                  width={[1,0.48]}\n                  imageProps={{width:'auto',height:'42px'}}\n                  imageSrc={`images/connectors/${walletIcon}`}\n                  handleClick={ async () => await setConnector(connectorName,name)}\n                  subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using ${name}` }\n                />\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  isMobile={true}\n                  width={[1,0.48]}\n                  caption={'Watch Address'}\n                  imageSrc={`images/tokens/ETH.svg`}\n                  subcaption={'Watch an Ethereum address'}\n                  imageProps={{width:'auto',height:'42px'}}\n                  handleClick={ e => props.setCustomAddress(true) }\n                />\n              </Flex>\n            )\n          }\n          return null;\n        } else {\n          const connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n          return (\n            <ImageButton\n              buttonProps={{\n                border:2\n              }}\n              isMobile={true}\n              caption={'Browser Wallet'}\n              key={`wallet_${connectorName}`}\n              imageProps={{width:'auto',height:'42px'}}\n              imageSrc={`images/connectors/browser-wallet.png`}\n              handleClick={ async () => await setConnector(connectorName) }\n              subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using a browser wallet`}\n              buttonStyle={ props.isMobile ? {justifyContent:'flex-start',flex:'0 100%'} : {justifyContent:'flex-start',flex:'0 48%'} }\n            />\n          );\n        }\n      default:\n        const connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n        if (connectorInfo && connectorInfo.enabled){\n          const walletIcon = connectorInfo.iconModal ? connectorInfo.iconModal : (connectorInfo.icon ? connectorInfo.icon : `${connectorName.toLowerCase()}.svg`);\n\n          let caption = connectorInfo.name ? connectorInfo.name : connectorName;\n          return (\n            <ImageButton\n              buttonProps={{\n                border:2\n              }}\n              isMobile={true}\n              caption={caption}\n              key={`wallet_${connectorName}`}\n              imageSrc={`images/connectors/${walletIcon}`}\n              imageProps={{width:'auto',height:'42px'}}\n              handleClick={ async () => await setConnector(connectorName) }\n              subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using ${connectorName}`}\n              buttonStyle={ props.isMobile ? {justifyContent:'flex-start',flex:'0 100%'} : {justifyContent:'flex-start',flex:'0 48%'} }\n            />\n          );\n        }\n        return null;\n    }\n  });\n\n  return (\n    <Box width={[1]}>\n      <Flex flexDirection={'column'} alignItems={\"center\"}>\n        {context.error && (\n          <Text.p textAlign=\"center\">\n            An error occurred, are you using an Ethereum browser such as\n            <Link href=\"https://metamask.io/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">\n              &nbsp; Metamask &nbsp;\n            </Link>\n             or\n            <Link href=\"https://www.meetdapper.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">\n              &nbsp; Dapper\n            </Link>\n            ?\n            If you do not have an Ethereum wallet follow the\n            \"I'm new to Ethereum\" flow when connecting.\n            If you do have a wallet, click Reset and retry one of the wallet listed below,\n            Generic wallet option is used for Ethereum browsers only.\n          </Text.p>\n        )}\n        {(context.active || (context.error && context.connectorName)) && context.connectorName !== 'Infura' && (\n          <Button.Outline\n            width={[1/2]}\n            className={[styles.button]}\n            mb={[1, 3]}\n            size={'large'}\n            key={'reset'}\n            onClick={async () => await unsetConnector()}\n          >\n            {context.active ? \"Deactivate Connector\" : \"Reset\"}\n          </Button.Outline>\n        )}\n      </Flex>\n      <Flex\n        flexWrap={'wrap'}\n        flexDirection={'row'}\n        justifyContent={'space-between'}\n      >\n        {buttons}\n      </Flex>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport {\n  Box,\n  Text,\n  Link,\n  Icon,\n  Flex,\n  Field,\n  Modal,\n  Input,\n  Loader,\n  Button,\n  Heading\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard.js';\nimport styles from './Header.module.scss';\nimport FunctionsUtil from '../FunctionsUtil.js';\nimport ImageButton from '../../ImageButton/ImageButton.js';\nimport TransactionFeeModal from \"./TransactionFeeModal.js\";\nimport Web3ConnectionButtons from \"../../Web3ConnectionButtons/Web3ConnectionButtons.js\";\n\nimport {\n  Link as RouterLink\n} from \"react-router-dom\";\n\nclass ConnectionModal extends React.Component {\n  // TODO save pref in localstorage and do not show 'Before connecting' info every time\n  state = {\n    validated:false,\n    showTxFees:false,\n    customAddress:'',\n    currentSection:null,\n    showInstructions:false,\n    askCustomAddress:false,\n    closeRemainingTime:null,\n    customAddressError:false,\n    newToEthereumChoice:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  toggleShowTxFees = e => {\n    e.preventDefault();\n\n    this.setState({\n      showTxFees: !this.state.showTxFees\n    });\n  }\n\n  setStoredSection = () => {\n    let currentSection = null;\n    if (localStorage){\n      currentSection = localStorage.getItem('currentSection');\n      if (currentSection){\n        this.setState({\n          currentSection\n        });\n      }\n    }\n    return currentSection;\n  }\n\n  componentDidMount = () => {\n    this.loadUtils();\n    this.setStoredSection();\n  }\n\n  componentDidUpdate = () => {\n    this.loadUtils();\n  }\n\n  resetModal = e => {\n    this.setState({\n      showTxFees: false,\n      currentSection:null,\n      askCustomAddress:false,\n      showInstructions: false,\n      newToEthereumChoice:null,\n    });\n  }\n\n  setConnector = async (connectorName,name) => {\n    let walletProvider = connectorName === 'Injected' ? name : connectorName;\n\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory:'Connect',\n      eventLabel:walletProvider,\n      eventAction:'select_wallet'\n    });\n\n    if (this.props.setConnector && typeof this.props.setConnector === 'function'){\n      this.props.setConnector(connectorName,walletProvider);\n    }\n\n    // Set Wallet choice\n    this.setState({\n      newToEthereumChoice: connectorName\n    });\n\n    this.closeCountdown();\n\n    return connectorName;\n\n    // return await window.RimbleWeb3_context.setConnector(connectorName);\n  }\n\n  closeCountdown = () => {\n    const closeRemainingTime = this.state.closeRemainingTime ? this.state.closeRemainingTime-1 : 5;\n    if (!closeRemainingTime){\n      this.closeModal();\n    } else {\n      setTimeout(() => { this.closeCountdown() },1000);\n    }\n    this.setState({\n      closeRemainingTime\n    });\n  }\n\n  setWalletChoice = (e,choice) => {\n    e.preventDefault();\n    this.setState({\n      newToEthereumChoice: choice\n    });\n  }\n\n  closeModal = () => {\n    // Reset modal\n    this.resetModal();\n    // Set latest stored sections\n    this.setStoredSection();\n    // Close modal\n    this.props.closeModal();\n  }\n\n  setCurrentSection = (e,currentSection) => {\n    e.preventDefault();\n    this.setState({\n      currentSection\n    });\n\n    if (currentSection!=='instructions'){\n      // Send Google Analytics event\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Connect',\n        eventAction: 'select_mode',\n        eventLabel: currentSection\n      });\n\n      this.functionsUtil.setLocalStorage('currentSection',currentSection);\n    }\n  }\n\n  connectCustomAddress = () => {\n    const addressValid = this.functionsUtil.checkAddress(this.state.customAddress);\n    if (addressValid){\n      this.setCustomAddress(false);\n      this.functionsUtil.setCustomAddress(this.state.customAddress);\n      this.setConnector('custom','custom');\n      setTimeout(() => { this.closeModal() },1000);\n      return true;\n    } else {\n      return this.setState({\n        customAddressError:true\n      });\n    }\n  }\n\n  updateCustomAddress = (e) => {\n    const customAddressError = false;\n    const customAddress = e.target.value;\n    const validated = this.functionsUtil.checkAddress(customAddress);\n    this.setState({\n      validated,\n      customAddress,\n      customAddressError\n    });\n  }\n\n  setCustomAddress = (askCustomAddress) => {\n    this.setState({\n      askCustomAddress\n    });\n  }\n\n  renderModalContent = () => {\n\n    const TOSacceptance = (\n      <Box>\n        <Text textAlign={'center'} fontSize={1} py={[2,3]}>By connecting, I accept Idle's <RouterLink to=\"/terms-of-service\" color={'primary'} style={{color:this.props.theme.colors.primary,textDecoration:'underline'}} target={'_blank'} rel=\"nofollow noopener noreferrer\">Terms of Service</RouterLink></Text>\n      </Box>\n    );\n\n    const newToEthereum = this.state.currentSection === 'new';\n    const showConnectionButtons = this.state.currentSection === 'wallet';\n    const showInstructions = this.state.currentSection === 'instructions';\n\n    if (showInstructions){\n      return (\n        <React.Fragment>\n          <ModalCard.Header title={'Before you connect'} subtitle={'Connecting lets you use Idle via your Ethereum account.'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              flexDirection={['column', 'row']}\n              justifyContent={\"space-between\"}\n              my={[0, 3]}\n            >\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"Public\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>The blockchain is public</Heading>\n                <Text fontSize={1} textAlign={'center'}>\n                  Your Ethereum account activity is public on the\n                  blockchain. Choose an account you don’t mind being\n                  linked with your activity here.\n                </Text>\n              </Box>\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"AccountBalanceWallet\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>Have some Ether for fees</Heading>\n                <Text fontSize={1} mb={3} textAlign={'center'}>\n                  You’ll need Ether to pay transaction fees. Buy Ether\n                  from exchanges like Coinbase or directly via enabled wallet\n                  such as Portis or Dapper.<br />\n                  <Link\n                    title=\"Learn about Ethereum transaction fees\"\n                    fontWeight={'0'}\n                    color={'blue'}\n                    textAlign={'center'}\n                    hoverColor={'blue'}\n                    href=\"#\"\n                    onClick={this.toggleShowTxFees}\n                  >\n                    What are transaction fees?\n                  </Link>\n                </Text>\n              </Box>\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"People\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>Have the right account ready</Heading>\n                <Text fontSize={1} textAlign={'center'}>\n                  If you have multiple Ethereum accounts, check that the\n                  one you want to use is active in your browser.\n                </Text>\n              </Box>\n            </Flex>\n          </ModalCard.Body>\n        </React.Fragment>\n      );\n    }\n\n    if (this.state.askCustomAddress){\n      return (\n        <Box>\n          <ModalCard.Header\n            title={'Connect ETH wallet'}\n            icon={'images/idle-mark.png'}\n            subtitle={'And get started with Idle.'}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              width={1}\n              minWidth={[1,'30em']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Field\n                width={1}\n                label={'Ethereum address'}\n              >\n                <Input\n                  required\n                  width={1}\n                  type={'text'}\n                  className={styles.input}\n                  borderColor={'cardBorder'}\n                  backgroundColor={'cardBg'}\n                  pattern={'^0x[a-fA-F0-9]{40}$'}\n                  value={this.state.customAddress}\n                  onChange={ e => this.updateCustomAddress(e) }\n                  placeholder={'Insert a valid Ethereum address'}\n                />\n              </Field>\n              {\n                this.state.customAddressError && (\n                  <Text\n                    mb={2}\n                    fontSize={2}\n                    color={'red'}\n                    fontWeight={3}\n                    textAlign={'center'}\n                  >\n                    Insert a valid Ethereum Address\n                  </Text>\n                )\n              }\n              <Button\n                px={[3,4]}\n                mx={'auto'}\n                fontWeight={3}\n                size={'medium'}\n                fontSize={[2,2]}\n                borderRadius={4}\n                contrastColor={'primary'}\n                className={[styles.gradientButton]}\n                onClick={ e => this.connectCustomAddress() }\n              >\n                CONNECT\n              </Button>\n            </Flex>\n            <Flex\n              pt={3}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <Link\n                hoverColor={'blue'}\n                textAlign={'center'}\n                onClick={ e => this.setCustomAddress(false) }\n              >\n                Select another Wallet\n              </Link>\n            </Flex>\n            { TOSacceptance }\n          </ModalCard.Body>\n        </Box>\n      );\n    }\n\n    if (showConnectionButtons) {\n      return (\n        <Box>\n          <ModalCard.Header title={'Select your Wallet'} subtitle={'And get started with Idle.'} icon={'images/idle-mark.png'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex width={1} px={[0,5]} flexDirection={'column'} justifyContent={'center'}>\n              <Web3ConnectionButtons\n                width={1/2}\n                isMobile={this.props.isMobile}\n                setConnector={this.setConnector}\n                connectionCallback={this.closeModal}\n                size={this.props.isMobile ? 'medium' : 'large'}\n                setCustomAddress={this.setCustomAddress.bind(this)}\n              />\n            </Flex>\n            <Flex pt={3} alignItems={'center'} justifyContent={'center'}>\n              <Link textAlign={'center'} hoverColor={'blue'} onClick={ e => this.setCurrentSection(e,'new') }>I don't have a wallet</Link>\n            </Flex>\n            { TOSacceptance }\n          </ModalCard.Body>\n        </Box>\n      );\n    }\n\n    if (newToEthereum) {\n      return (\n        <React.Fragment>\n          <ModalCard.Header title={'Let\\'s create your first Ethereum wallet'} icon={'images/idle-mark.png'}></ModalCard.Header>\n          <ModalCard.Body>\n            {\n              !this.state.newToEthereumChoice ? (\n                <Flex width={1} px={[0,4]} flexDirection={'column'} justifyContent={'center'}>\n                  <Box mb={3}>\n                    <Text fontSize={[2,3]} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                      Connect with e-mail or phone number?\n                    </Text>\n                  </Box>\n                  <Flex mb={3} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                    <ImageButton\n                      buttonProps={{\n                        border:2\n                      }}\n                      caption={'Use e-mail'}\n                      imageSrc={'images/email.svg'}\n                      isMobile={this.props.isMobile}\n                      subcaption={'Powered by Portis'}\n                      handleClick={ e => this.setConnector('Portis','Portis') }\n                      imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {mb:'3px',width:'auto',height:'55px'}}\n                    />\n                    <ImageButton\n                      buttonProps={{\n                        border:2\n                      }}\n                      caption={'Use phone number'}\n                      isMobile={this.props.isMobile}\n                      imageSrc={'images/mobile.svg'}\n                      subcaption={'Powered by Fortmatic'}\n                      handleClick={ e => this.setConnector('Fortmatic','Fortmatic') }\n                      imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {mb:'3px',width:'auto',height:'55px'}}\n                    />\n                  </Flex>\n                  <Flex alignItems={'center'} justifyContent={'center'}>\n                    <Link textAlign={'center'} hoverColor={'blue'} onClick={ e => this.setCurrentSection(e,'wallet') }>I already have a wallet</Link>\n                  </Flex>\n                </Flex>\n              ) : (\n                <Box>\n                  <Text fontSize={3} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                    We are connecting you to {this.state.newToEthereumChoice} wallet provider...\n                  </Text>\n                  <Flex\n                    mt={2}\n                    justifyContent={'center'}\n                    alignItems={'center'}\n                    textAlign={'center'}>\n                    <Loader size=\"40px\" /> <Text ml={2} color={'dark-gray'}>Closing in {this.state.closeRemainingTime} seconds...</Text>\n                  </Flex>\n                </Box>\n              )\n            }\n            { TOSacceptance }\n          </ModalCard.Body>\n        </React.Fragment>\n      );\n    }\n\n    return (\n      <React.Fragment>\n        <ModalCard.Header title={'Connect to Idle'} icon={'images/idle-mark.png'}></ModalCard.Header>\n        <ModalCard.Body>\n          {\n            <Flex\n              width={1}\n              px={[0,4]}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Box mb={3}>\n                <Text\n                  fontWeight={2}\n                  fontSize={[2,3]}\n                  lineHeight={1.5}\n                  textAlign={'center'}\n                >\n                  How do you want to connect to Idle?\n                </Text>\n              </Box>\n              <Flex\n                mb={[2,3]}\n                alignItems={'center'}\n                justifyContent={'center'}\n                flexDirection={['column','row']}\n              >\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={`Ethereum wallet`}\n                  isMobile={this.props.isMobile}\n                  subcaption={'Choose your favourite'}\n                  imageSrc={'images/ethereum-wallet.svg'}\n                  handleClick={ e => this.setCurrentSection(e,'wallet') }\n                  imageProps={this.props.isMobile ? {width:'auto',height:'42px'} : {width:'auto',height:'55px',marginBottom:'5px'}}\n                />\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={`New wallet`}\n                  isMobile={this.props.isMobile}\n                  subcaption={'Use email / phone'}\n                  imageSrc={'images/new-wallet.png'}\n                  handleClick={ e => this.setCurrentSection(e,'new') }\n                  imageProps={this.props.isMobile ? {width:'auto',height:'42px'} : {width:'auto',height:'55px',marginBottom:'5px'}}\n                />\n              </Flex>\n              <Flex\n                alignItems={'center'}\n                justifyContent={'center'}\n              >\n                <Link\n                  color={'primary'}\n                  hoverColor={'primary'}\n                  onClick={ e => this.setCustomAddress(true) }\n                >\n                  Watch Ethereum Address\n                </Link>\n              </Flex>\n            </Flex>\n          }\n          { TOSacceptance }\n        </ModalCard.Body>\n      </React.Fragment>\n    );\n  }\n\n  renderFooter = () => {\n\n    if (this.state.newToEthereumChoice || (this.state.currentSection && this.state.askCustomAddress)){\n      return null;\n    }\n\n    return (\n      <ModalCard.Footer>\n        { !this.state.currentSection ? (\n            <Button\n              className={[styles.gradientButton,styles.empty]}\n              onClick={ e => this.setCurrentSection(e,'instructions') }\n              size={'medium'}\n              borderRadius={4}\n              contrastColor={'blue'}\n              fontWeight={3}\n              fontSize={[2,2]}\n              mx={'auto'}\n              px={[4,5]}\n            >\n              READ INSTRUCTIONS\n            </Button>\n          ) : (!this.state.askCustomAddress || this.state.currentSection==='instructions') && (\n            <Button\n              className={[styles.gradientButton,styles.empty]}\n              onClick={this.resetModal}\n              size={'medium'}\n              borderRadius={4}\n              contrastColor={'blue'}\n              fontWeight={3}\n              fontSize={[2,2]}\n              mx={'auto'}\n              px={[4,5]}\n            >\n              BACK\n            </Button>\n          )\n        }\n      </ModalCard.Footer>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.closeModal}>\n          {this.state.showTxFees === false ? (\n            <React.Fragment>\n              {this.renderModalContent()}\n              {this.renderFooter()}\n            </React.Fragment>\n          ) : (\n            <Box>\n              <TransactionFeeModal />\n              {this.renderFooter()}\n            </Box>\n          )}\n\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionModal;\n","import React from \"react\";\nimport {\n  Heading,\n  Text,\n  Modal,\n  Flex,\n  Box,\n  Loader\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport GeneralUtil from \"../GeneralUtil\";\n\nclass ConnectionPendingModal extends React.Component {\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2 my={3}>Connect Ethereum account</Heading.h2>\n\n        <Text my={4}>\n          Confirm the request that's just appeared. If you can't see a\n          request, open your{\" \"}\n          {GeneralUtil.hasMetaMask()\n            ? `MetaMask extension`\n            : `eth wallet settings`}\n          .\n        </Text>\n\n        <Box bg={\"#f6f6fc\"} p={3} display={[\"none\", \"block\"]}>\n          <Flex alignItems={\"center\"}>\n            <Box position={\"relative\"} width={\"4em\"}>\n              <Box>\n                <Loader size={\"3em\"} />\n              </Box>\n            </Box>\n            <Box>\n              <Text fontWeight={4}>\n                Waiting for connection confirmation...\n              </Text>\n              <Text fontWeight={2}>This won’t cost you any Ether</Text>\n            </Box>\n          </Flex>\n        </Box>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionPendingModal;\n","import React from \"react\";\nimport { Heading, Text, Flex, Button, Modal } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\n\nclass UserRejectedConnectionModal extends React.Component {\n  sendMessageAgain = event => {\n    this.props.closeModal();\n    this.props.initAccount();\n  };\n\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2 my={3}>\n          You can't continue without connecting your account\n        </Heading.h2>\n\n        <Text my={4}>\n          To use our blockchain features you need to confirm the connection\n          request.\n        </Text>\n\n        <Flex flexDirection={['column', 'row']} justifyContent={\"flex-end\"} mt={4}>\n          <Button.Outline onClick={this.props.closeModal} mr={[0, 3]} mb={[3, 0]}>\n            Cancel connection\n          </Button.Outline>\n          <Button onClick={this.sendMessageAgain}>\n            Try again\n          </Button>\n        </Flex>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default UserRejectedConnectionModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Icon,\n  Modal,\n  Flex,\n  Box,\n  Button,\n  EthAddress,\n  QR,\n  Link\n} from \"rimble-ui\";\nimport TransactionFeeModal from \"./TransactionFeeModal\";\n\nclass LowFundsModal extends React.Component {\n  state = {\n    showSecondary: false,\n    showTxFees: false\n  };\n\n  toggleQRVisible = () => {\n    this.setState({\n      showSecondary: !this.state.showSecondary\n    });\n  };\n\n  toggleShowTxFees = e => {\n    console.log(\"showTxFees\", this.state.showTxFees);\n    e.preventDefault();\n\n    this.setState({\n      showTxFees: !this.state.showTxFees\n    });\n  };\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card\n          pr={[0, 5]}\n          pl={[0, 5]}\n          pt={[\"48px\", 5]}\n          pb={[\"97px\", 4]}\n          maxWidth={\"960px\"}\n          overflow={\"hidden\"}\n          position={\"relative\"}\n        >\n          <Box position={\"relative\"}>\n            <Flex\n              justifyContent={\"flex-end\"}\n              mr={[0, -5]}\n              mt={[\"-48px\", -5]}\n              position={\"absolute\"}\n              top={\"0\"}\n              left={\"0\"}\n              right={\"0\"}\n              bg={\"white\"}\n              zIndex={\"1\"}\n            >\n              <Button.Text\n                icononly\n                icon={\"Close\"}\n                color={\"moon-gray\"}\n                onClick={this.props.closeModal}\n              />\n            </Flex>\n          </Box>\n\n          {this.state.showSecondary === false &&\n          this.state.showTxFees === false ? (\n            <Box>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start primary content */}\n\n                  <Box alignContent=\"center\" py={3}>\n                    <Heading.h2>\n                      Not enough Ether for transaction fees\n                    </Heading.h2>\n                  </Box>\n                  <Text mb={4}>\n                    This is a blockchain action so you’ll have to pay a\n                    transaction fee. A few dollars worth of Ether should be\n                    enough but fees do change based on how busy the network is.{\" \"}\n                    <strong>Fund your account and try again.</strong>{\" \"}\n                    <Link\n                      title=\"Learn about Ethereum transaction fees\"\n                      as={\"a\"}\n                      href=\"#\"\n                      onClick={this.toggleShowTxFees}\n                    >\n                      What are transaction fees?\n                    </Link>\n                  </Text>\n\n                  <Heading.h3>How to add funds</Heading.h3>\n\n                  <Flex\n                    alignItems={\"stretch\"}\n                    mx={0}\n                    mb={[4, 5]}\n                    mt={[3, 4]}\n                    flexWrap={[\"wrap\", \"no-wrap\"]}\n                  >\n                    <Box p={[1, 2]} width={[1, 1 / 2]}>\n                      <Flex\n                        flexDirection={\"column\"}\n                        justifyContent={\"space-between\"}\n                        height={\"100%\"}\n                      >\n                        <Box>\n                          <Heading.h5>Buy ETH from an exchange</Heading.h5>\n                          <Text fontSize=\"1\">\n                            You can buy ETH from exchanges like Coinbase and\n                            send it to your account. If you don’t already have\n                            a Coinbase account, it can take a while to get set\n                            up.\n                          </Text>\n                        </Box>\n\n                        <Button.Outline my={3}>\n                          <Flex alignItems={\"center\"}>\n                            <Icon name=\"OpenInNew\" mr={2} />\n                            Go to CoinBase\n                          </Flex>\n                        </Button.Outline>\n                      </Flex>\n                    </Box>\n                    <Box p={[1, 2]} width={[1, 1 / 2]}>\n                      <Flex\n                        flexDirection={\"column\"}\n                        justifyContent={\"space-between\"}\n                        height={\"100%\"}\n                      >\n                        <Box>\n                          <Heading.h5>\n                            Send ETH from another account\n                          </Heading.h5>\n                          <Text fontSize=\"1\">\n                            If you have ETH in another Ethereum account, you\n                            can send it to this account using your public\n                            Ethereum address or QR code.\n                          </Text>\n                        </Box>\n                        <Button.Outline my={3} onClick={this.toggleQRVisible}>\n                          <Flex alignItems={\"center\"}>\n                            <Icon name=\"FilterCenterFocus\" mr={2} />\n                            Show account QR code\n                          </Flex>\n                        </Button.Outline>\n                      </Flex>\n                    </Box>\n                  </Flex>\n                  {/* End primary content */}\n                </Box>\n              </Box>\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start primary footer */}\n                <Flex borderTop={1} borderColor={\"#eee\"} />\n                <Flex pt={4} justifyContent={[\"center\", \"flex-end\"]}>\n                  <Button onClick={this.props.closeModal} width={[1, \"auto\"]}>\n                    Back to Idle\n                  </Button>\n                </Flex>\n                {/* End primary footer */}\n              </Box>\n            </Box>\n          ) : null}\n\n          {this.state.showSecondary ? (\n            <Box mb={3}>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start secondary content */}\n                  <Flex my={3} justifyContent={\"center\"}>\n                    <QR\n                      size={130}\n                      value={\n                        this.props.account ? this.props.account : \"1234512345\"\n                      }\n                    />\n                  </Flex>\n\n                  <EthAddress my={4} address={this.props.account} />\n                  <Flex mb={3} />\n                  {/* End secondary content */}\n                </Box>\n              </Box>\n\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start secondary footer */}\n                <Flex borderTop={1} borderColor={\"#eee\"} />\n                <Flex mt={4} justifyContent={[\"center\", \"flex-end\"]}>\n                  <Button.Outline\n                    width={[1, \"auto\"]}\n                    onClick={this.toggleQRVisible}\n                  >\n                    Go back\n                  </Button.Outline>\n                </Flex>\n                {/* End secondary footer */}\n              </Box>\n            </Box>\n          ) : null}\n\n          {this.state.showTxFees ? (\n            <Box mb={3}>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start tx fee content */}\n                  <TransactionFeeModal />\n                  {/* End tx fee content */}\n                </Box>\n              </Box>\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start primary footer */}\n                <Flex\n                  pt={4}\n                  justifyContent={[\"center\", \"flex-end\"]}\n                  borderTop={1}\n                  borderColor={\"#eee\"}\n                >\n                  <Button.Outline\n                    width={[1, \"auto\"]}\n                    onClick={this.toggleShowTxFees}\n                  >\n                    Go Back\n                  </Button.Outline>\n                </Flex>\n                {/* End primary footer */}\n              </Box>\n            </Box>\n          ) : null}\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default LowFundsModal;\n","import React from \"react\";\n\nimport NoWeb3BrowserModal from \"./components/NoWeb3BrowserModal\";\nimport NoWalletModal from \"./components/NoWalletModal\";\nimport WrongNetworkModal from \"./components/WrongNetworkModal\";\n\nimport ConnectionModal from \"./components/ConnectionModal\";\nimport ConnectionPendingModal from \"./components/ConnectionPendingModal\";\nimport UserRejectedConnectionModal from \"./components/UserRejectedConnectionModal\";\n\nimport LowFundsModal from \"./components/LowFundsModal\";\n\nclass ConnectionModalUtil extends React.Component {\n  render() {\n    return (\n      <div>\n        <NoWeb3BrowserModal\n          closeModal={this.props.modals.methods.closeNoWeb3BrowserModal}\n          isOpen={this.props.modals.data.noWeb3BrowserModalIsOpen}\n          transaction={this.props.transaction}\n        />\n\n        <NoWalletModal\n          closeModal={this.props.modals.methods.closeNoWalletModal}\n          isOpen={this.props.modals.data.noWalletModalIsOpen}\n          transaction={this.props.transaction}\n        />\n\n        <WrongNetworkModal\n          closeModal={this.props.modals.methods.closeWrongNetworkModal}\n          isOpen={this.props.modals.data.wrongNetworkModalIsOpen}\n          network={this.props.network}\n        />\n\n        <ConnectionModal\n          {...this.props}\n          isMobile={this.props.isMobile}\n          setConnector={this.props.setConnector}\n          currentNetwork={this.props.network.current}\n          validateAccount={this.props.validateAccount}\n          closeModal={this.props.modals.methods.closeConnectionModal}\n          isOpen={ this.props.modals.data.connectionModalIsOpen && !this.props.accountValidated }\n        />\n\n        <ConnectionPendingModal\n          closeModal={this.props.modals.methods.closeConnectionPendingModal}\n          isOpen={this.props.modals.data.accountConnectionPending}\n          currentNetwork={this.props.network.current}\n        />\n        <UserRejectedConnectionModal\n          closeModal={\n            this.props.modals.methods.closeUserRejectedConnectionModal\n          }\n          isOpen={this.props.modals.data.userRejectedConnect}\n          initAccount={this.props.initAccount}\n        />\n\n        <LowFundsModal\n          closeModal={this.props.modals.methods.closeLowFundsModal}\n          isOpen={this.props.modals.data.lowFundsModalIsOpen}\n          currentNetwork={this.props.network.current}\n          account={this.props.account}\n        />\n      </div>\n    );\n  }\n}\n\nexport default ConnectionModalUtil;\n","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Flex,\n  Button\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass ConnectionErrorModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  async closeModal(e){\n    e.preventDefault();\n    // Disconnect to Infura only if the wallet is not logged\n    if (!this.props.account){\n      // await this.props.context.setFirstValidConnector(['Infura']);\n      // this.props.context.setConnector('Infura');\n      this.props.context.unsetConnector();\n      this.props.setConnector('Infura',null);\n      await this.props.context.setFirstValidConnector(['Infura']);\n    }\n    this.props.modals.methods.closeConnectionErrorModal();\n  }\n\n  render() {\n\n    const walletProvider = this.functionsUtil.getWalletProvider();\n    const isLedger = (walletProvider && walletProvider.toLowerCase() === 'ledger') || (typeof this.props.modals.data.connectionError === 'string' && this.props.modals.data.connectionError.toLowerCase().includes('ledger'));\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={ e => this.closeModal(e) }>\n          <ModalCard.Header title={ isLedger ? 'Ledger Error' : `Connection Error` } icon={'images/warning.svg'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={1} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text.p color={'dark-gray'} textAlign={'center'}>\n                The following error occured while trying to connect with your { isLedger ? 'Ledger' : 'account' }:<br />\n                <Text.span color={'red'} fontWeight={3}>\"{this.props.modals.data.connectionError}\"</Text.span><br />\n                {\n                  isLedger ? (\n                    <Text.span>\n                      Make sure that your Ledger is <strong>connected</strong> and <strong>unlocked</strong>. Also check that both <strong>Contract data</strong> and <strong>Browser support</strong> are enabled in the Ledger settings.<br />\n\n                    </Text.span>\n                  ) : 'Make sure that your wallet is unlocked and try again.'\n                }\n              </Text.p>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ async (e) => { await this.closeModal(e); } }\n              >\n              GOT IT\n              </Button>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionErrorModal;","import React from \"react\";\nimport {\n  Text,\n  Link,\n  Flex,\n  Modal,\n  Button\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass TransactionErrorModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  async closeModal(e){\n    e.preventDefault();\n    this.props.modals.methods.closeTransactionErrorModal();\n  }\n\n  render() {\n\n    const isLedgerError = typeof this.props.modals.data.transactionError === 'string' && this.props.modals.data.transactionError.toLowerCase().includes('ledger');\n    const isSlowTxError = typeof this.props.modals.data.transactionError === 'string' && this.props.modals.data.transactionError.toLowerCase().includes('not mined within 50 blocks');\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={ e => this.closeModal(e) }>\n          <ModalCard.Header title={ 'Transaction Error' } icon={'images/warning.svg'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={1} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text.p color={'dark-gray'} textAlign={'center'}>\n                The following error occured while trying to send a transaction:<br />\n                <Text.span color={'red'} fontWeight={3}>\"{this.props.modals.data.transactionError}\"</Text.span><br />\n                {\n                  isLedgerError ? (\n                    <Text.span\n                      fontSize={1}\n                    >\n                      <br />Make sure that your Ledger is <strong>connected</strong> and <strong>unlocked</strong>. Also check that both <strong>Contract data</strong> and <strong>Browser support</strong> are enabled in the Ledger settings.<br />\n                      We also suggest you to connect your Ledger with Metamask, read the <Link fontSize={1} color={'blue'} hoverColor={'blue'} target={'_blank'} rel={\"nofollow noopener noreferrer\"} href={'https://metamask.zendesk.com/hc/en-us/articles/360020394612-How-to-connect-a-Trezor-or-Ledger-Hardware-Wallet'}>instructions here</Link>.\n                    </Text.span>\n                  ) : isSlowTxError ? 'This could happen when the gas price is low, check the transaction status with your Wallet.' : 'Make sure that your have enough funds in your wallet.'\n                }\n              </Text.p>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ async (e) => { await this.closeModal(e); } }\n              >\n              GOT IT\n              </Button>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default TransactionErrorModal;","import Web3 from \"web3\";\nimport React from 'react';\nimport BigNumber from 'bignumber.js';\nimport SimpleID from 'simpleid-js-sdk';\nimport NetworkUtil from \"./NetworkUtil\";\nimport { Biconomy } from \"@biconomy/mexa\";\nimport * as Sentry from '@sentry/browser';\nimport FunctionsUtil from './FunctionsUtil';\nimport MaticJs from '@maticnetwork/maticjs';\nimport globalConfigs from '../configs/globalConfigs';\nimport ConnectionModalUtil from \"./ConnectionModalsUtil\";\n// import detectEthereumProvider from '@metamask/detect-provider';\nimport { IFrameEthereumProvider } from '@ledgerhq/iframe-provider';\nimport ConnectionErrorModal from './components/ConnectionErrorModal';\nimport TransactionErrorModal from './components/TransactionErrorModal';\n\nrequire('dotenv').config();\nconst INFURA_KEY = process.env[\"REACT_APP_INFURA_KEY\"];\n\nconst RimbleTransactionContext = React.createContext({\n  web3: {},\n  account: {},\n  biconomy: {},\n  simpleID: {},\n  contracts: [],\n  web3Infura: {},\n  currentWeb3: {},\n  web3Polygon: {},\n  tokenConfig: {},\n  transactions: {},\n  permitClient: {},\n  web3Providers: {},\n  accountBalance: {},\n  initWeb3: () => {},\n  accountValidated: {},\n  maticPlasmaClient :{},\n  initAccount: () => {},\n  accountBalanceLow: {},\n  initSimpleID: () => {},\n  initContract: () => {},\n  erc20ForwarderClient: {},\n  accountBalanceToken: {},\n  checkPreflight: () => {},\n  validateAccount: () => {},\n  network: {\n    current: {},\n    required: {},\n    checkNetwork: () => {},\n    isCorrectNetwork: null,\n    isSupportedNetwork: null,\n  },\n  accountInizialized: false,\n  getTokenDecimals: () => {},\n  rejectValidation: () => {},\n  getAccountBalance: () => {},\n  contractsInitialized: false,\n  accountValidationPending: {},\n  initializeContracts: () => {},\n  rejectAccountConnect: () => {},\n  enableUnderlyingWithdraw: false,\n  connectAndValidateAccount: () => {},\n  modals: {\n    data: {\n      connectionError: {},\n      lowFundsModalIsOpen: {},\n      noWalletModalIsOpen: {},\n      userRejectedConnect: {},\n      connectionModalIsOpen: {},\n      userRejectedValidation: {},\n      wrongNetworkModalIsOpen: {},\n      accountValidationPending: {},\n      accountConnectionPending: {},\n      noWeb3BrowserModalIsOpen: {},\n      transactionConnectionModalIsOpen: {},\n    },\n    methods: {\n      openLowFundsModal: () => {},\n      closeLowFundsModal: () => {},\n      openWrongNetworkModal: () => {},\n      closeWrongNetworkModal: () => {},\n      openNoWeb3BrowserModal: () => {},\n      closeNoWeb3BrowserModal: () => {},\n      openConnectionErrorModal: () => {},\n      closeConnectionErrorModal: () => {},\n      openTransactionErrorModal: () => {},\n      closeTransactionErrorModal: () => {},\n      openConnectionPendingModal: () => {},\n      closeConnectionPendingModal: () => {},\n      openUserRejectedConnectionModal: () => {},\n      openUserRejectedValidationModal: () => {},\n      closeUserRejectedConnectionModal: () => {},\n      closeUserRejectedValidationModal: () => {},\n    }\n  },\n  transaction: {\n    data: {\n      transactions: {}\n    },\n    meta: {},\n    methods: {}\n  }\n});\n\nlet setConnectorName = null;\nlet biconomyLoginProcessing = false;\n\nclass RimbleTransaction extends React.Component {\n  static Consumer = RimbleTransactionContext.Consumer;\n\n  componentUnmounted = false;\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    const props = Object.assign({},this.props);\n    props.contracts = this.state.contracts;\n    if (this.functionsUtil){\n      props.account = this.state.account;\n      this.functionsUtil.setProps(props);\n    } else {\n      props.account = this.state.account;\n      this.functionsUtil = new FunctionsUtil(props);\n    }\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.checkNetwork();\n\n    // detect Network account change\n    if (window.ethereum){\n      window.ethereum.on('networkChanged', async (networkId) => {\n        this.handleNetworkChanged(networkId);\n        // window.location.reload();\n      });\n    }\n\n    window.initWeb3 = this.initWeb3;\n    window.initAccount = this.initAccount;\n  }\n\n  handleNetworkChanged = async (networkId=null) => {\n    this.functionsUtil.removeStoredItem('cachedRequests');\n    this.functionsUtil.removeStoredItem('cachedRequests_polygon');\n    this.functionsUtil.removeStoredItem('transactions');\n    await this.props.clearCachedData(() => {\n      // console.log(networkId,this.state.network);\n      if (this.state.network.required && networkId && parseInt(networkId) === parseInt(this.state.network.required.id)){\n        window.location.reload();\n      } else {\n        this.setState({\n          web3:null,\n          contracts:[],\n          biconomy:null,\n          permitClient:null,\n          networkInitialized:false,\n          erc20ForwarderClient:null,\n          contractsInitialized:false\n        },() => {\n          this.checkNetwork();\n        });\n      }\n    });\n  }\n\n  componentDidMount = async () => {\n    // this.initSimpleID();\n    // this.initWeb3();\n\n    this.connectGnosisSafe();\n\n    // TEST - Manually triggers transaction error\n    // this.openTransactionErrorModal(null,'Your Ledger device is Ineligible');\n\n    window.testTransaction = (method) => {\n      const transaction = this.createTransaction();\n      transaction.method = method;\n      this.addTransaction(transaction);\n      return transaction;\n    }\n\n    window.updateTransaction = (transaction,hash,status,params) => {\n      // Add meta data to transaction\n      transaction.status = status;\n      transaction.params = params;\n      transaction.type = \"contract\";\n      transaction.created = Date.now();\n      transaction.transactionHash = hash;\n\n      // console.log('window.updateTransaction',transaction);\n\n      this.updateTransaction(transaction);\n      return transaction;\n    }\n  }\n\n  connectGnosisSafe = () => {\n    const gnosisSafeLoaded = this.props.connectors.gnosis.safeLoaded;\n    if (gnosisSafeLoaded){\n      const walletProvider = this.functionsUtil.getWalletProvider();\n      const isGnosisSafe = this.props.connectors.gnosis.safeLoaded && !!this.props.connectors.gnosis.provider.safe;\n      // console.log('isGnosisSafe',this.props.connectors.gnosis.provider.safe,isGnosisSafe);\n      if (isGnosisSafe){\n        this.props.setConnector('gnosis','gnosis');\n      } else if (walletProvider === 'gnosis') {\n        this.props.setConnector('Infura',null);\n      }\n    }\n  }\n\n  componentDidUpdate = async (prevProps, prevState) => {\n\n    this.loadUtils();\n\n    // this.functionsUtil.customLog('componentDidUpdate',prevProps.connectorName,this.props.connectorName,this.props.context.connectorName,this.props.context.active,(this.props.context.error ? this.props.context.error.message : null));\n\n    const gnosisSafeLoaded = !this.state.gnosisSafeLoaded && this.props.connectors.gnosis.safeLoaded;\n    // console.log('gnosisSafeLoaded',this.state.gnosisSafeLoaded,this.props.connectors.gnosis.safeLoaded,gnosisSafeLoaded);\n    if (gnosisSafeLoaded){\n      this.setState({\n        gnosisSafeLoaded:true\n      },() => {\n        this.connectGnosisSafe();\n      });\n    }\n\n    if (prevProps.connectorName !== this.props.connectorName && this.props.connectorName){\n      this.initWeb3();\n    } else if ( prevProps.context !== this.props.context ){\n      if (this.props.context.error instanceof Error && this.props.context.error.message.length){\n        const errorMessage = this.props.context.error.message;\n        const isWalletConnectClosedModalError = (errorMessage === 'User closed WalletConnect modal' || errorMessage === 'User closed modal');\n        // this.functionsUtil.customLog('componentDidUpdate',setConnectorName,errorMessage);\n        if (setConnectorName === 'WalletConnect' && isWalletConnectClosedModalError){\n          // this.functionsUtil.customLog('WalletConnect disconnected! Set Infura connector');\n          this.props.setConnector('Infura',null);\n          // this.functionsUtil.removeStoredItem('walletProvider');\n          // this.functionsUtil.removeStoredItem('connectorName');\n          // this.functionsUtil.setLocalStorage('context',JSON.stringify({active:this.props.context.active,connectorName:'Infura'}));\n          setConnectorName = null;\n          // await this.props.context.setConnector('Infura');\n        } else if (!isWalletConnectClosedModalError) {\n          this.openConnectionErrorModal(null,errorMessage);\n        } else {\n          this.initWeb3();\n        }\n      // WalletConnect double trigger initWeb3\n      } else if (this.props.context.active && this.props.context.connectorName!=='WalletConnect' && this.props.connectorName==='WalletConnect') {\n        this.initWeb3();\n      }\n    } else if ( (this.props.context.connectorName && this.props.context.connectorName !== this.props.connectorName) || prevProps.customAddress !== this.props.customAddress){\n      this.initWeb3();\n    }\n\n    const customAddressChanged = prevProps.customAddress !== this.props.customAddress;\n    const contextAccountChanged = prevProps.context.account !== this.props.context.account;\n    const accountDisconnected = prevProps.connectorName !== this.props.connectorName && this.props.connectorName === 'Infura';\n    if (contextAccountChanged){\n      // console.log('contextAccountChanged',prevProps.context.account,this.props.context.account,contextAccountChanged);\n    }\n    if (accountDisconnected){\n      // console.log('accountDisconnected',prevProps.connectorName,this.props.connectorName,accountDisconnected);\n    }\n    if (customAddressChanged || contextAccountChanged || accountDisconnected){\n      this.initAccount();\n    }\n\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    // const availableTokensChanged = prevProps.availableTokens && this.props.availableTokens && JSON.stringify(Object.keys(prevProps.availableTokens)) !== JSON.stringify(Object.keys(this.props.availableTokens));\n    const availableStrategiesChanged = prevProps.availableStrategies && this.props.availableStrategies && JSON.stringify(Object.keys(prevProps.availableStrategies)) !== JSON.stringify(Object.keys(this.props.availableStrategies));\n\n    // Reset tokenDecimals if token is changed\n    if (tokenChanged){\n      this.setState({\n        tokenDecimals: null\n      });\n    }\n\n    // this.functionsUtil.customLog(prevProps.enableUnderlyingWithdraw,this.props.enableUnderlyingWithdraw,this.state.enableUnderlyingWithdraw);\n    if (prevProps.enableUnderlyingWithdraw !== this.props.enableUnderlyingWithdraw){\n      this.setState({\n        enableUnderlyingWithdraw:this.props.enableUnderlyingWithdraw\n      });\n    }\n\n    if (localStorage){\n      const context = JSON.parse(localStorage.getItem('context'));\n      if (!context || (this.props.context.active !== context.active || this.props.context.connectorName !== context.connectorName)){\n        this.functionsUtil.setLocalStorage('context',JSON.stringify({active:this.props.context.active,connectorName:this.props.context.connectorName}));\n      }\n    }\n\n    if (tokenChanged || availableStrategiesChanged){\n      await this.initializeContracts();\n    }\n\n    const selectedNetworkChanged = prevProps.config.requiredNetwork !== this.props.config.requiredNetwork;\n    if (selectedNetworkChanged){\n      // console.log('selectedNetworkChanged',JSON.stringify(prevProps.config.requiredNetwork),this.props.config.requiredNetwork);\n      this.handleNetworkChanged();\n    }\n\n    const currentNetworkChanged = this.state.networkInitialized && prevState.network.current.id !== this.state.network.current.id;\n    if (currentNetworkChanged){\n      // console.log('requiredNetworkChanged',this.state.networkInitialized,JSON.stringify(prevState.network),JSON.stringify(this.state.network));\n      this.initWeb3();\n    }\n\n    const requiredNetworkChanged = prevState.network.required.id !== this.state.network.required.id;\n    if (requiredNetworkChanged){\n      // console.log('requiredNetworkChanged',this.state.networkInitialized,JSON.stringify(prevState.network),JSON.stringify(this.state.network));\n      this.setState({\n        contracts:[],\n        contractsInitialized:false\n      }, () => {\n        this.initWeb3();\n        if (typeof this.props.setNetwork === 'function'){\n          this.props.setNetwork(this.state.network);\n        }\n      });\n    }\n  }\n\n  initCurrentWeb3 = async () => {\n\n  }\n\n  // Initialize a web3 provider\n  initWeb3 = async (connectorName=null) => {\n\n    // Detect ethereum provider\n    // const metamaskProvider = await detectEthereumProvider();\n    // if (metamaskProvider && (!window.ethereum || window.ethereum !== metamaskProvider)){\n    //   window.ethereum = metamaskProvider;\n    // }\n    if (!this.state.networkInitialized){\n      return false;\n    }\n\n    const context = this.props.context;\n    const networkId = this.state.network.required.id;\n\n    // if (!networkId){\n    //   return false;\n    // }\n\n    const availableNetworks = this.functionsUtil.getGlobalConfig(['network','availableNetworks']);\n    const networkConfig = availableNetworks[networkId];\n    const provider = networkConfig ? networkConfig.provider : 'infura';\n    const web3RpcKey = this.functionsUtil.getGlobalConfig(['network','providers',provider,'key']);\n    const web3Rpc = this.functionsUtil.getGlobalConfig(['network','providers',provider,'rpc',networkId])+web3RpcKey;\n\n    const useWeb3Provider = this.state.networkInitialized && this.state.network.isCorrectNetwork;\n    const web3InfuraRpc = this.functionsUtil.getGlobalConfig(['network','providers','infura','rpc',networkId])+this.functionsUtil.getGlobalConfig(['network','providers','infura','key']);\n    \n    console.log('initWeb3',this.state.network.current.id,networkId,provider,web3Rpc,web3InfuraRpc);\n\n    const enabledNetworks = this.functionsUtil.getGlobalConfig(['network','enabledNetworks']);\n    const web3Providers = Object.keys(availableNetworks).filter( netId => enabledNetworks.includes(parseInt(netId)) ).reduce( (acc,netId) => {\n      const networkConfig = availableNetworks[netId];\n      const providerConfig = this.functionsUtil.getGlobalConfig(['network','providers',networkConfig.provider]);\n      const providerRpc = providerConfig.rpc[netId]+providerConfig.key;\n      acc[netId] = new Web3(new Web3.providers.HttpProvider(providerRpc));\n      return acc;\n    },{});\n\n    const web3Infura = new Web3(new Web3.providers.HttpProvider(web3InfuraRpc));\n\n    let currentWeb3 = context.library;\n    let web3 = useWeb3Provider ? context.library : null;\n\n    // 0x Instant Wallet Provider Injection\n    if (!window.RimbleWeb3_context || context.connectorName !== window.RimbleWeb3_context.connectorName){\n      window.RimbleWeb3_context = context;\n    }\n\n    // Reset setConnectorName if force connectorName\n    if (connectorName){\n      setConnectorName = null;\n    } else {\n      connectorName = this.props.connectorName;\n    }\n\n    // const last_context = localStorage ? JSON.parse(localStorage.getItem('context')) : null;\n\n    // this.functionsUtil.customLog('initWeb3',context.active,connectorName,context.connectorName,context.connector,(web3 && web3.currentProvider ? web3.currentProvider.disable : null),(context.connector ? context.connector.disable : null));\n    if (context && connectorName === 'Infura' && connectorName !== context.connectorName){\n      if (web3 && typeof web3.currentProvider.disable === 'function'){\n        web3.currentProvider.disable();\n      } else if (context.connector && typeof context.connector.disable === 'function'){\n        context.connector.disable();\n      }\n      web3 = null;\n      currentWeb3 = null;\n      setConnectorName = null;\n    }\n\n    const connectorNameChanged = (context.connectorName && context.connectorName !== connectorName) || (connectorName !== 'Infura' && connectorName !== setConnectorName);\n\n    // console.log('context',context.active,connectorNameChanged,context.connectorName,connectorName,setConnectorName);\n\n    if (connectorName !== 'ledgerLive'){\n      if (!context.active || connectorNameChanged) {\n        // Select preferred web3 provider\n        if (connectorName && connectorNameChanged){\n\n          if (connectorName === 'gnosis' && !this.state.gnosisSafeLoaded){\n            return false;\n          }\n\n          // this.functionsUtil.customLog('initWeb3 set connector',connectorName);\n          setConnectorName = connectorName;\n          await context.setConnector(connectorName);\n          // await context.setFirstValidConnector([connectorName, 'Infura']);\n          return web3;\n        }\n      }\n    }\n\n    let web3Host = web3Rpc;\n    let web3Provider = null;\n\n    if (!web3) { // safety web3 implementation\n      if (window.ethereum) {\n        this.functionsUtil.customLog(\"Using modern web3 provider.\");\n        web3Provider = window.ethereum;\n      } else if (window.web3) {\n        this.functionsUtil.customLog(\"Legacy web3 provider. Try updating.\");\n        web3Provider = window.web3;\n      } else {\n        this.functionsUtil.customLog(\"Non-Ethereum browser detected. Using Infura fallback.\");\n        web3Host = web3InfuraRpc;\n      }\n    } else {\n      web3Provider = web3.currentProvider;\n    }\n\n    let forceCallback = false;\n\n    if ((!connectorName || connectorName === 'Infura') && web3Provider && typeof web3Provider.enable === 'function'){\n      try {\n        await web3Provider.enable();\n      } catch (connectionError){\n        web3Provider = null;\n        web3Host = globalConfigs.network.providers.infura[networkId]+INFURA_KEY;\n        forceCallback = true;\n      }\n    }\n\n    // Ledger Live\n    if (connectorName === 'ledgerLive'){\n      web3Provider = new IFrameEthereumProvider();\n    }\n\n    // Injected web3 provider\n    if (web3Provider && useWeb3Provider){\n      web3 = new Web3(web3Provider);\n    // Infura\n    } else if (web3Host) {\n      web3 = new Web3(new Web3.providers.HttpProvider(web3Host));\n      // if (this.state.networkInitialized && connectorName !== 'Infura'){\n      //   this.props.setConnector('Infura',null);\n      // }\n    }\n\n    let web3Polygon = null;\n    let maticPOSClient = null;\n    let maticPlasmaClient = null;\n\n    // const infuraConfig = globalConfigs.network.providers.infura;\n    const polygonConfig = globalConfigs.network.providers.polygon;\n\n    const currentNetwork = this.functionsUtil.getGlobalConfig(['network','availableNetworks',networkId]);\n    const polygonNetworkId = currentNetwork.provider === 'polygon' ? networkId : this.functionsUtil.getGlobalConfig(['network','providers','polygon','networkPairs',networkId]);\n\n    if (polygonConfig && polygonConfig.enabled && polygonConfig.rpc && Object.keys(polygonConfig.rpc).includes(parseInt(polygonNetworkId).toString())){\n      const web3PolygonRpc = polygonConfig.rpc[polygonNetworkId]+this.functionsUtil.getGlobalConfig(['network','providers','polygon','key']);\n      web3Polygon = new Web3(new Web3.providers.HttpProvider(web3PolygonRpc));\n\n      const maticProvider = new Web3(new Web3.providers.HttpProvider(web3PolygonRpc));\n      const parentProvider = new Web3(new Web3.providers.HttpProvider(web3InfuraRpc));\n      // console.log('maticProvider',web3PolygonRpc);\n      // console.log('parentProvider',web3InfuraRpc);\n\n      const maticPOSClientConfig = {\n        maticProvider,\n        parentProvider,\n        network: networkConfig.network,\n        version: networkConfig.version\n      };\n      maticPOSClient = new MaticJs.MaticPOSClient(maticPOSClientConfig);\n\n      // console.log('maticPOSClientConfig',networkConfig,maticPOSClientConfig);\n\n      const maticPlasmaClientConfig = {\n        maticProvider,\n        parentProvider,\n        network: networkConfig.network,\n        version: networkConfig.version\n      };\n      maticPlasmaClient = new MaticJs(maticPlasmaClientConfig);\n    }\n\n    window.web3Polygon = web3Polygon;\n    window.maticPOSClient = maticPOSClient;\n    window.maticPlasmaClient = maticPlasmaClient;\n\n    if (window.ethereum) {\n      currentWeb3 = new Web3(window.ethereum);\n    } else if (window.web3) {\n      currentWeb3 = new Web3(window.web3);\n    } else {\n      currentWeb3 = new Web3(new Web3.providers.HttpProvider(web3Host));\n    }\n\n    this.setState({\n      web3Infura,\n      currentWeb3,\n      web3Polygon,\n      web3Providers,\n      maticPOSClient,\n      maticPlasmaClient\n    },() => {\n      // this.checkNetwork();\n    });\n\n    const web3Callback = async () => {\n\n      window.web3Injected = this.state.web3;\n      // window.web3InfuraInjected = this.state.web3Infura;\n\n      if (typeof this.props.callbackAfterLogin === 'function'){\n        this.props.callbackAfterLogin();\n        this.props.setCallbackAfterLogin(null);\n      }\n\n      // console.log('web3Callback',context.account,this.state.network.isSupportedNetwork,this.state.contractsInitialized,this.state.networkInitialized);\n\n      // After setting the web3 provider, check network\n      try {\n        // if (!this.state.networkInitialized){\n        //   await this.checkNetwork();\n        // }\n\n        if (this.state.network.isSupportedNetwork){\n\n          if (!this.state.contractsInitialized){\n            await this.initializeContracts();\n          }\n\n          if (context.account){\n            // Login with biconomy\n            if (this.state.biconomy){\n              const biconomy = this.state.biconomy;\n              const biconomyInfo = globalConfigs.network.providers.biconomy;\n              if (biconomyInfo.enableLogin && !biconomy.isLogin && !biconomyLoginProcessing){\n                biconomyLoginProcessing = true;\n                biconomy.login(context.account, (error, response) => {\n                  // this.functionsUtil.customLog('biconomy login',error,response);\n                  // Failed to login with Biconomy\n                  if (error) {\n                    return this.setState({\n                      biconomy:false,\n                    },() => {\n                      this.initAccount(context.account);\n                    });\n                  }\n\n                  biconomyLoginProcessing = false;\n\n                  if (response.transactionHash) {\n                    this.initAccount(context.account);\n                  } else if(response.userContract) {\n                    this.initAccount(context.account);\n                  }\n                });\n                return false;\n              }\n            }\n\n            await this.initAccount(context.account);\n          } else {\n\n            await this.initAccount();\n            // await this.setState({\n            //   accountInizialized: true,\n            //   account: this.props.customAddress\n            // });\n          }\n        }\n      // Initialize Infura Web3 and display error\n      } catch (error) {\n        this.openConnectionErrorModal(null,error.message);\n      }\n    }\n\n    // Save original web3 connector in case Mexa initialization fails\n    const originalWeb3 = web3;\n    const biconomyInfo = globalConfigs.network.providers.biconomy;\n    const walletProvider = this.functionsUtil.getWalletProvider();\n\n    if (connectorName !== 'Infura' && biconomyInfo && biconomyInfo.enabled && biconomyInfo.supportedNetworks.includes(networkId) && (!walletProvider || !biconomyInfo.disabledWallets.includes(walletProvider.toLowerCase()))){\n\n      if (this.state.biconomy === null){\n        const biconomyWeb3Provider = web3Provider ? web3Provider : web3Host;\n\n        const biconomy = new Biconomy(biconomyWeb3Provider,biconomyInfo.params);\n\n        if (biconomy && typeof biconomy.onEvent === 'function'){\n          web3 = new Web3(biconomy);\n          biconomy.onEvent(biconomy.READY, () => {\n            if (this.componentUnmounted || this.state.biconomy === false || this.state.biconomy === biconomy){\n              return false;\n            }\n            \n            const permitClient = biconomy.permitClient;\n            const erc20ForwarderClient = biconomy.erc20ForwarderClient;\n\n            const newState = {\n              web3,\n              biconomy,\n              web3Infura,\n              permitClient,\n              web3Providers,\n              erc20ForwarderClient\n            };\n            // console.log('biconomy',newState);\n\n            if (web3 !== this.state.web3){\n              this.setState(newState, web3Callback);\n            }\n          }).onEvent(biconomy.ERROR, (error, message) => {\n            // console.error('Biconomy error',error,message,this.state.biconomy);\n            web3 = originalWeb3;\n            // Handle error while initializing mexa\n            if (this.state.biconomy !== false){\n              this.setState({\n                web3,\n                biconomy:false\n              }, web3Callback);\n            }\n          });\n        } else {\n          this.setState({\n            web3,\n            biconomy:false\n          }, web3Callback);\n        }\n      }\n    } else {\n      if (web3 !== this.state.web3){\n        this.setState({\n          web3\n        }, web3Callback);\n      } else if (context.account || forceCallback){\n        web3Callback();\n      }\n    }\n\n    return web3;\n  }\n\n  initContract = async (name, address, abi, useInfuraProvider=false) => {\n    // console.log(`initContract: ${name} - addr: ${address}`);\n    return await this.createContract(name, address, abi, useInfuraProvider);\n  }\n\n  createContract = async (name, address, abi, useInfuraProvider=false) => {\n\n    const web3Provider = useInfuraProvider && this.state.web3Infura ? this.state.web3Infura : (this.state.network.isCorrectNetwork ? this.state.web3 : this.state.web3Providers[this.state.network.required.id]);\n\n    if (!web3Provider){\n      return null;\n    }\n\n    // console.log(`createContract: ${name} - addr: ${address}`);\n\n    // Create contract on initialized web3 provider with given abi and address\n    try {\n      const contract = new web3Provider.eth.Contract(abi, address);\n      this.setState(state => ({\n        ...state,\n        contracts: [...state.contracts, {name, contract}]\n      }));\n      return {name, contract};\n    } catch (error) {\n      this.functionsUtil.customLogError(\"Could not create contract.\",name,address,error);\n    }\n\n    return null;\n  }\n\n  initSimpleID = () => {\n\n    if (this.state.simpleID){\n      return this.state.simpleID;\n    }\n\n    const simpleIDInfo = globalConfigs.network.providers.simpleID;\n    let simpleID = null;\n    const networkId = this.state.network.current.id || this.state.network.required.id;\n\n    if (simpleIDInfo && simpleIDInfo.enabled && simpleIDInfo.supportedNetworks.indexOf(networkId) !== -1 ){\n      const simpleIDParams = simpleIDInfo.params;\n      simpleIDParams.network = simpleIDInfo.getNetwork(this.state.network.current.id,globalConfigs.network.availableNetworks);\n      simpleID = new SimpleID(simpleIDParams);\n    }\n\n    window.simpleID = simpleID;\n\n    this.setState({\n      simpleID\n    });\n\n    return simpleID;\n  }\n\n  initAccount = async (account=false) => {\n    \n    const customAddress = this.props.customAddress;\n    const walletProvider = this.functionsUtil.getWalletProvider('Infura');\n\n    if (customAddress){\n      // Set custom account\n      return this.setState({\n        account:customAddress,\n        accountInizialized:true,\n      },()=>{\n        this.getAccountBalance();\n      });\n    } else if (this.props.connectorName === 'Infura' || !this.props.connectorName){\n      return this.setState({\n        account:null,\n        accountInizialized:true\n      });\n    }\n\n    try {\n      if (!account){\n        const wallets = await Promise.race([\n            this.state.web3.eth.getAccounts(),\n            new Promise((resolve) => setTimeout(resolve, 300))\n        ]);\n\n        if (wallets && wallets.length){\n          account = wallets[0];\n        }\n      }\n\n      if (!account){\n        account = this.props.context.account;\n      }\n\n      if (!account || this.state.account === account){\n        return this.setState({\n          accountInizialized: true\n        });\n      }\n\n\n      // Request account access if needed\n      if (account){\n\n        // Send address info to SimpleID\n        const simpleID = this.initSimpleID();\n\n        if (simpleID){\n\n          const notifications = await simpleID.notifications();\n\n          if (notifications && notifications.length && window.$crisp){\n\n            let shownNotifications = [];\n            if (localStorage){\n              shownNotifications = localStorage.getItem('shownNotifications') && JSON.parse(localStorage.getItem('shownNotifications')) ? JSON.parse(localStorage.getItem('shownNotifications')) : [];\n            }\n\n            notifications.forEach((n,i) => {\n\n              const notificationId = n.name;\n\n              // Show notification if not shown already\n              if (shownNotifications.indexOf(notificationId) === -1){\n                window.$crisp.push([\"do\", \"message:show\", [\"text\", this.functionsUtil.normalizeSimpleIDNotification(n.content) ]]);\n\n                // Save notification id\n                shownNotifications.push(notificationId);\n              }\n            });\n\n            // Store shown notification\n            if (localStorage){\n              this.functionsUtil.setLocalStorage('shownNotifications',JSON.stringify(shownNotifications));\n            }\n          }\n        }\n\n        // Send Google Analytics connection event\n        this.functionsUtil.sendGoogleAnalyticsEvent({\n          eventCategory: 'Connect',\n          eventAction: 'connected',\n          eventLabel: walletProvider\n        });\n\n        // this.functionsUtil.customLog('initAccount',account);\n\n        // Set custom account\n        this.setState({\n          account,\n          // web3SocketProvider,\n          accountInizialized: true\n        });\n\n        // After account is complete, get the balance\n        this.getAccountBalance();\n\n        // TODO subscribe for account changes, no polling\n        // set a state flag which indicates if the subscribe handler has been\n        // called at least once\n      } else {\n        return this.setState({\n          account:null,\n          accountInizialized: true,\n        });\n      }\n    } catch (error) {\n\n      this.setState({\n        accountInizialized: true\n      });\n\n      // User denied account access...\n      this.functionsUtil.customLog(\"User cancelled connect request. Error:\", error);\n\n      // this.functionsUtil.customLog(error);\n\n      // Catch ledger error\n      if (error && error.message && error.message.includes('MULTIPLE_OPEN_CONNECTIONS_DISALLOWED')) {\n        return;\n      }\n\n      // Send Sentry connection error\n      const isError = error instanceof Error;\n      if (this.functionsUtil.checkUrlOrigin() && isError){\n        Sentry.captureException(error);\n      }\n\n      // Reject Connect\n      // this.rejectAccountConnect(error);\n    }\n  }\n\n  // TODO: Can this be moved/combined?\n  rejectAccountConnect = error => {\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    modals.data.userRejectedConnect = true;\n    this.setState({ modals });\n  }\n\n  getAccountBalance = async (increaseAmount) => {\n\n    increaseAmount = increaseAmount ? this.functionsUtil.BNify(increaseAmount) : null;\n\n    try {\n\n      let [accountBalance,accountBalanceToken,tokenDecimals] = await Promise.all([\n        this.state.web3.eth.getBalance(this.state.account), // Get ETH balance\n        this.getTokenBalance(this.state.account), // Get token balance\n        this.getTokenDecimals()\n      ]);\n\n      // console.log('getAccountBalance',parseFloat(accountBalance));\n\n      if (accountBalance) {\n\n        // Convert to wei if decimals found\n        if (accountBalance.toString().includes('.')){\n          accountBalance = this.state.web3.utils.toWei(accountBalance);\n        }\n\n        // Convert to Eth amount\n        accountBalance = this.state.web3.utils.fromWei(\n          accountBalance,\n          'ether'\n        );\n\n        accountBalance = this.functionsUtil.BNify(accountBalance).toString();\n\n        this.setState({\n          accountBalance\n        });\n\n        this.functionsUtil.customLog(\"account balance: \", accountBalance);\n      }\n\n      // this.functionsUtil.customLog('accountBalance',res,(accountBalanceToken ? accountBalanceToken.toString() : null),tokenDecimals,increaseAmount);\n\n      if (accountBalanceToken) {\n\n        accountBalanceToken = this.functionsUtil.BNify(accountBalanceToken);\n\n        // Increase balance amount if passed and balance didn't change\n        if (increaseAmount && this.state.accountBalanceToken && this.functionsUtil.normalizeTokenAmount(this.state.accountBalanceToken,tokenDecimals).toString() === accountBalanceToken.toString()){\n          accountBalanceToken = accountBalanceToken.plus(increaseAmount);\n        }\n        \n        accountBalanceToken = this.functionsUtil.fixTokenDecimals(accountBalanceToken,tokenDecimals).toString();\n\n        // this.functionsUtil.customLog('increaseAmount',(increaseAmount ? increaseAmount.toString() : '0'),(this.state.accountBalanceToken ? this.state.accountBalanceToken.toString() : '0'),(accountBalanceToken ? accountBalanceToken.toString() : 'ERROR'));\n        // this.functionsUtil.customLog(`account balance ${this.props.selectedToken}: `, accountBalanceToken);\n\n        this.setState({\n          accountBalanceToken,\n          [`accountBalance${this.props.selectedToken}`]:accountBalanceToken\n        });\n\n      } else {\n        this.functionsUtil.customLog('accountBalanceToken is not set:',accountBalanceToken);\n      }\n    } catch (error) {\n      this.functionsUtil.customLogError(\"Failed to get account balance.\", error);\n    }\n  }\n\n  initializeContracts = async () => {\n\n    if (!this.state.web3){\n      return false;\n    }\n\n    const contracts = this.functionsUtil.getGlobalConfig(['contracts',this.state.network.required.id]);\n\n    // console.log('initializeContracts',this.state.network,this.state.web3,contracts,this.props.availableStrategies);\n\n    if (contracts){\n      await this.functionsUtil.asyncForEach(Object.keys(contracts),async (contractName) => {\n        const contractInfo = contracts[contractName];\n        if (contractInfo.address !== null && contractInfo.abi !== null){\n          const useInfuraProvider = !!contractInfo.useInfuraProvider;\n          this.functionsUtil.customLog('initializeContracts, init contract', contractName, contractInfo.address);\n          await this.initContract(contractName, contractInfo.address, contractInfo.abi, useInfuraProvider);\n        }\n      });\n    }\n\n    const govTokens = this.functionsUtil.getGlobalConfig(['govTokens']);\n    if (govTokens){\n      await this.functionsUtil.asyncForEach(Object.keys(govTokens),async (token) => {\n        const govTokenConfig = govTokens[token];\n        if (!govTokenConfig.enabled){\n          return;\n        }\n        // Initialize govToken contracts\n        let foundGovTokenContract = this.state.contracts.find(c => c.name === token);\n        if (!foundGovTokenContract) {\n          const contractAddress = govTokenConfig.addresses && govTokenConfig.addresses[this.state.network.required.id] ? govTokenConfig.addresses[this.state.network.required.id] : govTokenConfig.address;\n          this.functionsUtil.customLog('initializeContracts, init contract', token, contractAddress);\n          await this.initContract(token, contractAddress, govTokenConfig.abi);\n        }\n      });\n    }\n\n    if (this.props.availableStrategies){\n      // Initialize Tokens Contracts\n      await this.functionsUtil.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n        \n        const availableTokens = this.props.availableStrategies[strategy];\n\n        await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n          const tokenConfig = availableTokens[token];\n\n          let foundTokenContract = this.state.contracts.find(c => c.name === token);\n          if (!foundTokenContract) {\n            this.functionsUtil.customLog('initializeContracts, init contract',token, tokenConfig.address);\n            await this.initContract(token, tokenConfig.address, tokenConfig.abi);\n          }\n\n          // Initialize idleTokens contracts\n          let foundIdleTokenContract = this.state.contracts.find(c => c.name === tokenConfig.idle.token);\n          if (!foundIdleTokenContract) {\n            this.functionsUtil.customLog('initializeContracts, init contract',tokenConfig.idle.token, tokenConfig.idle.address);\n            await this.initContract(tokenConfig.idle.token, tokenConfig.idle.address, tokenConfig.idle.abi);\n          }\n\n          // Initialize protocols contracts\n          tokenConfig.protocols.forEach(async (p,i) => {\n            let foundProtocolContract = this.state.contracts.find(c => c.name === p.token);\n            if (!foundProtocolContract) {\n              this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n              await this.initContract(p.token, p.address, p.abi);\n            }\n          });\n\n          // Check migration contract\n          if (tokenConfig.migration){\n\n            if (tokenConfig.migration.oldContract){\n              const oldContract = tokenConfig.migration.oldContract;\n              this.functionsUtil.customLog('initializeContracts, init '+oldContract.name+' contract',oldContract);\n              await this.initContract(oldContract.name, oldContract.address, oldContract.abi);\n            }\n\n            // Initialize protocols contracts\n            if (tokenConfig.migration.oldProtocols){\n              tokenConfig.migration.oldProtocols.forEach(async (p,i) => {\n                let foundProtocolContract = this.state.contracts.find(c => c.name === p.token);\n                if (!foundProtocolContract) {\n                  this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n                  await this.initContract(p.token, p.address, p.abi);\n                }\n              });\n            }\n\n            if (tokenConfig.migration.migrationContract){\n              const migrationContract = tokenConfig.migration.migrationContract;\n              this.functionsUtil.customLog('initializeContracts, init '+migrationContract.name+' contract',migrationContract);\n              await this.initContract(migrationContract.name, migrationContract.address, migrationContract.abi);\n            }\n          }\n        })\n      });\n    }\n\n    if (this.props.availableTranches){\n      await this.functionsUtil.asyncForEach(Object.keys(this.props.availableTranches),async (protocol) => {\n        const tokens = this.props.availableTranches[protocol];\n        await this.functionsUtil.asyncForEach(Object.keys(tokens),async (token) => {\n          const tokenConfig = tokens[token];\n          await Promise.all([\n            this.initContract(tokenConfig.name,tokenConfig.address,tokenConfig.abi),\n            this.initContract(tokenConfig.AA.name,tokenConfig.AA.address,tokenConfig.AA.abi),\n            this.initContract(tokenConfig.BB.name,tokenConfig.BB.address,tokenConfig.BB.abi),\n            this.initContract(tokenConfig.CDO.name,tokenConfig.CDO.address,tokenConfig.CDO.abi),\n            this.initContract(tokenConfig.AA.CDORewards.name,tokenConfig.AA.CDORewards.address,tokenConfig.AA.CDORewards.abi),\n            this.initContract(tokenConfig.BB.CDORewards.name,tokenConfig.BB.CDORewards.address,tokenConfig.BB.CDORewards.abi)\n          ]);\n        });\n      });\n    }\n\n    return this.setState({\n      contractsInitialized:true\n    });\n  }\n\n  getContractByName = async (contractName) => {\n    let contract = this.state.contracts.find(c => c.name === contractName);\n\n    if (!contract && this.props.tokenConfig) {\n      const tokenConfig = this.props.tokenConfig;\n      contract = await this.initContract(contractName, tokenConfig.address, tokenConfig.abi);\n    }\n\n    return contract ? contract.contract : null;\n  }\n\n  getTokenDecimals = async () => {\n    let tokenDecimals = null;\n\n    if (!this.state.tokenDecimals){\n\n      tokenDecimals = await this.functionsUtil.getTokenDecimals(this.props.selectedToken);\n\n      this.setState({\n        tokenDecimals\n      });\n    } else {\n      tokenDecimals = await (new Promise( async (resolve, reject) => {\n        resolve(this.state.tokenDecimals);\n      }));\n    }\n\n    return tokenDecimals;\n  }\n\n  getTokenBalance = async (account) => {\n    const contract = await this.getContractByName(this.props.selectedToken);\n\n    if (!contract) {\n      this.functionsUtil.customLogError('Wrong contract name', this.props.selectedToken);\n      return null;\n    }\n\n    if (!contract.methods['balanceOf']){\n      this.customLogError('Wrong method name balanceOf');\n      return null;\n    }\n\n    return await contract.methods.balanceOf(account).call().catch(error => {\n      this.functionsUtil.customLog(`Failed to get ${this.props.selectedToken} balance`, error);\n    });\n  }\n\n  determineAccountLowBalance = () => {\n    // If provided a minimum from config then use it, else default to 1\n    const accountBalanceMinimum =\n      typeof this.props.config !== \"undefined\" &&\n      typeof this.props.config.accountBalanceMinimum !== \"undefined\"\n        ? this.props.config.accountBalanceMinimum\n        : 1;\n    // Determine if the account balance is low\n    const accountBalanceLow =\n      this.state.accountBalance < accountBalanceMinimum;\n\n    this.setState({\n      accountBalanceLow\n    });\n  }\n\n  connectAndValidateAccount = async (callbackAfterLogin) => {\n    // Check for account\n    if (!this.state.account) {\n      this.props.setCallbackAfterLogin(callbackAfterLogin);\n      // Show modal to connect account\n      this.openConnectionModal();\n    }\n  }\n\n  getRequiredNetwork = () => {\n     const networkId = typeof this.props.config !== \"undefined\" && typeof this.props.config.requiredNetwork !== \"undefined\" ? this.props.config.requiredNetwork : globalConfigs.network.requiredNetwork;\n     const networkName = networkId && globalConfigs.network.availableNetworks[networkId] ? globalConfigs.network.availableNetworks[networkId].name : 'unknown';\n     return {\n       id: networkId,\n       name: networkName\n     };\n   }\n\n   getCurrentNetwork = async (networkId=null) => {\n\n     const currentWeb3 = this.functionsUtil.getCurrentWeb3();\n\n     networkId = parseInt(networkId) || await currentWeb3.eth.net.getId();\n     const networkName = this.functionsUtil.getGlobalConfig(['network','availableNetworks',networkId,'name']) || await currentWeb3.eth.net.getNetworkType();\n\n     return {\n       id:networkId,\n       name:networkName\n     }\n   }\n\n  getNetworkId = async () => {\n    try {\n      return this.state.web3.eth.net.getId((error, networkId) => {\n        let current = { ...this.state.network.current };\n        current.id = networkId;\n        let network = Object.assign({},this.state.network);\n        network.current = current;\n        network.isCorrectNetwork = globalConfigs.network.enabledNetworks.includes(networkId);\n        this.setState({ network });\n      });\n    } catch (error) {\n      this.functionsUtil.customLog(\"Could not get network ID: \", error);\n    }\n  }\n\n  checkNetwork = async (networkId=null) => {\n    let network = {...this.state.network};\n\n    network.required = this.getRequiredNetwork();\n    network.current = await this.getCurrentNetwork(networkId);\n    const networkInitialized = !!network.current.id;\n    network.isCorrectNetwork = !networkInitialized || network.current.id === network.required.id;\n    network.isSupportedNetwork = !network.current.id || globalConfigs.network.enabledNetworks.includes(network.current.id);\n\n    const currentNetworkChanged = network.current.id && network.current.id !== this.state.network.current.id;\n    const requiredNetworkChanged = network.required.id && network.required.id !== this.state.network.required.id;\n\n    if (!this.state.network.current.id || currentNetworkChanged || requiredNetworkChanged || !this.state.networkInitialized){\n      this.setState({\n        network,\n        networkInitialized\n      });\n    }\n  }\n\n  contractMethodSendWrapper = async (contractName, contractMethod, params = [], value = null, callback = null, callback_receipt = null, gasLimit = null, txData = null) => {\n    // Is it on the correct network?\n    if (!this.state.network.isCorrectNetwork) {\n      // wrong network modal\n      this.state.modals.methods.openWrongNetworkModal();\n      return false;\n    }\n\n    // Is a wallet connected and verified?\n    if (!this.state.account) {\n      this.openConnectionModal();\n      if (typeof callback === 'function') {\n        callback(null,'account_not_connected');\n      }\n      return false;\n    }\n\n    // Are there a minimum amount of funds?\n    if (this.state.accountBalanceLow) {\n      this.openLowFundsModal();\n      if (typeof callback === 'function') {\n        callback(null,'account_balance_low');\n      }\n      return false;\n    }\n\n    // Is the contract loaded?\n\n    // Create new tx and add to collection\n    // Maybe this needs to get moved out of the wrapper?\n    let transaction = this.createTransaction(txData);\n    transaction.method = contractMethod;\n\n    this.addTransaction(transaction);\n\n    // Add meta data to transaction\n    transaction.type = \"contract\";\n    transaction.status = \"started\";\n    transaction.params = params;\n\n    // Show toast for starting transaction\n    this.updateTransaction(transaction);\n\n    const { account, contracts } = this.state;\n    let contract = contracts.find(c => c.name === contractName);\n    if (!contract) {\n      if (typeof callback === 'function') {\n        callback(null,'contract_not_found');\n      }\n      return this.functionsUtil.customLog(`No contract with name ${contractName}`);\n    }\n\n    contract = contract.contract;\n\n    // Does the method exists?\n    // if (typeof contract.methods[contractMethod] === 'undefined'){\n    //   return false;\n    // }\n\n    let manualConfirmationTimeoutId = null;\n\n    try {\n\n      if (!value){\n        value = this.functionsUtil.BNify(0);\n      }\n\n      this.functionsUtil.customLog('contractMethodSendWrapper',contractName,contract._address,account,contractMethod,params,(value ? { from: account, value } : { from: account }));\n\n      // estimate gas price\n      let gas = await contract.methods[contractMethod](...params)\n        .estimateGas(value ? { from: account, value } : { from: account })\n        .catch(e => console.error(e));\n\n      if (gas) {\n\n        gas = this.functionsUtil.BNify(gas);\n        gas = gas.plus(gas.times(this.functionsUtil.BNify('0.2'))); // Increase 20% of enstimation\n\n        // Check if gas is under the gasLimit param\n        if (gasLimit && gas.lt(this.functionsUtil.BNify(gasLimit))){\n          gas = this.functionsUtil.BNify(gasLimit);\n        }\n\n        // Convert gasLimit toBN with web3 utils\n        gas = this.state.web3.utils.toBN(gas.integerValue(BigNumber.ROUND_FLOOR));\n      }\n\n      const confirmationCallback = (confirmationNumber, receipt) => {\n\n        // this.functionsUtil.customLog('confirmationCallback', confirmationNumber, receipt);\n\n        if (manualConfirmationTimeoutId){\n          window.clearTimeout(manualConfirmationTimeoutId);\n        }\n\n        // this.functionsUtil.customLog('txOnConfirmation', receipt);\n        // Update confirmation count on each subsequent confirmation that's received\n        transaction.confirmationCount += 1;\n\n        const call_callback = !globalConfigs.network.isForked && typeof callback === 'function' && transaction.confirmationCount===1;\n\n        // How many confirmations should be received before informing the user\n        const confidenceThreshold = this.props.config.requiredConfirmations || 1;\n\n        if (transaction.confirmationCount === 1) {\n          // Initial confirmation receipt\n          transaction.status = \"confirmed\";\n        } else if (transaction.confirmationCount < confidenceThreshold) {\n          // Not enough confirmations to match threshold\n        }\n\n        if (transaction.confirmationCount === confidenceThreshold) {\n          // Confirmations match threshold\n          // Check the status from result since we are confident in the result\n          if (receipt.status) {\n            transaction.status = \"success\";\n          } else if (!receipt.status) {\n            transaction.status = \"error\";\n          }\n        } else if (transaction.confirmationCount > confidenceThreshold) {\n          // Confidence threshold met\n        }\n\n\n        if (call_callback){\n          // Update transaction with receipt details\n          if (receipt){\n            transaction.txReceipt = receipt;\n          }\n          transaction.recentEvent = \"confirmation\";\n          this.updateTransaction(transaction);\n          \n          callback(transaction);\n\n          this.functionsUtil.customLog('Confirmed', confirmationNumber, receipt, transaction);\n        }\n      };\n\n      const manualConfirmation = (transactionHash,timeout) => {\n        if (!transactionHash){\n          return false;\n        }\n        this.state.web3.eth.getTransactionReceipt(transactionHash,(err,txReceipt) => {\n          if (txReceipt && txReceipt.status){\n            this.functionsUtil.customLog('Tx manualConfirmation', txReceipt);\n            confirmationCallback(1,txReceipt);\n          } else {\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(transactionHash,timeout) , timeout);\n          }\n        });\n      };\n\n      const receiptCallback = receipt => {\n\n        // this.functionsUtil.customLog('txOnReceipt', receipt);\n\n        if (manualConfirmationTimeoutId){\n          window.clearTimeout(manualConfirmationTimeoutId);\n        }\n\n        // Received receipt, met total number of confirmations\n        if (receipt){\n          transaction.txReceipt = receipt;\n        }\n        transaction.recentEvent = \"receipt\";\n\n        // If the network is forked use the receipt for confirmation\n        if (globalConfigs.network.isForked){\n          transaction.status = \"success\";\n          if (typeof callback === 'function') {\n            callback(transaction);\n          }\n        } else {\n          this.updateTransaction(transaction);\n\n          // Transaction mined, wait for manual confirmation\n          if (receipt.status){\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(receipt.transactionHash,4000), 2000);\n          }\n        }\n      };\n\n      // const networkId = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n      // const common = { customChain:{ chainId: 1337, networkId: 1337 } };\n\n      return contract.methods[contractMethod](...params)\n        .send(value ? { from: account, value, gas/*, common*/ } : { from: account, gas/*, common*/ })\n        .on(\"transactionHash\", hash => {\n          this.functionsUtil.customLog('txOnTransactionHash', hash);\n\n          if (!hash){\n            this.functionsUtil.customLog('Skip transactionHash due to hash empty', hash);\n            return false;\n          }\n\n          transaction.transactionHash = hash;\n          transaction.status = \"pending\";\n          transaction.recentEvent = \"transactionHash\";\n          this.updateTransaction(transaction);\n\n          if (callback_receipt){\n            callback_receipt(transaction);\n          }\n\n          // Wait for manual confirmation only for mobile\n          if (this.props.isMobile){\n            if (manualConfirmationTimeoutId){\n              window.clearTimeout(manualConfirmationTimeoutId);\n            }\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(hash,60000), 20000);\n          }\n        })\n        .on(\"receipt\", receiptCallback)\n        .on(\"confirmation\", confirmationCallback)\n        .on(\"error\", error => {\n\n          console.log('Tx error',error);\n          \n          const isDeniedTx = error && error.message && typeof error.message.includes === 'function' ? error.message.includes('User denied transaction signature') : false;\n          \n          // Set error on transaction\n          transaction.status = \"error\";\n          transaction.recentEvent = \"error\";\n          this.updateTransaction(transaction);\n\n\n          // Show ToastProvider\n          if (!isDeniedTx){\n            window.toastProvider.addMessage(\"Something went wrong\", {\n              icon: 'Block',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"failure\",\n              colorTheme: 'light',\n              secondaryMessage: \"Please retry\",\n            });\n\n            const isError = error instanceof Error;\n\n            if (typeof error.message !== 'undefined'){\n              this.openTransactionErrorModal(null,error.message);\n            } else if (this.functionsUtil.checkUrlOrigin() && isError){\n              Sentry.captureException(error);\n            }\n          }\n\n          if (typeof callback === 'function') {\n            callback(transaction,error);\n          }\n        });\n    } catch (error) {\n\n      console.log('Tx catch error',error);\n\n      transaction.status = \"error\";\n      this.updateTransaction(transaction);\n\n      // TODO: should this be a custom error? What is the error here?\n      // TODO: determine how to handle error messages globally\n      window.toastProvider.addMessage(\"Something went really wrong, we are sorry\", {\n        icon: 'Block',\n        actionHref: \"\",\n        actionText: \"\",\n        variant: \"failure\",\n        colorTheme: 'light',\n        secondaryMessage: \"Try refreshing the page :(\",\n      });\n\n      const isDeniedTx = error && error.message ? error.message.includes('User denied transaction signature') : false;\n\n      const isError = error instanceof Error;\n      if ( this.functionsUtil.checkUrlOrigin() && isError && !isDeniedTx){\n        Sentry.captureException(error);\n      }\n\n      if (typeof callback === 'function') {\n        // this.functionsUtil.customLog('Tx Failed',error,transaction,typeof callback);\n        callback(transaction,error);\n      }\n\n      return false;\n    }\n  }\n\n  // Create tx\n  createTransaction = (txData=null) => {\n    let transaction = {\n      ...txData\n    };\n    transaction.txReceipt = {};\n    transaction.created = Date.now();\n    transaction.confirmationCount = 0;\n    transaction.status = \"initialized\";\n    transaction.lastUpdated = Date.now();\n    transaction.token = this.props.selectedToken;\n    transaction.strategy = this.props.selectedStrategy;\n    transaction.networkId = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    return transaction;\n  }\n\n  addTransaction = transaction => {\n    const transactions = { ...this.state.transactions };\n    transactions[`tx${transaction.created}`] = transaction;\n    this.setState({ transactions });\n  }\n\n  // Add/update transaction in state\n  updateTransaction = updatedTransaction => {\n    const transactions = { ...this.state.transactions };\n    const transaction = { ...updatedTransaction };\n    transaction.lastUpdated = Date.now();\n    transactions[`tx${updatedTransaction.created}`] = transaction;\n    this.setState({ transactions });\n\n    // Save transactions in localStorage only if pending or succeeded\n    // console.log('updateTransaction',transaction);\n    if (transaction.transactionHash){\n      // Clear cached data\n      this.functionsUtil.clearCachedData();\n\n      // Store transaction\n      this.functionsUtil.addStoredTransaction(`tx${transaction.created}`,transaction);\n    }\n\n    return transaction;\n  }\n\n  // CONNECTION MODAL METHODS\n  closeConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionModalIsOpen = false;\n    // this.functionsUtil.customLog(\"this.state\", this.state);\n    this.setState({ modals });\n  }\n\n  openConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionModalIsOpen = true;\n    this.setState({ modals: modals });\n  }\n\n  closeConnectionPendingModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    this.setState({ modals });\n  }\n\n  openConnectionPendingModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = true;\n    modals.data.transactionConnectionModalIsOpen = false;\n    modals.data.connectionModalIsOpen = false;\n\n    this.setState({ modals });\n  }\n\n  closeTransactionErrorModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.transactionError = false;\n    this.setState({ modals });\n  }\n\n  openTransactionErrorModal = (e,error) => {\n    if (typeof e !== \"undefined\" && e) {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.transactionError = error;\n\n    this.setState({ modals });\n  }\n\n  closeConnectionErrorModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n\n    if (!this.state.modals.data.connectionError){\n      return false;\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionError = false;\n    this.setState({ modals });\n  }\n\n  openConnectionErrorModal = (e,error) => {\n    if (typeof e !== \"undefined\" && e) {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n\n    // Handle generic error\n    if (error==='[object Object]'){\n      error = 'Unable to access to the wallet.'\n    }\n    \n    if (this.state.modals.data.connectionError !== error){\n      // console.log('openConnectionErrorModal',typeof error,typeof error === 'object' ? JSON.stringify(error) : error);\n      modals.data.connectionError = error;\n      this.setState({ modals });\n    }\n  }\n\n  closeUserRejectedConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedConnect = false;\n    this.setState({ modals });\n  }\n\n  openUserRejectedConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedConnect = true;\n    this.setState({ modals });\n  }\n\n  closeNoWeb3BrowserModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWeb3BrowserModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openNoWeb3BrowserModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWeb3BrowserModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeNoWalletModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openNoWalletModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeWrongNetworkModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.wrongNetworkModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openWrongNetworkModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.wrongNetworkModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeLowFundsModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.lowFundsModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openLowFundsModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.lowFundsModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  state = {\n    web3: null,\n    context:null,\n    account: null,\n    contracts: [],\n    biconomy: null,\n    simpleID: null,\n    web3Infura:null,\n    transactions: {},\n    web3Providers:{},\n    CrispClient: null,\n    currentWeb3: null,\n    permitClient:null,\n    tokenDecimals:null,\n    accountBalance: null,\n    web3Subscription: null,\n    accountValidated: null,\n    gnosisSafeLoaded:false,\n    maticPlasmaClient:null,\n    accountBalanceDAI: null,\n    initWeb3: this.initWeb3,\n    accountBalanceLow: null,\n    networkInitialized:false,\n    accountInizialized:false,\n    erc20ForwarderClient:null,\n    subscribedTransactions:{},\n    contractsInitialized:false,\n    initAccount: this.initAccount,\n    accountValidationPending: null,\n    initSimpleID: this.initSimpleID,\n    initContract: this.initContract,\n    checkPreflight: this.checkPreflight,\n    validateAccount: this.validateAccount,\n    rejectValidation: this.rejectValidation,\n    getTokenDecimals: this.getTokenDecimals,\n    getAccountBalance: this.getAccountBalance,\n    initializeContracts: this.initializeContracts,\n    rejectAccountConnect: this.rejectAccountConnect,\n    contractMethodSendWrapper: this.contractMethodSendWrapper,\n    connectAndValidateAccount: this.connectAndValidateAccount,\n    enableUnderlyingWithdraw: this.props.enableUnderlyingWithdraw,\n    network: {\n      current: {},\n      required: {},\n      isCorrectNetwork: null,\n      checkNetwork: this.checkNetwork\n    },\n    modals: {\n      data: {\n        connectionError: null,\n        lowFundsModalIsOpen: null,\n        userRejectedConnect: null,\n        connectionModalIsOpen: null,\n        userRejectedValidation: null,\n        wrongNetworkModalIsOpen: null,\n        accountConnectionPending: null,\n        accountValidationPending: null,\n        transactionConnectionModalIsOpen: null,\n        noWalletModalIsOpen: this.noWalletModalIsOpen,\n        noWeb3BrowserModalIsOpen: this.noWeb3BrowserModalIsOpen,\n      },\n      methods: {\n        openLowFundsModal: this.openLowFundsModal,\n        openNoWalletModal: this.openNoWalletModal,\n        closeNoWalletModal: this.closeNoWalletModal,\n        closeLowFundsModal: this.closeLowFundsModal,\n        openConnectionModal: this.openConnectionModal,\n        closeConnectionModal: this.closeConnectionModal,\n        openWrongNetworkModal: this.openWrongNetworkModal,\n        closeWrongNetworkModal: this.closeWrongNetworkModal,\n        openNoWeb3BrowserModal: this.openNoWeb3BrowserModal,\n        closeNoWeb3BrowserModal: this.closeNoWeb3BrowserModal,\n        openConnectionErrorModal: this.openConnectionErrorModal,\n        closeConnectionErrorModal: this.closeConnectionErrorModal,\n        openTransactionErrorModal: this.openTransactionErrorModal,\n        closeTransactionErrorModal: this.closeTransactionErrorModal,\n        openConnectionPendingModal: this.openConnectionPendingModal,\n        closeConnectionPendingModal: this.closeConnectionPendingModal,\n        openUserRejectedValidationModal: this.openUserRejectedValidationModal,\n        openUserRejectedConnectionModal: this.openUserRejectedConnectionModal,\n        closeUserRejectedValidationModal: this.closeUserRejectedValidationModal,\n        closeUserRejectedConnectionModal: this.closeUserRejectedConnectionModal,\n      }\n    },\n    transaction: {\n      data: {\n        transactions: null\n      },\n      meta: {},\n      methods: {}\n    }\n  }\n\n  render() {\n    const connectionErrorModalOpened = typeof this.state.modals.data.connectionError === 'string' && this.state.modals.data.connectionError.length>0;\n    const transactionErrorModalOpened = typeof this.state.modals.data.transactionError === 'string' && this.state.modals.data.transactionError.length>0;\n    return (\n      <div>\n        <RimbleTransactionContext.Provider\n          {...this.props}\n          value={this.state}\n        />\n        <ConnectionModalUtil\n          {...this.props}\n          modals={this.state.modals}\n          network={this.state.network}\n          account={this.state.account}\n          isMobile={this.props.isMobile}\n          initAccount={this.state.initAccount}\n          setConnector={this.props.setConnector}\n          validateAccount={this.state.validateAccount}\n          accountValidated={this.state.accountValidated}\n          accountConnectionPending={this.state.accountConnectionPending}\n          accountValidationPending={this.state.accountValidationPending}\n        />\n        <TransactionErrorModal\n          modals={this.state.modals}\n          account={this.state.account}\n          context={this.props.context}\n          isOpen={transactionErrorModalOpened}\n        />\n        <ConnectionErrorModal\n          modals={this.state.modals}\n          account={this.state.account}\n          context={this.props.context}\n          isOpen={connectionErrorModalOpened}\n          setConnector={this.props.setConnector}\n        />\n        <NetworkUtil\n          web3={this.state.web3}\n          theme={this.props.theme}\n          network={this.state.network}\n        />\n      </div>\n    );\n  }\n}\n\nexport default RimbleTransaction;\n","import React from \"react\";\nimport ExtLink from '../../ExtLink/ExtLink';\nimport FunctionsUtil from '../FunctionsUtil';\nimport { Box, Flex, Image, Text, Link, Icon } from \"rimble-ui\";\nimport NetworkIndicator from \"../../NetworkIndicator/NetworkIndicator\";\n\nimport {\n  Link as RouterLink\n} from \"react-router-dom\";\n\nclass Header extends React.Component {\n  state = {\n\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidMount() {\n\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n\n    this.loadUtils();\n\n    if (this.props.network && !this.props.network.isCorrectNetwork){\n      return false;\n    }\n  }\n\n  render() {\n\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n\n    return (\n      <Box\n        style={{\n          left: '0',\n          right: '0',\n          zIndex: 99,\n          position: 'absolute',\n        }}\n      >\n        <Flex\n          p={2}\n          alignItems={'center'}\n          justifyContent={'center'}\n          backgroundColor={'dark-blue'}\n          flexDirection={['column','row']}\n        >\n          <Text\n            color={'white'}\n            textAlign={'center'}\n          >\n            IDLE Governance Token is now live!\n          </Text>\n          <ExtLink\n            pr={2}\n            py={1}\n            mt={[1,0]}\n            ml={[0,2]}\n            pl={'12px'}\n            color={'white'}\n            style={{\n              display:'flex',\n              borderRadius:'8px',\n              flexDirection:'row',\n              alignItems:'flex-end'\n            }}\n            backgroundColor={'#0037ff'}\n            href={'https://idlefinance.medium.com/idle-governance-is-live-9b55e8f407d7'}\n          >\n            Read More\n            <Icon\n              ml={1}\n              size={'1.3em'}\n              color={'white'}\n              name={'KeyboardArrowRight'}\n            >\n            </Icon>\n          </ExtLink>\n        </Flex>\n        <Flex\n          pt={[3,4]}\n          mx={'auto'}\n          bg={\"transparent\"}\n          width={['98%','100%']}\n          maxWidth={['100%','100em']}\n          alignItems={['center','flex-start']}\n        >\n          <Flex\n            ml={[3, 5]}\n            width={[0.5, 3/12]}\n          >\n            <RouterLink\n              to=\"/\"\n            >\n              <Image\n                position={'relative'}\n                src={'images/logo.svg'}\n                height={['35px','48px']}\n              />\n            </RouterLink>\n          </Flex>\n          <Flex\n            width={[0.5,8/12]}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={\"flex-end\"}\n          >\n            {\n              !this.props.isMobile &&\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'row'}\n                >\n                  {\n                    governanceEnabled && \n                      <Link\n                        mr={4}\n                        fontSize={3}\n                        color={'white'}\n                        hoverColor={'white'}\n                        fontFamily={'sansSerif'}\n                        textAlign={['center','left']}\n                        onClick={ (e) => window.location.hash='#/governance' }\n                      >\n                        Governance\n                      </Link>\n                  }\n                  <Link\n                    mr={4}\n                    fontSize={3}\n                    color={'white'}\n                    hoverColor={'white'}\n                    fontFamily={'sansSerif'}\n                    textAlign={['center','left']}\n                    onClick={(e) => {this.functionsUtil.scrollTo(document.getElementById('contacts').offsetTop,300)}}\n                  >\n                    Contact Us\n                  </Link>\n                  <Link\n                    fontSize={3}\n                    color={'white'}\n                    hoverColor={'white'}\n                    fontFamily={'sansSerif'}\n                    textAlign={['center','left']}\n                    onClick={(e) => {this.functionsUtil.scrollTo(document.getElementById('faq').offsetTop,300)}}\n                  >\n                    FAQs\n                  </Link>\n                </Flex>\n            }\n            <Flex\n              ml={4}\n            >\n              <NetworkIndicator\n                {...this.props}\n              />\n            </Flex>\n          </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default Header;\n","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nexport default function ScrollToTop() {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return null;\n}","import Footer from '../Footer/Footer';\nimport React, { Component } from 'react';\nimport styles from './PageNotFound.module.scss';\nimport { Box, Flex, Heading, Button } from 'rimble-ui'\nimport Header_styles from '../utilities/components/Header.module.scss';\nimport {\n  Link as RouterLink,\n} from \"react-router-dom\";\n\nclass PageNotFound extends Component {\n  state = {};\n\n  render() {\n    return (\n      <Box>\n        <Box className={styles.headerContainer} px={[3,6]} pt={['2em', '3em']}>\n          <Box className={styles.headerBgFiller}></Box>\n          <Box position={'relative'} zIndex={10}>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"60em\"]} mx={'auto'} textAlign={'center'} pt={['8vh', '8vh']}>\n              <Heading.h1 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.3em'} fontSize={['2.5em',7]} textAlign={'center'} color={'white'}>\n                This page doesn't exist!\n              </Heading.h1>\n              <Heading.h3 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.6em'} fontWeight={2} fontSize={['1.5em',4]} textAlign={'center'} color={'white'}>\n                Sorry, the page you are looking for cannot be found.\n              </Heading.h3>\n              <RouterLink to=\"/\" style={{textDecoration:'none'}}>\n                <Button\n                  className={Header_styles.gradientButton}\n                  borderRadius={4}\n                  size={this.props.isMobile ? 'medium' : 'medium'}\n                  mainColor={'blue'}\n                  contrastColor={'white'}\n                  fontWeight={3}\n                  fontSize={[2,2]}\n                  mx={'auto'}\n                  px={[4,5]}\n                  mt={2}\n                >\n                  GO TO HOMEPAGE\n                </Button>\n              </RouterLink>\n            </Flex>\n          </Box>\n        </Box>\n        <Footer />\n      </Box>\n    );\n  }\n}\n\nexport default PageNotFound;\n","import React from \"react\";\nimport { Box, Flex, Text } from \"rimble-ui\";\n\nclass NetworkOverview extends React.Component {\n  getNetworkCircleColor = () => {\n    let circleColor = \"#333\";\n    if (this.props.network) {\n      switch (this.props.network.id) {\n        case 1:\n          circleColor = \"#56b3ae\";\n          break;\n        case 2:\n          circleColor = \"#000\";\n          break;\n        case 3:\n          circleColor = \"#ed5a8d\";\n          break;\n        case 4:\n          circleColor = \"#efc35c\";\n          break;\n        case 42:\n          circleColor = \"#6a5ff6\";\n          break;\n        default:\n          circleColor = \"#ccc\";\n      }\n    }\n\n    return circleColor;\n  };\n\n  render() {\n    const networkCircle = {\n      borderRadius: \"50%\",\n      backgroundColor: this.getNetworkCircleColor(),\n      height: \"1em\",\n      width: \"1em\"\n    };\n\n    return (\n      <Flex alignItems={\"center\"}>\n        <Box style={networkCircle} mr={2} />\n        <Text style={{ textTransform: \"capitalize\" }}>\n          {this.props.network.name}\n        </Text>\n      </Flex>\n    );\n  }\n}\n\nexport default NetworkOverview;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Icon,\n  Flex,\n  ToastMessage,\n  Box,\n  Button,\n  Link\n} from \"rimble-ui\";\nimport NetworkOverview from \"../utilities/components/NetworkOverview\";\n\nconst DebuggerButtons = props => (\n  <Box mt={4} borderTop={1} borderColor=\"#E8E8E8\" pt={3}>\n    <Heading.h4 textAlign={\"center\"}>Show Modal</Heading.h4>\n    <Button\n      onClick={props.modals.methods.openWrongNetworkModal}\n      size=\"small\"\n      mr={2}\n      mb={2}\n    >\n      Blocking Wrong Network\n    </Button>\n\n    <Button\n      onClick={props.modals.methods.openConnectionModal}\n      size=\"small\"\n      mr={2}\n      mb={2}\n    >\n      Connection\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openConnectionPendingModal}\n      mr={2}\n      mb={2}\n    >\n      Connection Pending\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openUserRejectedConnectionModal}\n      mr={2}\n      mb={2}\n    >\n      Connection Rejected\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={event => {\n        props.modals.methods.openLowFundsModal(event);\n      }}\n      mr={2}\n      mb={2}\n    >\n      Low Funds\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openNoWeb3BrowserModal}\n      mr={2}\n      mb={2}\n    >\n      Not Web3 Browser\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openNoWalletModal}\n      mr={2}\n      mb={2}\n    >\n      No Wallet\n    </Button>\n  </Box>\n);\n\nclass Web3Debugger extends React.Component {\n  render() {\n    return (\n      <Card width={\"600px\"} mx={\"auto\"} px={4}>\n        <Heading.h3 textAlign={\"center\"}>Get Connected</Heading.h3>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            <Icon name=\"Check\" color={\"green\"} mr={2} />\n            <Text>Modern & Web3 Capable Browser</Text>\n          </Flex>\n        </Box>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.web3 ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Browser-connected Wallet</Text>\n          </Flex>\n\n          {!this.props.web3 ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">You do not have a wallet.</Text>\n              </Flex>\n\n              <Link\n                href=\"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                <Button.Outline size=\"small\">\n                  Get MetaMask Extension\n                </Button.Outline>\n              </Link>\n            </Flex>\n          ) : null}\n        </Box>\n\n        {this.props.web3 ? (\n          <Flex\n            py={3}\n            my={3}\n            borderTop={1}\n            borderBottom={1}\n            borderColor={\"#E8E8E8\"}\n            textAlign={\"center\"}\n            justifyContent={\"space-around\"}\n            alignItems={\"center\"}\n          >\n            <Button\n              size=\"small\"\n              onClick={this.props.connectAndValidateAccount}\n              disabled={!this.props.web3}\n            >\n              Connect and verify\n            </Button>\n            <Text>- or -</Text>\n            <Button size=\"small\" disabled>\n              Initiate On-Chain Action\n            </Button>\n          </Flex>\n        ) : null}\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.network.isCorrectNetwork ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Correct Network</Text>\n          </Flex>\n\n          {this.props.web3 && !this.props.network.isCorrectNetwork ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Box>\n                  <Flex alignItems={\"center\"}>\n                    <Text\n                      mr={2}\n                      color=\"#999\"\n                      style={{ textTransform: \"capitalize\" }}\n                    >\n                      Current network:\n                    </Text>\n                    <NetworkOverview network={this.props.network.current} />\n                  </Flex>\n                  <Flex alignItems={\"center\"}>\n                    <Text\n                      mr={2}\n                      color=\"#999\"\n                      style={{ textTransform: \"capitalize\" }}\n                    >\n                      Required network:\n                    </Text>\n                    <NetworkOverview network={this.props.network.required} />\n                  </Flex>\n                </Box>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.checkNetwork}>\n                Check Network\n              </Button.Outline>\n            </Flex>\n          ) : null}\n          {this.props.web3 && this.props.isCorrectNetwork ? (\n            <Flex ml={4} alignItems={\"center\"}>\n              <NetworkOverview network={this.props.network.current} />\n            </Flex>\n          ) : null}\n        </Box>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.account && this.props.accountValidated ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Wallet connected and verified</Text>\n          </Flex>\n\n          {!this.props.account &&\n          this.props.web3 &&\n          !this.props.userRejectedConnect ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">Not connected to this dApp.</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.initAccount}>\n                Connect\n              </Button.Outline>\n            </Flex>\n          ) : null}\n          {this.props.account && this.props.web3 ? (\n            <Flex ml={4} alignItems={\"center\"}>\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n              <Box>\n                <Text color=\"#999\">Connected wallet {this.props.account}</Text>\n                <Text color={this.props.accountBalanceLow ? \"red\" : \"#999\"}>\n                  Account balance {this.props.accountBalance}\n                </Text>\n              </Box>\n            </Flex>\n          ) : null}\n\n          {this.props.userRejectedConnect ? (\n            <Flex ml={4} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Error\" mr={2} color=\"red\" />\n                <Text color=\"red\">User rejected Connect request</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.initAccount}>\n                Connect\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {(this.props.accountValidated === null ||\n            this.props.accountValidated === false) &&\n          this.props.web3 ? (\n            <Flex\n              ml={4}\n              my={1}\n              alignItems={\"center\"}\n              justifyContent={\"space-between\"}\n            >\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">Account not verified</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.validateAccount}>\n                Validate\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {this.props.accountValidated === false ? (\n            <Flex\n              ml={4}\n              my={1}\n              alignItems={\"center\"}\n              justifyContent={\"space-between\"}\n            >\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Error\" mr={2} color=\"red\" />\n                <Text color=\"red\">Account not verified</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.validateAccount}>\n                Validate\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {this.props.userRejectedValidation === false ? (\n            <Flex ml={4}>\n              <Icon name=\"Error\" mr={2} color=\"red\" />\n              <Text color=\"red\">Account not verified</Text>\n            </Flex>\n          ) : null}\n        </Box>\n\n        <DebuggerButtons {...this.props} />\n\n        <ToastMessage.Provider ref={node => (window.toastProvider = node)} />\n      </Card>\n    );\n  }\n}\n\nexport default Web3Debugger;\n","import ERC20 from '../contracts/ERC20.json';\nimport IdleCDO from '../contracts/IdleCDO.json';\nimport IdleStrategy from '../contracts/IdleStrategy.json';\nimport IdleCDOTrancheRewards from '../contracts/IdleCDOTrancheRewards.json';\nconst availableTranches = {\n  idle:{\n    DAI:{\n      token:'DAI',\n      decimals:18,\n      limit:500000,\n      protocol:'idle',\n      blockNumber:13054628,\n      address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n      CDO:{\n        abi:IdleCDO,\n        decimals:18,\n        name:'IdleCDO_idleDAIYield',\n        address:'0xd0DbcD556cA22d3f3c142e9a3220053FD7a247BC'\n      },\n      Strategy:{\n        abi:IdleStrategy,\n        name:'IdleStrategy_idleDAIYield'\n      },\n      AA:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'AA',\n        functions:{\n          stake:'stake',\n          unstake:'unstake',\n          deposit:'depositAA',\n          withdraw:'withdrawAA'\n        },\n        CDORewards:{\n          decimals:18,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_idleDAIYield_AA',\n          address:'0x9c3bC87693c65E740d8B2d5F0820E04A61D8375B',\n          stakingRewards:[\n            {\n              token:'IDLE',\n              address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e'\n            }\n          ]\n        },\n        label:'idleDAI AA',\n        blockNumber:13054628,\n        name:'AA_idleDAIYield',\n        token:'AA_idleDAIYield',\n        address:'0xE9ada97bDB86d827ecbaACCa63eBcD8201D8b12E'\n      },\n      BB:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'BB',\n        functions:{\n          stake:'stake',\n          unstake:'unstake',\n          deposit:'depositBB',\n          withdraw:'withdrawBB'\n        },\n        CDORewards:{\n          decimals:18,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_idleDAIYield_BB',\n          address:'0x4473bc90118b18be890af42d793b5252c4dc382d',\n          stakingRewards:[\n            {\n              token:'IDLE',\n              address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e'\n            }\n          ]\n        },\n        label:'idleDAI BB',\n        blockNumber:13054628,\n        name:'BB_idleDAIYield',\n        token:'BB_idleDAIYield',\n        address:'0x730348a54bA58F64295154F0662A08Cbde1225c2'\n      }\n    }\n  }\n  /*\n  yearn:{\n  \tDAI:{\n  \t  junior:{\n  \t    address:'0x000000000000000000000000000000000000'\n  \t  },\n  \t  senior:{\n  \t    address:'0x000000000000000000000000000000000000'\n  \t  }\n  \t}\n  }\n  */\n};\nexport default availableTranches;","const TransactionToastMessages = {\n    initialized: {\n      message: \"{action} request initialized\",\n      secondaryMessage: \"Confirm with your wallet provider\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"default\",\n      icon: \"InfoOutline\"\n    },\n    started: {\n      message: \"{action} request submitted\",\n      secondaryMessage: \"Confirm with your wallet provider\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"default\",\n      icon: \"InfoOutline\"\n    },\n    pending: {\n      message: \"Processing {action} request...\",\n      secondaryMessage: \"This may take a few minutes\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"processing\",\n      icon: \"InfoOutline\"\n    },\n    confirmed: {\n      message: \"First block confirmed\",\n      secondaryMessage: \"Your {action} request is in progress\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"processing\",\n      icon: 'CheckCircle'\n    },\n    success: {\n      message: \"{action} request completed\",\n      variant: \"success\",\n      icon: 'CheckCircle'\n    },\n    error: {\n      message: \"{action} request failed\",\n      secondaryMessage: \"Could not complete transaction.\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"failure\",\n      icon: \"Block\"\n    }\n  };\n\n  export default TransactionToastMessages;\n","import React from \"react\";\nimport { ToastMessage } from \"rimble-ui\";\nimport TransactionToastMessages from \"./TransactionToastMessages\";\n\nclass TransactionToastUtil extends React.Component {\n  // Determines if collections are same size\n  collectionHasNewObject = (prevCollection, currentCollection) => {\n    return (\n      typeof prevCollection === \"undefined\" ||\n      Object.keys(prevCollection).length !==\n        Object.keys(currentCollection).length\n    );\n  };\n\n  // Returns object from currentCollection that doesn't exist in prevCollection\n  getNewObjectFromCollection = (prevCollection, currentCollection) => {\n    if (typeof prevCollection !== \"undefined\") {\n      const objectKey = Object.keys(currentCollection).filter(key => {\n        return !Object.keys(prevCollection).includes(key);\n      });\n      return currentCollection[objectKey];\n    } else {\n      return Object.keys(currentCollection).map(key => {\n        return currentCollection[key];\n      });\n    }\n  };\n\n  // Compare two collections of objects, return single object from current collection that differs from prev collection\n  getUpdatedObjectFromCollection = (prevCollection, currentCollection) => {\n    const updatedTransaction = Object.keys(prevCollection)\n      .map(key => {\n        if (\n          prevCollection[key].lastUpdated !== currentCollection[key].lastUpdated\n        ) {\n          return currentCollection[key];\n        } else {\n          return null;\n        }\n      })\n      .filter(object => object !== null);\n    return updatedTransaction[0];\n  };\n\n  // Returns an transaction from a collection based on a given identifier\n  getTransactionFromCollection = (identifier, collection) => {\n    const object = collection[`tx${identifier}`];\n    return object;\n  };\n\n  // Returns either a new object or finds an updated object in a collection against a previous collection\n  getUpdatedTransaction = (prevCollection, currentCollection) => {\n    let tx = null;\n    let currentTx = {};\n    let prevTx = {};\n\n    if (this.collectionHasNewObject(prevCollection, currentCollection)) {\n      tx = this.getNewObjectFromCollection(prevCollection, currentCollection);\n    } else {\n      currentTx = this.getUpdatedObjectFromCollection(\n        prevCollection,\n        currentCollection\n      );\n      if (currentTx) {\n        prevTx = this.getTransactionFromCollection(\n          currentTx.created,\n          prevCollection\n        );\n      } else {\n        return false;\n      }\n\n      if (currentTx.status !== prevTx.status) {\n        tx = currentTx;\n      }\n    }\n    return tx;\n  };\n\n  // Check for updates to the transactions collection\n  processTransactionUpdates = prevProps => {\n    let tx = null;\n    if (Object.keys(this.props.transactions).length) {\n      tx = this.getUpdatedTransaction(\n        prevProps.transactions,\n        this.props.transactions\n      );\n    }\n\n    if (tx) {\n      this.showTransactionToast(tx);\n    }\n  };\n\n  showTransactionToast = transaction => {\n    // console.log(\"showTransactionToast: \", { ...transaction });\n    // Get text info for toast\n    let toastMeta = this.getTransactionToastMeta(transaction);\n    toastMeta.colorTheme = this.props.themeMode;\n    toastMeta.closeElem = true;\n    // console.log('toastMeta',toastMeta);\n\n    // Show toast\n    window.toastProvider.addMessage(\".\", toastMeta);\n  };\n\n  getTransactionToastMeta = transaction => {\n    let transactionToastMeta = {};\n    let status = transaction.status;\n\n    switch (status) {\n      case \"initialized\":\n        transactionToastMeta = TransactionToastMessages.initialized;\n        break;\n      case \"started\":\n        transactionToastMeta = TransactionToastMessages.started;\n        break;\n      case \"pending\":\n        transactionToastMeta = TransactionToastMessages.pending;\n        break;\n      case \"confirmed\":\n        transactionToastMeta = TransactionToastMessages.confirmed;\n        break;\n      case \"success\":\n        transactionToastMeta = TransactionToastMessages.success;\n        break;\n      case \"error\":\n        transactionToastMeta = TransactionToastMessages.error;\n        break;\n      default:\n        // do nothing\n        break;\n    }\n\n    let transactionAction = '';\n    switch (transaction.method){\n      case 'redeemIdleToken':\n        transactionAction = 'Redeem';\n      break;\n      case 'redeemGovTokens':\n        transactionAction = 'Redeem (Gov Tokens)';\n      break;\n      case 'mintIdleToken':\n      case 'mintIdleTokensProxy':\n        transactionAction = 'Lending';\n      break;\n      case 'migrateFromToIdle':\n      case 'migrateFromCompoundToIdle':\n      case 'migrateFromFulcrumToIdle':\n      case 'migrateFromAaveToIdle':\n      case 'migrateFromIearnToIdle':\n      case 'bridgeIdleV1ToIdleV2':\n        transactionAction = 'Migration';\n      break;\n      case 'executeMetaTransaction':\n        transactionAction = 'Meta-Tx';\n      break;\n      case 'approve':\n        transactionAction = 'Approve';\n      break;\n      case 'rebalance':\n        transactionAction = 'Rebalance';\n      break;\n      default:\n        transactionAction = transaction.method.charAt(0).toUpperCase() + transaction.method.substr(1);\n      break;\n    }\n\n    transactionToastMeta = JSON.parse(JSON.stringify(transactionToastMeta));\n\n    let newMessage = transactionToastMeta.message.replace('{action}',transactionAction);\n    newMessage = newMessage.charAt(0).toUpperCase() + newMessage.slice(1);\n    transactionToastMeta.message = newMessage;\n    transactionToastMeta.closeElem = true;\n    transactionToastMeta.colorTheme = this.props.themeMode;\n\n    return transactionToastMeta;\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    this.processTransactionUpdates(prevProps);\n  }\n\n  render() {\n    return (\n      <div>\n        <ToastMessage.Provider ref={node => (window.toastProvider = node)} />\n      </div>\n    );\n  }\n}\n\nexport default TransactionToastUtil;\n","import Web3 from \"web3\";\nimport jQuery from 'jquery';\nimport theme from \"../theme\";\nimport Tos from \"../Tos/Tos\";\nimport themeDark from \"../theme-dark\";\nimport connectors from './connectors';\nimport Web3Provider from 'web3-react';\nimport { Web3Consumer } from 'web3-react';\nimport CookieConsent from \"react-cookie-consent\";\nimport RimbleWeb3 from \"../utilities/RimbleWeb3\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport React, { Component, Suspense } from \"react\";\nimport GeneralUtil from \"../utilities/GeneralUtil\";\nimport Header from \"../utilities/components/Header\";\nimport globalConfigs from '../configs/globalConfigs';\nimport ScrollToTop from \"../ScrollToTop/ScrollToTop\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport PageNotFound from \"../PageNotFound/PageNotFound\";\nimport Web3Debugger from \"../Web3Debugger/Web3Debugger\";\nimport availableTokens from '../configs/availableTokens';\nimport availableTranches from '../configs/availableTranches';\nimport TransactionToastUtil from \"../utilities/TransactionToastUtil\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { ThemeProvider, Box, Text, Link, Image, Flex } from 'rimble-ui';\n\n// Lazy Loading\nconst Landing = React.lazy(() => import(\"../Landing/Landing\"));\nconst Dashboard = React.lazy(() => import('../Dashboard/Dashboard'));\nconst Governance = React.lazy(() => import('../Governance/Governance'));\n\nclass App extends Component {\n  state = {\n    network: null,\n    cachedData: {},\n    buyToken: null,\n    currentEnv: null,\n    selectedTab: '1',\n    route: \"default\", // or 'onboarding'\n    themeMode: 'light',\n    connecting: false,\n    tokenConfig: null,\n    genericError: null,\n    customAddress: null,\n    connectorName: null,\n    selectedToken: null,\n    selectedTheme: theme,\n    currentSection: null,\n    walletProvider: null,\n    availableTokens: null,\n    buyModalOpened: false,\n    selectedStrategy: null,\n    toastMessageProps: null,\n    callbackAfterLogin: null,\n    width: window.innerWidth,\n    availableStrategies: null,\n    height: window.innerHeight,\n    config:globalConfigs.network,\n    unsubscribeFromHistory: null,\n    enableUnderlyingWithdraw: false,\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  closeToastMessage = (e) => {\n    if (e) {\n      e.preventDefault();\n    }\n    this.setState({\n      toastMessageProps: null\n    });\n  }\n\n  showToastMessage = (props) => {\n    this.setState({\n      toastMessageProps: props\n    });\n  }\n\n  processCustomParam = (props, prevProps) => {\n    // const params = props ? props.match.params : null;\n    // const prevParams = prevProps ? prevProps.match.params : null;\n\n    // Reset params\n    /*\n    if ( prevParams && params && prevParams.customParam !== params.customParam && (!params || !params.customParam || params.customParam === undefined)){\n      this.setState({\n        customAddress:null,\n        enableUnderlyingWithdraw:false\n      });\n    } else if (params && typeof params.customParam === 'string') {\n      // Check if custom address\n      if (params.customParam.toLowerCase().match(/0x[\\w]{40}/) && this.state.customAddress !== params.customParam){\n        this.setCustomAddress(params.customParam);\n      } else if (params && params.customParam === 'withdraw' && !this.state.enableUnderlyingWithdraw){\n        this.setState({\n          customAddress:null,\n          enableUnderlyingWithdraw:true\n        });\n      }\n    }\n    */\n  }\n\n  clearCachedData = async (callback = null, clear_all = false) => {\n\n    const cachedData = { ...this.state.cachedData };\n    Object.keys(cachedData).forEach(key => {\n      const data = cachedData[key];\n      if (data.expirationDate !== null) {\n        delete cachedData[key];\n      }\n    });\n\n    const storedCachedData = clear_all ? {} : this.functionsUtil.getStoredItem('cachedData');\n    if (storedCachedData){\n      Object.keys(storedCachedData).forEach( key => {\n        const storedData = storedCachedData[key];\n        if (storedData.expirationDate !== null){\n          delete storedCachedData[key];\n        }\n      });\n    }\n\n    this.functionsUtil.setLocalStorage('cachedData', storedCachedData, true);\n\n    await this.setState({\n      cachedData\n    }, () => {\n      if (typeof callback === 'function') {\n        callback();\n      }\n    });\n    return true;\n  }\n\n  setCachedData = (key, data, TTL = null, useLocalStorage = false) => {\n\n    key = key.toLowerCase();\n    const cachedKeyFound = this.state.cachedData[key];\n    const currentTime = parseInt(Date.now() / 1000);\n\n    const update_key = !cachedKeyFound || ((cachedKeyFound.expirationDate !== null && cachedKeyFound.expirationDate >= currentTime) || JSON.stringify(cachedKeyFound.data) !== JSON.stringify(data));\n\n    let output = false;\n\n    if (update_key) {\n      const expirationDate = TTL ? currentTime + (TTL) : null;\n\n      // Save cached data in local storage\n      if (useLocalStorage) {\n        let storedCachedData = this.functionsUtil.getStoredItem('cachedData');\n        if (!storedCachedData) {\n          storedCachedData = {};\n        }\n\n        // const storedData = typeof data === 'object' ? JSON.stringify(data) : data;\n\n        storedCachedData = {\n          ...storedCachedData,\n          [key]: {\n            data,\n            expirationDate\n          }\n        };\n        \n        this.functionsUtil.setLocalStorage('cachedData',storedCachedData,true);\n      }\n\n      // Set new cached data state\n      this.setState((prevState) => ({\n        cachedData: {\n          ...prevState.cachedData,\n          [key]: {\n            data,\n            expirationDate\n          }\n        }\n      }), () => {\n        window.cachedData = this.state.cachedData;\n      });\n\n      output = true;\n    }\n\n    return output;\n  }\n\n  setCallbackAfterLogin = (callbackAfterLogin) => {\n    this.setState({\n      callbackAfterLogin\n    });\n  }\n\n  setCustomAddress = (customAddress) => {\n    // Reset customAddress if not well formatted\n    if (customAddress && !customAddress.toLowerCase().match(/0x[\\w]{40}/)) {\n      customAddress = null;\n    }\n\n    if (customAddress !== this.state.customAddress) {\n      this.setState({\n        customAddress,\n        enableUnderlyingWithdraw: false\n      });\n    }\n  }\n\n  async selectTab(e, tabIndex) {\n    return this.setState(state => ({ ...state, selectedTab: tabIndex }));\n  }\n\n  async loadAvailableTokens() {\n    const newState = {};\n    const availableStrategies = {};\n    const requiredNetwork = this.state.network && this.state.network.isCorrectNetwork ? (this.state.network.current.id || this.state.network.required.id) : this.state.config.requiredNetwork;\n\n    // console.log('loadAvailableTokens_1',this.state.network,requiredNetwork,availableTokens);\n\n    // Load available strategies\n    Object.keys(availableTokens[requiredNetwork]).forEach((strategy) => {\n      availableStrategies[strategy] = Object.keys(availableTokens[requiredNetwork][strategy]).reduce((enabledTokens, token) => {\n        const tokenConfig = availableTokens[requiredNetwork][strategy][token];\n        const envEnabled = !tokenConfig.enabledEnvs || !tokenConfig.enabledEnvs.length || tokenConfig.enabledEnvs.includes(this.state.currentEnv);\n        if (tokenConfig.enabled && envEnabled) {\n          enabledTokens[token] = tokenConfig;\n        }\n        return enabledTokens;\n      }, {});\n    });\n\n    newState.availableStrategies = availableStrategies;\n\n    // Load strategy\n    const selectedStrategy = this.state.selectedStrategy;\n    if (selectedStrategy && availableStrategies[selectedStrategy]) {\n      newState.availableTokens = availableStrategies[selectedStrategy];\n\n      // Load token\n      const selectedToken = this.state.selectedToken;\n      if (selectedToken && newState.availableTokens[selectedToken]) {\n        newState.tokenConfig = newState.availableTokens[selectedToken];\n      }\n    }\n\n    // console.log('loadAvailableTokens_2',newState);\n\n    await this.setState(newState);\n  }\n\n  async setStrategyToken(selectedStrategy, selectedToken) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    const newState = {\n      tokenConfig: !selectedToken ? null : this.state.tokenConfig,\n      availableTokens: !selectedToken ? null : this.state.availableTokens,\n      selectedToken: !selectedToken ? selectedToken : this.state.selectedToken,\n      selectedStrategy: !selectedStrategy ? selectedStrategy : this.state.selectedStrategy,\n    };\n\n    if (selectedStrategy && this.state.availableStrategies && selectedStrategy !== this.state.selectedStrategy && Object.keys(this.state.availableStrategies).includes(selectedStrategy.toLowerCase())) {\n      newState.selectedStrategy = selectedStrategy.toLowerCase();\n    }\n\n    if (selectedToken && selectedToken !== this.state.selectedToken) {\n      if (this.state.availableTokens && Object.keys(this.state.availableTokens).includes(selectedToken.toUpperCase())) {\n        newState.selectedToken = selectedToken.toUpperCase();\n        newState.tokenConfig = this.state.availableTokens[selectedToken];\n      } else if (this.state.availableStrategies && Object.keys(this.state.availableStrategies[selectedStrategy]).includes(selectedToken.toUpperCase())) {\n        newState.selectedToken = selectedToken.toUpperCase();\n        newState.tokenConfig = this.state.availableStrategies[selectedStrategy][newState.selectedToken];\n        newState.availableTokens = this.state.availableStrategies[selectedStrategy];\n      }\n    }\n\n    // console.log('setStrategyToken',selectedStrategy,selectedToken,newState);\n\n    await this.setState(newState, callback);\n  }\n\n  async setRequiredNetwork(requiredNetwork){\n    requiredNetwork = parseInt(requiredNetwork);\n    if (globalConfigs.network.enabledNetworks.includes(requiredNetwork)){\n      this.functionsUtil.setLocalStorage('requiredNetwork',requiredNetwork);\n      // console.log('setRequiredNetwork',requiredNetwork);\n      this.functionsUtil.addEthereumChain(requiredNetwork);\n      return this.setState(prevState => ({\n        config:{\n          ...prevState.config,\n          requiredNetwork\n        }\n      }));\n    }\n  }\n\n  async setStrategy(selectedStrategy) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    if (selectedStrategy && selectedStrategy !== this.state.selectedStrategy && Object.keys(this.state.availableStrategies).includes(selectedStrategy.toLowerCase())) {\n      selectedStrategy = selectedStrategy.toLowerCase();\n      await this.setState({\n        selectedStrategy\n      }, callback);\n    } else if (!selectedStrategy) {\n      await this.setState({\n        selectedStrategy\n      }, callback);\n    }\n  }\n\n  async setToken(selectedToken) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    if (selectedToken && selectedToken !== this.state.selectedToken && Object.keys(this.state.availableTokens).includes(selectedToken.toUpperCase())) {\n      selectedToken = selectedToken.toUpperCase();\n      const newState = {\n        selectedToken\n      };\n      newState.tokenConfig = this.state.availableTokens[selectedToken];\n      await this.setState(newState, callback);\n    } else if (!selectedToken) {\n      await this.setState({\n        selectedToken,\n        tokenConfig: null\n      }, callback);\n    }\n  }\n\n  async componentWillMount() {\n\n    this.loadUtils();\n\n    window.BNify = this.functionsUtil.BNify;\n\n    // Suppress warnings and errors in production\n    const isProduction = window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n    if (isProduction) {\n      window.console.error = () => { };\n      window.console.warn = () => { };\n    }\n\n    window.jQuery = jQuery;\n\n    if (window.localStorage) {\n      this.functionsUtil.removeStoredItem('context');\n\n      // Clear all localStorage data except walletProvider and connectorName if version has changed\n      const version = this.functionsUtil.getStoredItem('version', false);\n      if (version !== globalConfigs.version) {\n        // Clear cached data\n        this.clearCachedData(() => {\n          // Reset Localstorage\n          this.functionsUtil.clearStoredData(['walletProvider', 'connectorName', 'themeMode']);\n          this.functionsUtil.setLocalStorage('version', globalConfigs.version);\n        }, true);\n      }\n    }\n\n    const themeMode = this.functionsUtil.getStoredItem('themeMode', false);\n    if (themeMode) {\n      this.setThemeMode(themeMode);\n    }\n\n    const requiredNetwork = this.functionsUtil.getStoredItem('requiredNetwork',false);\n    // console.log('requiredNetwork',requiredNetwork);\n    if (requiredNetwork){\n      this.setRequiredNetwork(requiredNetwork);\n    }\n\n    window.closeIframe = (w) => {\n      const iFrames = document.getElementsByTagName('iframe');\n      for (let i = 0; i < iFrames.length; i++) {\n        const iframe = iFrames[i];\n        if (iframe.contentWindow === w) {\n          window.jQuery(iframe).parents('.iframe-container')[0].remove();\n        }\n      }\n    }\n\n    window.addEventListener('resize', this.handleWindowSizeChange);\n\n    this.loadCustomAddress();\n    this.loadCurrentEnvironment();\n  }\n\n  loadCurrentEnvironment() {\n    const isLive = this.functionsUtil.checkUrlOrigin();\n    const currentEnv = isLive ? 'live' : 'beta';\n    this.setState({\n      currentEnv\n    }, () => {\n      this.loadAvailableTokens();\n    })\n  }\n\n  loadCustomAddress() {\n    if (!this.state.customAddress) {\n      const walletProvider = this.functionsUtil.getWalletProvider('Infura');\n      if (walletProvider === 'custom') {\n        const customAddress = this.functionsUtil.getCustomAddress();\n        if (customAddress && customAddress !== this.state.customAddress) {\n          this.setState({\n            customAddress\n          });\n        }\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const currentSectionChanged = prevState.currentSection !== this.state.currentSection;\n    if (currentSectionChanged) {\n      if (this.state.currentSection === 'landing') {\n        this.setThemeMode('light', false);\n      } else {\n        // Get stored Mode\n        const themeMode = this.functionsUtil.getStoredItem('themeMode', false) || this.functionsUtil.getGlobalConfig(['dashboard', 'theme', 'mode']);\n        this.setThemeMode(themeMode);\n      }\n    }\n\n    const tokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const strategyChanged = prevState.selectedStrategy !== this.state.selectedStrategy;\n    const networkChanged = JSON.stringify(prevState.network) !== JSON.stringify(this.state.network);\n\n    if (tokenChanged || strategyChanged || networkChanged) {\n      this.loadAvailableTokens();\n    }\n  }\n\n  componentDidMount() {\n\n    // Close iFrame\n    // if (window.self !== window.top && window.top.location.href.indexOf(globalConfigs.baseURL) !== -1 && typeof window.parent.closeIframe === 'function' ){\n    //   window.parent.closeIframe(window.self);\n    // }\n\n    window.showToastMessage = this.showToastMessage;\n    window.closeToastMessage = this.closeToastMessage;\n\n    if (localStorage) {\n      let connectorName = localStorage.getItem('connectorName') ? localStorage.getItem('connectorName') : 'Infura';\n      let walletProvider = localStorage.getItem('walletProvider') ? localStorage.getItem('walletProvider') : 'Infura';\n\n      // Check Ledger Live\n      const isLedgerLive = window.location.href.includes(\"ledger-live=1\");\n      if (isLedgerLive) {\n        connectorName = 'ledgerLive';\n        walletProvider = 'ledger';\n      }\n      // console.log('isLedgerLive',isLedgerLive,connectorName,walletProvider);\n\n      this.setConnector(connectorName, walletProvider);\n    }\n  }\n\n  handleWindowSizeChange = () => {\n    const newState = {\n      width: this.state.width,\n      height: this.state.height,\n    };\n\n    const widthChanged = window.innerWidth !== this.state.width;\n    const heightChanged = window.innerHeight !== this.state.height;\n\n    if (widthChanged || heightChanged) {\n      if (widthChanged) {\n        newState.width = window.innerWidth;\n      }\n      if (heightChanged) {\n        newState.height = window.innerHeight;\n      }\n      return this.setState(newState);\n    }\n\n    return null;\n  };\n\n  showRoute(route) {\n    return this.setState({ route });\n  }\n\n  closeBuyModal(e) {\n    if (e) {\n      e.preventDefault();\n    }\n    return this.setState({\n      buyToken: null,\n      buyModalOpened: false\n    });\n  }\n\n  openBuyModal(e, buyToken) {\n    e.preventDefault();\n\n    return this.setState({\n      buyToken,\n      buyModalOpened: true\n    });\n  }\n\n  async logout() {\n    // Reset Custom Address\n    this.setState({\n      customAddress: null\n    });\n    // Clear cached data\n    this.clearCachedData(() => {\n      // Reset Localstorage except some keys\n      this.functionsUtil.clearStoredData(['version', 'themeMode', 'lastLogin', 'cachedData','requiredNetwork']);\n    });\n  }\n\n  setNetwork(network) {\n    this.setState({\n      network\n    });\n  }\n\n  setConnector(connectorName, walletProvider) {\n\n    let connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n    if (!connectorInfo && walletProvider) {\n      connectorInfo = globalConfigs.connectors[walletProvider.toLowerCase()];\n    }\n\n    // console.log('setConnector - BEFORE',connectorInfo,connectorName,walletProvider);\n\n    if ((connectorInfo && !connectorInfo.enabled) || (connectorName !== 'Injected' && !Object.keys(globalConfigs.connectors).includes(connectorName.toLowerCase())) || (walletProvider && !Object.keys(globalConfigs.connectors).includes(walletProvider.toLowerCase()))) {\n      connectorName = 'Infura';\n      walletProvider = 'Infura';\n    } else if (connectorName === 'Injected') {\n      const hasMetamask = GeneralUtil.hasMetaMask();\n      const hasDapper = GeneralUtil.hasDapper()\n\n      // Check if injected connector is valid\n      switch (walletProvider) {\n        case 'Metamask':\n          if (!hasMetamask && hasDapper) {\n            walletProvider = 'Dapper';\n          }\n          break;\n        case 'Dapper':\n          if (!hasDapper && hasMetamask) {\n            walletProvider = 'Metamask';\n          }\n          break;\n        default:\n          break;\n      }\n    }\n\n    this.functionsUtil.setLocalStorage('connectorName', connectorName);\n    this.functionsUtil.setLocalStorage('walletProvider', walletProvider);\n\n    return this.setState({\n      connectorName,\n      walletProvider\n    }, () => {\n      this.loadCustomAddress();\n    });\n  }\n\n  setThemeMode(themeMode, store = true) {\n    let selectedTheme = null;\n\n    // Check Dark Mode Enabled\n    const darkModeEnabled = this.functionsUtil.getGlobalConfig(['dashboard', 'theme', 'darkModeEnabled']);\n    if (themeMode === 'dark' && !darkModeEnabled) {\n      themeMode = 'light';\n    }\n\n    switch (themeMode) {\n      default:\n      case 'light':\n        selectedTheme = theme;\n        break;\n      case 'dark':\n        selectedTheme = themeDark;\n        break;\n    }\n\n    if (store) {\n      this.functionsUtil.setLocalStorage('themeMode', themeMode);\n    }\n\n    this.setState({\n      themeMode,\n      selectedTheme\n    });\n  }\n\n  setCurrentSection(currentSection) {\n    this.setState({\n      currentSection\n    });\n  }\n\n  render() {\n    const isMobile = this.state.width <= 768;\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance', 'enabled']);\n\n    // console.log(this.state.selectedToken,this.state.tokenConfig);\n\n    const SuspenseLoader = (\n      <Flex\n        width={1}\n        minHeight={'100vh'}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        backgroundColor={'selectBg'}\n      >\n        <FlexLoader\n          textProps={{\n            textSize: 4,\n            fontWeight: 2\n          }}\n          loaderProps={{\n            mb: 3,\n            size: '80px',\n            color: 'primary'\n          }}\n          flexProps={{\n            my: 3,\n            flexDirection: 'column'\n          }}\n          text={''}\n        />\n      </Flex>\n    );\n\n    return (\n      <Router>\n        <ScrollToTop />\n        <ThemeProvider\n          theme={this.state.selectedTheme}\n        >\n          <Web3Provider\n            web3Api={Web3}\n            connectors={connectors}\n            libraryName={'web3.js'}\n          >\n            <Web3Consumer\n              recreateOnNetworkChange={false}\n              recreateOnAccountChange={false}\n            >\n              {context => {\n                //console.log('Web3Consumer render',context);\n                return (\n                  <RimbleWeb3\n                    context={context}\n                    isMobile={isMobile}\n                    connectors={connectors}\n                    config={this.state.config}\n                    theme={this.state.selectedTheme}\n                    cachedData={this.state.cachedData}\n                    availableTranches={availableTranches}\n                    tokenConfig={this.state.tokenConfig}\n                    setNetwork={this.setNetwork.bind(this)}\n                    customAddress={this.state.customAddress}\n                    selectedToken={this.state.selectedToken}\n                    connectorName={this.state.connectorName}\n                    walletProvider={this.state.walletProvider}\n                    setConnector={this.setConnector.bind(this)}\n                    availableTokens={this.state.availableTokens}\n                    setCachedData={this.setCachedData.bind(this)}\n                    clearCachedData={this.clearCachedData.bind(this)}\n                    callbackAfterLogin={this.state.callbackAfterLogin}\n                    availableStrategies={this.state.availableStrategies}\n                    setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                    enableUnderlyingWithdraw={this.state.enableUnderlyingWithdraw}\n                  >\n                    <RimbleWeb3.Consumer>\n                      {({\n                        web3,\n                        modals,\n                        network,\n                        account,\n                        initWeb3,\n                        simpleID,\n                        biconomy,\n                        contracts,\n                        web3Infura,\n                        web3Polygon,\n                        transaction,\n                        initAccount,\n                        initContract,\n                        checkNetwork,\n                        transactions,\n                        initSimpleID,\n                        permitClient,\n                        tokenDecimals,\n                        accountBalance,\n                        needsPreflight,\n                        validateAccount,\n                        rejectValidation,\n                        accountValidated,\n                        getTokenDecimals,\n                        getAccountBalance,\n                        accountBalanceLow,\n                        networkInitialized,\n                        accountInizialized,\n                        accountBalanceToken,\n                        userRejectedConnect,\n                        initializeContracts,\n                        erc20ForwarderClient,\n                        rejectAccountConnect,\n                        contractsInitialized,\n                        userRejectedValidation,\n                        accountValidationPending,\n                        connectAndValidateAccount,\n                        contractMethodSendWrapper,\n                        initContractCustomProvider\n                      }) => {\n                        return (\n                          <Box>\n                            <Switch>\n                              <Route\n                                path=\"/dashboard/:section?/:param1?/:param2?/:param3?\"\n                                render={\n                                  (props) => \n                                    <Suspense\n                                      fallback={SuspenseLoader}\n                                    >\n                                      <Dashboard\n                                        {...props}\n                                        web3={web3}\n                                        modals={modals}\n                                        network={network}\n                                        context={context}\n                                        account={account}\n                                        isDashboard={true}\n                                        initWeb3={initWeb3}\n                                        biconomy={biconomy}\n                                        isMobile={isMobile}\n                                        simpleID={simpleID}\n                                        contracts={contracts}\n                                        web3Infura={web3Infura}\n                                        web3Polygon={web3Polygon}\n                                        initAccount={initAccount}\n                                        permitClient={permitClient}\n                                        initSimpleID={initSimpleID}\n                                        initContract={initContract}\n                                        transactions={transactions}\n                                        buyToken={this.state.buyToken}\n                                        logout={this.logout.bind(this)}\n                                        accountBalance={accountBalance}\n                                        themeMode={this.state.themeMode}\n                                        theme={this.state.selectedTheme}\n                                        validateAccount={validateAccount}\n                                        currentEnv={this.state.currentEnv}\n                                        connecting={this.state.connecting}\n                                        cachedData={this.state.cachedData}\n                                        setToken={this.setToken.bind(this)}\n                                        accountValidated={accountValidated}\n                                        getTokenDecimals={getTokenDecimals}\n                                        rejectValidation={rejectValidation}\n                                        tokenConfig={this.state.tokenConfig}\n                                        availableTranches={availableTranches}\n                                        getAccountBalance={getAccountBalance}\n                                        accountBalanceLow={accountBalanceLow}\n                                        accountInizialized={accountInizialized}\n                                        networkInitialized={networkInitialized}\n                                        selectedToken={this.state.selectedToken}\n                                        connectorName={this.state.connectorName}\n                                        setStrategy={this.setStrategy.bind(this)}\n                                        userRejectedConnect={userRejectedConnect}\n                                        accountBalanceToken={accountBalanceToken}\n                                        initializeContracts={initializeContracts}\n                                        walletProvider={this.state.walletProvider}\n                                        buyModalOpened={this.state.buyModalOpened}\n                                        erc20ForwarderClient={erc20ForwarderClient}\n                                        contractsInitialized={contractsInitialized}\n                                        openBuyModal={this.openBuyModal.bind(this)}\n                                        rejectAccountConnect={rejectAccountConnect}\n                                        handleMenuClick={this.selectTab.bind(this)}\n                                        setConnector={this.setConnector.bind(this)}\n                                        setThemeMode={this.setThemeMode.bind(this)}\n                                        availableTokens={this.state.availableTokens}\n                                        closeBuyModal={this.closeBuyModal.bind(this)}\n                                        setCachedData={this.setCachedData.bind(this)}\n                                        selectedStrategy={this.state.selectedStrategy}\n                                        userRejectedValidation={userRejectedValidation}\n                                        clearCachedData={this.clearCachedData.bind(this)}\n                                        setStrategyToken={this.setStrategyToken.bind(this)}\n                                        accountValidationPending={accountValidationPending}\n                                        availableStrategies={this.state.availableStrategies}\n                                        setCurrentSection={this.setCurrentSection.bind(this)}\n                                        connectAndValidateAccount={connectAndValidateAccount}\n                                        contractMethodSendWrapper={contractMethodSendWrapper}\n                                        setRequiredNetwork={this.setRequiredNetwork.bind(this)}\n                                        initContractCustomProvider={initContractCustomProvider}\n                                        setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                                      />\n                                    </Suspense>\n\n                                }\n                              >\n                              </Route>\n                              {\n                                governanceEnabled && (\n                                  <Route\n                                    path=\"/governance/:section?/:item_id?\"\n                                    render={\n                                      (props) =>\n                                        <Suspense\n                                          fallback={SuspenseLoader}\n                                        >\n                                          <Governance\n                                            {...props}\n                                            web3={web3}\n                                            modals={modals}\n                                            network={network}\n                                            context={context}\n                                            account={account}\n                                            initWeb3={initWeb3}\n                                            biconomy={biconomy}\n                                            isMobile={isMobile}\n                                            simpleID={simpleID}\n                                            isGovernance={true}\n                                            contracts={contracts}\n                                            web3Infura={web3Infura}\n                                            web3Polygon={web3Polygon}\n                                            initAccount={initAccount}\n                                            initSimpleID={initSimpleID}\n                                            initContract={initContract}\n                                            checkNetwork={checkNetwork}\n                                            transactions={transactions}\n                                            buyToken={this.state.buyToken}\n                                            logout={this.logout.bind(this)}\n                                            accountBalance={accountBalance}\n                                            themeMode={this.state.themeMode}\n                                            theme={this.state.selectedTheme}\n                                            validateAccount={validateAccount}\n                                            currentEnv={this.state.currentEnv}\n                                            connecting={this.state.connecting}\n                                            cachedData={this.state.cachedData}\n                                            setToken={this.setToken.bind(this)}\n                                            accountValidated={accountValidated}\n                                            getTokenDecimals={getTokenDecimals}\n                                            rejectValidation={rejectValidation}\n                                            tokenConfig={this.state.tokenConfig}\n                                            getAccountBalance={getAccountBalance}\n                                            accountBalanceLow={accountBalanceLow}\n                                            accountInizialized={accountInizialized}\n                                            networkInitialized={networkInitialized}\n                                            selectedToken={this.state.selectedToken}\n                                            connectorName={this.state.connectorName}\n                                            setStrategy={this.setStrategy.bind(this)}\n                                            userRejectedConnect={userRejectedConnect}\n                                            accountBalanceToken={accountBalanceToken}\n                                            initializeContracts={initializeContracts}\n                                            walletProvider={this.state.walletProvider}\n                                            buyModalOpened={this.state.buyModalOpened}\n                                            contractsInitialized={contractsInitialized}\n                                            openBuyModal={this.openBuyModal.bind(this)}\n                                            rejectAccountConnect={rejectAccountConnect}\n                                            handleMenuClick={this.selectTab.bind(this)}\n                                            setConnector={this.setConnector.bind(this)}\n                                            setThemeMode={this.setThemeMode.bind(this)}\n                                            availableTokens={this.state.availableTokens}\n                                            closeBuyModal={this.closeBuyModal.bind(this)}\n                                            setCachedData={this.setCachedData.bind(this)}\n                                            selectedStrategy={this.state.selectedStrategy}\n                                            userRejectedValidation={userRejectedValidation}\n                                            clearCachedData={this.clearCachedData.bind(this)}\n                                            setStrategyToken={this.setStrategyToken.bind(this)}\n                                            accountValidationPending={accountValidationPending}\n                                            availableStrategies={this.state.availableStrategies}\n                                            setCurrentSection={this.setCurrentSection.bind(this)}\n                                            connectAndValidateAccount={connectAndValidateAccount}\n                                            contractMethodSendWrapper={contractMethodSendWrapper}\n                                            setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                                          />\n                                        </Suspense>\n                                    }\n                                  >\n                                  </Route>\n                                )\n                              }\n                              <Route>\n                                <Header\n                                  modals={modals}\n                                  network={network}\n                                  context={context}\n                                  account={account}\n                                  initWeb3={initWeb3}\n                                  isMobile={isMobile}\n                                  contracts={contracts}\n                                  initAccount={initAccount}\n                                  initContract={initContract}\n                                  buyToken={this.state.buyToken}\n                                  accountBalance={accountBalance}\n                                  logout={this.logout.bind(this)}\n                                  validateAccount={validateAccount}\n                                  connecting={this.state.connecting}\n                                  accountValidated={accountValidated}\n                                  getTokenDecimals={getTokenDecimals}\n                                  rejectValidation={rejectValidation}\n                                  setToken={e => { this.setToken(e) }}\n                                  tokenConfig={this.state.tokenConfig}\n                                  getAccountBalance={getAccountBalance}\n                                  accountBalanceLow={accountBalanceLow}\n                                  networkInitialized={networkInitialized}\n                                  selectedToken={this.state.selectedToken}\n                                  connectorName={this.state.connectorName}\n                                  userRejectedConnect={userRejectedConnect}\n                                  accountBalanceToken={accountBalanceToken}\n                                  walletProvider={this.state.walletProvider}\n                                  buyModalOpened={this.state.buyModalOpened}\n                                  contractsInitialized={contractsInitialized}\n                                  openBuyModal={this.openBuyModal.bind(this)}\n                                  rejectAccountConnect={rejectAccountConnect}\n                                  handleMenuClick={this.selectTab.bind(this)}\n                                  setConnector={this.setConnector.bind(this)}\n                                  availableTokens={this.state.availableTokens}\n                                  closeBuyModal={this.closeBuyModal.bind(this)}\n                                  userRejectedValidation={userRejectedValidation}\n                                  accountValidationPending={accountValidationPending}\n                                  connectAndValidateAccount={connectAndValidateAccount}\n                                  setRequiredNetwork={this.setRequiredNetwork.bind(this)}\n                                />\n\n                                {\n                                  this.state.route === \"onboarding\" && (\n                                    <Web3Debugger\n                                      web3={web3}\n                                      account={account}\n                                      accountBalance={accountBalance}\n                                      accountBalanceToken={accountBalanceToken}\n                                      accountBalanceLow={accountBalanceLow}\n                                      initAccount={initAccount}\n                                      rejectAccountConnect={rejectAccountConnect}\n                                      userRejectedConnect={userRejectedConnect}\n                                      accountValidated={accountValidated}\n                                      accountValidationPending={accountValidationPending}\n                                      rejectValidation={rejectValidation}\n                                      userRejectedValidation={userRejectedValidation}\n                                      validateAccount={validateAccount}\n                                      connectAndValidateAccount={connectAndValidateAccount}\n                                      modals={modals}\n                                      network={network}\n                                      transaction={transaction}\n                                    />\n                                  )\n                                }\n\n                                {\n                                  this.state.route === \"default\" && (\n                                    <Switch>\n                                      <Route exact path=\"/\"\n                                        render={(props) =>\n                                          <Suspense\n                                            fallback={SuspenseLoader}\n                                          >\n                                            <Landing\n                                              {...props}\n                                              web3={web3}\n                                              network={network}\n                                              account={account}\n                                              isMobile={isMobile}\n                                              simpleID={simpleID}\n                                              contracts={contracts}\n                                              initContract={initContract}\n                                              innerWidth={this.state.width}\n                                              logout={this.logout.bind(this)}\n                                              innerHeight={this.state.height}\n                                              accountBalance={accountBalance}\n                                              themeMode={this.state.themeMode}\n                                              theme={this.state.selectedTheme}\n                                              cachedData={this.state.cachedData}\n                                              currentEnv={this.state.currentEnv}\n                                              connecting={this.state.connecting}\n                                              selectedTab={this.state.selectedTab}\n                                              tokenConfig={this.state.tokenConfig}\n                                              accountBalanceLow={accountBalanceLow}\n                                              getAccountBalance={getAccountBalance}\n                                              availableTranches={availableTranches}\n                                              networkInitialized={networkInitialized}\n                                              customAddress={this.state.customAddress}\n                                              selectedToken={this.state.selectedToken}\n                                              accountBalanceToken={accountBalanceToken}\n                                              closeToastMessage={this.closeToastMessage}\n                                              contractsInitialized={contractsInitialized}\n                                              openBuyModal={this.openBuyModal.bind(this)}\n                                              setThemeMode={this.setThemeMode.bind(this)}\n                                              processCustomParam={this.processCustomParam}\n                                              availableTokens={this.state.availableTokens}\n                                              setCachedData={this.setCachedData.bind(this)}\n                                              updateSelectedTab={this.selectTab.bind(this)}\n                                              toastMessageProps={this.state.toastMessageProps}\n                                              clearCachedData={this.clearCachedData.bind(this)}\n                                              availableStrategies={this.state.availableStrategies}\n                                              setCurrentSection={this.setCurrentSection.bind(this)}\n                                              connectAndValidateAccount={connectAndValidateAccount}\n                                              setToken={e => { this.setToken(e) }}\n                                            />\n                                            <CookieConsent\n                                              expires={365}\n                                              buttonText={\"Ok\"}\n                                              location={\"bottom\"}\n                                              acceptOnScroll={true}\n                                              cookieName={\"cookieAccepted\"}\n                                              acceptOnScrollPercentage={5}\n                                              style={{ background: \"rgba(255,255,255,0.95)\", zIndex: '9999999' }}\n                                              buttonStyle={{ display: isMobile ? \"block\" : \"none\", backgroundColor: '#0036ff', color: 'white', marginTop: isMobile ? \"0px\" : \"15px\" }}\n                                            >\n                                              <Flex flexDirection={'row'} alignItems={['flex-start', 'center']} justifyContent={'flex-start'} maxHeight={['150px', 'initial']} style={isMobile ? { overflowY: 'scroll' } : null}>\n                                                <Image display={['none', 'block']} src={'images/cookie.svg'} width={'42px'} height={'42px'} />\n                                                <Text pl={[0, 3]} color={'dark-gray'} fontSize={1} textAlign={'justify'}>\n                                                  This website or its third-party tools process personal data (e.g. browsing data or IP addresses) and use cookies or other identifiers, which are necessary for its functioning and required to achieve the purposes illustrated in the cookie policy. To learn more, please refer to the <Link href={'https://www.iubenda.com/privacy-policy/61211749/cookie-policy'} target={'_blank'} rel=\"nofollow noopener noreferrer\" hoverColor={'blue'}>cookie policy</Link>.\n                                                  You accept the use of cookies or other identifiers by closing or dismissing this notice, by scrolling this page, by clicking a link or button or by continuing to browse otherwise.\n                                              </Text>\n                                              </Flex>\n                                            </CookieConsent>\n                                          </Suspense>\n                                        }\n                                      ></Route>\n                                      <Route exact path=\"/terms-of-service\">\n                                        <Tos />\n                                      </Route>\n                                      <Route>\n                                        <PageNotFound />\n                                      </Route>\n                                    </Switch>\n                                  )\n                                }\n                              </Route>\n                            </Switch>\n                            <TransactionToastUtil\n                              transactions={transactions}\n                              themeMode={this.state.themeMode}\n                            />\n                          </Box>\n                        )\n                      }}\n                    </RimbleWeb3.Consumer>\n                  </RimbleWeb3>\n                );\n              }}\n            </Web3Consumer>\n          </Web3Provider>\n        </ThemeProvider>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport * as Sentry from '@sentry/browser';\nimport App from './App/App';\nimport * as serviceWorker from './serviceWorker';\n\nif (window.location.hostname !== 'localhost') {\n  Sentry.init({\n    dsn: \"https://56f5c0bce273442390d7f25698fefe53@sentry.io/1547544\",\n    beforeSend(event, hint) {\n      let output = event;\n      const error = hint.originalException;\n      if (error && error.message){\n        if (error.message.match(/Failed to subscribe to new newBlockHeaders/i)){\n          output = false;\n        }\n      }\n      return output;\n    }\n  });\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();","const address = '0xf5dce57282a584d2746faf1593d3121fcac444dc'; // mainnet\nconst abi = [\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"name\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x06fdde03\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"approve\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x095ea7b3\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"reserveFactorMantissa\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x173b9904\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"borrowBalanceCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x17bfdfbc\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalSupply\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x18160ddd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"exchangeRateStored\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x182df0f5\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"src\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"dst\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transferFrom\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x23b872dd\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"pendingAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x26782247\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"decimals\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x313ce567\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOfUnderlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x3af9e669\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"getCash\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x3b1d21a2\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newComptroller\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setComptroller\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x4576b5db\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalBorrows\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x47bd3718\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"comptroller\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x5fe3b567\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"reduceAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"_reduceReserves\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x601a0bf1\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"initialExchangeRateMantissa\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x675d972c\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"accrualBlockNumber\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x6c540baf\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"underlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x6f307dc3\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOf\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x70a08231\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"totalBorrowsCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x73acee98\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalReserves\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x8f840ddd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"symbol\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x95d89b41\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"borrowBalanceStored\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x95dd9193\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"accrueInterest\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa6afed95\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"dst\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transfer\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa9059cbb\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"borrowIndex\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xaa5af0fd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"supplyRatePerBlock\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xae9d70b0\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"liquidator\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"seizeTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"seize\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xb2a02ff1\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newPendingAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setPendingAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xb71d1a0c\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"exchangeRateCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xbd6d894d\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"getAccountSnapshot\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xc37f68e2\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"allowance\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xdd62ed3e\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"_acceptAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xe9c714f2\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newInterestRateModel\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setInterestRateModel\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf2b3abbd\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"interestRateModel\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf3fdb15a\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"admin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf851a440\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"borrowRatePerBlock\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf8f9da28\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"_setReserveFactor\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xfca7820b\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"isCToken\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xfe9c44ae\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"name\": \"underlying_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"comptroller_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"interestRateModel_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"initialExchangeRateMantissa_\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"name_\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"symbol_\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"decimals_\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"constructor\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"constructor\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"interestAccumulated\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrowIndex\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"AccrueInterest\",\n    \"signature\": \"0x875352fb3fadeb8c0be7cbbe8ff761b308fa7033470cd0287f02f3436fd76cb9\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"minter\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"mintAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"mintTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Mint\",\n    \"signature\": \"0x4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"redeemer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"redeemAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"redeemTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Redeem\",\n    \"signature\": \"0xe5b754fb1abb7f01b499791d0b820ae3b6af3424ac1c59768edb53f4ec31a929\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrowAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"accountBorrows\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Borrow\",\n    \"signature\": \"0x13ed6866d4e1ee6da46f845c46d7e54120883d75c5ea9a2dacc1c4ca8984ab80\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"payer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"accountBorrows\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"RepayBorrow\",\n    \"signature\": \"0x1a2a22cb034d26d1854bdc6666a5b91fe25efbbb5dcad3b0355478d6f5c362a1\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"liquidator\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"cTokenCollateral\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"seizeTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"LiquidateBorrow\",\n    \"signature\": \"0x298637f684da70674f26509b10f07ec2fbc77a335ab1e7d6215a4b2484d8bb52\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldPendingAdmin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newPendingAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewPendingAdmin\",\n    \"signature\": \"0xca4f2f25d0898edd99413412fb94012f9e54ec8142f9b093e7720646a95b16a9\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldAdmin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewAdmin\",\n    \"signature\": \"0xf9ffabca9c8276e99321725bcb43fb076a6c66a54b7f21c4e8146d8519b417dc\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldComptroller\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newComptroller\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewComptroller\",\n    \"signature\": \"0x7ac369dbd14fa5ea3f473ed67cc9d598964a77501540ba6751eb0b3decf5870d\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldInterestRateModel\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newInterestRateModel\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewMarketInterestRateModel\",\n    \"signature\": \"0xedffc32e068c7c95dfd4bdfd5c4d939a084d6b11c4199eac8436ed234d72f926\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"NewReserveFactor\",\n    \"signature\": \"0xaaa68312e2ea9d50e16af5068410ab56e1a1fd06037b1a35664812c30f821460\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"admin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"reduceAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newTotalReserves\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"ReservesReduced\",\n    \"signature\": \"0x3bad0c59cf2f06e7314077049f48a93578cd16f5ef92329f1dab1420a99c177e\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"error\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"info\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"detail\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Failure\",\n    \"signature\": \"0x45b96fe442630264581b197e84bbada861235052c5a1aadfff9ea4e40a969aa0\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"name\": \"from\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"name\": \"to\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Transfer\",\n    \"signature\": \"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Approval\",\n    \"signature\": \"0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\",\n    \"type\": \"event\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"mintAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"mint\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa0712d68\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"redeemTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"redeem\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xdb006a75\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"redeemAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"redeemUnderlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x852a12e3\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrowAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"borrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xc5ebeaec\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"repayBorrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x0e752702\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"repayBorrowBehalf\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x2608f818\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"cTokenCollateral\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"liquidateBorrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf5e3c462\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }\n];\nexport default { address, abi };\n","const address = '0x5592EC0cfb4dbc12D3aB100b257153436a1f0FEa'; // rinkeby\nconst abi = [{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"stop\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"owner_\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"name_\",\"type\":\"bytes32\"}],\"name\":\"setName\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"stopped\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"authority_\",\"type\":\"address\"}],\"name\":\"setAuthority\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"push\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"move\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"start\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"authority\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"pull\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"symbol_\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"authority\",\"type\":\"address\"}],\"name\":\"LogSetAuthority\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"LogSetOwner\",\"type\":\"event\"},{\"anonymous\":true,\"inputs\":[{\"indexed\":true,\"name\":\"sig\",\"type\":\"bytes4\"},{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"foo\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"bar\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"fax\",\"type\":\"bytes\"}],\"name\":\"LogNote\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"dst\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}];\nexport default { address, abi };\n","import DAI from '../abis/tokens/DAI.json';\nimport CHAI from '../abis/chai/CHAI.json';\nimport cToken from '../abis/compound/cDAI';\nimport WETH from '../abis/tokens/WETH.json';\nimport USDC from '../abis/tokens/USDC.json';\nimport ERC20 from '../abis/tokens/ERC20.js';\nimport fToken from '../abis/fuse/fToken.json';\nimport aToken from '../abis/aave/AToken.json';\nimport yToken from '../abis/dydx/yToken.json';\nimport iToken from '../abis/fulcrum/iToken.json';\nimport crToken from '../abis/cream/crToken.json';\nimport IdleTokenV3 from '../contracts/IdleTokenV3.json';\nimport IdleTokenV4 from '../contracts/IdleTokenV4.json';\nimport IdleConverterPersonalSignV4 from '../contracts/IdleConverterPersonalSignV4.json';\n\nconst availableTokens = {\n  // Goerli\n  5:{\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x001B3B4d0F3714Ca98ba10F6042DaEbF0B1B7b6F',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x45a3598Ac8aDb2c6233979f710DC6a3D006238E0',\n        },\n        protocols:[\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            token:'amDAI',\n            address:'0x639cB7b21ee2161DF9c882483C9D55c90c20Ca3e',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n    },\n    risk:{\n\n    }\n  },\n  80001:{ // Mumbai-Testnet\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x001B3B4d0F3714Ca98ba10F6042DaEbF0B1B7b6F',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x45a3598Ac8aDb2c6233979f710DC6a3D006238E0',\n        },\n        protocols:[\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            token:'amDAI',\n            address:'0x639cB7b21ee2161DF9c882483C9D55c90c20Ca3e',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n      /*\n      USDC:{\n        abi:USDC,\n        token:'USDC',\n        decimals:6,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0xb7a4f3e9097c08da09517b5ab877f7a917224ede',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        ramp:{\n          swapAsset:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x0de23D3bc385a74E2196cfE827C8a640B8774B9f',\n        },\n        protocols:[\n          {\n            decimals:16,\n            enabled:true,\n            token:'cUSDC',\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x4a92e71227d294f041bd82dd8f78591b75140d63',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          }\n        ]\n      },\n      */\n    },\n    risk:{\n      \n    }\n  },\n  137:{ // Matic Mainnet\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x8f3Cf7ad23Cd3CaDbD9735AFf958023239c6A063',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x8a999F5A3546F8243205b2c0eCb0627cC10003ab',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:28,\n            name:'cream',\n            enabled:true,\n            token:'crDAI',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x4eCEDdF62277eD78623f9A94995c680f8fd6C00e',\n          },\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            token:'amDAI',\n            address:'0x27F8D03b3a2196956ED754baDc28D73be8830A6e',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n      USDC:{\n        abi:USDC,\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        ramp:{\n          swapAsset:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x1ee6470CD75D5686d0b2b90C0305Fa46fb0C89A1',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:16,\n            name:'cream',\n            enabled:true,\n            token:'crUSDC',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x73CF8c5D14Aa0EbC89f18272A568319F5BAB6cBD',\n          },\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            token:'amUSDC',\n            address:'0x1a13F4Ca1d028320A707D99520AbFefca3998b7F',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n      WETH:{\n        abi:WETH,\n        token:'WETH',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WETH'\n        },\n        ramp:{\n          swapAsset:'WETH'\n        },\n        defiPrime:{\n          token:'weth'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWETHYield',\n          address:'0xfdA25D931258Df948ffecb66b5518299Df6527C4',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:28,\n            name:'cream',\n            enabled:true,\n            token:'crWETH',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x7ef18d0a9C3Fb1A716FF6c3ED0Edf52a2427F716',\n          },\n          {\n            abi:aToken,\n            decimals:18,\n            enabled:true,\n            token:'aWETH',\n            name:'aavev2',\n            address:'0x28424507fefb6f7f8E9D3860F56504E4e5f5f390',\n            functions:{\n\n            }\n          },\n        ]\n      },\n    },\n    risk:{\n      \n    }\n  },\n  // Ethereum\n  42:{\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x4f96fe3b7a6cf9725f59d353f723c1bdb64ca6aa',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x295CA5bC5153698162dDbcE5dF50E436a58BA21e',\n        },\n        protocols:[\n          {\n            decimals:28,\n            token:'cDAI',\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0xf0d0eb522cfa50b716b3b1604c4f0fa6f04376ad',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          }\n        ]\n      },\n      USDC: {\n        abi: USDC,\n        token: 'USDC',\n        decimals: 6,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0xb7a4f3e9097c08da09517b5ab877f7a917224ede',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        ramp: {\n          swapAsset: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCYield',\n          address: '0x0de23D3bc385a74E2196cfE827C8a640B8774B9f',\n        },\n        protocols: [\n          {\n            decimals: 16,\n            enabled: true,\n            token: 'cUSDC',\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x4a92e71227d294f041bd82dd8f78591b75140d63',\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          }\n        ]\n      },\n    },\n    risk: {\n\n    }\n  },\n  1337: {\n    best: {\n      DAI: {\n        abi: DAI,\n        token: 'DAI',\n        decimals: 18,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'DAI'\n        },\n        ramp: {\n          swapAsset: 'DAI'\n        },\n        defiPrime: {\n          token: 'dai'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleDAIYield',\n          address: '0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your DAI with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleDAI',\n            name: 'idleDAIYieldV3',\n            address: '0x78751b12da02728f467a44eac40f5cbc16bd7934',\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token: 'yxDAIOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            token: 'idleDAI',\n            abi: IdleConverterPersonalSignV4,\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token: 'cDAI',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: iToken,\n            enabled: false,\n            name: 'fulcrum',\n            address: '0x493c57c4763932315a328269e1adad09653b9081',\n            token: 'iDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            abi: aToken,\n            name: 'aave',\n            enabled: true,\n            address: '0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token: 'aDAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            name: 'aavev2',\n            enabled: true,\n            address: '0x028171bCA77440897B824Ca71D1c56caC55b68A3',\n            token: 'aDAIv2',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: CHAI,\n            name: 'dsr',\n            enabled: true,\n            address: '0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token: 'CHAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: yToken,\n            name: 'dydx',\n            enabled: true,\n            address: '0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token: 'yxDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDC: {\n        abi: USDC,\n        decimals: 6,\n        token: 'USDC',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCYield',\n          address: '0x5274891bEC421B39D23760c04A6755eCB444797C',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your USDC with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDC',\n            name: 'idleUSDCYieldV3',\n            address: '0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6'\n          },\n          oldProtocols: [\n            {\n              abi: yToken,\n              name: 'dydx',\n              enabled: true,\n              address: '0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token: 'yxUSDCOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token: 'cUSDC',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token: 'iUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token: 'aUSDC',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            decimals: 18,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aUSDCv2',\n            address: '0xBcca60bB61934080951369a648Fb03DF4F96263C',\n            functions: {\n\n            }\n          },\n          {\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token: 'yxUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDT: {\n        decimals: 6,\n        token: 'USDT',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre: {\n          destCurrency: 'USDT'\n        },\n        defiPrime: {\n          token: 'usdt'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDTYield',\n          address: '0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your USDT with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDT',\n            name: 'idleUSDTYieldV3',\n            address: '0x63D27B3DA94A9E871222CB0A32232674B02D2f2D'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDT',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token: 'cUSDT',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token: 'iUSDT',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token: 'aUSDT',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            decimals: 18,\n            name: 'aavev2',\n            enabled: true,\n            token: 'aUSDTv2',\n            address: '0x3ed3b47dd13ec9a98b44e6204a523e766b225811',\n            functions: {\n\n            }\n          }\n        ]\n      },\n      SUSD: {\n        decimals: 18,\n        token: 'SUSD',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        skipMintForDeposit: false,\n        color: 'hsl(250, 31%, 15%)',\n        // icon:'images/tokens/SUSD.svg',\n        address: '0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n        wyre: {\n          destCurrency: 'SUSD'\n        },\n        defiPrime: {\n          token: 'susd'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleSUSDYield',\n          address: '0xf52cdcd458bf455aed77751743180ec4a595fd3f',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your SUSD with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleSUSD',\n            name: 'idleSUSDYieldV3',\n            address: '0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleSUSD',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x625aE63000f46200499120B906716420bd059240',\n            token: 'aSUSD',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'aavev2',\n            enabled: true,\n            abi: aToken,\n            address: '0x6c5024cd4f8a59110119c56f8933403a539555eb',\n            token: 'aSUSDv2',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      TUSD: {\n        decimals: 18,\n        token: 'TUSD',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        skipMintForDeposit: false,\n        color: 'hsl(217, 100%, 20%)',\n        address: '0x0000000000085d4780b73119b644ae5ecd22b376',\n        wyre: {\n          destCurrency: 'TUSD'\n        },\n        defiPrime: {\n          token: 'tusd'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleTUSDYield',\n          address: '0xc278041fDD8249FE4c1Aad1193876857EEa3D68c',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your TUSD with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleTUSD',\n            name: 'idleTUSDYieldV3',\n            address: '0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleTUSD',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x4da9b813057d04baef4e5800e36083717b4a0341',\n            token: 'aTUSD',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aTUSDv2',\n            address: '0x101cc05f4A51C0319f570d5E146a8C625198e636',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      WETH: {\n        abi: WETH,\n        token: 'WETH',\n        decimals: 18,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        deposit: {\n          minAmountForMint: 5000,\n        },\n        wyre: {\n          destCurrency: 'WETH'\n        },\n        ramp: {\n          swapAsset: 'WETH'\n        },\n        defiPrime: {\n          token: 'weth'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleWETHYield',\n          address: '0xC8E6CA6E96a326dC448307A5fDE90a0b21fd7f80',\n        },\n        protocols: [\n          {\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x4Ddc2D193948926D02f9B1fE9e1daa0718270ED5',\n            token: 'cETH',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: aToken,\n            name: 'aavev2',\n            enabled: true,\n            address: '0x030bA81f1c18d280636F32af80b9AAd02Cf0854e',\n            token: 'aWETH',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n        ]\n      },\n      WBTC: {\n        decimals: 8,\n        token: 'WBTC',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(29, 81%, 59%)',\n        address: '0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        deposit: {\n          minAmountForMint: 5000,\n        },\n        wyre: {\n          destCurrency: 'WBTC'\n        },\n        defiPrime: {\n          token: 'wbtc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleWBTCYield',\n          address: '0x8C81121B15197fA0eEaEE1DC75533419DcfD3151',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your WBTC with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleWBTC',\n            name: 'idleWBTCYieldV3',\n            address: '0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleWBTC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            enabled: true,\n            token: 'cWBTC',\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0xccF4429DB6322D5C611ee964527D42E5d685DD6a',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: iToken,\n            decimals: 18,\n            token: 'iWBTC',\n            enabled: false,\n            name: 'fulcrum',\n            address: '0xba9262578efef8b3aff7f60cd629d6cc8859c8b5',\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            abi: aToken,\n            name: 'aave',\n            enabled: true,\n            token: 'aWBTC',\n            address: '0xfc4b8ed459e00e5400be803a9bb3954234fd50e3',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aWBTCv2',\n            address: '0x9ff58f4fFB29fA2266Ab25e75e2A8b3503311656',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      RAI: {\n        deposit: {},\n        token: 'RAI',\n        decimals: 18,\n        enabled: true,\n        abi: ERC20.abi,\n        enabledEnvs: [],\n        govTokensDisabled: false,\n        color: 'hsl(169,42%,37%)',\n        icon: 'images/tokens/RAI.png',\n        address: '0x03ab458634910aad20ef5f1c8ee96f1d6ac54919',\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleRAIYield',\n          address: '0x5C960a3DCC01BE8a0f49c02A8ceBCAcf5D07fABe',\n        },\n        protocols: [\n          {\n            abi: crToken,\n            decimals: 28,\n            enabled: true,\n            name: 'cream',\n            token: 'crRAI',\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0xf8445c529d363ce114148662387eba5e62016e20',\n          },\n          {\n            abi: fToken,\n            decimals: 28,\n            name: 'fuse',\n            token: 'fRAI',\n            enabled: true,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0x752F119bD4Ee2342CE35E2351648d21962c7CAfE',\n          }\n        ]\n      },\n      FEI: {\n        deposit: {},\n        token: 'FEI',\n        decimals: 18,\n        enabled: true,\n        abi: ERC20.abi,\n        enabledEnvs: [],\n        govTokensDisabled: false,\n        color: 'hsl(158, 64%, 37%)',\n        address: '0x956f47f50a910163d8bf957cf5846d573e7f87ca',\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleFEIYield',\n          address: '0xb2d5CB72A621493fe83C6885E4A776279be595bC',\n        },\n        protocols: [\n          {\n            abi: crToken,\n            decimals: 28,\n            enabled: true,\n            name: 'cream',\n            token: 'crFEI',\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0x8C3B7a4320ba70f8239F83770c4015B5bc4e6F91',\n          },\n          {\n            abi: fToken,\n            decimals: 28,\n            name: 'fuse',\n            token: 'fFEI',\n            enabled: true,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0xd8553552f8868C1Ef160eEdf031cF0BCf9686945',\n          }\n        ]\n      },\n    },\n    risk: {\n      DAI: {\n        abi: DAI,\n        decimals: 18,\n        token: 'DAI',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n        wyre: {\n          destCurrency: 'DAI'\n        },\n        ramp: {\n          swapAsset: 'DAI'\n        },\n        defiPrime: {\n          token: 'dai'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleDAISafe',\n          address: '0xa14ea0e11121e6e951e87c66afe460a00bcd6a16'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleDAI',\n            name: 'idleDAISafeV3',\n            address: '0x1846bdfDB6A0f5c473dEc610144513bd071999fB'\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token: 'yxDAIOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleDAI',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token: 'cDAI',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x493c57c4763932315a328269e1adad09653b9081',\n            token: 'iDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token: 'aDAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'dsr',\n            enabled: true,\n            abi: CHAI,\n            address: '0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token: 'CHAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token: 'yxDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDC: {\n        decimals: 6,\n        token: 'USDC',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCSafe',\n          address: '0x3391bc034f2935ef0e1e41619445f998b2680d35'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDC',\n            name: 'idleUSDCSafeV3',\n            address: '0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token: 'yxUSDCOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token: 'cUSDC',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token: 'iUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token: 'aUSDC',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token: 'yxUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDT: {\n        decimals: 6,\n        token: 'USDT',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre: {\n          destCurrency: 'USDT'\n        },\n        defiPrime: {\n          token: 'usdt'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDTSafe',\n          address: '0x28fAc5334C9f7262b3A3Fe707e250E01053e07b5'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDT',\n            name: 'idleUSDTSafeV3',\n            address: '0x42740698959761baf1b06baa51efbd88cb1d862b'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleDAI',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token: 'cUSDT',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token: 'iUSDT',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token: 'aUSDT',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      }\n    }\n  },\n  1: { // Mainnet\n    best: {\n      DAI: {\n        abi: DAI,\n        token: 'DAI',\n        decimals: 18,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'DAI'\n        },\n        ramp: {\n          swapAsset: 'DAI'\n        },\n        defiPrime: {\n          token: 'dai'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleDAIYield',\n          address: '0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your DAI with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleDAI',\n            name: 'idleDAIYieldV3',\n            address: '0x78751b12da02728f467a44eac40f5cbc16bd7934',\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token: 'yxDAIOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            token: 'idleDAI',\n            abi: IdleConverterPersonalSignV4,\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.9,\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token: 'cDAI',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: iToken,\n            enabled: false,\n            name: 'fulcrum',\n            address: '0x493c57c4763932315a328269e1adad09653b9081',\n            token: 'iDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.4,\n            abi: aToken,\n            name: 'aave',\n            enabled: true,\n            address: '0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token: 'aDAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.4,\n            abi: aToken,\n            name: 'aavev2',\n            enabled: true,\n            address: '0x028171bCA77440897B824Ca71D1c56caC55b68A3',\n            token: 'aDAIv2',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: CHAI,\n            name: 'dsr',\n            enabled: true,\n            address: '0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token: 'CHAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.7,\n            abi: yToken,\n            name: 'dydx',\n            enabled: true,\n            address: '0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token: 'yxDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDC: {\n        abi: USDC,\n        decimals: 6,\n        token: 'USDC',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCYield',\n          address: '0x5274891bEC421B39D23760c04A6755eCB444797C',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your USDC with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDC',\n            name: 'idleUSDCYieldV3',\n            address: '0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6'\n          },\n          oldProtocols: [\n            {\n              abi: yToken,\n              name: 'dydx',\n              enabled: true,\n              address: '0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token: 'yxUSDCOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 8.0,\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token: 'cUSDC',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token: 'iUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.4,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token: 'aUSDC',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.4,\n            abi: aToken,\n            decimals: 18,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aUSDCv2',\n            address: '0xBcca60bB61934080951369a648Fb03DF4F96263C',\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.8,\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token: 'yxUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDT: {\n        decimals: 6,\n        token: 'USDT',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre: {\n          destCurrency: 'USDT'\n        },\n        defiPrime: {\n          token: 'usdt'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDTYield',\n          address: '0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your USDT with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDT',\n            name: 'idleUSDTYieldV3',\n            address: '0x63D27B3DA94A9E871222CB0A32232674B02D2f2D'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDT',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.9,\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token: 'cUSDT',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token: 'iUSDT',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.2,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token: 'aUSDT',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.2,\n            abi: aToken,\n            decimals: 18,\n            name: 'aavev2',\n            enabled: true,\n            token: 'aUSDTv2',\n            address: '0x3ed3b47dd13ec9a98b44e6204a523e766b225811',\n            functions: {\n\n            }\n          }\n        ]\n      },\n      SUSD: {\n        decimals: 18,\n        token: 'SUSD',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        skipMintForDeposit: false,\n        color: 'hsl(250, 31%, 15%)',\n        // icon:'images/tokens/SUSD.svg',\n        address: '0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n        wyre: {\n          destCurrency: 'SUSD'\n        },\n        defiPrime: {\n          token: 'susd'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleSUSDYield',\n          address: '0xf52cdcd458bf455aed77751743180ec4a595fd3f',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your SUSD with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleSUSD',\n            name: 'idleSUSDYieldV3',\n            address: '0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleSUSD',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.2,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x625aE63000f46200499120B906716420bd059240',\n            token: 'aSUSD',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.2,\n            name: 'aavev2',\n            enabled: true,\n            abi: aToken,\n            address: '0x6c5024cd4f8a59110119c56f8933403a539555eb',\n            token: 'aSUSDv2',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      TUSD: {\n        decimals: 18,\n        token: 'TUSD',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        skipMintForDeposit: false,\n        color: 'hsl(217, 100%, 20%)',\n        address: '0x0000000000085d4780b73119b644ae5ecd22b376',\n        wyre: {\n          destCurrency: 'TUSD'\n        },\n        defiPrime: {\n          token: 'tusd'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleTUSDYield',\n          address: '0xc278041fDD8249FE4c1Aad1193876857EEa3D68c',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your TUSD with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleTUSD',\n            name: 'idleTUSDYieldV3',\n            address: '0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleTUSD',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.8,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x4da9b813057d04baef4e5800e36083717b4a0341',\n            token: 'aTUSD',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.8,\n            abi: aToken,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aTUSDv2',\n            address: '0x101cc05f4A51C0319f570d5E146a8C625198e636',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      WETH: {\n        abi: WETH,\n        token: 'WETH',\n        decimals: 18,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        deposit: {\n          minAmountForMint: 5000,\n        },\n        wyre: {\n          destCurrency: 'WETH'\n        },\n        ramp: {\n          swapAsset: 'WETH'\n        },\n        defiPrime: {\n          token: 'weth'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleWETHYield',\n          address: '0xC8E6CA6E96a326dC448307A5fDE90a0b21fd7f80',\n        },\n        protocols: [\n          {\n            defiScore: 8.8,\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x4Ddc2D193948926D02f9B1fE9e1daa0718270ED5',\n            token: 'cETH',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 8.3,\n            abi: aToken,\n            name: 'aavev2',\n            enabled: true,\n            address: '0x030bA81f1c18d280636F32af80b9AAd02Cf0854e',\n            token: 'aWETH',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n        ]\n      },\n      WBTC: {\n        decimals: 8,\n        token: 'WBTC',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(29, 81%, 59%)',\n        address: '0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        deposit: {\n          minAmountForMint: 5000,\n        },\n        wyre: {\n          destCurrency: 'WBTC'\n        },\n        defiPrime: {\n          token: 'wbtc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleWBTCYield',\n          address: '0x8C81121B15197fA0eEaEE1DC75533419DcfD3151',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your WBTC with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleWBTC',\n            name: 'idleWBTCYieldV3',\n            address: '0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleWBTC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 8.9,\n            enabled: true,\n            token: 'cWBTC',\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0xccF4429DB6322D5C611ee964527D42E5d685DD6a',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: iToken,\n            decimals: 18,\n            token: 'iWBTC',\n            enabled: false,\n            name: 'fulcrum',\n            address: '0xba9262578efef8b3aff7f60cd629d6cc8859c8b5',\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 8.3,\n            abi: aToken,\n            name: 'aave',\n            enabled: true,\n            token: 'aWBTC',\n            address: '0xfc4b8ed459e00e5400be803a9bb3954234fd50e3',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 8.3,\n            abi: aToken,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aWBTCv2',\n            address: '0x9ff58f4fFB29fA2266Ab25e75e2A8b3503311656',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      RAI: {\n        deposit: {},\n        token: 'RAI',\n        decimals: 18,\n        enabled: true,\n        abi: ERC20.abi,\n        enabledEnvs: [],\n        defiScoreDisabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(169,42%,37%)',\n        icon: 'images/tokens/RAI.png',\n        address: '0x03ab458634910aad20ef5f1c8ee96f1d6ac54919',\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleRAIYield',\n          address: '0x5C960a3DCC01BE8a0f49c02A8ceBCAcf5D07fABe',\n        },\n        protocols: [\n          /*\n          {\n            abi:crToken,\n            decimals:28,\n            name:'cream',\n            token:'crRAI',\n            enabled:false,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0xf8445c529d363ce114148662387eba5e62016e20',\n          },\n          */\n          {\n            abi: fToken,\n            decimals: 28,\n            name: 'fuse',\n            token: 'fRAI',\n            enabled: true,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0x752F119bD4Ee2342CE35E2351648d21962c7CAfE',\n          },\n          {\n            abi: aToken,\n            decimals: 18,\n            token: 'aRAI',\n            enabled: true,\n            name: 'aavev2',\n            functions: {\n            },\n            address: '0xc9bc48c72154ef3e5425641a3c747242112a46af',\n          }\n        ]\n      },\n      FEI: {\n        deposit: {},\n        token: 'FEI',\n        decimals: 18,\n        enabled: true,\n        abi: ERC20.abi,\n        enabledEnvs: [],\n        defiScoreDisabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(158, 64%, 37%)',\n        address: '0x956f47f50a910163d8bf957cf5846d573e7f87ca',\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleFEIYield',\n          address: '0xb2d5CB72A621493fe83C6885E4A776279be595bC',\n        },\n        protocols: [\n          {\n            abi: crToken,\n            decimals: 28,\n            enabled: true,\n            name: 'cream',\n            token: 'crFEI',\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0x8C3B7a4320ba70f8239F83770c4015B5bc4e6F91',\n          },\n          {\n            abi: fToken,\n            decimals: 28,\n            name: 'fuse',\n            token: 'fFEI',\n            enabled: true,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0xd8553552f8868C1Ef160eEdf031cF0BCf9686945',\n          },\n          {\n            abi: aToken,\n            decimals: 18,\n            token: 'aFEI',\n            enabled: true,\n            functions: {},\n            name: 'aavev2',\n            address: '0x683923dB55Fead99A79Fa01A27EeC3cB19679cC3',\n          }\n        ]\n      },\n    },\n    risk: {\n      DAI: {\n        abi: DAI,\n        decimals: 18,\n        token: 'DAI',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n        wyre: {\n          destCurrency: 'DAI'\n        },\n        ramp: {\n          swapAsset: 'DAI'\n        },\n        defiPrime: {\n          token: 'dai'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleDAISafe',\n          address: '0xa14ea0e11121e6e951e87c66afe460a00bcd6a16'\n        },\n        canDeposit: {\n          enabled: false,\n          disabledMessageRedeemKey: 'riskAdjustedDisabledMessageRedeem',\n          disabledMessageDepositKey: 'riskAdjustedDisabledMessageDeposit'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleDAI',\n            name: 'idleDAISafeV3',\n            address: '0x1846bdfDB6A0f5c473dEc610144513bd071999fB'\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token: 'yxDAIOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleDAI',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.9,\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token: 'cDAI',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x493c57c4763932315a328269e1adad09653b9081',\n            token: 'iDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.4,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token: 'aDAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'dsr',\n            enabled: true,\n            abi: CHAI,\n            address: '0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token: 'CHAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.7,\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token: 'yxDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDC: {\n        decimals: 6,\n        token: 'USDC',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCSafe',\n          address: '0x3391bc034f2935ef0e1e41619445f998b2680d35'\n        },\n        canDeposit: {\n          enabled: false,\n          disabledMessageRedeemKey: 'riskAdjustedDisabledMessageRedeem',\n          disabledMessageDepositKey: 'riskAdjustedDisabledMessageDeposit'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDC',\n            name: 'idleUSDCSafeV3',\n            address: '0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token: 'yxUSDCOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 8.0,\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token: 'cUSDC',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token: 'iUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.4,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token: 'aUSDC',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.8,\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token: 'yxUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDT: {\n        decimals: 6,\n        token: 'USDT',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre: {\n          destCurrency: 'USDT'\n        },\n        defiPrime: {\n          token: 'usdt'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDTSafe',\n          address: '0x28fAc5334C9f7262b3A3Fe707e250E01053e07b5'\n        },\n        canDeposit: {\n          enabled: false,\n          disabledMessageRedeemKey: 'riskAdjustedDisabledMessageRedeem',\n          disabledMessageDepositKey: 'riskAdjustedDisabledMessageDeposit'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDT',\n            name: 'idleUSDTSafeV3',\n            address: '0x42740698959761baf1b06baa51efbd88cb1d862b'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleDAI',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.9,\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token: 'cUSDT',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token: 'iUSDT',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.2,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token: 'aUSDT',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      }\n    }\n  }\n};\n\nexport default availableTokens;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__38P6I\",\"link\":\"Footer_link__13yZU\"};","import React from \"react\";\nimport styles from './ModalCard.module.scss';\nimport { Box, Flex, Card, Button, Heading, Image } from \"rimble-ui\";\n\nconst ModalCard = ({children, closeFunc, ...props}) => (\n  <Card\n    p={0}\n    border={0}\n    mx={'auto'}\n    my={'auto'}\n    height={'auto'}\n    borderRadius={2}\n    overflow={'auto'}\n    width={ props.width ? props.width : 'auto' }\n    minWidth={ props.minWidth ? props.minWidth : 'auto' }\n    maxWidth={ props.maxWidth ? props.maxWidth : '960px'}\n  >\n    <Box\n      top={'0'}\n      zIndex={1}\n      right={'0'}\n      position={\"absolute\"}\n    >\n      <Button.Text\n        icononly\n        icon={\"Close\"}\n        size={'2.5em'}\n        onClick={closeFunc}\n        mainColor={ props.mainColor ? props.mainColor :  'copyColor' }\n      />\n    </Box>\n    <Flex\n      height={'100%'}\n      flex={'1 1 auto'}\n      flexDirection={'column'}\n      className={[ props.bgLayer ? styles.bg : null]}\n      style={{\n        overflow: 'auto',\n        backgroundRepeat:'no-repeat',\n        backgroundPosition:'bottom right',\n        backgroundSize: !props.background ? '65%' : null,\n        backgroundImage:'url(/images/bg-bottom-right.png)',\n        background: props.background ? props.background : null,\n      }}\n      backgroundColor={'cardBg'}\n    >\n      {children}\n    </Flex>\n  </Card>\n);\n\nModalCard.Header = (props) => (\n  <Box\n    width={1}\n    mb={[2,3]}\n    pb={[2,2]}\n    pt={ props.pt ? props.pt : (props.icon ? 3 : [5,3]) }\n    borderBottom={ props.borderBottom ? props.borderBottom : '1px solid #eee' }\n  >\n    <Flex\n      px={[1,2]}\n      alignItems={'center'}\n      flexDirection={'column'}\n    >\n      { props.icon && <Image width={ props.iconHeight ? props.iconHeight : '50px' } src={props.icon} /> }\n      <Heading.h3\n        mb={0}\n        fontSize={[3,3]}\n        color={'copyColor'}\n        textAlign={'center'}\n        mt={props.icon ? 2 : 0}\n        fontFamily={'sansSerif'}\n        {...props.titleProps}\n      >\n        {props.title}\n      </Heading.h3>\n      {\n        props.subtitle &&\n        <Heading.h4\n          pt={[1,2]}\n          fontWeight={2}\n          fontSize={[2,2]}\n          lineHeight={1.5}\n          color={'dark-gray'}\n          textAlign={'center'}\n          {...props.subtitleProps}\n        >\n          {props.subtitle}\n        </Heading.h4>\n      }\n      {\n        props.subtitle2 &&\n        <Heading.h4 pt={0} fontSize={[2,2]} textAlign={'center'} fontWeight={2} lineHeight={1.5} color={'dark-gray'}>\n          {props.subtitle2}\n        </Heading.h4>\n      }\n    </Flex>\n  </Box>\n);\n\nModalCard.Body = ({children, ...props}) => (\n  <Box\n    width={1}\n    px={[3,5]}\n    {...props}\n  >\n    {children}\n  </Box>\n);\n/*\nModalCard.Body = ({children, ...props}) => (\n  <Flex flex={'1 1 auto'} style={{ overflow: 'auto' }} >\n    <Box width={1} px={[4,5]} py={[3,4]} m={'auto'}>\n      {children}\n    </Box>\n  </Flex>\n);\n*/\n\nModalCard.Footer = ({children, ...props}) => (\n  <Flex\n    flex={'1 0 auto'}\n    justifyContent={'center'}\n    borderTop={1}\n    borderColor={'light-gray'}\n    px={[0,3]}\n    py={3}\n  >\n    {children}\n  </Flex>\n);\n\n\nModalCard.BackButton = ({onClick, ...props}) => (\n  <Box\n    position={'absolute'}\n    top={'0'}\n    left={'0'}\n    m={3}\n    bg={'white'}\n  >\n    <Button.Outline\n      onClick={onClick}\n      icononly\n      icon={'ArrowBack'}\n      size={'2.5em'}\n    />\n  </Box>\n);\n\nexport default ModalCard;\n","import { tint, shade, readableColor } from 'polished';\n\n// rimble base colors\nconst baseColors = {\n  black: '#000e1a',\n  white: '#FFF',\n  blue: '#0036ff',\n  darkBlue: '#0028be',\n  green: '#28C081',\n  yellow: '#FD9D28',\n  red: '#DC2C10',\n  blurple: '#4E3FCE',\n  consensysblue: '#3259D6',\n};\n\n// rimble palette\nconst colors = {\n  blurple: {\n    base: baseColors.blurple,\n    text: readableColor(baseColors.blurple),\n    light: [null, tint(0.2, baseColors.blurple)],\n    dark: [null, shade(0.2, baseColors.blurple)],\n  },\n  blue: {\n    base: baseColors.blue,\n    text: readableColor(baseColors.blue),\n    light: [null, tint(0.9, baseColors.blue)],\n    dark: [null, shade(0.4, baseColors.blue)],\n  },\n  green: {\n    base: baseColors.green,\n    text: baseColors.white,\n    light: [null, tint(0.9, baseColors.green)],\n    dark: [null, shade(0.4, baseColors.green)],\n  },\n  yellow: {\n    base: baseColors.yellow,\n    text: readableColor(baseColors.yellow),\n    light: [null, tint(0.9, baseColors.yellow)],\n    dark: [null, shade(0.4, baseColors.yellow)],\n  },\n  red: {\n    base: baseColors.red,\n    text: readableColor(baseColors.red),\n    light: [null, tint(0.9, baseColors.red)],\n    dark: [null, shade(0.4, baseColors.red)],\n  },\n};\n\nconst blurple = colors.blurple;\nconst blue = colors.blue;\nconst green = colors.green;\nconst yellow = colors.yellow;\nconst red = colors.red;\n\nexport { blurple };\nexport { blue };\nexport { green };\nexport { yellow };\nexport { red };\nexport default baseColors;\n","import { Flex, Icon } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass VariationNumber extends Component {\n\n  render() {\n\n    const IconDirection = () => (\n      <Icon\n        color={ this.props.direction === 'up' ?  '#6dd400' : '#f7b500' }\n        name={ this.props.direction === 'up' ?  'ArrowDropUp' : 'ArrowDropDown' }\n        size={ this.props.iconSize ? this.props.iconSize : ( this.props.isMobile ? '1.4em' : '2em') }\n      />\n    );\n\n    return (\n      <Flex\n        alignItems={'center'}\n        flexDirection={'row'}\n        width={ this.props.width ? this.props.width : 1 }\n        justifyContent={this.props.justifyContent ? this.props.justifyContent : 'center'}\n      >\n        {\n          (!this.props.iconPos || this.props.iconPos==='left') &&\n            <IconDirection />\n        }\n        {this.props.children}\n        {\n          this.props.iconPos==='right' &&\n            <IconDirection />\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default VariationNumber;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchInput\":\"GenericSelector_searchInput__vl2hJ\",\"genericSelector\":\"GenericSelector_genericSelector__1Nqkd\",\"dark\":\"GenericSelector_dark__zCOnP\",\"searchInputHidden\":\"GenericSelector_searchInputHidden__2Zm1B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loading-dots\":\"LoadingSpinner_loading-dots__2-3YZ\",\"loading-dots--dot\":\"LoadingSpinner_loading-dots--dot__2Y25C\",\"dot-keyframes\":\"LoadingSpinner_dot-keyframes__3SU_M\"};","import React, { Component } from 'react';\nimport { Flex, Loader, Text } from \"rimble-ui\";\n\nclass FlexLoader extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        justifyContent={'center'}\n        {...this.props.flexProps}\n      >\n        <Loader {...this.props.loaderProps} />\n        {\n          this.props.text &&\n            <Text {...this.props.textProps}>{this.props.text}</Text>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default FlexLoader;\n","import { Button } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass RoundButton extends Component {\n  render() {\n    const buttonProps = Object.assign({\n      width:1,\n      fontWeight:3,\n      height:'45px',\n      fontSize:[2,3],\n      boxShadow:null,\n      borderRadius:4,\n      mainColor:'blue'\n    },this.props.buttonProps);\n\n    return (\n       <Button\n        {...buttonProps}\n        onClick={this.props.handleClick}\n       >\n        {this.props.children}\n       </Button>\n    );\n  }\n}\n\nexport default RoundButton;\n","import {\n  Link as RouterLink,\n} from \"react-router-dom\";\nimport ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport styles from './Footer.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Heading, Image, Link } from 'rimble-ui';\n\nclass Footer extends Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  render() {\n    const currYear = new Date().getFullYear();\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n    const columnWidth = governanceEnabled ? 1/4 : 1/3;\n    return (\n      <Flex\n        pl={0}\n        id={\"footer\"}\n        alignItems={'center'}\n        flexDirection={'column'}\n        className={styles.footer}\n        backgroundColor={'white'}\n        justifyContent={'flex-start'}\n      >\n        <Flex\n          width={1}\n          px={[3,6]}\n          justifyContent={'center'}\n        >\n          <Flex\n            width={1}\n            height={['auto','100%']}\n            alignItems={'flex-start'}\n            maxWidth={['35em','70em']}\n            justifyContent={'flex-start'}\n            flexDirection={['column','row']}\n          >\n            <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Resources\n              </Heading.h3>\n              <Flex width={1} flexDirection={'column'}>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://developers.idle.finance'}\n                >\n                  <span role=\"img\" aria-label=\"documentation\">📚</span> Documentation\n                </ExtLink>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://idlelabs.notion.site/Idle-Brand-Assets-fd63e4161cb64c999531646c7549bc4b'}\n                >\n                  <span role=\"img\" aria-label=\"brand-assets\">🎨</span> Brand Assets\n                </ExtLink>\n                <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                  <RouterLink\n                    color={'blue'}\n                    to=\"/terms-of-service\"\n                    className={styles.link}\n                  >\n                    <Text\n                      fontWeight={3}\n                      color={'blue'}\n                      fontSize={[3,2]}\n                      hoverColor={'blue'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                    >\n                      <span role=\"img\" aria-label=\"terms-of-service\">📑</span> Terms of Service\n                    </Text>\n                  </RouterLink>\n                </Flex>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://www.iubenda.com/privacy-policy/61211749'}\n                >\n                  <span role=\"img\" aria-label=\"privacy-policy\">🕵️‍♂️</span> Privacy Policy\n                </ExtLink>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://www.iubenda.com/privacy-policy/61211749/cookie-policy'}\n                >\n                  <span role=\"img\" aria-label=\"cookie-policy\">🍪</span> Cookie Policy\n                </ExtLink>\n              </Flex>\n            </Flex>\n            {\n              governanceEnabled && \n                <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n                  <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                    Governance\n                  </Heading.h3>\n                  <Flex width={1} flexDirection={'column'}>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        to={\"/governance\"}\n                        className={styles.link}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-overview\">🏛</span> Overview\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        className={styles.link}\n                        to={\"/governance/proposals\"}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-proposals\">💡</span> Proposals\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        className={styles.link}\n                        to={\"/governance/leaderboard\"}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-leaderboard\">📋</span> Leaderboard\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <ExtLink href=\"https://gov.idle.finance/\">\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-forum\">🤝</span> Forum\n                        </Text>\n                      </ExtLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <ExtLink href=\"https://www.notion.so/idlelabs/ffe8115b7b53489ab0a7f84e656e4bb0?v=916250f54ff24daabad72cf095fd6d88\">\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-forum\">🌎</span> Team\n                        </Text>\n                      </ExtLink>\n                    </Flex>\n                  </Flex>\n                </Flex>\n            }\n            <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Start a Conversation\n              </Heading.h3>\n              <Link textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} color={'blue'} hoverColor={'blue'}>\n                <span role=\"img\" aria-label=\"email\">✉️</span> info@idle.finance\n              </Link>\n            </Flex>\n            <Flex width={[1,columnWidth]} flexDirection={'column'}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Explore\n              </Heading.h3>\n              <Flex flexDirection={'row'} justifyContent={['space-evenly','flex-start']}>\n                <ExtLink href=\"https://twitter.com/idlefinance\">\n                  <Image src=\"images/social/twitter.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://t.me/idlefinance\">\n                  <Image src=\"images/social/telegram.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://discord.gg/mpySAJp\">\n                  <Image src=\"images/social/discord.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://medium.com/@idlefinance\">\n                  <Image src=\"images/social/medium.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://github.com/Idle-Labs/\">\n                  <Image src=\"images/social/github.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://www.linkedin.com/company/idlefinance\">\n                  <Image src=\"images/social/linkedin.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://defipulse.com/defi-list\">\n                  <Image src=\"images/social/defi-pulse.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n              </Flex>\n            </Flex>\n          </Flex>\n        </Flex>\n        <Flex\n          width={1}\n          height={['auto','100%']}\n          flexDirection={'column'}\n          alignItems={['center','flex-end']}\n          justifyContent={['center','flex-end']}\n        >\n          <Flex\n            p={2}\n            width={1}\n            alignItems={'center'}\n            justifyContent={'center'}\n            backgroundColor={'dark-blue'}\n            flexDirection={['column','row']}\n          >\n            <Text\n              color={'white'}\n              textAlign={['center','flex-end']}\n            >\n              &copy; {currYear} - Idle Labs Inc.\n            </Text>\n            <RouterLink\n              color={'blue'}\n              to={'/terms-of-service'}\n              style={{textDecoration:'none'}}\n            >\n              <Text\n                pl={2}\n                color={'#0df'}\n                textAlign={['center','flex-end']}\n              >\n                Terms of Service\n              </Text>\n            </RouterLink>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default Footer;\n","import React, { Component } from 'react';\nimport styles from './TableCellHeader.module.scss';\nimport { Flex, Heading, Icon, Link, Tooltip } from \"rimble-ui\";\n\nclass TableCellHeader extends Component {\n  render() {\n\n    const ColTitle = (props) => (\n      <Heading.h4\n        fontWeight={[3,4]}\n        color={'cellTitle'}\n        style={{\n          width:'100%',\n          whiteSpace:'nowrap'\n        }}\n        fontSize={['10px',3]}\n        lineHeight={'initial'}\n        {...props}\n      >\n        {props.children}\n      </Heading.h4>\n    );\n\n    return (\n      <Flex\n        width={this.props.width}\n      >\n        {\n          (this.props.desc && this.props.desc.length>1) ? (\n            <Flex\n              alignItems={'center'}\n            >\n              <ColTitle\n                {...this.props}\n              />\n              <Link\n                style={{\n                  cursor:'pointer'\n                }}\n                onClick={ e => this.props.openTooltipModal(this.props.title,this.props.desc) }\n              >\n                <Tooltip\n                  placement={'top'}\n                  message={'Click to read the description'}\n                >\n                  <Icon\n                    ml={1}\n                    name={\"Info\"}\n                    color={'cellTitle'}\n                    className={styles.tooltip}\n                    size={ this.props.isMobile ? '1em' : '1.2em'}\n                  />\n                </Tooltip>\n              </Link>\n            </Flex>\n          ) : (\n            <ColTitle\n              {...this.props}\n            />\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TableCellHeader;\n","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass ChartCustomTooltip extends Component {\n\n  async componentWillMount(){\n\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    \n  }\n\n  render() {\n    return (\n      <DashboardCard\n        key={this.props.point.id}\n        cardProps={{\n          py:2,\n          px:3,\n          width:1,\n          left: this.props.point.data.itemPos && this.props.point.data.itemPos>50 ? '-110%' : '0'\n        }}\n      >\n        <Flex\n          width={1}\n          flexDirection={'column'}\n        >\n          {\n            this.props.point.data.xFormatted && \n              <Text\n                mb={2}\n                fontSize={1}\n                fontWeight={3}\n                color={'cellText'}\n                textAlign={'left'}\n              >\n                {this.props.point.data.xFormatted}\n              </Text>\n          }\n          {this.props.children}\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default ChartCustomTooltip;\n","import React, { Component } from 'react';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Text, Icon, Image, Button, Link, Flex } from \"rimble-ui\";\n\nclass CustomField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    \n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText'\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    let CustomComponent = null;\n    let componentHasChildren = false;\n    const fieldType = fieldInfo.type;\n    const fieldPath = fieldInfo.path;\n    let customValue = fieldPath ? this.functionsUtil.getArrayPath(fieldPath,this.props.row) : null;\n\n    switch (fieldType){\n      case 'image':\n        CustomComponent = Image;\n        fieldProps.src = customValue;\n      break;\n      case 'number':\n        customValue = this.functionsUtil.BNify(customValue).toString();\n        CustomComponent = SmartNumber;\n        fieldProps.number = customValue;\n      break;\n      case 'link':\n        CustomComponent = Link;\n      break;\n      case 'icon':\n        CustomComponent = Icon;\n        fieldProps.name = customValue;\n      break;\n      case 'bgIcon':\n        CustomComponent = (props) => (\n          <Flex\n            p={'5px'}\n            borderRadius={'50%'}\n            alignItems={'center'}\n            justifyContent={'center'}\n            backgroundColor={props.bgColor}\n          >\n            <Icon\n              align={'center'}\n              name={customValue}\n              color={props.color}\n              size={this.props.isMobile ? '1em' : '1.4em'}\n            />\n          </Flex>\n        );\n        fieldProps.name = customValue;\n      break;\n      case 'button':\n        CustomComponent = Button;\n        componentHasChildren = true;\n        customValue = fieldInfo.label || fieldProps.label;\n        fieldProps.onClick=() => fieldProps.handleClick(this.props)\n      break;\n      default:\n        CustomComponent = Text;\n        componentHasChildren = true;\n      break;\n    }\n\n    if (!customValue){\n      return null;\n    }\n\n    // Add custom field extra props\n    if (fieldPath){\n      const customFieldName = Object.values(fieldPath).pop();\n      if (this.props.row[`${customFieldName}Props`]){\n        const customFieldProps = this.props.row[`${customFieldName}Props`];\n        // Replace props\n        if (customFieldProps && Object.keys(customFieldProps).length){\n          Object.keys(customFieldProps).forEach(p => {\n            fieldProps[p] = customFieldProps[p];\n          });\n        }\n      }\n    }\n\n    return CustomComponent ? (componentHasChildren ? (<CustomComponent {...fieldProps}>{customValue}</CustomComponent>) : (<CustomComponent {...fieldProps} />) ) : null;\n  }\n}\n\nexport default CustomField;","import { Heading } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass Title extends Component {\n  render() {\n    const props = {\n      fontWeight:4,\n      fontSize:[4,6],\n      color:'copyColor',\n      textAlign:'center',\n      lineHeight:'initial',\n    };\n\n    // Replace props\n    if (this.props && Object.keys(this.props).length){\n      Object.keys(this.props).forEach(p => {\n        props[p] = this.props[p];\n      });\n    }\n\n    const HeadingComponent = this.props.component ? this.props.component : Heading.h1;\n\n    return (\n      <HeadingComponent\n        {...props}\n      >\n        {this.props.children}\n      </HeadingComponent>\n    );\n  }\n}\n\nexport default Title;\n","import { Link } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass ExtLink extends Component {\n\n  render() {\n    return (\n      <Link\n        color={'link'}\n        target={'_blank'}\n        rel={'nofollow noopener noreferrer'}\n        {...this.props}\n      >\n        {this.props.children}\n      </Link>\n    );\n  }\n}\n\nexport default ExtLink;\n","import { Line } from '@nivo/line';\nimport CountUp from 'react-countup';\nimport React, { Component } from 'react';\nimport { linearGradientDef } from '@nivo/core'\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport CustomTooltip from '../CustomTooltip/CustomTooltip';\nimport VariationNumber from '../VariationNumber/VariationNumber';\nimport AllocationChart from '../AllocationChart/AllocationChart';\nimport CustomTooltipRow from '../CustomTooltip/CustomTooltipRow';\nimport { Image, Text, Loader, Button, Tooltip, Icon, Flex, Link } from \"rimble-ui\";\n\nclass AssetField extends Component {\n\n  state = {\n    ready:false\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const tokenChanged = prevProps.token !== this.props.token;\n    const accountChanged = prevProps.account !== this.props.account;\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    const contractInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized && this.props.contractsInitialized;\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (fieldChanged || tokenChanged || accountChanged || transactionsChanged || (contractInitialized && !this.state.ready)){\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.loadField();\n      });\n    } else if (mobileChanged || themeModeChanged){\n      const oldState = Object.assign({},this.state);\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  loadField = async(fieldName=null) => {\n    // Exit if component unmounted\n    // console.log('loadField',this.props.fieldInfo.name,this.props.account,this.props.token,this.props.tokenConfig);\n\n    if (this.componentUnmounted || !this.props.token || !this.props.tokenConfig || !this.props.contractsInitialized){\n      return false;\n    }\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const setState = fieldName === null;\n    const fieldInfo = this.props.fieldInfo;\n    if (!fieldName){\n      fieldName = fieldInfo.name;\n    }\n\n    const fieldProps = fieldInfo.props;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    // const addCurveApy = typeof this.props.addCurveApy !== 'undefined' ? this.props.addCurveApy : false;\n    const addGovTokens = typeof this.props.addGovTokens !== 'undefined' ? this.props.addGovTokens : true;\n\n    let output = null;\n    if (this.props.token){\n      switch (fieldName){\n        case 'tokenBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              tokenBalance:output.toString()\n            });\n          }\n        break;\n        case 'govTokens':\n          const govTokens = this.functionsUtil.getTokenGovTokens(this.props.tokenConfig);\n          const getGovTokensDistributionSpeed = await this.functionsUtil.getGovTokensDistributionSpeed(this.props.tokenConfig);\n          this.setStateSafe({\n            govTokens,\n            getGovTokensDistributionSpeed\n          });\n        break;\n        case 'tokenPrice':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            let tokenPrice = '-';\n            if (typeof this.props.tokenConfig.showPrice === 'undefined' || this.props.tokenConfig.showPrice){\n              tokenPrice = output.toString();\n            }\n            this.setStateSafe({\n              tokenPrice\n            });\n          }\n        break;\n        case 'fee':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              fee:output.toString()\n            });\n          }\n        break;\n        case 'amountToMigrate':\n          const {\n            oldContractBalanceFormatted\n          } = await this.functionsUtil.checkMigration(this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (setState && oldContractBalanceFormatted){\n            this.setStateSafe({\n              amountToMigrate:oldContractBalanceFormatted.toString()\n            });\n            output = oldContractBalanceFormatted;\n          }\n        break;\n        case 'amountLent':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              amountLent:output.toString()\n            });\n          }\n        break;\n        case 'idleTokenBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              idleTokenBalance:output.toString()\n            });\n          }\n        break;\n        case 'redeemableBalanceCounterCurve':\n          const {\n            redeemableBalanceCurveEnd,\n            redeemableBalanceCurveStart\n          } = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (redeemableBalanceCurveStart && redeemableBalanceCurveEnd){\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                redeemableBalanceCurveEnd,\n                redeemableBalanceCurveStart\n              });\n            }\n\n            output = {\n              redeemableBalanceCurveEnd,\n              redeemableBalanceCurveStart\n            };\n          }\n        break;\n        case 'redeemableBalanceCounter':\n          const {\n            redeemableBalanceEnd,\n            redeemableBalanceStart\n          } = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (redeemableBalanceStart && redeemableBalanceEnd){\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                redeemableBalanceEnd,\n                redeemableBalanceStart\n              });\n            }\n\n            output = {\n              redeemableBalanceEnd,\n              redeemableBalanceStart\n            };\n          }\n        break;\n        case 'earnings':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earnings:output.toString()\n            });\n          }\n        break;\n        case 'feesCounter':\n          const [earningsCounter,feePercentage] = await Promise.all([\n            this.loadField('earningsCounter'),\n            this.functionsUtil.getTokenFees(this.props.tokenConfig)\n          ]);\n\n          if (earningsCounter && earningsCounter.earningsStart && earningsCounter.earningsEnd && feePercentage){\n\n            const feesStart = earningsCounter.earningsStart.times(feePercentage);\n            const feesEnd = earningsCounter.earningsEnd.times(feePercentage);\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                feesEnd,\n                feesStart\n              });\n            }\n\n            output = {\n              feesEnd,\n              feesStart\n            };\n          }\n        break;\n        case 'earningsCounterCurve':\n          const [curveApy,earningsCurveStart,amountLentCurve] = await Promise.all([\n            this.functionsUtil.getCurveAPY(),\n            this.functionsUtil.loadAssetField('earningsCurve',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('amountLentCurve',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens)\n          ]);\n\n          if (amountLentCurve && earningsCurveStart && curveApy){\n            const earningsCurveEnd = amountLentCurve.gt(0) ? amountLentCurve.times(curveApy.div(100)).plus(earningsCurveStart) : 0;\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                earningsCurveEnd,\n                earningsCurveStart\n              });\n            }\n\n            output = {\n              earningsCurveEnd,\n              earningsCurveStart\n            };\n          }\n        break;\n        case 'earningsCounter':\n          let [tokenAPY2,earningsStart,amountLent2] = await Promise.all([\n            this.functionsUtil.loadAssetField('apy',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('earnings',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('amountLent',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens)\n          ]);\n\n\n          if (amountLent2 && earningsStart && tokenAPY2){\n            const earningsEnd = amountLent2.gt(0) ? amountLent2.times(tokenAPY2.div(100)).plus(earningsStart) : 0;\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                earningsEnd,\n                earningsStart\n              });\n            }\n\n            output = {\n              earningsEnd,\n              earningsStart\n            };\n          }\n        break;\n        case 'redeemableBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              redeemableBalance:output.toString()\n            });\n          }\n        break;\n        case 'score':\n          const tokenScore = await this.functionsUtil.getTokenScore(this.props.tokenConfig,isRisk);\n          if (setState){\n            this.setStateSafe({\n              score:tokenScore ? tokenScore : false\n            });\n          }\n          output = tokenScore;\n        break;\n        case 'pool':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              poolSize:output.toString()\n            });\n          }\n        break;\n        case 'earningsPercCurve':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earningsPercCurveDirection:parseFloat(output)>0 ? 'up' : 'down',\n              earningsPercCurve:parseFloat(output).toFixed(decimals)\n            });\n          }\n        break;\n        case 'earningsPerc':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earningsPerc:parseFloat(output).toFixed(decimals),\n              earningsPercDirection:parseFloat(output)>0 ? 'up' : 'down'\n            });\n          }\n        break;\n        case 'apr':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            let tokenAPR = '-';\n            if (typeof this.props.tokenConfig.showAPR === 'undefined' || this.props.tokenConfig.showAPR){\n              tokenAPR = parseFloat(output).toFixed(decimals);\n            }\n            this.setStateSafe({\n              tokenAPR\n            });\n          }\n        break;\n        case 'oldApy':\n          if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.oldContract){\n            const oldTokenConfig = Object.assign({},this.props.tokenConfig);\n            oldTokenConfig.idle = Object.assign({},this.props.tokenConfig.migration.oldContract);\n            oldTokenConfig.protocols = Object.values(this.props.tokenConfig.protocols);\n\n            // Override token with name\n            oldTokenConfig.idle.token = oldTokenConfig.idle.name;\n\n            // Replace protocols with old protocols\n            if (oldTokenConfig.migration.oldProtocols){\n              oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n                const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n                if (foundProtocol){\n                  const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                  oldTokenConfig.protocols[protocolPos] = oldProtocol;\n                }\n              });\n            }\n\n            output = await this.functionsUtil.loadAssetField('apy',this.props.token,oldTokenConfig,this.props.account,false);\n\n          } else {\n            output = await this.loadField('apyNoGov');\n          }\n\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                oldAPY:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                oldAPY:false\n              });\n            }\n          }\n        break;\n        case 'apyNoGov':\n          output = await this.functionsUtil.loadAssetField('apy',this.props.token,this.props.tokenConfig,this.props.account,false);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                tokenAPYNoGov:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                tokenAPYNoGov:false\n              });\n            }\n          }\n        break;\n        case 'curveApy':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                curveApy:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                curveApy:false\n              });\n            }\n          }\n        break;\n        case 'curveAvgSlippage':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                curveAvgSlippage:(parseFloat(output)*100).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                curveAvgSlippage:false\n              });\n            }\n          }\n        break;\n\n        case 'apy':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              const tokenAPY = parseFloat(output).toFixed(decimals);\n              const showTooltip = !this.props.isMobile && (fieldInfo.showTooltip !== undefined && fieldInfo.showTooltip);\n              const govTokensAprs = showTooltip ? await this.functionsUtil.getGovTokensAprs(this.props.token,this.props.tokenConfig) : null;\n              this.setStateSafe({\n                tokenAPY,\n                govTokensAprs\n              });\n            } else {\n              this.setStateSafe({\n                tokenAPY:false\n              });\n            }\n          }\n        break;\n        case 'allocationChart':\n          let allocationChartWidth = 0;\n          let allocationChartHeight = 0;\n\n          const resizeAllocationChart = () => {\n            const allocationChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (allocationChartRowElement){\n              const $allocationChartRowElement = window.jQuery(allocationChartRowElement);\n              allocationChartWidth = $allocationChartRowElement.innerWidth()-parseFloat($allocationChartRowElement.css('padding-right'))-parseFloat($allocationChartRowElement.css('padding-left'));\n              allocationChartHeight = $allocationChartRowElement.innerHeight();\n\n              // Make it a square\n              allocationChartWidth = parseInt(allocationChartWidth)>0 ? Math.min(allocationChartWidth,allocationChartHeight) : allocationChartHeight;\n              allocationChartHeight = allocationChartWidth;\n\n\n              if (allocationChartWidth !== this.state.allocationChartWidth){\n                if (setState){\n                  this.setStateSafe({\n                    allocationChartWidth,\n                    allocationChartHeight\n                  });\n                }\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAllocationChart();\n          window.removeEventListener('resize', resizeAllocationChart.bind(this));\n          window.addEventListener('resize', resizeAllocationChart.bind(this));\n\n          if (setState){\n            this.setStateSafe({\n              allocationChartWidth,\n              allocationChartHeight\n            });\n          }\n        break;\n        case 'aprChart':\n          // Set start timestamp for v3 tokens\n          const aprChartEndTimestamp = isRisk ? this.functionsUtil.getGlobalConfig(['stats','versions','v3','endTimestamp']) : null;\n          const aprChartStartTimestamp = isRisk ? aprChartEndTimestamp-(7*24*60*60) : Math.max(this.functionsUtil.getGlobalConfig(['stats','versions','v3','startTimestamp']),parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(new Date()).format('DD/MM/YYYY 00:00:00'),'DD/MM/YYYY HH:mm:ss').subtract(7,'days')._d.getTime()/1000));\n\n          // Check for cached data\n          let aprChartData = null;\n          const cachedDataKey = `aprChart_${this.props.tokenConfig.address}_${isRisk}`;\n          const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n\n          aprChartData = [{\n            id:this.props.token,\n            color: this.props.color ? this.props.color : 'hsl('+this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token,'color','hsl']).join(',')+')',\n            data: []\n          }];\n\n          if (cachedData !== null && cachedData[0] && cachedData[0].data && cachedData[0].data.length>0){\n            aprChartData = cachedData;\n          } else {\n\n            // FAKE CHART DATA\n            if (this.props.token === 'COMP'){\n              aprChartData[0].data = [];\n              const startTimestamp = new Date().getTime();\n              let y = 20;\n              for (var i=0; i<=16; i++) {\n                const mDate = this.functionsUtil.strToMoment(startTimestamp).add(i,'day');\n                const x = mDate.format(\"YYYY/MM/DD HH:mm\");\n                // Grow\n                if ((i>=5 && i<=10) || (i>=13)){\n                  y+=Math.random()*4+2; // Risk\n                  // y+=Math.random()*7+4; // Best\n                // Decrease\n                } else {\n                  y-=Math.random()*3+1; // Risk\n                  // y-=Math.random()*3+1; // Best\n                }\n                aprChartData[0].data.push({x,y});\n              }\n            } else {\n              const frequencySeconds = this.functionsUtil.getFrequencySeconds('hour',12);\n              const apiResultsAprChart = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,aprChartStartTimestamp,aprChartEndTimestamp,false,frequencySeconds);\n\n              apiResultsAprChart.forEach((d,i) => {\n                const x = this.functionsUtil.strToMoment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n                const y = parseFloat(this.functionsUtil.fixTokenDecimals(d.idleRate,18));\n                aprChartData[0].data.push({ x, y });\n              });\n            }\n\n            if (aprChartData[0].data.length>0){\n              this.functionsUtil.setCachedData(cachedDataKey,aprChartData);\n            }\n          }\n\n\n          // Add same value\n          if (aprChartData[0].data.length === 1){\n            const newPoint = Object.assign({},aprChartData[0].data[0]);\n            newPoint.x = this.functionsUtil.strToMoment(newPoint,\"YYYY/MM/DD HH:mm\").add(1,'hours').format(\"YYYY/MM/DD HH:mm\")\n            aprChartData[0].data.push(newPoint);\n          }\n\n          let aprChartWidth = 0;\n          let aprChartHeight = 0;\n\n          const resizeAprChart = () => {\n            const aprChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (aprChartRowElement){\n              const $aprChartRowElement = window.jQuery(aprChartRowElement);\n              aprChartWidth = $aprChartRowElement.innerWidth()-parseFloat($aprChartRowElement.css('padding-right'))-parseFloat($aprChartRowElement.css('padding-left'));\n              aprChartHeight = $aprChartRowElement.innerHeight();\n              if (aprChartWidth !== this.state.aprChartWidth || !this.state.aprChartHeight){\n                this.setStateSafe({\n                  aprChartWidth,\n                  aprChartHeight: this.state.aprChartHeight ? this.state.aprChartHeight : aprChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAprChart();\n          window.removeEventListener('resize', resizeAprChart.bind(this));\n          window.addEventListener('resize', resizeAprChart.bind(this));\n\n          // Set chart type\n          const aprChartType = Line;\n\n          const aprChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            axisLeft:null,\n            animate:false,\n            axisBottom:null,\n            enableArea:true,\n            areaOpacity:0.1,\n            curve:'monotoneX',\n            enableGridX:false,\n            enableGridY:false,\n            pointBorderWidth:2,\n            isInteractive:true,\n            colors:d => d.color,\n            defs:[\n              linearGradientDef('gradientArea', [\n                  { offset: 0, color: '#faf047' },\n                  { offset: 50, color: '#e4b400' },\n              ])\n            ],\n            enableSlices:this.props.isMobile ? false : 'x',\n            yFormat:value => parseFloat(value).toFixed(2)+'%',\n            fill:[\n              { match: { id: this.props.token } , id: 'gradientArea' },\n            ],\n            margin: { top: 10, right: 0, bottom: 0, left: 0 },\n            sliceTooltip:(slideData) => {\n              const { slice } = slideData;\n              const point = slice.points[0];\n              return (\n                <CustomTooltip\n                  point={point}\n                >\n                  {\n                  typeof slice.points === 'object' && slice.points.length &&\n                    slice.points.map(point => {\n                      const protocolName = point.serieId;\n                      const protocolEarning = point.data.yFormatted;\n                      // const protocolApy = point.data.apy;\n                      return (\n                        <CustomTooltipRow\n                          key={point.id}\n                          color={point.color}\n                          label={protocolName}\n                          value={protocolEarning}\n                        />\n                      );\n                    })\n                  }\n                </CustomTooltip>\n              );\n            }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                aprChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              aprChartType,\n              aprChartData,\n              aprChartProps,\n              aprChartWidth,\n              aprChartHeight\n            });\n          }\n          output = aprChartData;\n        break;\n        case 'performanceChart':\n          let firstTokenPrice = null;\n          let firstIdleBlock = null;\n          /*\n          let performanceChartWidth = 0;\n          let performanceChartHeight = 0;\n\n          const performanceChartRowElement = document.getElementById(this.props.rowId) ? document.getElementById(this.props.rowId) : document.getElementById(this.props.parentId);\n          if (performanceChartRowElement){\n            performanceChartWidth = parseFloat(performanceChartRowElement.offsetWidth)>0 ? performanceChartRowElement.offsetWidth* (this.props.colProps ? this.props.colProps.width : 1) : 0;\n            performanceChartHeight = parseFloat(performanceChartRowElement.offsetHeight);\n          }\n          */\n\n          let performanceChartWidth = 0;\n          let performanceChartHeight = 0;\n\n          const resizePerformanceChart = () => {\n            const PerformanceChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (PerformanceChartRowElement){\n              const $PerformanceChartRowElement = window.jQuery(PerformanceChartRowElement);\n              performanceChartWidth = $PerformanceChartRowElement.innerWidth()-parseFloat($PerformanceChartRowElement.css('padding-right'))-parseFloat($PerformanceChartRowElement.css('padding-left'));\n              performanceChartHeight = $PerformanceChartRowElement.innerHeight();\n              if (performanceChartWidth !== this.state.performanceChartWidth || !this.state.performanceChartHeight){\n                this.setStateSafe({\n                  performanceChartWidth,\n                  performanceChartHeight: this.state.performanceChartHeight ? this.state.performanceChartHeight : performanceChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizePerformanceChart();\n          window.removeEventListener('resize', resizePerformanceChart.bind(this));\n          window.addEventListener('resize', resizePerformanceChart.bind(this));\n\n          const apr_end_date = this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(new Date()).subtract(1,'day').format('YYYY-MM-DD 23:59'),'YYYY-MM-DD HH:mm');\n          const apr_start_date = apr_end_date.clone().subtract(1,'week');\n\n          // Set start timestamp for v3 tokens\n          const apr_start_timestamp =  Math.max(this.functionsUtil.getGlobalConfig(['stats','versions','v3','startTimestamp']),parseInt(apr_start_date._d.getTime()/1000));\n          // const apr_end_timestamp = parseInt(apr_end_date._d.getTime()/1000);\n\n          let apiResultsPerformanceChart = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,apr_start_timestamp,null,false,43200);\n\n          const idleTokenPerformance = apiResultsPerformanceChart.map((d,i) => {\n            let y = 0;\n            const x = this.functionsUtil.strToMoment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n            const tokenPrice = this.functionsUtil.fixTokenDecimals(d.idlePrice,this.props.tokenConfig.decimals);\n\n            if (!firstTokenPrice){\n              firstTokenPrice = tokenPrice;\n            } else {\n              y = parseFloat(tokenPrice.div(firstTokenPrice).minus(1).times(100));\n            }\n\n            if (firstIdleBlock === null){\n              firstIdleBlock = parseInt(d.blocknumber);\n            }\n\n            return { x, y };\n          });\n\n          const performanceChartData = [{\n            id:'Idle',\n            color: 'hsl('+this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token,'color','hsl']).join(',')+')',\n            data: idleTokenPerformance\n          }];\n\n          // Set chart type\n          const performanceChartType = Line;\n\n          const performanceChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            animate:false,\n            axisLeft:null,\n            axisBottom:null,\n            enableArea:true,\n            enableGridX:false,\n            enableGridY:false,\n            curve:'monotoneX',\n            enableSlices:false,\n            pointBorderWidth:1,\n            colors:d => d.color,\n            pointLabelYOffset:-12,\n            margin: { top: 0, right: 0, bottom: 0, left: 0 }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                performanceChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              performanceChartType,\n              performanceChartData,\n              performanceChartProps,\n              performanceChartWidth,\n              performanceChartHeight\n            });\n          }\n          output = performanceChartData;\n        break;\n        case 'custom':\n          const path = fieldInfo.path;\n          output = this.functionsUtil.getArrayPath(path,this.props.tokenConfig);\n          if (output){\n            this.setStateSafe({\n              [fieldName]:output\n            });\n          }\n        break;\n        default:\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              ready:true,\n              [fieldName]:output\n            });\n          }\n        break;\n      }\n    }\n\n    return output;\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n    let output = null;\n\n    const showLoader = fieldInfo.showLoader === undefined || fieldInfo.showLoader;\n    const loader = showLoader ? (<Loader size=\"20px\" />) : null;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    const tokenConfig = this.props.tokenConfig || this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token]);\n      \n    const maxPrecision = fieldProps && fieldProps.maxPrecision ? fieldProps.maxPrecision : 5;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    const minPrecision = fieldProps && fieldProps.minPrecision ? fieldProps.minPrecision : ( this.props.isMobile ? 3 : 4 );\n\n    switch (fieldInfo.name){\n      case 'iconTooltip':\n        const icon1 = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${this.props.token}.svg`;\n        output = (\n          <Tooltip\n            placement={'top'}\n            message={this.props.token}\n            {...fieldInfo.tooltipProps}\n          >\n            <Image src={icon1} {...fieldProps} />\n          </Tooltip>\n        );\n      break;\n      case 'icon':\n        const icon2 = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${this.props.token}.svg`;\n        output = (\n          <Image src={icon2} {...fieldProps} />\n        );\n      break;\n      case 'tokenName':\n        output = (\n          <Text {...fieldProps}>{this.props.token}</Text>\n        );\n      break;\n      case 'strategyIcon':\n        const strategyIcon = this.functionsUtil.getGlobalConfig(['strategies',this.props.tokenConfig.strategy,'icon']);\n        if (strategyIcon){\n          output = (\n            <Image src={strategyIcon} {...fieldProps} />\n          );\n        }\n      break;\n      case 'strategyName':\n        const strategyName = this.functionsUtil.getGlobalConfig(['strategies',this.props.tokenConfig.strategy,'title']);\n        output = (\n          <Text {...fieldProps}>{strategyName}</Text>\n        );\n      break;\n      case 'tokenBalance':\n        output = this.state.tokenBalance ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.tokenBalance} />\n        ) : loader\n      break;\n      case 'fee':\n        output = this.state.fee ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.fee} />\n        ) : loader\n      break;\n      case 'tokenPrice':\n        output = this.state.tokenPrice ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.tokenPrice} />\n        ) : loader\n      break;\n      case 'amountToMigrate':\n        output = this.state.amountToMigrate ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.amountToMigrate} />\n        ) : loader\n      break;\n      case 'idleTokenBalance':\n        output = this.state.idleTokenBalance ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.idleTokenBalance} />\n        ) : loader\n      break;\n      case 'redeemableBalanceCounterCurve':\n        output = this.state.ready && this.state.redeemableBalanceCurveStart && this.state.redeemableBalanceCurveEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.redeemableBalanceCurveEnd)}\n            start={parseFloat(this.state.redeemableBalanceCurveStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'redeemableBalanceCounter':\n        output = this.state.ready && this.state.redeemableBalanceStart && this.state.redeemableBalanceEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.redeemableBalanceEnd)}\n            start={parseFloat(this.state.redeemableBalanceStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'feesCounter':\n        output = this.state.ready && this.state.feesStart && this.state.feesEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.feesEnd)}\n            start={parseFloat(this.state.feesStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounterCurve':\n        output = this.state.ready && this.state.earningsCurveStart && this.state.earningsCurveEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsCurveEnd)}\n            start={parseFloat(this.state.earningsCurveStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounter':\n        output = this.state.ready && this.state.earningsStart && this.state.earningsEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsEnd)}\n            start={parseFloat(this.state.earningsStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'redeemableBalance':\n        output = this.state.redeemableBalance ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.redeemableBalance} />\n        ) : loader\n      break;\n      case 'govTokens':\n        output = this.state.govTokens && Object.keys(this.state.govTokens).length>0 ? (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'flex-start'}\n          >\n            {\n              Object.values(this.state.govTokens).map( (govTokenConfig,govTokenIndex) => (\n                <AssetField\n                  token={govTokenConfig.token}\n                  tokenConfig={govTokenConfig}\n                  key={`asset_${govTokenIndex}`}\n                  fieldInfo={{\n                    name:'iconTooltip',\n                    tooltipProps:{\n                      message:`${govTokenConfig.token}`+(this.state.getGovTokensDistributionSpeed && this.state.getGovTokensDistributionSpeed[govTokenConfig.token] ? `: ${this.state.getGovTokensDistributionSpeed[govTokenConfig.token].toFixed(decimals)}/${govTokenConfig.distributionFrequency} (for the whole pool)` : '')\n                    },\n                    props:{\n                      borderRadius:'50%',\n                      position:'relative',\n                      height:['1.1em','2em'],\n                      ml:govTokenIndex ? '-10px' : 0,\n                      zIndex:Object.values(this.state.govTokens).length-govTokenIndex,\n                      boxShadow:['1px 1px 1px 0px rgba(0,0,0,0.1)','1px 2px 3px 0px rgba(0,0,0,0.1)'],\n                    }\n                  }}\n                />\n              ))\n            }\n          </Flex>\n        ) : this.state.govTokens ? (\n          <Text {...fieldProps}>-</Text>\n        ) : loader\n      break;\n      case 'amountLentCurve':\n        output = this.state.amountLentCurve ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.amountLentCurve} />\n        ) : loader\n      break;\n      case 'amountLent':\n        output = this.state.amountLent ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.amountLent} />\n        ) : loader\n      break;\n      case 'pool':\n        output = this.state.poolSize ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.poolSize} />\n        ) : loader\n      break;\n      case 'score':\n        output = (this.props.tokenConfig && this.props.tokenConfig.defiScoreDisabled) ? (<Text {...fieldProps}>N/A</Text>) : (this.state.score !== undefined && this.state.score !== null && this.functionsUtil.BNify(this.state.score).gt(0)) ? (\n          <SmartNumber {...fieldProps} decimals={2} number={this.state.score} />\n        ) : (this.functionsUtil.BNify(this.state.score).lte(0) ? (<Text {...fieldProps}>-</Text>) : loader)\n      break;\n      case 'earningsPerc':\n        output = this.state.earningsPerc ?\n          (typeof fieldInfo.showDirection === 'undefined' || fieldInfo.showDirection) ? (\n            <VariationNumber\n              isMobile={this.props.isMobile}\n              direction={this.state.earningsPercDirection}\n            >\n              <Text {...fieldProps}>{this.state.earningsPerc}%</Text>\n            </VariationNumber>\n          ) : (\n            <Text {...fieldProps}>{this.state.earningsPerc}%</Text>\n          )\n        : loader\n      break;\n      case 'earningsPercCurve':\n        output = this.state.earningsPercCurve ?\n          (typeof fieldInfo.showDirection === 'undefined' || fieldInfo.showDirection) ? (\n            <VariationNumber\n              isMobile={this.props.isMobile}\n              direction={this.state.earningsPercCurveDirection}\n            >\n              <Text {...fieldProps}>{this.state.earningsPercCurve}%</Text>\n            </VariationNumber>\n          ) : (\n            <Text {...fieldProps}>{this.state.earningsPercCurve}%</Text>\n          )\n        : loader\n      break;\n      case 'earningsCurve':\n        output = this.state.earningsCurve ? (\n          <VariationNumber\n            direction={'up'}\n            isMobile={this.props.isMobile}\n          >\n            <SmartNumber\n              {...fieldProps}\n              decimals={decimals}\n              minPrecision={minPrecision}\n              number={this.state.earningsCurve}\n            />\n          </VariationNumber>\n        ) : loader\n      break;\n      case 'earnings':\n        output = this.state.earnings ? (\n          <VariationNumber\n            direction={'up'}\n            isMobile={this.props.isMobile}\n          >\n            <SmartNumber\n              {...fieldProps}\n              decimals={decimals}\n              minPrecision={minPrecision}\n              number={this.state.earnings}\n            />\n          </VariationNumber>\n        ) : loader\n      break;\n      case 'idleDistribution':\n        const governanceTokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n        const idleTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',governanceTokenName]);\n        output = this.state.idleDistribution ? (\n          <Text {...fieldProps}>+{this.state.idleDistribution.toFixed(decimals)} IDLE/{idleTokenConfig.distributionFrequency}</Text>\n        ) : loader\n      break;\n      case 'userDistributionSpeed':\n        output = this.state.userDistributionSpeed ? (\n          <Text {...fieldProps}>{this.state.userDistributionSpeed.toFixed(decimals)}/{this.props.tokenConfig.distributionFrequency}</Text>\n        ) : loader\n      break;\n      case 'distributionSpeed':\n        output = this.state.distributionSpeed ? (\n          <Text {...fieldProps}>{this.state.distributionSpeed.toFixed(decimals)}</Text>\n        ) : loader\n      break;\n      case 'apr':\n        output = this.state.tokenAPR ? (\n          <Text {...fieldProps}>{this.state.tokenAPR}{!isNaN(parseFloat(this.state.tokenAPR)) ? '%' : ''}</Text>\n        ) : loader\n      break;\n      case 'oldApy':\n        output = this.state.oldAPY !== undefined ? (\n          <Text {...fieldProps}>{this.state.oldAPY !== false ? this.state.oldAPY : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'apyNoGov':\n        output = this.state.tokenAPYNoGov !== undefined ? (\n          <Text {...fieldProps}>{this.state.tokenAPYNoGov !== false ? this.state.tokenAPYNoGov : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'curveApy':\n        output = this.state.curveApy !== undefined ? (\n          <Text {...fieldProps}>{this.state.curveApy !== false ? this.state.curveApy : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'curveAvgSlippage':\n        output = this.state.curveAvgSlippage !== undefined ? (\n          <Text {...fieldProps}>{this.state.curveAvgSlippage !== false ? this.state.curveAvgSlippage : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'apy':\n        output = this.state.tokenAPY !== undefined ? (\n          <Flex\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            <Text {...fieldProps}>{this.state.tokenAPY !== false ? this.state.tokenAPY : '-' }<small>%</small></Text>\n            {\n              this.state.govTokensAprs && Object.keys(this.state.govTokensAprs).length>0 && \n                <AssetField\n                  fieldInfo={{\n                    name:'tooltip',\n                    props:{\n                      iconProps:{\n                        ml:1\n                      },\n                      placement:'top',\n                      message:Object.keys(this.state.govTokensAprs).map( govToken => {\n                        const distributionFrequency = this.functionsUtil.getGlobalConfig(['govTokens',govToken,'distributionFrequency']);\n                        const tooltipMode = this.functionsUtil.getGlobalConfig(['govTokens',govToken,'aprTooltipMode']);\n                        let value = this.state.govTokensAprs[govToken].toFixed(decimals);\n                        switch (tooltipMode){\n                          default:\n                          case 'apr':\n                            value += '%';\n                          break;\n                          case 'distribution':\n                            value = `${value}/${distributionFrequency}`;\n                          break;\n                        }\n                        return `${govToken}: ${value}`\n                      }).join('; ')\n                    }\n                  }}\n                />\n            }\n          </Flex>\n        ) : loader\n      break;\n      case 'button':\n        const buttonLabel = typeof fieldInfo.label === 'function' ? fieldInfo.label(this.props) : fieldInfo.label;\n        output = (\n          <Button {...fieldProps} onClick={() => fieldProps.handleClick(this.props) }>{buttonLabel}</Button>\n        );\n      break;\n      case 'performanceChart':\n        output = this.state.performanceChartData ? (\n          <GenericChart\n            {...this.state.performanceChartProps}\n            type={this.state.performanceChartType}\n            data={this.state.performanceChartData}\n            width={this.state.performanceChartWidth}\n            height={this.state.performanceChartHeight}\n          />\n        ) : loader\n      break;\n      case 'allocationChart':\n        output = this.state.allocationChartWidth && this.state.allocationChartHeight ? (\n          <AllocationChart\n            {...this.props}\n            loaderProps={{\n              size:'20px'\n            }}\n            loaderText={''}\n            selectedToken={this.props.token}\n            width={this.state.allocationChartWidth}\n            height={this.state.allocationChartHeight}\n            inline={typeof this.props.inline !== 'undefined' ? this.props.inline : true}\n            showLoader={typeof this.props.showLoader !== 'undefined' ? this.props.showLoader : false}\n          />\n        ) : loader\n      break;\n      case 'tooltip':\n        output = (\n          <Tooltip\n            {...fieldProps}\n          >\n            <Icon\n              ml={2}\n              name={\"Info\"}\n              size={'1em'}\n              color={'cellTitle'}\n              {...fieldProps.iconProps}\n            />\n          </Tooltip>\n        );\n      break;\n      case 'aprChart':\n        output = this.state.aprChartData ? (\n          <GenericChart\n            {...this.state.aprChartProps}\n            type={this.state.aprChartType}\n            data={this.state.aprChartData}\n            width={this.state.aprChartWidth}\n            height={this.state.aprChartHeight}\n          />\n        ) : loader\n      break;\n      case 'custom':\n        let CustomComponent = null;\n        let customValue = this.state[fieldInfo.name];\n        switch (fieldInfo.type){\n          case 'number':\n            customValue = this.functionsUtil.BNify(customValue).toString();\n            CustomComponent = SmartNumber;\n            fieldProps.number = customValue;\n          break;\n          case 'link':\n            CustomComponent = Link;\n          break;\n          case 'icon':\n            CustomComponent = Icon;\n            fieldProps.name = customValue;\n          break;\n          default:\n            CustomComponent = Text;\n          break;\n        }\n\n        // Custom Field Props\n        const customFieldName = Object.values(fieldInfo.path).pop();\n        if (this.props.tokenConfig[`${customFieldName}Props`]){\n          const customFieldProps = this.props.tokenConfig[`${customFieldName}Props`];\n          // Replace props\n          if (customFieldProps && Object.keys(customFieldProps).length){\n            Object.keys(customFieldProps).forEach(p => {\n              fieldProps[p] = customFieldProps[p];\n            });\n          }\n        }\n\n        output = customValue ? (\n          <CustomComponent {...fieldProps}>{customValue}</CustomComponent>\n        ) : loader\n      break;\n      default:\n        let formattedValue = this.state[fieldInfo.name];\n        if (this.state[fieldInfo.name] && this.state[fieldInfo.name]._isBigNumber){\n          formattedValue = this.state[fieldInfo.name].toFixed(decimals);\n        }\n        output = this.state[fieldInfo.name] ? (\n          <Text {...fieldProps}>{formattedValue}</Text>\n        ) : loader\n      break;\n    }\n    return output;\n  }\n}\n\nexport default AssetField;\n","import React, { Component } from \"react\";\nimport { Button, Image, Flex, Text, Icon, Box } from 'rimble-ui';\n\nclass ImageButton extends Component {\n\n  render() {\n\n    const isMobile = typeof this.props.isMobile !== 'undefined' ? this.props.isMobile : false;\n    const image = this.props.imageSrc ? (<Image width={'auto'} src={this.props.imageSrc} {...this.props.imageProps} />) : ( this.props.iconName ? (<Icon name={this.props.iconName} {...this.props.iconProps} />) : null );\n    const caption = (<Text textAlign={ isMobile ? 'left' : 'center'} fontSize={2} fontWeight={3} color={'dark-gray'}>{this.props.caption}</Text>);\n\n    return (\n        <Button\n          color={'white'}\n          borderRadius={3}\n          px={ isMobile ? [3,4] : 4 }\n          py={ isMobile ? 0 : [3,4] }\n          my={ isMobile ? 2 : [2,2] }\n          mx={ isMobile ? 0 : [0,2] }\n          onClick={ this.props.handleClick }\n          height={ isMobile ? '58px' : ['150px','170px']}\n          mainColor={this.props.isActive ? 'cardBgHover' : 'cardBg'}\n          contrastColor={this.props.isActive ? 'cardBgHover' : 'cardBg'}\n          width={this.props.width ? this.props.width : (isMobile ? '100%' : ['150px','170px'])}\n          style={this.props.buttonStyle ? this.props.buttonStyle : (isMobile ? {justifyContent:'flex-start'} : null)}\n          {...this.props.buttonProps}\n        >\n          <>\n            {\n              this.props.badge && (\n                <Box\n                  position={'absolute'}\n                  borderRadius={'16px'}\n                  backgroundColor={ this.props.badge.bgColor ? this.props.badge.bgColor : 'blue' }\n                  style={ isMobile ? {right:'-25px',top:'-17px'} : {right:'-25px',top:'-25px'} }\n                  px={['5px','7px']}\n                  py={['1px','3px']}\n                >\n                  <Text\n                    fontWeight={3}\n                    fontSize={'10px'}\n                    color={ this.props.badge.color ? this.props.badge.color : '#fff' }\n                  >\n                  {this.props.badge.text}\n                  </Text>\n                </Box>\n              )\n            }\n            <Flex flexDirection={ isMobile ? 'row' : 'column'} justifyContent={ isMobile ? 'flex-start' : 'center'} alignItems={'center'}>\n              <Flex width={ isMobile ? '45px' : 1 } mr={ isMobile ? 2 : 0 } justifyContent={ isMobile ? 'flex-start' : 'center' }>\n                { this.props.captionPos && this.props.captionPos === 'top' ? caption : image }\n              </Flex>\n              <Flex width={ isMobile ? 'auto' : 1 } flexDirection={'column'} justifyContent={ isMobile ? 'flex-start' : 'center' } >\n                { this.props.captionPos && this.props.captionPos === 'top' ? image : caption }\n                {\n                  this.props.subcaption && this.props.subcaption.split('\\n').map((v,i) => {\n                    // Smaller caption for second line\n                    if (i){\n                      v = (<small>{v}</small>);\n                    }\n                    return (\n                      <Text key={`subcaption_${i}`} lineHeight={'1.3'} textAlign={ isMobile ? 'left' : 'center'} color={'darkGray'} fontWeight={1} fontSize={1}>{v}</Text>\n                    );\n                  })\n                }\n              </Flex>\n            </Flex>\n          </>\n        </Button>\n    );\n  }\n}\nexport default ImageButton;\n"],"sourceRoot":""}