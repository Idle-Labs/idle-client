{"version":3,"sources":["ChartCustomTooltipRow/ChartCustomTooltipRow.js","ExtLink/ExtLink.js","PageNotFound/PageNotFound.module.scss","utilities/components/ShortHash.js","LoadingSpinner/LoadingSpinner.js","ButtonLoader/ButtonLoader.js","TransactionListFilters/TransactionListFilters.js","TransactionsList/TransactionsList.js","RoundButton/RoundButton.js","SmartNumber/SmartNumber.js","CustomTooltip/CustomTooltip.js","AllocationChart/AllocationChart.js","CustomTooltip/CustomTooltipRow.js","PortfolioEquity/PortfolioEquity.js","ChartCustomTooltip/ChartCustomTooltip.js","TxProgressBar/TxProgressBar.js","theme.js","TableCellHeader/TableCellHeader.module.scss","TransactionListFilters/TransactionListFilters.module.scss","utilities/components/ModalCard.module.scss","GenericSelector/GenericSelector.js","Web3ConnectionButtons/Web3ConnectionButtons.module.scss","AssetSelector/AssetSelector.js","CardIconButton/CardIconButton.js","utilities/components/Header.module.scss","Tos/Tos.module.scss","TransactionField/TransactionField.js","IconBox/IconBox.js","Title/Title.js","GenericChart/GenericChart.js","ExecuteTransaction/ExecuteTransaction.js","DashboardCard/DashboardCard.module.scss","FastBalanceSelector/FastBalanceSelector.js","Staking/Staking.js","TokenSwap/TokenSwap.js","SendTxWithBalance/SendTxWithBalance.js","LpStaking/LpStaking.js","IdleStaking/IdleStaking.js","NexusMutual/NexusMutual.js","TokenWrapper/TokenWrapper.js","CustomField/CustomField.js","CustomList/CustomList.js","PortfolioDonut/PortfolioDonut.js","TotalEarningsCounter/TotalEarningsCounter.js","EarningsEstimation/EarningsEstimation.js","DashboardIconButton/DashboardIconButton.js","TotalBalanceCounter/TotalBalanceCounter.js","StrategyPage/StrategyPage.js","BatchDeposit/BatchDeposit.js","CoverProtocol/CoverProtocol.js","TokenMigration/TokenMigration.js","BatchMigration/BatchMigration.js","DeployB2BVesting/DeployB2BVesting.js","configs/globalConfigs.js","DashboardCard/DashboardCard.js","utilities/IdleGovToken.js","utilities/FunctionsUtil.js","Tos/Tos.js","theme-dark.js","App/connectors/TorusConnector.js","App/connectors/AuthereumConnector.js","App/connectors/GnosisSafeConnector.js","App/connectors/WalletLinkConnector.js","App/connectors/WalletConnectConnector.js","App/connectors.js","utilities/components/WrongNetworkBanner.js","utilities/NetworkUtil.js","utilities/components/NoWeb3BrowserModal.js","utilities/components/NoWalletModal.js","utilities/GeneralUtil.js","utilities/components/WrongNetworkModal.js","utilities/components/TransactionFeeModal.js","Web3ConnectionButtons/Web3ConnectionButtons.js","utilities/components/ConnectionModal.js","utilities/components/ConnectionPendingModal.js","utilities/components/UserRejectedConnectionModal.js","utilities/components/LowFundsModal.js","utilities/ConnectionModalsUtil.js","utilities/components/ConnectionErrorModal.js","utilities/components/TransactionErrorModal.js","utilities/RimbleWeb3.js","utilities/components/Header.js","ScrollToTop/ScrollToTop.js","PageNotFound/PageNotFound.js","utilities/components/NetworkOverview.js","Web3Debugger/Web3Debugger.js","abis/compound/cDAI.js","abis/tokens/ERC20.js","configs/availableTokens.js","utilities/TransactionToastMessages.js","utilities/TransactionToastUtil.js","App/App.js","serviceWorker.js","index.js","TableRow/TableRow.js","TableHeader/TableHeader.js","Migrate/Migrate.js","AssetsList/AssetsList.js","Footer/Footer.module.scss","colors.js","VariationNumber/VariationNumber.js","GenericSelector/GenericSelector.module.scss","LoadingSpinner/LoadingSpinner.module.scss","utilities/components/BuyModal.js","ConnectBox/ConnectBox.js","utilities/components/ModalCard.js","Footer/Footer.js","TableCellHeader/TableCellHeader.js","FlexLoader/FlexLoader.js","ImageButton/ImageButton.js","AssetField/AssetField.js"],"names":["ChartCustomTooltipRow","prevProps","prevState","react__WEBPACK_IMPORTED_MODULE_7___default","a","createElement","rimble_ui__WEBPACK_IMPORTED_MODULE_8__","mb","width","alignItems","flexDirection","pr","style","flexBasis","flex","justifyContent","this","props","color","mr","height","borderRadius","backgroundColor","fontSize","fontWeight","textAlign","textTransform","label","whiteSpace","dangerouslySetInnerHTML","__html","value","Component","ExtLink","react__WEBPACK_IMPORTED_MODULE_6___default","rimble_ui__WEBPACK_IMPORTED_MODULE_5__","Object","assign","target","rel","children","module","exports","headerContainer","headerBgFiller","bgContainer","list","textContainer","ShortHash","state","text","functionsUtil","setProps","FunctionsUtil","loadUtils","loadData","resolveAddress","shortenHash","hash","getENSName","ensName","setState","loader","size","display","LoadingSpinner","react_default","index_es","className","styles","mx","ButtonLoader","onClick","handleClick","buttonProps","isLoading","src_LoadingSpinner_LoadingSpinner","buttonText","TransactionListFilters","maxWidth","minWidth","maxHeight","isOpened","activeFilters","status","assets","actions","setFilter","filter","_this","objectSpread","defineProperty","applyFilters","toggle","arguments","length","undefined","toggleOpened","resetFilter","resetFilters","_this2","top","zIndex","position","DashboardCard","cardProps","py","px","transition","isInteractive","cursor","isMobile","name","overflow","mt","borderTop","concat","theme","colors","divider","keys","filters","map","filterCategory","filterValues","key","TableCellHeader","pb","toUpperCase","filterValue","filterLabel","isChecked","my","checked","radioBtn","onChange","e","Text","mainColor","ml","values","v","filterName","hoverColor","TransactionsList","page","prevTxs","txsPerPage","loading","totalTxs","totalPages","deposit","redeem","send","receive","migrate","swap","swapout","withdraw","completed","pending","failed","renderedTxs","processedTxs","lastBlockNumber","processTxs","availableActions","action","toLowerCase","txsIndexes","tx","parseFloat","token","includes","sort","b","timeStamp","Math","ceil","forEach","i","selectedToken","tokenConfig","availableTokens","decimals","min","date","Date","getTxAction","parsedValue","tokenAmount","amount","toFixed","momentDate","strToMoment","push","preventDefault","max","loadTxs","transactionsChanged","JSON","stringify","transactions","enabledTokens","count","account","firstBlockNumber","getGlobalConfig","enabledActions","getEtherscanTxs","etherscanTxs","hashKey","lastTx","pop","blockNumber","parseInt","_this3","_this4","hasActiveFilters","m","FlexLoader","flexProps","minHeight","loaderProps","textProps","id","pt","src_TransactionListFilters_TransactionListFilters","bind","TableHeader","cols","index","txHash","txHashKey","TableRow","rowProps","transaction","window","open","getEtherscanTransactionUrl","rowId","cardId","fieldComponent","TransactionField","prevPage","nextPage","h3","fontFamily","RoundButton","boxShadow","SmartNumber","formattedNumber","number","isNaN","type","formatMoney","precision","abbreviateNumber","maxPrecision","minPrecision","p","showUnit","unitPos","react__WEBPACK_IMPORTED_MODULE_8___default","rimble_ui__WEBPACK_IMPORTED_MODULE_7__","unit","unitProps","CustomTooltip","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_7__","point","left","data","itemPos","xFormatted","AllocationChart","chartData","chartProps","selectedSlice","totalAllocation","protocolsAllocations","protocolsAllocationsPerc","componentUnmounted","setStateSafe","newState","callback","getTokenAllocation","padAngle","animate","borderWidth","cornerRadius","motionDamping","innerRadius","motionStiffness","d","onMouseEnter","onMouseLeave","tooltipFormat","sliceLabel","radialLabel","tooltip","container","inline","background","cardBg","labels","fonts","sansSerif","legends","slicesLabelsSkipAngle","radialLabelsSkipAngle","enableRadialLabels","radialLabelsTextXOffset","slicesLabelsTextColor","radialLabelsTextColor","radialLabelsLinkStrokeWidth","radialLabelsLinkDiagonalLength","radialLabelsLinkHorizontalLength","enableSlicesLabels","radialLabelsLinkColor","from","borderColor","modifiers","margin","right","bottom","protocols","protocolInfo","protocolName","protocolAddr","address","protocolAllocationPercParsed","times","globalConfigs","stats","hsl","join","capitalize","protocolIcon","icon","rimble_ui__WEBPACK_IMPORTED_MODULE_9__","src","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_10__","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_13__","Pie","showLoader","CustomTooltipRow","react__WEBPACK_IMPORTED_MODULE_5___default","rimble_ui__WEBPACK_IMPORTED_MODULE_6__","PortfolioEquity","startDate","chartwidth","chartHeight","loadChartData","quickDateSelectionChanged","quickDateSelection","componentDidMount","mobileChanged","themeModeChanged","themeMode","tokensBalance","firstTxTimestamp","asyncForEach","_ref","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","mark","_callee3","filteredTxs","amountLent","wrap","_context3","prev","next","BNify","plus","minus","lt","balance","tokenPrice","idleTokens","stop","_x3","apply","currentDate","clone","subtract","days","prevBalances","prevTimestamp","minChartValue","maxChartValue","aggregatedBalance","aggregatedBalancesKeys","tokensBalancesPerDate","currTimestamp","getTime","tokensData","isRisk","selectedStrategy","_ref2","_callee4","_context4","getTokenApiData","sent","_x4","idleTokenBalance","foundBalances","tokensBalances","lastTokenData","lastTokenDataUnfiltered","filteredTokenData","timestamp","tokenDecimals","filteredBalances","lastFilteredTx","idlePrice","fixTokenDecimals","newBalance","lastTxBalance","gt","tokenUsdConversionRate","conversionRateField","chartToken","conversionRate","isSameOrAfter","isSameOrBefore","formattedDate","format","frequencySeconds","_loop","aggregatedBalances","x","y","balances","itemIndex","item","floor","yFormatDecimals","gridYStep","gridYValues","gridYValue","daysCount","daysFrequency","xScale","yScale","stacked","xFormat","yFormat","axisBottom","legend","tickSize","tickPadding","orient","legendOffset","legendPosition","tickValues","pointSize","useMesh","axisLeft","tickRotation","pointLabel","enableArea","enableSlices","enableGridY","curve","enableGridX","pointBorderWidth","pointLabelYOffset","areaBaselineValue","pointColor","areaOpacity","axis","ticks","fill","grid","line","stroke","lineChartStroke","strokeDasharray","sliceTooltip","slideData","slice","points","_ChartCustomTooltip_ChartCustomTooltip__WEBPACK_IMPORTED_MODULE_11__","_ChartCustomTooltipRow_ChartCustomTooltipRow__WEBPACK_IMPORTED_MODULE_12__","serieId","yFormatted","formattedBalance","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_10__","Line","parentId","parentIdHeight","ChartCustomTooltip","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_9__","TxProgressBar","error","ended","percentage","processing","txTimestamp","initialized","estimatedTime","remainingTime","_callee","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default","_context","initProgressBar","getTransaction","Promise","_ref3","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__","_callee2","resolve","reject","_context2","customLog","web3","eth","err","_x","_x2","abrupt","getBlockTime","blockTime","axios","get","getPredictionTable","_callee5","predictTable","_context5","getTxEstimatedTime","gasPrice","prediction","gasprice","pdValues","_estimateWait","gas","txMeanSecs","block_time","calculateRemainingTime","_callee6","secondsPassed","timePassed","_context6","div","toString","setTimeout","updateProgressBar","getTxInfo","_callee7","txProgressBarKey","txProgressBarData","_ref8","_ref9","_context7","localStorage","getItem","parse","all","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__","setLocalStorage","_callee8","_context8","clearTimeout","gasoffered","minedProb","expectedWait","sum1","sum2","prob","exp","minutes","seconds","substr","react__WEBPACK_IMPORTED_MODULE_10___default","rimble_ui__WEBPACK_IMPORTED_MODULE_13__","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_11__","textColor","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","endMessage","waitText","span","renderRemainingTime","loadingMessage","sendingMessage","href","cancelTransaction","cancelTextColor","cancelTextHoverColor","_colors__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","polished__WEBPACK_IMPORTED_MODULE_1__","__webpack_exports__","breakpoints","fontSizes","fontWeights","letterSpacings","lineHeights","solid","title","copy","serif","counter","space","radii","minWidths","maxWidths","heights","minHeights","maxHeights","borders","borderWidths","shadows","opacity","disabled","primary","blue","base","gradient-bg","primary-light","light","primary-dark","dark","bgBlue","dark-blue","skyBlue","lightBlue","copyColor","subColor","black","baseColors","near-black","dark-gray","mid-gray","gray","grey","silver","light-silver","moon-gray","light-gray","near-white","white","transparent","alert","arrowActive","arrowInactive","selectBgFocused","selectBg","backButtonBg","wrongNetworkBannerBg","dashboardBg","statValue","boxBorder","cellTitle","cellText","link","menuBg","menuHover","flashColor","menuRightBorder","cardHoverShadow","cardBgHover","cardBorder","pageActive","pageInactive","boost","curvein","default","curveout","curvedepositin","curvedepositout","actionBg","blacks","whites","zIndices","messageStyle","shade","tint","success","green","warning","yellow","danger","red","info","buttons","--main-color","--contrast-color","normal","buttonSizes","small","padding","medium","large","bg","GenericSelector","loadComponents","selectedTokenChanged","optionsChanged","options","defaultValueChanged","defaultValue","componentsChanged","CustomOptionValue","CustomValueContainer","ControlComponent","innerProps","menuIsOpen","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_12__","CustomIndicatorSeparator","CustomMenu","selectProps","CustomInputContainer","isSearchable","searchInput","searchInputHidden","CustomOption","selectedValue","o","indexOf","genericSelector","isFocused","react_select__WEBPACK_IMPORTED_MODULE_7__","components","Menu","Option","Control","Input","SingleValue","IndicatorSeparator","button","AssetSelector","find","_AssetField_AssetField__WEBPACK_IMPORTED_MODULE_9__","fieldInfo","showCustomField","cachedData","setCachedData","showBalance","_GenericSelector_GenericSelector__WEBPACK_IMPORTED_MODULE_11__","changeToken","CardIconButton","isActive","image","align","imageProps","useIconOnly","iconColor","iconProps","iconBgColor","gradientButton","empty","select","selectDark","input","loadField","hashChanged","accountChanged","output","bgColor","fieldProps","textOverflow","rimble_ui__WEBPACK_IMPORTED_MODULE_11__","_utilities_components_ShortHash__WEBPACK_IMPORTED_MODULE_12__","border","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_9__","tokenSymbol","iconSrc","IconBox","Title","lineHeight","HeadingComponent","component","Heading","h1","GenericChart","addEventListener","handleWindowSizeChange","removeEventListener","chartContainer","document","getElementById","chartWidth","offsetWidth","chartContainerH","ChartType","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_7__","loaderText","ExecuteTransaction","txStatus","console","log","eventData","eventCategory","eventLabel","methodName","eventAction","contractName","getTransactionError","sendGoogleAnalyticsEvent","callbackReceipt","transactionHash","params","getTransactionParams","getTransactionParamsAsync","sendRawTransaction","contractMethodSendWrapper","ExecuteComponent","react__WEBPACK_IMPORTED_MODULE_9___default","parentProps","_TxProgressBar_TxProgressBar__WEBPACK_IMPORTED_MODULE_11__","network","progressBarProps","execute","componentProps","defaultOpacity","hidden","interactive","rainbow","FastBalanceSelector","onMouseDown","replaceArrayProps","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_10__","Staking","contractInfo","selectedOption","toolProps","contract","initContract","abi","reduce","enabled","SelectedComponent","AssetField","selectToken","TokenSwap","selectedFromToken","selectedDestToken","availableDestinationTokens","selectFromToken","baseToken","regenerator_default","selectDestToken","getGlobalConfigs","paymentProvider","providerInfo","initProps","buttonId","initParams","getInitParams","render","remoteResources","url","j","split","scriptID","script","remoteResourceParams","precall","readyState","onreadystatechange","onload","async","parentElement","appendChild","head","stylesheetId","loadTokens","asyncToGenerator","getContractByName","fromTokenChanged","destTokenChanged","loadKyberWidget","SendTxWithBalance","inputValue","txSucceeded","permitEnabled","showPermitBox","buttonDisabled","contractApproved","fastBalanceSelector","changeInputValue","call_callback","changeInputCallback","setInputValue","selectedPercentage","tokenBalance","getFastBalanceSelector","setFastBalanceSelector","checkButtonDisabled","lte","approve","callbackApprove","callbackReceiptApprove","checkContractApproved","enableERC20","executeTx","_amount","signedParameters","_params","methodParams","normalizeTokenAmount","eventValue","signPermit","getPermitTransactionParams","approveCallback","actionChanged","tokenBalanceChanged","permitEnabledChanged","approveEnabledChanged","approveEnabled","contractChanged","tokenConfigChanged","checkTokenApproved","viewOnly","connectorName","infoBox","steps","step","stepIndex","description","required","togglePermitEnabled","balanceSelectorInfo","placeholder","approveDescription","ConnectBox","LpStaking","globalStats","balanceProp","statsLoaded","stakedBalance","rewardMultiplier","accountingData","selectedAction","successMessage","poolTokenPrice","rewardTokenPrice","tokenWrapperProps","distributionSpeed","transactionSucceeded","showTokenWrapperEnabled","updateData","selectedActionChanged","contractApprovedChanged","contractInfoChanged","userStakedBalance","totalStakedBalance","totalStakingShares","userTotalStakingShare","rewardsPerDay","stakedBalanceUSD","rewardsPerYearUSD","apy","rewardToken","normalizedInputValue","genericContractCall","unstakeRewards","toBN","expiry","r","s","integerValue","totalLocked","totalUnlocked","unlockScheduleCount","collectedRewards","unlockSchedulesPromises","unlockSchedules","totalRewards","totalDeposits","lockedRewards","unlockedRewards","programEndTime","endTime","endAtSec","now","programDuration","utc","initialLockedShares","durationSec","tokensPerSecond","stakingShare","maxMultiplier","distributionSpeedMultiplier","userDistributionSpeed","maxBonusDays","currentRewards","stakedTokensLog","txReceipt","logs","_this5","topics","t","replace","stakedTokens","unstakedTokensLog","unstakedTokens","rewardTokenConfig","receivedRewardsLog","receivedRewards","DAITokenConfig","getSushiswapPoolTokenPrice","getSushiswapConversionRate","getTokenBalance","startContract","wrapMethod","destContract","unwrapMethod","_this6","loadStats","_this7","StatsCard","titleProps","titleParentProps","isStake","isUnstake","isStats","txAction","poolLink","statInfo","ImageButton","caption","imageSrc","setAction","src_SendTxWithBalance_SendTxWithBalance","flexWrap","IdleStaking","lockPeriods","lockedEnd","lockExpired","increaseAction","lockPeriodInput","internalInfoBox","distributedRewards","selectedLockPeriod","lockPeriodTimestamp","lockEndDateIsMaxEndDate","feeDistributorConfig","feeDistributor","lockPeriodChanged","increaseActionChanged","calculateStkIDLEAmount","minDate","add","mDate","maxDate","isAfter","currTime","endDate","endDateTime","_d","maxDateTime","stkIDLEAmount","_value","_unlock_time","getIdleStakingRewardsTxs","getTokenTotalSupply","getContractBalance","getContractEvents","fromBlock","toBlock","provider","etherscanRewardsTxs","tokenTotalSupply","totalSupply","claimableRewards","lockedInfo","tokenUserBalance","claimable","claimEvents","checkpointEvents","depositEvents","tokenName","totalClaimed","event","claimedAmount","returnValues","userDeposited","stakeStartTime","stakedTime","depositTimestamp","ts","depositValue","latestCheckpoint","lastCheckpointTime","time","stakePeriod","currentProfit","apr","lockEndDate","currDate","isValid","lockedTokensLog","lockedTokens","increaseAmountTokensLog","increaseTokens","_this8","isLock","isClaim","isIncrease","canIncrease","borderBottom","reward","setIncreaseAction","changelockPeriodInput","selectLockPeriod","Button","getIncreaseTimeParams","contractApprovedCallback","NexusMutual","quote","1","2","periodOptions","30","60","90","365","coverId","claimId","capacity","amountValue","periodValue","maxCapacity","amountValid","periodValid","claimableCovers","tokenApproved","selectedPeriod","maxPriceWithFee","transactionParams","transactionValue","yieldTokenBalance","selectedUnderlying","yieldTokenApproved","claimButtonDisabled","selectedCoverToClaim","defaultClaimableCover","selectedUnderlyingConfig","changeAmount","changePeriod","selectPeriod","approveSucceeded","yieldTokenApproveSucceeded","claimInputChange","normalizedAmount","coveredTokenAmount","getClaimTransactionParams","incident","realAddress","claimTransactionSucceeded","loadContracts","buyCoverTransactionSucceeded","incidentsInfo","startBlock","buyer","coverBoughtEvents","claimSubmittedEvents","cover","claimSubmittedEvent","_ref4","_ref5","coverDetails","incidentEvents","matchedIncidents","matchedIncident","yieldTokenConfig","sumAssured","coverAssetConfig","expiryDate","payoutOutcome","claimTxReceipt","claimedAmountLog","claimableAmount","claimablePrice","maxCoveredAmount","claim","productId","contractAddress","slicedToArray","incidentDate","validUntil","yieldTokenCoverGracePeriod","curr","priceBefore","underlying","underlyingConfig","coverAsset","getTransactionReceipt","findIndex","changeSelectedToken","requiredNetwork","baseEndpoint","makeRequest","response","selectedUnderlyingChanged","loadTokenData","isETH","getPoolCapacity","getETHBalance","coverData","period","coverAmount","currency","asset","quoteURL","encodeParameters","price","priceInNXM","expiresAt","generatedAt","COVER_TYPE","feePercentage","basePrice","priceWithFee","mul","divn","amountInWei","toWei","setSelectedAction","textDecoration","activeColor","reset","utils","toTwosComplement","changeSelectedUnderlying","setMaxCoverAmount","borderStyle","periodInfo","getQuote","selectCoverToClaim","TokenWrapper","balanceDest","balanceStart","startContractChanged","destContractChanged","loadBalance","updateActionData","mintLog","mintedAmount","withdrawLog","withdrawnAmount","fullWidth","connectAndValidateAccount","CustomField","funcProps","CustomComponent","componentHasChildren","fieldType","fieldPath","path","customValue","getArrayPath","row","Image","Icon","customFieldName","customFieldProps","CustomList","rows","rowIndex","PortfolioDonut","totalFunds","parentWidth","selectedTokenConfig","loadPortfolio","portfolio","idle","getIdleTokenPrice","convertTokenBalance","getGovTokensUserBalances","govTokensUserBalances","govToken","govTokenBalance","tokenPercentage","tokenColorHsl","round","radialLabelsLinkOffset","itemWidth","itemHeight","translateY","symbolSize","anchor","direction","itemTextColor","symbolShape","effects","on","strategyIcon","convertToken","Fragment","TotalEarningsCounter","earningsEnd","earningsStart","loadTotalEarnings","contractsInitialized","availableStrategies","counterStyle","oldState","getAccountPortfolio","totalEarnings","totalAmountLent","avgAPY","build_default","delay","decimal","separator","useEasing","duration","end","start","formattingFn","n","countUpRef","ref","EarningsEstimation","tokensEarnings","estimationStepsPerc","estimationStepsOptions","estimationStepsDefaultOption","estimationSteps","0","Month","perc","2 months","3 months","optionName","25","8 months","Year","2 Years","5 Years","loadEarnings","stepsCount","aggregatedEarnings","earnings","earningsYear","amountDeposited","avgBuyPrice","idleTokenPrice","earningsPerc","tokenAPY","tokenAprs","earningsPercStep","possibleSteps","maxPossibleStep","getAmountDeposited","getAvgBuyPrice","getTokenAprs","avgApr","avgApy","maxCountStep","orderedTokensEarnings","estimationStep","option","setEstimationStepsPerc","tokenIndex","tokenEarnings","estimationStepPerc","finalEarnings","cursorPerc","tokenIcon","tokenRGBColor","estimateIndex","estimationStepEarnings","estimationStepEarningsFormatted","borderRight","wordBreak","gte","pl","src_TotalEarningsCounter_TotalEarningsCounter","estimationLabel","DashboardIconButton","TotalBalanceCounter","counterEnd","counterStart","StrategyPage","tokensToMigrate","aggregatedValues","activeCoverages","depositedTokens","remainingTokens","batchedDeposits","portfolioLoaded","availableGovTokens","portfolioEquityStartDate","batchedDepositsAvailableTokens","portfolioEquityQuickSelection","availableTokensChanged","getActiveCoverages","getBatchedDeposits","getTokensToMigrate","c","statusColors","statusIcon","statusColor","portfolioCoverage","totalBalance","statusIconProps","batchInfo","strategy","deposited","batchDeposits","redeemable","batchRedeems","avgScore","totalBalanceWithScore","tokenScore","amountLentToken","tokenWeight","getTokenScore","getGovTokensUserTotalBalance","govTokensTotalBalance","govTokensUserBalance","govTokensTotalBalanceTooltip","govTokens","apyLong","riskScore","yieldFarming","batchDepositConfig","coverProtocolConfig","placement","message","src_TotalBalanceCounter_TotalBalanceCounter","totalEarningsPerc","src_PortfolioDonut_PortfolioDonut","aligItems","setPortfolioEquityQuickSelection","getFrequencySeconds","AssetsList","fields","mobile","goToSection","route","h4","desc","showTooltip","showDirection","toolName","toolIndex","toolConfig","src_DashboardIconButton_DashboardIconButton","src_CustomList_CustomList","fileClaimUrl","openWindow","src_EarningsEstimation_EarningsEstimation","textSize","BatchDeposit","canClaim","batchTotals","canDeposit","usePermit","lastExecution","hasDeposited","permitSigned","currBatchIndex","batchCompleted","claimSucceeded","componentLoaded","executeSucceeded","migrationEnabled","migrationSucceeded","batchDepositEnabled","migrationContractApproved","migrationEnabledCallback","migrationCallback","checkBatchs","loadStrategies","urlParams","param2","executeSucceededChanged","callbackExecute","callbackReceiptExecute","migrationContract","migrationContractInfo","getBatchedDepositExecutions","batchExecutions","functions","functionInfo","nonceMethod","permitContract","methods","batchIndex","batchTotal","batchRedeem","batchDeposit","batchDepositInfo","depositEnabled","availableStrategiesKeys","_ref6","strategyConfig","selectStrategy","obj","baseTokenConfig","strategyAvailableTokens","oldContract","migrateFunction","migration","setStrategyToken","batchId","callbackClaim","callbackReceiptClaim","canExecuteBatch","strategyDefaultValue","openTooltipModal","isDisabled","Migrate","showActions","getTokenPrice","isMigrationTool","showBalanceSelector","migrationIcon","migrationParams","toMigrate","callbackPermit","migrationText","minPoolSize","CoverProtocol","swapInfo","defaultCoverage","selectedCoverage","collateral","inputValueChanged","swapInfoChanged","swapFee","covTokens","tokenAmountOut","getSwapInfo","MAX_UINT256","pow","expirationTimestamp","balancerTokenConfig","tokens","dashboardUrl","fixedAmount","mintedClaimLog","mintedNoClaimLog","mintedClaimAmount","mintedNoClaimAmount","claimTokenConfig","claimTokensLog","receivedClaimAmount","balancerPool","noClaimTokenConfig","noClaimTokensLog","receivedNoClaimAmount","collateralAmount","balancerClaimConfig","balancerNoClaimConfig","claimTokenBalance","noClaimTokenBalance","balancerPoolClaimBalance","balancerPoolNoClaimBalance","hasMintedTokens","apyPrice","coverages","expirationDate","selectCoverage","coverage","isMint","isBuyClaim","isBuyNoClaim","subcaption","BuyModal","showInline","availableMethods","buyToken","TokenMigration","changeFromToken","convertTool","tokenInfo","destTokenConfig","BatchMigration","batchMigrationInfo","batchMigrationDepositEnabled","_ref7","DeployB2BVesting","actionIndex","validated","viewAction","editAction","newAction","maxContracts","actionValid","actionInputs","claimedTokens","deployedContracts","contractDeployed","inputs","validateForm","checkInputs","vesterImplementation","contracts","getContractPastEvents","proxyCreated","deployedContractsAddresses","implementation","proxy","owner","recipient","vestingPeriod","availableBalance","depositAmounts","totalDeposited","total","claimedTokensLog","returnString","fieldPattern","RegExp","inputIndex","inputInfo","getPatternByFieldType","inputValid","match","actionValue","txError","deployedContract","idleAddress","isLastAction","clonedVesterAddress","events","ProxyCreated","ownerAddress","recipientAddress","initData","depositContracts","claimContracts","onSubmit","handleSubmit","setEditAction","pattern","inputChange","getEtherscanAddressUrl","addAction","deleteAction","setNewAction","setViewAction","readOnly","depositCallback","claimCallback","env","process","appName","version","baseURL","forumURL","darkModeEnabled","betaURL","countries","USA","GBR","AUS","BRA","CHN","CAN","EUR","HKG","IND","MEX","RUS","ZAF","KOR","errorsEnabled","messagesEnabled","connectors","metamask","opera","dapper","coinbase","trustwallet","walletconnect","iconModal","walletlink","gnosis","fortmatic","portis","authereum","torus","trezor","ledger","custom","newsletterSubscription","endpoint","messages","scoreShort","apyShort","cheapRedeem","curveBonusSlippage","directMint","performanceFee","govTokenApr","govTokenRedeemableBalance","riskScoreShort","redeemSkipGov","batchDepositExecutionSchedule","curveInstructions","analytics","google","debugEnabled","addPostfixForTestnet","pageView","modals","first_deposit_referral","first_deposit_share","welcome","frequency","dashboard","baseRoute","mode","governance","test","availableContracts","IDLE","FeeTreasury","PriceOracle","GovernorAlpha","EcosystemFund","IdleController","proposals","7","delegates","n_coins","imageInactive","rates","poolContract","CurvePool","depositContract","CurveDeposit","gaugeContract","LiquidityGaugeV2","zapContract","CurveZap","idleDAIYield","coinIndex","idleUSDCYield","idleUSDTYield","permit","DAI","EIPVersion","USDC","SLP","showAUM","showAPR","protocol","showPrice","aprTooltipMode","distributionMode","distributionFrequency","disabledTokens","COMP","stkAAVE","aToken","addressForPrice","ProxyFactory","MinimalInitializableProxyFactory","LockedIDLE","Timelock","VesterFactory","EarlyRewards","Comptroller","SushiswapRouter","SushiV2Router02","UniswapRouter","UniswapV2Router02","BalancerExchangeProxy","zeroExInstant","orderSource","assetData","affiliateInfo","feeRecipient","strategies","best","comingSoon","addGovTokens","titlePostfix","iconName","govTokensEnabled","chartColor","iconInactive","iconInactiveDark","descLong","descShort","risk","new","TTL","tvls","substack","scores","config","headers","REACT_APP_IDLE_KEY","Authorization","versions","v3","additionalProtocols","endTimestamp","startTimestamp","showPerformanceTooltip","strategiesParams","enabledStrategies","v4","rgb","hex","chart","labelTextColorModifiers","performanceTooltip","USD","USDT","TUSD","SUSD","WBTC","WETH","RAI","idleDAI+idleUSDC+idleUSDT","compound","aavev2WithStkAAVE","rateField","compoundWithCOMP","fulcrum","dsr","dydx","iearn","aave","aavev2","cream","fuse","skipRebalance","metaTransactionsEnabled","skipMint","minAmountForMint","erc20ForwarderEnabled","skipMintCheckboxEnabled","erc20ForwarderProxyContract","forwarder","erc20Forwarder","function","permitType","IdleDepositForwarder","proxyContract","IdleProxyMinter","minAmountForRebalance","minAmountForRebalanceMetaTx","redeemGovTokens","rebalance","IdleRebalancerV3","availableNetworks","3","4","42","1337","isForked","blocksPerYear","secondsPerYear","requiredConfirmations","enabledNetworks","accountBalanceMinimum","providers","infura","ens","supportedNetworks","nexus","endpoints","etherscan","REACT_APP_ETHERSCAN_KEY","REACT_APP_ETHERSCAN_KEY2","REACT_APP_ETHERSCAN_KEY3","REACT_APP_ETHERSCAN_KEY4","baseUrl","snapshot","whitelist","urls","biconomy","enableLogin","disabledWallets","limits","debug","apiKey","REACT_APP_BICONOMY_KEY","dappId","REACT_APP_BICONOMY_APPID","apiId","simpleID","getNetwork","networkId","networkName","appOrigin","location","origin","appId","renderNotifications","notifications","tools","stake","subComponent","stkIDLE","StakingFeeDistributor","LpStakingAbi","SushiLiquidityPool","b2bVesting","visible","B2BVester","ethWrapper","coverProtocol","CoverMint","Claim","CovToken","BalancerPool","NoClaim","claimEnabled","IdleBatchedMint","permitName","batchMigration","IdleTokenV3","IdleBatchConverter","idleSUSDYield","idleTUSDYield","idleWBTCYield","idleDAISafe","idleUSDCSafe","idleUSDTSafe","tokenMigration","IdleConverterPersonalSignV4","oldAddresses","idleDAIv2","IdleTokenV2","cDAI","iDAI","aDAI","yDAIv3","yDAIv2","idleUSDCv2","cUSDC","iUSDC","aUSDC","yUSDCv3","yUSDCv2","cUSDT","iUSDT","aUSDT","yUSDTv3","yUSDTv2","idleSUSDv2","aSUSD","ySUSDv3","idleTUSDv2","aTUSD","yTUSDv3","cWBTC","iWBTC","aWBTC","addFunds","directProps","showAllTokens","nexusMutual","IdleTokenV4","ERC20","NexusMutualDistributor","NexusMutualIncidents","tokenSwap","ETH","USDS","BUSD","EURS","2KEY","ABT","ABYSS","AMPL","ANT","BAM","BAND","BAT","BLZ","BNT","BQX","BTU","CDT","CVC","DAT","DGX","EKG","ELF","ENJ","EQUAD","FXC","GDC","GEN","GHT","GNO","IOST","KEY","KNC","LEND","LINK","LOOM","LRC","MANA","MCO","MET","MFG","MKR","MLN","MTL","MYB","NEXXO","NPXS","OGN","OMG","OST","PAX","PBTC","PLR","PNK","POLY","POWR","PT","QKC","QNT","RAE","REN","REP","REQ","RLC","RSR","RSV","SAN","SNT","SNX","SPIKE","SPN","TKN","TKX","TRYB","UBT","UPP","ZRX","payments","bank","defaultProvider","showDefaultOnly","card","wallet","wyre","captionPos","supportedMethods","supportedCountries","supportedTokens","envParams","accountId","prod","getInfo","selectedMethod","buyParams","referrerAccountId","dest","destCurrency","redirectUrl","k","encodeURIComponent","iframeBox","innerHTML","body","wyreStyle","ramp","badge","hostAppName","userAddress","hostApiKey","REACT_APP_RAMP_KEY","variant","hostLogoUrl","swapAsset","RampInstantSDK","t0","getAccountBalance","getTokenDecimals","payload","purchase","toastProvider","addMessage","secondaryMessage","colorTheme","actionHref","actionText","show","transak","https://global.transak.com/v1/widget.js","REACT_APP_TRANSAK_KEY_TEST","REACT_APP_TRANSAK_KEY_PROD","fee","selectedCountry","fiatCurrency","cryptoCurrencyCode","currencyCode","walletAddress","partnerCustomerId","disableWalletAddressForm","transakGlobal","transakStyle","moonpay","REACT_APP_MOONPAY_KEY_TEST","REACT_APP_MOONPAY_KEY_PROD","baseCurrencyCode","showWalletAddressForm","enabledPaymentMethods","navigator","userAgent","cookie","moonpayStyle","https://instant.0x.org/v3/instant.js","onSuccess","onClose","tokenParams","RimbleWeb3_context","chainId","connector","ethereum","defaultSelectedAssetData","availableAssetDatas","shouldDisableAnalyticsTracking","defaultAssetBuyAmount","kyberSwap","web3Subscription","decodeLogsData","internalType","https://widget.kyber.network/v0.7.5/widget.css","https://widget.kyber.network/v0.7.5/widget.js","querySelectorAll","remove","scripts","lang","paramForwarding","pinnedTokens","defaultPair","commissionId","click","airSwap","https://cdn.airswap.io/airswap-instant-widget.js","onComplete","AirSwapInstant","totle","https://widget.totle.com/latest/dist.js","sourceAssetAddress","sourceAmountDecimal","destinationAssetAddress","destinationAmountDecimal","partnerContractAddress","TotleWidget","nodeId","totleWidgetContainer","run","mouseOver","isVisible","isRainbow","active","onMouseOut","setMouseOver","onMouseOver","IdleGovToken","classCallCheck","getBalance","claimRewards","getPriorVotes","priorVotes","_args3","refreshIdleSpeed","getUnclaimedTokens","getAPR","IDLETokenConfig","cachedDataKey","APR","idleDistribution","tokenAllocation","tokenPool","idleDistributedPerYearUSD","_args6","getDistribution","getUniswapConversionRate","totalAllocationWithUnlent","getSpeed","idleTokenAddress","idleSpeeds","getCachedDataWithLocalStorage","setCachedDataWithLocalStorage","_x5","_ref10","distribution","_x6","getUserDistribution","_callee10","fixByFrequency","totalSpeed","_args10","_context10","_ref12","_callee9","_ref13","_ref14","idleSpeed","userPoolShare","tokenSpeed","_context9","getUserPoolShare","_x7","fixDistributionSpeed","getAvgApr","_callee12","_args12","_context12","_ref16","_callee11","_ref17","_ref18","idleApr","_context11","_x8","ethereumjsABI","require","idleGovToken","trimEth","BN","toEth","wei","fromWei","htmlDecode","childNodes","nodeValue","BNify_obj","BigNumber","String","_len","Array","_key","moment","customLogError","_console","_len2","_key2","normalizeSimpleIDNotification","str","arr1","arr2","stripHtml","html","tmp","textContent","innerText","scrollTo","to","scrollY","change","currentTime","easeInOutQuad","animateScroll","val","getQueryStringParameterByName","results","exec","decodeURIComponent","depositProxyContractInfo","migrationContractAddr","migrationContractOldAddrs","batchMigrationContractAddr","isMigrationTx","isSendTransferTx","isReceiveTransferTx","isDepositTx","isRedeemTx","isSwapTx","shortHash","txStart","txEnd","ensConfig","addressCheck","current","checkAddress","currentProvider","ENS","ensAddress","getEnsAddress","getName","getAddress","orderedTokensBalance","_args4","totalBalanceConverted","tokenBalanceConverted","getCurveAvgSlippage","processedHashes","curveTokensBalance","curveTxs","avgSlippage","_args5","getCurveAvailableTokens","getCurveTxs","curveTokens","curveTokenPrice","received","slippage","getCurveAvgBuyPrice","prevAvgBuyPrice","_args7","idleTokensBalance","getFirstDepositTx","deposits","_args8","firstDepositTx","asyncTimeout","ms","getDepositTimestamp","firstDepositTxs","_args9","acc","userAvgPrice","getAmountLent","amountLents","_args11","getEtherscanBaseTxs","endBlockNumber","firstIdleBlockNumber","etherscanInfo","etherscanBaseTxs","etherscanBaseEndpoint","etherscanApiUrl","lastCachedTx","lastCachedBlockNumber","etherscanEndpointLastBlock","latestTxs","latestBlockNumbers","txs","requestCount","requestStatus","cachedRequests","getCachedRequest","result","makeCachedRequest","filterEtherscanTxs","toConsumableArray","saveEtherscanTxs","_callee13","_args13","_context13","filterCurveTxs","txsToStore","cachedRequest","saveCachedRequest","_callee14","_ref19","allAvailableTokens","_args14","_context14","processStoredTxs","_ref20","_callee15","_args15","_context15","_ref21","_callee16","curveTransfersTxs","curveTransfersTxsToDelete","curveZapContract","curvePoolContract","curveSwapContract","curveDepositContract","_args16","_context16","tokenMigrationToolParams","curveTokenConfig","idleToken","internalTxs","isRightToken","iTx","isBatchMigrationTx","isDepositInternalTx","iTx2","isRedeemInternalTx","isConversionTx","isWithdrawTx","curveTx","isCurveTx","isCurveDepositTx","isCurveRedeemTx","isCurveDepositIn","isCurveDepositOut","isCurveZapIn","isCurveZapOut","isCurveTransferOut","isCurveTransferIn","isSwapOutTx","tokenDecimal","tokenValue","newValue","iTxs","withdrawnValue","processEtherscanTransactions","addStoredTransaction","txKey","tokenKey","storedTxs","getStoredTransactions","updateStoredTransactions","getStoredItem","_ref22","_callee21","txReceipts","baseTokensConfigs","baseTokensAddresses","curveAvailableTokens","_args21","_context21","baseTokenAddress","_ref23","_callee20","minedTxs","_context20","_ref24","_callee19","storedTx","tokensTransfered","_curveTokenPrice","_curveTokenPrice2","curveTxReceipt","filteredLogs","_curveTokenPrice3","_curveTxReceipt","idleTokenDecimals","_filteredLogs","_context19","getCurveTokenPrice","t1","_ref25","_callee17","_context17","_x12","_x13","baseTokensConfig","t2","_ref26","_callee18","_context18","_x14","_x15","_x10","_x11","_x9","_ref27","_callee27","txsToProcess","_args27","_context27","_ref28","_callee26","_context26","_ref29","_callee25","isStoredTx","allowedMethods","pendingStatus","txPending","isMetaTx","methodIsAllowed","realTx","txValue","redeemedValueFixed","executeMetaTransactionReceipt","executeMetaTransactionContractAddr","executeMetaTransactionInternalTransfers","IdleProxyMinterInfo","internalTransfer","metaTxValue","metaTxValueFixed","migrationTxReceipt","migrationTxInternalTransfers","migrationInternalTransfer","decodedLogs","migrationValue","migrationValueFixed","_context25","mintIdleToken","redeemIdleToken","migrateFromToIdle","mintIdleTokensProxy","migrateFromAaveToIdle","migrateFromIearnToIdle","executeMetaTransaction","migrateFromFulcrumToIdle","migrateFromCompoundToIdle","method","created","_ref30","_callee22","_context22","_x20","_x21","_ref31","_callee23","_context23","_x22","_x23","raw","_ref32","_callee24","_context24","_x24","_x25","decodeLog","_token","_x18","_x19","_x17","_x16","alias","getCustomAddress","setCustomAddress","customAddress","_ref33","_callee28","error_callback","_args28","_context28","catch","_x26","makeEtherscanApiRequest","_ref34","_callee29","apiKeyIndex","_args29","_context29","_x27","_ref35","_callee30","return_data","_args30","_context30","_x28","code","errorCode","array","prop","shift","configs","checkUrlOrigin","checkUrlBeta","sendGoogleAnalyticsPageview","_callee31","googlePageviewInfo","isOrigin","_args31","_context31","ga","_ref37","_callee33","googleEventsInfo","originOk","currentNetwork","_args33","_context33","_ref38","_callee32","_context32","hitCallback","hitCallbackFail","_x30","_x31","_x29","createContract","_ref39","_callee34","_context34","Contract","_x32","_x33","_x34","getWalletProvider","simpleIDPassUserInfo","userInfo","email","initSimpleID","passUserInfo","baseurl","decimalCount","thousands","abs","negativeSign","Number","getSnapshotProposals","_callee37","activeOnly","validProposals","_args37","_context37","getCachedData","addr","msg","_ref41","_callee36","checkedStrategies","_context36","metadata","_ref42","_callee35","_context35","symbol","_x36","_x35","_ref43","_callee38","forceStartTimestamp","order","limit","filteredCachedData","_filteredData","apiInfo","filteredData","_args38","_context38","_x37","_ref44","_callee39","_context39","_x38","aprs","allocations","aprWeighted","allocation","quantity","hour","day","week","_callee40","idleTokenConfig","etherscanEndpoint","etherscanTxlist","_context40","getProtocolInfoByAddress","ROUND_FLOOR","normalizeTokenDecimals","normalizedTokenDecimals","exchangeRate","checkContractPaused","_callee41","contractPaused","_args41","_context41","parse_json","return_default","clearStoredData","excludeKeys","clear","storedKeysToRemove","storedKey","removeStoredItem","removeItem","setItem","checkRebalance","_ref47","_callee43","lastAllocationsPromises","protocolIndex","newAllocations","diff","_context43","lastAllocationsPromise","_ref48","_callee42","lastAllocations","_context42","_x40","_x41","alloc","_x39","checkMigration","_ref49","_callee44","oldContractBalance","oldContractTokenDecimals","oldContractBalanceFormatted","oldContractName","_context44","_x42","_x43","_ref50","_callee45","eventName","_args45","_context45","_x44","_x45","estimateMethodGasUsage","_ref51","_callee46","_contract$methods","functionCall","gasLimit","_ref52","_ref53","_args46","_context46","getGasPrice","estimateGas","_x46","_x47","_ref54","_callee47","callback_receipt","_contract$methods2","_context47","once","confirmationNumber","receipt","_x48","_x49","_x50","_x51","_x52","getSignatureParameters_v4","signature","isHexStrict","Error","hexToNumber","constructMetaTransactionMessage","nonce","functionSignature","soliditySHA3","toBuffer","checkBiconomyLimits","_ref55","_callee48","biconomyInfo","res","_context48","x-api-key","_x53","sendTxWithPermit","_ref56","_callee49","_contract$methods3","messageToSign","_this$getSignaturePar","_context49","encodeABI","_address","personal","sign","_x54","_x55","_x56","_x57","_x58","_x59","buildBiconomyErc20ForwarderTx","_ref57","_callee50","tokenAddress","callData","_context50","erc20ForwarderClient","buildTx","txGas","_x60","_x61","_x62","_x63","_x64","_ref58","_callee52","_context52","_ref59","_callee51","_context51","_x66","_x67","_x65","sendBiconomyTxWithErc20Forwarder","_ref60","_callee53","req","metaInfo","txResponse","fetchReceiptIntervalId","_context53","permitAndSendTxEIP712","setInterval","clearInterval","updateTransaction","_x68","_x69","_x70","_x71","sendBiconomyTxWithPersonalSign","_ref61","_callee54","_this$getSignaturePar2","_context54","getNonce","call","_x72","_x73","_x74","_x75","signPermitEIP2612","_ref62","_callee55","erc20Name","spender","deadline","domain","domainData","_context55","getChainId","verifyingContract","types","EIP712Domain","Permit","primaryType","jsonrpc","substring","_x76","_x77","_x78","_x79","_x80","_x81","_x82","_x83","_ref63","_callee56","baseContractName","holder","spenderContractName","addToNonce","baseContract","spenderContract","permitConfig","_args56","_context56","net","getId","allowed","_x84","_x85","_x86","_ref64","_callee57","permitParams","methodAbi","useNonce","_args57","_context57","_jsonInterface","f","unshift","_x87","_x88","_x89","_x90","_x91","_x92","_x93","sendSignedTx","_ref65","_callee58","MetaTransaction","dataToSign","_context58","_x94","_x95","_x96","_x97","_x98","_ref66","_callee59","contractAddr","walletAddr","_ref67","_ref68","allowance","_context59","getAllowance","_x99","_x100","_x101","_ref69","_callee60","_context60","_x102","_x103","_x104","contractMethodSendWrapperWithValue","txData","disableERC20","loadAssetField","_ref70","_callee61","field","addCurveApy","strategyInfo","govTokenAvailableTokens","newTokenConfig","_ref71","_ref72","curveAvgSlippage","curveAvgBuyPrice","curveTokenBalance","_ref73","_ref74","amountLentCurve1","redeemableBalanceCurve","_ref75","_ref76","curveApy","amountLentCurve","redeemableBalanceCurveStart","redeemableBalanceCurveEnd","earningPerYear","_ref77","_ref78","amountLent1","redeemableBalance1","_idleGovToken","govTokenConfig","blocksPerDay","blocksPerWeek","blocksPerMonth","_idleGovToken2","_idleGovToken3","tokenApys","curveAPY","_ref79","_ref80","tokenPriceFirstDeposit","_ref81","_ref82","daysFirstDeposit","depositTimestamps","_govTokenConfig","_ref83","_ref84","tokenAPY1","amountLent2","redeemableBalanceStart","redeemableBalanceEnd","_earningPerYear","_govTokenConfig2","_ref85","_ref86","idleTokenPrice1","idleTokenBalance2","govTokensBalance","_tokenBalance","redeemableBalance","_ref87","_ref88","amountLentCurve2","redeemableBalanceCurve1","_ref89","_ref90","redeemableBalance2","_args61","_context61","getCurveTokenBalance","getCurveAPY","getCurveRedeemableIdleTokens","getGovTokenPool","getTokenPool","getCompUserDistribution","getStkAaveUserDistribution","getIdleGovToken","t3","getCompDistribution","getStkAaveDistribution","t4","getCompAvgApr","t5","t6","t7","getUserTokenFees","t8","t9","getGovTokenUserBalance","_x105","_x106","_x107","_x108","getIdleTokenSupply","_ref91","_callee62","idleTokenSupply","_args62","_context62","_x109","getIdleTokenPriceWithFee","_ref92","_callee63","_ref93","_ref94","priceWFee","_args63","_context63","eq","_x110","_x111","_ref95","_callee64","tokenData","beforePrice","afterPrice","tokenPriceBefore","tokenPriceAfter","timeBefore","timeAfter","timeDiff","priceDiff","priceAcceleration","timeDiffFromBeforePrice","_args64","_context64","_x112","clearCachedData","useLocalStorage","_ref96","_callee65","_ref97","_ref98","idleTokensTotalSupply","userShare","_context65","_x113","_x114","_callee67","_args67","_context67","_ref100","_callee66","coverageTokens","protocolImage","_context66","_x115","_ref101","_callee68","_context68","_x116","_callee70","filter_by_status","_args70","_context70","_ref103","_callee69","_ref104","_ref105","_context69","_x117","_ref106","_callee71","fixDecimals","_args71","_context71","_x118","_ref107","_callee72","_ref108","_ref109","_args72","_context72","_x119","_x120","copyToClipboard","copyText","setSelectionRange","execCommand","loadScript","attr","isValidJSON","_ref110","_callee73","_args73","_context73","_x121","_ref111","_callee74","_args74","_context74","_x122","_x123","getProtocolBalance","_ref112","_callee75","_context75","_x124","_x125","getAprs","_ref113","_callee76","_context76","addresses","_x126","genericIdleCall","_ref114","_callee77","callParams","_args77","_context77","_x127","_ref115","_callee78","_contract$methods4","_args78","_context78","_x128","_x129","getTxDecodedLogs","_ref116","_callee80","logAddr","decodeLogs","internalTransfers","_context80","_ref117","_callee79","_context79","_x134","_x135","_x130","_x131","_x132","_x133","blocksToSeconds","blocks","blocksPerSeconds","getBlockNumber","_callee81","_context81","_ref119","_callee82","_args82","_context82","getPastEvents","_x136","_x137","_ref120","_callee83","_contract$methods5","_args83","_context83","_x138","_x139","_ref121","_callee84","_args84","_context84","_x140","_x141","apr2apy","getUnlentBalance","_ref122","_callee85","unlentBalance","_context85","_x142","_ref123","_callee86","_args86","_context86","_x143","_ref124","_callee88","protocolsAprs","exchangeRates","protocolsBalances","govTokensBalances","_args88","_context88","totalAllocationConverted","totalAllocationWithUnlentConverted","_ref125","_callee87","_ref126","_ref127","protocolBalance","protocolAllocation","_context87","_x145","_x146","protocolAllocationPerc","getGovTokensBalances","getTokenConversionRate","_x144","getUniswapConversionRate_path","_ref128","_callee89","one","unires","_context89","_x147","_ref129","_callee90","pairAddresses","_ref130","_ref131","token0_address","token1_address","poolReserves","token0_config","token1_config","_ref132","_ref133","token0_price","token1_price","token0_pool","token1_pool","totalPoolSize","_context90","_x148","_x149","_ref134","_callee91","tokenConfigFrom","tokenConfigDest","WETHAddr","_context91","_x150","_x151","_ref135","_callee92","_context92","_x152","_x153","getCurveDepositedTokens","_ref136","_callee93","idleTokensBalances","remainingCurveTokens","_args93","_context93","_x154","getCurveUnevenTokenAmounts","_ref137","_callee94","amounts","max_burn_amount","unevenAmounts","_context94","getCurveDepositContract","_x155","_x156","_callee95","curveRatesInfo","_context95","strategyTokens","getCurveAPYContract","_callee96","blocksForPrevTokenPrice","_ref140","_ref141","prevTokenPrice","blocksMultiplier","curveAPR","_context96","getCurveTokenSupply","_callee97","_context97","getCurvePoolContract","_callee98","_args98","_context98","_callee99","_args99","_context99","_ref145","_callee100","_ref146","_ref147","_context100","_x157","_callee101","depositContractInfo","_context101","getCurveZapContract","_callee102","zapContractInfo","_context102","_callee103","poolContractInfo","_context103","getCurveSwapContract","_callee104","_context104","getCurveIdleTokensAmounts","_callee106","max_slippage","curveTokenSupply","curveTokenShare","_args106","_context106","_ref153","_callee105","curveIdleTokens","_context105","_x158","getCurveTokensAmounts","_callee108","useCoinIndex","_args108","_context108","_ref155","_callee107","_ref156","_ref157","totalTokenSupply","_context107","_x159","getCurveAmounts","_ref158","_callee110","_args110","_context110","_ref159","_callee109","_context109","_x162","_x160","_x161","getCurveTokenAmount","_ref160","_callee111","_args111","_context111","_x163","getCurveSlippage","_ref161","_callee112","uneven_amounts","_ref162","_ref163","virtualPrice","Sv","_args112","_context112","_x164","_x165","_ref164","_callee113","aTokenIdleSupply","annualize","aaveDistribution","stkAAVETokenConfig","aTokenConfig","aaveIncentivesController_address","IAaveIncentivesController_name","_ref165","_ref166","aTokenTotalSupply","aaveAllocationPerc","aaveSpeed","aavePoolShare","_args113","_context113","_x166","_callee115","_args115","_context115","_ref168","_callee114","_ref169","_ref170","_context114","_x167","getStkAaveApr","_ref171","_callee116","aaveConversionRate","stkAaveAPR","stkAaveValue","_args116","_context116","_x168","_x169","getCompAPR","_ref172","_callee117","cTokenIdleSupply","compConversionRate","COMPTokenConfig","compAPR","compDistribution","compValue","_args117","_context117","_x170","_x171","getCompSpeed","_ref173","_callee118","cTokenAddress","compSpeed","_context118","_x172","_ref174","_callee119","cTokenInfo","compoundAllocationPerc","_ref175","_ref176","cTokenTotalSupply","compoundPoolShare","_args119","_context119","_x173","_callee121","_args121","_context121","_ref178","_callee120","_ref179","_ref180","_context120","_x174","_callee123","_args123","_context123","_ref182","_callee122","_ref183","_ref184","compApr","_context122","_x175","getTokensCsv","_callee126","csv","_context126","prototype","sum","pv","cv","avg","_ref186","_callee125","_context125","_ref187","_callee124","header","aprAvg","scoreAvg","lastRow","_context124","protocolsData","p1","foundProtocol","p2","rate","idleRate","score","idleScore","pInfo","pData","pRate","pScore","defiScore","additionalRate","avgRate","_x177","_x176","_callee128","_args128","_context128","_ref189","_callee127","compTokenBalance","_context127","_x178","getTokenGovTokens","speed","multipliers","block","second","month","year","getGovTokensUserDistributionSpeed","_ref190","_callee130","govTokensUserDistribution","_args130","_context130","_ref191","_callee129","_context129","_x180","_x179","getGovTokensDistributionSpeed","_ref192","_callee132","govTokensDistribution","tokenGovTokens","_args132","_context132","_ref193","_callee131","govSpeed","_context131","_x182","_x181","getGovTokensAprs","_ref194","_callee134","govTokensAprs","_args134","_context134","_ref195","_callee133","_ref196","_ref197","_ref198","_ref199","cTokenConfig","_context133","_x185","_x183","_x184","_callee136","_args136","_context136","_ref201","_callee135","tokenConversionRate","fromTokenConfig","_context135","_x186","getGovTokenConfigByAddress","_callee137","checkShowBalance","govTokensEarnings","_args137","_context137","govTokenAmount","getGovTokensIndexes","_ref203","_callee139","govTokensAmounts","_context139","_ref204","_callee138","govTokenIndex","govTokenAddress","_context138","_x189","_x190","_x187","_x188","_callee142","govTokenConfigForced","_args142","_context142","_ref206","_callee141","_context141","_ref207","_callee140","_context140","_x192","_x193","_x191","getTokenFees","_callee143","_args143","_context143","_callee144","_ref210","_ref211","gain","fees","_args144","_context144","_ref212","_callee145","_args145","_context145","_x194","getTotalTVL","_callee146","tokensTVL","_context146","getTokensTVL","totalTVL","tokenTVL","_callee150","_context150","_ref215","_callee149","_context149","_ref216","_callee148","oldTokenTVL","idleTokenName","_ref217","_ref218","oldTokenConfig","_ref222","_ref223","oldTokenPrice","oldTotalSupply","_context148","_ref219","_callee147","_ref220","_ref221","govTokenConversionRate","govTokenBalanceConverted","_context147","_x197","oldProtocols","oldProtocol","protocolPos","_x196","_x195","getSubstackLatestFeed","_callee151","endpointInfo","idleSubstackFeed","latestFeed","_context151","items","getAggregatedStats","_callee152","totalAUM","_args152","_context152","getAggregatedStats_chain","_callee156","avgAPR","_args156","_context156","_ref227","_callee155","_context155","_ref228","_callee154","tokenAUM","oldTokenAllocation","oldTokenTotalAllocation","_context154","_ref229","_callee153","_ref230","_ref231","_context153","_x200","_x199","_x198","getTokenApy","_ref232","_callee157","_context157","_x201","_callee160","_args160","_context160","_ref234","_callee159","_context159","_ref235","_callee158","_ref236","_context158","_x203","_x202","getProtocolsTokensBalances","_callee162","tokenBalances","minTokenBalance","protocolsTokens","_args162","_context162","_ref238","_callee161","tokenContract","_context161","_x204","_ref239","_callee163","_args163","_context163","_x205","_x206","_x207","getAvgAPYStats","_ref240","_callee164","apiResults","_args164","_context164","_x208","_x209","_ref241","_callee165","_conversionRate","_args165","_context165","_x210","_x211","_ref242","_callee166","_ref243","_ref244","_context166","protocolScore","getTokenScoreApi","_x212","_x213","_ref245","_callee167","_context167","_x214","_x215","_ref246","_callee170","Aprs","protocolsApys","idleGovTokenShowAPR","idleAPR","_args170","_context170","_ref247","_callee169","addrIndex","protocolApr","protocolApy","govTokenAPR","_context169","_ref248","_callee168","_context168","_x219","_x217","_x218","_x216","isNegative","suffixNum","decimalPart","mod","toPrecision","difference","maxLen","highlightedDecimals","numLen","intPart","decPart","repeat","highlightedDec","highlightedIntPart","Tos","h2","listStyle","Footer","theme_dark","TorusConnector","kwargs","Torus","api","rest","objectWithoutProperties","possibleConstructorReturn","getPrototypeOf","buttonPosition","init","login","getUserInfo","getPublicAddress","verifier","verifierId","logout","updateNetworkId","Connector","AuthereumConnector","Authereum","getProvider","enable","getAccounts","accounts","disable","constructor","GnosisSafeConnector","SafeAppConnector","safeLoaded","checkSafeApp","activate","getAccount","getSafeInfo","isSafeApp","deactivate","WalletLinkConnector","WalletLink","infuraUrl","appLogoUrl","walletLink","darkMode","makeWeb3Provider","disconnect","close","WalletConnectConnector","WalletConnectProvider","infuraId","defaultNetwork","InjectedConnector","Connectors","NetworkOnlyConnector","TrezorConnector","LedgerConnector","FortmaticConnector","PortisConnector","manifestEmail","REACT_APP_TREZOR_MANIFEST_EMAIL","manifestAppUrl","REACT_APP_TREZOR_MANIFEST_URL","fortmaticApiKey","REACT_APP_FORTMATIC_KEY_MAINNET","portisDAppId","REACT_APP_PORTIS_DAPP_ID","portisNetwork","REACT_APP_PORTIS_NETWORK","supportedNetworkURLs","REACT_APP_INFURA_KEY","Injected","Infura","providerURL","Trezor","TrezorApi","Ledger","WalletConnect","bridge","Fortmatic","FortmaticApi","logoutOnDeactivation","Portis","PortisApi","dAppId","AuthereumApi","TorusApi","buildEnv","enableLogging","host","showTorusButton","WrongNetworkBanner","React","NetworkUtil","isCorrectNetwork","components_WrongNetworkBanner","NoWeb3BrowserModal","renderContent","RimbleUtil","isMobileDevice","bold","isOpen","ModalCard","closeFunc","closeModal","Body","NoWalletModal","icononly","Outline","GeneralUtil","hasMetaMask","isMetaMask","isTrustWallet","isTrust","isCoinbaseWallet","hasDapper","DapperEthereum","isDapper","isOpera","isAndroid","isIos","MSStream","WrongNetworkModal","RimbleUtils","TransactionFeeModal","Header","subtitle","subtitle2","Web3ConnectionButtons","context","useWeb3Context","setConnector","walletProvider","connectionCallback","unsetConnector","isMetamask","isGnosisSafe","safe","browserWalletDetected","allowedConnectors","registerPage","registerPageByDefault","basicConnectorsName","injectedIndex","splice","gnosisIndex","connectorInfo","walletIcon","buttonStyle","ConnectionModal","showTxFees","currentSection","showInstructions","askCustomAddress","closeRemainingTime","customAddressError","newToEthereumChoice","toggleShowTxFees","setStoredSection","componentDidUpdate","resetModal","closeCountdown","setWalletChoice","choice","setCurrentSection","connectCustomAddress","updateCustomAddress","renderModalContent","TOSacceptance","react_router_dom","newToEthereum","showConnectionButtons","contrastColor","assertThisInitialized","marginBottom","renderFooter","components_TransactionFeeModal","ConnectionPendingModal","UserRejectedConnectionModal","sendMessageAgain","initAccount","LowFundsModal","showSecondary","toggleQRVisible","alignContent","as","h5","ConnectionModalUtil","components_NoWeb3BrowserModal","closeNoWeb3BrowserModal","noWeb3BrowserModalIsOpen","components_NoWalletModal","closeNoWalletModal","noWalletModalIsOpen","components_WrongNetworkModal","closeWrongNetworkModal","wrongNetworkModalIsOpen","components_ConnectionModal","validateAccount","closeConnectionModal","connectionModalIsOpen","accountValidated","components_ConnectionPendingModal","closeConnectionPendingModal","accountConnectionPending","components_UserRejectedConnectionModal","closeUserRejectedConnectionModal","userRejectedConnect","components_LowFundsModal","closeLowFundsModal","lowFundsModalIsOpen","ConnectionErrorModal","setFirstValidConnector","closeConnectionErrorModal","isLedger","connectionError","TransactionErrorModal","closeTransactionErrorModal","isLedgerError","transactionError","isSlowTxError","INFURA_KEY","RimbleTransactionContext","createContext","web3Infura","permitClient","accountBalance","initWeb3","accountBalanceLow","accountBalanceToken","checkPreflight","checkNetwork","accountInizialized","rejectValidation","accountValidationPending","initializeContracts","rejectAccountConnect","enableUnderlyingWithdraw","userRejectedValidation","transactionConnectionModalIsOpen","openLowFundsModal","openWrongNetworkModal","openNoWeb3BrowserModal","openConnectionErrorModal","openTransactionErrorModal","openConnectionPendingModal","openUserRejectedConnectionModal","openUserRejectedValidationModal","closeUserRejectedValidationModal","meta","setConnectorName","biconomyLoginProcessing","RimbleTransaction","connectGnosisSafe","testTransaction","createTransaction","addTransaction","errorMessage","isWalletConnectClosedModalError","tokenChanged","availableStrategiesChanged","gnosisSafeLoaded","setNetwork","metamaskProvider","connectorNameChanged","web3Host","web3Provider","forceCallback","web3Callback","originalWeb3","biconomyWeb3Provider","detectEthereumProvider","Web3","HttpProvider","library","web3Injected","callbackAfterLogin","setCallbackAfterLogin","isLogin","userContract","Biconomy","onEvent","READY","ERROR","useInfuraProvider","simpleIDInfo","simpleIDParams","SimpleID","wallets","shownNotifications","isError","$crisp","notificationId","content","Sentry","increaseAmount","_ref15","balanceOf","determineAccountLowBalance","openConnectionModal","getRequiredNetwork","getNetworkId","getNetworkName","getNetworkType","contractMethod","_this$state","manualConfirmationTimeoutId","confirmationCallback","manualConfirmation","receiptCallback","isDeniedTx","_args24","confirmationCount","confidenceThreshold","recentEvent","timeout","lastUpdated","updatedTransaction","openNoWalletModal","CrispClient","accountBalanceDAI","subscribedTransactions","connectionErrorModalOpened","transactionErrorModalOpened","Provider","ConnectionModalsUtil","components_TransactionErrorModal","components_ConnectionErrorModal","utilities_NetworkUtil","Consumer","governanceEnabled","offsetTop","ScrollToTop","pathname","useLocation","useEffect","PageNotFound","Header_styles","NetworkOverview","getNetworkCircleColor","circleColor","networkCircle","DebuggerButtons","Web3Debugger","components_NetworkOverview","Web3Debugger_DebuggerButtons","node","constant","outputs","payable","stateMutability","anonymous","indexed","govTokensDisabled","defiPrime","cToken","yToken","iToken","CHAI","skipMintForDeposit","enabledEnvs","crToken","fToken","TransactionToastMessages","started","confirmed","TransactionToastUtil","collectionHasNewObject","prevCollection","currentCollection","getNewObjectFromCollection","objectKey","getUpdatedObjectFromCollection","object","getTransactionFromCollection","identifier","collection","getUpdatedTransaction","currentTx","prevTx","processTransactionUpdates","showTransactionToast","toastMeta","getTransactionToastMeta","closeElem","transactionToastMeta","transactionAction","charAt","newMessage","Landing","lazy","then","Dashboard","Governance","App","currentEnv","selectedTab","connecting","genericError","selectedTheme","buyModalOpened","toastMessageProps","innerWidth","innerHeight","unsubscribeFromHistory","closeToastMessage","showToastMessage","processCustomParam","_args","cachedKeyFound","storedCachedData","widthChanged","heightChanged","tabIndex","envEnabled","loadAvailableTokens","warn","jQuery","setThemeMode","closeIframe","w","iFrames","getElementsByTagName","iframe","contentWindow","parents","loadCustomAddress","loadCurrentEnvironment","strategyChanged","networkChanged","hasMetamask","store","themeDark","SuspenseLoader","web3_react_dist_default","web3Api","libraryName","web3_react_dist","RimbleWeb3","needsPreflight","react_router","react","fallback","isDashboard","setToken","setStrategy","openBuyModal","handleMenuClick","selectTab","closeBuyModal","isGovernance","components_Header","src_Web3Debugger_Web3Debugger","exact","updateSelectedTab","expires","acceptOnScroll","cookieName","acceptOnScrollPercentage","marginTop","overflowY","src_Tos_Tos","src_PageNotFound_PageNotFound","utilities_TransactionToastUtil","Boolean","hostname","dsn","beforeSend","hint","originalException","ReactDOM","src_App_App","serviceWorker","ready","registration","unregister","FieldComponent","colInfo","colIndex","fieldIndex","colProps","_TableCellHeader_TableCellHeader__WEBPACK_IMPORTED_MODULE_7__","oldTokenName","oldIdleTokens","skipMigration","biconomyLimitReached","toggleSkipMigration","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_5__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_4__","executeAction","idleTokenToRedeem","_clientProtocolAmountsRedeem","gasLimitRedeem","callbackRedeem","callbackReceiptRedeem","toggleMetaTransactionsEnabled","checkMigrationContractApproved","migrationContractName","oldIdleTokensConverted","oldContractInfo","oldContractABI","biconomyLimits","disapproveMigration","approveMigration","migrationMethod","callbackMigrate","callbackReceiptMigrate","useMetaTx","_skipRebalance","_migrationContract$me","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","biconomyChanged","usePermitChanged","fastBalanceSelectorChanged","batchMigrationEnabled","SkipMigrationComponent","react__WEBPACK_IMPORTED_MODULE_11___default","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_16__","rimble_ui__WEBPACK_IMPORTED_MODULE_20__","biconomyEnabled","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_13__","migrateTextBefore","migrateText","_TransactionField_TransactionField__WEBPACK_IMPORTED_MODULE_18__","_TxProgressBar_TxProgressBar__WEBPACK_IMPORTED_MODULE_17__","_FastBalanceSelector_FastBalanceSelector__WEBPACK_IMPORTED_MODULE_19__","functionName","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_14__","migrationImage","migrationTextProps","approveText","_TableHeader_TableHeader__WEBPACK_IMPORTED_MODULE_11__","_TableRow_TableRow__WEBPACK_IMPORTED_MODULE_9__","footer","polished__WEBPACK_IMPORTED_MODULE_0__","darkBlue","blurple","consensysblue","readableColor","VariationNumber","IconDirection","iconSize","iconPos","loading-dots","loading-dots--dot","dot-keyframes","selectedProvider","availableProviders","renderPaymentMethod","currentState","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__","goBack","componentWillMount","getProviderInfo","newProviderInfo","getDefaultPaymentProvider","paymentMethod","getAvailablePaymentProviders","providerSupportMethod","providerSupportToken","defaultPaymentProvider","selectProvider","ethAvailable","tokenAvailable","selectMethod","loadRemoteResources","handleCountryChange","getAvailableCountries","availableCountries","countryCode","methodInfo","loadAvailableMethods","InnerComponent","_ImageButton_ImageButton__WEBPACK_IMPORTED_MODULE_12__","imagePropsExtended","react_select__WEBPACK_IMPORTED_MODULE_10__","noOptionsMessage","_ModalCard__WEBPACK_IMPORTED_MODULE_11__","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_10__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1___default","rimble_ui__WEBPACK_IMPORTED_MODULE_3__","bgLayer","backgroundRepeat","backgroundPosition","backgroundSize","backgroundImage","iconHeight","subtitleProps","BackButton","currYear","getFullYear","columnWidth","rimble_ui__WEBPACK_IMPORTED_MODULE_12__","_ExtLink_ExtLink__WEBPACK_IMPORTED_MODULE_8__","role","aria-label","react_router_dom__WEBPACK_IMPORTED_MODULE_7__","ColTitle","fieldName","earningsCounter","feesStart","feesEnd","earningsCurveStart","earningsCurveEnd","tokenAPY2","tokenAPR","allocationChartWidth","allocationChartHeight","resizeAllocationChart","aprChartEndTimestamp","aprChartStartTimestamp","aprChartData","newPoint","aprChartWidth","aprChartHeight","resizeAprChart","aprChartType","aprChartProps","firstTokenPrice","firstIdleBlock","performanceChartWidth","performanceChartHeight","resizePerformanceChart","apr_end_date","apr_start_date","apr_start_timestamp","apiResultsPerformanceChart","idleTokenPerformance","performanceChartData","performanceChartType","performanceChartProps","amountToMigrate","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","poolSize","earningsPercCurveDirection","earningsPercCurve","earningsPercDirection","oldAPY","tokenAPYNoGov","allocationChartRowElement","$allocationChartRowElement","css","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_9__","random","aprChartRowElement","$aprChartRowElement","lineWidth","defs","linearGradientDef","offset","react__WEBPACK_IMPORTED_MODULE_12___default","_CustomTooltip_CustomTooltip__WEBPACK_IMPORTED_MODULE_17__","protocolEarning","_CustomTooltip_CustomTooltipRow__WEBPACK_IMPORTED_MODULE_20__","PerformanceChartRowElement","$PerformanceChartRowElement","blocknumber","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_1__","fieldChanged","contractInitialized","rimble_ui__WEBPACK_IMPORTED_MODULE_21__","icon1","tooltipProps","icon2","strategyName","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_14__","react_countup__WEBPACK_IMPORTED_MODULE_11___default","_ref11","_VariationNumber_VariationNumber__WEBPACK_IMPORTED_MODULE_18__","earningsCurve","governanceTokenName","tooltipMode","buttonLabel","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_16__","_AllocationChart_AllocationChart__WEBPACK_IMPORTED_MODULE_19__","formattedValue","_isBigNumber"],"mappings":"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","file":"static/js/main.73fe62a1.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\n\nclass ChartCustomTooltipRow extends Component {\n\n  async componentWillMount(){\n    \n  }\n\n  async componentDidUpdate(prevProps,prevState){\n\n  }\n\n  render() {\n    return (\n      <Flex\n        mb={2}\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n      >\n        <Flex\n          pr={2}\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-start'}\n        > \n          {\n            this.props.color && \n            <Box\n              mr={2}\n              width={'10px'}\n              height={'10px'}\n              borderRadius={'50%'}\n              backgroundColor={this.props.color}\n            >\n            </Box>\n          }\n          <Text\n            fontSize={1}\n            fontWeight={2}\n            textAlign={'left'}\n            color={'dark-gray'}\n            style={{\n              textTransform:'capitalize'\n            }}\n          >\n            {this.props.label}\n          </Text>\n        </Flex>\n        <Flex\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-end'}\n        >\n          <Text\n            fontSize={1}\n            fontWeight={3}\n            color={'cellText'}\n            textAlign={'right'}\n            style={{\n              whiteSpace:'nowrap'\n            }}\n            dangerouslySetInnerHTML={{\n              __html: this.props.value\n            }}\n          >\n          </Text>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default ChartCustomTooltipRow;\n","import { Link } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass ExtLink extends Component {\n\n  render() {\n    return (\n      <Link\n        target={'_blank'}\n        rel={'nofollow noopener noreferrer'}\n        {...this.props}\n      >\n        {this.props.children}\n      </Link>\n    );\n  }\n}\n\nexport default ExtLink;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"PageNotFound_headerContainer__Ly5Tz\",\"headerBgFiller\":\"PageNotFound_headerBgFiller__1NzlO\",\"bgContainer\":\"PageNotFound_bgContainer__1Racj\",\"list\":\"PageNotFound_list__Cnz-b\",\"textContainer\":\"PageNotFound_textContainer__g_kTm\"};","import React, { Component } from 'react';\nimport { Text, Loader } from \"rimble-ui\";\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass ShortHash extends Component {\n\n  state = {\n    text:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  async loadData(){\n    const resolveAddress = this.props.resolveAddress !== false;\n    let text = this.functionsUtil.shortenHash(this.props.hash);\n    const ensName = resolveAddress ? await this.functionsUtil.getENSName(this.props.hash) : null;\n    // console.log('ShortHash',resolveAddress,this.props.hash,ensName);\n    if (ensName){\n      text = ensName;\n    }\n    this.setState({\n      text\n    });\n  }\n\n  render() {\n    const loader = (<Loader size=\"20px\" />);\n    return this.state.text ? <Text display={'inline'} {...this.props}>{this.state.text}</Text> : loader;\n  }\n}\n\nexport default ShortHash;","import React, { Component } from 'react';\nimport {\n  Flex, Box\n} from \"rimble-ui\";\nimport styles from './LoadingSpinner.module.scss';\n\nclass LoadingSpinner extends Component {\n  render() {\n    return (\n      <Flex\n        alignItems={'center'}\n        justifyContent={'center'}\n      >\n        <Box className={[styles[\"loading-dots\"]]}>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n        </Box>\n      </Flex>\n    );\n  }\n}\n\nexport default LoadingSpinner;\n","import React, { Component } from 'react';\nimport {\n  Flex,\n  Button\n} from \"rimble-ui\";\nimport LoadingSpinner from '../LoadingSpinner/LoadingSpinner.js';\n\nclass ButtonLoader extends Component {\n  render() {\n    return (\n       <Button\n        onClick={this.props.handleClick}\n         {...this.props.buttonProps}\n       >\n        <Flex flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n          <Flex width={1} display={ this.props.isLoading ? 'flex' : 'none' }>\n            <LoadingSpinner />\n          </Flex>\n          <Flex width={1} display={ this.props.isLoading ? 'none' : 'flex' }>\n            {this.props.buttonText}\n          </Flex>\n        </Flex>\n       </Button>\n    );\n  }\n}\n\nexport default ButtonLoader;\n","import theme from '../theme';\nimport React, { Component } from 'react';\nimport styles from './TransactionListFilters.module.scss';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TableCellHeader from '../TableCellHeader/TableCellHeader';\nimport { Flex, Text, Icon, Radio, Button, Link } from \"rimble-ui\";\n\nclass TransactionListFilters extends Component {\n\n  state = {\n    maxWidth:0.4,\n    minWidth:0.18,\n    maxHeight:425,\n    isOpened:false,\n    activeFilters:{\n      status:null,\n      assets:null,\n      actions:null\n    }\n  }\n\n  setFilter = (filter,value) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:value\n      }\n    }));\n  }\n\n  applyFilters = (toggle=true) => {\n    if (typeof this.props.applyFilters === 'function'){\n      this.props.applyFilters(this.state.activeFilters);\n    }\n    if (toggle){\n      this.toggleOpened();\n    }\n  }\n\n  resetFilter = (filter) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:null\n      }\n    }),() => {\n      this.applyFilters(false);\n    });\n  }\n\n  resetFilters = (toggle=true) => {\n    this.setState({\n      activeFilters:{\n        status:null,\n        assets:null,\n        actions:null\n      }\n    },() => {\n      if (typeof this.props.resetFilters === 'function'){\n        this.props.resetFilters();\n      }\n      if (toggle){\n        this.toggleOpened();\n      }\n    })\n  }\n\n  toggleOpened = () => {\n    this.setState((prevState) => ({\n      isOpened: !prevState.isOpened\n    }));\n  }\n\n  render() {\n    return (\n      <Flex\n        mb={3}\n        top={0}\n        width={1}\n        zIndex={1}\n        flexDirection={'column'}\n        alignItems={'flex-start'}\n        justifyContent={'center'}\n        position={['relative','absolute']}\n      >\n        <DashboardCard\n          cardProps={{\n            py:2,\n            px:3,\n            width:[1, this.state.isOpened ? this.state.maxWidth : this.state.minWidth ],\n            style:{\n              transition:'width 0.3s ease-in-out'\n            }\n          }}\n          isInteractive={ !this.state.isOpened }\n          handleClick={ !this.state.isOpened ? this.toggleOpened : null }\n        >\n          <Flex\n            width={1}\n            style={{\n              cursor:'pointer'\n            }}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'space-between'}\n            onClick={ this.state.isOpened ? this.toggleOpened : null }\n          >\n            <Text\n              fontSize={2}\n              fontWeight={500}\n              color={'copyColor'}\n            >\n              Filters\n            </Text>\n            <Icon\n              color={'copyColor'}\n              size={ this.props.isMobile ? '1.3em' : '1.5em'}\n              name={ this.state.isOpened ? 'Close' : 'Tune' }\n            />\n          </Flex>\n          <Flex\n            flexDirection={'column'}\n            style={{\n              overflow:'hidden',\n              transition:'max-height 0.3s ease-in-out',\n              maxHeight:this.state.isOpened ? this.state.maxHeight : 0\n            }}\n          >\n            <Flex\n              mt={2}\n              py={2}\n              width={1}\n              flexDirection={'row'}\n              borderTop={`1px solid ${theme.colors.divider}`}\n            >\n              {\n                Object.keys(this.props.filters).map((filterCategory) => {\n                  const filterValues = this.props.filters[filterCategory];\n                  return (\n                    <Flex\n                      flexDirection={'column'}\n                      key={`filter_${filterCategory}`}\n                      style={{\n                        flexBasis:'0',\n                        flex:'1 1 0px'\n                      }}\n                    >\n                      <TableCellHeader\n                        pb={2}\n                        fontWeight={3}\n                        fontSize={[0,2]}\n                        color={'cellText'}\n                      >\n                        {filterCategory.toUpperCase()}\n                      </TableCellHeader>\n                      {\n                        Object.keys(filterValues).map((filterValue) => {\n                          const filterLabel = filterValues[filterValue];\n                          const isChecked = this.state.activeFilters[filterCategory]===filterValue;\n                          return (\n                            <Radio\n                              my={2}\n                              fontSize={[0,2]}\n                              label={filterLabel}\n                              checked={isChecked}\n                              className={styles.radioBtn}\n                              key={`filter_${filterCategory}_${filterValue}`}\n                              onChange={ e => this.setFilter(filterCategory,filterValue) }\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                  );\n                })\n              }\n            </Flex>\n            <Flex\n              flexDirection={'row'}\n            >\n              <Button.Text\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.applyFilters}\n              >\n                Apply filters\n              </Button.Text>\n              <Button.Text\n                ml={3}\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.resetFilters}\n              >\n                Reset\n              </Button.Text>\n            </Flex>\n          </Flex>\n        </DashboardCard>\n        {\n          !this.state.isOpened && this.props.activeFilters && Object.values(this.props.activeFilters).filter( v => (v !== null) ).length>0 &&\n            <Flex\n              mt={3}\n              width={1}\n              flexDirection={['column','row']}\n              alignItems={['flex-start','flex-end']}\n              justifyContent={['flex-end','flex-start']}\n            >\n              {\n                Object.keys(this.props.activeFilters).map((filterName) => {\n                  const filterValue = this.props.activeFilters[filterName];\n                  if (filterValue !== null){\n                    const filterLabel = this.props.filters[filterName][filterValue];\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:[2,0],\n                          mr:[0,3],\n                          width:[1,this.state.minWidth]\n                        }}\n                        isInteractive={true}\n                        key={`filter_${filterName}`}\n                      >\n                        <Flex\n                          width={1}\n                          style={{\n                            cursor:'pointer'\n                          }}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'space-between'}\n                          onClick={e => this.resetFilter(filterName)}\n                        >\n                          <Text\n                            fontSize={2}\n                            fontWeight={500}\n                            color={'cellText'}\n                            style={{\n                              textTransform:'capitalize'\n                            }}\n                          >\n                            {filterLabel}\n                          </Text>\n                          <Icon\n                            name={'Close'}\n                            color={'cellText'}\n                            size={ this.props.isMobile ? '1.3em' : '1.5em'}\n                          />\n                        </Flex>\n                      </DashboardCard>\n                    );\n                  }\n                  return null;\n                })\n              }\n              <Link\n                mt={[2,0]}\n                fontSize={[3,2]}\n                fontWeight={[3]}\n                color={'dark-gray'}\n                hoverColor={'copyColor'}\n                textAlign={['center','left']}\n                onClick={ e => this.resetFilters(false) }\n              >\n                Clear all filters\n              </Link>\n            </Flex>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TransactionListFilters;","import React, { Component } from 'react';\n// import style from './TransactionsList.module.scss';\nimport TableRow from '../TableRow/TableRow';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Heading, Text, Link, Icon } from \"rimble-ui\";\nimport TransactionField from '../TransactionField/TransactionField';\nimport TransactionListFilters from '../TransactionListFilters/TransactionListFilters';\n\nclass TransactionsList extends Component {\n\n  state = {\n    page:1,\n    prevTxs:{},\n    txsPerPage:5,\n    loading:false,\n    totalTxs:null,\n    totalPages:null,\n    activeFilters:{\n      status:null,\n      assets:null,\n      actions:null,\n    },\n    filters:{\n      actions:{\n        deposit:'Deposit',\n        redeem:'Redeem',\n        send:'Send',\n        receive:'Receive',\n        migrate:'Migrate',\n        swap:'Swap-In',\n        swapout:'Swap-Out',\n        withdraw:'Withdraw',\n        // curvein:'CurveIn',\n        // curveout:'CurveOut',\n        // curvezapin:'CurveZapIn',\n        // curvezapout:'CurveZapOut',\n      },\n      status:{\n        completed:'Completed',\n        pending:'Pending',\n        failed:'Failed'\n      },\n      assets:{}\n    },\n    renderedTxs:null,\n    processedTxs:null,\n    lastBlockNumber:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  prevPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.max(1,this.state.page-1);\n    this.setState({\n      page\n    });\n  }\n\n  nextPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.min(this.state.totalPages,this.state.page+1);this.processTxs(page);\n    this.setState({\n      page\n    });\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadTxs();\n  }\n\n  applyFilters = activeFilters => {\n    this.setState({\n      activeFilters\n    },() => {\n      this.processTxs();\n    });\n  }\n\n  resetFilters = () => {\n    this.setState({\n      activeFilters:{\n        status:null,\n        assets:null,\n        actions:null,\n      }\n    },() => {\n      this.processTxs();\n    });\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n    const transactionsChanged = JSON.stringify(prevProps.transactions) !== JSON.stringify(this.props.transactions);\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n\n    if (tokenChanged || transactionsChanged){\n      this.setState({\n        page:1,\n        prevTxs:{}\n      },()=>{\n        this.loadTxs();\n      })\n      return false;\n    }\n    const pageChanged = prevState.page !== this.state.page;\n    if (pageChanged){\n      this.processTxs();\n    }\n  }\n\n  async loadTxs(count,endBlockNumber='latest'){\n    if (!this.props.account){\n      return false;\n    }\n\n    count = count ? count : 0;\n\n    this.setState({\n      loading:true\n    });\n\n    const firstBlockNumber = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n\n    // Take last block number, is null take first block number\n    let prevTxs = {...this.state.prevTxs};\n    let lastBlockNumber = Math.max(firstBlockNumber,this.state.lastBlockNumber);\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    const assets = {...this.state.filters.assets};\n\n    enabledTokens.forEach((token) => {\n      assets[token] = token;\n    });\n\n    let actions = {...this.state.filters.actions};\n    \n    const enabledActions = typeof this.props.enabledActions !== 'undefined' ? this.props.enabledActions : [];\n\n    if (enabledActions.length){\n      actions = {};\n      enabledActions.forEach( action => {\n        actions[action.toLowerCase()] = action;\n      });\n    }\n\n    const etherscanTxs = await this.functionsUtil.getEtherscanTxs(this.props.account,lastBlockNumber,'latest',enabledTokens);\n\n    // Merge new txs with previous ones\n    if (etherscanTxs && etherscanTxs.length){\n      etherscanTxs.forEach((tx) => {\n        if (tx.hashKey){\n          prevTxs[tx.hashKey] = tx;\n        } else {\n          prevTxs[`t${tx.timeStamp}`] = tx;\n        }\n      });\n    }\n\n    const lastTx = Object.values(prevTxs).pop();\n\n    // Update last block number\n    if (lastTx && lastTx.blockNumber && (!this.state.lastBlockNumber || lastTx.blockNumber>this.state.lastBlockNumber)){\n      lastBlockNumber = parseInt(lastTx.blockNumber)+1;\n    }\n\n    return this.setState( prevState => ({\n      prevTxs,\n      loading:false,\n      lastBlockNumber,\n      filters:{\n        ...prevState.filters,\n        assets,\n        actions\n      }\n    }), () => {\n      this.processTxs()\n    });\n  };\n\n  processTxs = (page=null) => {\n\n    page = page ? page : this.state.page;\n\n    const availableActions = Object.keys(this.state.filters.actions).map( action => (action.toLowerCase()) );\n\n    // Sort prevTxs by timeStamp\n    const txsIndexes = Object.values(this.state.prevTxs)\n                        .filter(tx => (!!parseFloat(tx.value))) // Filter txs with value\n                        .filter(tx => (\n                          (this.state.activeFilters.status === null || (tx.status && tx.status.toLowerCase() === this.state.activeFilters.status.toLowerCase())) && \n                          (this.state.activeFilters.assets === null || (tx.token && tx.token.toLowerCase() === this.state.activeFilters.assets.toLowerCase())) &&\n                          ( tx.action && availableActions.includes(tx.action.toLowerCase()) && (this.state.activeFilters.actions === null || (tx.action.toLowerCase() === this.state.activeFilters.actions.toLowerCase()) ))\n                        )) // Filter by activeFilters\n                        .sort((a,b) => (a.timeStamp > b.timeStamp) ? -1 : 1 );\n\n    // Calculate max number of pages\n    const totalTxs = txsIndexes.length;\n    const totalPages = Math.ceil(totalTxs/this.state.txsPerPage);\n\n    const processedTxs = [];\n\n    // console.log(this.state.prevTxs,txsIndexes);\n\n    txsIndexes.forEach((tx, i) => {\n      const selectedToken = tx.token;\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const decimals = Math.min(tokenConfig.decimals,8);\n      \n      const date = new Date(tx.timeStamp*1000);\n      const action = tx.action ? tx.action : this.functionsUtil.getTxAction(tx,tokenConfig);\n\n      const parsedValue = parseFloat(tx.tokenAmount);\n\n      const amount = parsedValue ? (this.props.isMobile ? parsedValue.toFixed(4) : parsedValue.toFixed(decimals)) : '-';\n      const momentDate = this.functionsUtil.strToMoment(date);\n\n      // Save new params\n      tx.status = tx.status ? tx.status : 'Completed';\n      tx.action = action;\n      tx.momentDate = momentDate;\n      tx.amount = amount;\n\n      if (i>=((page-1)*this.state.txsPerPage) && i<((page-1)*this.state.txsPerPage)+this.state.txsPerPage) {\n        processedTxs.push(tx);\n      }\n    });\n\n    // console.log('processedTxs',this.state.page,txsIndexes,processedTxs);\n\n    const loading = false;\n  \n    this.setState({\n      loading,\n      totalTxs,\n      totalPages,\n      processedTxs\n    });\n  }\n\n  render() {\n\n    const hasActiveFilters = Object.values(this.state.activeFilters).filter( v => (v !== null) ).length>0;\n\n    // console.log('processedTxs',this.state.processedTxs);\n    const processedTxs = this.state.processedTxs ? Object.values(this.state.processedTxs) : null;\n\n    return (\n      <Flex flexDirection={'column'} width={1} m={'0 auto'}>\n        {\n          this.state.loading ? (\n            <FlexLoader\n              flexProps={{\n                flexDirection:'row',\n                minHeight:this.props.height\n              }}\n              loaderProps={{\n                size:'30px'\n              }}\n              textProps={{\n                ml:2\n              }}\n              text={'Loading transactions...'}\n            />\n          ) : (\n            <Flex\n              width={1}\n              position={'relative'}\n              flexDirection={'column'}\n              id={'transactions-list-container'}\n              pt={[0, hasActiveFilters ? '116px' : 5]}\n            >\n              <TransactionListFilters\n                {...this.props}\n                filters={this.state.filters}\n                activeFilters={this.state.activeFilters}\n                resetFilters={this.resetFilters.bind(this)}\n                applyFilters={this.applyFilters.bind(this)}\n              />\n              {\n                processedTxs && processedTxs.length ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <TableHeader\n                      cols={this.props.cols}\n                      isMobile={this.props.isMobile}\n                    />\n                    <Flex\n                      id={'transactions-list'}\n                      flexDirection={'column'}\n                    >\n                      {\n                        processedTxs.map( (tx,index) => {\n                          const txHash = tx.hash;\n                          const txHashKey = tx.hashKey;\n                          const handleClick = (e) => {\n                            return (txHash ? window.open(this.functionsUtil.getEtherscanTransactionUrl(txHash)) : null);\n                          };\n\n                          return (\n                            <TableRow\n                              {...this.props}\n                              rowProps={{\n                                isInteractive:true\n                              }}\n                              hash={txHash}\n                              transaction={tx}\n                              key={`tx-${index}`}\n                              handleClick={handleClick}\n                              rowId={`tx-col-${txHashKey}`}\n                              cardId={`tx-card-${txHashKey}`}\n                              fieldComponent={TransactionField}\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                    <Flex\n                      height={'50px'}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'flex-end'}\n                      id={'transactions-list-pagination'}\n                    >\n                      <Flex mr={3}>\n                        <Link mr={1} onClick={ e => this.prevPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowLeft'}\n                            size={'2em'}\n                            color={ this.state.page>1 ? 'arrowActive' : 'arrowInactive' }\n                          />\n                        </Link>\n                        <Link onClick={ e => this.nextPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowRight'}\n                            size={'2em'}\n                            color={ this.state.page<this.state.totalPages ? 'arrowActive' : 'arrowInactive' }\n                          />\n                        </Link>\n                      </Flex>\n                      <Flex alignItems={'center'}>\n                        <Text \n                          fontSize={1}\n                          fontWeight={3}\n                          color={'cellText'}\n                        >\n                          Page {this.state.page} of {this.state.totalPages}\n                        </Text>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Heading.h3 textAlign={'center'} fontFamily={'sansSerif'} fontWeight={2} fontSize={[2]} color={'dark-gray'}>\n                    There are no transactions\n                  </Heading.h3>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TransactionsList;\n","import { Button } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass RoundButton extends Component {\n  render() {\n    const buttonProps = Object.assign({\n      width:1,\n      fontSize:3,\n      fontWeight:3,\n      height:'45px',\n      boxShadow:null,\n      borderRadius:4,\n      mainColor:'blue'\n    },this.props.buttonProps);\n\n    return (\n       <Button\n        {...buttonProps}\n        onClick={this.props.handleClick}\n       >\n        {this.props.children}\n       </Button>\n    );\n  }\n}\n\nexport default RoundButton;\n","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass SmartNumber extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  render() {\n    let formattedNumber = '-';\n    const number = typeof this.props.number !== 'undefined' && !isNaN(this.props.number) && this.props.number !== false && this.props.number !== null ? this.props.number : null;\n\n    if (number){\n      switch (this.props.type){\n        case 'money':\n          formattedNumber = this.functionsUtil.formatMoney(number,this.props.precision);\n        break;\n        default:\n          formattedNumber = this.functionsUtil.abbreviateNumber(number,this.props.decimals,this.props.maxPrecision,this.props.minPrecision);\n        break;\n      }\n    } else {\n      formattedNumber = '-';\n    }\n\n    const flexProps = {\n      width:1,\n      alignItems:'center',\n      flexDirection:'row',\n      justifyContent:'center'\n    };\n\n    // Replace props\n    if (this.props.flexProps && Object.keys(this.props.flexProps).length){\n      Object.keys(this.props.flexProps).forEach(p => {\n        flexProps[p] = this.props.flexProps[p];\n      });\n    }\n\n    const showUnit = formattedNumber !== '-';\n    const unitPos = this.props.unitPos ? this.props.unitPos : 'right';\n\n    return (\n      <Flex\n        {...flexProps}\n      >\n        {\n          this.props.unit && unitPos === 'left' && showUnit &&\n            <Text {...this.props.unitProps}>{this.props.unit}</Text>\n        }\n        <Text {...this.props}>{formattedNumber}</Text>\n        {\n          this.props.unit && unitPos === 'right' && showUnit &&\n            <Text {...this.props.unitProps}>{this.props.unit}</Text>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default SmartNumber;\n","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass CustomTooltip extends Component {\n\n  render() {\n    return (\n      <DashboardCard\n        key={this.props.point.id}\n        cardProps={{\n          py:2,\n          px:3,\n          width:1,\n          left: this.props.point.data.itemPos>50 ? '-110%' : '0'\n        }}\n      >\n        <Flex\n          width={1}\n          flexDirection={'column'}\n        >\n          {\n            this.props.point.data.xFormatted && \n              <Text\n                mb={2}\n                fontSize={1}\n                fontWeight={3}\n                color={'cellText'}\n                textAlign={'left'}\n              >\n                {this.props.point.data.xFormatted}\n              </Text>\n          }\n          {this.props.children}\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default CustomTooltip;","import { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport globalConfigs from '../configs/globalConfigs';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass AllocationChart extends Component {\n  state = {\n    chartData:null,\n    chartProps:null,\n    selectedSlice:null,\n    totalAllocation:null,\n    protocolsAllocations:null,\n    protocolsAllocationsPerc:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    if (tokenChanged){\n      this.setStateSafe({\n        chartData:null,\n        chartProps:null,\n        selectedSlice:null,\n        totalAllocation:null,\n        protocolsAllocations:null,\n        protocolsAllocationsPerc:null\n      },() => {\n        this.loadData();\n      });\n    } else if (prevProps.isMobile !== this.props.isMobile){\n      this.loadData()\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async loadData(){\n    const {\n      totalAllocation,\n      protocolsAllocations,\n      protocolsAllocationsPerc\n    } = await this.functionsUtil.getTokenAllocation(this.props.tokenConfig);\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth: 0,\n      cornerRadius:0,\n      motionDamping:15,\n      innerRadius: 0.65,\n      motionStiffness:90,\n      colors:d => d.color,\n      onMouseEnter:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:data\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:null\n        });\n      },\n      tooltipFormat: v => v+'%',\n      sliceLabel: d => d.value+'%',\n      radialLabel: d => {\n        return null;\n      },\n      theme:{\n        tooltip: {\n          container: this.props.inline ? {\n            background: this.props.theme.colors.cardBg\n          } : {\n            display: 'none',\n          }\n        },\n        labels:{\n          text:{\n            fontWeight:600,\n            fontSize:this.props.isMobile ? 13 : 15,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      enableRadialLabels:false,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      enableSlicesLabels: !this.props.inline,\n      radialLabelsLinkColor:{ from: 'color' },\n      borderColor:{ from: 'color', modifiers: [ [ 'darker', 0.2 ] ] },\n      margin: this.props.inline ? {top:0,right:15,bottom:0,left:1} : (this.props.isMobile ? { top: 10, right: 15, bottom: 0, left: 15 } : { top: 10, right: 35, bottom: 0, left: 35 }),\n    };\n\n    const chartData = [];\n\n    this.props.tokenConfig.protocols.forEach((protocolInfo,i)=>{\n      const protocolName = protocolInfo.name;\n      const protocolAddr = protocolInfo.address.toLowerCase();\n      if (protocolsAllocationsPerc[protocolAddr]){\n        const protocolAllocationPercParsed = parseFloat(protocolsAllocationsPerc[protocolAddr].times(100).toFixed(2));\n        chartData.push({\n          id:protocolAddr,\n          name:protocolName,\n          value:protocolAllocationPercParsed,\n          color:'hsl('+globalConfigs.stats.protocols[protocolName].color.hsl.join(',')+')',\n          label: globalConfigs.stats.protocols[protocolName].label ? globalConfigs.stats.protocols[protocolName].label : this.functionsUtil.capitalize(protocolName)\n        });\n      }\n    });\n\n    this.setStateSafe({\n      chartData,\n      chartProps,\n      totalAllocation,\n      protocolsAllocations,\n      protocolsAllocationsPerc\n    });\n  }\n\n  render() {\n    \n    const selectedSlice = this.state.selectedSlice !== null && this.state.protocolsAllocations[this.state.selectedSlice.id] ? this.state.protocolsAllocations[this.state.selectedSlice.id] : false;\n    const protocolIcon = this.state.selectedSlice !== null ? (globalConfigs.stats.protocols[this.state.selectedSlice.name] && globalConfigs.stats.protocols[this.state.selectedSlice.name].icon ? globalConfigs.stats.protocols[this.state.selectedSlice.name].icon : `${this.state.selectedSlice.name}.svg`) : null;\n\n    return (\n      <Flex\n        width={1}\n        position={'relative'}\n      >\n        {\n          this.state.totalAllocation && !this.props.inline &&\n            <Flex\n              zIndex={0}\n              top={['23%','25%']}\n              left={['20%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              position={'absolute'}\n              width={['60%','46%']}\n              height={['53%','46%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                selectedSlice ? (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={`/images/protocols/${protocolIcon}`}\n                    />\n                    <SmartNumber\n                      fontSize={[3,4]}\n                      decimals={3}\n                      fontWeight={4}\n                      maxPrecision={5}\n                      number={selectedSlice}\n                    />\n                    <Text\n                      fontSize={[1,2]}\n                      fontWeight={3}\n                      color={'cellTitle'}\n                    >\n                      Funds in {this.state.selectedSlice.label}\n                    </Text>\n                  </Flex>\n                ) : (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={`/images/idle-mark.png`}\n                    />\n                    <SmartNumber\n                      unitProps={{\n                        ml:2,\n                        fontWeight:3,\n                        fontSize:[3,4]\n                      }}\n                      decimals={3}\n                      fontWeight={4}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      number={this.state.totalAllocation}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      Total funds\n                    </Text>\n                  </Flex>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          showLoader={true}\n          {...this.props}\n          {...this.state.chartProps}\n          data={this.state.chartData}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default AllocationChart;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\n\nclass CustomTooltipRow extends Component {\n\n  render() {\n    return (\n      <Flex\n        mb={2}\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n      >\n        <Flex\n          pr={2}\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-start'}\n        > \n          {\n            this.props.color && \n            <Box\n              mr={2}\n              width={'10px'}\n              height={'10px'}\n              borderRadius={'50%'}\n              backgroundColor={this.props.color}\n            >\n            </Box>\n          }\n          <Text\n            fontSize={1}\n            fontWeight={2}\n            textAlign={'left'}\n            color={'dark-gray'}\n            style={{\n              whiteSpace:'nowrap',\n              textTransform:'capitalize'\n            }}\n          >\n            {this.props.label}\n          </Text>\n        </Flex>\n        <Flex\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-end'}\n        >\n          <Text\n            fontSize={1}\n            fontWeight={3}\n            color={'cellText'}\n            textAlign={'right'}\n            style={{\n              whiteSpace:'nowrap'\n            }}\n            dangerouslySetInnerHTML={{\n              __html: this.props.value\n            }}\n          >\n          </Text>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default CustomTooltipRow;","import { Line } from '@nivo/line';\nimport React, { Component } from 'react';\n// import { linearGradientDef } from '@nivo/core'\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport ChartCustomTooltip from '../ChartCustomTooltip/ChartCustomTooltip';\nimport ChartCustomTooltipRow from '../ChartCustomTooltipRow/ChartCustomTooltipRow';\n\nclass PortfolioEquity extends Component {\n  state = {\n    startDate:null,\n    chartData:null,\n    chartProps:null,\n    chartwidth:null,\n    chartHeight:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadChartData();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const quickDateSelectionChanged = prevProps.quickDateSelection !== this.props.quickDateSelection;\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n    if (tokenChanged || quickDateSelectionChanged){\n      this.setState({\n        chartData:null\n      },() => {\n        this.componentDidMount();\n      });\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    if (mobileChanged || themeModeChanged){\n      this.loadChartData();\n    }\n  }\n\n  async loadChartData() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    const etherscanTxs = await this.functionsUtil.getEtherscanTxs(this.props.account,0,'latest',enabledTokens);\n\n    const chartData = [];\n    let tokensBalance = {};\n    let firstTxTimestamp = null;\n\n    await this.functionsUtil.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      tokensBalance[selectedToken] = [];\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        let amountLent = this.functionsUtil.BNify(0);\n\n        filteredTxs.forEach((tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending')){\n            return false;\n          }\n          \n          firstTxTimestamp = firstTxTimestamp ? Math.min(firstTxTimestamp,parseInt(tx.timeStamp)) : parseInt(tx.timeStamp);\n\n          const tokenAmount = this.functionsUtil.BNify(tx.tokenAmount);\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n            case 'CurveOut':\n              amountLent = amountLent.plus(tokenAmount);\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.functionsUtil.BNify(0);\n          }\n\n          const balance = amountLent;\n          const action = tx.action;\n          const timeStamp = parseInt(tx.timeStamp);\n          const tokenPrice = this.functionsUtil.BNify(tx.tokenPrice);\n          const idleTokens = this.functionsUtil.BNify(tx.idleTokens);\n\n          if (!tokenPrice.isNaN() && !tokenPrice.isNaN()){\n            tokensBalance[selectedToken].push({\n              action,\n              balance,\n              timeStamp,\n              tokenPrice,\n              idleTokens,\n              tokenAmount\n            });\n          }\n        });\n      }\n    });\n\n    // Calculate Start Date\n    let startDate = null;\n    const currentDate = this.functionsUtil.strToMoment(new Date());\n\n    switch (this.props.quickDateSelection){\n      case 'week':\n        startDate = currentDate.clone().subtract(1,'week');\n      break;\n      case 'month':\n        startDate = currentDate.clone().subtract(1,'month');\n      break;\n      case 'month3':\n        startDate = currentDate.clone().subtract(3,'month');\n      break;\n      case 'month6':\n        startDate = currentDate.clone().subtract(6,'month');\n      break;\n      default:\n        startDate = null;\n      break;\n    }\n\n    const days = {};\n    let prevBalances = {};\n    let prevTimestamp = null;\n    let minChartValue = null;\n    let maxChartValue = null;\n    let aggregatedBalance = null;\n    const aggregatedBalancesKeys = {};\n    const tokensBalancesPerDate = {};\n    const currTimestamp = parseInt(new Date().getTime()/1000)+86400;\n\n    const tokensData = {};\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      tokensData[token] = await this.functionsUtil.getTokenApiData(this.props.availableTokens[token].address,isRisk,firstTxTimestamp,null,false,3600);\n    });\n\n    // debugger;\n\n    const idleTokenBalance = {};\n\n    for (let timeStamp=firstTxTimestamp;timeStamp<=currTimestamp;timeStamp+=this.props.frequencySeconds){\n\n      const foundBalances = {};\n      const tokensBalances = {};\n      timeStamp = Math.min(currTimestamp,timeStamp);\n      aggregatedBalance = this.functionsUtil.BNify(0);\n\n      // await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      // eslint-disable-next-line\n      Object.keys(tokensBalance).forEach(token => {\n\n        let lastTokenData = null;\n        const lastTokenDataUnfiltered = Object.values(tokensData[token]).pop();\n        const filteredTokenData = tokensData[token].filter(tx => (tx.timestamp>=prevTimestamp && tx.timestamp<=timeStamp));\n        if (filteredTokenData && filteredTokenData.length){\n          lastTokenData = filteredTokenData.pop();\n        }\n\n        if (!idleTokenBalance[token]){\n          idleTokenBalance[token] = this.functionsUtil.BNify(0);\n        }\n\n        const tokenConfig = this.props.availableTokens[token];\n        const tokenDecimals = tokenConfig.decimals;\n        let filteredBalances = tokensBalance[token].filter(tx => (tx.timeStamp<=timeStamp && (!prevTimestamp || tx.timeStamp>prevTimestamp)));\n        \n        if (!filteredBalances.length){\n          if (prevBalances && prevBalances[token]){\n            filteredBalances = prevBalances[token];\n            const lastFilteredTx = Object.assign([],filteredBalances).pop();\n            const currentBalance = parseFloat(lastFilteredTx.balance);\n\n            // Take idleToken price from API and calculate new balance\n            if (currentBalance>0 && timeStamp>firstTxTimestamp && lastTokenData){\n              const idleTokens = idleTokenBalance[token];\n              const idlePrice = this.functionsUtil.fixTokenDecimals(lastTokenData.idlePrice,tokenDecimals);\n              let newBalance = idleTokens.times(idlePrice);\n\n              // Set new balance and tokenPrice\n              lastFilteredTx.balance = newBalance;\n              lastFilteredTx.tokenPrice = idlePrice;\n              filteredBalances = [lastFilteredTx];\n            }\n          } else {\n            filteredBalances = [{\n              balance:this.functionsUtil.BNify(0),\n              tokenPrice:this.functionsUtil.BNify(0)\n            }];\n          }\n        } else {\n          filteredBalances.forEach(tx => {\n            switch (tx.action){\n              case 'Swap':\n              case 'Deposit':\n              case 'Migrate':\n              case 'Receive':\n              case 'CurveOut':\n                idleTokenBalance[token] = idleTokenBalance[token].plus(tx.idleTokens);\n              break;\n              default:\n                idleTokenBalance[token] = idleTokenBalance[token].minus(tx.idleTokens);\n                if (idleTokenBalance[token].lt(0)){\n                  idleTokenBalance[token] = this.functionsUtil.BNify(0);\n                }\n              break;\n            }\n          });\n        }\n\n        const lastTx = Object.assign([],filteredBalances).pop();\n        // let lastTxBalance = this.functionsUtil.BNify(lastTx.balance);\n        let lastTxBalance = idleTokenBalance[token].times(lastTx.tokenPrice);\n\n        if (lastTxBalance.gt(0)){\n          // Convert token balance to USD\n          let tokenUsdConversionRate = null;\n          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'conversionRateField']);\n          if (!this.props.chartToken && conversionRateField){\n            const conversionRate = lastTokenData && lastTokenData[conversionRateField] ? lastTokenData[conversionRateField] : (lastTokenDataUnfiltered && lastTokenDataUnfiltered[conversionRateField] ? lastTokenDataUnfiltered[conversionRateField] : null);\n            if (conversionRate){\n              tokenUsdConversionRate = this.functionsUtil.fixTokenDecimals(conversionRate,18);\n              if (tokenUsdConversionRate.gt(0)){\n                lastTxBalance = lastTxBalance.times(tokenUsdConversionRate);\n              }\n            }\n          }\n          \n          tokensBalances[token] = lastTxBalance;\n\n          aggregatedBalance = aggregatedBalance.plus(lastTxBalance);\n        }\n\n        foundBalances[token] = filteredBalances;\n      });\n\n      let momentDate = this.functionsUtil.strToMoment(timeStamp*1000);\n\n      if (startDate === null || (momentDate.isSameOrAfter(startDate) && momentDate.isSameOrBefore(new Date(),'day'))){\n        \n        // if (momentDate.isAfter(new Date(),'day')){\n        //   momentDate = this.functionsUtil.strToMoment(new Date());\n        // }\n\n        // Force date to midnight\n        const formattedDate = momentDate.format('YYYY/MM/DD 00:00');\n\n        // Save days for axisBottom format\n        days[momentDate.format('YYYY/MM/DD')] = 1;\n\n        aggregatedBalance = parseFloat(parseFloat(aggregatedBalance.toFixed(6)));\n\n        tokensBalancesPerDate[formattedDate] = tokensBalances;\n        aggregatedBalancesKeys[formattedDate] = aggregatedBalance;\n\n        // console.log(formattedDate,tokensBalances);\n\n        minChartValue = minChartValue === null ? aggregatedBalance : Math.min(minChartValue,aggregatedBalance);\n        maxChartValue = maxChartValue === null ? aggregatedBalance : Math.max(maxChartValue,aggregatedBalance);\n      }\n\n      prevTimestamp = timeStamp;\n      prevBalances = foundBalances;\n    }\n\n    const aggregatedBalances = Object.keys(aggregatedBalancesKeys).map(date => ({\n      x:date,\n      y:aggregatedBalancesKeys[date],\n      balances:tokensBalancesPerDate[date]\n    }));\n\n    let itemIndex = 0;\n    aggregatedBalances.forEach( (item,index) => {\n      const itemPos = Math.floor(itemIndex/aggregatedBalances.length*100);\n      aggregatedBalances[index].itemPos = itemPos;\n      itemIndex++;\n    });\n\n    /*\n    aggregatedBalances.push({\n      x:momentDate.format('YYYY/MM/DD HH:mm'),\n      y:aggregatedBalance\n    });\n    */\n\n    // Add day before to start with zero balance\n    /*\n    const firstTxMomentDate = this.functionsUtil.strToMoment(firstTxTimestamp*1000);\n    if ((startDate === null || startDate.isSameOrBefore(firstTxMomentDate)) && aggregatedBalances.length){\n      const firstItem = aggregatedBalances[0];\n      const firstDate = this.functionsUtil.strToMoment(firstItem.x,'YYYY/MM/DD HH:mm');\n      firstDate.subtract(1,'day');\n      aggregatedBalances.unshift({\n        x:firstDate.format('YYYY/MM/DD HH:mm'),\n        y:0\n      });\n    }\n    */\n\n    const chartToken = this.props.chartToken ? this.props.chartToken.toUpperCase() : 'USD';\n\n    // Add token Data\n    chartData.push({\n      id:chartToken,\n      color: 'hsl('+ this.functionsUtil.getGlobalConfig(['stats','tokens',chartToken,'color','hsl']).join(',')+')',\n      data:aggregatedBalances\n    });\n\n    let yFormatDecimals = 2;\n    if (maxChartValue-minChartValue<1){\n      yFormatDecimals = 4;\n    }\n\n    if (maxChartValue === minChartValue){\n      minChartValue = Math.max(0,maxChartValue-1);\n    }\n\n    const maxGridLines = 5;\n    const gridYStep = (maxChartValue-minChartValue)/maxGridLines;\n    const gridYValues = [];\n    for (let i=0;i<=maxGridLines;i++){\n      const gridYValue = parseFloat(parseFloat(minChartValue+(i*gridYStep)).toFixed(6));\n      gridYValues.push(gridYValue);\n    }\n    \n    const axisBottomMaxValues = 10;\n    const daysCount = Object.values(days).length;    \n    const daysFrequency = Math.max(1,Math.ceil(daysCount/axisBottomMaxValues));\n\n    const chartProps = {\n      xScale:{\n        type: 'time',\n        format: '%Y/%m/%d %H:%M',\n      },\n      yScale:{\n        type: 'linear',\n        stacked: false,\n        min: minChartValue,\n        max: maxChartValue\n      },\n      xFormat:'time:%b %d %Y',\n      yFormat:value => this.functionsUtil.formatMoney(value,yFormatDecimals),\n      axisBottom: this.props.isMobile ? null : {\n        legend: '',\n        tickSize:0,\n        format: '%b %d',\n        tickPadding: 15,\n        orient: 'bottom',\n        legendOffset: 36,\n        legendPosition: 'middle',\n        tickValues:'every '+daysFrequency+' days'\n      },\n      gridYValues,\n      pointSize:0,\n      useMesh:true,\n      axisLeft: this.props.isMobile ? null : {\n        legend: '',\n        tickSize: 0,\n        orient: 'left',\n        tickPadding: 10,\n        tickRotation: 0,\n        legendOffset: -70,\n        tickValues:gridYValues,\n        legendPosition: 'middle',\n        format: v => this.functionsUtil.abbreviateNumber(v,2),\n      },\n      animate:true,\n      pointLabel:'y',\n      enableArea:true,\n      enableSlices:'x',\n      enableGridY:true,\n      curve:'monotoneX',\n      enableGridX:false,\n      pointBorderWidth:1,\n      colors:d => d.color,\n      pointLabelYOffset:-12,\n      areaBaselineValue:minChartValue,\n      pointColor:{ from: 'color', modifiers: []},\n      areaOpacity:this.props.themeMode === 'light' ? 0.1 : 0.5,\n      theme:{\n        axis: {\n          ticks: {\n            text: {\n              fontSize:12,\n              fontWeight:600,\n              fill:this.props.theme.colors.legend,\n              fontFamily:this.props.theme.fonts.sansSerif\n            }\n          }\n        },\n        grid: {\n          line: {\n            stroke: this.props.theme.colors.lineChartStroke, strokeDasharray: '8 4'\n          }\n        },\n      },\n      /*\n      defs:[\n        linearGradientDef('gradientA', [\n          { offset: 0, color: 'inherit' },\n          { offset: 100, color: 'inherit', opacity: 0 },\n        ]),\n      ],\n      fill:[{ match: '*', id: 'gradientA' }],\n      */\n      margin: this.props.isMobile ? { top: 20, right: 25, bottom: 25, left: 20 } : { top: 30, right: 50, bottom: 45, left: 60 },\n      sliceTooltip:(slideData) => {\n        const { slice } = slideData;\n        const point = slice.points[0];\n        return (\n          <ChartCustomTooltip\n            point={point}\n          >\n            <ChartCustomTooltipRow\n              color={point.color}\n              label={point.serieId}\n              value={`$ ${point.data.yFormatted}`}\n            />\n            {\n            (typeof point.data.balances === 'object' && Object.keys(point.data.balances).length>0) &&\n              Object.keys(point.data.balances).map(token => {\n                if (token === point.serieId){\n                  return null;\n                }\n                const color = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'color','hex']);\n                const balance = point.data.balances[token];\n                let formattedBalance = this.functionsUtil.formatMoney(balance,2);\n                if (parseFloat(balance)>=0.01){\n                  return (\n                    <ChartCustomTooltipRow\n                      label={token}\n                      color={color}\n                      key={`row_${token}`}\n                      value={`$ ${formattedBalance}`}\n                    />\n                  );\n                }\n                return null;\n              })\n            }\n          </ChartCustomTooltip>\n        );\n      }\n    };\n\n    this.setState({\n      chartData,\n      chartProps\n    });\n  }\n\n  render() {\n    return (\n      <GenericChart\n        type={Line}\n        showLoader={true}\n        {...this.state.chartProps}\n        data={this.state.chartData}\n        parentId={this.props.parentId}\n        height={this.props.chartHeight}\n        parentIdHeight={this.props.parentIdHeight}\n      />\n    );\n  }\n}\n\nexport default PortfolioEquity;","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass ChartCustomTooltip extends Component {\n\n  async componentWillMount(){\n\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    \n  }\n\n  render() {\n    return (\n      <DashboardCard\n        key={this.props.point.id}\n        cardProps={{\n          py:2,\n          px:3,\n          width:1,\n          left: this.props.point.data.itemPos && this.props.point.data.itemPos>50 ? '-110%' : '0'\n        }}\n      >\n        <Flex\n          width={1}\n          flexDirection={'column'}\n        >\n          {\n            this.props.point.data.xFormatted && \n              <Text\n                mb={2}\n                fontSize={1}\n                fontWeight={3}\n                color={'cellText'}\n                textAlign={'left'}\n              >\n                {this.props.point.data.xFormatted}\n              </Text>\n          }\n          {this.props.children}\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default ChartCustomTooltip;\n","import axios from 'axios';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Progress, Icon, Link } from 'rimble-ui'\n\nclass TxProgressBar extends Component {\n  state = {\n    error:null,\n    ended:false,\n    percentage:0,\n    processing:true,\n    txTimestamp:null,\n    initialized:false,\n    estimatedTime:null,\n    remainingTime:null\n  };\n\n  componentUnmounted = false;\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n\n    this.componentUnmounted = true;\n\n    var id = window.setTimeout(function() {}, 0);\n\n    while (id--) {\n        window.clearTimeout(id); // will do nothing if no timeout with id is present\n    }\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps){\n    this.loadUtils();\n\n    if (!this.state.initialized && this.props.web3){\n      this.initProgressBar();\n    }\n  }\n\n  componentDidMount = async () => {\n    this.initProgressBar();\n  }\n\n  getTransaction = async () => {\n    const transaction = await (new Promise( async (resolve, reject) => {\n      this.functionsUtil.customLog('getTransaction',this.props.hash);\n      this.props.web3.eth.getTransaction(this.props.hash,(err,transaction) => {\n        resolve(transaction);\n      });\n    }));\n\n    const newState = {};\n    if (transaction){\n      newState.transaction = transaction;\n    } else {\n      newState.processing = false;\n      newState.error = 'Unable to find the transaction';\n    }\n\n    this.setState(newState);\n    return transaction;\n  }\n\n  /*\n  Taken from https://ethgasstation.info/calculatorTxV.php\n  */\n  _estimateWait (prediction, gasoffered) {\n    var minedProb;\n    var expectedWait;\n    var sum1, sum2;\n    var intercept = 4.2794;\n    var hpa = .0329;\n    var hgo = -3.2836;\n    var tx = -0.0004;\n    var intercept2 = 7.5375;\n    var hpa_coef = -0.0801;\n    var txatabove_coef= 0.0003;\n    var high_gas_coef = .3532;\n\n    if (gasoffered > 1000000) {    \n      sum1 = intercept + (prediction['hashpower_accepting'] * hpa) + hgo  + (prediction['tx_atabove'] * tx);\n      sum2 = intercept2 + (prediction['hashpower_accepting'] * hpa_coef) + (prediction['tx_atabove'] * txatabove_coef) + high_gas_coef;\n    } else {\n      sum1 = intercept + (prediction['hashpower_accepting'] * hpa) + (prediction['tx_atabove'] * tx);\n      sum2 = intercept2 + (prediction['tx_atabove'] * txatabove_coef) + (prediction['hashpower_accepting'] * hpa_coef);\n    }\n\n    var factor = Math.exp(- 1 * sum1);\n    const prob = 1 / (1 + factor);\n\n    if (prob > .95) {\n      minedProb = 'Very High';\n    } else if (prob > .9 && prob <= .95) {\n      minedProb = 'Medium'\n    } else {\n      minedProb = 'Low';\n    }\n\n    expectedWait = Math.exp(sum2);\n    if (expectedWait < 2) {\n      expectedWait = 2;\n    }\n\n    if (gasoffered > 2000000) {\n      expectedWait += 100;\n    }\n\n    return [expectedWait, prediction['hashpower_accepting'], prediction['tx_atabove'], minedProb];\n  }\n\n  getBlockTime = async () => {\n    const pt = await axios.get('https://ethgasstation.info/json/ethgasAPI.json');\n    if (pt){\n      const blockTime = pt.data;\n      this.setState({\n        blockTime\n      });\n      return blockTime;\n    }\n    return null;\n  }\n\n  getPredictionTable = async () => {\n    const pt = await axios.get('https://ethgasstation.info/json/predictTable.json');\n    if (pt){\n      const predictTable = pt.data;\n      this.setState({\n        predictTable\n      });\n      return predictTable;\n    }\n    return null;\n  }\n\n  getTxEstimatedTime = (gasPrice) => {\n    let prediction = null;\n    if (this.state.predictTable){\n      this.state.predictTable.forEach((p,i) => {\n        if (!prediction && parseFloat(p.gasprice)>=parseFloat(gasPrice)){\n          prediction = p;\n          return true;\n        }\n      });\n    }\n\n    if (this.state.blockTime && prediction){\n      const pdValues = this._estimateWait(prediction,this.state.transaction.gas);\n      const blocksWait = pdValues[0];\n      const blockInterval = this.state.blockTime.block_time;\n      let txMeanSecs = blocksWait * blockInterval;\n      txMeanSecs = parseInt(txMeanSecs.toFixed(0));\n      this.functionsUtil.customLog('getTxEstimatedTime',prediction,this.state.transaction.gas,pdValues,txMeanSecs);\n      return txMeanSecs; // Customized\n    }\n\n    return null;\n  }\n\n  calculateRemainingTime = async () => {\n    let remainingTime = 0;\n    let estimatedTime = 0;\n\n    if (!this.state.transaction || this.componentUnmounted){\n      return false;\n    }\n\n    if (!this.state.transaction.blockNumber){\n      const gasPrice = parseFloat(this.functionsUtil.BNify(this.state.transaction.gasPrice).div(1e9).toString());\n      remainingTime = this.getTxEstimatedTime(gasPrice);\n    }\n\n    estimatedTime = remainingTime ? remainingTime : 0;\n\n    if (this.state.txTimestamp){\n      const currTimestamp = new Date().getTime();\n      const secondsPassed = parseInt((currTimestamp-parseInt(this.state.txTimestamp))/1000);\n      \n      // Calculate new remaining time\n      remainingTime -= secondsPassed;\n      remainingTime = Math.max(remainingTime,0);\n\n      this.functionsUtil.customLog('Estimated time',estimatedTime,'secondsPassed',secondsPassed,'New remaining time',remainingTime);\n    }\n\n    const timePassed = estimatedTime-remainingTime;\n    const percentage = estimatedTime>0 ? parseFloat(timePassed/estimatedTime) : 1;\n\n    this.setState({\n      estimatedTime,\n      remainingTime,\n      percentage\n    });\n\n    setTimeout(()=>{this.updateProgressBar()},1000);\n  }\n\n  updateProgressBar = () => {\n\n    if (this.componentUnmounted){\n      return false;\n    }\n\n    let remainingTime = this.state.remainingTime;\n    if (remainingTime){\n      remainingTime--;\n      if (!remainingTime){\n        this.setState({\n          percentage:1,\n          ended:true\n        });\n      } else {\n        const timePassed = this.state.estimatedTime-remainingTime;\n        const percentage = parseFloat(timePassed/this.state.estimatedTime);\n        this.setState({\n          percentage,\n          remainingTime\n        });\n        setTimeout(()=>{this.updateProgressBar()},1000);\n      }\n    } else {\n      this.setState({\n        percentage:1,\n        ended:true\n      });\n    }\n  }\n\n  getTxInfo = async () => {\n\n    // Get tx timestamp\n    const txProgressBarKey = `txProgressBarData`;\n    const txHash = this.props.hash.toLowerCase();\n\n    let txProgressBarData = null;\n    let txTimestamp = null;\n    let newState = {};\n\n    if (localStorage){\n      txProgressBarData = localStorage.getItem(txProgressBarKey);\n      if (txProgressBarData){\n        txProgressBarData = JSON.parse(txProgressBarData);\n      }\n    }\n\n    if (!txProgressBarData || !txProgressBarData[txHash]){\n      txTimestamp = new Date().getTime();\n\n      const [predictTable,blockTime] = await Promise.all([\n        this.getPredictionTable(),\n        this.getBlockTime()\n      ]);\n\n      txProgressBarData = {};\n      txProgressBarData[txHash] = {\n        txTimestamp,\n        blockTime,\n        predictTable\n      };\n\n      // Save progress bar status in localStorage\n      this.functionsUtil.setLocalStorage(txProgressBarKey,JSON.stringify(txProgressBarData));\n\n      newState = txProgressBarData[txHash];\n\n      if (!predictTable || !blockTime){\n        newState.error = 'Processing transaction';\n      }\n    }\n\n    this.setState(newState);\n  }\n\n  initProgressBar = async () => {\n\n    if (!this.props.hash || !this.props.web3){\n      return false;\n    }\n\n    const newState = {\n      initialized:true\n    };\n    this.setState(newState);\n\n    const transaction = await this.getTransaction();\n\n    if (transaction){\n      await this.getTxInfo();\n      try{\n        this.calculateRemainingTime();\n      } catch (err) {\n        newState.error = 'Processing transaction';\n\n        // const errStringified = JSON.stringify(err);\n      }\n\n      this.setState(newState);\n    }\n  }\n\n  renderRemainingTime(){\n    // More than 60 seconds\n    if (this.state.remainingTime>60){\n      const minutes = Math.floor(this.state.remainingTime/60);\n      const seconds = this.state.remainingTime-(minutes*60);\n      return ('0'+minutes).substr(-2)+':'+('0'+seconds).substr(-2)+' min';\n    } else {\n      return this.state.remainingTime+'s';\n    }\n  }\n\n  render() {\n    return (\n      <Flex flexDirection={'column'} alignItems={'center'}>\n        {\n          this.state.remainingTime !== null ? (\n            this.state.ended ? (\n              <FlexLoader\n                textProps={{\n                  ml:2,\n                  color:this.props.textColor ? this.props.textColor : 'copyColor'\n                }}\n                loaderProps={{\n                  size:'25px',\n                  ...this.props.loaderProps\n                }}\n                flexProps={{\n                  textAlign:'center',\n                  alignItems:'center',\n                  justifyContent:'center',\n                }}\n                text={this.props.endMessage ? this.props.endMessage : 'Finalizing transaction...'}\n              />\n            ) : (\n              <Flex\n                mb={2}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Text mb={2} color={ this.props.textColor ? this.props.textColor : 'copyColor'}>{ this.props.waitText ? this.props.waitText : 'Remaining time:' } <Text.span color={ this.props.textColor ? this.props.textColor : 'copyColor'} fontWeight={3}>{ this.renderRemainingTime() }</Text.span></Text>\n                <Progress value={ this.state.percentage } />\n              </Flex>\n            )\n          ) : (\n            this.state.error !== null && !this.state.processing ? (\n              <Flex\n                alignItems={'center'}\n                flexDirection={'column'}\n              >\n                <Icon\n                  size={'2em'}\n                  name={'Warning'}\n                  color={'cellText'}\n                />\n                <Text\n                  mt={0}\n                  fontSize={2}\n                  textAlign={'center'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                >\n                  {this.state.error}\n                </Text>\n              </Flex>\n            ) : (\n              <FlexLoader\n                textProps={{\n                  ml:2,\n                  color:this.props.textColor ? this.props.textColor : 'copyColor'\n                }}\n                loaderProps={{\n                  size:'25px',\n                  ...this.props.loaderProps\n                }}\n                flexProps={{\n                  textAlign:'center',\n                  alignItems:'center',\n                  justifyContent:'center',\n                }}\n                text={ this.state.error ? this.state.error : (this.props.hash ? (this.props.loadingMessage ? this.props.loadingMessage : 'Calculating estimated time...') : (this.props.sendingMessage ? this.props.sendingMessage : 'Sending transaction...') ) }\n              />\n            )\n          )\n        }\n        {\n          this.props.hash ? (\n            <Link\n              mt={0}\n              target={'_blank'}\n              hoverColor={'dark-gray'}\n              rel={\"nofollow noopener noreferrer\"}\n              color={this.props.textColor ? this.props.textColor : 'cellText'}\n              href={this.functionsUtil.getEtherscanTransactionUrl(this.props.hash)}\n            >\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={'center'}\n              >\n                <Text\n                  fontSize={0}\n                  textAlign={'center'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                >\n                  View in Etherscan\n                </Text>\n                <Icon\n                  ml={1}\n                  size={'0.75em'}\n                  name={'OpenInNew'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                />\n              </Flex>\n            </Link>\n          ) : typeof this.props.cancelTransaction === 'function' ? (\n              <Link\n                mt={0}\n                href={`javascript:void(0)`}\n                onClick={ e => this.props.cancelTransaction() }\n                color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                hoverColor={this.props.cancelTextHoverColor ? this.props.cancelTextHoverColor : 'dark-gray'}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'row'}\n                  justifyContent={'center'}\n                >\n                  <Text\n                    fontSize={0}\n                    textAlign={'center'}\n                    color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                  >\n                    Cancel transaction\n                  </Text>\n                  <Icon\n                    ml={1}\n                    size={'0.85em'}\n                    name={'Cancel'}\n                    color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                  />\n                </Flex>\n              </Link>\n          ) : null\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TxProgressBar;","import baseColors, { blue, green, yellow, red } from \"./colors\";\nimport { tint, shade } from 'polished';\n\n// theme.js\nexport default {\n  breakpoints: ['52em', '64em'],\n  // breakpoints: ['40em', '52em', '64em', '80em'],\n  fontSizes: [12, 14, 16, 18, 21, 32, 38, 48, 54, 64, 72, 84],\n  fontWeights: [0, 300, 400, 600, 700, 800],\n  letterSpacings: [0, 1, 2, 4, 8],\n  lineHeights: {\n    solid: 1,\n    title: 1.25,\n    copy: 1.5,\n  },\n  fonts: {\n    serif: '\"georgia regular\", athelas, times, serif',\n    sansSerif: '\"Inter\", -apple-system, sans-serif',\n    counter: '\"Roboto Mono\", Arial, -apple-system, sans-serif'\n  },\n  space: [0, 4, 8, 16, 32, 64, 128, 256],\n  radii: ['0', '4px', '8px', '16px', '2rem'],\n  width: [0, 16, 32, 64, 128, 256],\n  minWidths: [0, 16, 32, 64, 128, 256],\n  maxWidths: [0, 16, 32, 64, 128, 256, 512, 768, 1024, 1536],\n  heights: [0, 16, 32, 64, 128, 256],\n  minHeights: [0, 16, 32, 64, 128, 256],\n  maxHeights: [0, 16, 32, 64, 128, 256],\n  borders: [0, '1px solid #eee','1px solid #b6c2ff'],\n  borderWidths: ['0', '1px', '2px', '4px'],\n  shadows: [\n    '0',\n    '0px 2px 4px rgba(0, 0, 0, 0.1)',\n    '0 7px 14px rgba(50,50,93,.1)',\n    '1px 1px 0px rgba(0,0,0,0.2)',\n    '0px 0px 16px 2px rgba(0,54,255,0.3)'\n  ],\n  opacity: {\n    disabled: 0.4,\n  },\n  colors: {\n    primary: blue.base,\n    'gradient-bg': 'linear-gradient(120deg, #f6d365 0%, #ea0d73 100%)',\n    'primary-light': blue.light[1],\n    'primary-dark': blue.dark[1],\n    bgBlue: '#0030e0',\n    blue: '#0036ff',\n    'dark-blue': '#00219a',\n    skyBlue: '#00abfe',\n    lightBlue: '#79f4e1',\n    copyColor: '#3F3D4B',\n    subColor: '#a7a7a7',\n    black: baseColors.black,\n    'near-black': '#111',\n    'dark-gray': '#4e4e4e',\n    'mid-gray': '#999',\n    gray: ' #e0e0e0',\n    grey: '#CCC',\n    silver: '#999',\n    'light-silver': '#aaa',\n    'moon-gray': '#ccc',\n    'light-gray': '#eee',\n    'near-white': '#f4f4f4',\n    white: '#fff',\n    transparent: 'transparent',\n    /*\n    NEW COLORS\n    */\n    alert:'#ff9900',\n    arrowActive:'#4f4f4f',\n    arrowInactive:'#d8d8d8',\n    selectBgFocused:'#fbfbfb',\n    selectBg:'#ffffff',\n    backButtonBg:'#ffffff',\n    lineChartStroke:'#dbdbdb',\n    wrongNetworkBannerBg:'#ffffff',\n    dashboardBg: '#f9fafd',\n    statValue: '#959595',\n    boxBorder: '#eeeeee',\n    cellTitle: '#a3a4a5',\n    cellText: '#a6a6a6',\n    divider: '#d8d8d8',\n    counter: '#5d5d5d',\n    redeem: '#00a9fe',\n    link:'#0036ff',\n    deposit: '#0239ff',\n    migrate: '#00a9fe',\n    legend: '#c9c9c9',\n    menuBg:'#fff',\n    menuHover:'#f3f6ff',\n    cardBg:'#fff',\n    flashColor:'#3f4e9a',\n    menuRightBorder:'#eee',\n    cardHoverShadow:'0px 0px 0px 1px rgba(0, 54, 255, 0.3)',\n    cardBgHover:'#f7f8ff',\n    cardBorder:'#eee',\n    pageActive:'#4f4f4f',\n    pageInactive:'#d8d8d8',\n    transactions:{\n      action:{\n        send:'#10a0dd',\n        swap:'#3d53c0',\n        boost:'#ffff00',\n        redeem:'#10a0dd',\n        swapout:'#10a0dd',\n        deposit:'#3d53c0',\n        curvein:'#10a0dd',\n        receive:'#3d53c0',\n        migrate:'#3d53c0',\n        default:'#4f4f4f',\n        curveout:'#3d53c0',\n        withdraw:'#10a0dd',\n        curvedepositin:'#10a0dd',\n        curvedepositout:'#3d53c0'\n      },\n      actionBg:{\n        send:'#ceeff6',\n        swap:'#ced6ff',\n        boost:'#ff7979',\n        redeem:'#ceeff6',\n        swapout:'#ceeff6',\n        deposit:'#ced6ff',\n        curvein:'#ceeff6',\n        default:'#dadada',\n        receive:'#ced6ff',\n        migrate:'#ced6ff',\n        withdraw:'#ceeff6',\n        curveout:'#ced6ff',\n        curvedepositin:'#ceeff6',\n        curvedepositout:'#ced6ff'\n      },\n      status:{\n        completed:'#00b84a',\n        pending:'#a5a5a5',\n        failed:'#fa0000'\n      }\n    },\n    blacks: [\n      'rgba(0,0,0,.0125)',\n      'rgba(0,0,0,.025)',\n      'rgba(0,0,0,.05)',\n      'rgba(0,0,0,.1)',\n      'rgba(0,0,0,.2)',\n      'rgba(0,0,0,.3)',\n      'rgba(0,0,0,.4)',\n      'rgba(0,0,0,.5)',\n      'rgba(0,0,0,.6)',\n      'rgba(0,0,0,.7)',\n      'rgba(0,0,0,.8)',\n      'rgba(0,0,0,.9)',\n    ],\n    whites: [\n      'rgba(255,255,255,.0125)',\n      'rgba(255,255,255,.025)',\n      'rgba(255,255,255,.05)',\n      'rgba(255,255,255,.1)',\n      'rgba(255,255,255,.2)',\n      'rgba(255,255,255,.3)',\n      'rgba(255,255,255,.4)',\n      'rgba(255,255,255,.5)',\n      'rgba(255,255,255,.6)',\n      'rgba(255,255,255,.7)',\n      'rgba(255,255,255,.8)',\n      'rgba(255,255,255,.9)',\n    ],\n  },\n  zIndices: [0, 9, 99, 999, 9999],\n  messageStyle: {\n    base: {\n      color: shade(0.4, '#AAA'),\n      backgroundColor: tint(0.9, '#AAA'),\n      borderColor: '#AAA',\n    },\n    success: {\n      color: shade(0.4, green.base),\n      backgroundColor: tint(0.9, green.base),\n      borderColor: green.base,\n    },\n    warning: {\n      color: shade(0.4, yellow.base),\n      backgroundColor: tint(0.9, yellow.base),\n      borderColor: yellow.base,\n    },\n    danger: {\n      color: shade(0.4, red.base),\n      backgroundColor: tint(0.9, red.base),\n      borderColor: red.base,\n    },\n    info: {\n      color: shade(0.4, blue.base),\n      backgroundColor: '#f3f6ff',\n      borderColor: '#b6c2ff',\n    },\n  },\n  buttons: {\n    primary: {\n      color: blue.text,\n      backgroundColor: blue.base,\n      // use css custom props\n      '--main-color': blue.base,\n      '--contrast-color': blue.text,\n    },\n    normal: {\n      color: baseColors.black,\n      '--contrast-color': baseColors.black,\n    },\n    success: {\n      '--main-color': green.base,\n      '--contrast-color': green.text,\n    },\n    danger: {\n      '--main-color': red.base,\n      '--contrast-color': red.text,\n    },\n  },\n  buttonSizes: {\n    small: {\n      fontSize: '0.75rem',\n      height: '2rem',\n      minWidth: '2rem',\n      padding: '0 1rem',\n    },\n    medium: {\n      fontSize: '1rem',\n      height: '3rem',\n      minWidth: '3rem',\n    },\n    large: {\n      fontSize: '1.5rem',\n      height: '4rem',\n      minWidth: '4rem',\n      borderRadius: '2rem'\n    },\n  },\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tooltip\":\"TableCellHeader_tooltip__3xM3k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"radioBtn\":\"TransactionListFilters_radioBtn__1vgHa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bg\":\"ModalCard_bg__3ocwQ\"};","import Select from 'react-select';\nimport React, { Component } from 'react';\nimport { Flex, Text, Input } from \"rimble-ui\";\nimport styles from './GenericSelector.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass GenericSelector extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadComponents();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const optionsChanged = JSON.stringify(prevProps.options) !== JSON.stringify(this.props.options);\n    const defaultValueChanged = JSON.stringify(prevProps.defaultValue) !== JSON.stringify(this.props.defaultValue);\n    const componentsChanged = prevProps.CustomOptionValue !== this.props.CustomOptionValue || prevProps.CustomValueContainer !== this.props.CustomValueContainer;\n\n    if (optionsChanged || selectedTokenChanged || defaultValueChanged || componentsChanged){\n      this.loadComponents();\n    }\n  }\n\n  async loadComponents(){\n    \n    const ControlComponent = props => {\n      const cardProps = Object.assign(\n        props.innerProps,\n        {\n          p:2,\n          width:1,\n          style:{cursor:'pointer'}\n        },\n        (this.props.innerProps ? this.props.innerProps : {})\n      );\n\n      if (props.menuIsOpen){\n        cardProps.boxShadow = 4;\n      }\n      return (\n        <DashboardCard\n          isInteractive={true}\n          cardProps={cardProps}\n        >\n          <Flex\n            width={1}\n            flexDirection={'row'}\n          >\n            {props.children}\n          </Flex>\n        </DashboardCard>\n      );\n    };\n\n    const CustomIndicatorSeparator = props => null;\n\n    const CustomMenu = props => {\n      const cardProps = Object.assign(props.innerProps,{\n        mt:2,\n        zIndex:1,\n        boxShadow:null,\n        position:'absolute'\n      });\n      return (\n        <DashboardCard\n          cardProps={cardProps}\n        >\n          {props.children}\n        </DashboardCard>\n      );\n    }\n\n    const CustomValueContainer = this.props.CustomValueContainer ? this.props.CustomValueContainer : props => {\n      return (\n        <Flex\n          {...props.innerProps}\n        >\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            <Text\n              fontWeight={3}\n            >\n              {props.selectProps.value.label}\n            </Text>\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomOptionValue = this.props.CustomOptionValue ? this.props.CustomOptionValue : (props) => {\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n        >\n          <Text>\n            {props.label}\n          </Text>\n        </Flex>\n      );\n    };\n\n    const CustomInputContainer = this.props.CustomInputContainer ? this.props.CustomInputContainer : (props) => {\n\n      if (!props.selectProps.isSearchable){\n        return null;\n      }\n\n      return (\n        <Input\n          {...props}\n          fontSize={this.props.theme.fontSizes[2]}\n          color={this.props.theme.colors.copyColor}\n          fontWeight={this.props.theme.fontWeights[3]}\n          fontFamily={this.props.theme.fonts.sansSerif}\n          backgroundColor={this.props.theme.colors.cardBg}\n          className={[styles.searchInput,this.props.themeMode==='dark' ? styles.dark : null,!props.selectProps.menuIsOpen ? styles.searchInputHidden : null]}\n        />\n      );\n    };\n\n    const CustomOption = (props) => {\n\n      const options = props.selectProps.options;\n      let selectedValue = props.selectProps && props.selectProps.value && props.selectProps.value.value;\n\n      // Check if the selectedValue is included in options\n      if (selectedValue && options.map( o => o.value ).indexOf(selectedValue) === -1 && this.props.defaultValue){\n        selectedValue = this.props.defaultValue.value;\n      }\n\n      // Don't show selected value\n      if (selectedValue && selectedValue === props.value){\n        return null;\n      }\n\n      return (\n        <Flex\n          px={3}\n          py={2}\n          width={1}\n          {...props.innerProps}\n          alignItems={'center'}\n          flexDirection={'row'}\n          style={{cursor:'pointer'}}\n          justifyContent={'flex-start'}\n          className={styles.genericSelector}\n          backgroundColor={ props.isFocused ? 'selectBgFocused' : 'selectBg' }\n        >\n          <CustomOptionValue\n            {...props}\n          />\n        </Flex>\n      );\n    }\n\n    await this.setState({\n      CustomMenu,\n      CustomOption,\n      ControlComponent,\n      CustomValueContainer,\n      CustomInputContainer,\n      CustomIndicatorSeparator\n    });\n  }\n\n  render() {\n    const isSearchable = typeof this.props.isSearchable !== 'undefined' ? this.props.isSearchable : false;\n    return (\n      <Select\n        name={this.props.name}\n        isSearchable={isSearchable}\n        options={this.props.options}\n        defaultValue={this.props.defaultValue}\n        onChange={ v => this.props.onChange(v.value) }\n        components={{\n            Menu: this.state.CustomMenu,\n            Option: this.state.CustomOption,\n            Control: this.state.ControlComponent,\n            Input: this.state.CustomInputContainer,\n            SingleValue: this.state.CustomValueContainer,\n            IndicatorSeparator: this.state.CustomIndicatorSeparator\n        }}\n      />\n    );\n  }\n}\n\nexport default GenericSelector;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Web3ConnectionButtons_button__1Wov0\"};","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericSelector from '../GenericSelector/GenericSelector';\n\nclass AssetSelector extends Component {\n\n  state = {\n    options:null,\n    defaultValue:null,\n    CustomOptionValue:null,\n    CustomValueContainer:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  loadComponents(){\n    const options = Object.keys(this.props.availableTokens).map(token => {\n      const tokenConfig = this.props.availableTokens[token];\n      return {\n        value:token,\n        label:token,\n        tokenConfig\n      };\n    });\n\n    const defaultValue = this.props.selectedToken ? options.find(v => (v.value.toUpperCase() === this.props.selectedToken.toUpperCase())) : null;\n\n    const CustomOptionValue = props => {\n      const token = props.value;\n      const tokenConfig = props.data.tokenConfig;\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={token}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={token}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n          {\n            this.state.props.showCustomField ? (\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:this.state.props.showCustomField,\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n            ) : this.props.showBalance &&\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:'tokenBalance',\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n          }\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : defaultValue;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const token = selectProps.value;\n      const tokenConfig = selectProps.tokenConfig;\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={token}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={token}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n\n          {\n            this.props.showBalance &&\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:'tokenBalance',\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n          }\n        </Flex>\n      );\n    }\n\n    this.setState({\n      options,\n      defaultValue,\n      CustomOptionValue,\n      CustomValueContainer\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadComponents();\n\n    this.setState({\n      props:this.props\n    });\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const availableTokensChanged = JSON.stringify(Object.keys(prevProps.availableTokens)) !== JSON.stringify(Object.keys(this.props.availableTokens));\n    if (availableTokensChanged || selectedTokenChanged){\n      this.loadComponents();\n    }\n  }\n\n  render() {\n    if (!this.state.options || !this.state.defaultValue || !this.state.CustomOptionValue || !this.state.CustomValueContainer || !this.props.availableTokens || !Object.keys(this.props.availableTokens).length){\n      return null;\n    }\n\n    return (\n      <GenericSelector\n        {...this.props}\n        name={'assets'}\n        options={this.state.options}\n        innerProps={this.props.innerProps}\n        isSearchable={this.props.isSearchable}\n        defaultValue={this.state.defaultValue}\n        selectedToken={this.props.selectedToken}\n        CustomOptionValue={this.state.CustomOptionValue}\n        CustomValueContainer={this.state.CustomValueContainer}\n        onChange={ this.props.onChange ? this.props.onChange : this.props.changeToken}\n      />\n    );\n  }\n}\n\nexport default AssetSelector;\n","import React, { Component } from 'react';\nimport { Flex, Text, Icon, Image } from \"rimble-ui\";\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass CardIconButton extends Component {\n  render() {\n    const cardProps = Object.assign({\n      py:1,\n      width:'auto',\n      px:['12px',3],\n    },this.props.cardProps);\n\n    return (\n       <DashboardCard\n         cardProps={cardProps}\n         isInteractive={true}\n         isActive={this.props.isActive}\n         handleClick={this.props.handleClick}\n       >\n         <Flex\n           my={1}\n           alignItems={'center'}\n           flexDirection={'row'}\n           justifyContent={'center'}\n         >\n          {\n            this.props.image ? (\n              <Image\n                align={'center'}\n                src={this.props.image}\n                height={ this.props.isMobile ? '1.2em' : '1.4em' }\n                width={ this.props.isMobile ? '1.2em' : '1.4em' }\n                {...this.props.imageProps}\n              />\n            ) : this.props.useIconOnly ? (\n              <Icon\n                align={'center'}\n                name={this.props.icon}\n                size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                color={ this.props.iconColor ? this.props.iconColor : 'redeem' }\n                {...this.props.iconProps}\n              />\n            ) : (\n             <Flex\n               mr={2}\n               p={['4px','7px']}\n               borderRadius={'50%'}\n               alignItems={'center'}\n               justifyContent={'center'}\n               backgroundColor={ this.props.iconBgColor ? this.props.iconBgColor : this.props.theme.colors.transactions.actionBg.redeem }\n             >\n               <Icon\n                 align={'center'}\n                 name={this.props.icon}\n                 size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                 color={ this.props.iconColor ? this.props.iconColor : 'redeem' }\n                 {...this.props.iconProps}\n               />\n             </Flex>\n            )\n          }\n           <Text\n             fontWeight={3}\n             fontSize={[1,3]}\n             {...this.props.textProps}\n           >\n             {this.props.text}\n           </Text>\n         </Flex>\n       </DashboardCard>\n    );\n  }\n}\n\nexport default CardIconButton;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gradientButton\":\"Header_gradientButton__2mrQl\",\"empty\":\"Header_empty__3fhiX\",\"select\":\"Header_select__27Xyx\",\"selectDark\":\"Header_selectDark__EHAAP\",\"input\":\"Header_input__3dr8P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"Tos_headerContainer__23W_f\",\"headerBgFiller\":\"Tos_headerBgFiller__36Nfk\",\"bgContainer\":\"Tos_bgContainer__rX7uJ\",\"list\":\"Tos_list__3bMLG\",\"textContainer\":\"Tos_textContainer__3hUuq\"};","import theme from '../theme';\nimport React, { Component } from 'react';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Icon, Link, Image } from \"rimble-ui\";\nimport ShortHash from \"../utilities/components/ShortHash\";\n\nclass TransactionField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const hashChanged = prevProps.hash !== this.props.hash;\n    const accountChanged = prevProps.account !== this.props.account;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    if (fieldChanged || hashChanged || accountChanged){\n      this.loadField();\n    }\n  }\n\n  async loadField(){\n    const fieldInfo = this.props.fieldInfo;\n    if (this.props.hash && this.props.account){\n      switch (fieldInfo.name){\n        case 'icon':\n        break;\n        case 'hash':\n          \n        break;\n        case 'action':\n          \n        break;\n        case 'date':\n        break;\n        case 'status':\n        break;\n        case 'amount':\n        break;\n        case 'asset':\n        break;\n        default:\n        break;\n      }\n    }\n  }\n\n  render(){\n    let icon = null;\n    let color = null;\n    let output = null;\n    const fieldInfo = this.props.fieldInfo;\n    const transaction = this.props.transaction;\n    let bgColor = theme.colors.transactions.actionBg.default;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      style:{\n        maxWidth:'100%',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis'\n      },\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    switch (fieldInfo.name){\n      case 'icon':\n        if (transaction.action){\n          color = theme.colors.transactions.action[transaction.action.toLowerCase()] ? theme.colors.transactions.action[transaction.action.toLowerCase()] : color;\n          bgColor = theme.colors.transactions.actionBg[transaction.action.toLowerCase()] ? theme.colors.transactions.actionBg[transaction.action.toLowerCase()] : bgColor;\n        }\n        switch (transaction.action.toLowerCase()) {\n          case 'deposit':\n          case 'curveout':\n          case 'curvezapout':\n          case 'curvedepositout':\n            icon = \"ArrowDownward\";\n          break;\n          case 'boost':\n            icon = \"TrendingUp\";\n          break;\n          case 'redeem':\n          case 'curvein':\n          case 'curvezapin':\n          case 'curvedepositin':\n            icon = \"ArrowUpward\";\n          break;\n          case 'send':\n            icon = \"Send\";\n          break;\n          case 'receive':\n            icon = \"Redo\";\n          break;\n          case 'migrate':\n            // icon = \"Sync\";\n            icon = \"Repeat\";\n          break;\n          case 'swap':\n            icon = \"SwapHoriz\";\n          break;\n          case 'swapout':\n            icon = \"SwapHoriz\";\n          break;\n          case 'withdraw':\n            icon = \"ArrowUpward\";\n          break;\n          default:\n            icon = \"Refresh\";\n          break;\n        }\n        output = (\n          <Flex\n            p={'5px'}\n            borderRadius={'50%'}\n            {...fieldProps}\n            alignItems={'center'}\n            backgroundColor={bgColor}\n            justifyContent={'center'}\n          >\n            <Icon\n              name={icon}\n              color={color}\n              align={'center'}\n              size={this.props.isMobile ? '1em' : '1.4em'}\n            />\n          </Flex>\n        );\n      break;\n      case 'hash':\n        if (transaction.hash){\n          output = (\n            <Link\n              target={'_blank'}\n              rel={'nofollow noopener noreferrer'}\n              href={`https://etherscan.io/tx/${transaction.hash}`}\n            >\n              <ShortHash\n                fontSize={1}\n                color={'white'}\n                {...fieldProps}\n                resolveAddress={false}\n                hash={transaction.hash}\n              />\n            </Link>\n          );\n        }\n      break;\n      case 'action':\n        let action = transaction.action;\n        switch (transaction.action) {\n          case 'Swap':\n            action = \"Swap In\";\n          break;\n          case 'SwapOut':\n            action = \"Swap Out\";\n          break;\n          default:\n          break;\n        }\n        output = (\n          <Text {...fieldProps}>{action.toUpperCase()}</Text>\n        );\n      break;\n      case 'date':\n        const formattedDate = transaction.momentDate.format('DD MMM, YYYY');\n        output = (\n          <Text {...fieldProps}>{formattedDate}</Text>\n        );\n      break;\n      case 'statusIcon':\n        color = theme.colors.transactions.status[transaction.status.toLowerCase()];\n        switch (transaction.status) {\n          case 'Completed':\n            icon = \"Done\";\n          break;\n          case 'Pending':\n            icon = \"Timelapse\";\n          break;\n          case 'Failed':\n            icon = \"ErrorOutline\";\n          break;\n          default:\n          break;\n        }\n        output = (\n          <Flex\n            p={[0,'1px']}\n            borderRadius={'50%'}\n            {...fieldProps}\n            alignItems={'center'}\n            width={['24px','26px']}\n            height={['24px','26px']}\n            justifyContent={'center'}\n            border={ this.props.isMobile ? `1px solid ${color}` : `2px solid ${color}` }\n          >\n            <Icon\n              name={icon}\n              color={color}\n              align={'center'}\n              size={ this.props.isMobile ? '1em' : '1.2em'}\n            />\n          </Flex>\n        );\n      break;\n      case 'status':\n        output = (\n          <Text {...fieldProps}>{transaction.status}</Text>\n        );\n      break;\n      case 'amount':\n        output = (\n          <SmartNumber {...fieldProps} number={transaction.amount} />\n        );\n      break;\n      case 'tokenIcon':\n        const tokenSymbol = transaction.tokenSymbol.toUpperCase();\n        const tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',tokenSymbol]);\n        const iconSrc = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${tokenSymbol}.svg`;\n        output = (\n          <Image src={iconSrc} {...fieldProps} />\n        );\n      break;\n      case 'tokenName':\n        output = (\n          <Text {...fieldProps}>{transaction.tokenSymbol.toUpperCase()}</Text>\n        );\n      break;\n      default:\n      break;\n    }\n    return output;\n  }\n}\n\nexport default TransactionField;\n","import React, { Component } from 'react';\nimport { Icon, Text, Flex } from \"rimble-ui\";\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass IconBox extends Component {\n\n  render() {\n    const cardProps = Object.assign({\n      p:3\n    },this.props.cardProps);\n    return (\n      <DashboardCard\n        cardProps={cardProps}\n      >\n        <Flex\n          alignItems={'center'}\n          flexDirection={'column'}\n        >\n          <Icon\n            size={'1.8em'}\n            color={'cellText'}\n            name={this.props.icon ? this.props.icon : 'InfoOutline'}\n            {...this.props.iconProps}\n          />\n          {\n            this.props.text && \n              <Text\n                mt={1}\n                fontSize={2}\n                color={'cellText'}\n                textAlign={'center'}\n                dangerouslySetInnerHTML={{\n                  __html:this.props.text\n                }}\n                {...this.props.textProps}\n              />\n          }\n          {\n            this.props.children\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default IconBox;\n","import { Heading } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass Title extends Component {\n  render() {\n    const props = {\n      fontWeight:4,\n      fontSize:[4,6],\n      color:'copyColor',\n      textAlign:'center',\n      lineHeight:'initial',\n    };\n\n    // Replace props\n    if (this.props && Object.keys(this.props).length){\n      Object.keys(this.props).forEach(p => {\n        props[p] = this.props[p];\n      });\n    }\n\n    const HeadingComponent = this.props.component ? this.props.component : Heading.h1;\n\n    return (\n      <HeadingComponent\n        {...props}\n      >\n        {this.props.children}\n      </HeadingComponent>\n    );\n  }\n}\n\nexport default Title;\n","/*\nTheming: https://github.com/plouc/nivo/issues/308\n*/\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\n\nclass GenericChart extends Component {\n  state = {\n    width:null,\n    height:null\n  };\n\n  componentUnmounted = false;\n\n  componentWillMount() {\n    window.addEventListener('resize', this.handleWindowSizeChange.bind(this));\n  }\n\n  componentWillUnmount() {\n    this.componentUnmounted = true;\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n\n  componentDidMount(){\n    this.handleWindowSizeChange();\n  }\n\n  componentDidUpdate(prevProps){\n    if (prevProps.isMobile !== this.props.isMobile){\n      this.handleWindowSizeChange();\n    }\n  }\n\n  handleWindowSizeChange(){\n    if (this.componentUnmounted){\n      return false;\n    }\n\n    const newState = {...this.state};\n\n    if (this.props.parentId){\n      const chartContainer = document.getElementById(this.props.parentId);\n      if (chartContainer){\n        const chartWidth = parseFloat(chartContainer.offsetWidth)>0 ? chartContainer.offsetWidth : 0;\n\n        if (chartWidth && chartWidth !== newState.width){\n          newState.width = chartWidth;\n        }\n      }\n    }\n\n    if (!newState.width && this.props.width && this.props.width !== newState.width) {\n      newState.width = this.props.width;\n    }\n\n    if (this.props.parentIdHeight){\n      const chartContainerH = document.getElementById(this.props.parentIdHeight);\n      if (chartContainerH){\n        const chartHeight = parseFloat(chartContainerH.offsetWidth)>0 ? chartContainerH.offsetWidth : 0;\n        if (chartHeight && chartHeight !== newState.height){\n          newState.height = chartHeight;\n        }\n      }\n    }\n\n    if (!newState.height && this.props.height && this.props.height !== newState.height) {\n      newState.height = this.props.height;\n    }\n\n    if (Object.keys(newState).length>0){\n      this.setState(newState);\n    }\n  };\n\n  render() {\n    const ChartType = this.props.type;\n\n    const height = this.state.height && !isNaN(this.state.height) ? parseInt(this.state.height) : 350;\n    const width = this.state.width && !isNaN(this.state.width) ? parseInt(this.state.width) : 0;\n\n    let chartProps = Object.assign({},this.props);\n    chartProps = {\n      ...chartProps,\n      height,\n      width\n    }\n\n    return chartProps.showLoader && (!chartProps.data || !width || !height) ? (\n      <FlexLoader\n        flexProps={{\n          flexDirection:'row',\n          minHeight:height\n        }}\n        loaderProps={ this.props.loaderProps ? this.props.loaderProps : {\n          size:'30px'\n        }}\n        textProps={{\n          ml:2\n        }}\n        text={ this.props.loaderText !== undefined ? this.props.loaderText : 'Loading graph data...'}\n      />\n    ) : this.props.data && (\n      <ChartType\n        {...chartProps}\n      />\n    )\n  }\n}\n\nexport default GenericChart;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\n\nclass ExecuteTransaction extends Component {\n\n  state = {\n    txStatus:null,\n    processing:{\n      txHash:null,\n      loading:false\n    }\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  async execute(){\n\n    const callback = (tx,error) => {\n\n      console.log('callback',tx,error);\n\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: 'Transaction',\n        eventLabel: this.props.methodName,\n        eventAction: this.props.contractName\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      const txSucceeded = tx && tx.status === 'success';\n      if (txSucceeded){\n        if (typeof this.props.callback === 'function'){\n          this.props.callback(tx);\n        }\n      }\n\n      this.setState({\n        processing: {\n          txHash:null,\n          loading:false\n        },\n        txStatus:tx ? tx.status : null\n      });\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        txStatus:'processing',\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    this.setState((prevState) => ({\n      txStatus:'loading',\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n\n    let params = this.props.params;\n    if (typeof this.props.getTransactionParams === 'function'){\n      params = this.props.getTransactionParams();\n    } else if (typeof this.props.getTransactionParamsAsync === 'function'){\n      params = await this.props.getTransactionParamsAsync();\n    }\n\n    if (!params){\n      this.setState((prevState) => ({\n        txStatus:null,\n        processing: {\n          ...prevState.processing,\n          loading:false\n        }\n      }));\n      return false;\n    }\n\n    // console.log('ExecuteTransaction',this.props.contractName,this.props.methodName,params);\n\n    if (this.props.sendRawTransaction){\n      this.functionsUtil.contractMethodSendWrapper(this.props.contractName,this.props.methodName,params,callback,callbackReceipt,null,true,params);\n    } else {\n      this.functionsUtil.contractMethodSendWrapper(this.props.contractName,this.props.methodName,params,callback,callbackReceipt);\n    }\n  }\n\n  render() {\n    const ExecuteComponent = this.props.Component;\n    return (\n      <Flex\n        {...this.props.parentProps}\n      >\n        {\n          this.state.txStatus === 'success' && this.props.children ?\n            this.props.children\n          : this.state.processing && this.state.processing.loading ? (\n            <TxProgressBar\n              web3={this.props.web3}\n              network={this.props.network}\n              {...this.props.progressBarProps}\n              hash={this.state.processing.txHash}\n              cancelTransaction={this.cancelTransaction.bind(this)}\n              endMessage={`Finalizing ${this.props.action} request...`}\n              waitText={`${this.functionsUtil.capitalize(this.props.action)} estimated in`}\n            />\n          ) : (\n            <ExecuteComponent\n              onClick={this.execute.bind(this)}\n              {...this.props.componentProps}\n            >\n              {this.props.componentProps.value}\n            </ExecuteComponent>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default ExecuteTransaction;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"defaultOpacity\":\"DashboardCard_defaultOpacity__1B1rs\",\"hidden\":\"DashboardCard_hidden__8pO5t\",\"interactive\":\"DashboardCard_interactive__2adxr\",\"rainbow\":\"DashboardCard_rainbow__3HCI7\",\"disabled\":\"DashboardCard_disabled__uqHO2\"};","import { Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass FastBalanceSelector extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n\n    let cardProps = {\n      p:2,\n      width:0.23,\n      onMouseDown:this.props.onMouseDown\n    };\n\n    let textProps = {\n      fontSize:2,\n      fontWeight:3,\n      textAlign:'center',\n      color:this.props.isActive ? 'copyColor' : 'cellText'\n    }\n\n    cardProps = this.functionsUtil.replaceArrayProps(cardProps,this.props.cardProps);\n    textProps = this.functionsUtil.replaceArrayProps(textProps,this.props.textProps);\n\n    return (\n      <DashboardCard\n        isInteractive={true}\n        cardProps={cardProps}\n        isActive={this.props.isActive}\n      >\n        <Text \n          {...textProps}\n        >\n          {this.props.percentage}%\n        </Text>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default FastBalanceSelector;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n// import TokenWrapper from '../TokenWrapper/TokenWrapper';\nimport GenericSelector from '../GenericSelector/GenericSelector';\n\nclass Staking extends Component {\n\n  state = {\n    tokenConfig:null,\n    contractInfo:null,\n    selectedToken:null,\n    selectedOption:null,\n    availableTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      const tokenConfig = this.props.toolProps.availableTokens[this.state.selectedToken];\n      const contractInfo = tokenConfig.contract;\n\n      // Init contracts\n      await Promise.all([\n        this.props.initContract(contractInfo.name,contractInfo.address,contractInfo.abi),\n        this.props.initContract(this.state.selectedToken,tokenConfig.address,tokenConfig.abi)\n      ]);\n\n      this.setState({\n        tokenConfig,\n        contractInfo\n      });\n    }\n  }\n\n  async loadData(){\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens).reduce( (output,token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      if (tokenConfig.enabled){\n        output.push({\n          value:token,\n          ...tokenConfig\n        });\n      }\n      return output;\n    },[]);\n\n    const selectedOption = availableTokens[0];\n    const selectedToken = selectedOption.value;\n\n    this.setState({\n      selectedToken,\n      selectedOption,\n      availableTokens\n    });\n  }\n\n  selectToken(selectedToken){\n    this.setState({\n      selectedToken\n    });\n  }\n\n  render() {\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const SelectedComponent = this.state.tokenConfig ? this.state.tokenConfig.component : null;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.availableTokens ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading tokens...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.availableTokens.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active tokens.\n                  </Text>\n                ) : (\n                  <Flex\n                    width={[1,0.46]}\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Box\n                      width={1}\n                    >\n                      <Text\n                        mb={1}\n                      >\n                        Select Token:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        name={'tokens'}\n                        isSearchable={false}\n                        options={this.state.availableTokens}\n                        CustomOptionValue={CustomOptionValue}\n                        onChange={this.selectToken.bind(this)}\n                        defaultValue={this.state.selectedOption}\n                        CustomValueContainer={CustomValueContainer}\n                      />\n                    </Box>\n                    {\n                      SelectedComponent && (\n                        <SelectedComponent\n                          {...this.props}\n                          tokenConfig={this.state.tokenConfig}\n                          contractInfo={this.state.contractInfo}\n                          selectedToken={this.state.selectedToken}\n                        />\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default Staking;","import React, { Component } from 'react';\nimport { Flex, Box, Text, Button } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\n\nclass TokenSwap extends Component {\n\n  state = {\n    tokenConfig:null,\n    selectedFromToken:null,\n    selectedDestToken:null,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async loadKyberWidget(){\n\n    if (!this.state.selectedFromToken || !this.state.selectedDestToken){\n      return false;\n    }\n\n    const provider = 'kyberSwap';\n    const providerInfo = this.functionsUtil.getGlobalConfig(['payments','providers',provider]);\n    if (providerInfo.enabled && providerInfo.remoteResources){\n\n      const globalConfigs = this.functionsUtil.getGlobalConfigs();\n      const remoteResources = providerInfo.remoteResources;\n\n      Object.keys(remoteResources).forEach((url,j) => {\n\n        const resourceType = url.split('.').pop().toLowerCase();\n\n        switch (resourceType){\n          case 'js':\n            const scriptID = `script_${provider}_${j}_${this.state.selectedFromToken}_${this.state.selectedDestToken}`;\n\n            if (!document.getElementById(scriptID)){\n              const script = document.createElement(\"script\");\n              const remoteResourceParams = remoteResources[url];\n              const callback = remoteResourceParams && remoteResourceParams.callback ? remoteResourceParams.callback : null;\n              const precall = remoteResourceParams && remoteResourceParams.precall ? remoteResourceParams.precall : null;\n\n              if (precall && typeof precall === 'function'){\n                const precallProps = {\n                  baseToken:this.state.selectedFromToken,\n                  selectedToken:this.state.selectedDestToken,\n                  buttonId:`kyber-swapper-${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n                };\n                precall(precallProps,globalConfigs,providerInfo);\n              }\n\n              if (callback && typeof callback === 'function'){\n                if (script.readyState) {  // only required for IE <9\n                  script.onreadystatechange = function() {\n                    if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n                      script.onreadystatechange = null;\n                      callback();\n                    }\n                  };\n                } else {  //Others\n                  script.onload = callback;\n                }\n              }\n\n              script.id = scriptID;\n              script.className = `script_${provider}`;\n              script.src = url;\n              script.async = true;\n\n              if (remoteResourceParams && remoteResourceParams.parentElement){\n                remoteResourceParams.parentElement.appendChild(script)\n              } else {\n                document.head.appendChild(script);\n              }\n            }\n          break;\n          case 'css':\n            const stylesheetId = `stylesheet_${provider}_${j}`;\n\n            if (!document.getElementById(stylesheetId)){\n              const style = document.createElement(\"link\");\n\n              style.id = stylesheetId;\n              style.rel = 'stylesheet';\n              style.href = url;\n\n              document.head.appendChild(style);\n            }\n          break;\n          default:\n          break;\n        }\n      });\n    }\n\n    this.setState({\n      providerInfo\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async loadTokens(){\n    const selectedFromToken = Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    this.selectFromToken(selectedFromToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const fromTokenChanged = prevState.selectedFromToken !== this.state.selectedFromToken;\n    const destTokenChanged = prevState.selectedDestToken !== this.state.selectedDestToken;\n    if ((fromTokenChanged ||  destTokenChanged) && this.state.selectedFromToken && this.state.selectedDestToken){\n      this.loadKyberWidget();\n    }\n  }\n\n  selectFromToken = async (selectedFromToken) => {\n    let selectedDestToken = null;\n    const availableDestinationTokens = {};\n    const supportedTokens = this.functionsUtil.getGlobalConfig(['payments','providers','kyberSwap','supportedTokens']);\n\n    supportedTokens.forEach( token => {\n      if (token !== selectedFromToken){\n        if (!selectedDestToken){\n          selectedDestToken = token;\n        }\n        availableDestinationTokens[token] = {\n          token\n        };\n      }\n    });\n\n    const baseToken = this.functionsUtil.getGlobalConfig(['baseToken']);\n    if (baseToken !== selectedFromToken){\n      availableDestinationTokens[baseToken] = {\n        token:baseToken\n      };\n    }\n\n    this.setState({\n      selectedFromToken,\n      availableDestinationTokens\n    },() => {\n      this.selectDestToken(selectedDestToken);\n    });\n  }\n\n  selectDestToken = async (selectedDestToken) => {\n    this.setState({\n      selectedDestToken\n    });\n  }\n\n  swap = () => {\n    const globalConfigs = this.functionsUtil.getGlobalConfigs();\n    const paymentProvider = this.state.providerInfo;\n    const initProps = {\n      baseToken:this.state.selectedFromToken,\n      selectedToken:this.state.selectedDestToken,\n      buttonId:`kyber-swapper-${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n    };\n    const initParams = paymentProvider && paymentProvider.getInitParams ? paymentProvider.getInitParams(initProps,globalConfigs) : null;\n\n    // Render the Payment Provider\n    if (typeof paymentProvider.render === 'function'){\n      paymentProvider.render(initParams,null,initProps);\n    }\n\n    // Send GA event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Tools',\n      eventAction: 'TokenSwap',\n      eventLabel: `${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedFromToken){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to swap:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              showBalance={false}\n              isSearchable={true}\n              onChange={this.selectFromToken}\n              selectedToken={this.state.selectedFromToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            this.state.availableDestinationTokens && this.state.selectedDestToken && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text mb={1}>\n                  Select destination asset:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  showBalance={false}\n                  isSearchable={true}\n                  onChange={this.selectDestToken}\n                  selectedToken={this.state.selectedDestToken}\n                  availableTokens={this.state.availableDestinationTokens}\n                />\n              </Box>\n          }\n          <Flex\n            mt={2}\n            width={1}\n            justifyContent={'center'}\n          >\n            <Button\n              my={2}\n              mx={[0, 2]}\n              size={'medium'}\n              borderRadius={4}\n              mainColor={'blue'}\n              onClick={ e => this.swap(e) }\n              disabled={ !this.state.selectedFromToken || !this.state.selectedDestToken }\n            >\n              SWAP TOKENS\n            </Button>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenSwap;\n","import React, { Component } from 'react';\nimport IconBox from '../IconBox/IconBox';\nimport ExtLink from '../ExtLink/ExtLink';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport { Flex, Box, Text, Icon, Link, Input, Checkbox } from \"rimble-ui\";\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\n\nclass SendTxWithBalance extends Component {\n\n  state = {\n    processing:{\n      txHash:null,\n      loading:false\n    },\n    inputValue:null,\n    txSucceeded:false,\n    permitEnabled:true,\n    showPermitBox:false,\n    buttonDisabled:true,\n    contractApproved:false,\n    fastBalanceSelector:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    await this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const actionChanged = prevProps.action !== this.props.action;\n    const accountChanged = prevProps.account !== this.props.account;\n    const tokenBalanceChanged = prevProps.tokenBalance !== this.props.tokenBalance;\n    const permitEnabledChanged = prevState.permitEnabled !== this.state.permitEnabled;\n    const approveEnabledChanged = prevProps.approveEnabled !== this.props.approveEnabled;\n    const contractChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    if (actionChanged || accountChanged || tokenBalanceChanged || contractChanged || tokenConfigChanged || approveEnabledChanged || permitEnabledChanged){\n      await this.loadData();\n    }\n\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    if (contractApprovedChanged){\n      if (typeof this.props.contractApproved === 'function'){\n        this.props.contractApproved(this.state.contractApproved);\n      }\n    }\n\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector !== prevState.fastBalanceSelector;\n    if (fastBalanceSelectorChanged || actionChanged){\n      this.setInputValue();\n    }\n\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue;\n    if (inputValueChanged){\n      this.checkButtonDisabled();\n    }\n  }\n\n  changeInputValue = (e,call_callback=true) => {\n    const fastBalanceSelector = null;\n    const inputValue = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n    if (this.state.inputValue !== inputValue){\n      this.setState((prevState) => ({\n        inputValue,\n        fastBalanceSelector\n      }),() => {\n        if (call_callback && typeof this.props.changeInputCallback === 'function'){\n          this.props.changeInputCallback(this.state.inputValue);\n        }\n      });\n    }\n  }\n\n  setInputValue = () => {\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n    const inputValue = this.props.tokenBalance && !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() ? this.functionsUtil.BNify(this.props.tokenBalance).times(selectedPercentage) : null;\n\n    this.setState((prevState) => ({\n      inputValue\n    }),() => {\n      if (typeof this.props.changeInputCallback === 'function'){\n        this.props.changeInputCallback(this.state.inputValue);\n      }\n    });\n  }\n\n  getFastBalanceSelector = () => {\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n    return this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n  }\n\n  showPermitBox(){\n    this.setState({\n      showPermitBox:true\n    });\n  }\n\n  togglePermitEnabled(permitEnabled){\n    this.setState({\n      permitEnabled\n    });\n  }\n\n  setFastBalanceSelector = (fastBalanceSelector) => {\n    this.setState({\n      fastBalanceSelector\n    });\n  }\n\n  checkButtonDisabled = (amount=null) => {\n    if (!amount){\n      amount = this.state.inputValue;\n    }\n    amount = this.functionsUtil.BNify(amount);\n    const buttonDisabled = amount.isNaN() || amount.lte(0) || amount.gt(this.props.tokenBalance);\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  approve = async () => {\n    // Check if the migration contract is approved\n    const contractApproved = await this.checkContractApproved();\n\n    if (!contractApproved){\n\n      const callbackApprove = (tx,error) => {\n        // Send Google Analytics event\n        const eventData = {\n          eventAction: 'approve',\n          eventCategory: 'CurveDeposit',\n          eventLabel: tx ? tx.status : null\n        };\n\n        const txSucceeded = tx && tx.status === 'success';\n\n        if (error){\n          eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n        }\n\n        // Send Google Analytics event\n        if (error || eventData.status !== 'error'){\n          this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n        }\n\n        this.setState((prevState) => ({\n          contractApproved: txSucceeded, // True\n          processing: {\n            ...prevState.processing,\n            txHash:null,\n            loading:false\n          }\n        }));\n\n        if (typeof this.props.callbackApprove === 'function' && txSucceeded){\n          this.props.callbackApprove(tx);\n        }\n      };\n\n      const callbackReceiptApprove = (tx) => {\n        const txHash = tx.transactionHash;\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            txHash\n          }\n        }));\n      };\n\n      // console.log(this.props.tokenConfig.token,this.props.contractInfo.address);\n\n      this.functionsUtil.enableERC20(this.props.tokenConfig.token,this.props.contractInfo.address,callbackApprove,callbackReceiptApprove);\n\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash:null,\n          loading:true\n        },\n        contractApproved:false\n      }));\n    } else {\n      this.setState({\n        contractApproved:true\n      });\n    }\n  }\n\n  executeTx = async () => {\n\n    const inputValue = this.state.inputValue ? this.functionsUtil.BNify(this.state.inputValue) : null;\n    if (!inputValue){\n      return false;\n    }\n\n    const _amount = this.functionsUtil.normalizeTokenAmount(inputValue,this.props.tokenConfig.decimals);\n\n    // console.log('executeTx',params);\n\n    const callback = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventLabel: tx.status,\n        eventCategory: `CurveDeposit`,\n        eventValue: inputValue.toFixed(),\n        eventAction: this.props.tokenConfig.token,\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState({\n        txSucceeded,\n        processing: {\n          txHash:null,\n          loading:false\n        }\n      });\n\n      if (txSucceeded){\n        // Reset input\n        this.changeInputValue({\n          target:{\n            value:0\n          }\n        },false);\n        this.setState({\n          showPermitBox:false\n        });\n        // Call upper component callback\n        if (typeof this.props.callback === 'function'){\n          this.props.callback(tx,_amount,params);\n        }\n      }\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    const contractName = this.props.contractInfo.name;\n\n    let params = null;\n\n    // Check contract approved without permit\n    const contractApproved = await this.checkContractApproved(false);\n\n    const permitEnabled = this.props.permitEnabled && this.state.permitEnabled && !contractApproved;\n    if (permitEnabled){\n      const signedParameters = await this.functionsUtil.signPermit(this.props.tokenConfig.token, this.props.account, contractName);\n      // console.log('signedParameters',signedParameters);\n      if (signedParameters){\n        params = this.props.getPermitTransactionParams(_amount,signedParameters);\n      }\n    } else {\n      params = this.props.getTransactionParams(_amount);\n    }\n\n    if (params){\n      let {\n        methodName,\n        methodParams\n      } = params;\n\n      const value = params.value || null;\n\n      this.props.contractMethodSendWrapper(contractName, methodName, methodParams, value, callback, callbackReceipt);\n\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          loading:true\n        }\n      }));\n    } else {\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          loading:false\n        }\n      }));\n    }\n  }\n\n  cancelTransaction = async () => {\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  async checkContractApproved(checkPermit=true){\n\n    if (checkPermit && this.props.permitEnabled && this.state.permitEnabled){\n      return true;\n    }\n\n    if (this.props.approveEnabled !== undefined && !this.props.approveEnabled){\n      return true;\n    }\n\n    const contractInfo = await this.props.initContract(this.props.contractInfo.name,this.props.contractInfo.address,this.props.contractInfo.abi);\n    if (contractInfo){\n      const contractApproved = await this.functionsUtil.checkTokenApproved(this.props.tokenConfig.token,this.props.contractInfo.address,this.props.account);\n      return contractApproved;\n    }\n    \n    return false;\n  }\n\n  async loadData(){\n    const inputValue = null;\n    const fastBalanceSelector = null;\n    const contractApproved = await this.checkContractApproved();\n    this.setState({\n      inputValue,\n      contractApproved,\n      fastBalanceSelector\n    });\n  }\n\n  approveCallback = () => {\n    this.loadData();\n  }\n\n  render() {\n\n    const viewOnly = this.props.connectorName === 'custom';\n    const action = this.props.action ? this.props.action : 'Deposit';\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'stretch'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          viewOnly ? (\n            <IconBox\n              cardProps={{\n                mt:3\n              }}\n              icon={'Visibility'}\n              text={'You are using Idle in \"Read-Only\" mode.<br />Logout and connect with your wallet to interact.'}\n            />\n          ) : !this.props.account ? (\n            <ConnectBox\n              {...this.props}\n            />\n          ) : this.props.tokenConfig && !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() && this.functionsUtil.BNify(this.props.tokenBalance).gt(0) ? (\n            <Box\n              width={1}\n            >\n              {\n                this.props.infoBox && (\n                  <IconBox\n                    cardProps={{\n                      mb:3\n                    }}\n                    {...this.props.infoBox}\n                  />\n                )\n              }\n              {\n                this.props.steps && this.props.steps.length>0 && (\n                  <DashboardCard\n                    cardProps={{\n                      p:3,\n                      px:[2,4]\n                    }}\n                  >\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                    > \n                      {\n                        this.props.steps.map( (step,stepIndex) => (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            key={`step_${stepIndex}`}\n                          >\n                            <Icon\n                              size={'1.5em'}\n                              name={ step.completed ? 'CheckBox' : step.icon}\n                              color={ step.completed ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                            />\n                            {\n                              step.link ? (\n                                <ExtLink\n                                  ml={2}\n                                  fontSize={2}\n                                  color={'blue'}\n                                  fontWeight={1}\n                                  href={step.link}\n                                  textAlign={'left'}\n                                  hoverColor={'blue'}\n                                >\n                                  {step.description}\n                                </ExtLink>\n                              ) : (\n                                <Text\n                                  ml={2}\n                                  fontSize={2}\n                                  fontWeight={1}\n                                  color={'cellText'}\n                                  textAlign={'left'}\n                                >\n                                  {step.description}\n                                </Text>\n                              )\n                            }\n                          </Flex>\n                        ) )\n                      }\n                    </Flex>\n                  </DashboardCard>\n                )\n              }\n              <Box\n                mt={2}\n                width={1}\n              >\n                {\n                  this.state.showPermitBox && this.props.permitEnabled ? (\n                    <DashboardCard\n                      cardProps={{\n                        py:3,\n                        px:3,\n                        mt:3,\n                        display:'flex',\n                        alignItems:'center',\n                        flexDirection:'column',\n                        justifyContent:'center',\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          name={'Warning'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={1}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Approve and Deposit in a single transaction is supported for this transaction, disable this feature and try again if you can't deposit.\n                        </Text>\n                      </Flex>\n                      <Checkbox\n                        mt={1}\n                        required={false}\n                        checked={this.state.permitEnabled}\n                        label={`Approve and Deposit in a single transaction`}\n                        onChange={ e => this.togglePermitEnabled(e.target.checked) }\n                      />\n                    </DashboardCard>\n                  ) : !this.state.showPermitBox && this.props.permitEnabled && (\n                    <Flex\n                      p={2}\n                      mt={3}\n                      width={1}\n                      borderRadius={2}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'center'}\n                      backgroundColor={'DashboardCard'}\n                      border={`1px solid ${this.props.theme.colors.primary}`}\n                    >\n                      <Link\n                        textAlign={'center'}\n                        hoverColor={'primary'}\n                        onClick={this.showPermitBox.bind(this)}\n                      >\n                        Having trouble with the Permit signature?\n                      </Link>\n                      <Icon\n                        ml={1}\n                        size={'1em'}\n                        name={'Warning'}\n                        color={'primary'}\n                      />\n                    </Flex>\n                  )\n                }\n              </Box>\n              {\n                !this.state.contractApproved ?\n                  this.state.processing.loading ? (\n                    <Flex\n                      mt={3}\n                      flexDirection={'column'}\n                    >\n                      <TxProgressBar\n                        {...this.props}\n                        waitText={`Approve estimated in`}\n                        hash={this.state.processing.txHash}\n                        endMessage={`Finalizing approve request...`}\n                        cancelTransaction={this.cancelTransaction.bind(this)}\n                      />\n                    </Flex>\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'2.3em'}\n                          name={'LockOpen'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          {this.props.approveDescription}\n                        </Text>\n                        <RoundButton\n                          buttonProps={{\n                            mt:3,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.approve.bind(this)}\n                        >\n                          Approve\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  )\n                : this.state.processing.loading ? (\n                  <Flex\n                    mt={3}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      {...this.props}\n                      hash={this.state.processing.txHash}\n                      endMessage={`Finalizing ${action} request...`}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                      waitText={`${this.functionsUtil.capitalize(action)} estimated in`}\n                    />\n                  </Flex>\n                ) : (\n                  <Box\n                    mt={2}\n                    width={1}\n                  >\n                    <Flex\n                      mt={2}\n                      mb={3}\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        mb={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={this.props.balanceSelectorInfo ? 'space-between' : 'flex-end'}\n                      >\n                        {\n                          this.props.balanceSelectorInfo && (\n                            <Flex\n                              width={1}\n                              maxWidth={'50%'}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                            >\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                textAlign={'left'}\n                                style={{\n                                  maxWidth:'100%',\n                                  overflow:'hidden',\n                                  whiteSpace:'nowrap',\n                                  textOverflow:'ellipsis'\n                                }}\n                                color={this.props.balanceSelectorInfo.color ? this.props.balanceSelectorInfo.color : 'copyColor'}\n                              >\n                                {this.props.balanceSelectorInfo.text}\n                              </Text>\n                            </Flex>\n                          )\n                        }\n                        {\n                          !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() && (\n                            <Flex\n                              width={1}\n                              maxWidth={'50%'}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'flex-end'}\n                            >\n                              <Link\n                                fontSize={1}\n                                fontWeight={3}\n                                color={'dark-gray'}\n                                textAlign={'right'}\n                                hoverColor={'copyColor'}\n                                onClick={ (e) => this.setFastBalanceSelector(100) }\n                                style={{\n                                  maxWidth:'100%',\n                                  overflow:'hidden',\n                                  whiteSpace:'nowrap',\n                                  textOverflow:'ellipsis'\n                                }}\n                              >\n                                Balance: {this.functionsUtil.BNify(this.props.tokenBalance).toFixed(this.props.isMobile ? 2 : 4)} {this.props.tokenConfig.token}\n                              </Link>\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                      <Input\n                        min={0}\n                        type={\"number\"}\n                        required={true}\n                        height={'3.4em'}\n                        borderRadius={2}\n                        fontWeight={500}\n                        borderColor={'cardBorder'}\n                        backgroundColor={'cardBg'}\n                        boxShadow={'none !important'}\n                        placeholder={`Insert amount`}\n                        onChange={this.changeInputValue.bind(this)}\n                        border={`1px solid ${this.props.theme.colors.divider}`}\n                        value={this.state.inputValue !== null ? this.functionsUtil.BNify(this.state.inputValue).toFixed() : ''}\n                      />\n                      <Flex\n                        mt={2}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        {\n                          [25,50,75,100].map( percentage => (\n                            <FastBalanceSelector\n                              percentage={percentage}\n                              key={`selector_${percentage}`}\n                              onMouseDown={()=>this.setFastBalanceSelector(percentage)}\n                              isActive={this.state.fastBalanceSelector === parseInt(percentage)}\n                            />\n                          ))\n                        }\n                      </Flex>\n                      <Flex\n                        mt={2}\n                        justifyContent={'center'}\n                      >\n                        <RoundButton\n                          handleClick={this.executeTx.bind(this)}\n                          buttonProps={{\n                            mt:2,\n                            width:[1,1/2],\n                            style:{\n                              textTransform:'capitalize'\n                            },\n                            disabled:this.state.buttonDisabled||this.props.buttonDisabled\n                          }}\n                        >\n                          {this.props.action}\n                        </RoundButton>\n                      </Flex>\n                    </Flex>\n                  </Box>\n                )\n              }\n            </Box>\n          ) : this.props.children\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default SendTxWithBalance;","import ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass LpStaking extends Component {\n\n  state = {\n    stats:[],\n    steps:null,\n    infoBox:null,\n    globalStats:[],\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    balanceProp:null,\n    statsLoaded:false,\n    tokenBalance:null,\n    contractInfo:null,\n    stakedBalance:null,\n    selectedToken:null,\n    rewardMultiplier:1,\n    accountingData:null,\n    selectedAction:null,\n    selectedOption:null,\n    successMessage:null,\n    permitEnabled:false,\n    poolTokenPrice:null,\n    availableTokens:null,\n    approveEnabled:false,\n    rewardTokenPrice:null,\n    contractApproved:false,\n    tokenWrapperProps:null,\n    distributionSpeed:null,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    transactionSucceeded:false,\n    showTokenWrapperEnabled:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.setState({\n      selectedAction:'Stake'\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async componentDidMount(){\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    const contractInfoChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    if (selectedActionChanged || contractApprovedChanged || tokenConfigChanged){\n      this.setState({\n        tokenWrapperProps:null,\n        showTokenWrapperEnabled:false\n      },() => {\n        this.updateData(selectedActionChanged);\n      });\n    }\n\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async changeInputCallback(inputValue=null){\n\n    let infoBox = null;\n\n    if (inputValue && this.functionsUtil.BNify(inputValue).gt(0)){\n      inputValue = this.functionsUtil.BNify(inputValue);\n      switch (this.state.selectedAction){\n        case 'Stake':\n          const userStakedBalance = this.functionsUtil.fixTokenDecimals(this.state.stakedBalance,this.props.tokenConfig.decimals).plus(inputValue);\n          const totalStakedBalance = this.functionsUtil.fixTokenDecimals(this.state.totalStakingShares,this.props.contractInfo.decimals).plus(inputValue);\n          const userTotalStakingShare = userStakedBalance.div(totalStakedBalance);\n          const rewardsPerDay = this.state.distributionSpeed.times(86400).times(userTotalStakingShare);//.times(this.state.distributionSpeedMultiplier);\n\n          const stakedBalanceUSD = userStakedBalance.times(this.state.poolTokenPrice);\n          const rewardsPerYearUSD = rewardsPerDay.times(365).times(this.state.rewardTokenPrice);\n          const apy = stakedBalanceUSD.gt(0) ? rewardsPerYearUSD.div(stakedBalanceUSD).times(100) : this.functionsUtil.BNify(0);\n\n          // console.log(parseFloat(userStakedBalance),parseFloat(this.state.poolTokenPrice),parseFloat(stakedBalanceUSD),parseFloat(rewardsPerDay),parseFloat(this.state.rewardTokenPrice),parseFloat(rewardsPerYearUSD),parseFloat(apy));\n          infoBox = {\n            icon:'FileDownload',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`By staking <strong>${inputValue.toFixed(4)} ${this.props.tokenConfig.token}</strong> you will get <strong>${rewardsPerDay.toFixed(4)} ${this.props.contractInfo.rewardToken} / day</strong> with an average APY of <strong>${apy.toFixed(2)}%</strong><br /><small style=\"color:#ff9900\">assuming you have achieved the maximum reward multiplier</small>`\n          };\n        break;\n        case 'Withdraw':\n          const normalizedInputValue = this.functionsUtil.normalizeTokenAmount(inputValue,this.props.tokenConfig.decimals);\n          let unstakeRewards = await this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unstakeQuery',[normalizedInputValue],{from:this.props.account});\n          unstakeRewards = this.functionsUtil.formatMoney(this.functionsUtil.fixTokenDecimals(unstakeRewards,this.props.tokenConfig.decimals));\n          infoBox = {\n            icon:'FileUpload',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`By unstaking <strong>${inputValue.toFixed(4)} ${this.props.tokenConfig.token}</strong> you will get <strong>${unstakeRewards} ${this.props.contractInfo.rewardToken}</strong>`\n          };\n        break;\n        default:\n        break;\n      }\n    }\n\n    this.setState({\n      infoBox\n    });\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = [];\n    amount = this.functionsUtil.toBN(amount);\n    switch (this.state.selectedAction){\n      case 'Stake':\n        methodName = 'wrapAndStake';\n        methodParams = [amount];\n      break;\n      case 'Withdraw':\n        methodName = 'unstakeAndUnwrap';\n        methodParams = [amount];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  getPermitTransactionParams(amount,signedParameters){\n    let methodName = null;\n    let methodParams = [];\n    const { expiry, r, s, v } = signedParameters;\n    amount = this.functionsUtil.toBN(amount);\n    switch (this.state.selectedAction){\n      case 'Stake':\n        methodName = 'permitWrapAndStakeUnlimited';\n        methodParams = [amount, expiry, v, r, s];\n      break;\n      case 'Withdraw':\n        methodName = 'unstakeAndUnwrap';\n        methodParams = [amount];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async loadStats(){\n    const stats = [];\n\n    const [\n      totalLocked,\n      totalUnlocked,\n      totalStakingShares,\n      unlockScheduleCount,\n      accountingData,\n      collectedRewards\n    ] = await Promise.all([\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalLocked'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalUnlocked'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalStakingShares'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unlockScheduleCount'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'updateAccounting',[],{from:this.props.account}),\n      this.state.stakedBalance.gt(0) ? this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unstakeQuery',[this.functionsUtil.integerValue(this.state.stakedBalance)],{from:this.props.account}) : this.functionsUtil.BNify(0)\n    ]);\n\n    const unlockSchedulesPromises = [];\n    for (let i = 0; i < unlockScheduleCount ; i++){\n      unlockSchedulesPromises.push(this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unlockSchedules',[i]));\n    }\n\n    const unlockSchedules = await Promise.all(unlockSchedulesPromises);\n\n    const totalRewards = this.functionsUtil.fixTokenDecimals(this.functionsUtil.BNify(totalLocked).plus(this.functionsUtil.BNify(totalUnlocked)),this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Total Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(totalRewards))+' '+this.props.contractInfo.rewardToken\n    });\n\n    const totalDeposits = this.functionsUtil.fixTokenDecimals(totalStakingShares,this.props.contractInfo.decimals);\n    stats.push({\n      title:'Total Deposits',\n      value:this.functionsUtil.formatMoney(parseFloat(totalDeposits))+' '+this.props.tokenConfig.token\n    });\n\n    const lockedRewards = this.functionsUtil.fixTokenDecimals(totalLocked,this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Locked Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(lockedRewards))+' '+this.props.contractInfo.rewardToken\n    });\n\n    const unlockedRewards = this.functionsUtil.fixTokenDecimals(totalUnlocked,this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Unlocked Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(unlockedRewards))+' '+this.props.contractInfo.rewardToken\n    });\n\n    const programEndTime = unlockSchedules.length>0 ? unlockSchedules.reduce( (endTime,s) => {\n      endTime = Math.max(s.endAtSec,endTime);\n      return endTime;\n    },parseInt(Date.now()/1000)) : null;\n\n    const programDuration = programEndTime ? `${this.functionsUtil.strToMoment(programEndTime*1000).utc().format('DD MMM, YYYY @ HH:mm')} UTC` : 'None';\n    stats.push({\n      title:'Program End-Date',\n      value:programDuration\n    });\n\n    const distributionSpeed = unlockSchedules.reduce( (distributionSpeed,s) => {\n      if (this.functionsUtil.BNify(s.initialLockedShares).gt(0) && this.functionsUtil.BNify(s.durationSec).gt(0)){\n        const tokensPerSecond = this.functionsUtil.fixTokenDecimals(s.initialLockedShares,this.props.contractInfo.decimals).div(s.durationSec);\n        if (!tokensPerSecond.isNaN()){\n          distributionSpeed = distributionSpeed.plus(tokensPerSecond);\n        }\n      }\n      return distributionSpeed;\n    },this.functionsUtil.BNify(0));\n\n    stats.push({\n      title:'Reward unlock rate',\n      value:this.functionsUtil.formatMoney(distributionSpeed.times(86400))+' '+this.props.contractInfo.rewardToken+' / day'\n    });\n\n    const globalStats = [];\n\n    const stakedBalance = this.functionsUtil.fixTokenDecimals(this.state.stakedBalance,this.props.tokenConfig.decimals);\n    const stakingShare = stakedBalance.div(totalDeposits); // accountingData && accountingData[2] && this.functionsUtil.BNify(accountingData[3]).gt(0) ? this.functionsUtil.BNify(accountingData[2]).div(this.functionsUtil.BNify(accountingData[3])) : this.functionsUtil.BNify(0);\n\n    const rewardMultiplier = accountingData && this.functionsUtil.BNify(accountingData[4]).gt(0) ? this.functionsUtil.BNify(Math.max(1,parseFloat(this.functionsUtil.BNify(collectedRewards).div(this.functionsUtil.BNify(accountingData[4])).times(this.props.contractInfo.maxMultiplier)))) : this.functionsUtil.BNify(1);\n\n    const distributionSpeedMultiplier = this.functionsUtil.BNify(1).div(this.props.contractInfo.maxMultiplier).times(rewardMultiplier);\n    const userDistributionSpeed = distributionSpeed.times(stakingShare).times(distributionSpeedMultiplier);\n    const rewardsPerDay = userDistributionSpeed.times(86400);\n\n    // console.log(parseFloat(this.functionsUtil.BNify(collectedRewards)),parseFloat(this.functionsUtil.BNify(accountingData[4])),this.props.contractInfo.maxMultiplier,parseFloat(this.functionsUtil.BNify(collectedRewards).div(this.functionsUtil.BNify(accountingData[4])).times(this.props.contractInfo.maxMultiplier)),parseFloat(rewardMultiplier));\n\n    // globalStats.push({\n    //   title:'Distribution rate',\n    //   description:'Your daily rewards distribution based on your current multiplier',\n    //   value:this.functionsUtil.formatMoney(rewardsPerDay)+' '+this.props.contractInfo.rewardToken+' / day',\n    // });\n\n    const stakedBalanceUSD = stakedBalance.times(this.state.poolTokenPrice);\n    const rewardsPerYearUSD = rewardsPerDay.times(365).times(this.state.rewardTokenPrice);\n    const apy = stakedBalanceUSD.gt(0) ? rewardsPerYearUSD.div(stakedBalanceUSD).times(100) : this.functionsUtil.BNify(0);\n\n    // console.log(parseFloat(this.state.stakedBalance),parseFloat(this.state.poolTokenPrice),parseFloat(stakedBalanceUSD),parseFloat(rewardsPerDay),parseFloat(this.state.rewardTokenPrice),parseFloat(rewardsPerYearUSD),parseFloat(apy));\n\n    globalStats.push({\n      title:'APY',\n      value:`${apy.toFixed(2)}%`,\n      description:'Annualized rewards based on your current multiplier',\n    });\n\n    globalStats.push({\n      title:'Share',\n      value:`${stakingShare.times(100).toFixed(2)}%`,\n      description:'Your share of the total deposits',\n    });\n\n    globalStats.push({\n      title:'Multiplier',\n      value:`${rewardMultiplier.toFixed(2)}x`,\n      description:`Deposit liquidity tokens for ${this.props.contractInfo.maxBonusDays} days to achieve a ${this.props.contractInfo.maxMultiplier}x reward multiplier`\n    });\n\n    const currentRewards = this.functionsUtil.formatMoney(this.functionsUtil.fixTokenDecimals(collectedRewards,this.props.tokenConfig.decimals));\n    globalStats.push({\n      title:'Rewards',\n      value:currentRewards+' '+this.props.contractInfo.rewardToken,\n      description:'Your share of the total unlocked reward pool. Larger your deposit and for longer, higher your share'\n    });\n\n    console.log('loadStats',stats,globalStats);\n\n    const statsLoaded = true;\n\n    this.setState({\n      stats,\n      statsLoaded,\n      globalStats,\n      stakingShare,\n      totalRewards,\n      accountingData,\n      rewardMultiplier,\n      distributionSpeed,\n      totalStakingShares,\n      userDistributionSpeed,\n      distributionSpeedMultiplier\n    });\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    // console.log('transactionSucceeded',tx);\n    let infoBox = null;\n    switch (this.state.selectedAction){\n      case 'Stake':\n        const stakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const stakedTokens = stakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(stakedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully staked <strong>${stakedTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n        }\n      break;\n      case 'Withdraw':\n        const unstakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() ) : null;\n        const unstakedTokens = unstakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(unstakedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.props.contractInfo.rewardToken]);\n        const receivedRewardsLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => (log.address.toLowerCase() === rewardTokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) )) ) : null;\n        const receivedRewards = receivedRewardsLog ? this.functionsUtil.fixTokenDecimals(parseInt(receivedRewardsLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully withdrawn <strong>${unstakedTokens.toFixed(4)} ${this.props.selectedToken}</strong> and received <strong>${receivedRewards.toFixed(4)} ${this.props.contractInfo.rewardToken}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    const transactionSucceeded = true;\n\n    this.setState({\n      infoBox,\n      transactionSucceeded\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async updateData(selectedActionChanged=false){\n    const newState = {};\n\n    const DAITokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens','DAI']);\n    const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.contractInfo.rewardToken]);\n\n    const [\n      poolTokenPrice,\n      rewardTokenPrice,\n      tokenBalance,\n      stakedBalance,\n    ] = await Promise.all([\n      this.functionsUtil.getSushiswapPoolTokenPrice(this.props.selectedToken),\n      this.functionsUtil.getSushiswapConversionRate(DAITokenConfig,rewardTokenConfig),\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalStakedFor',[this.props.account]),\n    ]);\n\n    newState.balanceProp = this.functionsUtil.BNify(0);\n    newState.tokenBalance = !this.functionsUtil.BNify(tokenBalance).isNaN() ? this.functionsUtil.BNify(tokenBalance) : this.functionsUtil.BNify(0);\n    newState.stakedBalance = !this.functionsUtil.BNify(stakedBalance).isNaN() ? this.functionsUtil.BNify(stakedBalance) : this.functionsUtil.BNify(0);\n    newState.poolTokenPrice = !this.functionsUtil.BNify(poolTokenPrice).isNaN() ? this.functionsUtil.BNify(poolTokenPrice) : this.functionsUtil.BNify(0);\n    newState.rewardTokenPrice = !this.functionsUtil.BNify(rewardTokenPrice).isNaN() ? this.functionsUtil.BNify(rewardTokenPrice) : this.functionsUtil.BNify(0);\n\n    switch (this.state.selectedAction){\n      case 'Stake':\n        newState.permitEnabled = true;\n        newState.approveEnabled = true;\n        newState.balanceProp = newState.tokenBalance;\n        newState.approveDescription = 'Approve the Staking contract to stake your LP tokens';\n        newState.tokenWrapperProps = {\n          startContract:{\n            name:'ETH',\n            token:'ETH',\n            decimals:18,\n            wrapMethod:'deposit',\n          },\n          destContract:{\n            unwrapMethod:'withdraw',\n            ...this.props.tokenConfig\n          },\n        };\n      break;\n      case 'Withdraw':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = this.functionsUtil.fixTokenDecimals(newState.stakedBalance,this.props.tokenConfig.decimals);\n        newState.tokenWrapperProps = {\n          startContract:{\n            name:'ETH',\n            token:'ETH',\n            decimals:18,\n            wrapMethod:'deposit',\n          },\n          destContract:{\n            unwrapMethod:'withdraw',\n            ...this.props.tokenConfig\n          },\n        };\n      break;\n      default:\n      break;\n    }\n\n    if (newState.balanceProp.lte(0)){\n      newState.showTokenWrapperEnabled = true;\n    }\n\n    if (selectedActionChanged){\n      newState.infoBox = null;\n      newState.transactionSucceeded = false;\n    }\n\n    console.log('updateData',this.state.selectedAction,newState);\n\n    this.setState(newState,() => {\n      this.loadStats();\n    });\n  }\n\n  render() {\n\n    const StatsCard = props => {\n      const cardProps = {\n        p:3,\n        mb:2,\n        width:'49%',\n        ...props.cardProps\n      };\n      return (\n        <DashboardCard\n          title={props.title}\n          cardProps={cardProps}\n          titleProps={{\n            fontSize:1,\n            fontWeight:3,\n          }}\n          titleParentProps={{\n            mt:0,\n            ml:0\n          }}\n          description={props.description}\n        >\n          <Text\n            mt={1}\n            fontSize={[2,3]}\n            color={'statValue'}\n            {...props.textProps}\n          >\n            {props.value}\n          </Text>\n        </DashboardCard>\n      );\n    };\n\n    const isStake = this.state.selectedAction === 'Stake';\n    const isUnstake = this.state.selectedAction === 'Withdraw';\n    const isStats = this.state.selectedAction === 'Stats';\n    const txAction = this.state.selectedAction;\n\n    return (\n      <Box\n        width={1}\n      >\n      {\n        this.props.tokenConfig && this.props.tokenConfig.poolLink && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Pool link:\n            </Text>\n            <ExtLink\n              mt={1}\n              color={'link'}\n              hoverColor={'link'}\n              href={this.props.tokenConfig.poolLink}\n            >\n              <Text\n                color={'link'}\n                style={{\n                  maxWidth:'100%',\n                  overflow:'hidden',\n                  whiteSpace:'nowrap',\n                  textOverflow:'ellipsis'\n                }}\n              >\n                {this.props.tokenConfig.poolLink}\n              </Text>\n            </ExtLink>\n          </Box>\n        )\n      }\n      {\n        this.state.stakedBalance && this.functionsUtil.BNify(this.state.stakedBalance).gt(0) && this.state.globalStats.length>0 && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Your Stats:\n            </Text>\n            <Flex\n              mt={1}\n              width={1}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.globalStats.map( (statInfo,index) =>\n                  <StatsCard\n                    key={`globalStats_${index}`}\n                    cardProps={{\n                      mb:[2,0],\n                      mr:[0,index<this.state.globalStats.length-1 ? 1 : 0],\n                      width:[1,'100%']\n                    }}\n                    textProps={{\n                      fontSize:[1,2]\n                    }}\n                    {...statInfo}\n                  />\n                )\n              }\n            </Flex>\n          </Box>\n        )\n      }\n      {\n        this.props.selectedToken && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text mb={1}>\n              Select Action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isStake ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Stake'}\n                imageSrc={'images/mint.svg'}\n                isMobile={this.props.isMobile}\n                // subcaption={'stake LP Tokens'}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isStake}\n                handleClick={ e => this.setAction('Stake') }\n              />\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isUnstake ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Withdraw'}\n                imageSrc={'images/upload.svg'}\n                isMobile={this.props.isMobile}\n                // subcaption={'withdraw LP tokens'}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isUnstake}\n                handleClick={ e => this.setAction('Withdraw') }\n              />\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isStats ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Stats'}\n                imageSrc={'images/stats.svg'}\n                // subcaption={'view some stats'}\n                isMobile={this.props.isMobile}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isStats}\n                handleClick={ e => this.setAction('Stats') }\n              />\n            </Flex>\n            {\n              (isStake || isUnstake) ?\n                (this.props.tokenConfig && this.state.balanceProp && this.state.statsLoaded && this.props.contractInfo ? (\n                  <Box\n                    mt={1}\n                    width={1}\n                    mb={[4,3]}\n                  >\n                    <SendTxWithBalance\n                      error={null}\n                      {...this.props}\n                      action={txAction}\n                      steps={this.state.steps}\n                      infoBox={this.state.infoBox}\n                      tokenConfig={this.props.tokenConfig}\n                      tokenBalance={this.state.balanceProp}\n                      contractInfo={this.props.contractInfo}\n                      permitEnabled={this.state.permitEnabled}\n                      approveEnabled={this.state.approveEnabled}\n                      callback={this.transactionSucceeded.bind(this)}\n                      approveDescription={this.state.approveDescription}\n                      contractApproved={this.contractApproved.bind(this)}\n                      balanceSelectorInfo={this.state.balanceSelectorInfo}\n                      changeInputCallback={this.changeInputCallback.bind(this)}\n                      getTransactionParams={this.getTransactionParams.bind(this)}\n                      getPermitTransactionParams={this.getPermitTransactionParams.bind(this)}\n                    >\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            name={'MoneyOff'}\n                            color={'cellText'}\n                            size={this.props.isMobile ? '1.8em' : '2.3em'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            {\n                              isStake ? (\n                                `You don't have any ${this.props.selectedToken} in your wallet.`\n                              ) : isUnstake && (\n                                `You don't have any staked ${this.props.selectedToken} to withdraw.`\n                              )\n                            }\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    </SendTxWithBalance>\n                  </Box>\n                ) : (\n                  <Flex\n                    mt={3}\n                    mb={3}\n                    width={1}\n                  >\n                    <FlexLoader\n                      flexProps={{\n                        flexDirection:'row'\n                      }}\n                      loaderProps={{\n                        size:'30px'\n                      }}\n                      textProps={{\n                        ml:2\n                      }}\n                      text={'Loading info...'}\n                    />\n                  </Flex>\n                )\n              ) : isStats && (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  width={1}\n                  style={{\n                    flexWrap:'wrap'\n                  }}\n                  justifyContent={'space-between'}\n                >\n                  {\n                    (!this.state.stats || !this.state.stats.length) ? (\n                      <Flex\n                        mt={3}\n                        mb={3}\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading stats...'}\n                        />\n                      </Flex>\n                    ) : this.state.stats.map( (statInfo,index) =>\n                      <StatsCard\n                        key={`stats_${index}`}\n                        cardProps={{\n                          width:[1,'49%']\n                        }}\n                        {...statInfo}\n                      />\n                    )\n                  }\n                </Flex>\n              )\n            }\n          </Box>\n        )\n      }\n      </Box>\n    );\n  }\n}\n\nexport default LpStaking;","import ExtLink from '../ExtLink/ExtLink';\nimport IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport { Flex, Box, Text, Icon, Input, Button } from \"rimble-ui\";\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\n\nclass IdleStaking extends Component {\n\n  state = {\n    stats:[],\n    steps:null,\n    infoBox:null,\n    globalStats:[],\n    lockPeriods:[\n      {\n        value:7,\n        type:'day',\n        label:'1 week'\n      },\n      {\n        value:1,\n        type:'month',\n        label:'1 month'\n      },\n      {\n        value:1,\n        type:'year',\n        label:'1 year'\n      },\n      {\n        value:4,\n        type:'year',\n        label:'4 years'\n      },\n    ],\n    lockedEnd:null,\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    balanceProp:null,\n    lockExpired:false,\n    statsLoaded:false,\n    tokenBalance:null,\n    contractInfo:null,\n    stakedBalance:null,\n    selectedToken:null,\n    rewardMultiplier:1,\n    accountingData:null,\n    increaseAction:null,\n    selectedAction:null,\n    selectedOption:null,\n    successMessage:null,\n    permitEnabled:false,\n    poolTokenPrice:null,\n    lockPeriodInput:null,\n    buttonDisabled:false,\n    internalInfoBox:null,\n    availableTokens:null,\n    approveEnabled:false,\n    rewardTokenPrice:null,\n    contractApproved:false,\n    tokenWrapperProps:null,\n    distributionSpeed:null,\n    distributedRewards:null,\n    selectedLockPeriod:null,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    lockPeriodTimestamp:null,\n    transactionSucceeded:false,\n    showTokenWrapperEnabled:false,\n    lockEndDateIsMaxEndDate:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.setState({\n      selectedAction:'Lock'\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async componentDidMount(){\n    const feeDistributorConfig = this.props.tokenConfig.feeDistributor;\n    await this.props.initContract(feeDistributorConfig.name,feeDistributorConfig.address,feeDistributorConfig.abi);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    const contractInfoChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    if (selectedActionChanged || accountChanged || contractApprovedChanged || tokenConfigChanged){\n      const increaseAction = selectedActionChanged ? null : this.state.increaseAction;\n      this.setState({\n        increaseAction,\n        tokenWrapperProps:null,\n        showTokenWrapperEnabled:false,\n      },() => {\n        this.updateData(selectedActionChanged);\n      });\n    }\n\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n\n    const lockPeriodChanged = prevState.lockPeriodTimestamp !== this.state.lockPeriodTimestamp;\n    const increaseActionChanged = prevState.increaseAction !== this.state.increaseAction;\n    if (lockPeriodChanged || increaseActionChanged || selectedActionChanged){\n      if (increaseActionChanged){\n        this.setState({\n          internalInfoBox:null\n        });\n      } else if (lockPeriodChanged){\n        this.calculateStkIDLEAmount();\n      }\n      this.checkButtonDisabled();\n    }\n  }\n\n  checkButtonDisabled(){\n    let buttonDisabled = false;\n    const minDate = this.state.lockedEnd ? this.functionsUtil.strToMoment(this.state.lockedEnd*1000).add(7,'day') : this.functionsUtil.strToMoment().add(7,'day');\n    const mDate = this.functionsUtil.strToMoment(this.state.lockPeriodTimestamp*1000);\n    const maxDate = this.functionsUtil.strToMoment().add(4,'year');\n    switch (this.state.selectedAction){\n      default:\n      case 'Lock':\n        buttonDisabled = mDate.isAfter(maxDate) || mDate.isSameOrBefore(minDate);\n      break;\n      case 'Increase Lock':\n        if (this.state.increaseAction === 'time'){\n          buttonDisabled = mDate.isAfter(maxDate) || mDate.isSameOrBefore(minDate);\n        }\n      break;\n    }\n\n    // console.log('checkButtonDisabled',this.state.selectedAction,this.state.increaseAction,buttonDisabled);\n\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  async changeInputCallback(inputValue=null){\n    inputValue = this.functionsUtil.BNify(inputValue);\n    this.setState({\n      inputValue\n    },() => {\n      this.calculateStkIDLEAmount();\n    });\n  }\n\n  calculateStkIDLEAmount(){\n    let internalInfoBox = null;\n    if (this.state.inputValue && this.functionsUtil.BNify(this.state.inputValue).gt(0) && this.state.lockPeriodTimestamp !== null){\n      switch (this.state.selectedAction){\n        case 'Lock':\n          const currTime = parseInt(Date.now()/1000);\n          const maxDate = this.functionsUtil.strToMoment().add(4,'year');\n          let endDate = this.functionsUtil.strToMoment(this.state.lockPeriodTimestamp*1000);\n          if (endDate.isAfter(maxDate)){\n            endDate = maxDate;\n          }\n          const endDateTime = parseInt(endDate._d.getTime()/1000)-currTime;\n          const maxDateTime = parseInt(maxDate._d.getTime()/1000)-currTime;\n          const stkIDLEAmount = this.state.inputValue.times(endDateTime).div(maxDateTime);\n\n          const percentage = stkIDLEAmount.div(this.state.inputValue).times(100);\n\n          // console.log(this.state.inputValue.toString(),endDate.format('YYYY-MM-DD HH:mm:ss'),maxDate.format('YYYY-MM-DD HH:mm:ss'),endDateTime,maxDateTime,stkIDLEAmount.toFixed());\n\n          let text = `By staking <strong>${this.state.inputValue.toFixed(4)} ${this.props.selectedToken}</strong> until <strong>${endDate.utc().format('YYYY-MM-DD HH:mm')} UTC</strong> you will get back <strong>${stkIDLEAmount.toFixed(4)} ${this.props.tokenConfig.contract.name}</strong> (${Math.ceil(percentage)}%).`;\n          if (Math.ceil(percentage)<100){\n            text += `<br />Stake your tokens for <strong>4 years</strong> to reach the maximum staking power.`;\n          }\n          text += `<br /><span style=\"color:${this.props.theme.colors.alert};font-size:14px\">Keep in mind that once you lock ${this.props.selectedToken} you cannot reverse the operation until the lock end date has been reached.</span>`;\n          internalInfoBox = {\n            text,\n            icon:'LockOutline',\n            iconProps:{\n              color:'cellText'\n            },\n          };\n        break;\n        default:\n        break;\n      }\n    }\n    this.setState({\n      internalInfoBox\n    });\n  }\n\n  getIncreaseTimeParams(){\n    const _unlock_time = parseInt(this.state.lockPeriodTimestamp);\n    // console.log('getIncreaseTimeParams',_unlock_time);\n    return [_unlock_time];\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = [];\n    const _value = this.functionsUtil.toBN(amount);\n    const _unlock_time = parseInt(this.state.lockPeriodTimestamp);\n    switch (this.state.selectedAction){\n      case 'Lock':\n        methodName = 'create_lock';\n        methodParams = [_value,_unlock_time];\n        // console.log('getTransactionParams',methodName,methodParams);\n      break;\n      case 'Increase Lock':\n        methodName = 'increase_amount';\n        methodParams = [_value];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async loadStats(){\n\n    const stats = [];\n    const globalStats = [];\n    const statsLoaded = true;\n\n    let [\n      etherscanRewardsTxs,\n      tokenTotalSupply,\n      totalSupply,\n      claimableRewards,\n      lockedInfo,\n      tokenUserBalance,\n      claimable,\n      claimEvents,\n      checkpointEvents,\n      depositEvents,\n    ] = await Promise.all([\n      this.functionsUtil.getIdleStakingRewardsTxs(),\n      this.functionsUtil.getTokenTotalSupply(this.props.contractInfo.name),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'supply'),\n      this.functionsUtil.getTokenBalance(this.props.contractInfo.rewardToken,this.props.tokenConfig.feeDistributor.address),\n      this.props.account ? this.functionsUtil.genericContractCall(this.props.contractInfo.name,'locked',[this.props.account]) : null,\n      this.props.account ? this.functionsUtil.getContractBalance(this.props.contractInfo.name,this.props.account) : this.functionsUtil.BNify(0),\n      this.props.account ? this.functionsUtil.genericContractCall(this.props.tokenConfig.feeDistributor.name,'claim',[this.props.account]) : this.functionsUtil.BNify(0),\n      this.functionsUtil.getContractEvents(this.props.tokenConfig.feeDistributor.name,'Claimed',{fromBlock: this.props.tokenConfig.feeDistributor.fromBlock, toBlock:'latest'}),\n      this.functionsUtil.getContractEvents(this.props.tokenConfig.feeDistributor.name,'CheckpointToken',{fromBlock: this.props.tokenConfig.feeDistributor.fromBlock, toBlock:'latest'}),\n      this.props.account ? this.functionsUtil.getContractEvents(this.props.contractInfo.name,'Deposit',{fromBlock: this.props.contractInfo.fromBlock, toBlock:'latest',filter:{provider:this.props.account}}) : []\n    ]);\n\n    const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.props.contractInfo.rewardToken]);\n\n    const distributedRewards = etherscanRewardsTxs.map( tx => (\n      {\n        hash:tx.hash,\n        tokenName:tx.tokenSymbol,\n        amount:this.functionsUtil.fixTokenDecimals(tx.value,rewardTokenConfig.decimals),\n        date:this.functionsUtil.strToMoment(parseInt(tx.timeStamp)*1000).utc().format('YYYY-MM-DD HH:mm')+' UTC'\n      }\n    ));\n\n    tokenUserBalance = this.functionsUtil.fixTokenDecimals(tokenUserBalance,this.props.contractInfo.decimals);\n\n    const totalDeposits = this.functionsUtil.fixTokenDecimals(totalSupply,this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Total Locked Funds',\n      value:this.functionsUtil.formatMoney(totalDeposits,4)+' '+this.props.selectedToken\n    });\n\n    tokenTotalSupply = this.functionsUtil.fixTokenDecimals(tokenTotalSupply,this.props.contractInfo.decimals);\n    stats.push({\n      title:`${this.props.contractInfo.name} Total Supply`,\n      value:this.functionsUtil.formatMoney(tokenTotalSupply,4)+' '+this.props.contractInfo.name\n    });\n\n    stats.push({\n      title:'Claimable Rewards',\n      value:this.functionsUtil.formatMoney(claimableRewards,4)+' '+this.props.contractInfo.rewardToken\n    });\n\n    const totalClaimed = claimEvents.reduce( (totalClaimed,event) => {\n      const claimedAmount = this.functionsUtil.fixTokenDecimals(event.returnValues.amount,rewardTokenConfig.decimals);\n      totalClaimed = totalClaimed.plus(claimedAmount);\n      return totalClaimed;\n    },this.functionsUtil.BNify(0));\n    const totalRewards = totalClaimed.plus(claimableRewards);\n    stats.push({\n      title:'Total Rewards',\n      value:this.functionsUtil.formatMoney(totalRewards,4)+' '+this.props.contractInfo.rewardToken\n    });\n\n    const stakedBalance = lockedInfo && lockedInfo.amount ? this.functionsUtil.fixTokenDecimals(lockedInfo.amount,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const userDeposited = this.functionsUtil.formatMoney(stakedBalance,4);\n    globalStats.push({\n      title:'Total Deposited',\n      description:'Your total deposited amount',\n      value:userDeposited+' '+this.props.contractInfo.rewardToken,\n    });\n\n    const stakingShare = tokenUserBalance.div(tokenTotalSupply);\n    globalStats.push({\n      title:'Share',\n      value:`${stakingShare.times(100).toFixed(2)}%`,\n      description:'Your share of the total deposits',\n    });\n\n    globalStats.push({\n      title:`${this.props.contractInfo.name} balance`,\n      value:`${this.functionsUtil.formatMoney(tokenUserBalance,4)} ${this.props.contractInfo.name}`,\n    });\n    \n    claimable = this.functionsUtil.fixTokenDecimals(claimable,this.props.tokenConfig.decimals);\n    const currentRewards = this.functionsUtil.formatMoney(claimable,4);\n    globalStats.push({\n      title:'Claimable Rewards',\n      value:`${currentRewards} ${this.props.contractInfo.rewardToken}`,\n      // description:'Your claimable rewards'\n    });\n\n    let stakeStartTime = depositEvents.reduce( (stakedTime,event) => {\n      const depositTimestamp = this.functionsUtil.BNify(event.returnValues.ts);\n      const depositValue = this.functionsUtil.fixTokenDecimals(event.returnValues.value,this.props.tokenConfig.decimals);\n      if (depositValue.gt(0)){\n        stakedTime = stakedTime.plus(depositValue.times(depositTimestamp));\n        // console.log(depositTimestamp.toString(),depositValue.toFixed(),stakedTime.toString());\n      }\n      return stakedTime;\n    },this.functionsUtil.BNify(0));\n\n    stakeStartTime = stakedBalance.gt(0) ? Math.ceil(stakeStartTime.div(stakedBalance)) : 0;\n    const latestCheckpoint = checkpointEvents.length ? checkpointEvents[checkpointEvents.length-1] : null;\n    const lastCheckpointTime = latestCheckpoint ? this.functionsUtil.BNify(latestCheckpoint.returnValues.time) : this.functionsUtil.BNify(parseInt(Date.now()/1000));\n    const stakePeriod = lastCheckpointTime.minus(stakeStartTime);\n\n    const currentProfit = stakedBalance.gt(0) ? claimable.div(stakedBalance) : this.functionsUtil.BNify(0);\n    const apr = stakePeriod.gt(0) ? currentProfit.times(this.functionsUtil.getGlobalConfig(['network','secondsPerYear'])).div(stakePeriod).times(100) : this.functionsUtil.BNify(0);\n    // console.log('APR',apr.toFixed(),currentProfit.toFixed(),stakePeriod.toFixed(),claimable.toFixed(),stakedBalance.toFixed());\n    globalStats.push({\n      title:'APR',\n      value:`${apr.toFixed(2)}%`,\n      description:'APR is based on your Claimable Rewards and Total Deposited'\n    });\n\n    const lockEndDate = this.state.lockedEnd ? this.functionsUtil.strToMoment(this.state.lockedEnd*1000).utc().format('YYYY/MM/DD HH:mm') : '';\n    globalStats.push({\n      value:lockEndDate,\n      title:'Lock End Date (UTC)',\n      description:'Ending date of your Lock'\n    });\n\n    this.setState({\n      stats,\n      claimable,\n      globalStats,\n      statsLoaded,\n      stakedBalance,\n      distributedRewards\n    });\n  }\n\n  async contractApprovedCallback(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  setIncreaseAction(increaseAction){\n    this.setState({\n      increaseAction\n    });\n  }\n\n  changelockPeriodInput(e){\n    const selectedLockPeriod = null;\n    const lockPeriodInput = e.target.value;\n    const currDate = this.functionsUtil.strToMoment();\n    const mDate = this.functionsUtil.strToMoment(lockPeriodInput+' '+currDate.format('HH:mm:ss'),'YYYY-MM-DD HH:mm:ss').add(1,'second');\n    if (mDate.isValid()){\n      const lockPeriodTimestamp = parseInt(mDate._d.getTime()/1000);\n      // console.log('changelockPeriodInput',lockPeriodTimestamp);\n      this.setState({\n        lockPeriodInput,\n        selectedLockPeriod,\n        lockPeriodTimestamp\n      });\n    }\n  }\n\n  selectLockPeriod(selectedLockPeriod){\n    const minDate = this.state.lockedEnd ? this.functionsUtil.strToMoment(this.state.lockedEnd*1000) : this.functionsUtil.strToMoment();\n    const maxDate = this.functionsUtil.strToMoment().add(4,'year');\n    let mDate = minDate.add(selectedLockPeriod.value,selectedLockPeriod.type).add(1,'second');\n\n    // Check if after 4 years from now\n    if (mDate.isAfter(maxDate)){\n      mDate = maxDate;\n    }\n\n    const lockPeriodInput = mDate.format('YYYY-MM-DD');\n    const lockPeriodTimestamp = parseInt(mDate._d.getTime()/1000);\n\n    // console.log('selectLockPeriod',lockPeriodInput,lockPeriodTimestamp);\n\n    this.setState({\n      lockPeriodInput,\n      selectedLockPeriod,\n      lockPeriodTimestamp\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    // console.log('transactionSucceeded',tx);\n    let infoBox = null;\n    let internalInfoBox = null;\n    switch (this.state.selectedAction){\n      case 'Lock':\n        const lockedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const lockedTokens = lockedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(lockedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        internalInfoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully locked <strong>${lockedTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n        }\n      break;\n      case 'Increase Lock':\n        switch (this.state.increaseAction){\n          case 'time':\n            internalInfoBox = {\n              icon:'DoneAll',\n              iconProps:{\n                color:this.props.theme.colors.transactions.status.completed\n              },\n              text:`You have successfully increased the lock until <strong>${this.functionsUtil.strToMoment(this.state.lockPeriodTimestamp*1000).utc().format('YYYY/MM/DD HH:mm')} UTC</strong>`\n            }\n          break;\n          case 'amount':\n            const increaseAmountTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n            const increaseTokens = increaseAmountTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(increaseAmountTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n            internalInfoBox = {\n              icon:'DoneAll',\n              iconProps:{\n                color:this.props.theme.colors.transactions.status.completed\n              },\n              text:`You have successfully increased the lock by <strong>${increaseTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n            }\n          break;\n          default:\n          break;\n        }\n      break;\n      case 'Withdraw':\n        const unstakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() ) : null;\n        const unstakedTokens = unstakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(unstakedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        internalInfoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully withdrawn <strong>${unstakedTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n        }\n      break;\n      case 'Claim':\n        const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.props.contractInfo.rewardToken]);\n        const receivedRewardsLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => (log.address.toLowerCase() === rewardTokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) )) ) : null;\n        const receivedRewards = receivedRewardsLog ? this.functionsUtil.fixTokenDecimals(parseInt(receivedRewardsLog.data,16),rewardTokenConfig.decimals) : this.functionsUtil.BNify(0);\n        internalInfoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully claimed <strong>${receivedRewards.toFixed(4)} ${this.props.contractInfo.rewardToken}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    const transactionSucceeded = true;\n\n    this.setState({\n      infoBox,\n      internalInfoBox,\n      transactionSucceeded\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async updateData(selectedActionChanged=false){\n    const newState = {};\n\n    // const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.contractInfo.rewardToken]);\n\n    const [\n      tokenBalance,\n      lockedEnd,\n    ] = await Promise.all([\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'locked__end',[this.props.account])\n    ]);\n\n    newState.lockedEnd = lockedEnd && parseInt(lockedEnd)>0 ? parseInt(lockedEnd) : null;\n    newState.lockExpired = newState.lockedEnd && newState.lockedEnd<=parseInt(Date.now()/1000);\n    newState.tokenBalance = !this.functionsUtil.BNify(tokenBalance).isNaN() ? this.functionsUtil.BNify(tokenBalance) : this.functionsUtil.BNify(0);\n\n    let selectedAction = this.state.selectedAction;\n\n    if (selectedAction==='Withdraw' && !newState.lockExpired){\n      selectedAction = 'Lock';\n      newState.selectedAction = selectedAction;\n    }\n\n    // Select Increase if already created a lock\n    if (newState.lockedEnd && selectedAction==='Lock'){\n      selectedAction = 'Increase Lock';\n      newState.increaseAction = 'time';\n      newState.selectedAction = selectedAction;\n    } else if (selectedAction==='Increase Lock' && !newState.increaseAction && !this.state.increaseAction){\n      newState.increaseAction = 'time';\n    }\n\n    // Select Withdraw if the lock has expired\n    if (selectedAction==='Increase Lock' && newState.lockExpired){\n      selectedAction = 'Withdraw';\n      newState.selectedAction = selectedAction;\n    }\n\n    switch (selectedAction){\n      case 'Lock':\n        newState.permitEnabled = false;\n        newState.approveEnabled = true;\n        newState.balanceProp = newState.tokenBalance;\n        newState.approveDescription = `Approve the Staking contract to stake your ${this.props.selectedToken} tokens`;\n      break;\n      case 'Increase Lock':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = newState.tokenBalance;\n        newState.lockPeriodInput = this.functionsUtil.strToMoment(newState.lockedEnd*1000).format('YYYY-MM-DD');\n      break;\n      case 'Withdraw':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = this.functionsUtil.fixTokenDecimals(newState.stakedBalance,this.props.tokenConfig.decimals);\n      break;\n      default:\n      break;\n    }\n\n    if (selectedActionChanged){\n      newState.infoBox = null;\n      newState.internalInfoBox = null;\n      newState.transactionSucceeded = false;\n    }\n\n    const maxDate = this.functionsUtil.strToMoment().add(4,'year').format('YYYY-MM-DD');\n    newState.lockEndDateIsMaxEndDate = newState.lockedEnd ? this.functionsUtil.strToMoment(newState.lockedEnd*1000).format('YYYY-MM-DD')===maxDate : false;\n\n    // console.log('lockEndDateIsMaxEndDate',newState.lockEndDateIsMaxEndDate,maxDate,this.functionsUtil.strToMoment(newState.lockedEnd*1000).format('YYYY-MM-DD'));\n\n    this.setState(newState,() => {\n      this.loadStats();\n    });\n  }\n\n  render() {\n\n    const StatsCard = props => {\n      const cardProps = {\n        p:3,\n        mb:2,\n        width:'49%',\n        ...props.cardProps\n      };\n      return (\n        <DashboardCard\n          title={props.title}\n          cardProps={cardProps}\n          titleProps={{\n            fontSize:1,\n            fontWeight:3,\n          }}\n          titleParentProps={{\n            mt:0,\n            ml:0\n          }}\n          description={props.description}\n        >\n          <Text\n            mt={1}\n            fontSize={[2,3]}\n            color={'statValue'}\n            {...props.textProps}\n          >\n            {props.value}\n          </Text>\n        </DashboardCard>\n      );\n    };\n\n    const isLock = this.state.selectedAction === 'Lock';\n    const isStats = this.state.selectedAction === 'Stats';\n    const isClaim = this.state.selectedAction === 'Claim';\n    const isUnstake = this.state.selectedAction === 'Withdraw';\n    const isIncrease = this.state.selectedAction === 'Increase Lock';\n    const txAction = this.state.selectedAction;\n    const canIncrease = !this.state.lockExpired;\n\n    return (\n      <Box\n        width={1}\n      >\n      {\n        this.props.tokenConfig && this.props.tokenConfig.poolLink && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Token link:\n            </Text>\n            <ExtLink\n              mt={1}\n              color={'link'}\n              hoverColor={'link'}\n              href={this.props.tokenConfig.poolLink}\n            >\n              <Text\n                color={'link'}\n                style={{\n                  maxWidth:'100%',\n                  overflow:'hidden',\n                  whiteSpace:'nowrap',\n                  textOverflow:'ellipsis'\n                }}\n              >\n                {this.props.tokenConfig.poolLink}\n              </Text>\n            </ExtLink>\n          </Box>\n        )\n      }\n      {\n        this.state.stakedBalance && this.functionsUtil.BNify(this.state.stakedBalance).gt(0) && this.state.globalStats.length>0 && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Your Stats:\n            </Text>\n            <Flex\n              mt={1}\n              mb={1}\n              width={1}\n              style={{\n                flexBasis:'0',\n                flex:'1 1 0px',\n                flexWrap:'wrap'\n              }}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.globalStats.map( (statInfo,index) =>\n                  <StatsCard\n                    key={`globalStats_${index}`}\n                    cardProps={{\n                      mb:2,\n                      width:['49%','33%'],\n                      // mr:[0,index<this.state.globalStats.length-1 ? 1 : 0]\n                    }}\n                    textProps={{\n                      fontSize:[1,2]\n                    }}\n                    {...statInfo}\n                  />\n                )\n              }\n            </Flex>\n          </Box>\n        )\n      }\n      {\n        this.props.selectedToken && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text mb={1}>\n              Select Action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.lockedEnd === null ? (\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isLock ? 2 : 0\n                    }}\n                    caption={'Lock'}\n                    width={[1,'32%']}\n                    imageSrc={'images/lock.svg'}\n                    isMobile={this.props.isMobile}\n                    // subcaption={'stake LP Tokens'}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isLock}\n                    handleClick={ e => this.setAction('Lock') }\n                  />\n                ) : !this.state.lockExpired ? (\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isIncrease ? 2 : 0\n                    }}\n                    width={[1,'32%']}\n                    isActive={isIncrease}\n                    caption={'Increase Lock'}\n                    imageSrc={'images/lock.svg'}\n                    isMobile={this.props.isMobile}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '54px'\n                    }}\n                    handleClick={ e => this.setAction('Increase Lock') }\n                  />\n                ) : (\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isUnstake ? 2 : 0\n                    }}\n                    width={[1,'32%']}\n                    caption={'Withdraw'}\n                    imageSrc={'images/upload.svg'}\n                    isMobile={this.props.isMobile}\n                    // subcaption={'withdraw LP tokens'}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isUnstake}\n                    handleClick={ e => this.setAction('Withdraw') }\n                  />\n                )\n              }\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isClaim ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Claim'}\n                imageSrc={'images/reward.png'}\n                isMobile={this.props.isMobile}\n                // subcaption={'withdraw LP tokens'}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isClaim}\n                handleClick={ e => this.setAction('Claim') }\n              />\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isStats ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Stats'}\n                imageSrc={'images/stats.svg'}\n                isMobile={this.props.isMobile}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isStats}\n                handleClick={ e => this.setAction('Stats') }\n              />\n            </Flex>\n            {\n              this.state.internalInfoBox && (\n                <IconBox\n                  cardProps={{\n                    mt:1,\n                    mb:3\n                  }}\n                  {...this.state.internalInfoBox}\n                />\n              )\n            }\n            {\n              isStats ? (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  width={1}\n                  style={{\n                    flexWrap:'wrap'\n                  }}\n                  justifyContent={'space-between'}\n                >\n                  {\n                    (!this.state.stats || !this.state.stats.length) ? (\n                      <Flex\n                        mt={3}\n                        mb={3}\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading stats...'}\n                        />\n                      </Flex>\n                    ) : this.state.stats.map( (statInfo,index) =>\n                      <StatsCard\n                        key={`stats_${index}`}\n                        cardProps={{\n                          width:[1,'49%']\n                        }}\n                        {...statInfo}\n                      />\n                    )\n                  }\n                  <Text\n                    mb={1}\n                  >\n                    Distributed Rewards:\n                  </Text>\n                  <Flex\n                    mb={3}\n                    width={1}\n                    alignItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        pt:2,\n                        pb:3,\n                        px:3,\n                        width:1,\n                        display:'flex',\n                        alignItems:'center',\n                        justifyContent:'center'\n                      }}\n                      isActive={false}\n                      isInteractive={false}\n                    >\n                      {\n                        this.state.distributedRewards && this.state.distributedRewards.length ? (\n                          <Flex\n                            width={1}\n                            flexDirection={'column'}\n                          >\n                            <Flex\n                              pt={0}\n                              pb={1}\n                              width={1}\n                              flexDirection={'row'}\n                              borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                            >\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                width={this.props.isMobile ? 0.5 : 0.4}\n                              >\n                                Date\n                              </Text>\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                width={this.props.isMobile ? 0.5 : 0.3}\n                                textAlign={this.props.isMobile ? 'right' : 'left'}\n                              >\n                                Amount\n                              </Text>\n                              {\n                                !this.props.isMobile && (\n                                  <Text\n                                    width={0.3}\n                                    fontSize={1}\n                                    fontWeight={3}\n                                  >\n                                    Hash\n                                  </Text>\n                                )\n                              }\n                            </Flex>\n                            {\n                              this.state.distributedRewards.map( (reward,index) => (\n                                <Flex\n                                  py={1}\n                                  width={1}\n                                  flexDirection={'row'}\n                                  key={`rewards_${index}`}\n                                  borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                                >\n                                  <Text\n                                    fontWeight={2}\n                                    color={'statValue'}\n                                    fontSize={this.props.isMobile ? 1 : 2}\n                                    width={this.props.isMobile ? 0.5 : 0.4}\n                                  >\n                                    {reward.date}\n                                  </Text>\n                                  <Text\n                                    fontWeight={2}\n                                    color={'statValue'}\n                                    fontSize={this.props.isMobile ? 1 : 2}\n                                    width={this.props.isMobile ? 0.5 : 0.3}\n                                    textAlign={this.props.isMobile ? 'right' : 'left'}\n                                  >\n                                    {reward.amount.toFixed(4)} {reward.tokenName}\n                                  </Text>\n                                  {\n                                    !this.props.isMobile && (\n                                      <ExtLink\n                                        width={0.3}\n                                        color={'link'}\n                                        hoverColor={'link'}\n                                        href={this.functionsUtil.getEtherscanTransactionUrl(reward.hash)}\n                                      >\n                                        <Flex\n                                          alignItems={'center'}\n                                          flexDirection={'row'}\n                                        >\n                                          <Text\n                                            fontSize={2}\n                                            fontWeight={2}\n                                            color={'link'}\n                                          >\n                                            {this.functionsUtil.shortenHash(reward.hash)}\n                                          </Text>\n                                          <Icon\n                                            ml={1}\n                                            size={'1.2em'}\n                                            color={'link'}\n                                            name={'OpenInNew'}\n                                          />\n                                        </Flex>\n                                      </ExtLink>\n                                    )\n                                  }\n                                </Flex>\n                              ))\n                            }\n                          </Flex>\n                        ) : (\n                          <Text\n                            fontSize={2}\n                            color={'statValue'}\n                          >\n                            No reward distributed yet.\n                          </Text>\n                        )\n                      }\n                    </DashboardCard>\n                  </Flex>\n                </Flex>\n              ) : (this.props.account && this.props.tokenConfig && this.state.balanceProp && this.state.statsLoaded && this.props.contractInfo) ? (\n                <Box\n                  mt={1}\n                  width={1}\n                  mb={[4,3]}\n                >\n                  {\n                    (isIncrease && canIncrease) && (\n                      <Box\n                        mb={2}\n                        width={1}\n                      >\n                        <Text mb={1}>\n                          Choose increase value:\n                        </Text>\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'space-between'}\n                        >\n                          <CardIconButton\n                            {...this.props}\n                            textProps={{\n                              fontSize:[1,2]\n                            }}\n                            cardProps={{\n                              px:3,\n                              py:2,\n                              width:0.49\n                            }}\n                            icon={'AccessTime'}\n                            iconColor={'deposit'}\n                            iconBgColor={'#ced6ff'}\n                            isActive={ this.state.increaseAction === 'time' }\n                            handleClick={ e => this.setIncreaseAction('time') }\n                            text={this.props.isMobile ? 'Time' : 'Increase Time'}\n                          />\n                          <CardIconButton\n                            {...this.props}\n                            textProps={{\n                              fontSize:[1,2]\n                            }}\n                            cardProps={{\n                              px:3,\n                              py:2,\n                              width:0.49\n                            }}\n                            icon={'AttachMoney'}\n                            iconColor={'redeem'}\n                            iconBgColor={'#ceeff6'}\n                            isActive={ this.state.increaseAction === 'amount' }\n                            handleClick={ e => this.setIncreaseAction('amount') }\n                            text={this.props.isMobile ? 'Amount' : 'Increase Amount'}\n                          />\n                        </Flex>\n                      </Box>\n                    )\n                  }\n                  {\n                    ((isLock && this.state.balanceProp && this.state.contractApproved && this.state.balanceProp.gt(0)) || (isIncrease && canIncrease)) && (\n                      <Box\n                        width={1}\n                      > \n                        {\n                          (isLock || this.state.increaseAction === 'time') && (\n                            <Box\n                              width={1}\n                            >\n                              <Text mb={1}>\n                                Choose lock period:\n                              </Text>\n                              {\n                                !this.state.lockEndDateIsMaxEndDate ? (\n                                  <Flex\n                                    width={1}\n                                    alignItems={'center'}\n                                    justifyContent={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Input\n                                      mb={2}\n                                      width={1}\n                                      type={\"date\"}\n                                      required={true}\n                                      height={'3.4em'}\n                                      borderRadius={2}\n                                      fontWeight={500}\n                                      borderColor={'cardBorder'}\n                                      backgroundColor={'cardBg'}\n                                      boxShadow={'none !important'}\n                                      value={this.state.lockPeriodInput || ''}\n                                      onChange={this.changelockPeriodInput.bind(this)}\n                                      border={`1px solid ${this.props.theme.colors.divider}`}\n                                    />\n                                    <Flex\n                                      mb={3}\n                                      width={1}\n                                      alignItems={'center'}\n                                      flexDirection={'row'}\n                                      justifyContent={'space-between'}\n                                    >\n                                      {\n                                        this.state.lockPeriods.map( (p,index) => {\n                                          const isActive = this.state.selectedLockPeriod ? this.state.selectedLockPeriod.value===p.value && this.state.selectedLockPeriod.type === p.type : false;\n                                          return (\n                                            <DashboardCard\n                                              cardProps={{\n                                                p:2,\n                                                width:0.24,\n                                              }}\n                                              isActive={isActive}\n                                              isInteractive={true}\n                                              key={`lockPeriod_${index}`}\n                                              handleClick={e => this.selectLockPeriod(p)}\n                                            >\n                                              <Text \n                                                fontWeight={3}\n                                                fontSize={[1,2]}\n                                                textAlign={'center'}\n                                                color={isActive ? 'copyColor' : 'cellText'}\n                                              >\n                                                {p.label}\n                                              </Text>\n                                            </DashboardCard>\n                                          );\n                                        })\n                                      }\n                                    </Flex>\n                                    {\n                                      isIncrease && (\n                                        <ExecuteTransaction\n                                          params={[]}\n                                          {...this.props}\n                                          parentProps={{\n                                            width:1,\n                                            alignItems:'center',\n                                            justifyContent:'center'\n                                          }}\n                                          Component={Button}\n                                          componentProps={{\n                                            fontSize:3,\n                                            fontWeight:3,\n                                            size:'medium',\n                                            width:[1,1/2],\n                                            borderRadius:4,\n                                            mainColor:'deposit',\n                                            value:'Increase Time',\n                                            disabled:this.state.buttonDisabled\n                                          }}\n                                          action={'Increase Time'}\n                                          methodName={'increase_unlock_time'}\n                                          contractName={this.props.contractInfo.name}\n                                          callback={this.transactionSucceeded.bind(this)}\n                                          getTransactionParams={this.getIncreaseTimeParams.bind(this)}\n                                        />\n                                      )\n                                    }\n                                  </Flex>\n                                ) : (\n                                  <IconBox\n                                    cardProps={{\n                                      mt:1,\n                                      mb:3\n                                    }}\n                                    icon={'Warning'}\n                                    iconProps={{\n                                      color:'cellText'\n                                    }}\n                                    text={`Your tokens are locked for the maxumum allowed period.`}\n                                  />\n                                )\n                              }\n                            </Box>\n                          )\n                        }\n                      </Box>\n                    )\n                  }\n                  {\n                    (isLock || this.state.increaseAction==='amount') ? (\n                      <SendTxWithBalance\n                        error={null}\n                        {...this.props}\n                        action={txAction}\n                        steps={this.state.steps}\n                        infoBox={this.state.infoBox}\n                        tokenConfig={this.props.tokenConfig}\n                        tokenBalance={this.state.balanceProp}\n                        contractInfo={this.props.contractInfo}\n                        permitEnabled={this.state.permitEnabled}\n                        buttonDisabled={this.state.buttonDisabled}\n                        approveEnabled={this.state.approveEnabled}\n                        callback={this.transactionSucceeded.bind(this)}\n                        approveDescription={this.state.approveDescription}\n                        balanceSelectorInfo={this.state.balanceSelectorInfo}\n                        changeInputCallback={this.changeInputCallback.bind(this)}\n                        contractApproved={this.contractApprovedCallback.bind(this)}\n                        getTransactionParams={this.getTransactionParams.bind(this)}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              {\n                                (isLock || isIncrease) ? (\n                                  `You don't have any ${this.props.selectedToken} in your wallet.`\n                                ) : isUnstake && (\n                                  `You don't have any staked ${this.props.selectedToken} to withdraw.`\n                                )\n                              }\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </SendTxWithBalance>\n                    ) : (isIncrease && !canIncrease) ? (\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            name={'LockOpen'}\n                            color={'cellText'}\n                            size={this.props.isMobile ? '1.8em' : '2.3em'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            You cannot increase an expired lock, please Withdraw.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    ) : isUnstake ? (\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        {\n                          this.state.lockExpired ? (\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                            >\n                              <Icon\n                                name={'LockOpen'}\n                                color={'cellText'}\n                                size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              />\n                              <Text\n                                mt={1}\n                                mb={3}\n                                fontSize={2}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                The lock has expired, you can withdraw your {this.props.selectedToken}.\n                              </Text>\n                              <ExecuteTransaction\n                                params={[]}\n                                {...this.props}\n                                Component={Button}\n                                parentProps={{\n                                  width:1,\n                                  alignItems:'center',\n                                  justifyContent:'center'\n                                }}\n                                componentProps={{\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  size:'medium',\n                                  width:[1,1/2],\n                                  borderRadius:4,\n                                  mainColor:'redeem',\n                                  value:'Withdraw',\n                                }}\n                                action={'Withdraw'}\n                                methodName={'withdraw'}\n                                contractName={this.props.contractInfo.name}\n                                callback={this.transactionSucceeded.bind(this)}\n                              />\n                            </Flex>\n                          ) : (\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                            >\n                              <Icon\n                                name={'LockOpen'}\n                                color={'cellText'}\n                                size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              />\n                              <Text\n                                mt={1}\n                                fontSize={2}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                The lock is not expired yet, please wait until {this.functionsUtil.strToMoment(this.state.lockedEnd*1000).utc().format('YYYY/MM/DD HH:mm')} UTC to withdraw your {this.props.selectedToken}.\n                              </Text>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    ) : isClaim && (\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        {\n                          (this.state.claimable && this.state.claimable.gt(0)) ? (\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                            >\n                              <Icon\n                                color={'cellText'}\n                                name={'MonetizationOn'}\n                                size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              />\n                              <Text\n                                mt={1}\n                                mb={3}\n                                fontSize={2}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                You can claim {this.state.claimable.toFixed(8)} {this.props.contractInfo.rewardToken}.\n                              </Text>\n                              <ExecuteTransaction\n                                params={[]}\n                                {...this.props}\n                                Component={Button}\n                                parentProps={{\n                                  width:1,\n                                  alignItems:'center',\n                                  justifyContent:'center'\n                                }}\n                                componentProps={{\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  size:'medium',\n                                  width:[1,1/3],\n                                  value:'Claim',\n                                  borderRadius:4,\n                                  mainColor:'redeem',\n                                }}\n                                action={'Claim'}\n                                methodName={'claim'}\n                                callback={this.transactionSucceeded.bind(this)}\n                                contractName={this.props.tokenConfig.feeDistributor.name}\n                              />\n                            </Flex>\n                          ) : (\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                            >\n                              <Icon\n                                name={'MoneyOff'}\n                                color={'cellText'}\n                                size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              />\n                              <Text\n                                mt={1}\n                                fontSize={2}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                You don't have rewards to Claim yet.\n                              </Text>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    )\n                  }\n                </Box>\n              ) : !this.props.account ? (\n                <ConnectBox\n                  cardProps={{\n                    mt:2\n                  }}\n                  {...this.props}\n                />\n              ) : (\n                <Flex\n                  mt={3}\n                  mb={3}\n                  width={1}\n                >\n                  <FlexLoader\n                    flexProps={{\n                      flexDirection:'row'\n                    }}\n                    loaderProps={{\n                      size:'30px'\n                    }}\n                    textProps={{\n                      ml:2\n                    }}\n                    text={'Loading info...'}\n                  />\n                </Flex>\n              )\n            }\n          </Box>\n        )\n      }\n      </Box>\n    );\n  }\n}\n\nexport default IdleStaking;","import IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\n// import NXMaster from '../abis/nexus/NXMaster.json';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ButtonLoader from '../ButtonLoader/ButtonLoader';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\nimport { Flex, Box, Text, Input, Link, Progress, Button, Icon } from \"rimble-ui\";\n\nclass NexusMutual extends Component {\n\n  state = {\n    step:1,\n    quote:null,\n    steps:{\n      1:'Get Quote',\n      2:'Buy Cover'\n    },\n    periodOptions:{\n      30:{\n        label:'30d'\n      },\n      60:{\n        label:'60d'\n      },\n      90:{\n        label:'90d'\n      },\n      365:{\n        label:'1y'\n      }\n    },\n    coverId:null,\n    claimId:null,\n    capacity:null,\n    loading:false,\n    amountValue:'',\n    periodValue:'',\n    maxCapacity:null,\n    amountValid:true,\n    periodValid:true,\n    tokenConfig:null,\n    tokenBalance:null,\n    selectedToken:null,\n    claimableCovers:[],\n    tokenApproved:false,\n    selectedPeriod:null,\n    maxPriceWithFee:null,\n    transactionParams:[],\n    transactionValue:null,\n    yieldTokenBalance:null,\n    selectedUnderlying:null,\n    selectedAction:'deposit',\n    yieldTokenApproved:false,\n    claimButtonDisabled:false,\n    selectedCoverToClaim:null,\n    defaultClaimableCover:null,\n    selectedUnderlyingConfig:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadContracts();\n  }\n\n  async loadContracts(){\n    await Promise.all([\n      this.props.initContract(this.props.contractInfo.name, this.props.contractInfo.address, this.props.contractInfo.abi),\n      this.props.initContract(this.props.incidentsInfo.name, this.props.incidentsInfo.address, this.props.incidentsInfo.abi),\n    ]);\n\n    const fromBlock = this.props.startBlock;\n    // const masterAddress = await this.functionsUtil.genericContractCall(this.props.contractInfo.name,'master');\n    // await this.props.initContract('NXMaster', masterAddress, NXMaster);\n    const [\n      coverBoughtEvents,\n      claimSubmittedEvents,\n    ] = await Promise.all([\n       this.functionsUtil.getContractEvents(this.props.contractInfo.name,'CoverBought',{fromBlock, toBlock:'latest',filter:{buyer:this.props.account}}),\n       this.functionsUtil.getContractEvents(this.props.contractInfo.name,'ClaimSubmitted',{fromBlock, toBlock:'latest',filter:{buyer:this.props.account}})\n    ]);\n\n    // console.log('coverBoughtEvents',coverBoughtEvents,'claimSubmittedEvents',claimSubmittedEvents);\n\n    const claimableCovers = [];\n    await this.functionsUtil.asyncForEach(coverBoughtEvents,async (cover) => {\n    // coverBoughtEvents.forEach( cover => {\n      const coverId = parseInt(cover.returnValues.coverId);\n      const claimSubmittedEvent = claimSubmittedEvents.find( claim => parseInt(claim.returnValues.coverId)===coverId );\n      const [\n        coverDetails,\n        incidentEvents\n      ] = await Promise.all([\n        this.functionsUtil.genericContractCall(this.props.contractInfo.name,'getCover',[coverId]),\n        this.functionsUtil.getContractEvents(this.props.incidentsInfo.name,'IncidentAdded',{fromBlock:cover.blockNumber, toBlock:'latest',filter:{productId:cover.contractAddress}})\n      ]);\n\n      // Check if the cover matches any incidents\n      const matchedIncidents = incidentEvents.filter(incident => {\n        // console.log(incident.returnValues.productId,coverDetails.contractAddress,cover.blockNumber,incident.blockNumber,incident.returnValues.incidentDate,coverDetails.validUntil,parseInt(coverDetails.validUntil) + this.props.yieldTokenCoverGracePeriod >= Date.now() / 1000);\n        return incident.returnValues.productId === coverDetails.contractAddress &&\n        this.functionsUtil.BNify(incident.blockNumber).gt(cover.blockNumber)  &&\n        this.functionsUtil.BNify(incident.returnValues.incidentDate).lt(coverDetails.validUntil) &&\n        parseInt(coverDetails.validUntil) + this.props.yieldTokenCoverGracePeriod >= Date.now() / 1000\n      });\n\n      // If multiple incidents match, return the one with the highest priceBefore\n      const matchedIncident = matchedIncidents.reduce((prev, curr) => {\n        if (!prev) {\n          return curr;\n        }\n\n        if (curr.returnValues.priceBefore.gt(prev.returnValues.priceBefore)) {\n          return curr;\n        }\n        return prev;\n      }, null);\n\n      // console.log('cover',cover,'coverDetails',coverDetails,'matchedIncident',matchedIncident);\n\n      const yieldTokenConfig = Object.values(this.props.toolProps.availableTokens).find( tokenConfig => tokenConfig.address === coverDetails.contractAddress );\n      const sumAssured = this.functionsUtil.fixTokenDecimals(coverDetails.sumAssured,yieldTokenConfig.decimals);\n      const coverAssetConfig = Object.values(yieldTokenConfig.underlying).find( underlyingConfig => underlyingConfig.address === coverDetails.coverAsset );\n      const expiryDate = this.functionsUtil.strToMoment(coverDetails.validUntil*1000).format('YYYY-MM-DD');\n\n      const claimId = claimSubmittedEvent ? claimSubmittedEvent.returnValues.claimId : null;\n      const payoutOutcome = await this.functionsUtil.genericContractCall(this.props.contractInfo.name,'getPayoutOutcome',[claimId]);\n      const label = `${yieldTokenConfig.name} - ${sumAssured.toFixed(4)} ${coverAssetConfig.token} - Exp. ${expiryDate}`;\n      const value = coverId;\n\n      let claimedAmount = null;\n      if (claimSubmittedEvent){\n        const claimTxReceipt = await this.functionsUtil.getTransactionReceipt(claimSubmittedEvent.transactionHash);\n        const claimedAmountLog = claimTxReceipt ? claimTxReceipt.logs.find( log => log.address.toLowerCase() === coverAssetConfig.address.toLowerCase() ) : null;\n        claimedAmount = claimedAmountLog ? this.functionsUtil.fixTokenDecimals(parseInt(claimedAmountLog.data,16),coverAssetConfig.decimals) : this.functionsUtil.BNify(0);\n      }\n\n      // Yield token cover is claimable only when there is a matching incident\n      if (matchedIncident) {\n        const claimableAmount = this.functionsUtil.fixTokenDecimals(coverDetails.sumAssured,coverAssetConfig.decimals);\n\n        const claimablePrice = this.functionsUtil.BNify(matchedIncident.returnValues.priceBefore).times(0.9);\n        const maxCoveredAmount = this.functionsUtil.BNify(coverDetails.sumAssured).div(claimablePrice);\n        const coveredTokenAmount = this.functionsUtil.normalizeTokenAmount(maxCoveredAmount,coverAssetConfig.decimals);\n\n        claimableCovers.push({\n          label,\n          value,\n          sumAssured,\n          claimId:null,\n          claimedAmount,\n          payoutOutcome,\n          claimableAmount,\n          maxCoveredAmount,\n          coveredTokenAmount,\n          coverAsset:coverAssetConfig.token,\n          incident: {...matchedIncident, id: incidentEvents.findIndex(x => x.date === matchedIncident.date)},\n        });\n      }\n    });\n\n    /*\n    claimableCovers.push({\n      label:'prova',\n      value:'prova',\n      claimId:true,\n      payoutOutcome:null\n    });\n    */\n\n    const defaultClaimableCover = claimableCovers.length>0 ? claimableCovers[0] : null;\n    const selectedCoverToClaim = defaultClaimableCover || null;\n\n    this.setState({\n      claimableCovers,\n      selectedCoverToClaim,\n      defaultClaimableCover\n    });\n\n    const selectedToken = Object.keys(this.props.toolProps.availableTokens)[0];\n    this.changeSelectedToken(selectedToken);\n    // console.log('coverBoughtEvents',coverBoughtEvents,'claimSubmittedEvents',claimSubmittedEvents,'claimableCovers',claimableCovers);\n  }\n\n  async getPoolCapacity(selectedUnderlying,tokenConfig){\n    const requiredNetwork = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    const baseEndpoint = this.functionsUtil.getGlobalConfig(['network','providers','nexus','endpoints',requiredNetwork]);\n    const response = await this.functionsUtil.makeRequest(`${baseEndpoint}contracts/${tokenConfig.address}/capacity`);\n    if (response && response.data){\n      const capacity = response.data;\n      // console.log('getPoolCapacity',capacity);\n      const maxCapacity = capacity && capacity[`capacity${selectedUnderlying}`] ? this.functionsUtil.fixTokenDecimals(capacity[`capacity${selectedUnderlying}`],tokenConfig.decimals) : this.functionsUtil.BNify(0);\n      return maxCapacity;\n    }\n    return false;\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const selectedUnderlyingChanged = prevState.selectedUnderlying !== this.state.selectedUnderlying;\n    if (selectedTokenChanged || selectedUnderlyingChanged){\n      this.loadTokenData();\n    }\n  }\n\n  async loadTokenData(){\n\n    const isETH = this.state.selectedToken === 'ETH';\n    const selectedUnderlyingConfig = this.state.tokenConfig.underlying[this.state.selectedUnderlying];\n\n    // Init Underlying Contract\n    await Promise.all([\n      this.props.initContract(this.state.tokenConfig.token, this.state.tokenConfig.realAddress, this.state.tokenConfig.abi),\n      this.props.initContract(selectedUnderlyingConfig.name, selectedUnderlyingConfig.address, selectedUnderlyingConfig.abi)\n    ]);\n\n    let [\n      maxCapacity,\n      yieldTokenBalance,\n      yieldTokenApproved,\n      tokenApproved,\n      tokenBalance\n    ] = await Promise.all([\n      this.getPoolCapacity(this.state.selectedUnderlying,this.state.tokenConfig),\n      this.functionsUtil.getTokenBalance(this.state.tokenConfig.token,this.props.account),\n      this.functionsUtil.checkTokenApproved(this.state.selectedToken,this.props.contractInfo.address,this.props.account),\n      this.functionsUtil.checkTokenApproved(selectedUnderlyingConfig.name,this.props.contractInfo.address,this.props.account),\n      isETH ? this.functionsUtil.getETHBalance(this.props.account,false) : this.functionsUtil.getTokenBalance(selectedUnderlyingConfig.name,this.props.account,false),\n    ]);\n\n    tokenBalance = tokenBalance || this.functionsUtil.BNify(0);\n    yieldTokenBalance = yieldTokenBalance || this.functionsUtil.BNify(0);\n\n    this.setState({\n      maxCapacity,\n      tokenBalance,\n      tokenApproved,\n      yieldTokenBalance,\n      yieldTokenApproved,\n      selectedUnderlyingConfig\n    });\n  }\n\n  async changeSelectedToken(selectedToken){\n    const periodValue = '';\n    const amountValue = '';\n    const tokenConfig = this.props.toolProps.availableTokens[selectedToken];\n    const selectedUnderlying = Object.keys(tokenConfig.underlying)[0];\n\n    // console.log('changeSelectedToken',selectedToken,tokenConfig);\n\n    this.setState({\n      amountValue,\n      periodValue,\n      tokenConfig,\n      selectedToken,\n      selectedUnderlying\n    });\n  }\n\n  changeSelectedUnderlying(selectedUnderlying){\n    this.setState({\n      selectedUnderlying\n    });\n  }\n\n  setMaxCoverAmount(){\n    const amountValue = this.state.maxCapacity.toFixed();\n    this.changeAmount({\n      target:{\n        value:amountValue\n      }\n    });\n  }\n\n  changeAmount = (e) => {\n    const amountValue = e.target.value.length && !isNaN(e.target.value) ? e.target.value : '';\n    const amountValid = this.functionsUtil.BNify(amountValue).gt(0) && this.functionsUtil.BNify(amountValue).lte(this.state.maxCapacity);\n    this.setState({\n      amountValue,\n      amountValid\n    });\n  }\n\n  changePeriod = (e) => {\n    const periodValue = e.target.value.length && !isNaN(e.target.value) ? e.target.value : '';\n    const periodValid = parseInt(periodValue)>=30 && parseInt(periodValue)<=365;\n    this.setState({\n      periodValue,\n      periodValid,\n      selectedPeriod:null\n    });\n  }\n\n  selectPeriod = (selectedPeriod) => {\n    this.changePeriod({\n      target:{\n        value:selectedPeriod\n      }\n    });\n  }\n\n  async getQuote() {\n\n    this.setState({\n      loading:true\n    });\n\n    // Setup your cover data.\n    const coverData = {\n      period: this.state.periodValue, // days\n      coverAmount: this.state.amountValue, // ETH in units not wei\n      currency: this.state.selectedUnderlying,\n      contractAddress: this.state.tokenConfig.address, // the contract you will be buying cover for\n      asset: this.state.tokenConfig.underlying[this.state.selectedUnderlying].address\n    };\n\n    // URL to request a quote for.\n    // const quoteURL = 'https://api.nexusmutual.io/v1/quote?' +\n    const requiredNetwork = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    const baseEndpoint = this.functionsUtil.getGlobalConfig(['network','providers','nexus','endpoints',requiredNetwork]);\n    const quoteURL = `${baseEndpoint}quote?coverAmount=${coverData.coverAmount}&currency=${coverData.currency}&period=${coverData.period}&contractAddress=${coverData.contractAddress}`;\n\n    const response = await this.functionsUtil.makeRequest(quoteURL);\n\n    const quote = response && response.data ? response.data : null;\n\n    if (!quote){\n      this.setState({\n        loading:false\n      });\n      return false;\n    }\n\n    // encode the signature result in the data field\n    const data = this.props.web3.eth.abi.encodeParameters(\n      ['uint', 'uint', 'uint', 'uint', 'uint8', 'bytes32', 'bytes32'],\n      [quote.price, quote.priceInNXM, quote.expiresAt, quote.generatedAt, quote.v, quote.r, quote.s],\n    );\n\n    const COVER_TYPE = this.functionsUtil.toBN(0);\n    const feePercentage = await this.functionsUtil.genericContractCall(this.props.contractInfo.name,'feePercentage');\n    const basePrice = this.functionsUtil.toBN(quote.price);\n    const priceWithFee = basePrice.mul(this.functionsUtil.toBN(feePercentage)).divn(10000).add(basePrice);\n    const amountInWei = this.functionsUtil.toWei(coverData.coverAmount.toString());\n    const maxPriceWithFee = priceWithFee;\n\n    const transactionParams = [\n      coverData.contractAddress,\n      coverData.asset,\n      amountInWei,\n      coverData.period,\n      COVER_TYPE,\n      maxPriceWithFee,\n      data\n    ];\n\n    const transactionValue = this.state.selectedUnderlying === 'ETH' ? priceWithFee : null;\n\n    // console.log(feePercentage,transactionParams,transactionValue,quote);\n\n    // debugger;\n\n    const step = 2;\n    const loading = false;\n\n    this.setState({\n      step,\n      quote,\n      loading,\n      maxPriceWithFee,\n      transactionValue,\n      transactionParams\n    });\n  }\n\n  approveSucceeded = (tx) => {\n    const tokenApproved = true;\n    this.setState({\n      tokenApproved\n    });\n  }\n\n  yieldTokenApproveSucceeded = (tx) => {\n    const yieldTokenApproved = true;\n    this.setState({\n      yieldTokenApproved\n    });\n  }\n\n  claimInputChange = (amount) => {\n    const normalizedAmount = this.functionsUtil.normalizeTokenAmount(amount,this.state.tokenConfig.decimals);\n    const claimButtonDisabled = this.functionsUtil.BNify(amount).lte(0) || this.functionsUtil.BNify(normalizedAmount).gt(this.state.selectedCoverToClaim.coveredTokenAmount);\n    this.setState({\n      claimButtonDisabled\n    });\n  }\n\n  getClaimTransactionParams = (coveredTokenAmount) => {\n    return {\n      methodName:'claimTokens',\n      methodParams:[this.state.selectedCoverToClaim.value,this.state.selectedCoverToClaim.incident.id,coveredTokenAmount,this.state.tokenConfig.realAddress]\n    };\n  }\n\n  claimTransactionSucceeded = (tx) => {\n    // const claimId = this.functionsUtil.getGlobalConfig(['txReceipt','events','ClaimSubmitted','returnValues','claimId'],tx);\n    // this.setState({\n    //   claimId\n    // });\n    this.loadContracts();\n  }\n\n  buyCoverTransactionSucceeded = (tx) => {\n    const coverId = this.functionsUtil.getGlobalConfig(['txReceipt','events','CoverBought','returnValues','coverId'],tx);\n    this.setState({\n      coverId\n    });\n  }\n\n  setSelectedAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  selectCoverToClaim(coverId){\n    const selectedCoverToClaim = this.state.selectedCoverToClaim ? this.state.claimableCovers.find( cover => parseInt(cover.value) === coverId ) : null;\n    // console.log('selectCoverToClaim',selectedCoverToClaim);\n    this.setState({\n      selectedCoverToClaim\n    });\n  }\n\n  reset(){\n    const step = 1;\n    const quote = null;\n    const coverId = null;\n    const periodValue = '';\n    const amountValue = '';\n    const transactionParams = [];\n    this.setState({\n      step,\n      quote,\n      coverId,\n      periodValue,\n      amountValue,\n      transactionParams\n    });\n  }\n\n  render() {\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          mb={3}\n          width={[1,0.36]}\n          flexDirection={'column'}\n        >\n          <Box\n            mb={2}\n            width={1}\n          >\n            <Text mb={1}>\n              Choose action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'space-between'}\n            >\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:2,\n                  width:0.49\n                }}\n                textProps={{\n                  fontSize:[1,2]\n                }}\n                icon={'Security'}\n                iconColor={'deposit'}\n                text={'Buy Coverage'}\n                iconBgColor={'#ced6ff'}\n                isActive={ this.state.selectedAction === 'deposit' }\n                handleClick={ e => this.setSelectedAction('deposit') }\n              />\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:2,\n                  width:0.49\n                }}\n                textProps={{\n                  fontSize:[1,2]\n                }}\n                icon={'FileUpload'}\n                iconColor={'redeem'}\n                text={'Claim Tokens'}\n                iconBgColor={'#ceeff6'}\n                isActive={ this.state.selectedAction === 'claim' }\n                handleClick={ e => this.setSelectedAction('claim') }\n              />\n            </Flex>\n          </Box>\n          {\n            this.state.selectedAction === 'deposit' ? (\n              <Flex\n                width={1}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Flex\n                  mb={1}\n                  width={1}\n                  flexDirection={'row'}\n                  justifyContent={'space-between'}\n                >\n                  {\n                    Object.keys(this.state.steps).map( stepIndex => (\n                      <Link\n                        style={{\n                          flexBasis:'0',\n                          flex:'1 1 0px',\n                          textDecoration:'none',\n                          cursor:this.state.step>=stepIndex ? 'pointer' : 'default'\n                        }}\n                        fontSize={2}\n                        textAlign={'center'}\n                        key={`step_${stepIndex}`}\n                        color={ this.state.step>=stepIndex ? 'primary' : 'cellText' }\n                        hoverColor={ this.state.step>=stepIndex ? 'primary' : 'cellText' }\n                        activeColor={ this.state.step>=stepIndex ? 'primary' : 'cellText' }\n                      >\n                        {this.state.steps[stepIndex]}\n                      </Link>\n                    ) )\n                  }\n                </Flex>\n                <Flex\n                  mb={2}\n                  width={1}\n                  flexDirection={'column'}\n                >\n                  <Progress\n                    style={{\n                      width:'100%',\n                      height:'15px'\n                    }}\n                    value={(1/Object.keys(this.state.steps).length)*this.state.step}\n                  />\n                </Flex>\n                {\n                  !this.state.selectedToken || !this.state.tokenBalance ? (\n                    <FlexLoader\n                      flexProps={{\n                        mt:2,\n                        flexDirection:'row'\n                      }}\n                      loaderProps={{\n                        size:'25px',\n                      }}\n                      textProps={{\n                        ml:2\n                      }}\n                      text={'Loading assets...'}\n                    />\n                  ) : this.state.coverId ? (\n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <IconBox\n                        cardProps={{\n                          mt:1,\n                        }}\n                        icon={'DoneAll'}\n                        iconProps={{\n                          color:this.props.theme.colors.transactions.status.completed\n                        }}\n                        text={`You have successfully bought your Cover! Your Cover ID is <strong>${this.state.coverId}</strong>`}\n                      />\n                      <Link\n                        mt={2}\n                        color={'link'}\n                        hoverColor={'primary'}\n                        onClick={this.reset.bind(this)}\n                      >\n                        Get New Quote\n                      </Link>\n                    </Flex>\n                  ) : !this.state.quote ? (\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Box\n                        width={1}\n                      >\n                        <Text mb={1}>\n                          Select token to cover:\n                        </Text>\n                        <AssetSelector\n                          {...this.props}\n                          id={'token-from'}\n                          showBalance={false}\n                          isSearchable={false}\n                          selectedToken={this.state.selectedToken}\n                          onChange={this.changeSelectedToken.bind(this)}\n                          availableTokens={this.props.toolProps.availableTokens}\n                        />\n                      </Box>\n                      <Box\n                        mt={2}\n                        width={1}\n                      >\n                        <Text\n                          mb={1}>\n                          Select underlying:\n                        </Text>\n                        <AssetSelector\n                          {...this.props}\n                          showBalance={false}\n                          selectedToken={this.state.selectedUnderlying}\n                          onChange={this.changeSelectedUnderlying.bind(this)}\n                          availableTokens={this.state.tokenConfig.underlying}\n                        />\n                      </Box>\n                      {\n                        this.state.maxCapacity.gt(0) ? (\n                          <Box\n                            width={1}\n                          >\n                            <Box\n                              mt={2}\n                              width={1}\n                            >\n                              <Text\n                                mb={1}\n                              >\n                                How much do you want to cover?\n                              </Text>\n                              <Input\n                                min={0}\n                                width={'100%'}\n                                type={\"number\"}\n                                required={true}\n                                height={'3.4em'}\n                                borderRadius={2}\n                                fontWeight={500}\n                                borderColor={'cardBorder'}\n                                backgroundColor={'cardBg'}\n                                boxShadow={'none !important'}\n                                value={this.state.amountValue}\n                                onChange={this.changeAmount.bind(this)}\n                                border={`1px solid ${this.props.theme.colors.divider}`}\n                                placeholder={`Insert ${this.state.selectedUnderlying.toUpperCase()} amount`}\n                              />\n                              <Flex\n                                width={1}\n                                maxWidth={'100%'}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'flex-end'}\n                              >\n                                <Link\n                                  mt={1}\n                                  fontSize={1}\n                                  fontWeight={3}\n                                  color={'dark-gray'}\n                                  textAlign={'right'}\n                                  hoverColor={'copyColor'}\n                                  onClick={ (e) => this.setMaxCoverAmount() }\n                                  style={{\n                                    maxWidth:'100%',\n                                    overflow:'hidden',\n                                    whiteSpace:'nowrap',\n                                    textOverflow:'ellipsis'\n                                  }}\n                                >\n                                  Max Available: {this.state.maxCapacity.toFixed(this.props.isMobile ? 2 : 4)} {this.state.selectedUnderlying}\n                                </Link>\n                              </Flex>\n                            </Box>\n                            <Box\n                              mt={2}\n                              width={1}\n                            >\n                              <Text\n                                mb={1}\n                              >\n                                For how many days?\n                              </Text>\n                              <Input\n                                min={0}\n                                width={'100%'}\n                                type={\"number\"}\n                                required={true}\n                                height={'3.4em'}\n                                borderRadius={2}\n                                fontWeight={500}\n                                borderWidth={'1px'}\n                                borderStyle={'solid'}\n                                backgroundColor={'cardBg'}\n                                boxShadow={'none !important'}\n                                value={this.state.periodValue}\n                                placeholder={'Insert days of coverage'}\n                                onChange={this.changePeriod.bind(this)}\n                                borderColor={this.state.periodValid ? 'cardBorder' : 'red'}\n                              />\n                              {\n                                !this.state.periodValid && (\n                                  <Text\n                                    my={1}\n                                    fontSize={2}\n                                    color={'red'}\n                                  >\n                                    Enter a period between 30 and 365 days!\n                                  </Text>\n                                )\n                              }\n                              <Flex\n                                mt={2}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'space-between'}\n                              >\n                                {\n                                  Object.keys(this.state.periodOptions).map( period => {\n                                    const periodInfo = this.state.periodOptions[period];\n                                    const isActive = this.state.selectedPeriod===period;\n                                    const width = (1/Object.keys(this.state.periodOptions).length)-0.01;\n                                    return (\n                                      <DashboardCard\n                                        cardProps={{\n                                          p:2,\n                                          width:width,\n                                        }}\n                                        isActive={isActive}\n                                        isInteractive={true}\n                                        key={`coverPeriod_${period}`}\n                                        handleClick={e => this.selectPeriod(period)}\n                                      >\n                                        <Text\n                                          fontSize={2}\n                                          fontWeight={3}\n                                          textAlign={'center'}\n                                          color={this.props.isActive ? 'copyColor' : 'legend'}\n                                        >\n                                          {periodInfo.label}\n                                        </Text>\n                                      </DashboardCard>\n                                    );\n                                  })\n                                }\n                              </Flex>\n                            </Box>\n                            <Flex\n                              mt={2}\n                              width={1}\n                              justifyContent={'center'}\n                            >\n                              <ButtonLoader\n                                buttonProps={{\n                                  my:2,\n                                  mx:[0, 2],\n                                  size:'medium',\n                                  borderRadius:4,\n                                  mainColor:'blue',\n                                  disabled:(!this.state.amountValid || !this.state.selectedUnderlying || !this.state.periodValue || !this.state.periodValid)\n                                }}\n                                buttonText={'GET QUOTE'}\n                                isLoading={this.state.loading}\n                                handleClick={ e => this.getQuote(e) }\n                              />\n                            </Flex>\n                          </Box>\n                        ) : (\n                          <IconBox\n                            cardProps={{\n                              mt:2,\n                            }}\n                            icon={'MoneyOff'}\n                            iconProps={{\n                              color:'cellText'\n                            }}\n                            text={`Coverage for ${this.state.selectedToken} is not available at the moment.`}\n                          />\n                        )\n                      }\n                    </Flex>\n                  ) : (\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Text\n                        mb={2}\n                        fontSize={3}\n                        fontWeight={3}\n                        color={'primary'}\n                      >\n                        Cover Summary:\n                      </Text>\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          mb:2,\n                          px:3\n                        }}\n                        isActive={false}\n                        isInteractive={false}\n                      >\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Protocol:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          Idle Finance\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Yield Token:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.selectedToken}\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Cover Amount:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.amountValue} {this.state.selectedUnderlying}\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Cover Period:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.periodValue} days\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Cover Price:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.functionsUtil.fixTokenDecimals(this.state.maxPriceWithFee,this.state.tokenConfig.decimals).toFixed(6)} {this.state.selectedUnderlying}\n                        </Text>\n                      </DashboardCard>\n                      <Flex\n                        mt={2}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        {\n                          this.state.tokenBalance.lt(this.functionsUtil.BNify(this.state.quote.price)) ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mb:3\n                              }}\n                            >\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Icon\n                                  size={'2em'}\n                                  name={'MoneyOff'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mt={1}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You don't have enough {this.state.selectedUnderlying} in your wallet.\n                                </Text>\n                                <Link\n                                  mt={1}\n                                  color={'link'}\n                                  hoverColor={'primary'}\n                                  onClick={this.reset.bind(this)}\n                                >\n                                  Get New Quote\n                                </Link>\n                              </Flex>\n                            </DashboardCard>\n                          ) : !this.state.tokenApproved ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mb:3\n                              }}\n                            >\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Icon\n                                  size={'2em'}\n                                  name={'MoneyOff'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mb={2}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  To buy the coverage you need to approve the Smart-Contract.\n                                </Text>\n                                <ExecuteTransaction\n                                  {...this.props}\n                                  parentProps={{\n                                    width:1,\n                                    alignItems:'center',\n                                    justifyContent:'center'\n                                  }}\n                                  Component={Button}\n                                  componentProps={{\n                                    fontSize:3,\n                                    fontWeight:3,\n                                    size:'medium',\n                                    width:[1,1/2],\n                                    borderRadius:4,\n                                    value:'Approve',\n                                    mainColor:'deposit'\n                                  }}\n                                  action={'Approve'}\n                                  methodName={'approve'}\n                                  callback={this.approveSucceeded.bind(this)}\n                                  contractName={this.state.selectedUnderlyingConfig.name}\n                                  params={[this.props.contractInfo.address,this.props.web3.utils.toTwosComplement('-1')]}\n                                />\n                                <Link\n                                  mt={1}\n                                  color={'link'}\n                                  hoverColor={'primary'}\n                                  onClick={this.reset.bind(this)}\n                                >\n                                  Get New Quote\n                                </Link>\n                              </Flex>\n                            </DashboardCard>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <ExecuteTransaction\n                                {...this.props}\n                                parentProps={{\n                                  width:1,\n                                  alignItems:'center',\n                                  justifyContent:'center'\n                                }}\n                                Component={Button}\n                                componentProps={{\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  size:'medium',\n                                  width:[1,1/2],\n                                  borderRadius:4,\n                                  mainColor:'deposit',\n                                  value:'Buy Coverage',\n                                  disabled:this.state.buttonDisabled\n                                }}\n                                action={'Buy Coverage'}\n                                methodName={'buyCover'}\n                                value={this.state.transactionValue}\n                                params={this.state.transactionParams}\n                                contractName={this.props.contractInfo.name}\n                                callback={this.buyCoverTransactionSucceeded.bind(this)}\n                              />\n                              <Link\n                                mt={1}\n                                color={'link'}\n                                hoverColor={'primary'}\n                                onClick={this.reset.bind(this)}\n                              >\n                                Get New Quote\n                              </Link>\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                    </Flex>\n                  )\n                }\n              </Flex>\n            ) : this.state.selectedAction === 'claim' && (\n              <Box\n                width={1}\n              >\n                {\n                  this.state.claimableCovers.length>0 ? (\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Text mb={1}>\n                        Select Cover:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        isSearchable={false}\n                        name={'claimable_covers'}\n                        options={this.state.claimableCovers}\n                        onChange={this.selectCoverToClaim.bind(this)}\n                        defaultValue={this.state.defaultClaimableCover}\n                      />\n                      {\n                        this.state.selectedCoverToClaim.claimId ? (\n                          <IconBox\n                            cardProps={{\n                              mt:2,\n                            }}\n                            icon={'DoneAll'}\n                            iconProps={{\n                              color:this.props.theme.colors.transactions.status.completed\n                            }}\n                            text={`You've successfully claimed <strong>${this.state.selectedCoverToClaim.claimedAmount.toFixed(4)} ${this.state.selectedCoverToClaim.coverAsset}</strong> for this Cover!`}\n                          />\n                        ) : (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mt:3,\n                                mb:1\n                              }}\n                            >\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Icon\n                                  size={'2em'}\n                                  color={'cellText'}\n                                  name={'FileUpload'}\n                                />\n                                <Text\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You can Claim up to <strong>{this.state.selectedCoverToClaim.claimableAmount.toFixed(4)} {this.state.selectedCoverToClaim.coverAsset}</strong> for this Cover!\n                                </Text>\n                                <Text\n                                  fontSize={1}\n                                  color={'alert'}\n                                  textAlign={'center'}\n                                >\n                                  Keep in mind that the cover becomes inactive once any amount of tokens are claimed.\n                                </Text>\n                                </Flex>\n                            </DashboardCard>\n                            <SendTxWithBalance\n                              error={null}\n                              {...this.props}\n                              permitEnabled={false}\n                              approveEnabled={true}\n                              action={'Claim Token'}\n                              tokenConfig={this.state.tokenConfig}\n                              contractInfo={this.props.contractInfo}\n                              buttonDisabled={this.state.claimButtonDisabled}\n                              callback={this.claimTransactionSucceeded.bind(this)}\n                              changeInputCallback={this.claimInputChange.bind(this)}\n                              contractApproved={this.yieldTokenApproveSucceeded.bind(this)}\n                              getTransactionParams={this.getClaimTransactionParams.bind(this)}\n                              approveDescription={'To claim your tokens you need to approve the Smart-Contract.'}\n                              tokenBalance={this.state.yieldTokenBalance.gt(this.state.selectedCoverToClaim.maxCoveredAmount) ? this.state.selectedCoverToClaim.maxCoveredAmount : this.state.yieldTokenBalance }\n                            >\n                              <DashboardCard\n                                cardProps={{\n                                  p:3,\n                                  mt:2\n                                }}\n                              >\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                >\n                                  <Icon\n                                    name={'MoneyOff'}\n                                    color={'cellText'}\n                                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                  />\n                                  <Text\n                                    mt={1}\n                                    fontSize={2}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    You don't have any {this.state.selectedToken} in your wallet.\n                                  </Text>\n                                </Flex>\n                              </DashboardCard>\n                            </SendTxWithBalance>\n                            {\n                              /*\n                              <ExecuteTransaction\n                                {...this.props}\n                                parentProps={{\n                                  width:1,\n                                  alignItems:'center',\n                                  justifyContent:'center'\n                                }}\n                                Component={Button}\n                                action={'Token claim'}\n                                methodName={'claimTokens'}\n                                componentProps={{\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  size:'medium',\n                                  width:[1,1/2],\n                                  borderRadius:4,\n                                  mainColor:'redeem',\n                                  value:'Claim Tokens',\n                                  disabled:this.state.buttonDisabled\n                                }}\n                                contractName={this.props.contractInfo.name}\n                                callback={this.claimTransactionSucceeded.bind(this)}\n                                params={}\n                              />\n                              */\n                            }\n                          </Flex>\n                        )\n                      }\n                    </Flex>\n                  ) : (\n                    <IconBox\n                      cardProps={{\n                        mt:1,\n                      }}\n                      icon={'Warning'}\n                      iconProps={{\n                        color:'cellText'\n                      }}\n                      text={`You cannot submit any Claim for your Covers.`}\n                    />\n                  )\n                }\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default NexusMutual;\n","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Box, Flex, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass TokenWrapper extends Component {\n\n  state = {\n    action:null,\n    infoBox:null,\n    balanceDest:null,\n    tokenConfig:null,\n    balanceStart:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    approveEnabled:true,\n    approveDescription:null,\n    showTokenWrapperEnabled:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const actionChanged = (prevState.action !== this.state.action) || (this.props.action !== prevProps.action);\n    const startContractChanged = JSON.stringify(this.props.startContract) !== JSON.stringify(prevProps.startContract);\n    const destContractChanged = JSON.stringify(this.props.destContract) !== JSON.stringify(prevProps.destContract);\n    if (actionChanged || startContractChanged || destContractChanged){\n      this.loadData();\n    }\n  }\n\n  async loadData(){\n    const action = this.props.action || this.state.action || 'wrap';\n    this.setState({\n      action\n    },() => {\n      this.loadBalance();\n      this.updateActionData();\n    });\n  }\n\n  async getTokenBalance(contractInfo){\n\n    if (!contractInfo){\n      return false;\n    }\n\n    let tokenBalance = null;\n    switch (contractInfo.name){\n      case 'ETH':\n        tokenBalance = await this.functionsUtil.getETHBalance(this.props.account);\n      break;\n      default:\n        // Init Contract\n        await this.props.initContract(contractInfo.name,contractInfo.address,contractInfo.abi);\n        tokenBalance = await this.functionsUtil.getTokenBalance(contractInfo.name,this.props.account);\n      break;\n    }\n\n    tokenBalance = tokenBalance || this.functionsUtil.BNify(0);\n\n    return tokenBalance;\n  }\n\n  async loadBalance(){\n\n    if (!this.props.toolProps.startContract || !this.props.toolProps.destContract){\n      return false;\n    }\n\n    // Load Balances\n    const [\n      balanceDest,\n      balanceStart\n    ] = await Promise.all([\n      this.getTokenBalance(this.props.toolProps.destContract),\n      this.getTokenBalance(this.props.toolProps.startContract)\n    ]);\n\n    const tokenBalance = this.state.action === 'wrap' ? balanceStart : balanceDest;\n    // console.log('loadBalance',this.props.toolProps.startContract,parseFloat(balanceStart),this.props.toolProps.destContract,parseFloat(balanceDest));\n\n    this.setState({\n      balanceDest,\n      balanceStart,\n      tokenBalance\n    });\n  }\n\n  updateActionData(){\n    let infoBox = null;\n    let tokenConfig = null;\n    let tokenBalance = null;\n    let selectedToken = null;\n    let approveEnabled = true;\n    let approveDescription = null;\n\n    switch (this.state.action){\n      case 'wrap':\n        approveEnabled = true;\n        tokenBalance = this.state.balanceStart;\n        tokenConfig = this.props.toolProps.startContract;\n        selectedToken = this.props.toolProps.startContract.name;\n        approveDescription = `To Mint new ${this.props.toolProps.destContract.name} you need to approve the Smart-Contract first`;\n        infoBox = {\n          icon:'FileDownload',\n          // iconProps:{\n          //   color:this.props.theme.colors.transactions.action.deposit\n          // },\n          text:`Wrap your ${this.props.toolProps.startContract.name} and get ${this.props.toolProps.destContract.name}`\n        };\n      break;\n      case 'unwrap':\n        selectedToken = this.props.toolProps.destContract.name;\n        approveEnabled = false;\n        tokenBalance = this.state.balanceDest;\n        tokenConfig = this.props.toolProps.destContract;\n        approveDescription = `To withdraw your ${this.props.toolProps.startContract.name} you need to approve the Smart-Contract first`;\n        infoBox = {\n          icon:'FileUpload',\n          // iconProps:{\n          //   color:this.props.theme.colors.transactions.action.redeem\n          // },\n          text:`Unwrap your ${this.props.toolProps.destContract.name} and get back ${this.props.toolProps.startContract.name}`\n        };\n      break;\n      default:\n      break;\n    }\n\n    this.setState({\n      infoBox,\n      tokenConfig,\n      tokenBalance,\n      selectedToken,\n      approveEnabled,\n      approveDescription\n    },() => {\n      this.loadBalance();\n    });\n  }\n\n  setAction(action){\n    this.setState({\n      action\n    });\n  }\n\n  transactionSucceeded(tx,amount,params){\n    let infoBox = null;\n\n    switch (this.state.action){\n      case 'wrap':\n        const mintLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.destContract.address.toLowerCase() ) : null;\n        let mintedAmount = mintLog ? parseInt(mintLog.data,16) : amount;\n        mintedAmount = this.functionsUtil.fixTokenDecimals(mintedAmount,this.state.tokenConfig.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have received <strong>${mintedAmount.toFixed(4)} ${this.props.toolProps.destContract.name}</strong>`\n        }\n      break;\n      case 'unwrap':\n        const withdrawLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.destContract.address.toLowerCase() ) : null;\n        let withdrawnAmount = withdrawLog ? parseInt(withdrawLog.data,16) : amount;\n        withdrawnAmount = this.functionsUtil.fixTokenDecimals(withdrawnAmount,this.state.tokenConfig.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have received <strong>${withdrawnAmount.toFixed(4)} ${this.props.toolProps.startContract.name}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    // Update balances\n    this.loadBalance();\n\n    this.setState({\n      infoBox\n    });\n  }\n\n  getTransactionParams(amount){\n    const params = {};\n    switch (this.state.action){\n      case 'wrap':\n        params.value = amount;\n        params.methodParams = [];\n        params.methodName = this.props.toolProps.startContract.wrapMethod;\n      break;\n      case 'unwrap':\n        params.value = null;\n        params.methodParams = [amount];\n        params.methodName = this.props.toolProps.destContract.unwrapMethod;\n      break;\n      default:\n      break;\n    }\n    return params;\n  }\n\n  render() {\n\n    const fullWidth = !!this.props.fullWidth;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        mt={[2,fullWidth ? 2 : 3]}\n      >\n        <Flex\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n          width={[1,fullWidth ? 1 : 0.36]}\n        >\n          {\n            !this.props.account ? (\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mt:3\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                    name={'Input'}\n                    color={'cellText'}\n                  />\n                  <Text\n                    mt={[1,2]}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Please connect with your wallet interact with Idle.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:2,\n                      width:[1,1/2]\n                    }}\n                    handleClick={this.props.connectAndValidateAccount}\n                  >\n                    Connect\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            ) : (\n              <Box\n                width={1}\n              >\n                {\n                  !this.props.action && (\n                    <Flex\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        mb={2}\n                      >\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <CardIconButton\n                          {...this.props}\n                          cardProps={{\n                            px:3,\n                            py:3,\n                            width:0.48\n                          }}\n                          text={'Wrap'}\n                          iconColor={'deposit'}\n                          icon={'ArrowDownward'}\n                          iconBgColor={'#ced6ff'}\n                          isActive={ this.state.action === 'wrap' }\n                          handleClick={ e => this.setAction('wrap') }\n                        />\n                        <CardIconButton\n                          {...this.props}\n                          cardProps={{\n                            px:3,\n                            py:3,\n                            width:0.48\n                          }}\n                          text={'Unwrap'}\n                          iconColor={'redeem'}\n                          icon={'ArrowUpward'}\n                          iconBgColor={'#ceeff6'}\n                          isActive={ this.state.action === 'unwrap' }\n                          handleClick={ e => this.setAction('unwrap') }\n                        />\n                      </Flex>\n                    </Flex>\n\n                  )\n                }\n                <Box\n                  width={1}\n                  my={fullWidth ? 2 : 3}\n                >\n                  {\n                    this.state.tokenBalance!==null ? (\n                      <SendTxWithBalance\n                        {...this.props}\n                        approveEnabled={false}\n                        action={this.state.action}\n                        infoBox={this.state.infoBox}\n                        tokenConfig={this.state.tokenConfig}\n                        tokenBalance={this.state.tokenBalance}\n                        contractInfo={this.props.toolProps.destContract}\n                        callback={this.transactionSucceeded.bind(this)}\n                        approveDescription={this.state.approveDescription}\n                        // changeInputCallback={this.changeInputCallback.bind(this)}\n                        getTransactionParams={this.getTransactionParams.bind(this)}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedToken} to {this.state.action} in your wallet.\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </SendTxWithBalance>\n                    ) : (\n                      <Flex\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading Balance...'}\n                        />\n                      </Flex>\n                    )\n                  }\n                </Box>\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenWrapper;","import React, { Component } from 'react';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport { Text, Icon, Image, Button } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass CustomField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    \n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    let CustomComponent = null;\n    let componentHasChildren = false;\n    const fieldType = fieldInfo.type;\n    const fieldPath = fieldInfo.path;\n    let customValue = fieldPath ? this.functionsUtil.getArrayPath(fieldPath,this.props.row) : null;\n\n    switch (fieldType){\n      case 'image':\n        CustomComponent = Image;\n        fieldProps.src = customValue;\n      break;\n      case 'number':\n        customValue = this.functionsUtil.BNify(customValue).toString();\n        CustomComponent = SmartNumber;\n        fieldProps.number = customValue;\n      break;\n      case 'icon':\n        CustomComponent = Icon;\n        fieldProps.name = customValue;\n      break;\n      case 'button':\n        CustomComponent = Button;\n        componentHasChildren = true;\n        customValue = fieldInfo.label;\n        fieldProps.onClick=() => fieldProps.handleClick(this.props)\n      break;\n      default:\n        CustomComponent = Text;\n        componentHasChildren = true;\n      break;\n    }\n\n    if (!customValue){\n      return null;\n    }\n\n    // Add custom field extra props\n    if (fieldPath){\n      const customFieldName = Object.values(fieldPath).pop();\n      if (this.props.row[`${customFieldName}Props`]){\n        const customFieldProps = this.props.row[`${customFieldName}Props`];\n        // Replace props\n        if (customFieldProps && Object.keys(customFieldProps).length){\n          Object.keys(customFieldProps).forEach(p => {\n            fieldProps[p] = customFieldProps[p];\n          });\n        }\n      }\n    }\n\n    return CustomComponent ? (componentHasChildren ? (<CustomComponent {...fieldProps}>{customValue}</CustomComponent>) : (<CustomComponent {...fieldProps} />) ) : null;\n  }\n}\n\nexport default CustomField;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport CustomField from '../CustomField/CustomField';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass CustomList extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n\n    return (\n      <Flex id=\"custom-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"custom-list\" flexDirection={'column'}>\n          {\n            this.props.rows.map( (row,rowIndex) => {\n              return (\n                <TableRow\n                  row={row}\n                  {...this.props}\n                  key={`asset-${rowIndex}`}\n                  fieldComponent={CustomField}\n                  rowId={`asset-col-${rowIndex}`}\n                  cardId={`asset-card-${rowIndex}`}\n                />\n              );\n            })\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default CustomList;","import theme from '../theme';\nimport { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport AssetField from '../AssetField/AssetField';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass PortfolioDonut extends Component {\n  state = {\n    chartData:null,\n    totalFunds:null,\n    parentWidth:null,\n    selectedToken:null,\n    selectedTokenConfig:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentWillUnmount() {\n    \n  }\n\n  async componentDidMount(){\n    this.loadPortfolio();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  async loadPortfolio() {\n\n    const portfolio = {};\n    let totalFunds = this.functionsUtil.BNify(0);\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.availableTokens),async (token) => {\n      const tokenConfig = this.props.availableTokens[token];\n      const idleTokenBalance = await this.functionsUtil.getTokenBalance(tokenConfig.idle.token,this.props.account);\n\n      if (idleTokenBalance){\n        const tokenPrice = await this.functionsUtil.getIdleTokenPrice(tokenConfig);\n        const tokenBalance = await this.functionsUtil.convertTokenBalance(idleTokenBalance.times(tokenPrice),token,tokenConfig,isRisk);\n\n        if (tokenBalance.gt(0)){\n          portfolio[token] = tokenBalance;\n\n          // Increment total balance\n          totalFunds = totalFunds.plus(tokenBalance);\n        }\n      }\n    });\n\n    // Add Gov Tokens\n    const govTokensUserBalances = await this.functionsUtil.getGovTokensUserBalances(this.props.account,this.props.availableTokens,'DAI',null,true);\n    if (govTokensUserBalances){\n      Object.keys(govTokensUserBalances).forEach( govToken => {\n        const govTokenBalance = this.functionsUtil.BNify(govTokensUserBalances[govToken]);\n        portfolio[govToken] = govTokenBalance;\n        totalFunds = totalFunds.plus(govTokenBalance);\n      });\n    }\n\n    const chartData = [];\n\n    Object.keys(portfolio).forEach(token => {\n      const tokenBalance = portfolio[token];\n      if (tokenBalance.gt(0)){\n        const tokenPercentage = tokenBalance.div(totalFunds).times(100);\n        let tokenColorHsl = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'color','hsl']);\n        tokenColorHsl = tokenColorHsl ? tokenColorHsl.join(',') : '0,0%,0%';\n        chartData.push({\n          id:token,\n          label:token.substr(0,1).toUpperCase()+token.substr(1),\n          value:Math.round(tokenPercentage),\n          color:'hsl('+tokenColorHsl+')'\n        });\n      }\n    });\n\n    this.setState({\n      portfolio,\n      chartData,\n      totalFunds\n    });\n  }\n\n  render() {\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth:0,\n      cornerRadius:0,\n      innerRadius:0.65,\n      motionDamping:15,\n      motionStiffness:90,\n      colors:d => d.color,\n      tooltipFormat: v => v+'%',\n      sliceLabel: d => {\n        if (parseFloat(d.value)>=5){\n          return d.value+'%';\n        } else {\n          return null;\n        }\n      },\n      radialLabel: d => {\n        return null;//Object.keys(this.props.availableTokens).indexOf(d.label.toUpperCase());\n      },\n      theme:{\n        tooltip: {\n          container: {\n            display: 'none'\n          },\n        },\n        labels:{\n          text:{\n            fontSize:16,\n            fontWeight:500,\n            fontFamily: theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsTextColor:'#333',\n      radialLabelsSkipAngle:10,\n      radialLabelsTextXOffset:0,\n      radialLabelsLinkOffset:-parseInt(this.state.parentWidth*0.2),\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      radialLabelsLinkColor:{ from: 'color' },\n      margin: this.props.isMobile ? { top: 15, right: 25, bottom: 30, left: 25 } : { top: 30, right: 50, bottom: 60, left: 50 },\n      onMouseEnter:(data, e) => {\n        const selectedToken = data.id;\n        const selectedTokenConfig = selectedToken ? this.props.availableTokens[selectedToken] || this.functionsUtil.getGlobalConfig(['stats','tokens',selectedToken]) : null;\n        this.setState({\n          selectedToken,\n          selectedTokenConfig\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setState({\n          selectedToken:null,\n          selectedTokenConfig:null\n        });\n      },\n      legends:[\n        {\n          itemWidth: 60,\n          itemHeight: 18,\n          translateY: this.props.isMobile ? 25 : 50,\n          symbolSize: 10,\n          anchor: 'bottom',\n          direction: 'row',\n          itemTextColor: theme.colors.legend,\n          symbolShape: 'circle',\n          effects: [\n            {\n              on: 'hover',\n              style: {\n                itemTextColor: '#000'\n              }\n            }\n          ]\n        }\n      ]\n    };\n\n    const selectedToken = this.state.selectedToken !== null && this.state.portfolio[this.state.selectedToken] ? this.state.portfolio[this.state.selectedToken] : false;\n    const strategyIcon = this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'icon']);\n    const convertToken = this.state.selectedToken ? this.functionsUtil.getGlobalConfig(['stats','tokens',this.state.selectedToken,'conversionRateField']) : false;\n\n    return (\n      <Flex\n        width={1}\n      >\n        { \n          (this.state.totalFunds || selectedToken) && \n            <Flex\n              zIndex={0}\n              top={['32%','35%']}\n              left={['23%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              width={['55%','46%']}\n              position={'absolute'}\n              height={['40%','35%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                selectedToken ? (\n                  <>\n                    <AssetField\n                      fieldInfo={{\n                        name:'icon',\n                        props:{\n                          mb:1,\n                          height:'2.2em'\n                        }\n                      }}\n                      token={this.state.selectedToken}\n                      tokenConfig={this.state.selectedTokenConfig}\n                    />\n                    <SmartNumber\n                      unitProps={{\n                        ml:2,\n                        fontSize:4,\n                        fontWeight:3\n                      }}\n                      decimals={2}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      fontWeight={[3,4]}\n                      unit={ convertToken ? '$' : null}\n                      number={this.state.portfolio[this.state.selectedToken]}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      {this.state.selectedToken}\n                    </Text>\n                  </>\n                ) : (\n                  <>\n                    <Image\n                      mb={1}\n                      height={'2.2em'}\n                      src={strategyIcon}\n                    />\n                    <SmartNumber\n                      unit={'$'}\n                      unitProps={{\n                        ml:2,\n                        fontSize:4,\n                        fontWeight:3\n                      }}\n                      decimals={2}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      fontWeight={[3,4]}\n                      number={this.state.totalFunds}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      Total funds\n                    </Text>\n                  </>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          {...chartProps}\n          showLoader={true}\n          data={this.state.chartData}\n          parentId={this.props.parentId}\n          parentIdHeight={this.props.parentId}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default PortfolioDonut;\n","import CountUp from 'react-countup';\nimport { Flex, Loader } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TotalEarningsCounter extends Component {\n\n  state = {\n    earningsEnd:null,\n    earningsStart:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalEarnings();\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const styleChanged = JSON.stringify(prevProps.counterStyle) !== JSON.stringify(this.props.counterStyle);\n    if (styleChanged || themeModeChanged || mobileChanged){\n      const oldState = Object.assign({},this.state);\n      this.setState({\n        earningsEnd:null,\n        earningsStart:null\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  async loadTotalEarnings(){\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized){\n      return true;\n    }\n\n    const availableTokens = this.props.availableTokens || {};\n    const portfolio = this.props.portfolio || await this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account);\n\n    const earningsStart = portfolio.totalEarnings;\n    const earningsEnd = portfolio.totalAmountLent.times(portfolio.avgAPY.div(100));\n\n    this.setState({\n      earningsEnd,\n      earningsStart\n    });\n  }\n\n  render() {\n\n    const counterStyle = {\n      lineHeight:1,\n      color:this.props.theme.colors.copyColor,\n      fontFamily:this.props.theme.fonts.counter,\n      fontWeight: this.props.isMobile ? 600 : 700,\n      fontSize:this.props.isMobile ? '21px' : '1.7em',\n    };\n\n    // Replace props\n    if (this.props.counterStyle && Object.keys(this.props.counterStyle).length){\n      Object.keys(this.props.counterStyle).forEach(p => {\n        counterStyle[p] = this.props.counterStyle[p];\n      });\n    }\n\n    const unit = this.props.unit || '$ ';\n    const decimals = this.props.decimals || 8;\n\n    return this.state.earningsStart && this.state.earningsEnd ? (\n      <Flex\n      >\n        <CountUp\n          delay={0}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          decimals={decimals}\n          duration={31536000}\n          end={parseFloat(this.state.earningsEnd)}\n          start={parseFloat(this.state.earningsStart)}\n          formattingFn={ n => unit+this.functionsUtil.formatMoney(n,decimals) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              ref={countUpRef}\n              style={counterStyle}\n            />\n          )}\n        </CountUp>\n      </Flex>\n    ) : (\n      <Loader size={\"20px\"} />\n    );\n  }\n}\n\nexport default TotalEarningsCounter;\n","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport { Card, Flex, Image, Text } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\n\nclass EarningsEstimation extends Component {\n  state = {\n    tokensEarnings:null,\n    estimationStepsPerc:null,\n    estimationStepsOptions:null,\n    estimationStepsDefaultOption:null,\n    estimationSteps:{\n      0:{\n        'Month':{\n          perc:1/12,\n          width:1/3\n        },\n        '2 months':{\n          perc:1/6,\n          width:1/3\n        },\n        '3 months':{\n          perc:1/4,\n          width:1/3,\n          optionName:'3M'\n        }\n      },\n      25:{\n        '3 months':{\n          perc:3/12,\n          width:3/12\n        },\n        '8 months':{\n          perc:8/12,\n          width:5/12\n        },\n        'Year':{\n          perc:1,\n          width:4/12,\n          optionName:'1Y'\n        }\n      },\n      90:{\n        'Year':{\n          perc:1,\n          width:1/3,\n        },\n        '2 Years':{\n          perc:2,\n          width:1/3,\n        },\n        '5 Years':{\n          perc:5,\n          width:3/5,\n          optionName:'5Y'\n        }\n      }\n    }\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  setEstimationStepsPerc(estimationStepsPerc){\n    this.setState({\n      estimationStepsPerc\n    });\n  }\n\n  async loadEarnings(){\n    let stepsCount = {};\n    let tokensEarnings = {};\n    // let estimationStepsPerc = 0;\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const aggregatedEarnings = {\n      earnings:this.functionsUtil.BNify(0),\n      amountLent:this.functionsUtil.BNify(0),\n      earningsYear:this.functionsUtil.BNify(0),\n    };\n\n    await this.functionsUtil.asyncForEach(this.props.enabledTokens,async (token) => {\n      const tokenConfig = this.props.availableTokens[token];\n      const amountDeposited = await this.functionsUtil.getAmountDeposited(tokenConfig,this.props.account);\n\n      const [amountLent,avgBuyPrice,idleTokenPrice] = await Promise.all([\n        this.functionsUtil.convertTokenBalance(amountDeposited,token,tokenConfig,isRisk),\n        this.functionsUtil.getAvgBuyPrice([token],this.props.account),\n        this.functionsUtil.getIdleTokenPrice(tokenConfig)\n      ]);\n\n      const earningsPerc = idleTokenPrice.div(avgBuyPrice[token]).minus(1);\n      const earnings = amountLent.times(earningsPerc);\n\n      let earningsYear = 0;\n      let tokenAPY = 0;\n      const tokenAprs = await this.functionsUtil.getTokenAprs(tokenConfig);\n      if (tokenAprs && tokenAprs.avgApr !== null){\n        tokenAPY = tokenAprs.avgApy;\n        earningsYear = amountLent.times(tokenAPY.div(100));\n      }\n\n      const earningsPercStep = Math.floor(earnings.div(earningsYear).times(100));\n      \n      const possibleSteps = Object.keys(this.state.estimationSteps).filter(perc => perc<=earningsPercStep);\n      const maxPossibleStep = parseInt(possibleSteps.pop());\n\n      stepsCount[maxPossibleStep] = stepsCount[maxPossibleStep] ? stepsCount[maxPossibleStep]+1 : 1;\n\n      if (!this.functionsUtil.BNify(amountLent).isNaN() && !this.functionsUtil.BNify(idleTokenPrice).isNaN() && !this.functionsUtil.BNify(earnings).isNaN() && !this.functionsUtil.BNify(earningsYear).isNaN()){\n        tokensEarnings[token] = {\n          earnings,\n          amountLent,\n          earningsYear,\n          idleTokenPrice\n        };\n\n        // const earningsUSD = await this.functionsUtil.convertTokenBalance(earningsYearings,token,tokenConfig,isRisk);\n        // const amountLentUSD = await this.functionsUtil.convertTokenBalance(amountLent,token,tokenConfig,isRisk);\n        // const earningsYearUSD = await this.functionsUtil.convertTokenBalance(earningsYear,token,tokenConfig,isRisk);\n\n        aggregatedEarnings.earnings = aggregatedEarnings.earnings.plus(earnings);\n        aggregatedEarnings.amountLent = aggregatedEarnings.amountLent.plus(amountLent);\n        aggregatedEarnings.earningsYear = aggregatedEarnings.earningsYear.plus(earningsYear);\n      }\n    });\n\n    const maxCountStep = Object.keys(stepsCount).reduce( (maxCountStep,step) => {\n      const count = stepsCount[step];\n      if (count>maxCountStep.count){\n        maxCountStep.step = parseInt(step);\n        maxCountStep.count = parseInt(count);\n      }\n      return maxCountStep;\n    },{\n      step:0,\n      count:0\n    });\n\n    const estimationStepsPerc = maxCountStep.step || parseInt(Object.keys(this.state.estimationSteps)[1]);\n\n    const orderedTokensEarnings = {};\n    this.props.enabledTokens.forEach( token => {\n      if (tokensEarnings[token]){\n        orderedTokensEarnings[token] = tokensEarnings[token];\n      }\n    });\n\n    tokensEarnings = orderedTokensEarnings;\n\n    // Add USD aggregated earnings\n    if (Object.keys(tokensEarnings).length>1){\n      tokensEarnings['USD'] = aggregatedEarnings;\n    }\n\n    let estimationStepsDefaultOption = null;\n    const estimationStepsOptions = Object.keys(this.state.estimationSteps).map( step => {\n      const estimationStep = Object.values(this.state.estimationSteps[step]).pop();\n      const label = estimationStep.optionName ? estimationStep.optionName : Object.keys(this.state.estimationSteps[step]).pop();\n      const value = parseInt(step);\n      const option = { value, label };\n\n      if (value === estimationStepsPerc){\n        estimationStepsDefaultOption = option;\n      }\n      return option;\n    });\n\n    this.setState({\n      tokensEarnings,\n      estimationStepsPerc,\n      estimationStepsOptions,\n      estimationStepsDefaultOption,\n    });\n  }\n\n  render() {\n\n    if (!this.state.tokensEarnings){\n      return (\n        <FlexLoader\n          flexProps={{\n            flexDirection:'row',\n            minHeight:this.props.height\n          }}\n          loaderProps={{\n            size:'30px'\n          }}\n          textProps={{\n            ml:2\n          }}\n          text={'Loading estimations...'}\n        />\n      );\n    }\n\n    const estimationSteps = this.state.estimationSteps[this.state.estimationStepsPerc] ? this.state.estimationSteps[this.state.estimationStepsPerc] : this.state.estimationSteps[0];\n\n    return (\n      <Card\n        pr={0}\n        my={1}\n        width={1}\n        px={[3,4]}\n        py={[2,3]}\n        boxShadow={1}\n        borderRadius={2}\n        borderColor={'cardBorder'}\n        backgroundColor={'cardBg'}\n      >\n        <Flex\n          mt={2}\n          mb={3}\n          zIndex={9999}\n          justifyContent={'flex-end'}\n        >\n          <Flex\n            zIndex={9999}\n            width={[1,0.2]}\n            flexDirection={'column'}\n          >\n            <GenericSelector\n              innerProps={{\n                p:0,\n                px:1\n              }}\n              name={'estimation-step'}\n              options={this.state.estimationStepsOptions}\n              onChange={ v => this.setEstimationStepsPerc(v) }\n              defaultValue={this.state.estimationStepsDefaultOption}\n            />\n          </Flex>\n        </Flex>\n        {\n          Object.keys(this.state.tokensEarnings).map((token,tokenIndex) => {\n            const tokenConfig = this.props.availableTokens[token];\n            const tokenEarnings = this.state.tokensEarnings[token];\n            const estimationStepPerc = this.functionsUtil.BNify(Object.values(estimationSteps).pop().perc);\n            const finalEarnings = tokenEarnings.earningsYear.times(estimationStepPerc);\n            const cursorPerc = Math.min(1,parseFloat(tokenEarnings.earnings.div(finalEarnings)));\n            const tokenIcon = tokenConfig && tokenConfig.icon ? tokenConfig.icon :`images/tokens/${token}.svg`;\n            const tokenRGBColor = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'color','rgb']).join(',');\n            // console.log(tokenEarnings.earnings.toFixed(10),tokenEarnings.earningsYear.toFixed(10),finalEarnings.toFixed(10),cursorPerc.toFixed(10),estimationStepPerc.toFixed(10));\n            return (\n              <Flex\n                id={`asset-${token}`}\n                flexDirection={'row'}\n                key={`asset-${token}`}\n                borderTop={ token === 'USD' ? `1px solid ${this.props.theme.colors.divider}` : null }\n              >\n                <Flex\n                  width={[1,0.93]}\n                  position={'relative'}\n                >\n                  <Flex\n                    width={1}\n                    height={'100%'}\n                    position={'absolute'}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    <Flex\n                      width={[0.15,0.1]}\n                    >\n                    </Flex>\n                    <Flex\n                      width={[0.85,0.9]}\n                      height={'100%'}\n                      flexDirection={'row'}\n                    >\n                      {\n                        Object.keys(estimationSteps).map((label,estimateIndex) => {\n                          const estimationStep = estimationSteps[label];\n                          const estimationStepEarnings = tokenEarnings.earningsYear.times(this.functionsUtil.BNify(estimationStep.perc));\n                          let estimationStepEarningsFormatted = this.functionsUtil.formatMoney(estimationStepEarnings,this.props.isMobile ? 2 : estimationStepEarnings.lt(1) ? 3 : 2);\n                          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'conversionRateField']);\n                          if (conversionRateField){\n                            estimationStepEarningsFormatted = '$ '+estimationStepEarningsFormatted;\n                          }\n                          return (\n                            <Flex\n                              pr={2}\n                              justifyContent={'flex-end'}\n                              width={estimationStep.width}\n                              pt={ token === 'USD' ? 2 : null }\n                              key={`asset-estimate-${token}-${estimateIndex}`}\n                              borderRight={`1px solid ${this.props.theme.colors.divider}`}\n                            >\n                              {\n                                (token === 'USD' || (estimateIndex === Object.keys(estimationSteps).length-1)) && \n                                  <Text\n                                    fontWeight={3}\n                                    fontSize={[0,'1em']}\n                                    style={{\n                                      wordBreak:'break-all'\n                                    }}\n                                    color={tokenEarnings.earnings.gte(estimationStepEarnings) ? 'copyColor' : 'legend'}\n                                  >\n                                    {estimationStepEarningsFormatted}\n                                  </Text>\n                              }\n                            </Flex>\n                          );\n                        })\n                      }\n                    </Flex>\n                  </Flex>\n                  <Flex\n                    width={1}\n                    zIndex={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                    pt={ token === 'USD' ? ['2em','2.8em'] : '1.4em' }\n                    pb={ tokenIndex<Object.keys(this.state.tokensEarnings).length-1 ? '1em' : 0 }\n                  >\n                    <Flex\n                      width={[0.15,0.1]}\n                      justifyContent={['flex-start','flex-end']}\n                    >\n                      <Text\n                        pr={[0,2]}\n                        fontSize={[0,3]}\n                        fontWeight={[3,4]}\n                      >\n                        {token}\n                      </Text>\n                    </Flex>\n                    <Flex\n                      width={[0.85,0.9]}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      height={['20px','35px']}\n                      justifyContent={'flex-start'}\n                    >\n                      <Flex\n                        height={'100%'}\n                        width={cursorPerc}\n                        backgroundColor={'cardBg'}\n                      >\n                        <Flex\n                          height={'100%'}\n                          width={'100%'}\n                          borderRadius={['0 20px 20px 0','0 35px 35px 0']}\n                          style={{background:`linear-gradient(90deg, rgba(${tokenRGBColor},0) 0%, rgba(${tokenRGBColor},0.1) 30%, rgba(${tokenRGBColor},1) 100%)`}}\n                        ></Flex>\n                      </Flex>\n                      <Flex\n                        pl={2}\n                        width={'auto'}\n                        height={'100%'}\n                        alignItems={'center'}\n                        justifyContent={'flex-start'}\n                      >\n                        <Image src={tokenIcon} height={['1.4em','2.2em']} />\n                      </Flex>\n                      {\n                        <Flex\n                          pl={2}\n                          alignItems={'center'}\n                        >\n                          {\n                            token !== 'USD' ? (\n                              <AssetField\n                                {...this.props}\n                                token={token}\n                                tokenConfig={tokenConfig}\n                                fieldInfo={{\n                                  name:'earningsCounter',\n                                  props:{\n                                    decimals:this.props.isMobile ? 6 : 7,\n                                    maxPrecision:this.props.isMobile ? 9 : 10,\n                                    style:{\n                                      color:this.props.theme.colors.copyColor,\n                                      fontWeight:this.props.isMobile ? 500 : 700,\n                                      fontSize:this.props.isMobile ? '14px' : '22px',\n                                    }\n                                  }\n                                }}\n                              />\n                            ) : (\n                              <TotalEarningsCounter\n                                {...this.props}\n                                decimals={this.props.isMobile ? 6 : 7}\n                                maxPrecision={this.props.isMobile ? 9 : 10}\n                                counterStyle={{\n                                  color:this.props.theme.colors.copyColor,\n                                  fontWeight:this.props.isMobile ? 500 : 700,\n                                  fontFamily:this.props.theme.fonts.sansSerif,\n                                  fontSize:this.props.isMobile ? '14px' : '22px',\n                                }}\n                              />\n                            )\n                          }\n                        </Flex>\n                      }\n                    </Flex>\n                  </Flex>\n                </Flex>\n                {\n                  !this.props.isMobile && \n                    <Flex width={0.07} alignItems={'flex-start'} justifyContent={'flex-end'}>\n                    </Flex>\n                }\n              </Flex>\n            )\n          })\n        }\n        <Flex\n          flexDirection={'row'}\n        >\n          <Flex\n            width={[1,0.93]}\n            position={'relative'}\n          >\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'center'}\n            >\n              <Flex width={[0.15,0.1]}></Flex>\n              <Flex\n                width={[0.85,0.9]}\n                flexDirection={'row'}\n              >\n                {\n                  Object.keys(estimationSteps).map((estimationLabel,estimateIndex) => {\n                    const estimationStep = estimationSteps[estimationLabel];\n                    return (\n                      <Flex\n                        pt={2}\n                        pr={[1,2]}\n                        justifyContent={'flex-end'}\n                        width={estimationStep.width}\n                        key={`estimate-label-${estimateIndex}`}\n                        borderRight={`1px solid ${this.props.theme.colors.divider}`}\n                      >\n                        <Text\n                          fontWeight={3}\n                          fontSize={[0,2]}\n                          color={'legend'}\n                        >\n                          {estimationLabel}\n                        </Text>\n                      </Flex>\n                    );\n                  })\n                }\n              </Flex>\n            </Flex>\n          </Flex>\n          {\n            !this.props.isMobile && \n              <Flex width={0.07} alignItems={'flex-start'} justifyContent={'center'}>\n                <Text fontWeight={4} fontSize={3}></Text>\n              </Flex>\n          }\n        </Flex>\n      </Card>\n    );\n  }\n}\n\nexport default EarningsEstimation;\n","import React, { Component } from 'react';\nimport { Flex, Icon, Text, Image } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass DashboardIconButton extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          pr:2,\n          py:[2,3],\n          pl:[2,3],\n        }}\n        isActive={false}\n        isInteractive={true}\n        handleClick={this.props.handleClick}\n      >\n        <Flex\n          height={'100%'}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'center'}\n        > \n          <Flex\n            px={[1,0]}\n          >\n            {\n              this.props.icon ? (\n                <Icon\n                  name={this.props.icon}\n                  size={this.props.isMobile ? '1.8em' : '3em'}\n                  color={this.props.iconColor ? this.props.iconColor : 'redeem'}\n                />\n              ) : this.props.image && (\n                <Image\n                  src={this.props.image}\n                  width={this.props.isMobile ? '1.8em' : '2.7em'}\n                  height={this.props.isMobile ? '1.8em' : '2.7em'}\n                />\n              )\n            }\n          </Flex>\n          <Flex\n            ml={[2,3]}\n            flexDirection={'column'}\n            alignItems={'flex-start'}\n            justifyContent={'center'}\n          >\n            <Text\n              fontWeight={3}\n              fontSize={[1,3]}\n            >\n              {this.props.title}\n            </Text>\n            <Text\n              fontWeight={2}\n              fontSize={[0,2]}\n              color={'cellText'}\n            >\n              {this.props.text}\n            </Text>\n          </Flex>\n          <Icon\n            align={'center'}\n            color={'cellText'}\n            name={'KeyboardArrowRight'}\n            size={this.props.isMobile ? '1.8em' : '2.5em'}\n          />\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default DashboardIconButton;\n","import CountUp from 'react-countup';\nimport { Box, Loader } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TotalBalanceCounter extends Component {\n\n  state = {\n    counterEnd:null,\n    counterStart:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalEarnings();\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const styleChanged = JSON.stringify(prevProps.counterStyle) !== JSON.stringify(this.props.counterStyle);\n    if (styleChanged || themeModeChanged || mobileChanged){\n      const oldState = Object.assign({},this.state);\n      this.setState({\n        counterEnd:null,\n        counterStart:null\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  async loadTotalEarnings(){\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized){\n      return true;\n    }\n\n    const availableTokens = this.props.availableTokens || {};\n    const portfolio = this.props.portfolio || await this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account);\n\n    const counterStart = portfolio.totalAmountLent.plus(portfolio.totalEarnings);\n    const counterEnd = counterStart.plus(counterStart.times(portfolio.avgAPY.div(100)));\n\n    this.setState({\n      counterEnd,\n      counterStart\n    });\n  }\n\n  render() {\n\n    const counterStyle = {\n      lineHeight:1,\n      color:this.props.theme.colors.copyColor,\n      fontFamily:this.props.theme.fonts.counter,\n      fontWeight: this.props.isMobile ? 600 : 700,\n      fontSize:this.props.isMobile ? '21px' : '1.7em',\n    };\n\n    // Replace props\n    if (this.props.counterStyle && Object.keys(this.props.counterStyle).length){\n      Object.keys(this.props.counterStyle).forEach(p => {\n        counterStyle[p] = this.props.counterStyle[p];\n      });\n    }\n\n    const decimals = this.props.decimals || 8;\n\n    return this.state.counterStart && this.state.counterEnd ? (\n      <Box\n        width={1}\n      >\n        <CountUp\n          delay={0}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          decimals={decimals}\n          duration={31536000}\n          end={parseFloat(this.state.counterEnd)}\n          start={parseFloat(this.state.counterStart)}\n          formattingFn={ n => '$ '+this.functionsUtil.formatMoney(n,decimals) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              ref={countUpRef}\n              style={counterStyle}\n            />\n          )}\n        </CountUp>\n      </Box>\n    ) : (\n      <Loader size={\"20px\"} />\n    );\n  }\n}\n\nexport default TotalBalanceCounter;\n","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetsList from '../AssetsList/AssetsList';\nimport CustomList from '../CustomList/CustomList';\n// import RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport PortfolioDonut from '../PortfolioDonut/PortfolioDonut';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport PortfolioEquity from '../PortfolioEquity/PortfolioEquity';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport EarningsEstimation from '../EarningsEstimation/EarningsEstimation';\nimport { Flex, Box, Heading, Text, Tooltip, Icon, Loader } from \"rimble-ui\";\nimport DashboardIconButton from '../DashboardIconButton/DashboardIconButton';\nimport TotalBalanceCounter from '../TotalBalanceCounter/TotalBalanceCounter';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\n\n// const env = process.env;\n\nclass StrategyPage extends Component {\n\n  state = {\n    portfolio:null,\n    tokensToMigrate:{},\n    aggregatedValues:[],\n    activeCoverages:null,\n    depositedTokens:null,\n    remainingTokens:null,\n    batchedDeposits:null,\n    portfolioLoaded:false,\n    availableGovTokens:null,\n    portfolioEquityStartDate:null,\n    batchedDepositsAvailableTokens:null,\n    portfolioEquityQuickSelection:'week'\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    await this.loadPortfolio();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const availableTokensChanged = JSON.stringify(prevProps.availableTokens) !== JSON.stringify(this.props.availableTokens);\n    if (accountChanged || availableTokensChanged){\n      // console.log('StrategyPage - availableTokensChanged',availableTokensChanged);\n      this.setState({\n        portfolioLoaded:false\n      },() => {\n        this.loadPortfolio();\n      });\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  setPortfolioEquityQuickSelection(portfolioEquityQuickSelection){\n    this.setStateSafe({\n      portfolioEquityQuickSelection\n    });\n  }\n\n  async loadPortfolio(){\n    const availableTokens = this.props.availableTokens || {};\n\n    if (this.state.portfolioLoaded){\n      return false;\n    }\n\n    // Load portfolio if account is set\n    if (this.props.account){\n      const newState = {};\n      const firstBlockNumber = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n\n      // Load data\n      const [\n        activeCoverages,\n        batchedDeposits,\n        tokensToMigrate,\n        portfolio\n      ] = await Promise.all([\n        // Load active coverages\n        this.functionsUtil.getActiveCoverages(this.props.account),\n        // Load claimable batches\n        this.functionsUtil.getBatchedDeposits(this.props.account),\n        // Load tokens to be migrated\n        this.functionsUtil.getTokensToMigrate(this.props.selectedStrategy),\n        // Load portfolio\n        this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account),\n        // Load and process Etherscan Txs\n        this.functionsUtil.getEtherscanTxs(this.props.account,firstBlockNumber,'latest',Object.keys(availableTokens))\n      ]);\n\n      newState.portfolio = portfolio;\n\n      newState.activeCoverages = activeCoverages && activeCoverages.length>0 ? activeCoverages.map( c => {\n        const statusColors = this.props.theme.colors.transactions.status;\n        const statusIcon = c.status === 'Expired' ? 'Error' : 'VerifiedUser';\n        const statusColor = c.status === 'Expired' ? statusColors.failed : statusColors.completed;\n        const portfolioCoverage = portfolio.totalBalance.gt(0) ? c.balance.div(portfolio.totalBalance).times(100).toFixed(2)+'%' : 'N/A';\n        const statusIconProps = {\n          color:statusColor\n        };\n        return Object.assign(c,{\n          statusIcon,\n          statusIconProps,\n          portfolioCoverage\n        });\n      }) : null;\n\n      newState.batchedDeposits = batchedDeposits && Object.keys(batchedDeposits).length>0 ? batchedDeposits : null;\n\n      if (newState.batchedDeposits){\n        newState.batchedDepositsAvailableTokens = Object.keys(newState.batchedDeposits).reduce( (batchedDepositsAvailableTokens,token) => {\n          const batchInfo = newState.batchedDeposits[token];\n          const tokenConfig = this.functionsUtil.getGlobalConfig(['tools','batchDeposit','props','availableTokens',token]);\n          if (tokenConfig.strategy === this.props.selectedStrategy){\n            switch (batchInfo.status){\n              case 'pending':\n                tokenConfig.statusIcon = 'Timelapse';\n                tokenConfig.statusIconProps = {\n                  color:this.props.theme.colors.transactions.status.pending\n                };\n              break;\n              case 'executed':\n                tokenConfig.statusIcon = 'Done';\n                tokenConfig.statusIconProps = {\n                  color:this.props.theme.colors.transactions.status.completed\n                };\n              break;\n              default:\n              break;\n            }\n            tokenConfig.token = token;\n            tokenConfig.status = batchInfo.status;\n            tokenConfig.deposited = batchInfo.batchDeposits;\n            tokenConfig.redeemable = batchInfo.batchRedeems;\n            batchedDepositsAvailableTokens[tokenConfig.baseToken] = tokenConfig;\n          }\n          return batchedDepositsAvailableTokens;\n        },{});\n      }\n\n\n      if (portfolio){\n        const depositedTokens = Object.keys(portfolio.tokensBalance).filter(token => ( this.functionsUtil.BNify(portfolio.tokensBalance[token].idleTokenBalance).gt(0) ));\n\n        newState.depositedTokens = depositedTokens;\n\n        const isRisk = this.props.selectedStrategy === 'risk';\n\n        let avgAPY = this.functionsUtil.BNify(0);\n        let avgScore = this.functionsUtil.BNify(0);\n        let totalAmountLent = this.functionsUtil.BNify(0);\n        let totalBalanceWithScore = this.functionsUtil.BNify(0);\n\n        await this.functionsUtil.asyncForEach(depositedTokens,async (token) => {\n          const tokenConfig = availableTokens[token];\n\n          const [\n            tokenAprs,\n            tokenScore,\n            amountLent,\n          ] = await Promise.all([\n            this.functionsUtil.getTokenAprs(tokenConfig),\n            this.functionsUtil.getTokenScore(tokenConfig,isRisk),\n            this.functionsUtil.getAmountDeposited(tokenConfig,this.props.account)\n          ]);\n\n          const amountLentToken = await this.functionsUtil.convertTokenBalance(amountLent,token,tokenConfig,isRisk);\n\n          const tokenBalance = portfolio.tokensBalance[token].tokenBalance;\n          const tokenWeight = tokenBalance.div(portfolio.totalBalance);\n          const tokenAPY = tokenAprs.avgApy && !this.functionsUtil.BNify(tokenAprs.avgApy).isNaN() ? this.functionsUtil.BNify(tokenAprs.avgApy) : this.functionsUtil.BNify(0);\n\n          if (!tokenAPY.isNaN()){\n            avgAPY = avgAPY.plus(tokenAPY.times(tokenWeight));\n          }\n\n          if (!tokenScore.isNaN() && tokenScore.gt(0)){\n            avgScore = avgScore.plus(tokenScore.times(tokenBalance));\n            totalBalanceWithScore = totalBalanceWithScore.plus(tokenBalance);\n          }\n\n          if (amountLentToken){\n            totalAmountLent = totalAmountLent.plus(amountLentToken);\n          }\n        });\n\n        if (!totalBalanceWithScore.isNaN() && totalBalanceWithScore.gt(0)){\n          avgScore = avgScore.div(totalBalanceWithScore);\n        }\n\n        // console.log('avgAPY',avgAPY.toFixed());\n\n        // Add gov tokens to earnings\n        const govTokensTotalBalance = await this.functionsUtil.getGovTokensUserTotalBalance(this.props.account,availableTokens,'DAI');\n        const govTokensUserBalance = await this.functionsUtil.getGovTokensUserBalances(this.props.account,availableTokens,null);\n        const govTokensTotalBalanceTooltip = govTokensUserBalance ? Object.keys(govTokensUserBalance).map( govToken => {\n          const balance = govTokensUserBalance[govToken];\n          if (balance.gt(0)){\n            return `+${balance.toFixed(2)} ${govToken}`;\n          } else {\n            return null;\n          }\n        }).filter(v => (v !== null)) : null;\n\n        newState.avgAPY = avgAPY;\n        newState.avgScore = avgScore;\n        newState.govTokensTotalBalance = govTokensTotalBalance;\n        newState.govTokensTotalBalanceTooltip = govTokensTotalBalanceTooltip;\n      }\n\n      newState.tokensToMigrate = tokensToMigrate;\n      newState.portfolioLoaded = true;\n\n      const remainingTokens = Object.keys(availableTokens).filter(token => (!newState.depositedTokens.includes(token) && !Object.keys(newState.tokensToMigrate).includes(token)) );\n      newState.remainingTokens = remainingTokens;\n\n      // Portfolio loaded\n      this.setStateSafe(newState);\n    // Show available assets for not logged users\n    } else {\n      this.setStateSafe({\n        tokensToMigrate:{},\n        depositedTokens:[],\n        portfolioLoaded:true,\n        remainingTokens:Object.keys(availableTokens),\n      });\n    }\n  }\n\n  render(){\n    const viewOnly = this.props.connectorName === 'custom';\n    const govTokens = this.functionsUtil.getGlobalConfig(['govTokens']);\n    const apyLong = this.functionsUtil.getGlobalConfig(['messages','apyLong']);\n    const riskScore = this.functionsUtil.getGlobalConfig(['messages','riskScore']);\n    const yieldFarming = this.functionsUtil.getGlobalConfig(['messages','yieldFarming']);\n    const batchDepositConfig = this.functionsUtil.getGlobalConfig(['tools','batchDeposit']);\n    const coverProtocolConfig = this.functionsUtil.getGlobalConfig(['tools','coverProtocol']);\n\n    return (\n      <Box\n        width={1}\n      >\n        <Title\n          mb={3}\n        >\n          {this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'title'])} strategy\n        </Title>\n        {\n          !this.state.portfolioLoaded ? (\n            <FlexLoader\n              textProps={{\n                textSize:4,\n                fontWeight:2\n              }}\n              loaderProps={{\n                mb:3,\n                size:'40px'\n              }}\n              flexProps={{\n                minHeight:'50vh',\n                flexDirection:'column'\n              }}\n              text={'Loading portfolio...'}\n            />\n          ) : (\n            <Box\n              width={1}\n            >\n              {\n                this.props.account && this.state.depositedTokens.length>0 ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      mb={3}\n                      width={1}\n                      mt={[2,0]}\n                      alignItems={'center'}\n                      justifyContent={'center'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.avgAPY ? (\n                                <Text\n                                  lineHeight={1}\n                                  fontWeight={[3,4]}\n                                  color={'copyColor'}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: this.state.avgAPY.toFixed(2)+'<small>%</small>' }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Avg APY\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','apyLong'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio ? (\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <TotalBalanceCounter\n                                    decimals={5}\n                                    {...this.props}\n                                    portfolio={this.state.portfolio}\n                                  />\n                                  <Flex\n                                    width={1}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'center'}\n                                  >\n                                    <Flex\n                                      width={0.45}\n                                      alignItems={'center'}\n                                      justifyContent={'flex-end'}\n                                    >\n                                      <Text\n                                        fontSize={1}\n                                        fontWeight={3}\n                                        fontFamily={this.props.theme.fonts.counter}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >\n                                        +{this.state.portfolio.totalEarningsPerc.toFixed(2)}%\n                                      </Text>\n                                    </Flex>\n                                    <Text\n                                      mx={1}\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      fontFamily={this.props.theme.fonts.counter}\n                                      color={this.props.theme.colors.transactions.status.completed}\n                                    >|</Text>\n                                    <Flex\n                                      width={0.45}\n                                      alignItems={'center'}\n                                      justifyContent={'flex-start'}\n                                    >\n                                      <TotalEarningsCounter\n                                        {...this.props}\n                                        unit={'+$'}\n                                        decimals={4}\n                                        counterStyle={{\n                                          fontSize:14,\n                                          fontWeight:600,\n                                          color:this.props.theme.colors.transactions.status.completed\n                                        }}\n                                        portfolio={this.state.portfolio}\n                                      />\n                                    </Flex>\n                                  </Flex>\n                                </Flex>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Total Balance\n                              </Text>\n                              {\n                                this.state.govTokensTotalBalance && (\n                                  <Tooltip\n                                    placement={'bottom'}\n                                    message={'Total Balance does not include accrued governance tokens: '+(this.state.govTokensTotalBalance && this.state.govTokensTotalBalance.gt(0) ? ` (${this.state.govTokensTotalBalanceTooltip.join(' / ')})` : '')}\n                                  >\n                                    <Icon\n                                      ml={2}\n                                      name={\"Info\"}\n                                      size={'1em'}\n                                      color={'cellTitle'}\n                                    />\n                                  </Tooltip>\n                                )\n                              }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.avgScore ? (\n                                <Text\n                                  lineHeight={1}\n                                  fontWeight={[3,4]}\n                                  color={'copyColor'}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: this.state.avgScore.toFixed(2) }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Avg Risk Score\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','riskScoreShort'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      width={1}\n                      id={\"portfolio-charts\"}\n                      justifyContent={'space-between'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        mb={[3,0]}\n                        width={[1,0.328]}\n                        flexDirection={'column'}\n                        id={\"portfolio-composition\"}\n                      >\n                        <DashboardCard\n                          title={'Composition'}\n                          titleProps={ !this.props.isMobile ? {\n                            style:{\n                              minHeight:'39px'\n                            }\n                          } : null}\n                        >\n                          <PortfolioDonut\n                            {...this.props}\n                            parentId={'portfolio-composition'}\n                          />\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,0.666]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard>\n                          <Flex\n                            pt={[3,4]}\n                            px={[3,4]}\n                            aligItems={'center'}\n                            flexDirection={['column','row']}\n                          >\n                            <Flex\n                              width={[1,0.7]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-start'}\n                            >\n                              <Title\n                                fontWeight={4}\n                                fontSize={[2,3]}\n                                textAlign={'left'}\n                              >\n                                Performance\n                              </Title>\n                            </Flex>\n                            <Flex\n                              mt={[2,0]}\n                              width={[1,0.3]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-end'}\n                            >\n                              <GenericSelector\n                                innerProps={{\n                                  p:0,\n                                  px:1\n                                }}\n                                defaultValue={\n                                  {value:'week',label:'1W'}\n                                }\n                                name={'performance-time'}\n                                options={[\n                                  {value:'week',label:'1W'},\n                                  {value:'month',label:'1M'},\n                                  {value:'month3',label:'3M'},\n                                  {value:'month6',label:'6M'},\n                                  {value:'all',label:'MAX'},\n                                ]}\n                                onChange={ v => this.setPortfolioEquityQuickSelection(v) }\n                              />\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            ml={[0,3]}\n                            aligItems={'center'}\n                            justifyContent={'center'}\n                            id={\"portfolio-performance\"}\n                          >\n                            <PortfolioEquity\n                              {...this.props}\n                              enabledTokens={[]}\n                              parentId={'portfolio-performance'}\n                              parentIdHeight={'portfolio-composition'}\n                              quickDateSelection={this.state.portfolioEquityQuickSelection}\n                              frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n                            />\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Flex\n                    mb={3}\n                    mx={'auto'}\n                    width={[1,0.8]}\n                    aligItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      fontWeight={2}\n                      fontSize={[1,2]}\n                      textAlign={'center'}\n                    >\n                      {\n                        this.props.isMobile ?\n                          this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'descShort'])\n                        :\n                          this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'descLong'])\n                      }\n                    </Text>\n                  </Flex>\n                )\n              }\n              {\n                /*\n                !this.state.activeCoverages && coverProtocolConfig.enabled && this.state.portfolio && this.state.portfolio.totalBalance.gt(0) && (\n                  <Flex\n                    width={1}\n                    mt={[3,4]}\n                    alignItems={'center'}\n                    id={'no-active-cover'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        py:3,\n                        px:[3,4],\n                        width:[1,'auto'],\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Image\n                          mb={2}\n                          height={['1.8em','2.2em']}\n                          src={coverProtocolConfig.image}\n                        />\n                        <Text\n                          mb={1}\n                          fontSize={[2,4]}\n                          fontWeight={500}\n                          textAlign={'center'}\n                        >\n                          You don't have an active coverage\n                        </Text>\n                        <Text\n                          mb={2}\n                          color={'blue'}\n                          fontSize={[1,2]}\n                          fontWeight={500}\n                          hoverColor={'blue'}\n                          textAlign={'center'}\n                        >\n                          Cover Protocol provides coverage against Smart-Contract attacks\n                        </Text>\n                        <RoundButton\n                          buttonProps={{\n                            mt:1,\n                            width:'auto',\n                            minHeight:'40px',\n                            mainColor:'redeem',\n                            size:this.props.isMobile ? 'small' : 'medium'\n                          }}\n                          handleClick={ e => this.props.goToSection(`tools/${coverProtocolConfig.route}`) }\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <Text\n                              color={'white'}\n                              fontSize={[1,2]}\n                              fontWeight={500}\n                            >\n                              Get Covered\n                            </Text>\n                            <Icon\n                              ml={1}\n                              size={'1.3em'}\n                              name={'KeyboardArrowRight'}\n                            />\n                          </Flex>\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                )\n                */\n              }\n              {\n                this.state.batchedDeposits && (\n                  <Flex\n                    width={1}\n                    mb={[0,3]}\n                    id={'batched-deposits'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Batched Deposits</Title>\n                    <Flex\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <AssetsList\n                        enabledTokens={Object.keys(this.state.batchedDepositsAvailableTokens)}\n                        cols={[\n                          {\n                            title:'TOKEN',\n                            props:{\n                              width:[0.3,0.2]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'DEPOSITED',\n                            props:{\n                              width:[0.33, 0.21],\n                            },\n                            fields:[\n                              {\n                                name:'custom',\n                                type:'number',\n                                path:['deposited'],\n                                props:{\n                                  decimals: 4\n                                }\n                              },\n                              {\n                                name:'tokenName',\n                                props:{\n                                  ml:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'REDEEMABLE',\n                            props:{\n                              width:[0.44,0.23],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                name:'custom',\n                                type:'number',\n                                path:['redeemable'],\n                                props:{\n                                  decimals: 4\n                                }\n                              },\n                              {\n                                type:'text',\n                                name:'custom',\n                                path:['token'],\n                                props:{\n                                  ml:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'STATUS',\n                            props:{\n                              width:[0.26,0.19],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                type:'icon',\n                                mobile:false,\n                                name:'custom',\n                                path:['statusIcon'],\n                                props:{\n                                  mr:2,\n                                  size:this.props.isMobile ? '1.2em' : '1.8em'\n                                }\n                              },\n                              {\n                                name:'custom',\n                                path:['status'],\n                                props:{\n                                  style:{\n                                    textTransform:'capitalize'\n                                  }\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[0.35,0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label:'Claim',\n                                funcProps:{\n                                  disabled:(props) => (props.tokenConfig.status === 'pending')\n                                },\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'migrate',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.goToSection(`tools/${batchDepositConfig.route}/${props.tokenConfig.token}`)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                        availableTokens={this.state.batchedDepositsAvailableTokens}\n                      />\n                    </Flex>\n                  </Flex>\n                )\n              }\n              <Flex\n                width={1}\n                id={'available-assets'}\n                flexDirection={'column'}\n                mb={!this.state.depositedTokens.length ? 4 : 0}\n              >\n                {\n                  (this.state.depositedTokens.length>0 || Object.keys(this.state.tokensToMigrate).length>0 || this.state.remainingTokens.length>0 ) &&\n                    <Title my={[3,4]}>Available assets</Title>\n                }\n                <Flex width={1} flexDirection={'column'}>\n                  {\n                    Object.keys(this.state.tokensToMigrate).length>0 &&\n                    <Flex\n                      width={1}\n                      mb={[3,4]}\n                      id={\"migrate-assets\"}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Assets to migrate\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={Object.keys(this.state.tokensToMigrate)}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.15]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            mobile:this.props.account !== null,\n                            props:{\n                              width:[0.21, 0.12],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.29,0.15],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                }\n                              },\n                            ]\n                          },\n                          {\n                            title:'SCORE',\n                            desc:riskScore,\n                            props:{\n                              width:[0.21,0.12],\n                            },\n                            fields:[\n                              {\n                                name:'score'\n                              }\n                            ]\n                          },\n                          {\n                            title:'BALANCE',\n                            mobile:false,\n                            props:{\n                              width:[0.16,0.14],\n                            },\n                            parentProps:{\n                              width:1,\n                              pr:[2,4]\n                            },\n                            fields:[\n                              {\n                                name:'amountToMigrate',\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.15],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens'\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[ this.props.account === null ? 0.29 : 0 ,0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label: 'Migrate',\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'migrate',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                  {\n                  this.state.depositedTokens.length>0 &&\n                    <Flex\n                      mb={ this.state.remainingTokens.length>0 ? [3,4] : 0 }\n                      width={1}\n                      id={\"deposited-assets\"}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Deposited assets\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={this.state.depositedTokens}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.13]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            mobile:false,\n                            props:{\n                              width:[0.12,0.09],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.30,0.14],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                }\n                              },\n                            ]\n                          },\n                          {\n                            title:'SCORE',\n                            desc:riskScore,\n                            props:{\n                              width:[0.21,0.10],\n                            },\n                            parentProps:{\n                              alignItems:['center','flex-start'],\n                            },\n                            fields:[\n                              {\n                                name:'score',\n                              }\n                            ]\n                          },\n                          {\n                            title:'DEPOSITED',\n                            props:{\n                              width:[0.22,0.13],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                name:'amountLent'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.11],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'EARNINGS',\n                            props:{\n                              width:[0.15,0.13],\n                              textAlign:'center'\n                            },\n                            parentProps:{\n                              alignItems:'center',\n                              flexDirection:'column',\n                            },\n                            fields:[\n                              {\n                                name:'earnings',\n                                props:{\n                                  decimals:3\n                                }\n                              },\n                              {\n                                name:'earningsPerc',\n                                showLoader:false,\n                                showDirection:false,\n                                props:{\n                                  fontSize:0,\n                                  decimals:3\n                                }\n                              }\n                            ]\n                          },\n                          /*\n                          {\n                            title:'EARNINGS %',\n                            props:{\n                              width:[0.27,0.14],\n                            },\n                            fields:[\n                              {\n                                name:'earningsPerc'\n                              }\n                            ]\n                          },\n                          */\n                          {\n                            title:'',\n                            mobile:false,\n                            props:{\n                              width:0.17,\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label:'Manage',\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'redeem',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                  {\n                    this.state.remainingTokens.length>0 &&\n                    <Flex id=\"remaining-assets\" width={1} flexDirection={'column'}>\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Available assets\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={this.state.remainingTokens}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.13]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            mobile:this.props.account !== null,\n                            props:{\n                              width:[0.21, 0.10],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.31,this.state.depositedTokens.length>0 ? 0.14 : 0.14],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                }\n                              },\n                            ]\n                          },\n                          {\n                            title:'SCORE',\n                            desc:riskScore,\n                            props:{\n                              width:[0.22,0.10],\n                            },\n                            fields:[\n                              {\n                                name:'score'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.11],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APR LAST WEEK',\n                            mobile:false,\n                            props:{\n                              width:0.25,\n                            },\n                            parentProps:{\n                              width:1,\n                              pr:[2,4]\n                            },\n                            fields:[\n                              {\n                                name:'aprChart',\n                                style:{\n                                  overflow:'visible',\n                                },\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[ this.props.account === null ? 0.26 : 0 , 0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label: (props) => {\n                                  return Object.keys(this.state.tokensToMigrate).includes(props.token) ? 'Migrate' : 'Deposit';\n                                },\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                },\n                                funcProps:{\n                                  mainColor: (props) => {\n                                    return Object.keys(this.state.tokensToMigrate).includes(props.token) ? 'migrate' : 'deposit'\n                                  }\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                </Flex>\n              </Flex>\n              {\n                !viewOnly && this.props.account && coverProtocolConfig.enabled && (\n                  <Flex\n                    mt={3}\n                    width={1}\n                    id={\"tools\"}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      pb={2}\n                      width={1}\n                      mb={[2,3]}\n                      borderColor={'divider'}\n                      borderBottom={'1px solid transparent'}\n                    >\n                      <Heading.h4\n                        fontSize={[2,4]}\n                        fontWeight={[3,4]}\n                      >\n                        Tools\n                      </Heading.h4>\n                    </Flex>\n                    <Flex\n                      flexDirection={['column','row']}\n                    >\n                      {\n                        ['addFunds','coverProtocol','tokenSwap'].map( (toolName,toolIndex) => {\n                          const toolConfig = this.functionsUtil.getGlobalConfig(['tools',toolName]);\n                          return (\n                            <Flex\n                              width={[1,1/3]}\n                              key={`tool_${toolIndex}`}\n                              mb={toolIndex<2 ? [2,0] : 0}\n                              pr={toolIndex<2 ? [0,3] : 0}\n                            >\n                              <DashboardIconButton\n                                {...this.props}  \n                                icon={toolConfig.icon}\n                                text={toolConfig.desc}\n                                image={toolConfig.image}\n                                title={toolConfig.label}\n                                handleClick={ e => this.props.goToSection(`tools/${toolConfig.route}`) }\n                              />\n                            </Flex>\n                          );\n                        })\n                      }\n                    </Flex>\n                  </Flex>\n                )\n              }\n              {\n                this.state.depositedTokens.length>0 &&\n                  <Flex\n                    width={1}\n                    id={\"yield-farming\"}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Yield Farming</Title>\n                    <AssetsList\n                      enabledTokens={Object.keys(govTokens).filter( govToken => govTokens[govToken].enabled )}\n                      cols={[\n                        {\n                          title:'TOKEN',\n                          props:{\n                            width:[0.3,0.15]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:2,\n                                height:['1.4em','2.3em']\n                              }\n                            },\n                            {\n                              name:'tokenName'\n                            }\n                          ]\n                        },\n                        {\n                          mobile:false,\n                          title:'BALANCE',\n                          props:{\n                            width:[0.33, 0.25],\n                          },\n                          fields:[\n                            {\n                              name:'tokenBalance',\n                              props:{\n                                decimals: this.props.isMobile ? 6 : 8\n                              }\n                            }\n                          ]\n                        },\n                        {\n                          title:'REDEEMABLE',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','govTokenRedeemableBalance']),\n                          props:{\n                            width:[0.35,0.30],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'redeemableBalance',\n                              props:{\n                                decimals: this.props.isMobile ? 6 : 8\n                              }\n                            },\n                          ]\n                        },\n                        {\n                          title:'DISTRIBUTION',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','userDistributionSpeed']),\n                          props:{\n                            width:[0.35,0.30],\n                          },\n                          fields:[\n                            {\n                              name:'userDistributionSpeed',\n                              props:{\n                                decimals:6\n                              }\n                            }\n                          ]\n                        },\n                        /*\n                        {\n                          mobile:false,\n                          title:'APR',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','govTokenApr']),\n                          props:{\n                            width:[0.2,0.15],\n                          },\n                          fields:[\n                            {\n                              name:'apr',\n                            }\n                          ]\n                        },\n                        {\n                          title:'TOKEN PRICE',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','tokenPrice']),\n                          mobile:false,\n                          props:{\n                            width: 0.17,\n                          },\n                          parentProps:{\n                            width:1,\n                            pr:[2,4]\n                          },\n                          fields:[\n                            {\n                              name:'tokenPrice',\n                              props:{\n                                unit:'$',\n                                unitPos:'left',\n                                unitProps:{\n                                  mr:1,\n                                  fontWeight:3,\n                                  fontSize:[0,2],\n                                  color:'cellText'\n                                }\n                              }\n                            }\n                          ]\n                        },\n                        */\n                      ]}\n                      {...this.props}\n                      availableTokens={govTokens}\n                    />\n                  </Flex>\n              }\n              {\n                this.state.activeCoverages && (\n                  <Flex\n                    width={1}\n                    mb={[0,3]}\n                    id={'active-coverages'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Coverages</Title>\n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <CustomList\n                        rows={this.state.activeCoverages}\n                        handleClick={ this.props.isMobile ? (props) => props.row.status!=='Expired' && props.row.fileClaimUrl && this.functionsUtil.openWindow(props.row.fileClaimUrl) : null }\n                        cols={[\n                          {\n                            title:'PROTOCOL',\n                            props:{\n                              width:[0.42,0.17]\n                            },\n                            fields:[\n                              {\n                                type:'image',\n                                path:['protocolImage'],\n                                props:{\n                                  mr:[1,2],\n                                  size:this.props.isMobile ? '1.2em' : '1.8em'\n                                }\n                              },\n                              {\n                                type:'text',\n                                path:['protocolName'],\n                              }\n                            ]\n                          },\n                          {\n                            title:'BALANCE',\n                            props:{\n                              width:[0.34, 0.15],\n                            },\n                            fields:[\n                              {\n                                type:'number',\n                                path:['balance'],\n                                props:{\n                                  decimals: 4,\n                                }\n                              },\n                              {\n                                type:'text',\n                                path:['token'],\n                                props:{\n                                  ml:[1,2],\n                                  style:{\n                                    textTransform:'uppercase'\n                                  }\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'EXPIRATION DATE',\n                            props:{\n                              width:0.23,\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                type:'text',\n                                path:['expirationDate'],\n                                props:{\n                                  \n                                }\n                              },\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'COVERAGE',\n                            props:{\n                              width:0.15,\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                type:'text',\n                                path:['portfolioCoverage'],\n                                props:{\n                                  \n                                }\n                              },\n                            ]\n                          },\n                          {\n                            title:'STATUS',\n                            props:{\n                              width:[0.24,0.15],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                type:'icon',\n                                name:'custom',\n                                path:['statusIcon'],\n                                props:{\n                                  mr:[1,2],\n                                  size:this.props.isMobile ? '1.2em' : '1.8em'\n                                }\n                              },\n                              {\n                                name:'custom',\n                                path:['status'],\n                                props:{\n                                  style:{\n                                    textTransform:'capitalize'\n                                  }\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            mobile:false,\n                            props:{\n                              width:0.17,\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                type:'button',\n                                name:'custom',\n                                label:'File Claim',\n                                funcProps:{\n                                  disabled:(props) => (props.row.status==='Expired')\n                                },\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'redeem',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => props.row.status!=='Expired' && props.row.fileClaimUrl && this.functionsUtil.openWindow(props.row.fileClaimUrl)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  </Flex>\n                )\n              }\n              {\n                this.state.depositedTokens.length>0 &&\n                  <Flex\n                    width={1}\n                    id=\"earnings-estimation\"\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Estimated earnings</Title>\n                    <EarningsEstimation\n                      {...this.props}\n                      enabledTokens={this.state.depositedTokens}\n                    />\n                  </Flex>\n              }\n              {\n                this.props.account && this.state.depositedTokens.length>0 && \n                  <Flex\n                    mb={[3,4]}\n                    width={1}\n                    id={'transactions'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Transactions</Title>\n                    <TransactionsList\n                      {...this.props}\n                      enabledTokens={[]}\n                      cols={[\n                        {\n                          title: this.props.isMobile ? '' : 'HASH',\n                          props:{\n                            width:[0.15,0.24]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              name:'hash',\n                              mobile:false\n                            }\n                          ]\n                        },\n                        {\n                          title:'ACTION',\n                          mobile:false,\n                          props:{\n                            width:0.15,\n                          },\n                          fields:[\n                            {\n                              name:'action'\n                            }\n                          ]\n                        },\n                        {\n                          title:'DATE',\n                          props:{\n                            width:[0.32,0.23],\n                          },\n                          fields:[\n                            {\n                              name:'date'\n                            }\n                          ]\n                        },\n                        {\n                          title:'STATUS',\n                          props:{\n                            width:[0.18,0.22],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'statusIcon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'status'\n                            }\n                          ]\n                        },\n                        {\n                          title:'AMOUNT',\n                          props:{\n                            width:0.19,\n                          },\n                          fields:[\n                            {\n                              name:'amount'\n                            },\n                          ]\n                        },\n                        {\n                          title:'ASSET',\n                          props:{\n                            width:[0.15,0.20],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'tokenIcon',\n                              props:{\n                                mr:[0,2],\n                                height:['1.4em','1.6em']\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'tokenName'\n                            },\n                          ]\n                        },\n                      ]}\n                    />\n                  </Flex>\n              }\n            </Box>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default StrategyPage;","/*\n// batchDeposits[user][batchId] = amount\nmapping (address => mapping (uint256 => uint256)) public batchDeposits;\nmapping (uint256 => uint256) batchTotals; // in idleToken\nmapping (uint256 => uint256) batchRedeemedTotals; // in newIdleToken\n\nuint256 public currBatch;\naddress public idleToken;\naddress public newIdleToken;\naddress public underlying;\n\nfunction deposit() external\nfunction withdraw(uint256 batchId) external\n*/\n\nimport Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TransactionField from '../TransactionField/TransactionField';\nimport { Flex, Box, Text, Icon, Link, Checkbox, Tooltip } from \"rimble-ui\";\n\nclass BatchDeposit extends Component {\n\n  state = {\n    canClaim:false,\n    batchTotals:{},\n    canDeposit:true,\n    action:'deposit',\n    batchDeposits:{},\n    tokenConfig:null,\n    processing:{\n      execute:{\n        txHash:null,\n        loading:false\n      },\n      claim:{\n        txHash:null,\n        loading:false\n      },\n    },\n    usePermit:false,\n    batchRedeems:{},\n    lastExecution:null,\n    permitEnabled:true,\n    hasDeposited:false,\n    permitSigned:false,\n    selectedToken:null,\n    showPermitBox:false,\n    currBatchIndex:null,\n    batchCompleted:false,\n    claimSucceeded:false,\n    availableTokens:null,\n    selectedStrategy:null,\n    componentLoaded:false,\n    executeSucceeded:false,\n    migrationEnabled:false,\n    migrationSucceeded:false,\n    selectedTokenConfig:null,\n    availableStrategies:null,\n    batchDepositEnabled:false,\n    migrationContractApproved:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadStrategies();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      this.setState({\n        componentLoaded:false\n      },async () => {\n        await this.loadTokens();\n      });\n    }\n\n    const selectedStrategyChanged = prevState.selectedStrategy !== this.state.selectedStrategy;\n    if (selectedStrategyChanged){\n      const selectedToken = Object.keys(this.state.availableTokens)[0];\n      this.selectToken(selectedToken);\n    }\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const executeSucceededChanged = prevState.executeSucceeded !== this.state.executeSucceeded;\n    const contractApprovedChanged = prevState.migrationContractApproved !== this.state.migrationContractApproved;\n    if (selectedTokenChanged || contractApprovedChanged || executeSucceededChanged){\n      this.checkBatchs();\n    }\n\n  }\n\n  async execute () {\n\n    const loading = true;\n\n    const callbackExecute = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'Execute',\n        eventCategory: 'BatchDeposit',\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        executeSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          execute:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptExecute = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          execute:{\n            ...prevState.processing.execute,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'executeBatch', [true], null, callbackExecute, callbackReceiptExecute);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        execute:{\n          ...prevState.processing.execute,\n          loading\n        }\n      }\n    }));\n  }\n\n  async checkBatchs(migrationSucceeded=false){\n\n    const migrationContractInfo = this.state.selectedTokenConfig.migrationContract;\n\n    await Promise.all([\n      this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi),\n      this.props.initContract(this.state.tokenConfig.name,this.state.tokenConfig.address,this.state.tokenConfig.abi)\n    ]);\n\n    let [\n      batchExecutions,\n      currBatchIndex,\n      migrationContractApproved\n    ] = await Promise.all([\n      this.functionsUtil.getBatchedDepositExecutions(migrationContractInfo.address),\n      this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'currBatch'),\n      this.functionsUtil.checkTokenApproved(this.state.tokenConfig.name,migrationContractInfo.address,this.props.account)\n    ]);\n\n    // If use Permit don't ask for Approve\n    let usePermit = false;\n    if (!migrationContractApproved && migrationContractInfo.functions && migrationContractInfo.functions.length === 1){\n      const functionInfo = migrationContractInfo.functions[0];\n      usePermit = typeof functionInfo.usePermit !== 'undefined' ? functionInfo.usePermit : false;\n      const nonceMethod = this.functionsUtil.getGlobalConfig(['permit',this.state.tokenConfig.name,'nonceMethod']);\n      const permitContract = this.functionsUtil.getContractByName(this.state.tokenConfig.name);\n      usePermit = usePermit && permitContract && (!nonceMethod || permitContract.methods[nonceMethod] !== undefined);\n    }\n\n    const newState = {};\n    const batchTotals = {};\n    const batchRedeems = {};\n    const batchDeposits = {};\n    let batchCompleted = false;\n\n    currBatchIndex = currBatchIndex || 0;\n    for (let batchIndex = 0; batchIndex <= parseInt(currBatchIndex) ; batchIndex++){\n      let [\n        batchTotal,\n        batchRedeem,\n        batchDeposit\n      ] = await Promise.all([\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchTotals',[batchIndex]),\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchRedeemedTotals',[batchIndex]),\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n      ]);\n      if (batchTotal && batchTotal !== null){\n        batchTotals[batchIndex] = this.functionsUtil.fixTokenDecimals(batchTotal,this.state.tokenConfig.decimals);\n      }\n      if (batchDeposit !== null){\n        batchRedeem = this.functionsUtil.fixTokenDecimals(batchRedeem,18);\n        batchDeposit = this.functionsUtil.fixTokenDecimals(batchDeposit,this.state.tokenConfig.decimals);\n        if (batchDeposit.gt(0)){\n          batchDeposits[batchIndex] = batchDeposit;\n          // Calculate redeemable idleTokens\n          batchRedeems[batchIndex] = batchDeposit.times(batchRedeem).div(batchTotals[batchIndex]);\n          if (batchRedeems[batchIndex].gt(batchRedeem)){\n            batchRedeems[batchIndex] = batchRedeem;\n          }\n          // Check claimable\n          if (batchIndex < currBatchIndex){\n            batchCompleted = true;\n          }\n        }\n      }\n    }\n\n    newState.batchDeposits = batchDeposits;\n\n    const hasDeposited = (batchDeposits && Object.keys(batchDeposits).length>0);\n\n    const lastExecution = batchExecutions && batchExecutions.length ? batchExecutions[0] : null;\n    const batchDepositInfo = this.functionsUtil.getGlobalConfig(['tools','batchDeposit']);\n    const batchDepositEnabled = batchDepositInfo.depositEnabled;\n\n    newState.usePermit = usePermit;\n    newState.showPermitBox = false;\n    newState.claimSucceeded = false;\n    newState.componentLoaded = true;\n    newState.executeSucceeded = false;\n    newState.batchTotals = batchTotals;\n    newState.hasDeposited = hasDeposited;\n    newState.batchRedeems = batchRedeems;\n    newState.lastExecution = lastExecution;\n    newState.currBatchIndex = currBatchIndex;\n    newState.batchCompleted = batchCompleted;\n    newState.migrationSucceeded = migrationSucceeded;\n    newState.batchDepositEnabled = batchDepositEnabled;\n    newState.canClaim = batchCompleted || hasDeposited;\n    // Prevent user to deposit if the batch has been completed\n    newState.canDeposit = batchDepositEnabled && !batchCompleted;\n    newState.migrationContractApproved = migrationContractApproved;\n    newState.action = hasDeposited || newState.canClaim ? 'redeem' : 'deposit';\n\n    this.setState(newState);\n  }\n\n  async loadStrategies(){\n\n    // Init tokens contracts\n    const availableStrategiesKeys = {};\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n      availableStrategiesKeys[tokenConfig.strategy] = true;\n    });\n\n    const availableStrategies = Object.keys(availableStrategiesKeys).map( strategy => {\n      const strategyConfig = this.functionsUtil.getGlobalConfig(['strategies',strategy]);\n      return {\n        value:strategy,\n        icon:strategyConfig.icon,\n        label:strategyConfig.title\n      };\n    });\n\n    // console.log('availableStrategies',availableStrategies);\n\n    if (availableStrategies && availableStrategies.length>0){\n      let selectedStrategy = availableStrategies[0].value;\n      let selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : null;\n      if (selectedToken){\n        const selectedTokenConfig = this.props.toolProps.availableTokens[selectedToken];\n        selectedToken = selectedTokenConfig.baseToken;\n        selectedStrategy = selectedTokenConfig.strategy;\n      }\n\n      this.setState({\n        availableStrategies\n      },() => {\n        this.selectStrategy(selectedStrategy,selectedToken);\n      });\n    }\n  }\n\n  /*\n  async loadTokens(){\n    const selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : null;\n    if (selectedToken){\n      this.selectToken(selectedToken);\n    }\n  }\n  */\n\n  async selectStrategy (selectedStrategy,selectedToken=null) {\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens)\n      .filter(key => this.props.toolProps.availableTokens[key].strategy === selectedStrategy )\n      .reduce((obj, key) => {\n        const tokenConfig = this.props.toolProps.availableTokens[key];\n        const baseTokenConfig = this.props.availableStrategies[selectedStrategy][tokenConfig.baseToken];\n\n        tokenConfig.abi = baseTokenConfig.abi;\n        tokenConfig.token = baseTokenConfig.token;\n        tokenConfig.address = baseTokenConfig.address;\n        tokenConfig.decimals = baseTokenConfig.decimals;\n        obj[tokenConfig.baseToken] = tokenConfig;\n        return obj;\n      }, {});\n\n    this.setState({\n      availableTokens,\n      selectedStrategy\n    },() => {\n      if (selectedToken){\n        this.selectToken(selectedToken);\n      }\n    });\n  }\n\n  async selectToken (selectedToken) {\n    const selectedTokenConfig = this.state.availableTokens[selectedToken];\n    const strategyAvailableTokens = this.props.availableStrategies[selectedTokenConfig.strategy];\n\n    const baseTokenConfig = strategyAvailableTokens[selectedTokenConfig.token];\n\n    const tokenConfig = {\n      name:baseTokenConfig.token,\n      token:baseTokenConfig.token,\n      address:baseTokenConfig.address,\n      decimals:baseTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = baseTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:baseTokenConfig.abi,\n      name:baseTokenConfig.token,\n      token:baseTokenConfig.token,\n      address:baseTokenConfig.address\n    };\n    \n    const migrationContract = selectedTokenConfig.migrationContract;\n\n    // Add migration function\n    if (baseTokenConfig.migrateFunction){\n      migrationContract.functions[0].name = baseTokenConfig.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(selectedTokenConfig.strategy,baseTokenConfig.token);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedTokenConfig\n    },() => {\n      // Select strategy and available tokens\n      if (selectedTokenConfig.strategy !== this.state.selectedStrategy){\n        const selectedStrategy = selectedTokenConfig.strategy;\n        this.selectStrategy(selectedStrategy);\n      }\n    });\n  }\n\n  async claim () {\n    if (!this.state.batchCompleted){\n      return null;\n    }\n\n    const loading = true;\n    const claimableValue = 0;\n    const batchId = Object.keys(this.state.batchDeposits)[0];\n\n    const callbackClaim = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'Claim',\n        eventCategory: `BatchDeposit`,\n        eventValue: parseInt(claimableValue),\n        eventLabel: this.props.selectedToken,\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        claimSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          claim:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptClaim = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          claim:{\n            ...prevState.processing.claim,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'withdraw', [batchId], null, callbackClaim, callbackReceiptClaim);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        claim:{\n          ...prevState.processing.claim,\n          loading\n        }\n      }\n    }));\n  }\n\n  async callbackPermit(){\n    this.setState({\n      permitSigned:true\n    });\n  }\n\n  showPermitBox(){\n    this.setState({\n      showPermitBox:true\n    });\n  }\n\n  async callbackApprove(migrationContractApproved){\n    // console.log('callbackApprove',this.state.migrationContractApproved,migrationContractApproved);\n    if (migrationContractApproved !== this.state.migrationContractApproved){\n      this.setState({\n        migrationContractApproved\n      });\n    }\n  }\n\n  setAction = (action) => {\n    if (action !== null && ['deposit','redeem'].includes(action.toLowerCase())){\n      const migrationSucceeded = false;\n      this.setState({\n        action,\n        migrationSucceeded\n      });\n    }\n  }\n\n  togglePermitEnabled(permitEnabled){\n    this.setState({\n      permitEnabled\n    });\n  }\n\n  migrationEnabledCallback = (migrationEnabled) => {\n    this.setState({\n      migrationEnabled\n    });\n  }\n\n  migrationCallback = (tx) => {\n    this.checkBatchs(true);\n  }\n\n  render() {\n\n    if (!this.state.selectedStrategy){\n      return null;\n    }\n\n    const usePermit = this.state.permitEnabled && this.state.usePermit;\n    // const batchId = this.state.batchDeposits && Object.keys(this.state.batchDeposits).length>0 ? Object.keys(this.state.batchDeposits)[0] : null;\n    const batchRedeem = this.state.batchRedeems && Object.values(this.state.batchRedeems).length>0 ? Object.values(this.state.batchRedeems)[0] : null;\n    const batchDeposit = this.state.batchDeposits && Object.values(this.state.batchDeposits).length>0 ? Object.values(this.state.batchDeposits)[0] : null;\n    const contractApproved = (usePermit && this.state.permitSigned) || (!usePermit && this.state.migrationContractApproved);\n    const canExecuteBatch = this.state.batchTotals && this.state.batchTotals[this.state.currBatchIndex] && this.state.batchTotals[this.state.currBatchIndex].gt(0);\n    const strategyDefaultValue = this.state.selectedStrategy ? this.state.availableStrategies.find( s => s.value === this.state.selectedStrategy ) : this.state.availableStrategies[0];\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Choose the strategy:\n            </Text>\n            <GenericSelector\n              {...this.props}\n              name={'strategy'}\n              isSearchable={false}\n              defaultValue={strategyDefaultValue}\n              CustomOptionValue={CustomOptionValue}\n              options={this.state.availableStrategies}\n              onChange={this.selectStrategy.bind(this)}\n              CustomValueContainer={CustomValueContainer}\n            />\n          </Box>\n          {\n            this.state.availableTokens && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Select asset to deposit:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  id={'token-from'}\n                  showBalance={true}\n                  isSearchable={false}\n                  onChange={this.selectToken.bind(this)}\n                  selectedToken={this.state.selectedToken}\n                  availableTokens={this.state.availableTokens}\n                />\n              </Box>\n          }\n          {\n            !this.state.componentLoaded && (\n              <Flex\n                mt={4}\n                flexDirection={'column'}\n              >\n                <FlexLoader\n                  flexProps={{\n                    flexDirection:'row'\n                  }}\n                  loaderProps={{\n                    size:'30px'\n                  }}\n                  textProps={{\n                    ml:2\n                  }}\n                  text={'Loading asset info...'}\n                />\n              </Flex>\n            )\n          }\n          {\n            !this.props.account ? (\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mt:3\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                    name={'Input'}\n                    color={'cellText'}\n                  />\n                  <Text\n                    mt={[1,2]}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Please connect with your wallet interact with Idle.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:2,\n                      width:[1,1/2]\n                    }}\n                    handleClick={this.props.connectAndValidateAccount}\n                  >\n                    Connect\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            ) : this.state.componentLoaded &&  this.state.selectedTokenConfig && (this.state.canDeposit || this.state.canClaim) && (\n              <Box\n                width={1}\n              >\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                    px:4,\n                    mt:3,\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  > \n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ contractApproved ? 'CheckBox' : 'LooksOne'}\n                        color={ contractApproved ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        {\n                          usePermit ? 'Sign Approve message' : 'Approve the batch deposit contract'\n                        }\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ (this.state.hasDeposited || this.state.batchCompleted) ? 'CheckBox' : 'LooksTwo'}\n                        color={ (this.state.hasDeposited || this.state.batchCompleted) ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        Deposit your {this.state.selectedToken}\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ this.state.batchCompleted ? 'CheckBox' : 'Looks3'}\n                        color={ this.state.batchCompleted ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        Wait for batch execution\n                        <Link\n                          ml={1}\n                          fontWeight={2}\n                          color={'primary'}\n                          display={'inline'}\n                          hoverColor={'primary'}\n                          onClick={ e => this.props.openTooltipModal('Batch Execution Schedule',this.functionsUtil.getGlobalConfig(['messages','batchDepositExecutionSchedule'])) }\n                        >\n                          (Read More)\n                        </Link>\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ this.state.claimSucceeded ? 'CheckBox' : 'Looks4'}\n                        color={ this.state.claimSucceeded ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'flex-start'}\n                      >\n                        <Text\n                          ml={1}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'left'}\n                        >\n                          Claim your {this.state.tokenConfig.idle.token}\n                        </Text>\n                        <Tooltip\n                          placement={'top'}\n                          message={`You will start earning gov tokens after the batch is executed and you claim your ${this.state.tokenConfig.idle.token}`}\n                        >\n                          <Icon\n                            ml={1}\n                            size={'1.2em'}\n                            name={'Warning'}\n                            color={'#ffe000'}\n                            style={{\n                              cursor:'pointer'\n                            }}\n                          />\n                        </Tooltip>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                </DashboardCard>\n              </Box>\n            )\n          }\n          {\n            this.state.componentLoaded && this.props.account && this.state.availableTokens && this.state.selectedToken && (\n              <Box width={1}>\n                {\n                  (contractApproved || this.state.canClaim) && \n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text mb={2}>\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canDeposit ? this.setAction('deposit') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canDeposit }\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canClaim ? this.setAction('redeem') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canClaim }\n                          isActive={ this.state.action === 'redeem' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Claim\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                }\n                {\n                  this.state.showPermitBox && this.state.action === 'deposit' && this.state.usePermit && this.state.migrationEnabled && !this.state.migrationSucceeded ? (\n                    <DashboardCard\n                      cardProps={{\n                        py:3,\n                        px:2,\n                        mt:3,\n                        display:'flex',\n                        alignItems:'center',\n                        flexDirection:'column',\n                        justifyContent:'center',\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          color={'cellText'}\n                          name={'LightbulbOutline'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={1}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          {this.state.selectedToken} supports Approve and Deposit in a single transaction, disable this feature and try again if you can't deposit in the batch.\n                        </Text>\n                      </Flex>\n                      <Checkbox\n                        mt={1}\n                        required={false}\n                        checked={this.state.permitEnabled}\n                        label={`Approve and Deposit in a single transaction`}\n                        onChange={ e => this.togglePermitEnabled(e.target.checked) }\n                      />\n                    </DashboardCard>\n                  ) : !this.state.showPermitBox && this.state.action === 'deposit' && this.state.usePermit && this.state.migrationEnabled && !this.state.migrationSucceeded && (\n                    <Flex\n                      p={0}\n                      mt={3}\n                      width={1}\n                      borderRadius={2}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'center'}\n                    >\n                      <Link\n                        textAlign={'center'}\n                        hoverColor={'primary'}\n                        onClick={this.showPermitBox.bind(this)}\n                      >\n                        Having trouble with the Batch Deposit?\n                      </Link>\n                    </Flex>\n                  )\n                }\n                {\n                  this.state.action === 'deposit' ? \n                    this.state.batchDepositEnabled ? (\n                      <Migrate\n                        {...this.props}\n                        showActions={false}\n                        usePermit={usePermit}\n                        getTokenPrice={false}\n                        isMigrationTool={true}\n                        showBalanceSelector={true}\n                        migrationIcon={'FileDownload'}\n                        waitText={'Deposit estimated in'}\n                        tokenConfig={this.state.tokenConfig}\n                        selectedToken={this.state.selectedToken}\n                        migrationParams={toMigrate => [toMigrate]}\n                        selectedStrategy={this.props.selectedStrategy}\n                        callbackPermit={this.callbackPermit.bind(this)}\n                        callbackApprove={this.callbackApprove.bind(this)}\n                        migrationCallback={this.migrationCallback.bind(this)}\n                        migrationEnabledCallback={this.migrationEnabledCallback.bind(this)}\n                        migrationText={`Deposit your ${this.state.selectedToken} and wait until it is converted to the new ${this.state.tokenConfig.idle.token}.`}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:3\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedToken} in your wallet.\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Migrate>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          my:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Text\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            Batch Deposit is disabled for this asset.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      {\n                        this.state.processing.claim.loading ? (\n                          <Flex\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar {...this.props} web3={this.props.web3} waitText={`Claim estimated in`} endMessage={`Finalizing approve request...`} hash={this.state.processing.claim.txHash} />\n                          </Flex>\n                        ) : this.state.claimSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'DoneAll'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You have successfully withdrawn your {this.state.tokenConfig.idle.token}!\n                            </Text>\n                            <Link\n                              mt={2}\n                              textAlign={'center'}\n                              hoverColor={'primary'}\n                              onClick={ e => this.props.goToSection(this.state.selectedTokenConfig.strategy+'/'+this.state.selectedTokenConfig.baseToken) }\n                            >\n                              Go to the Dashboard\n                            </Link>\n                          </Flex>\n                        ) : this.state.batchCompleted ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              color={'cellText'}\n                              name={'FileUpload'}\n                            />\n                            <Text\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The Batch has been executed!<br />You can now claim your {batchRedeem.toFixed(4)} {this.state.tokenConfig.idle.token}\n                            </Text>\n                            <Text\n                              fontSize={1}\n                              color={'#ff9900'}\n                              textAlign={'center'}\n                            >\n                              (You need to claim your {this.state.tokenConfig.idle.token} to start earning Gov Tokens)\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                              <RoundButton\n                                buttonProps={{\n                                  mt:2,\n                                  width:[1,0.5],\n                                  mainColor:this.props.theme.colors.redeem\n                                }}\n                                handleClick={ e => this.claim() }\n                              >\n                                Claim\n                              </RoundButton>\n                            </Flex>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'1.8em'}\n                              color={'cellText'}\n                              name={'HourglassEmpty'}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              <Text.span\n                                color={'cellText'}\n                              >\n                                You have successfully deposited <strong>{batchDeposit.toFixed(4)} {this.state.selectedToken}</strong>, please wait until the batch is executed to claim your {this.state.tokenConfig.idle.token}.\n                              </Text.span>\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n                {\n                  this.state.batchTotals[this.state.currBatchIndex] && \n                    <DashboardCard\n                      cardProps={{\n                        p:2,\n                        my:3\n                      }}\n                    >\n                      {\n                        this.state.processing.execute.loading ? (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <TxProgressBar {...this.props} waitText={`Batch execution estimated in`} endMessage={`Finalizing batch execution request...`} hash={this.state.processing.execute.txHash} />\n                          </Flex>\n                        ) : this.state.executeSucceeded ? (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Icon\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The Batch has been executed!\n                            </Text>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Text\n                              fontWeight={500}\n                              color={'copyColor'}\n                              textAlign={'center'}\n                            >\n                              Batch Pool: {this.state.batchTotals[this.state.currBatchIndex].toFixed(4)} {this.state.selectedToken}\n                            </Text>\n                            {\n                              canExecuteBatch && \n                                <Link\n                                  textAlign={'center'}\n                                  hoverColor={'primary'}\n                                  onClick={this.execute.bind(this)}\n                                >\n                                  Execute Batch\n                                </Link>\n                            }\n                            {\n                              this.state.batchTotals[this.state.currBatchIndex].lt(this.state.selectedTokenConfig.minPoolSize) && (\n                                <Text\n                                  mb={1}\n                                  fontSize={1}\n                                  color={'alert'}\n                                  textAlign={'center'}\n                                >\n                                  (The pool size has to reach at least {this.functionsUtil.formatMoney(this.state.selectedTokenConfig.minPoolSize,0)} {this.state.selectedToken} to be executed)\n                                </Text>\n                              )\n                            }\n                            {\n                              this.state.lastExecution && (\n                                <Text\n                                  fontSize={0}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  Last Batch Execution: {this.functionsUtil.strToMoment(this.state.lastExecution.timeStamp*1000).utc().format('YYYY-MM-DD HH:mm UTC')}\n                                </Text>\n                              )\n                            }\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                }\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default BatchDeposit;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass CoverProtocol extends Component {\n\n  state = {\n    steps:null,\n    infoBox:null,\n    swapInfo:null,\n    portfolio:null,\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    selectedAction:null,\n    successMessage:null,\n    activeCoverages:null,\n    defaultCoverage:null,\n    selectedCoverage:null,\n    contractApproved:false,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    transactionSucceeded:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n    // window.transactionSucceeded = this.transactionSucceeded.bind(this);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedCoverageChanged = prevState.selectedCoverage !== this.state.selectedCoverage;\n    if (selectedCoverageChanged){\n      const selectedToken = this.state.selectedCoverage.collateral;\n      const tokenConfig = Object.values(this.props.availableStrategies)[0][selectedToken];\n      const tokenBalance = await this.functionsUtil.getTokenBalance(selectedToken,this.props.account);\n      const selectedAction = !this.state.selectedAction ? (this.props.urlParams.param2 || 'Claim') : this.state.selectedAction;\n      this.setState({\n        tokenConfig,\n        tokenBalance,\n        selectedToken,\n        selectedAction\n      });\n    }\n\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue && this.state.inputValue.gt(0);\n    const swapInfoChanged = JSON.stringify(prevState.swapInfo) !== JSON.stringify(this.state.swapInfo) && this.state.inputValue && this.state.inputValue.gt(0);\n    if (selectedActionChanged || inputValueChanged || swapInfoChanged || contractApprovedChanged){\n      this.updateData();\n    }\n\n    const contractInfoChanged = JSON.stringify(prevState.contractInfo) !== JSON.stringify(this.state.contractInfo);\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async getSwapInfo(amount){\n    amount = this.functionsUtil.BNify(amount);\n    if (!amount.isNaN() && amount.gt(0)){\n      // console.log('getSwapInfo',this.state.contractInfo.name,this.state.tokenConfig.address,balancerTokenConfig.address,swapFee,covTokens,tokenPrice);\n\n      if (this.state.tokenPrice && this.state.swapFee && this.state.covTokens){\n\n        const swapFee = this.state.swapFee;\n        const tokenPrice = this.state.tokenPrice;\n        let tokenAmountOut = amount.div(tokenPrice);\n        tokenAmountOut = tokenAmountOut.minus(tokenAmountOut.times(swapFee));\n\n        return {\n          amount,\n          tokenAmountOut\n        };\n      }\n    }\n\n    return null;\n  }\n\n  async changeInputCallback(inputValue=null){\n    let swapInfo = null;\n    let balanceSelectorInfo = null;\n    inputValue = inputValue || this.state.inputValue;\n\n    if (inputValue && this.functionsUtil.BNify(inputValue).gt(0)){\n      switch (this.state.selectedAction){\n        case 'Mint':\n          balanceSelectorInfo = {\n            color:this.props.theme.colors.transactions.status.completed,\n            text:`You will Mint: ${inputValue.toFixed(4)} CLAIM and NOCLAIM`\n          };\n        break;\n        case 'Claim':\n        case 'NoClaim':\n          const amount = this.functionsUtil.normalizeTokenAmount(inputValue,this.state.tokenConfig.decimals);\n          swapInfo = await this.getSwapInfo(amount);\n          if (swapInfo){\n            if (swapInfo.tokenAmountOut.lte(this.state.covTokens)){\n              balanceSelectorInfo = {\n                color:this.props.theme.colors.transactions.status.completed,\n                text:`You will Buy: ~${this.functionsUtil.fixTokenDecimals(swapInfo.tokenAmountOut,18).toFixed(4)} ${this.state.selectedAction}`\n              };\n            } else {\n              balanceSelectorInfo = {\n                text:`Not enough liquidity`,\n                color:this.props.theme.colors.transactions.status.failed,\n              };\n            }\n          }\n        break;\n        default:\n        break;\n      }\n    }\n\n    this.setState({\n      swapInfo,\n      inputValue,\n      balanceSelectorInfo\n    });\n  }\n\n  async getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = null;\n    amount = this.functionsUtil.BNify(amount);\n    const MAX_UINT256 = this.functionsUtil.BNify(2).pow(256).minus(1).toFixed(0);\n    switch (this.state.selectedAction){\n      case 'Mint':\n        methodName = 'addCover';\n        methodParams = [this.state.tokenConfig.address,parseInt(this.state.selectedCoverage.expirationTimestamp),this.functionsUtil.integerValue(amount)];\n      break;\n      case 'Claim':\n      case 'NoClaim':\n        methodName = 'swapExactAmountOut';\n        const balancerTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const swapInfo = await this.getSwapInfo(amount);\n        if (swapInfo){\n          if (swapInfo.tokenAmountOut.lte(this.state.covTokens)){\n            methodParams = [this.state.tokenConfig.address,this.functionsUtil.integerValue(amount),balancerTokenConfig.address, this.functionsUtil.integerValue(swapInfo.tokenAmountOut), MAX_UINT256];\n          } else {\n            return null;\n          }\n        }\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    let infoBox = null;\n    const dashboardUrl = `#${this.functionsUtil.getGlobalConfig(['dashboard','baseRoute'])}/best`;\n    const fixedAmount = this.functionsUtil.fixTokenDecimals(amount,this.state.tokenConfig.decimals);\n    switch (this.state.selectedAction){\n      case 'Mint':\n        const mintedClaimLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.selectedCoverage.tokens['Claim'].address ) : null;\n        const mintedNoClaimLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.selectedCoverage.tokens['NoClaim'].address ) : null;\n        const mintedClaimAmount = mintedClaimLog ? this.functionsUtil.fixTokenDecimals(parseInt(mintedClaimLog.data,16),this.state.contractInfo.decimals) : fixedAmount;\n        const mintedNoClaimAmount = mintedNoClaimLog ? this.functionsUtil.fixTokenDecimals(parseInt(mintedNoClaimLog.data,16),this.state.contractInfo.decimals) : fixedAmount;\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully minted <strong>${mintedClaimAmount.toFixed(4)} CLAIM</strong> and <strong>${mintedNoClaimAmount.toFixed(4)} NOCLAIM</strong> tokens<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      case 'Claim':\n        const claimTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const claimTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === claimTokenConfig.address ) : null;\n        const receivedClaimAmount = claimTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(claimTokensLog.data,16),claimTokenConfig.balancerPool.decimals) : this.functionsUtil.fixTokenDecimals(params[3],claimTokenConfig.balancerPool.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully bought <strong>${receivedClaimAmount.toFixed(4)} ${this.state.selectedAction}</strong> tokens, you are now covered in the event that there is a successful attack on the protocol<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      case 'NoClaim':\n        debugger;\n        const noClaimTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const noClaimTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === noClaimTokenConfig.address ) : null;\n        const receivedNoClaimAmount = noClaimTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(noClaimTokensLog.data,16),noClaimTokenConfig.balancerPool.decimals) : this.functionsUtil.fixTokenDecimals(params[3],noClaimTokenConfig.balancerPool.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully bought <strong>${receivedNoClaimAmount.toFixed(4)} ${this.state.selectedAction}</strong> tokens, you will be rewarded if there is no successful attack on the protocol by the expiry date<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    // Set second step completed\n    let steps = this.state.steps;\n    steps[1].completed = true;\n\n    const transactionSucceeded = true;\n    const tokenBalance = await this.functionsUtil.getTokenBalance(this.state.selectedToken,this.props.account);\n\n    // console.log('transactionSucceeded',infoBox);\n\n    this.setState({\n      steps,\n      infoBox,\n      tokenBalance,\n      transactionSucceeded\n    });\n  }\n\n  async updateData(){\n    let apy = null;\n    const steps = [];\n    let infoBox = null;\n    let swapFee = null;\n    let covTokens = null;\n    let tokenPrice = null;\n    let tokenAmount = null;\n    let contractInfo = null;\n    let collateralAmount = null;\n    let approveDescription = null;\n\n    const claimTokenConfig = this.state.selectedCoverage.tokens['Claim'];\n    const noClaimTokenConfig = this.state.selectedCoverage.tokens['NoClaim'];\n    const balancerClaimConfig = claimTokenConfig.balancerPool;\n    const balancerNoClaimConfig = noClaimTokenConfig.balancerPool;\n\n    await Promise.all([\n      this.props.initContract(claimTokenConfig.name,claimTokenConfig.address,claimTokenConfig.abi),\n      this.props.initContract(noClaimTokenConfig.name,noClaimTokenConfig.address,noClaimTokenConfig.abi),\n      this.props.initContract(balancerClaimConfig.name,balancerClaimConfig.address,balancerClaimConfig.abi),\n      this.props.initContract(balancerNoClaimConfig.name,balancerNoClaimConfig.address,balancerNoClaimConfig.abi)\n    ]);\n\n    const [\n      claimTokenBalance,\n      noClaimTokenBalance,\n      balancerPoolClaimBalance,\n      balancerPoolNoClaimBalance\n    ] = await Promise.all([\n      // Get Claim token balance\n      this.functionsUtil.getTokenBalance(claimTokenConfig.name,this.props.account),\n      // Get NOCLAIM token balance\n      this.functionsUtil.getTokenBalance(noClaimTokenConfig.name,this.props.account),\n      // Get Balancer Claim token Pool balance\n      this.functionsUtil.getTokenBalance(balancerClaimConfig.name,this.props.account),\n      // Get Balancer NOCLAIM token Pool balance\n      this.functionsUtil.getTokenBalance(balancerNoClaimConfig.name,this.props.account)\n    ]);\n\n    // Check if user has both Claim and NOCLAIM tokens\n    const hasMintedTokens = claimTokenBalance && noClaimTokenBalance && claimTokenBalance.gt(0) && noClaimTokenBalance.gt(0);\n\n    // Set Contract Info\n    switch (this.state.selectedAction){\n      case 'Mint':\n        contractInfo = this.props.toolProps.contract;\n      break;\n      case 'NoClaim':\n        contractInfo = noClaimTokenConfig.balancerPool;\n      break;\n      case 'Claim':\n        contractInfo = claimTokenConfig.balancerPool;\n      break;\n      default:\n      break;\n    }\n\n    const balancerTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n\n    if (contractInfo){\n      if (balancerTokenConfig){\n        [\n          swapFee,\n          covTokens,\n          tokenPrice\n        ] = await Promise.all([\n          this.functionsUtil.genericContractCall(contractInfo.name,'getSwapFee'),\n          this.functionsUtil.genericContractCall(contractInfo.name,'getBalance',[balancerTokenConfig.address]),\n          this.functionsUtil.genericContractCall(contractInfo.name,'getSpotPrice',[this.state.tokenConfig.address,balancerTokenConfig.address])\n        ]);\n\n        // Calculate yearly returns\n        if (tokenPrice){\n          const isClaim = this.state.selectedAction === 'Claim';\n          const expirationTimestamp = this.state.selectedCoverage.expirationTimestamp;\n          const days =  (expirationTimestamp*1000 - Date.now())/(60 * 60 * 24 * 1000);\n          tokenPrice = this.functionsUtil.fixTokenDecimals(tokenPrice,this.state.tokenConfig.decimals);\n          const apyPrice = isClaim ? tokenPrice : this.functionsUtil.BNify(1).minus(tokenPrice).div(tokenPrice);\n          apy = this.functionsUtil.BNify(100).times(apyPrice).times(365).div(days);\n        }\n\n        // Fix swap Fees\n        if (swapFee){\n          swapFee = this.functionsUtil.fixTokenDecimals(swapFee,18);\n        }\n      }\n\n      switch (this.state.selectedAction){\n        case 'Mint':\n          approveDescription = `Approve the Cover Protocol contract`;\n          infoBox = {\n            icon:'MonetizationOn',\n            text:`Stake ${this.state.selectedToken} to mint both CLAIM and NOCLAIM tokens in a 1:1 ratio then add them to the respective Balancer Pool to earn trading fees.<br /><small>Prior to expiry or an accepted claim, users can redeem back their collateral with both their CLAIM and NOCLAIM tokens. <a href=\"https://docs.coverprotocol.com/user-guide/redemption\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a></small>`\n          };\n          // Add Approve Step\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:hasMintedTokens,\n            description:`Mint CLAIM and NOCLAIM tokens`\n          });\n          // Add Liquidity to Balancer Step\n          steps.push({\n            icon:'Looks3',\n            description:`Add your CLAIM tokens to the Balancer Pool`,\n            completed:balancerPoolClaimBalance && balancerPoolClaimBalance.gt(0),\n            link:`https://pools.balancer.exchange/#/pool/${this.state.selectedCoverage.tokens['Claim'].balancerPool.address}/`,\n          });\n          // Add Liquidity to Balancer Step\n          steps.push({\n            icon:'Looks4',\n            description:`Add your NOCLAIM tokens to the Balancer Pool`,\n            completed:balancerPoolNoClaimBalance && balancerPoolNoClaimBalance.gt(0),\n            link:`https://pools.balancer.exchange/#/pool/${this.state.selectedCoverage.tokens['NoClaim'].balancerPool.address}/`,\n          });\n        break;\n        case 'NoClaim':\n          if (this.state.swapInfo){\n            collateralAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.amount,this.state.tokenConfig.decimals);\n            tokenAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.tokenAmountOut,contractInfo.decimals);\n            infoBox = {\n              icon:'VerifiedUser',\n              text:`By providing <strong>${collateralAmount.toFixed(4)} ${this.state.selectedToken}</strong> your NOCLAIM tokens will pay out <strong>~${tokenAmount.toFixed(4)} ${this.state.selectedToken}</strong> if there is no successful attack on the protocol by the expiry date.`\n            };\n          } else {\n            infoBox = {\n              icon:'VerifiedUser',\n              text:`NOCLAIM tokens will pay out 1 ${this.state.selectedToken} for each token you hold if there is no successful attack on the protocol by the expiry date.`\n            };\n          }\n\n          // Add Yearly cost and read more\n          infoBox.text+=`${apy ? `<br /><span style=\"color:${this.props.theme.colors.primary}\">The yearly return of buying and holding NOCLAIM until expiration is <strong>${apy.toFixed(2)}%</strong>` : null}</span><br /><small><a href=\"https://docs.coverprotocol.com/product/claims-guidelines\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a> to understand how claims are assessed and paid out by Cover Protocol.</small>`;\n\n          // Add Approve Step\n          approveDescription = `Approve the NOCLAIM Balancer Pool contract`;\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:noClaimTokenBalance && noClaimTokenBalance.gt(0),\n            description:`Buy NOCLAIM tokens with your ${this.state.selectedToken}`\n          });\n        break;\n        case 'Claim':\n          if (this.state.swapInfo){\n            collateralAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.amount,this.state.tokenConfig.decimals);\n            tokenAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.tokenAmountOut,contractInfo.decimals);\n            const portfolioCoveredPerc = 32;//this.state.portfolio && this.state.portfolio.totalBalance.gt(0) ? tokenAmount.div(this.state.portfolio.totalBalance).times(100) : null;\n            infoBox = {\n              icon:'BeachAccess',\n              text:`By providing <strong>${collateralAmount.toFixed(4)} ${this.state.selectedToken}</strong> your CLAIM tokens will pay out <strong>~${tokenAmount.toFixed(4)} ${this.state.selectedToken}</strong>${ portfolioCoveredPerc ? ` <strong>(${portfolioCoveredPerc}% of your portfolio)</strong>` : '' } in the event that there is a successful attack on the protocol before the expiry date.`\n            };\n          } else {\n            infoBox = {\n              icon:'BeachAccess',\n              text:`CLAIM tokens will pay out 1 ${this.state.selectedToken} for each token you hold in the event that there is a successful attack on the protocol before the expiry date.`\n            };\n          }\n\n          infoBox.text+=`${apy ? `<br /><span style=\"color:${this.props.theme.colors.primary}\">The yearly cost of buying and holding CLAIM until expiration is <strong>${apy.toFixed(2)}%` : null}</strong></span><br /><small><a href=\"https://docs.coverprotocol.com/product/claims-guidelines\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a> to understand how claims are assessed and paid out by Cover Protocol.</small>`;\n\n          // Add Approve Step\n          approveDescription = `Approve the CLAIM Balancer Pool contract`;\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:claimTokenBalance && claimTokenBalance.gt(0),\n            description:`Buy CLAIM tokens with your ${this.state.selectedToken}`\n          });\n        break;\n        default:\n        break;\n      }\n\n      const transactionSucceeded = false;\n      this.setState({\n        apy,\n        steps,\n        infoBox,\n        swapFee,\n        covTokens,\n        tokenPrice,\n        contractInfo,\n        approveDescription,\n        transactionSucceeded\n      });\n    }\n  }\n\n  async loadData(){\n    const currTime = parseInt(Date.now()/1000);\n    const activeCoverages = this.props.toolProps.coverages.reduce( (output,c,index) => {\n      if (c.expirationTimestamp>currTime){\n        const expirationDate = this.functionsUtil.strToMoment(c.expirationTimestamp*1000).utc().format('YYYY-MM-DD HH:mm:ss')+' UTC';\n        const icon = `images/tokens/${c.collateral}.svg`;\n        const label = `Collateral: ${c.collateral} - Expiration: ${expirationDate}`;\n        output.push({\n          icon,\n          label,\n          data:c,\n          value:expirationDate,\n        });\n      }\n      return output;\n    },[]);\n\n    const portfolio = await this.functionsUtil.getAccountPortfolio();\n    const defaultCoverage = activeCoverages.length ? activeCoverages[0] : null;\n\n    this.setState({\n      portfolio,\n      defaultCoverage,\n      activeCoverages\n    },() => {\n      if (defaultCoverage){\n        this.selectCoverage(defaultCoverage);\n      }\n    });\n  }\n\n  async selectCoverage(coverage){\n    const selectedCoverage = coverage.data;\n    this.setState({\n      selectedCoverage\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  render() {\n\n    const isMint = this.state.selectedAction === 'Mint';\n    const isBuyClaim = this.state.selectedAction === 'Claim';\n    const isBuyNoClaim = this.state.selectedAction === 'NoClaim';\n    const txAction = isMint ? this.state.selectedAction : `Buy ${this.state.selectedAction}`;\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.activeCoverages ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading active coverages...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.activeCoverages.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active coverages.\n                  </Text>\n                ) : (\n                  <Flex\n                    width={[1,0.46]}\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Box\n                      width={1}\n                    >\n                      <Text mb={1}>\n                        Select Coverage:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        name={'strategy'}\n                        isSearchable={false}\n                        options={this.state.activeCoverages}\n                        CustomOptionValue={CustomOptionValue}\n                        defaultValue={this.state.defaultCoverage}\n                        onChange={this.selectCoverage.bind(this)}\n                        CustomValueContainer={CustomValueContainer}\n                      />\n                    </Box>\n                    {\n                      this.state.selectedCoverage && (\n                        <Box\n                          mt={3}\n                          width={1}\n                        >\n                          <Text mb={1}>\n                            Select Action:\n                          </Text>\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={['column','row']}\n                            justifyContent={'space-between'}\n                          >\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isMint ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Add Liquidity'}\n                              imageSrc={'images/mint.svg'}\n                              isMobile={this.props.isMobile}\n                              subcaption={'mint CLAIM and NOCLAIM\\nand stake in Balancer Pool'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isMint}\n                              handleClick={ e => this.setAction('Mint') }\n                            />\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isBuyClaim ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Buy CLAIM'}\n                              imageSrc={'images/claim.svg'}\n                              isMobile={this.props.isMobile}\n                              subcaption={'protect in case of attacks\\nagainst the Idle protocol'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isBuyClaim}\n                              handleClick={ e => this.setAction('Claim') }\n                            />\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isBuyNoClaim ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Buy NOCLAIM'}\n                              isMobile={this.props.isMobile}\n                              imageSrc={'images/noclaim.svg'}\n                              subcaption={'get rewarded if no attack\\noccurs on the Idle protocol'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isBuyNoClaim}\n                              handleClick={ e => this.setAction('NoClaim') }\n                            />\n                          </Flex>\n                          {\n                            this.state.tokenConfig && this.state.tokenBalance && this.state.contractInfo &&\n                              <Box\n                                mt={2}\n                                mb={3}\n                                width={1}\n                              >\n                                <SendTxWithBalance\n                                  {...this.props}\n                                  action={txAction}\n                                  error={this.state.error}\n                                  steps={this.state.steps}\n                                  infoBox={this.state.infoBox}\n                                  tokenConfig={this.state.tokenConfig}\n                                  tokenBalance={this.state.tokenBalance}\n                                  contractInfo={this.state.contractInfo}\n                                  callback={this.transactionSucceeded.bind(this)}\n                                  contractApproved={this.contractApproved.bind(this)}\n                                  approveDescription={this.state.approveDescription}\n                                  balanceSelectorInfo={this.state.balanceSelectorInfo}\n                                  changeInputCallback={this.changeInputCallback.bind(this)}\n                                  getTransactionParams={this.getTransactionParams.bind(this)}\n                                >\n                                  <BuyModal\n                                    {...this.props}\n                                    showInline={true}\n                                    availableMethods={[]}\n                                    buyToken={this.state.selectedToken}\n                                  />\n                                </SendTxWithBalance>\n                              </Box>\n                          }\n                        </Box>\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default CoverProtocol;\n","import Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass TokenMigration extends Component {\n\n  state = {\n    tokenConfig:null,\n    selectedFromToken:null,\n    selectedDestToken:null,\n    migrationSucceeded:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async loadTokens(){\n    const selectedFromToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    if (selectedFromToken && selectedFromToken !== this.props.urlParams.param2){\n      this.changeFromToken(selectedFromToken);\n    }\n\n    this.selectFromToken(selectedFromToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      await this.loadTokens();\n    }\n  }\n\n  changeFromToken = (selectedToken) => {\n    const convertTool = this.functionsUtil.getGlobalConfig(['tools','tokenMigration']);\n    this.props.goToSection(`tools/${convertTool.route}/${selectedToken}`);\n  }\n\n  selectFromToken = async (selectedFromToken) => {\n    const tokenInfo = this.props.toolProps.availableTokens[selectedFromToken];\n\n    let selectedDestToken = null;\n    const availableDestinationTokens = {};\n\n    const availableStrategies = typeof this.props.toolProps.availableStrategies !== 'undefined' ? this.props.toolProps.availableStrategies : Object.keys(this.props.availableStrategies);\n\n    availableStrategies.forEach( strategy => {\n      const strategyAvailableTokens =  this.props.availableStrategies[strategy];\n      const baseTokenConfig = strategyAvailableTokens[tokenInfo.baseToken];\n      if (!baseTokenConfig){\n        return false;\n      }\n\n      // Remove icon\n      delete baseTokenConfig.icon;\n\n      if (!selectedDestToken){\n        selectedDestToken = baseTokenConfig.idle.token;\n      }\n      baseTokenConfig.strategy = strategy;\n      baseTokenConfig.baseToken = tokenInfo.baseToken;\n      availableDestinationTokens[baseTokenConfig.idle.token] = baseTokenConfig;\n    });\n\n    this.setState({\n      tokenConfig:null,\n      selectedFromToken,\n      availableDestinationTokens\n    },() => {\n      this.selectDestToken(selectedDestToken);\n    });\n  }\n\n  selectDestToken = async (selectedDestToken) => {\n\n    const destTokenConfig = this.state.availableDestinationTokens[selectedDestToken];\n    const tokenInfo = this.props.toolProps.availableTokens[this.state.selectedFromToken];\n\n    const tokenConfig = {\n      token:destTokenConfig.baseToken,\n      address:destTokenConfig.address,\n      decimals:destTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = destTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:tokenInfo.abi,\n      name:tokenInfo.token,\n      token:tokenInfo.token,\n      address:tokenInfo.address\n    };\n    \n    const migrationContract = this.props.toolProps.migrationContract;\n\n    // Add migration function\n    if (tokenInfo.migrateFunction){\n      migrationContract.functions[0].name = tokenInfo.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(destTokenConfig.strategy,tokenInfo.baseToken);\n\n    this.setState({\n      tokenConfig,\n      selectedDestToken\n    });\n  }\n\n  migrationCallback = () => {\n    this.setState({\n      migrationSucceeded:true\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedFromToken){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to migrate:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              id={'token-from'}\n              showBalance={true}\n              isSearchable={true}\n              onChange={this.changeFromToken}\n              selectedToken={this.state.selectedFromToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            this.state.availableDestinationTokens && this.state.selectedDestToken && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text mb={1}>\n                  Select destination asset:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  id={'token-dest'}\n                  showBalance={false}\n                  onChange={this.selectDestToken}\n                  selectedToken={this.state.selectedDestToken}\n                  availableTokens={this.state.availableDestinationTokens}\n                />\n              </Box>\n          }\n          {\n            this.state.selectedFromToken && this.state.selectedDestToken ? (\n              <Migrate\n                {...this.props}\n                showActions={false}\n                getTokenPrice={false}\n                isMigrationTool={true}\n                tokenConfig={this.state.tokenConfig}\n                migrationCallback={this.migrationCallback}\n                selectedToken={this.state.selectedFromToken}\n                selectedStrategy={this.props.selectedStrategy}\n              >\n                {\n                  !this.props.account ? (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'2.3em'}\n                          name={'Input'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={2}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Please connect with your wallet interact with Idle.\n                        </Text>\n                        <RoundButton\n                          buttonProps={{\n                            mt:2,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.props.connectAndValidateAccount}\n                        >\n                          Connect\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      {\n                        this.state.migrationSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              Your {this.state.selectedFromToken} have been successfully migrated!\n                            </Text>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedFromToken} in your wallet.\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n              </Migrate>\n            ) : null\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenMigration;\n","/*\n// batchDeposits[user][batchId] = amount\nmapping (address => mapping (uint256 => uint256)) public batchDeposits;\nmapping (uint256 => uint256) batchTotals; // in idleToken\nmapping (uint256 => uint256) batchRedeemedTotals; // in newIdleToken\n\nuint256 public currBatch;\naddress public idleToken;\naddress public newIdleToken;\naddress public underlying;\n\nfunction deposit() external\nfunction withdraw(uint256 batchId) external\n*/\n\nimport Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Box, Text, Icon, Link } from \"rimble-ui\";\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport TransactionField from '../TransactionField/TransactionField';\n\nclass BatchMigration extends Component {\n\n  state = {\n    canClaim:false,\n    batchTotals:{},\n    canDeposit:true,\n    action:'deposit',\n    batchDeposits:{},\n    tokenConfig:null,\n    processing:{\n      claim:{\n        txHash:null,\n        loading:false\n      },\n    },\n    hasDeposited:false,\n    selectedToken:null,\n    batchCompleted:false,\n    claimSucceeded:false,\n    migrationSucceeded:false,\n    selectedTokenConfig:null,\n    migrationContractApproved:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async checkBatchs(){\n\n    const migrationContractInfo = this.state.selectedTokenConfig.migrationContract;\n\n    await Promise.all([\n      this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi),\n      this.props.initContract(this.state.selectedTokenConfig.name,this.state.selectedTokenConfig.address,this.state.selectedTokenConfig.abi)\n    ]);\n\n    const [currBatchIndex,migrationContractApproved] = await Promise.all([\n      this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'currBatch'),\n      this.functionsUtil.checkTokenApproved(this.state.selectedTokenConfig.name,migrationContractInfo.address,this.props.account)\n    ]);\n\n    const newState = {};\n    const batchDeposits = {};\n    const batchTotals = {};\n    let batchCompleted = false;\n\n    if (currBatchIndex !== null){\n      for (let batchIndex = 0; batchIndex <= currBatchIndex ; batchIndex++){\n        let [batchTotal,batchDeposit] = await Promise.all([\n          this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchTotals',[batchIndex]),\n          this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n        ]);\n        if (batchTotal && batchTotal !== null){\n          batchTotals[batchIndex] = this.functionsUtil.fixTokenDecimals(batchTotal,this.state.selectedTokenConfig.decimals);\n        }\n        if (batchDeposit !== null){\n          batchDeposit = this.functionsUtil.fixTokenDecimals(batchDeposit,this.state.selectedTokenConfig.decimals);\n          if (batchDeposit.gt(0)){\n\n            batchDeposits[batchIndex] = batchDeposit;\n            // Check claimable\n            if (batchIndex < currBatchIndex){\n              batchCompleted = true;\n            }\n          }\n        }\n      }\n\n      newState.batchDeposits = batchDeposits;\n    }\n\n    const hasDeposited = (batchDeposits && Object.keys(batchDeposits).length>0);\n\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    newState.claimSucceeded = false;\n    newState.batchTotals = batchTotals;\n    newState.batchCompleted = batchCompleted;\n    newState.hasDeposited = hasDeposited;\n    newState.canDeposit = !hasDeposited && batchMigrationDepositEnabled;\n    newState.canClaim = batchCompleted || hasDeposited;\n    newState.action = hasDeposited ? 'redeem' : 'deposit';\n    newState.migrationContractApproved = migrationContractApproved;\n\n    this.setState(newState);\n  }\n\n  async loadTokens(){\n    const selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    this.selectFromToken(selectedToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      await this.loadTokens();\n    }\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      this.checkBatchs();\n    }\n  }\n\n  selectFromToken = async (selectedToken) => {\n\n    const selectedTokenConfig = this.props.toolProps.availableTokens[selectedToken];\n    const strategyAvailableTokens =  this.props.availableStrategies[selectedTokenConfig.strategy];\n\n    const baseTokenConfig = strategyAvailableTokens[selectedTokenConfig.baseToken];\n\n    const tokenConfig = {\n      token:selectedTokenConfig.baseToken,\n      address:selectedTokenConfig.address,\n      decimals:selectedTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = baseTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:selectedTokenConfig.abi,\n      name:selectedTokenConfig.name,\n      token:selectedTokenConfig.token,\n      address:selectedTokenConfig.address\n    };\n    \n    const migrationContract = selectedTokenConfig.migrationContract;\n\n    // Add migration function\n    if (baseTokenConfig.migrateFunction){\n      migrationContract.functions[0].name = baseTokenConfig.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(selectedTokenConfig.strategy,baseTokenConfig.baseToken);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedTokenConfig\n    });\n  }\n\n  claim = async () => {\n    if (!this.state.batchCompleted){\n      return null;\n    }\n\n    const loading = true;\n    const claimableValue = 0;\n    const batchId = Object.keys(this.state.batchDeposits)[0];\n\n    const callbackClaim = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: `BatchMigration`,\n        eventAction: 'Claim',\n        eventLabel: this.props.selectedToken,\n        eventValue: parseInt(claimableValue)\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        claimSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          claim:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptClaim = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          claim:{\n            ...prevState.processing.claim,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'withdraw', [batchId], null, callbackClaim, callbackReceiptClaim);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        claim:{\n          ...prevState.processing.claim,\n          loading\n        }\n      }\n    }));\n  }\n\n  setAction = (action) => {\n    if (action !== null && ['deposit','redeem'].includes(action.toLowerCase())){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  migrationCallback = () => {\n    this.checkBatchs();\n    this.setState({\n      migrationSucceeded:true\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedToken){\n      return null;\n    }\n\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    const batchId = this.state.batchDeposits && Object.keys(this.state.batchDeposits).length>0 ? Object.keys(this.state.batchDeposits)[0] : null;\n    const batchDeposit = this.state.batchDeposits && Object.values(this.state.batchDeposits).length>0 ? Object.values(this.state.batchDeposits)[0] : null;\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to migrate:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              id={'token-from'}\n              showBalance={true}\n              isSearchable={false}\n              onChange={this.selectFromToken}\n              selectedToken={this.state.selectedToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            (this.state.canDeposit || this.state.canClaim) && \n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  px:4,\n                  mt:3,\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                > \n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.migrationContractApproved ? 'CheckBox' : 'LooksOne'}\n                      color={ this.state.migrationContractApproved ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Approve the batch migration contract\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.hasDeposited ? 'CheckBox' : 'LooksTwo'}\n                      color={ this.state.hasDeposited ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Deposit your {this.state.selectedTokenConfig.token}\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.batchCompleted ? 'CheckBox' : 'Looks3'}\n                      color={ this.state.batchCompleted ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Wait for the batch to be migrated\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.claimSucceeded ? 'CheckBox' : 'Looks4'}\n                      color={ this.state.claimSucceeded ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Claim your {this.state.selectedToken}V4\n                    </Text>\n                  </Flex>\n                </Flex>\n              </DashboardCard>\n          }\n          {\n            this.state.selectedToken ? (\n              <Box width={1}>\n                {\n                  this.state.migrationContractApproved && (this.state.canDeposit || this.state.canClaim) && \n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text mb={2}>\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canDeposit ? this.setAction('deposit') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canDeposit }\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canClaim ? this.setAction('redeem') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canClaim }\n                          isActive={ this.state.action === 'redeem' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Claim\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                }\n                {\n                  this.state.action === 'deposit' ? \n                    batchMigrationDepositEnabled ? (\n                      <Migrate\n                        {...this.props}\n                        showActions={false}\n                        migrationParams={[]}\n                        getTokenPrice={false}\n                        isMigrationTool={true}\n                        migrationIcon={'FileDownload'}\n                        waitText={'Deposit estimated in'}\n                        tokenConfig={this.state.tokenConfig}\n                        selectedToken={this.state.selectedToken}\n                        callbackApprove={this.checkBatchs.bind(this)}\n                        selectedStrategy={this.props.selectedStrategy}\n                        migrationCallback={this.migrationCallback.bind(this)}\n                        migrationText={`Deposit your ${this.state.selectedTokenConfig.token} and wait until it is converted to the new ${this.state.tokenConfig.idle.token}.`}\n                      >\n                        {\n                          !this.props.account ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mt:3\n                              }}\n                            >\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  size={'2.3em'}\n                                  name={'Input'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mt={2}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  Please connect with your wallet interact with Idle.\n                                </Text>\n                                <RoundButton\n                                  buttonProps={{\n                                    mt:2,\n                                    width:[1,1/2]\n                                  }}\n                                  handleClick={this.props.connectAndValidateAccount}\n                                >\n                                  Connect\n                                </RoundButton>\n                              </Flex>\n                            </DashboardCard>\n                          ) : (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                my:3\n                              }}\n                            >\n                              {\n                                batchId ? (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      color={'cellText'}\n                                      name={'HourglassEmpty'}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      {\n                                        this.state.batchCompleted ? (\n                                          <Text.span\n                                            color={'cellText'}\n                                          >The batch has been migrated, click on the \"Claim\" button to withdraw your tokens.</Text.span>\n                                        ) : (\n                                          <Text.span\n                                            color={'cellText'}\n                                          >\n                                            You have successfully deposited {batchDeposit.toFixed(4)} {this.state.selectedTokenConfig.token}, please wait until the batch is migrated to claim your tokens.\n                                            {\n                                              typeof this.state.batchTotals[batchId] !== 'undefined' && \n                                              <Text.span\n                                                color={'cellText'}\n                                              >\n                                                <br />Batch pool: {this.state.batchTotals[batchId].toFixed(4)} {this.state.selectedTokenConfig.token}\n                                              </Text.span>\n                                            }\n                                          </Text.span>\n                                        )\n                                      }\n                                    </Text>\n                                  </Flex>\n                                ) : this.state.migrationSucceeded ? (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      name={'DoneAll'}\n                                      color={this.props.theme.colors.transactions.status.completed}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      You have successfully deposited your {this.state.selectedTokenConfig.token} into the batch!\n                                    </Text>\n                                  </Flex>\n                                ) : (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      name={'MoneyOff'}\n                                      color={'cellText'}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      You don't have any {this.state.selectedTokenConfig.token} in your wallet.\n                                    </Text>\n                                  </Flex>\n                                )\n                              }\n                            </DashboardCard>\n                          )\n                        }\n                      </Migrate>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          my:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Text\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            Batch migration is disabled for this asset.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        my:3\n                      }}\n                    >\n                      {\n                        this.state.processing.claim.loading ? (\n                          <Flex\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar {...this.props} waitText={`Claim estimated in`} endMessage={`Finalizing approve request...`} hash={this.state.processing.claim.txHash} />\n                          </Flex>\n                        ) : this.state.claimSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You have successfully withdrawn your {this.state.selectedToken} V4!\n                            </Text>\n                            <Link\n                              mt={2}\n                              textAlign={'center'}\n                              hoverColor={'primary'}\n                              onClick={ e => this.props.goToSection(this.state.selectedTokenConfig.strategy+'/'+this.state.selectedTokenConfig.baseToken) }\n                            >\n                              Go to the Dashboard\n                            </Link>\n                          </Flex>\n                        ) : this.state.batchCompleted ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              color={'cellText'}\n                              name={'FileUpload'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The batch has been migrated!<br />You can now claim your {this.state.tokenConfig.idle.token} V4.\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                              <RoundButton\n                                buttonProps={{\n                                  mt:3,\n                                  width:[1,0.5],\n                                  mainColor:this.props.theme.colors.redeem\n                                }}\n                                handleClick={ e => this.claim() }\n                              >\n                                Claim\n                              </RoundButton>\n                            </Flex>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              color={'cellText'}\n                              name={'HourglassEmpty'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              <Text.span\n                                color={'cellText'}\n                              >\n                                You have successfully deposited {batchDeposit.toFixed(4)} {this.state.selectedTokenConfig.token}, please wait until the batch is migrated to claim your V4 tokens.\n                                {\n                                  typeof this.state.batchTotals[batchId] !== 'undefined' && \n                                  <Text.span\n                                    color={'cellText'}\n                                  >\n                                    <br />Batch pool: {this.state.batchTotals[batchId].toFixed(4)} {this.state.selectedTokenConfig.token}\n                                  </Text.span>\n                                }\n                              </Text.span>\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n              </Box>\n            ) : null\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default BatchMigration;","import ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\nimport { Flex, Text, Heading, Input, Form, Field, Icon, Link, Loader, Button } from \"rimble-ui\";\n\nclass DeployB2BVesting extends Component {\n\n  state = {\n    actions:[],\n    processing: {\n      txHash:null,\n      loading:false,\n      actionIndex:[]\n    },\n    action:'deploy',\n    validated:false,\n    viewAction:null,\n    editAction:null,\n    newAction:false,\n    maxContracts:10,\n    tokenConfig:null,\n    tokenBalance:null,\n    contractInfo:null,\n    actionValid:false,\n    actionInputs:null,\n    claimedTokens:null,\n    deployedContracts:[],\n    contractDeployed:false,\n    inputs:[\n      {\n        name:'owner',\n        type:'address'\n      },\n      {\n        name:'recipient',\n        type:'address'\n      },\n      {\n        name:'vestingPeriod',\n        type:'uint256'\n      }\n    ]\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  setAction(action){\n    this.setState({\n      action,\n      editAction:null,\n      viewAction:null,\n      claimedTokens:null,\n      contractDeployed:null\n    });\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false,\n        actionIndex:[]\n      }\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadContracts();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    this.validateForm();\n    this.checkInputs();\n\n    const contractDeployed = prevState.contractDeployed !== this.state.contractDeployed && this.state.contractDeployed;\n    if (contractDeployed){\n      this.loadContracts();\n    }\n  }\n\n  async loadContracts(){\n    const tokenConfig = this.functionsUtil.getGlobalConfig(['govTokens','IDLE']);\n    const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n    const fromBlock = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n    const proxyCreated = await this.functionsUtil.getContractPastEvents('ProxyFactory', 'ProxyCreated', {fromBlock, toBlock: 'latest'});\n    const deployedContractsAddresses = proxyCreated.filter( p => p.returnValues.implementation.toLowerCase() === vesterImplementation.address.toLowerCase() ).map( p => p.returnValues.proxy );\n    // console.log('proxyCreated',proxyCreated,'deployedContractsAddresses',deployedContractsAddresses);\n\n    const deployedContracts = [];\n    await this.functionsUtil.asyncForEach(deployedContractsAddresses, async (contractAddress) => {\n      const contractName = `b2bVesting_${contractAddress}`;\n      await this.props.initContract(contractName,contractAddress,vesterImplementation.abi);\n      const [\n        // initialized,\n        owner,\n        recipient,\n        vestingPeriod,\n        availableBalance,\n        depositAmounts,\n      ] = await Promise.all([\n          // this.functionsUtil.genericContractCall(contractName,'initialized'),\n          this.functionsUtil.genericContractCall(contractName,'owner'),\n          this.functionsUtil.genericContractCall(contractName,'recipient'),\n          this.functionsUtil.genericContractCall(contractName,'vestingPeriod'),\n          this.functionsUtil.getTokenBalance(tokenConfig.token,contractAddress),\n          this.functionsUtil.genericContractCall(contractName,'getDepositAmounts')\n      ]);\n\n      let totalDeposited = this.functionsUtil.BNify(0);\n      if (depositAmounts) {\n        totalDeposited = depositAmounts.reduce( (total,amount) => {\n          total = total.plus(amount);\n          return total;\n        },this.functionsUtil.BNify(0));\n\n        totalDeposited = this.functionsUtil.fixTokenDecimals(totalDeposited,tokenConfig.decimals);\n      }\n\n      // console.log(contractName,initialized,owner,recipient,vestingPeriod,depositAmounts,parseFloat(totalDeposited));\n\n      deployedContracts.push({\n        owner,\n        recipient,\n        contractName,\n        vestingPeriod,\n        totalDeposited,\n        contractAddress,\n        availableBalance\n      });\n    });\n    const tokenBalance = await this.functionsUtil.getTokenBalance('IDLE',this.props.account);\n\n    // console.log(deployedContracts);\n\n    this.setState({\n      tokenConfig,\n      tokenBalance,\n      deployedContracts\n    });\n  }\n\n  validateForm(){\n    const validated = Object.values(this.state.actions).length>0;\n    if (validated !== this.state.validated){\n      this.setState({\n        validated\n      });\n    }\n  }\n\n  getTransactionParams(amount){\n    const params = {\n      value:null,\n      methodName:'deposit',\n      methodParams:[amount]\n    };\n    return params;\n  }\n\n  claimCallback(tx){\n    // console.log('claimCallback',tx);\n    if (tx.status === 'success'){\n      this.loadContracts();\n\n      const claimedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.address.toLowerCase() ) : null;\n      if (claimedTokensLog){\n        const claimedTokens = this.functionsUtil.fixTokenDecimals(parseInt(claimedTokensLog.data,16),this.state.tokenConfig.decimals);\n        this.setState({\n          claimedTokens\n        });\n      }\n    }\n  }\n\n  depositCallback(tx,amount,params){\n    // console.log('depositCallback',tx,amount,params);\n    if (tx.status === 'success'){\n      this.loadContracts();\n    }\n  }\n\n  getPatternByFieldType(type,returnString=false){\n    let fieldPattern = null;\n    switch (type){\n      case 'address':\n        fieldPattern = '^0x[a-fA-F0-9]{40}$';\n      break;\n      case 'address[]':\n        fieldPattern = '^((0x[a-fA-F0-9]{40})[,]?)+$';\n      break;\n      case 'string':\n        fieldPattern = '[\\\\w]+';\n      break;\n      case 'bool':\n        fieldPattern = '(0|1)';\n      break;\n      case 'uint256':\n      case 'uint8':\n        fieldPattern = '[\\\\d]+';\n      break;\n      default:\n        fieldPattern = null;\n      break;\n    }\n\n    if (!returnString && fieldPattern){\n      fieldPattern = new RegExp(fieldPattern);\n    }\n\n    return fieldPattern;\n  }\n\n  checkInputs(){\n\n    if (!this.state.actionInputs){\n      return false;\n    }\n\n    const inputs = this.state.inputs;\n    let actionValid = Object.values(this.state.actionInputs).length === inputs.length;\n\n    if (actionValid){\n      Object.values(this.state.actionInputs).forEach( (inputValue,inputIndex) => {\n        const inputInfo = inputs[inputIndex];\n        const fieldPattern = this.getPatternByFieldType(inputInfo.type);\n        const inputValid = fieldPattern ? inputValue.match(fieldPattern) !== null : true;\n        actionValid = actionValid && inputValid;\n        // console.log('checkInputs',inputInfo.name,inputInfo.type,inputValue,inputValid,actionValid);\n      });\n    }\n\n    if (actionValid !== this.state.actionValid){\n      this.setState({\n        actionValid\n      });\n    }\n  }\n\n  valueChange(e,inputIndex){\n    let actionValue = e.target.value;\n    this.setState({\n      actionValue\n    });\n  }\n\n  inputChange(e,inputIndex){\n    let inputValue = e.target.value;\n\n    this.setState((prevState) => ({\n      actionInputs:{\n        ...prevState.actionInputs,\n        [inputIndex]:inputValue\n      }\n    }));\n  }\n\n  deleteAction(){\n    if (this.state.editAction !== null){\n      let actions = this.state.actions;\n      if (actions[this.state.editAction]){\n        delete actions[this.state.editAction];\n        actions = Object.values(actions);\n        const editAction = null;\n        const actionInputs = null;\n\n        this.setState({\n          actions,\n          editAction,\n          actionInputs\n        });\n      }\n    }\n  }\n\n  addAction(){\n\n    // Check inputs number\n    const inputs = Object\n                    .values(this.state.actionInputs).filter( v => v.length>0 )\n                    .map( (inputValue,inputIndex) => {\n                      const inputInfo = this.state.inputs[inputIndex];\n                      switch (inputInfo.type){\n                        case 'address[]':\n                          inputValue = inputValue.split(',');\n                        break;\n                        case 'uint256[]':\n                          inputValue = inputValue.split(',').map( n => this.functionsUtil.toBN(n) );\n                        break;\n                        case 'uint256':\n                          inputValue = this.functionsUtil.toBN(inputValue);\n                        break;\n                        default:\n                          if (inputInfo.type.substr(-2) === '[]'){\n                            inputValue = inputValue.split(',');\n                          }\n                        break;\n                      }\n\n                      return inputValue;\n                    });\n\n    if (inputs.length<this.state.inputs.length){\n      return false;\n    }\n\n    const action = {\n      txError:null,\n      contractAddress:null,\n      inputs:this.state.actionInputs,\n    };\n\n    const newAction = false;\n    const actions = Object.values(this.state.actions);\n\n    if (this.state.editAction === null){\n      actions.push(action);\n    } else {\n      actions[this.state.editAction] = action;\n    }\n\n    const editAction = null;\n    const actionInputs = null;\n\n    this.setState({\n      actions,\n      newAction,\n      editAction,\n      actionInputs\n    });\n  }\n\n  setEditAction(editAction){\n\n    if (!this.state.actions[editAction]){\n      return false;\n    }\n\n    if (editAction === this.state.editAction){\n      return false;\n    }\n\n    const action = this.state.actions[editAction];\n\n    const newAction = false;\n    const actionInputs = action.inputs;\n\n    this.setState({\n      newAction,\n      editAction,\n      actionInputs\n    });\n  }\n\n  setViewAction(viewAction){\n\n    if (viewAction !== this.state.viewAction){\n      const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n      const deployedContract = this.state.deployedContracts[viewAction];\n      const contractInfo = {\n        abi:vesterImplementation.abi,\n        name:deployedContract.contractName,\n        address:deployedContract.contractAddress\n      };\n      this.setState({\n        viewAction,\n        contractInfo,\n        claimedTokens:null\n      });\n    }\n  }\n\n  setNewAction(newAction){\n    if (newAction === this.state.newAction){\n      return false;\n    }\n\n    const editAction = null;\n\n    this.setState({\n      newAction,\n      editAction,\n    });\n  }\n\n  async handleSubmit(e){\n    e.preventDefault();\n\n    const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n    const idleAddress = this.functionsUtil.getGlobalConfig(['govTokens','IDLE','address']);\n\n    const callback = (tx,error,actionIndex) => {\n      const txSucceeded = tx.status === 'success';\n      const actions = Object.values(this.state.actions);\n      const isLastAction = parseInt(actionIndex)===parseInt(this.state.actions.length)-1;\n      const contractDeployed = txSucceeded && isLastAction;\n      // console.log('callback_1 -',actionIndex,txSucceeded,contractDeployed,tx);\n      if (txSucceeded){\n        const clonedVesterAddress = tx.txReceipt.events && tx.txReceipt.events.ProxyCreated ? tx.txReceipt.events.ProxyCreated.returnValues[1] : `0x${tx.txReceipt.logs[0].data.substr(-40)}`;\n        actions[actionIndex].contractAddress = clonedVesterAddress;\n        // console.log('callback_2 -',actionIndex,actions[actionIndex].contractAddress);\n      } else {\n        actions[actionIndex].txError = true;\n      }\n\n      // console.log('callback_3 -',actionIndex,actions);\n\n      this.setState({\n        actions,\n        contractDeployed\n      },()=>{\n        if (isLastAction){\n          this.cancelTransaction();\n        }\n      });\n    };\n\n    const callbackReceipt = (tx,actionIndex) => {\n      const txHash = tx.transactionHash;\n      // console.log('callbackReceipt',actionIndex,tx);\n      const processing = Object.assign({},this.state.processing);\n      processing.txHash = txHash;\n      processing.actionIndex.push(actionIndex);\n      this.setState({\n        processing\n      });\n    };\n\n    this.state.actions.forEach((action,actionIndex) => {\n      const ownerAddress = action.inputs[0];\n      const recipientAddress = action.inputs[1];\n      const vestingPeriod = action.inputs[2];\n      const initSig = \"initialize(address,address,address,uint256)\";\n      const initData = this.props.web3.eth.abi.encodeParameters(\n        ['address','address','address','uint256'],\n        [ownerAddress,idleAddress,recipientAddress,vestingPeriod]\n      );\n      const methodParams = [vesterImplementation.address,initSig,initData];\n      this.functionsUtil.contractMethodSendWrapper('ProxyFactory', 'createAndCall', methodParams, (tx,error) => callback(tx,error,actionIndex), (tx) => callbackReceipt(tx,actionIndex) );\n    });\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n\n    return false;\n  }\n\n  render() {\n\n    const depositContracts = this.state.deployedContracts.filter( c => c.owner.toLowerCase() === this.props.account.toLowerCase() );\n    const claimContracts = this.state.deployedContracts.filter( c => c.recipient.toLowerCase() === this.props.account.toLowerCase() );\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.42]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Flex\n            width={1}\n            flexDirection={'column'}\n          >\n            <Text\n              mb={2}\n            >\n              Choose the action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'space-between'}\n            >\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Deploy'}\n                icon={'CloudUpload'}\n                iconColor={'deposit'}\n                iconBgColor={'#ced6ff'}\n                isActive={ this.state.action === 'deploy' }\n                handleClick={ e => this.setAction('deploy') }\n              />\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Deposit'}\n                iconColor={'deposit'}\n                icon={'ArrowDownward'}\n                iconBgColor={'#ced6ff'}\n                isActive={ this.state.action === 'deposit' }\n                handleClick={ e => this.setAction('deposit') }\n              />\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Claim'}\n                iconColor={'redeem'}\n                icon={'ArrowUpward'}\n                iconBgColor={'#ceeff6'}\n                isActive={ this.state.action === 'claim' }\n                handleClick={ e => this.setAction('claim') }\n              />\n            </Flex>\n          </Flex>\n          <Flex\n            pb={2}\n            width={1}\n            my={[2,3]}\n            borderColor={'divider'}\n            borderBottom={'1px solid transparent'}\n          >\n            <Heading.h4\n              fontSize={[2,3]}\n              fontWeight={[2,3]}\n              style={{\n                textTransform:'capitalize'\n              }}\n            >\n              {this.state.action}\n            </Heading.h4>\n          </Flex>\n          <Flex\n            flexDirection={'column'}\n          >\n            {\n              this.state.action === 'deploy' ? (\n                <Form\n                  width={1}\n                  validated={this.state.validated}\n                  onSubmit={this.handleSubmit.bind(this)}\n                >\n                  {\n                    Object.values(this.state.actions).map( (action,actionIndex) => {\n                      return (\n                        <DashboardCard\n                          cardProps={{\n                            py:2,\n                            px:3,\n                            mb:3,\n                            width:1\n                          }}\n                          titleParentProps={{\n                            ml:0,\n                            my:1,\n                            justifyContent:'center'\n                          }}\n                          titleProps={{\n                            fontSize:2,\n                            fontWeight:3\n                          }}\n                          isInteractive={true}\n                          key={`action_${actionIndex}`}\n                          title={ this.state.editAction === actionIndex ? 'Edit Contract' : null }\n                          handleClick={ e => /*action.contractAddress ? this.functionsUtil.openWindow(this.functionsUtil.getEtherscanAddressUrl(action.contractAddress)) : */this.setEditAction(actionIndex) }\n                        >\n                          {\n                            this.state.editAction === actionIndex ? (\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                {\n                                  this.state.inputs.map( (input,inputIndex) => {\n                                    const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                    const fieldPattern = this.getPatternByFieldType(input.type,true);\n                                    return (\n                                      <Field\n                                        style={{\n                                          width:'100%',\n                                          display:'flex',\n                                          alignItems:'stretch',\n                                          flexDirection:'column'\n                                        }}\n                                        key={`input_${inputIndex}`}\n                                        label={`${input.name} (${input.type})`}\n                                      >\n                                        <Input\n                                          required\n                                          width={1}\n                                          type={fieldType}\n                                          pattern={fieldPattern}\n                                          borderColor={'cardBorder'}\n                                          backgroundColor={'cardBg'}\n                                          placeholder={`${input.name} (${input.type})`}\n                                          onChange={ e => this.inputChange(e,inputIndex) }\n                                          value={this.state.actionInputs && this.state.actionInputs[inputIndex] ? this.state.actionInputs[inputIndex] : ''}\n                                        />\n                                      </Field>\n                                    )\n                                  })\n                                }\n                                <Flex\n                                  mb={2}\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  {\n                                    action.contractAddress ? (\n                                      <ExtLink\n                                        fontSize={1}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                        hoverColor={this.props.theme.colors.transactions.status.completed}\n                                        href={this.functionsUtil.getEtherscanAddressUrl(action.contractAddress)}\n                                      >\n                                        Deployed at {action.contractAddress}\n                                      </ExtLink>\n                                    ) : !this.state.processing.loading && (\n                                      <Flex\n                                        width={1}\n                                        alignItems={'center'}\n                                        flexDirection={'column'}\n                                        justifyContent={'center'}\n                                      >\n                                        <RoundButton\n                                          buttonProps={{\n                                            px:[0,4],\n                                            type:'button',\n                                            width:[1,'auto'],\n                                            disabled:!this.state.actionValid\n                                          }}\n                                          handleClick={this.addAction.bind(this)}\n                                        >\n                                          Save Contract\n                                        </RoundButton>\n                                        <Link\n                                          mt={2}\n                                          color={'red'}\n                                          hoverColor={'red'}\n                                          onClick={this.deleteAction.bind(this)}\n                                        >\n                                          Delete Contract\n                                        </Link>\n                                      </Flex>\n                                    )\n                                  }\n                                </Flex>\n                              </Flex>\n                            ) : (\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'space-between'}\n                              >\n                                <Text>\n                                  {this.functionsUtil.shortenHash(action.inputs[0])} - {this.functionsUtil.shortenHash(action.inputs[1])} - {action.inputs[2]} { action.contractAddress ? '- DEPLOYED' : '' }\n                                </Text>\n                                { \n                                  action.contractAddress ? (\n                                    <Flex\n                                      p={'3px'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                    >\n                                      <Icon\n                                        name={'Done'}\n                                        align={'center'}\n                                        size={this.props.isMobile ? '1.2em' : '1.8em'}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      />\n                                    </Flex>\n                                  ) : this.state.processing.loading && this.state.processing.actionIndex && this.state.processing.actionIndex.includes(parseInt(actionIndex)) ? (\n                                    <Loader size=\"28px\" />\n                                  ) : action.txError ? (\n                                    <Flex\n                                      p={'3px'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                    >\n                                      <Icon\n                                        color={'red'}\n                                        name={'Error'}\n                                        align={'center'}\n                                        size={ this.props.isMobile ? '1.2em' : '1.8em' }\n                                      />\n                                    </Flex>\n                                  ) : (\n                                    <Flex\n                                      p={['4px','7px']}\n                                      borderRadius={'50%'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                      backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                                    >\n                                      <Icon\n                                        name={'Edit'}\n                                        align={'center'}\n                                        color={'redeem'}\n                                        size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                      />\n                                    </Flex>\n                                  )\n                                }\n                              </Flex>\n                            )\n                          }\n                        </DashboardCard>\n                      );\n                    })\n                  }\n                  {\n                    (!this.state.contractDeployed && !this.state.processing.loading && (!this.state.actions || Object.values(this.state.actions).length<this.state.maxContracts)) && (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        handleClick={ e => this.setNewAction(true) }\n                        title={ this.state.newAction ? 'Add Contract' : null }\n                      >\n                        {\n                          this.state.newAction ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  const fieldPattern = this.getPatternByFieldType(input.type,true);\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        width={1}\n                                        type={fieldType}\n                                        pattern={fieldPattern}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        placeholder={`${input.name} (${input.type})`}\n                                        onChange={ e => this.inputChange(e,inputIndex) }\n                                        value={this.state.actionInputs && this.state.actionInputs[inputIndex] ? this.state.actionInputs[inputIndex] : ''}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                              >\n                                <RoundButton\n                                  buttonProps={{\n                                    px:[0,4],\n                                    type:'button',\n                                    width:[1,'auto'],\n                                    disabled:!this.state.actionValid\n                                  }}\n                                  handleClick={this.addAction.bind(this)}\n                                >\n                                  Add Contract\n                                </RoundButton>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                Add Contract\n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'Add'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    )\n                  }\n                  <Flex\n                    mb={3}\n                    width={1}\n                    alignItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    {\n                      this.state.contractDeployed ? (\n                        <DashboardCard\n                          cardProps={{\n                            py:3,\n                            px:4,\n                            width:[1,'100%']\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Icon\n                              name={'DoneAll'}\n                              align={'center'}\n                              size={ this.props.isMobile ? '1.4em' : '2.2em' }\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={1}\n                              fontWeight={3}\n                              fontSize={[2,3]}\n                              color={'dark-gray'}\n                              textAlign={'center'}\n                            >\n                              B2B Vesting contracts have been deployed\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      ) : this.state.processing && this.state.processing.loading ? (\n                        <TxProgressBar\n                          {...this.props}\n                          hash={this.state.processing.txHash}\n                          waitText={`Deployment estimated in`}\n                          endMessage={`Finalizing deployment request...`}\n                          cancelTransaction={this.cancelTransaction.bind(this)}\n                        />\n                      ) : (\n                        <RoundButton\n                          buttonProps={{\n                            type:'submit',\n                            width:[1,'15em'],\n                            disabled:!this.state.validated\n                          }}\n                        >\n                          Deploy Contracts\n                        </RoundButton>\n                      )\n                    }\n                  </Flex>\n                </Form>\n              ) : this.state.action === 'deposit' ?\n                depositContracts.length>0 ?\n                  depositContracts.map( (contractInfo,actionIndex) => {\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        key={`action_${actionIndex}`}\n                        handleClick={ e => this.setViewAction(actionIndex) }\n                        title={ this.state.viewAction === actionIndex ? 'View Contract' : null }\n                      >\n                        {\n                          this.state.viewAction === actionIndex ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Contract Address`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.contractAddress}\n                                />\n                              </Field>\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        readOnly\n                                        width={1}\n                                        type={fieldType}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        value={contractInfo[input.name]}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Total Deposited`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.totalDeposited.toFixed(6)}\n                                />\n                              </Field>\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Available Balance`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.availableBalance.toFixed(6)}\n                                />\n                              </Field>\n                              <Flex\n                                mb={2}\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                                borderTop={'1px solid transparent'}\n                              >\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <SendTxWithBalance\n                                    {...this.props}\n                                    action={this.state.action}\n                                    tokenConfig={this.state.tokenConfig}\n                                    tokenBalance={this.state.tokenBalance}\n                                    contractInfo={this.state.contractInfo}\n                                    callback={this.depositCallback.bind(this)}\n                                    getTransactionParams={this.getTransactionParams.bind(this)}\n                                    approveDescription={'You need to approve the Smart-Contract first'}\n                                  >\n                                    <DashboardCard\n                                      cardProps={{\n                                        p:3,\n                                      }}\n                                    >\n                                      <Flex\n                                        alignItems={'center'}\n                                        flexDirection={'column'}\n                                      >\n                                        <Icon\n                                          size={'2.3em'}\n                                          name={'MoneyOff'}\n                                          color={'cellText'}\n                                        />\n                                        <Text\n                                          mt={2}\n                                          fontSize={2}\n                                          color={'cellText'}\n                                          textAlign={'center'}\n                                        >\n                                          You don't have any $IDLE in your wallet.\n                                        </Text>\n                                      </Flex>\n                                    </DashboardCard>\n                                  </SendTxWithBalance>\n                                </Flex>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                {this.functionsUtil.shortenHash(contractInfo.owner)} - {this.functionsUtil.shortenHash(contractInfo.recipient)} - {contractInfo.vestingPeriod} \n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'ZoomIn'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    );\n                  })\n                : (\n                  <Text\n                    textAlign={'center'}\n                  >\n                    You can't deposit in any contract yet.\n                  </Text>\n                )\n              : this.state.action === 'claim' &&\n                claimContracts.length>0 ?\n                  claimContracts.map( (contractInfo,actionIndex) => {\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        key={`action_${actionIndex}`}\n                        handleClick={ e => this.setViewAction(actionIndex) }\n                        title={ this.state.viewAction === actionIndex ? 'View Contract' : null }\n                      >\n                        {\n                          this.state.viewAction === actionIndex ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Contract Address`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.contractAddress}\n                                />\n                              </Field>\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        readOnly\n                                        width={1}\n                                        type={fieldType}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        value={contractInfo[input.name]}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Total Deposited`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.totalDeposited.toFixed(6)}\n                                />\n                              </Field>\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Available Balance`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.availableBalance.toFixed(6)}\n                                />\n                              </Field>\n                              <Flex\n                                mb={2}\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                                borderTop={'1px solid transparent'}\n                              >\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  {\n                                    this.state.claimedTokens && (\n                                      <Text\n                                        mb={2}\n                                        fontSize={2}\n                                        fontWeight={3}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >\n                                        You have successfully claimed {this.state.claimedTokens.toFixed(4)} {this.state.tokenConfig.token}\n                                      </Text>\n                                    )\n                                  }\n                                  {\n                                    contractInfo.availableBalance && contractInfo.availableBalance.gt(0.00000001) ? (\n                                      <ExecuteTransaction\n                                        params={[]}\n                                        {...this.props}\n                                        Component={Button}\n                                        componentProps={{\n                                          size:'medium',\n                                          value:'Claim',\n                                          mainColor:'redeem',\n                                        }}\n                                        methodName={'claim'}\n                                        action={this.state.action}\n                                        callback={this.claimCallback.bind(this)}\n                                        contractName={contractInfo.contractName}\n                                      />\n                                    ) : (\n                                      <Text\n                                        mb={2}\n                                        fontSize={2}\n                                        fontWeight={3}\n                                        color={'cellText'}\n                                      >\n                                        No balance available.\n                                      </Text>\n                                    )\n                                  }\n                                </Flex>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                {this.functionsUtil.shortenHash(contractInfo.owner)} - {this.functionsUtil.shortenHash(contractInfo.recipient)} - {contractInfo.vestingPeriod} \n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'ZoomIn'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    );\n                  })\n                : (\n                  <Text\n                    textAlign={'center'}\n                  >\n                    You can't claim from any contract yet.\n                  </Text>\n                )\n            }\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default DeployB2BVesting;\n","import Staking from '../Staking/Staking';\nimport IDLE from '../contracts/IDLE.json';\nimport WETH from '../abis/tokens/WETH.json';\nimport ERC20 from '../contracts/ERC20.json';\nimport COMP from '../abis/compound/COMP.json';\nimport aToken from '../abis/aave/AToken.json';\nimport TokenSwap from '../TokenSwap/TokenSwap';\nimport yDAIv3 from '../abis/iearn/yDAIv3.json';\nimport LpStaking from '../LpStaking/LpStaking';\nimport stkIDLE from '../contracts/stkIDLE.json';\nimport yUSDCv3 from '../abis/iearn/yUSDCv3.json';\nimport yUSDTv3 from '../abis/iearn/yUSDTv3.json';\nimport ySUSDv3 from '../abis/iearn/ySUSDv3.json';\nimport yTUSDv3 from '../abis/iearn/yTUSDv3.json';\nimport Timelock from '../contracts/Timelock.json';\nimport CurveZap from '../abis/curve/CurveZap.json';\nimport CovToken from '../abis/cover/CovToken.json';\nimport B2BVester from '../contracts/B2BVester.json';\nimport IdleStaking from '../IdleStaking/IdleStaking';\n// import CurveSwap from '../abis/curve/CurveSwap.json';\nimport CurvePool from '../abis/curve/CurvePool.json';\nimport NexusMutual from '../NexusMutual/NexusMutual';\nimport CoverMint from '../abis/cover/CoverMint.json';\nimport LockedIDLE from '../contracts/LockedIDLE.json';\nimport LpStakingAbi from '../contracts/LpStaking.json';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TokenWrapper from '../TokenWrapper/TokenWrapper';\nimport PriceOracle from '../contracts/PriceOracle.json';\nimport FeeTreasury from '../contracts/FeeTreasury.json';\nimport IdleTokenV2 from '../contracts/IdleTokenV2.json';\nimport StrategyPage from '../StrategyPage/StrategyPage';\nimport BuyModal from '../utilities/components/BuyModal';\nimport IdleTokenV3 from '../contracts/IdleTokenV3.json';\nimport IdleTokenV4 from '../contracts/IdleTokenV4.json';\nimport BatchDeposit from '../BatchDeposit/BatchDeposit';\nimport EarlyRewards from '../contracts/EarlyRewards.json';\nimport CoverProtocol from '../CoverProtocol/CoverProtocol';\nimport CurveDeposit from '../abis/curve/CurveDeposit.json';\nimport VesterFactory from '../contracts/VesterFactory.json';\nimport GovernorAlpha from '../contracts/GovernorAlpha.json';\nimport EcosystemFund from '../contracts/EcosystemFund.json';\nimport Comptroller from '../abis/compound/Comptroller.json';\nimport erc20Forwarder from '../contracts/erc20Forwarder.json';\nimport BalancerPool from '../abis/balancer/BalancerPool.json';\nimport IdleController from '../contracts/IdleController.json';\nimport TokenMigration from '../TokenMigration/TokenMigration';\nimport BatchMigration from '../BatchMigration/BatchMigration';\nimport IdleBatchedMint from '../contracts/IdleBatchedMint.json';\nimport { RampInstantSDK } from '@ramp-network/ramp-instant-sdk';\nimport IdleProxyMinter from '../contracts/IdleProxyMinter.json';\nimport IdleRebalancerV3 from '../contracts/IdleRebalancerV3.json';\nimport LiquidityGaugeV2 from '../abis/curve/LiquidityGaugeV2.json';\nimport DeployB2BVesting from '../DeployB2BVesting/DeployB2BVesting';\nimport SushiV2Router02 from '../abis/sushiswap/SushiV2Router02.json';\nimport IdleBatchConverter from '../contracts/IdleBatchConverter.json';\nimport UniswapV2Router02 from '../abis/uniswap/UniswapV2Router02.json';\nimport IdleDepositForwarder from '../contracts/IdleDepositForwarder.json';\nimport SushiLiquidityPool from '../abis/sushiswap/SushiLiquidityPool.json';\nimport NexusMutualIncidents from '../abis/nexus/NexusMutualIncidents.json';\nimport StakingFeeDistributor from '../contracts/StakingFeeDistributor.json';\nimport NexusMutualDistributor from '../abis/nexus/NexusMutualDistributor.json';\nimport BalancerExchangeProxy from '../abis/balancer/BalancerExchangeProxy.json';\nimport IdleConverterPersonalSignV4 from '../contracts/IdleConverterPersonalSignV4.json';\nimport MinimalInitializableProxyFactory from '../contracts/MinimalInitializableProxyFactory.json';\n\nconst env = process.env;\n\nconst globalConfigs = {\n  appName: 'Idle',\n  version: 'v5.9',\n  baseToken: 'ETH',\n  baseURL: 'https://idle.finance',\n  forumURL:'https://gov.idle.finance',\n  theme:{\n    darkModeEnabled:true\n  },\n  betaURL: 'https://beta.idle.finance',\n  countries:{\n    'USA':'United States of America',\n    'GBR':'United Kingdom',\n    'AUS':'Australia',\n    'BRA':'Brazil',\n    'CHN':'China',\n    'CAN':'Canada',\n    'EUR':'Europe',\n    'HKG':'Hong Kong',\n    'IND':'India',\n    'MEX':'Mexico',\n    'RUS':'Russia',\n    'ZAF':'South Africa',\n    'KOR':'South Korea'\n  },\n  logs:{ // Enable logs levels\n    errorsEnabled:false,\n    messagesEnabled:false,\n  },\n  connectors:{ // Connectors props\n    metamask:{\n      enabled:true,\n      subcaption:'Browser extension'\n    },\n    opera:{\n      enabled:true,\n      subcaption:'Opera injected wallet'\n    },\n    dapper:{\n      enabled:true,\n      icon:'dapper.png',\n      subcaption:'Browser extension',\n    },\n    coinbase:{\n      enabled:true,\n      icon:'coinbase.png',\n      subcaption:'Connect with Coinbase wallet'\n    },\n    trustwallet:{\n      enabled:true,\n      subcaption:'Connect with Trust Wallet'\n    },\n    walletconnect:{\n      enabled:true,\n      iconModal:'walletconnect.png',\n      subcaption:'Connect with QR code'\n    },\n    walletlink:{\n      enabled:true,\n      icon:'coinbase.png',\n      name:'Coinbase Wallet',\n      subcaption:'Connect with QR code'\n    },\n    gnosis:{\n      enabled:true,\n      // icon:'coinbase.png',\n      name:'Gnosis Safe App',\n      subcaption:'Connect with Gnosis Safe App'\n    },\n    fortmatic:{\n      enabled:true,\n      subcaption:'Login with phone-number'\n    },\n    portis:{\n      enabled:true,\n      subcaption:'Login with e-mail'\n    },\n    authereum:{\n      enabled:true,\n      subcaption:'Cross-device wallet'\n    },\n    torus:{\n      enabled:true,\n      icon:'torus.png',\n      subcaption:'One-Click login for Web 3.0'\n    },\n    trezor:{\n      enabled:true,\n      subcaption:'Hardware wallet'\n    },\n    ledger:{\n      enabled:true,\n      subcaption:'Hardware wallet'\n    },\n    custom:{\n      enabled:true,\n      subcaption:'Custom address'\n    }\n  },\n  newsletterSubscription:{\n    endpoint:'https://dev.lapisgroup.it/idle/newsletter.php'\n  },\n  messages:{\n    scoreShort:'Protocol Risk Score',\n    apyShort:'Annual Percentage Yield',\n    tokenPrice:'The token price is calculated using Uniswap spot prices.',\n    cheapRedeem:'Amount of unlent funds available for low gas fees redeem',\n    curveBonusSlippage:'Slippage or bonus depending on if the coin is low or high in the Curve Pool',\n    distributionSpeed:'The distribution indicates the amount of tokens distributed for the entire pool.',\n    directMint:'Pay an additional gas fee to rebalance the pool and help all users gain an additional APR',\n    performanceFee:'This fee is charged on positive returns generated by Idle including accrued gov tokens except IDLE',\n    userDistributionSpeed:'The distribution indicates the amount of tokens distributed for your account based on your current pool share.',\n    govTokenApr:'Governance Token APR is calculated using the spot price from Uniswap and the current distribution speed for the specific pool.',\n    govTokenRedeemableBalance:'The redeemable balance is re-calculated on every interaction with the smart-contract so, the shown balance may be lower than the real one.',\n    riskScoreShort:'It\\'s a single, consistently, comparable value for measuring protocol risk, based on factors including smart contract risk, collateralization and liquidity.',\n    redeemSkipGov:'This feature allows you to save some gas by skipping the redeem of all or some of your accrued governance tokens, the skipped governance tokens will be given away to the entire pool',\n    batchDepositExecutionSchedule:'Batches are executed twice a week, usually on Sunday and Wednesday, and only when the pool size reaches at least 20,000$. The time of each execution will vary depending on the gas price of the Ethereum network.',\n    apyLong:'APY is based on (I) the current yield advertised by the underlying protocol, (II) the current distribution rate of governance tokens provided by underlying lending protocols (III) the current estimated price of governance tokens from Uniswap spot prices. (IV) IDLE token distribution is referred to the entire pool.',\n    yieldFarming:'Strategies in Idle now will be able to support and distribute a vast range of yield opportunities across multiple protocols. Users will be able to receive their equivalent share of governance token that the protocol is receiving while allocating liquidity to yield farming opportunities. <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://idlefinance.medium.com/idle-yield-farming-upgrade-18e4bc483c8f\">Read more here</a>.',\n    riskScore:`It's a single, consistently, comparable value for measuring protocol risk, based on factors including smart contract risk, collateralization and liquidity.<br /><br />The model outputs a 0-10 score, where <strong>0 is the most risky and 10 is the most safe.</strong> Visit <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://defiscore.io/overview\">https://defiscore.io/overview</a> for further information.`,\n    curveInstructions:`<strong>Depositing into the pool:</strong><br />By depositing your funds into the Curve Pool you may incur in slippage or bonus depending on if the coin is low or high in the pool.<br /><br /><strong>Withdrawing share from the pool:</strong><br />When you redeem your tokens previously deposited in the Curve Pool you get back an uneven amounts of tokens, that can give slippage or bonus depending on if the coin is low or high in the pool.`\n  },\n  analytics:{\n    google:{\n      events:{\n        enabled:true, // Enable Google Analytics events\n        debugEnabled:false, // Enable sending for test environments\n        addPostfixForTestnet:true // Append testnet to eventCategory\n      },\n      pageView:{\n        enabled:true\n      }\n    }\n  },\n  modals:{ // Enable modals\n    first_deposit_referral:false, // Referral share modal\n    first_deposit_share:true, // First deposit share modal\n    migrate:{\n      enabled:true\n    },\n    welcome:{ // Welcome modal\n      enabled:true,\n      frequency:604800 // One week\n    }\n  },\n  dashboard:{\n    baseRoute:'/dashboard',\n    theme:{\n      mode:'light',\n      darkModeEnabled:true\n    },\n  },\n  governance:{\n    test:false,\n    enabled:true,\n    startBlock:11333729,\n    baseRoute:'/governance',\n    props:{\n      tokenName:'IDLE',\n      availableContracts:{\n        IDLE,\n        FeeTreasury,\n        PriceOracle,\n        GovernorAlpha,\n        EcosystemFund,\n        IdleController\n      }\n    },\n    proposals:{\n      7:{\n        description:`Upgrade of IdleTokenGovernance contract to include the following changes:<br />\n        <ul>\n          <li>support for EIP 3165 flashLoans (fee is set to 0.08% of the flash loaned amount redistributed to LP)</li>\n          <li>support for stkAAVE distribution</li>\n          <li>support for new cWBCT distribution</li>\n          <li>other minor updates for gas and redeems</li>\n        </ul>\n        See more in the gov forum post: <a class=\"link\" href=\"https://gov.idle.finance/t/iip-7-idletoken-upgrade-stkaave-distribution/466\">https://gov.idle.finance/t/iip-7-idletoken-upgrade-stkaave-distribution/466</a>`\n      }\n    },\n    contracts:{\n      delegates:'IDLE',\n      governance:'GovernorAlpha',\n    }\n  },\n  curve:{\n    enabled:false,\n    params:{\n      n_coins:3,\n      label:'Curve',\n      route:'/dashboard/curve',\n      image:'images/protocols/curve.svg',\n      imageInactive:'images/protocols/curve-off.svg',\n    },\n    rates:{\n      path:['apy','day','idle'],\n      endpoint:'https://www.curve.fi/raw-stats/apys.json'\n    },\n    poolContract:{\n      decimals:18,\n      abi:CurvePool,\n      name:'idleDAI+idleUSDC+idleUSDT',\n      token:'idleDAI+idleUSDC+idleUSDT',\n      address:'0x09f4b84a87fc81fc84220fd7287b613b8a9d4c05'\n    },\n    depositContract:{\n      abi:CurveDeposit,\n      name:'idleCurveDeposit',\n      address:'0x83f252f036761a1e3d10daca8e16d7b21e3744d7'\n    },\n    gaugeContract:{\n      abi:LiquidityGaugeV2,\n      name:'LiquidityGaugeV2',\n      address:'0xd69ac8d9D25e99446171B5D0B3E4234dAd294890'\n    },\n    zapContract:{\n      abi:CurveZap,\n      name:'idleCurveZap',\n      address:'0x456974df1042ba7a46fd49512a8778ac3b840a21'\n    },\n    migrationContract:{\n      abi:CurveDeposit,\n      name:'idleCurveDeposit',\n      address:'0x83f252f036761a1e3d10daca8e16d7b21e3744d7',\n      functions:[\n        {\n          label:'Deposit',\n          name:'add_liquidity'\n        },\n      ]\n    },\n    availableTokens:{\n      idleDAIYield:{\n        decimals:18,\n        enabled:true,\n        baseToken:'DAI',\n        token:'idleDAIYield',\n        address:'0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        migrationParams:{\n          n_coins:3,\n          coinIndex:0\n        },\n      },\n      idleUSDCYield:{\n        decimals:18,\n        enabled:true,\n        baseToken:'USDC',\n        token:'idleUSDCYield',\n        address:'0x5274891bEC421B39D23760c04A6755eCB444797C',\n        migrationParams:{\n          n_coins:3,\n          coinIndex:1\n        },\n      },\n      idleUSDTYield:{\n        decimals:18,\n        enabled:true,\n        baseToken:'USDT',\n        token:'idleUSDTYield',\n        address:'0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        migrationParams:{\n          n_coins:3,\n          coinIndex:2\n        },\n      },\n    }\n  },\n  permit:{\n    DAI:{\n      version:1,\n      EIPVersion:null,\n      nonceMethod:'nonces',\n      name:'Dai Stablecoin',\n      type:[\n        { name: \"holder\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"expiry\", type: \"uint256\" },\n        { name: \"allowed\", type: \"bool\" },\n      ]\n    },\n    USDC:{\n      version:2,\n      name:'USD Coin',\n      EIPVersion:2612,\n      nonceMethod:'nonces',\n      type:[\n        { name: \"owner\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"value\", type: \"uint256\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"deadline\", type: \"uint256\" },\n      ]\n    },\n    SLP:{\n      version:1,\n      EIPVersion:2612,\n      nonceMethod:'nonces',\n      name:'SushiSwap LP Token',\n      type:[\n        { name: \"owner\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"value\", type: \"uint256\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"deadline\", type: \"uint256\" },\n      ]\n    }\n  },\n  govTokens:{\n    IDLE:{\n      abi:IDLE,\n      decimals:18,\n      token:'IDLE',\n      enabled:true,\n      showAUM:false, // Include IDLE balance in AUM\n      showAPR:false, // Include IDLE Apr\n      protocol:'idle',\n      showPrice:false, // Show price in Yield Farming section\n      showBalance:false, // Include IDLE balance in Portfolio Donut\n      aprTooltipMode:false,\n      distributionMode:'block',\n      distributionFrequency:'day', // Multiply distribution per block\n      color:'hsl(162, 100%, 41%)',\n      icon:'images/tokens/IDLE.png',\n      disabledTokens:['idleRAIYield'], // Disable IDLE distribution for idleToken\n      address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e' // MAIN\n      // address:'0xAB6Bdb5CCF38ECDa7A92d04E86f7c53Eb72833dF', // KOVAN\n      // address:'0xa85233C63b9Ee964Add6F2cffe00Fd84eb32338f' // Fork\n    },\n    COMP:{\n      abi:COMP,\n      decimals:18,\n      token:'COMP',\n      enabled:true,\n      showAUM:true, // Include IDLE balance in AUM\n      showAPR:true, // Include COMP Apr\n      showPrice:true,\n      showBalance:true, // Include COMP balance in Portfolio Donut\n      disabledTokens:[],\n      protocol:'compound',\n      aprTooltipMode:false,\n      distributionMode:'block',\n      distributionFrequency:'day',\n      color:'hsl(162, 100%, 41%)',\n      address:'0xc00e94cb662c3520282e6f5717214004a7f26888', // MAIN\n      // address:'0x61460874a7196d6a22d1ee4922473664b3e95270' // KOVAN\n    },\n    stkAAVE:{\n      abi:aToken,\n      decimals:18,\n      showAUM:true, // Include stkAAVE balance in AUM\n      showAPR:true, // Include stkAAVE Apr\n      enabled:true,\n      showPrice:true,\n      token:'stkAAVE',\n      showBalance:true, // Include stkAAVE balance in Portfolio Donut\n      protocol:'aavev2',\n      aprTooltipMode:false,\n      distributionMode:'second',\n      color:'hsl(314, 41%, 51%)',\n      distributionFrequency:'day',\n      address:'0x4da27a545c0c5b758a6ba100e3a049001de870f5', // MAIN\n      addressForPrice:'0x7Fc66500c84A76Ad7e9c93437bFc5Ac33E2DDaE9', // MAIN\n      disabledTokens:['idleTUSDYield','idleSUSDYield','idleRAIYield']\n    }\n  },\n  contracts:{\n    ProxyFactory:{\n      abi:MinimalInitializableProxyFactory,\n      address:'0x91baced76e3e327ba7850ef82a7a8251f6e43fb8'\n    },\n    LockedIDLE:{\n      abi:LockedIDLE,\n      address:'0xF241a0151841AE2E6ea750D50C5794b5EDC31D99'\n    },\n    FeeTreasury:{\n      abi:FeeTreasury,\n      address:'0x69a62c24f16d4914a48919613e8ee330641bcb94' // MAIN\n    },\n    PriceOracle:{\n      abi:PriceOracle,\n      address:'0x972A64d108e250dF98dbeac8170678501f5EF181' // MAIN\n      // address:'0xCab5760688db837Bb453FE1DFBC5eDeE6fa8F0FF' // KOVAN\n    },\n    Timelock:{\n      abi:Timelock,\n      address:'0xD6dABBc2b275114a2366555d6C481EF08FDC2556' // MAIN\n      // address:'0xfD88D7E737a06Aa9c62B950C1cB5eE63DA379AFd' // KOVAN\n    },\n    EcosystemFund:{\n      abi:EcosystemFund,\n      address:'0xb0aA1f98523Ec15932dd5fAAC5d86e57115571C7' // MAIN\n      // address:'0x125d3D6A8e546BD13802c309429CBB4db5737d57' // KOVAN\n    },\n    VesterFactory:{\n      abi:VesterFactory,\n      address:'0xbF875f2C6e4Cc1688dfe4ECf79583193B6089972' // MAIN\n      // address:'0x9b52f91578c8AfA8e2DF07d4D7726bB6b73Ec1FE' // KOVAN\n    },\n    IdleController:{\n      abi:IdleController,\n      address:'0x275DA8e61ea8E02d51EDd8d0DC5c0E62b4CDB0BE' // MAIN\n      // address:'0x8Ad5F0644b17208c81bA5BDBe689c9bcc7143d87' // KOVAN\n    },\n    EarlyRewards:{\n        abi:EarlyRewards,\n        address:'0xa1F71ED24ABA6c8Da8ca8C046bBc9804625d88Fc' // MAIN\n        // address:'0x07A94A60B54c6b2Da19e23D6E9123180Bf92ED40' // KOVAN\n    },\n    GovernorAlpha:{\n      abi:GovernorAlpha,\n      address:'0x2256b25CFC8E35c3135664FD03E77595042fe31B' // MAIN\n      // address:'0x782cB1dbd0bD4df95c2497819be3984EeA5c2c25' // KOVAN\n    },\n    Comptroller:{\n      abi:Comptroller,\n      address:'0x3d9819210a31b4961b30ef54be2aed79b9c9cd3b', // Main\n      // address:'0x5eae89dc1c671724a672ff0630122ee834098657' // Kovan\n    },\n    SushiswapRouter:{\n      abi:SushiV2Router02,\n      address:'0xd9e1cE17f2641f24aE83637ab66a2cca9C378B9F'\n    },\n    UniswapRouter:{\n      abi:UniswapV2Router02,\n      address:'0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D'\n    },\n    BalancerExchangeProxy:{\n      abi:BalancerExchangeProxy,\n      address:'0x3E66B66Fd1d0b02fDa6C811Da9E0547970DB2f21'\n    }\n  },\n  tokens:{\n    DAI:{\n      zeroExInstant:{\n        orderSource: 'https://api.0x.org/sra/',\n        assetData:'0xf47261b00000000000000000000000006b175474e89094c44da98b954eedeac495271d0f',\n        affiliateInfo: {\n            feeRecipient: '0x4215606a720477178AdFCd5A59775C63138711e8',\n            feePercentage: 0.0025\n        },\n      },\n    },\n    USDC:{\n      zeroExInstant:{\n        orderSource: 'https://api.0x.org/sra/',\n        assetData:'0xf47261b0000000000000000000000000a0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        affiliateInfo: {\n            feeRecipient: '0x4215606a720477178AdFCd5A59775C63138711e8',\n            feePercentage: 0.0025\n        },\n      },\n    },\n  },\n  strategies:{\n    best:{\n      token:'DAI',\n      color:'#f32121',\n      comingSoon:false,\n      addGovTokens:true,\n      titlePostfix:null,\n      title:'Best-Yield',\n      iconName:'Whatshot',\n      govTokensEnabled:true,\n      component: StrategyPage,\n      chartColor:'hsl(40,95%,59%)',\n      icon:'images/strategies/best-on.svg',\n      iconInactive:'images/strategies/best-off.svg',\n      iconInactiveDark:'images/strategies/best-white.svg',\n      desc:'Maximize your returns across DeFi protocols',\n      descLong:'The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols. Idle’s monitoring system automatically triggers a rebalance if it spots a better-performing allocation: this includes taking account of the total liquidity within the pool, incorporating underlying protocol rate functions and levels of supply and demand. As a user, you will end up with an higher return without constantly checking rates and burning gas on every transfer. Unlock your funds from a single protocol performance with this strategy.',\n      descShort:'The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols.'\n    },\n    risk:{\n      token:'DAI',\n      color:'#2196F3',\n      comingSoon:false,\n      titlePostfix:null,\n      addGovTokens:true,\n      iconName:'Security',\n      title:'Risk-Adjusted',\n      govTokensEnabled:true,\n      component: StrategyPage,\n      chartColor:'hsl(211,67%,47%)',\n      icon:'images/strategies/risk-on.svg',\n      iconInactive:'images/strategies/risk-off.svg',\n      iconInactiveDark:'images/strategies/risk-white.svg',\n      desc:'Optimize your risk exposure across DeFi protocols',\n      descLong:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level. The risk-management algorithm takes account of the total assets within a pool, incorporates underlying protocol rate functions and levels of supply and demand, skimming protocols with a bad score/rate mix, and finally determining an allocation that achieves the highest risk-return score possible after the rebalance happens.',\n      descShort:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level.'\n    },\n    new:{\n      token:'DAI',\n      color:'#2196F3',\n      comingSoon:true,\n      addGovTokens:true,\n      iconName:'Adjust',\n      title:'Coming Soon',\n      chartColor:'hsl(211,67%,47%)',\n      icon:'images/strategies/solr-on.svg',\n      desc:'More strategies are coming soon!',\n      iconInactive:'images/strategies/solr-off.svg',\n      descLong:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level. The risk-management algorithm takes account of the total assets within a pool, incorporates underlying protocol rate functions and levels of supply and demand, skimming protocols with a bad score/rate mix, and finally determining an allocation that achieves the highest risk-return score possible after the rebalance happens.',\n      descShort:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level.'\n    }\n  },\n  stats:{\n    enabled:true, // Enable endpoint\n    rates:{\n      TTL:300, // 5 minutes\n      endpoint:'https://api.idle.finance/rates/'\n    },\n    tvls:{\n      TTL:120,\n      endpoint:'https://api.idle.finance/tvls/'\n    },\n    substack:{\n      TTL:1800,\n      endpoint:'https://api.idle.finance/substack/'\n    },\n    scores:{\n      TTL:300, // 5 minutes\n      endpoint:'https://api.idle.finance/scores/'\n    },\n    config:{\n      headers: env.REACT_APP_IDLE_KEY ? { Authorization: `Bearer ${env.REACT_APP_IDLE_KEY}` } : {}\n    },\n    versions:{\n      /*\n      v2:{\n        label:'Idle V2',\n        startTimestamp:null,\n        additionalProtocols:[],\n        endTimestamp:1589752999,\n        enabledStrategies:['best'],\n        showPerformanceTooltip:false,\n        enabledTokens:['DAI','USDC'],\n      },\n      */\n      v3:{\n        label:'Idle V3',\n        additionalProtocols:[],\n        endTimestamp:1597237542,\n        startTimestamp:1589801874,\n        showPerformanceTooltip:false,\n        strategiesParams:{\n          risk:{\n            endTimestamp:1597233922,\n          }\n        },\n        enabledStrategies:['best','risk'],\n        enabledTokens:['DAI','USDC','USDT','TUSD','SUSD','WBTC'],\n      },\n      v4:{\n        label:'Idle V4',\n        endTimestamp:null,\n        startTimestamp:1597442400, // 1598220000\n        enabledStrategies:['best','risk'],\n        showPerformanceTooltip:true,\n        strategiesParams:{\n          risk:{\n            startTimestamp:1599183170,\n          }\n        },\n        enabledTokens:['DAI','USDC','USDT','TUSD','SUSD','WBTC','WETH','RAI'],\n        additionalProtocols:[\n          {\n            decimals:16,\n            protocol:'compound',\n            name:'compoundWithCOMP',\n            enabledTokens:['DAI','USDC','USDT','TUSD','SUSD','WBTC','WETH'],\n          },\n          {\n            decimals:18,\n            protocol:'aavev2',\n            name:'aavev2WithStkAAVE',\n            enabledTokens:['DAI','USDC','USDT','TUSD','SUSD','WBTC','WETH'],\n          }\n        ]\n      }\n    },\n    tokens:{\n      DAI:{\n        decimals:18,\n        enabled:true,\n        color:{\n          rgb:[250,184,51],\n          hex:'#F7B24A',\n          hsl:['40', '95%', '59%']\n        },\n        chart:{\n          labelTextColorModifiers:['darker', 2]\n        },\n        startTimestamp:'2020-02-11',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      USD:{\n        enabled:true,\n        color:{\n          hex:'#85bb65',\n          rgb:[133, 187, 101],\n          hsl:['98', '39%', '56%']\n        },\n        chart:{\n          labelTextColorModifiers:['brighter', 2]\n        },\n        address:null,\n        startTimestamp:'2020-02-04',\n      },\n      USDC:{\n        decimals:6,\n        enabled:true,\n        color:{\n          hex:'#2875C8',\n          rgb:[40,117,200],\n          hsl:['211', '67%', '47%']\n        },\n        chart:{\n          labelTextColorModifiers:['brighter', 2]\n        },\n        startTimestamp:'2020-02-04',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      USDT:{\n        decimals:6,\n        enabled:true,\n        color:{\n          hex:'#22a079',\n          rgb:[34, 160, 121],\n          hsl:['161', '65%', '38%']\n        },\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        startTimestamp:'2020-02-04',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      TUSD:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'0340a1',\n          rgb:[3, 64, 161],\n          hsl:['217', '96%', '32%']\n        },\n        chart:{\n          labelTextColorModifiers:['brighter', 5]\n        },\n        startTimestamp:'2020-06-22',\n        address:'0x0000000000085d4780b73119b644ae5ecd22b376',\n      },\n      SUSD:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#1e1a31',\n          rgb:[30, 26, 49],\n          hsl:['250', '31%', '15%']\n        },\n        chart:{\n          labelTextColorModifiers:['brighter', 5]\n        },\n        startTimestamp:'2020-06-22',\n        address:'0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n      },\n      WBTC:{\n        decimals:8,\n        enabled:true,\n        color:{\n          hex:'#eb9444',\n          rgb:[235, 148, 68],\n          hsl:['29', '81%', '59%']\n        },\n        startTimestamp:'2020-06-15',\n        conversionRateField:'wbtcDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4],\n        },\n        address:'0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      WETH:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#ee1f79',\n          rgb:[238, 31, 121],\n          hsl:['334', '86%', '53%']\n        },\n        startTimestamp:'2021-02-16',\n        conversionRateField:'wethDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4],\n        },\n        address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      COMP:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#00d395',\n          rgb:[0, 211, 149],\n          hsl:['162', '100%', '41%']\n        },\n        startTimestamp:'2020-06-15',\n        conversionRateField:'compDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        address:'0xc00e94cb662c3520282e6f5717214004a7f26888',\n      },\n      stkAAVE:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#B6509E',\n          rgb:[182, 80, 158],\n          hsl:['314', '41%', '51%']\n        },\n        startTimestamp:'2021-04-30',\n        conversionRateField:'compDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        address:'0x4da27a545c0c5b758a6ba100e3a049001de870f5',\n      },\n      IDLE:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#0d55bb',\n          rgb:[13, 85, 187],\n          hsl:['215', '87%', '39%']\n        },\n        startTimestamp:'2020-11-10',\n        icon:'images/tokens/IDLE.png',\n        conversionRateField:'idleDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e',\n      },\n      RAI:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#378879',\n          rgb:[55, 136, 121],\n          hsl:['169', '42%', '37%']\n        },\n        startTimestamp:'2021-05-25',\n        icon:'images/tokens/RAI.png',\n        conversionRateField:'raiDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        address:'0x03ab458634910aad20ef5f1c8ee96f1d6ac54919',\n      },\n      'idleDAI+idleUSDC+idleUSDT':{\n        decimals:18,\n        enabled:false,\n        name:'Curve.fi',\n        color:{\n          hex:'#ff0000',\n          rgb:[255, 0, 0],\n          hsl:['0', '100%', '50%']\n        },\n        startTimestamp:'2020-06-15',\n      },\n    },\n    protocols:{\n      compound:{\n        legend:true,\n        enabled:true,\n        label:'Compound',\n        color:{\n          rgb:[0, 209, 146],\n          hsl:['162', '100%', '41%']\n        }\n      },\n      aavev2WithStkAAVE:{\n        enabled:true,\n        label:'Aave V2 + stkAAVE',\n        startTimestamp:'2021-05-08 14:30:00',\n        // tokensProps:{\n        //   WETH:{\n        //     startTimestamp:'2021-05-19 12:20:00',\n        //   }\n        // },\n        color:{\n          hex:'#B6509E',\n          rgb:[182, 80, 158],\n          hsl:['314', '41%', '51%']\n        },\n        rateField:['rate','aaveAdditionalAPR']\n      },\n      compoundWithCOMP:{\n        enabled:true,\n        label:'Compound + COMP',\n        color:{\n          rgb:[0, 153, 107],\n          hsl:['162', '100%', '30%']\n        },\n        rateField:['rate','compoundAdditionalAPR']\n      },\n      fulcrum:{\n        legend:false,\n        enabled:false,\n        label:'Fulcrum',\n        color:{\n          rgb:[2, 138, 192],\n          hsl:['197', '98%', '38%']\n        }\n      },\n      dsr:{\n        label:'DSR',\n        enabled:false,\n        icon:'CHAI.png',\n        color:{\n          rgb:[222, 52, 67],\n          hsl:['355', '72%', '54%']\n        }\n      },\n      dydx:{\n        legend:true,\n        label:'DyDx',\n        enabled:true,\n        color:{\n          rgb:[87, 87, 90],\n          hsl:['240', '2%', '35%']\n        }\n      },\n      iearn:{\n        label:'Yearn',\n        enabled:true,\n      },\n      aave:{\n        label:'Aave V1',\n        legend:true,\n        enabled:true,\n        color:{\n          rgb:[230, 131, 206],\n          hsl:['315', '66%', '71%']\n        }\n      },\n      aavev2:{\n        legend:true,\n        enabled:true,\n        icon:'aave.svg',\n        label:'Aave V2',\n        color:{\n          rgb:[151, 79, 141],\n          hsl:['308', '31%', '45%']\n        }\n      },\n      cream:{\n        legend:true,\n        enabled:true,\n        label:'Cream',\n        icon:'cream.svg',\n        color:{\n          rgb:[105, 226, 220],\n          hsl:['177', '68%', '65%']\n        }\n      },\n      fuse:{\n        legend:true,\n        enabled:true,\n        label:'Fuse',\n        icon:'fuse.png',\n        color:{\n          rgb:[0, 0, 0],\n          hsl:['0', '0%', '0%']\n        }\n      },\n      curve:{\n        label:'',\n        enabled:true,\n        color:{\n          rgb:[0, 55, 255],\n          hsl:['227', '100%', '50%']\n        }\n      },\n      idle:{\n        label:'Idle',\n        enabled:true,\n        color:{\n          rgb:[0, 55, 255],\n          hsl:['227', '100%', '50%']\n        }\n      }\n    }\n  },\n  contract:{\n    methods:{\n      redeem:{\n        skipRebalance:true,\n        metaTransactionsEnabled:false\n      },\n      deposit:{\n        skipMint:true,\n        minAmountForMint:100000,\n        erc20ForwarderEnabled:true,\n        skipMintCheckboxEnabled:true,\n        metaTransactionsEnabled:false,\n        // Proxy contract for Meta Tx or ERC20 Forwarder\n        erc20ForwarderProxyContract:{\n          forwarder:{\n            enabled:true,\n            abi:erc20Forwarder,\n            name:'erc20Forwarder',\n            function:'emitMessage',\n            address:'0x84a0856b038eaAd1cC7E297cF34A7e72685A8693', // Main\n            // address:'0xCB3F801C91DEcaaE9b08b1eDb915F9677D8fdB4A' // Kovan\n          },\n          tokens:{\n            DAI:{\n              enabled:true,\n              permitType:'DAI_Permit',\n              abi:IdleDepositForwarder,\n              function:'permitAndDeposit', // foo\n              name:'IdleDepositForwarderDAI',\n              address:'0xDe3c769cCD1878372864375e9f89956806B86daA', // Main\n              // address:'0x1E32F1E96B9735E5D31a23e12fe8e6D9845a9072', // Kovan\n            },\n            USDC:{\n              enabled:true,\n              permitType:'USDC_Permit',\n              abi:IdleDepositForwarder,\n              name:'IdleDepositForwarderUSDC',\n              function:'permitEIP2612AndDeposit',\n              address:'0x43bD6a78b37b50E3f52CAcec53F1202dbDe6a761', // Main\n              // address:'0x8f9048CFAa27b1A1b77c32a0b87D2DcF5D016cb5', // Kovan\n            },\n          }\n        },\n        proxyContract:{\n          enabled:false,\n          abi:IdleProxyMinter,\n          name:'IdleProxyMinter',\n          function:'mintIdleTokensProxy',\n          address:'0x7C4414aA6B0c6CB1Bc7e5BFb7433138426AC637a',\n        }\n      },\n      migrate:{\n        skipRebalance:true,\n        minAmountForRebalance:10000,\n        minAmountForRebalanceMetaTx:10000\n      },\n      redeemGovTokens:{\n        enabled:true\n      },\n      redeemSkipGov:{\n        enabled:true,\n        disabledTokens:['idleDAISafe','idleUSDCSafe','idleUSDTSafe']\n      },\n      rebalance:{\n        enabled:true,\n        abi:IdleRebalancerV3\n      }\n    }\n  },\n  network:{ // Network configurations\n    availableNetworks:{\n      1:'Mainnet',\n      3:'Ropsten',\n      4:'Rinkeby',\n      42:'Kovan',\n      1337:'Hardhat'\n    },\n    isForked:false, // If TRUE the tx confirmation callback is fired on the receipt\n    requiredNetwork:1, // { 1: Mainnet, 3: Ropsten, 42: Kovan }\n    blocksPerYear:2371428,\n    secondsPerYear:31536000,\n    firstBlockNumber:8119247,\n    requiredConfirmations: 1,\n    enabledNetworks:[1,42,1337],\n    accountBalanceMinimum: 0, // in ETH for gas fees\n    providers:{\n      infura:{\n        42: 'https://kovan.infura.io/v3/',\n        1: 'https://mainnet.infura.io/v3/',\n        1337: 'https://mainnet.infura.io/v3/'\n      },\n      ens:{\n        enabled:true,\n        supportedNetworks:[1]\n      },\n      nexus:{\n        endpoints:{\n          1:'https://api.nexusmutual.io/v1/',\n          42:'https://api.staging.nexusmutual.io/v1/',\n        }\n      },\n      etherscan:{\n        enabled:true, // False for empty txs list (try new wallet)\n        keys:[\n          env.REACT_APP_ETHERSCAN_KEY,\n          env.REACT_APP_ETHERSCAN_KEY2,\n          env.REACT_APP_ETHERSCAN_KEY3,\n          env.REACT_APP_ETHERSCAN_KEY4\n        ],\n        endpoints:{\n          1: 'https://api.etherscan.io/api',\n          1337: 'https://api.etherscan.io/api',\n          42: 'https://api-kovan.etherscan.io/api'\n        },\n        baseUrl:{\n          1: 'https://etherscan.io',\n          1337: 'https://etherscan.io',\n          42: 'https://kovan.etherscan.io',\n        }\n      },\n      snapshot:{\n        whitelist:[\n          '0x9993ADB62085AcB05Fc493f7A1D10C11227A78fa',\n          '0xf12ce5807e3d3128B876aa1Cec0632D63547E22E'\n        ],\n        endpoints:{\n          proposals:'https://hub.snapshot.page/api/idlefinance.eth/proposals'\n        },\n        urls:{\n          proposals:'https://signal.idle.finance/#/idlefinance.eth/proposal/'\n        }\n      },\n      biconomy:{\n        enabled:false,\n        enableLogin:false,\n        supportedNetworks:[1,42],\n        disabledWallets:['authereum'],\n        endpoints:{\n          limits:'https://api.biconomy.io/api/v1/dapp/checkLimits'\n        },\n        params:{\n          debug: false,\n          apiKey: env.REACT_APP_BICONOMY_KEY, // Mainnet\n          dappId: env.REACT_APP_BICONOMY_APPID,\n          apiId: '36572ec9-ae5c-4c4a-9530-f3ae7c7ac829',\n          // apiKey: env.REACT_APP_BICONOMY_KEY_KOVAN, // Kovan\n        }\n      },\n      simpleID:{\n        enabled:false,\n        supportedNetworks:[1],\n        getNetwork:(networkId,availableNetworks) => {\n          let networkName = null;\n          switch (networkId){\n            case 1:\n              networkName = 'mainnet';\n            break;\n            default:\n              networkName = availableNetworks[networkId] ? availableNetworks[networkId].toLowerCase() : 'mainnet';\n            break;\n          }\n          return networkName;\n        },\n        params:{\n          appOrigin: window.location.origin,\n          appName: \"Idle\",\n          appId: \"eb4d1754-a76e-4c58-8422-54b5ca2395e7\",\n          renderNotifications: false,\n          network: 'mainnet'\n        }\n      }\n    }\n  },\n  notifications:[\n    {\n      enabled:false,\n      end:1612282726374,\n      start:1611677841027,\n      date:'Jan 26, 2021 16:18 UTC',\n      title:'Cover Protocol Available',\n      hash:'/dashboard/tools/cover-protocol',\n      image:'/images/protocols/cover-logo.svg',\n      text:'Protect your portfolio with Cover Protocol',\n    }\n  ],\n  tools:{\n    stake:{\n      enabled:true,\n      icon:'Layers',\n      label:'Staking',\n      route:'staking',\n      subComponent:Staking,\n      desc:'Stake your IDLE / Sushi Swap LP tokens and earn $IDLE rewards',\n      props:{\n        availableTokens:{\n          IDLE:{\n            component:IdleStaking,\n            contract:{\n              abi:stkIDLE,\n              decimals:18,\n              name:'stkIDLE',\n              fromBlock:12561464,\n              rewardToken:'IDLE',\n              address:'0xaac13a116ea7016689993193fce4badc8038136f' // Mainnet\n            },\n            feeDistributor:{\n              fromBlock:12649361,\n              abi:StakingFeeDistributor,\n              name:'StakingFeeDistributor',\n              address:'0xbabb82456c013fd7e3f25857e0729de8207f80e2' // Mainnet\n            },\n            abi:IDLE,\n            name:'IDLE',\n            token:'IDLE',\n            decimals:18,\n            enabled:true,\n            label:'IDLE Token',\n            icon:'images/tokens/IDLE.png',\n            address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e', // Mainnet\n            poolLink:'https://etherscan.com/address/0x875773784Af8135eA0ef43b5a374AaD105c5D39e',\n          },\n          SLP:{\n            component:LpStaking,\n            contract:{\n              decimals:24,\n              name:'LpStaking',\n              maxMultiplier:3,\n              abi:LpStakingAbi,\n              maxBonusDays:120,\n              rewardToken:'IDLE',\n              address:'0xcc0b9f7ed0e6bc7c2e69dbd247e8420f29aeb48d' // Mainnet\n            },\n            name:'SLP',\n            token:'SLP',\n            decimals:18,\n            enabled:true,\n            abi:SushiLiquidityPool,\n            label:'SushiSwap IDLE/ETH LP Token',\n            icon:'images/protocols/sushiswap.png',\n            address:'0xa7f11e026a0af768d285360a855f2bded3047530', // Mainnet\n            poolLink:'https://analytics.sushi.com/pairs/0xa7f11e026a0af768d285360a855f2bded3047530',\n          }\n        }\n      }\n    },\n    b2bVesting:{\n      enabled:true,\n      visible:true,\n      icon:'CloudUpload',\n      label:'B2B Vesting',\n      route:'b2b-vesting-contract',\n      subComponent:DeployB2BVesting,\n      desc:'Deploy/Deposit/Claim for B2B Vesting Contracts<br /><small style=\"color:#ff9900\">(only for partners that joined the B2B Affiliate program)</small>',\n      props:{\n        contracts:{\n          vesterImplementation:{\n            abi:B2BVester,\n            address:'0x3024656ae91d7bf724f613c314bc56030ba2344c'\n          }\n        }\n      }\n    },\n    ethWrapper:{\n      enabled:true,\n      label:'ETH Wrapper',\n      route:'eth-wrapper',\n      subComponent:TokenWrapper,\n      image:'images/tokens/WETH.svg',\n      desc:'Wrap your ETH and get WETH. Unwrap your WETH and get back ETH.',\n      props:{\n        startContract:{\n          name:'ETH',\n          token:'ETH',\n          decimals:18,\n          wrapMethod:'deposit',\n        },\n        destContract:{\n          abi:WETH,\n          name:'WETH',\n          decimals:18,\n          token:'WETH',\n          unwrapMethod:'withdraw',\n          address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2'\n        },\n      }\n    },\n    coverProtocol:{\n      enabled:false,\n      label:'Cover Protocol',\n      route:'cover-protocol',\n      subComponent:CoverProtocol,\n      image:'images/protocols/cover-logo.svg',\n      desc:'Get your Idle Portfolio covered against Smart Contract risk',\n      fileClaimUrl:'https://app.coverprotocol.com/app/claims/new?protocol=IDLE',\n      props:{\n        contract:{\n          decimals:18,\n          abi:CoverMint,\n          name:'CoverMint',\n          address:'0x46f2f34742c1d9b9b220aabf0ff26bf59ec9f8a0'\n        },\n        coverages:[\n          {\n            collateral:'DAI',\n            expirationTimestamp:1714470400,\n            tokens:{\n              Claim:{\n                abi:CovToken,\n                name:'COVER_IDLE_2021_02_28_DAI_0_CLAIM',\n                address:'0xa7dac6774e5e40f56a0bf06af6cf9b1f3d037bcc',\n                balancerPool:{\n                  decimals:18,\n                  abi:BalancerPool,\n                  name:'BAL_COVER_IDLE_2021_02_28_DAI_0_CLAIM',\n                  address:'0xeb2b9959c7943eb3c0bdb69ede25247bab4d1c6c',\n                }\n              },\n              NoClaim:{\n                abi:CovToken,\n                name:'COVER_IDLE_2021_02_28_DAI_0_NOCLAIM',\n                address:'0x53df0bfa014b7522299c129c5a7b318f02adb469',\n                balancerPool:{\n                  decimals:18,\n                  abi:BalancerPool,\n                  name:'BAL_COVER_IDLE_2021_02_28_DAI_0_NOCLAIM',\n                  address:'0xce0e9e7a1163badb7ee79cfe96b5148e178cab73',\n                }\n              }\n            }\n          },\n        ],\n      }\n    },\n    batchDeposit:{\n      enabled:true,\n      icon:'Storage',\n      claimEnabled:true,\n      depositEnabled:true,\n      route:'batch-deposit',\n      label:'Batch Deposit',\n      subComponent:BatchDeposit,\n      desc:'Deposit your tokens in the batch and wait until its execution to claim your Idle Tokens V4',\n      props:{\n        availableTokens:{\n          idleDAIYield:{\n            decimals:18,\n            strategy:'best',\n            baseToken:'DAI',\n            minPoolSize:20000,\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintDAI',\n              address:'0x633fb4d38B24dC890b11Db2AE2B248D13F996A79', // Main\n              // address:'0x1B7bA0361A15CCF62521cF7d2Cbb2Ba90b1521a7', // Kovan\n              functions:[\n                {\n                  name:'deposit',\n                  usePermit:true,\n                  label:'Deposit',\n                  permitName:'permitAndDeposit'\n                },\n              ]\n            },\n          },\n          idleUSDCYield:{\n            decimals:6,\n            strategy:'best',\n            baseToken:'USDC',\n            minPoolSize:20000,\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintUSDC',\n              address:'0x562C4fd96F0652F5Fcfa96b0a33088B5a6eAeE9B', // Main\n              // address:'0x3F35eB839f91b614195a47A593dB46b14cd7EaF8', // Kovan\n              functions:[\n                {\n                  name:'deposit',\n                  label:'Deposit',\n                  usePermit:true,\n                  permitName:'permitEIP2612AndDepositUnlimited'\n                },\n              ]\n            },\n          },\n          /*\n          idleUSDTYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'USDT',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintUSDT',\n              address:'0xee5c50c7c49dec47dde2f9b0233b9e14a8f00cf2',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleSUSDYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'SUSD',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintSUSD',\n              address:'0xE2eE519399a49f1A2004a25DA61e82867A69b9b1',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleTUSDYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'TUSD',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintTUSD',\n              address:'0x174a273f0ea28e55b6dd13259aa43d262b863a86',\n              functions:[\n                {\n                  usePermit:true,\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleWBTCYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'WBTC',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintWBTC',\n              address:'0xbfDC7d97559173B52EF2A2f1bC9BeCf97B0D401D',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleDAISafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'DAI',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintDAISafe',\n              address:'0x08db226d63cE724A6091Ba82D28dFc76ceCa23d8',\n              functions:[\n                {\n                  name:'deposit',\n                  label:'Deposit',\n                  usePermit:true,\n                },\n              ]\n            },\n          },\n          idleUSDCSafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'USDC',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintUSDCSafe',\n              address:'0xA6C89A31D59f9C68D9Cba28d690C5E52058fb472',\n              functions:[\n                {\n                  name:'deposit',\n                  label:'Deposit',\n                  usePermit:true,\n                },\n              ]\n            },\n          },\n          idleUSDTSafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'USDT',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintUSDTSafe',\n              address:'0xd47B96Fb33b79a4Dd81a2bfa676eBB669166f619',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          }\n          */\n        }\n      }\n    },\n    batchMigration:{\n      enabled:true,\n      claimEnabled:true,\n      depositEnabled:false,\n      icon:'FileDownload',\n      route:'batch-migration',\n      label:'Batch Migration',\n      subComponent:BatchMigration,\n      desc:'Deposit your Idle Tokens V3 into a batch and wait until its conversion to the Idle Token V4',\n      props:{\n        availableTokens:{\n          idleDAIYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'DAI',\n            name:'idleDAIYieldV3',\n            token:'idleDAIYieldV3',\n            address:'0x78751b12da02728f467a44eac40f5cbc16bd7934',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterDAI',\n              address:'0xe0BfD08dA4DAf8f8BA11d1c3802009E75f963497',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleUSDCYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'USDC',\n            name:'idleUSDCYieldV3',\n            token:'idleUSDCYieldV3',\n            address:'0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterUSDC',\n              address:'0x86c8b56d124c2a8e7ea8a9e6a7f8ed99dde5cca8',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleUSDTYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'USDT',\n            name:'idleUSDTYieldV3',\n            token:'idleUSDTYieldV3',\n            address:'0x63D27B3DA94A9E871222CB0A32232674B02D2f2D',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterUSDT',\n              address:'0xee5c50c7c49dec47dde2f9b0233b9e14a8f00cf2',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleSUSDYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'SUSD',\n            name:'idleSUSDYieldV3',\n            token:'idleSUSDYieldV3',\n            address:'0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterSUSD',\n              address:'0xE2eE519399a49f1A2004a25DA61e82867A69b9b1',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleTUSDYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'TUSD',\n            name:'idleTUSDYieldV3',\n            token:'idleTUSDYieldV3',\n            address:'0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterTUSD',\n              address:'0x174a273f0ea28e55b6dd13259aa43d262b863a86',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleWBTCYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'WBTC',\n            name:'idleWBTCYieldV3',\n            token:'idleWBTCYieldV3',\n            address:'0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterWBTC',\n              address:'0xbfDC7d97559173B52EF2A2f1bC9BeCf97B0D401D',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleDAISafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'DAI',\n            name:'idleDAISafeV3',\n            token:'idleDAISafeV3',\n            address:'0x1846bdfDB6A0f5c473dEc610144513bd071999fB',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterDAISafe',\n              address:'0x08db226d63cE724A6091Ba82D28dFc76ceCa23d8',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleUSDCSafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'USDC',\n            name:'idleUSDCSafeV3',\n            token:'idleUSDCSafeV3',\n            address:'0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterUSDCSafe',\n              address:'0xA6C89A31D59f9C68D9Cba28d690C5E52058fb472',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleUSDTSafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'USDT',\n            name:'idleUSDTSafeV3',\n            token:'idleUSDTSafeV3',\n            address:'0x42740698959761baf1b06baa51efbd88cb1d862b',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterUSDTSafe',\n              address:'0xd47B96Fb33b79a4Dd81a2bfa676eBB669166f619',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          }\n        }\n      }\n    },\n    tokenMigration:{\n      enabled:true,\n      icon:'SwapHoriz',\n      route:'convert',\n      label:'Token Migration',\n      desc:'Easily convert your Compound, Fulcrum, Aave and iEarn tokens into Idle',\n      subComponent:TokenMigration,\n      props:{\n        migrationContract:{\n          name:'IdleConverterV4',\n          abi:IdleConverterPersonalSignV4,\n          address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n          oldAddresses:[],\n          functions:[\n            {\n              label:'Migrate',\n              name:'migrateFromToIdle'\n            },\n          ]\n        },\n        availableStrategies:['best','risk'],\n        availableTokens:{\n          idleDAIv2:{\n            decimals:18,\n            enabled:true,\n            protocol:'idle',\n            baseToken:'DAI',\n            abi:IdleTokenV2,\n            token:'idleDAIOld',\n            icon:'images/tokens/idleDAI.svg',\n            migrateFunction:'migrateFromToIdle',\n            address:'0x10eC0D497824e342bCB0EDcE00959142aAa766dD',\n          },\n          cDAI:{\n            decimals:8,\n            enabled:true,\n            token:\"cDAI\",\n            baseToken:'DAI',\n            protocol:\"compound\",\n            migrateFunction:'migrateFromCompoundToIdle',\n            address:\"0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643\",\n          },\n          iDAI:{\n            decimals:18,\n            enabled:false,\n            token:\"iDAI\",\n            baseToken:'DAI',\n            protocol:\"fulcrum\",\n            migrateFunction:'migrateFromFulcrumToIdle',\n            address:\"0x493c57c4763932315a328269e1adad09653b9081\",\n          },\n          aDAI:{\n            decimals:18,\n            enabled:true,\n            token:\"aDAI\",\n            protocol:\"aave\",\n            baseToken:'DAI',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d\",\n          },\n          yDAIv3:{\n            decimals:18,\n            enabled:true,\n            token:\"yDAIv3\",\n            abi:yDAIv3.abi,\n            baseToken:'DAI',\n            protocol:\"iearn\",\n            icon:'images/tokens/yDAI.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0xC2cB1040220768554cf699b0d863A3cd4324ce32\",\n          },\n          yDAIv2:{\n            decimals:18,\n            enabled:true,\n            token:\"yDAIv2\",\n            baseToken:'DAI',\n            abi:yDAIv3.abi,\n            protocol:\"iearn\",\n            icon:'images/tokens/yDAI.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0x16de59092dAE5CcF4A1E6439D611fd0653f0Bd01\",\n          },\n          idleUSDCv2:{\n            decimals:18,\n            enabled:true,\n            protocol:'idle',\n            abi:IdleTokenV2,\n            baseToken:'USDC',\n            token:'idleUSDCOld',\n            icon:'images/tokens/idleUSDC.svg',\n            migrateFunction:'migrateFromToIdle',\n            address:'0xeB66ACc3d011056B00ea521F8203580C2E5d3991',\n          },\n          cUSDC:{\n            decimals:8,\n            enabled:true,\n            token:\"cUSDC\",\n            baseToken:'USDC',\n            protocol:\"compound\",\n            migrateFunction:'migrateFromCompoundToIdle',\n            address:\"0x39aa39c021dfbae8fac545936693ac917d5e7563\",\n          },\n          iUSDC:{\n            decimals:6,\n            enabled:false,\n            token:\"iUSDC\",\n            baseToken:'USDC',\n            protocol:\"fulcrum\",\n            migrateFunction:'migrateFromFulcrumToIdle',\n            address:\"0xf013406a0b1d544238083df0b93ad0d2cbe0f65f\",\n          },\n          aUSDC:{\n            decimals:6,\n            enabled:true,\n            token:\"aUSDC\",\n            protocol:\"aave\",\n            baseToken:'USDC',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0x9bA00D6856a4eDF4665BcA2C2309936572473B7E\",\n          },\n          yUSDCv3:{\n            decimals:6,\n            enabled:true,\n            token:\"yUSDCv3\",\n            protocol:\"iearn\",\n            abi:yUSDCv3.abi,\n            baseToken:'USDC',\n            icon:'images/tokens/yUSDC.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0x26EA744E5B887E5205727f55dFBE8685e3b21951\",\n          },\n          yUSDCv2:{\n            decimals:6,\n            enabled:true,\n            token:\"yUSDCv2\",\n            protocol:\"iearn\",\n            abi:yUSDCv3.abi,\n            baseToken:'USDC',\n            icon:'images/tokens/yUSDC.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0xd6aD7a6750A7593E092a9B218d66C0A814a3436e\",\n          },\n          cUSDT:{\n            decimals:8,\n            enabled:true,\n            token:\"cUSDT\",\n            baseToken:'USDT',\n            protocol:\"compound\",\n            migrateFunction:'migrateFromCompoundToIdle',\n            address:\"0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9\",\n          },\n          iUSDT:{\n            decimals:6,\n            enabled:false,\n            token:\"iUSDT\",\n            baseToken:'USDT',\n            protocol:\"fulcrum\",\n            migrateFunction:'migrateFromFulcrumToIdle',\n            address:\"0x8326645f3aa6de6420102fdb7da9e3a91855045b\",\n          },\n          aUSDT:{\n            decimals:6,\n            enabled:true,\n            token:\"aUSDT\",\n            protocol:\"aave\",\n            baseToken:'USDT',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0x71fc860F7D3A592A4a98740e39dB31d25db65ae8\",\n          },\n          yUSDTv3:{\n            decimals:6,\n            enabled:true,\n            token:\"yUSDTv3\",\n            abi:yUSDTv3.abi,\n            protocol:\"iearn\",\n            baseToken:'USDT',\n            icon:'images/tokens/yUSDT.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0xE6354ed5bC4b393a5Aad09f21c46E101e692d447\",\n          },\n          yUSDTv2:{\n            decimals:6,\n            enabled:true,\n            token:\"yUSDTv2\",\n            abi:yUSDTv3.abi,\n            protocol:\"iearn\",\n            baseToken:'USDT',\n            icon:'images/tokens/yUSDT.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0x83f798e925BcD4017Eb265844FDDAbb448f1707D\",\n          },\n          idleSUSDv2:{\n            decimals:18,\n            enabled:true,\n            abi:IdleTokenV2,\n            protocol:'idle',\n            baseToken:'SUSD',\n            token:'idleSUSDYieldOld',\n            availableStrategies:['best'],\n            migrateFunction:'migrateFromToIdle',\n            icon:'images/tokens/idleSUSDYield.svg',\n            address:'0xb39ca0261a1b2986a6a9Fe38d344B56374963dE5',\n          },\n          aSUSD:{\n            decimals:6,\n            enabled:true,\n            token:\"aSUSD\",\n            protocol:\"aave\",\n            baseToken:'SUSD',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0x625aE63000f46200499120B906716420bd059240\",\n          },\n          ySUSDv3:{\n            decimals:18,\n            enabled:true,\n            token:\"ySUSDv3\",\n            abi:ySUSDv3,\n            baseToken:'SUSD',\n            protocol:\"iearn\",\n            availableStrategies:['best'],\n            icon:'images/tokens/ySUSDv3.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0xf61718057901f84c4eec4339ef8f0d86d2b45600\",\n          },\n          idleTUSDv2:{\n            decimals:18,\n            enabled:true,\n            abi:IdleTokenV2,\n            protocol:'idle',\n            baseToken:'TUSD',\n            token:'idleTUSDYieldOld',\n            availableStrategies:['best'],\n            migrateFunction:'migrateFromToIdle',\n            icon:'images/tokens/idleTUSDYield.svg',\n            address:'0x7DB7A4a50b26602E56536189Aa94678C80F8E5b6',\n          },\n          aTUSD:{\n            decimals:6,\n            enabled:true,\n            token:\"aTUSD\",\n            protocol:\"aave\",\n            baseToken:'TUSD',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0x4DA9b813057D04BAef4e5800E36083717b4a0341\",\n          },\n          yTUSDv3:{\n            decimals:18,\n            enabled:true,\n            abi:yTUSDv3,\n            token:\"yTUSDv3\",\n            baseToken:'TUSD',\n            protocol:\"iearn\",\n            icon:'images/tokens/yTUSDv3.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0x73a052500105205d34daf004eab301916da8190f\",\n          },\n          cWBTC:{\n            decimals:8,\n            enabled:true,\n            token:\"cWBTC\",\n            baseToken:'WBTC',\n            protocol:\"compound\",\n            migrateFunction:'migrateFromCompoundToIdle',\n            address:\"0xc11b1268c1a384e55c48c2391d8d480264a3a7f4\",\n          },\n          iWBTC:{\n            decimals:8,\n            enabled:false,\n            token:\"iWBTC\",\n            baseToken:'WBTC',\n            protocol:\"fulcrum\",\n            migrateFunction:'migrateFromFulcrumToIdle',\n            address:\"0xba9262578efef8b3aff7f60cd629d6cc8859c8b5\",\n          },\n          aWBTC:{\n            decimals:8,\n            enabled:true,\n            token:\"aWBTC\",\n            protocol:\"aave\",\n            baseToken:'WBTC',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0xfc4b8ed459e00e5400be803a9bb3954234fd50e3\",\n          },\n        }\n      }\n    },\n    addFunds:{\n      enabled:true,\n      icon:'AddCircleOutline',\n      route:'add-funds',\n      label:'Add Funds',\n      desc:'Buy tokens with your Bank account, Credit card or Ethereum Wallet',\n      subComponent:BuyModal,\n      directProps:{\n        showInline:true,\n        showAllTokens:true\n      }\n    },\n    nexusMutual:{\n      enabled:false,\n      icon:'Security',\n      route:'nexus-mutual',\n      label:'Nexus Mutual',\n      desc:'Buy NexusMutual cover without KYC for idleDAIYield or idleUSDTYield',\n      subComponent:NexusMutual,\n      props:{\n        availableTokens:{\n          idleDAIYield:{\n            decimals:18,\n            abi:IdleTokenV4,\n            name:'idleDAIYield',\n            token:'idleDAIYield', // Mainnet\n            // token:'idleDAIYieldMock', // Kovan\n            address:'0x0000000000000000000000000000000000000011',\n            realAddress:'0x3fe7940616e5bc47b0775a0dccf6237893353bb4', // Mainnet\n            // realAddress:'0xbd0b0205408509544815d377214d8f2cbe3e5381', // Kovan\n            underlying:{\n              DAI:{\n                abi:ERC20,\n                name:'DAI', // Mainnet\n                token:'DAI',\n                decimals:18,\n                // name:'DAIMock', // Kovan\n                address:'0x6b175474e89094c44da98b954eedeac495271d0f' // Mainnet\n                // address:'0x5C422252C6a47CdacF667521566Bf7bD5b0d769B' // Kovan\n              },\n            }\n          },\n          idleUSDTYield:{\n            decimals:18,\n            abi:IdleTokenV4,\n            name:'idleUSDTYield',\n            token:'idleUSDTYield', // Mainnet\n            // token:'idleUSDTYieldMock', // Kovan\n            address:'0x0000000000000000000000000000000000000012',\n            realAddress:'0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n            underlying:{\n              DAI:{\n                abi:ERC20,\n                name:'DAI', // Mainnet\n                token:'DAI',\n                decimals:18,\n                // name:'DAIMock', // Kovan\n                address:'0x6b175474e89094c44da98b954eedeac495271d0f' // Mainnet\n                // address:'0x5C422252C6a47CdacF667521566Bf7bD5b0d769B' // Kovan\n              },\n            }\n          }\n        },\n      },\n      directProps:{\n        startBlock:25858186, // Kovan\n        // Yield token covers have a 14 days grace period\n        yieldTokenCoverGracePeriod: 14 * 24 * 60 * 60 * 1000,\n        contractInfo:{\n          abi:NexusMutualDistributor,\n          name:'NexusMutualDistributor',\n          // address:'0xe2d569dc064b3b91f514e775c6026e04d2c887a9' // Kovan\n          address:'0xA5F3cE699276cf70400ae6a3E8651619b39668a8' // Mainnet\n        },\n        incidentsInfo:{\n          abi:NexusMutualIncidents,\n          name:'NexusMutualIncidents',\n          // address:'0x322f9a880189E3FFFf59b74644e13e5763C5AdB9' // Kovan\n          address:'0x8ceba69a8e96a4ce71aa65859dbdb180b489a719' // Mainnet\n        }\n      }\n    },\n    tokenSwap:{\n      enabled:true,\n      icon:'Sync',\n      route:'token-swap',\n      label:'Token Swap',\n      desc:'Easily swap your tokens using Kyber Swap widget',\n      subComponent:TokenSwap,\n      props:{\n        availableTokens:{\n          \"ETH\":{\"token\":\"ETH\"},\n          \"DAI\":{\"token\":\"DAI\"},\n          \"SUSD\":{\"token\":\"SUSD\"},\n          \"TUSD\":{\"token\":\"TUSD\"},\n          \"USDC\":{\"token\":\"USDC\"},\n          \"USDS\":{\"token\":\"USDS\"},\n          \"USDT\":{\"token\":\"USDT\"},\n          \"WBTC\":{\"token\":\"WBTC\"},\n          \"WETH\":{\"token\":\"WETH\"},\n          \"BUSD\":{\"token\":\"BUSD\"},\n          \"EURS\":{\"token\":\"EURS\"},\n          \"2KEY\":{\"token\":\"2KEY\"},\n          \"ABT\":{\"token\":\"ABT\"},\n          \"ABYSS\":{\"token\":\"ABYSS\"},\n          \"AMPL\":{\"token\":\"AMPL\"},\n          \"ANT\":{\"token\":\"ANT\"},\n          \"BAM\":{\"token\":\"BAM\"},\n          \"BAND\":{\"token\":\"BAND\"},\n          \"BAT\":{\"token\":\"BAT\"},\n          \"BLZ\":{\"token\":\"BLZ\"},\n          \"BNT\":{\"token\":\"BNT\"},\n          \"BQX\":{\"token\":\"BQX\"},\n          \"BTU\":{\"token\":\"BTU\"},\n          \"CDT\":{\"token\":\"CDT\"},\n          \"CVC\":{\"token\":\"CVC\"},\n          \"DAT\":{\"token\":\"DAT\"},\n          \"DGX\":{\"token\":\"DGX\"},\n          \"EKG\":{\"token\":\"EKG\"},\n          \"ELF\":{\"token\":\"ELF\"},\n          \"ENJ\":{\"token\":\"ENJ\"},\n          \"EQUAD\":{\"token\":\"EQUAD\"},\n          \"FXC\":{\"token\":\"FXC\"},\n          \"GDC\":{\"token\":\"GDC\"},\n          \"GEN\":{\"token\":\"GEN\"},\n          \"GHT\":{\"token\":\"GHT\"},\n          \"GNO\":{\"token\":\"GNO\"},\n          \"IOST\":{\"token\":\"IOST\"},\n          \"KEY\":{\"token\":\"KEY\"},\n          \"KNC\":{\"token\":\"KNC\"},\n          \"LEND\":{\"token\":\"LEND\"},\n          \"LINK\":{\"token\":\"LINK\"},\n          \"LOOM\":{\"token\":\"LOOM\"},\n          \"LRC\":{\"token\":\"LRC\"},\n          \"MANA\":{\"token\":\"MANA\"},\n          \"MCO\":{\"token\":\"MCO\"},\n          \"MET\":{\"token\":\"MET\"},\n          \"MFG\":{\"token\":\"MFG\"},\n          \"MKR\":{\"token\":\"MKR\"},\n          \"MLN\":{\"token\":\"MLN\"},\n          \"MTL\":{\"token\":\"MTL\"},\n          \"MYB\":{\"token\":\"MYB\"},\n          \"NEXXO\":{\"token\":\"NEXXO\"},\n          \"NPXS\":{\"token\":\"NPXS\"},\n          \"OGN\":{\"token\":\"OGN\"},\n          \"OMG\":{\"token\":\"OMG\"},\n          \"OST\":{\"token\":\"OST\"},\n          \"PAX\":{\"token\":\"PAX\"},\n          \"PBTC\":{\"token\":\"PBTC\"},\n          \"PLR\":{\"token\":\"PLR\"},\n          \"PNK\":{\"token\":\"PNK\"},\n          \"POLY\":{\"token\":\"POLY\"},\n          \"POWR\":{\"token\":\"POWR\"},\n          \"PT\":{\"token\":\"PT\"},\n          \"QKC\":{\"token\":\"QKC\"},\n          \"QNT\":{\"token\":\"QNT\"},\n          \"RAE\":{\"token\":\"RAE\"},\n          \"REN\":{\"token\":\"REN\"},\n          \"REP\":{\"token\":\"REP\"},\n          \"REQ\":{\"token\":\"REQ\"},\n          \"RLC\":{\"token\":\"RLC\"},\n          \"RSR\":{\"token\":\"RSR\"},\n          \"RSV\":{\"token\":\"RSV\"},\n          \"SAN\":{\"token\":\"SAN\"},\n          \"SNT\":{\"token\":\"SNT\"},\n          \"SNX\":{\"token\":\"SNX\"},\n          \"SPIKE\":{\"token\":\"SPIKE\"},\n          \"SPN\":{\"token\":\"SPN\"},\n          \"TKN\":{\"token\":\"TKN\"},\n          \"TKX\":{\"token\":\"TKX\"},\n          \"TRYB\":{\"token\":\"TRYB\"},\n          \"UBT\":{\"token\":\"UBT\"},\n          \"UPP\":{\"token\":\"UPP\"},\n          \"ZRX\":{\"token\":\"ZRX\"}\n        }\n      },\n      directProps:{\n      }\n    }\n  },\n  payments: { // Payment methods & providers\n    methods:{\n      bank:{\n        defaultProvider:null,\n        showDefaultOnly:false,\n        props:{\n          imageSrc:'images/bank.png',\n          caption:'Bank Account'\n        }\n      },\n      card:{\n        defaultProvider:null,\n        showDefaultOnly:false,\n        props:{\n          imageSrc:'images/debit-card.png',\n          caption:'Credit Card'\n        }\n      },\n      wallet:{\n        defaultProvider:'zeroExInstant',\n        showDefaultOnly:false,\n        props:{\n          imageSrc:'images/ethereum-wallet.svg',\n          caption:'Ethereum Wallet',\n          imageProps:{\n            padding:['0','5px']\n          }\n        }\n      },\n    },\n    providers: {\n      wyre: {\n        enabled: true,\n        imageSrc: 'images/payments/wyre.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 0.75% fee ~',\n        supportedMethods:['card'],\n        supportedCountries:['USA','GBR','AUS','BRA','CHN','MEX','EUR'],\n        supportedTokens:['USDC','DAI','ETH'],\n        remoteResources:{},\n        env:'prod',\n        envParams:{\n          test:{\n            accountId:'AC_Q2Y4AARC3TP'\n          },\n          prod:{\n            accountId:'AC_PQQBX33XVEQ'\n          }\n        },\n        getInfo: (props) => {\n          const info = {};\n          if (props.selectedMethod && props.selectedMethod){\n            switch (props.selectedMethod){\n              case 'bank':\n                info.subcaption = `~ 0.75% fee ~\\nKYC REQUIRED`;\n              break;\n              case 'card':\n                info.subcaption = `~ 3.2% fee ~\\n$250.00/day`;\n              break;\n              default:\n              break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props,globalConfigs,buyParams) => {\n          const env = globalConfigs.payments.providers.wyre.env;\n          const envParams = globalConfigs.payments.providers.wyre.envParams[env];\n          const referrerAccountId = envParams.accountId;\n          const url = 'https://pay.sendwyre.com/purchase';\n\n          const params = {\n            dest: `ethereum:${props.account}`,\n            destCurrency: buyParams.selectedToken ? buyParams.selectedToken : ( props.tokenConfig.wyre && props.tokenConfig.wyre.destCurrency ? props.tokenConfig.wyre.destCurrency : props.selectedToken ),\n            referrerAccountId,\n            redirectUrl:globalConfigs.baseURL\n            // failureRedirectUrl:globalConfigs.baseURL\n          };\n\n          return `${url}?`+Object.keys(params)\n              .map(k => encodeURIComponent(k) + '=' + encodeURIComponent(params[k]))\n              .join('&');\n        },\n        render: (initParams,amount,props,globalConfigs) => {\n          const wyreWidget = document.getElementById('wyre-widget');\n          if (!wyreWidget){\n            const iframeBox = document.createElement(\"div\");\n            iframeBox.innerHTML = `\n              <div id=\"wyre-widget\" class=\"wyre-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                <div id=\"wyre-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\"></div>\n                <a class=\"wyre-close-button\" href=\"javascript:void(0);\" onclick=\"document.getElementById('wyre-widget').remove();\" style=\"position:absolute;width:30px;height:30px;top:10px;right:10px;font-size:22px;line-height:30px;text-align:center;color:#fff;font-weight:bold;z-index:10;text-decoration:none\">✕</a>\n                <div id=\"wyre-widget-container\" style=\"position:relative;z-index:2;width:400px;height:650px\">\n                  <iframe\n                    style=\"position:relative;z-index:2;\"\n                    frameborder=\"0\"\n                    height=\"100%\"\n                    src=\"${initParams}\"\n                    width=\"100%\"\n                  >\n                    <p>Your browser does not support iframes.</p>\n                  </iframe>\n                  <div id=\"wyre-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                    <div style=\"display:flex;flex-direction:row;align-items:center\">\n                      <img src=\"${globalConfigs.payments.providers.wyre.imageSrc}\" style=\"height:50px;\" />\n                      <h3 style=\"font-weight:600;font-style:italic;color:#000;padding-left:10px\">is loading...</h3>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            `;\n            document.body.appendChild(iframeBox);\n\n            // Add wyre Widget style (mobile)\n            if (!document.getElementById('wyreWidget_style')){\n              const wyreStyle = document.createElement('style');\n              wyreStyle.id = 'wyreWidget_style';\n              wyreStyle.innerHTML = `\n              @media (max-width: 40em){\n                #wyre-widget {\n                  align-items: flex-start !important;\n                }\n                #wyre-widget-overlay{\n                  background:#fff !important;\n                }\n                #wyre-widget-container{\n                  width:100vw;\n                  min-height: calc( 100vh - 60px ) !important;\n                }\n              }`;\n              document.body.appendChild(wyreStyle);\n            }\n          }\n        },\n      },\n      ramp: {\n        enabled:true,\n        imageSrc: 'images/payments/ramp.png',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption:`~ 2.5% fee ~\\nEUR / GBP`,\n        supportedMethods:['bank','card'],\n        badge: {\n          text:'NO ID REQUIRED',\n          color:'#fff',\n          bgColor:'#0cade4'\n        },\n        supportedTokens:['ETH','DAI','USDC'],\n        supportedCountries:['USA','GBR','AUS','BRA','CAN','EUR','HKG','IND','MEX','RUS','ZAF','KOR'],\n        getInfo: (props) => {\n          const info = {};\n            switch (props.selectedMethod){\n              case 'bank':\n                info.supportedCountries = ['GBR','EUR'];\n                info.subcaption = `~ 1.49-1.99% fee ~`;\n              break;\n              case 'card':\n                info.supportedCountries = ['USA','GBR','AUS','BRA','CAN','EUR','HKG','IND','MEX','RUS','ZAF','KOR'];\n                info.subcaption = `~ 2.90% fee ~`;\n              break;\n              default:\n              break;\n            }\n          return info;\n        },\n        getInitParams: (props,globalConfigs,buyParams) => {\n        \treturn {\n\t          hostAppName: 'Idle',\n            userAddress: props.account,\n            hostApiKey: env.REACT_APP_RAMP_KEY,\n            variant: props.isMobile ? 'mobile' : 'desktop',\n            hostLogoUrl: `${globalConfigs.baseURL}/images/idle-round.png`,\n            swapAsset: buyParams.selectedToken ? buyParams.selectedToken : ( props.tokenConfig.ramp && props.tokenConfig.ramp.swapAsset ? props.tokenConfig.ramp.swapAsset : props.selectedToken )\n        \t};\n        },\n        render: (initParams,amount,props,globalConfigs) => {\n          new RampInstantSDK(initParams)\n            .on('*', async (event) => {\n              const functionsUtil = new FunctionsUtil(props);\n              let tokenDecimals = null;\n              let tokenAmount = null;\n\n              switch (event.type){\n                case 'PURCHASE_SUCCESSFUL':\n                  // Update balance\n                  props.getAccountBalance();\n\n                  tokenDecimals = await props.getTokenDecimals();\n\n                  tokenAmount = event.payload.purchase.tokenAmount;\n                  tokenAmount = functionsUtil.BNify(tokenAmount.toString()).div(functionsUtil.BNify(Math.pow(10,parseInt(tokenDecimals)).toString())).toString();\n\n                  // Toast message\n                  window.toastProvider.addMessage(`Payment completed`, {\n                    secondaryMessage: `${tokenAmount} ${props.selectedToken} are now in your wallet`,\n                    colorTheme: 'light',\n                    actionHref: \"\",\n                    actionText: \"\",\n                    variant: \"success\",\n                  });\n\n                break;\n                default:\n                break;\n              }\n            })\n            .show();\n        }\n      },\n      transak: {\n        enabled:true,\n        imageSrc: 'images/payments/transak.png',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption:`~ 1.5% fee ~\\nALL CURRENCIES`,\n        supportedMethods:['bank','card'],\n        supportedCountries:['USA','GBR','AUS','BRA','CHN','MEX','EUR','IND'],\n        supportedTokens:['ETH','DAI','USDC','USDT','TUSD','SUSD','WBTC'],\n        remoteResources:{'https://global.transak.com/v1/widget.js':{}},\n        env:'prod',\n        badge:{\n          text:'INSTANT',\n          bgColor:'#0069ee'\n        },\n        envParams:{\n          test:{\n            apiKey:env.REACT_APP_TRANSAK_KEY_TEST,\n            url:'https://global.transak.com'\n          },\n          prod:{\n            apiKey:env.REACT_APP_TRANSAK_KEY_PROD,\n            url:'https://global.transak.com'\n          }\n        },\n        getInfo: (props) => {\n          const info = {};\n\n          const selectedMethod = props.selectedMethod && props.selectedMethod;\n          let fee = selectedMethod === 'bank' ? '1.5%' : '4.5%';\n\n          if (props.selectedCountry && props.selectedCountry.value){\n            switch (props.selectedCountry.value.toUpperCase()){\n              case 'GBR':\n                info.badge = {\n                  text:'INSTANT',\n                  bgColor:'#0069ee'\n                };\n                info.subcaption = `~ ${fee} fee ~\\nGBP ONLY`;\n              break;\n              case 'IND':\n                fee = '1.0%';\n                info.badge = {\n                  text:'INSTANT',\n                  bgColor:'#0069ee'\n                };\n                info.subcaption = `~ ${fee} fee ~\\nINR ONLY`;\n              break;\n              case 'EUR':\n                if (selectedMethod === 'bank'){\n                  info.badge = {\n                    text:'SEPA',\n                    color:'#f7cb05 ',\n                    bgColor:'#10288a'\n                  };\n                } else {\n                  info.badge = {\n                    text:'INSTANT',\n                    bgColor:'#0069ee'\n                  };\n                }\n                info.subcaption = `~ ${fee} fee ~\\nEUR ONLY`;\n              break;\n              default:\n              break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props,globalConfigs,buyParams) => {\n          const env = globalConfigs.payments.providers.transak.env;\n          const envParams = globalConfigs.payments.providers.transak.envParams[env];\n\n          let fiatCurrency = null;\n\n          if (buyParams.selectedCountry && buyParams.selectedCountry.value){\n            switch (buyParams.selectedCountry.value.toUpperCase()){\n              case 'IND':\n                fiatCurrency = 'INR';\n              break;\n              case 'GBR':\n                fiatCurrency = 'GBP';\n              break;\n              case 'EUR':\n                fiatCurrency = 'EUR';\n              break;\n              case 'USA':\n                fiatCurrency = 'USD';\n              break;\n              default:\n                fiatCurrency = 'GBP';\n              break;\n            }\n          }\n\n          let cryptoCurrencyCode = buyParams.selectedToken ? buyParams.selectedToken.toLowerCase() : ( props.tokenConfig.transak && props.tokenConfig.transak.currencyCode ? props.tokenConfig.transak.currencyCode : props.selectedToken);\n          cryptoCurrencyCode = cryptoCurrencyCode.toUpperCase();\n\n          const apiKey = envParams.apiKey;\n          const walletAddress = props.account;\n          const partnerCustomerId = props.account;\n          const disableWalletAddressForm = false;\n\n          return {\n            apiKey,\n            cryptoCurrencyCode,\n            walletAddress,\n            fiatCurrency,\n            partnerCustomerId,\n            disableWalletAddressForm,\n            width:'100%',\n            height:'100%'\n            // email,\n          };\n        },\n        render: (initParams,amount,props,globalConfigs) => {\n          if (window.transakGlobal){\n\n            const transakWidget = document.getElementById('transak-widget');\n            if (!transakWidget){\n              const iframeBox = document.createElement(\"div\");\n              iframeBox.innerHTML = `\n                <div id=\"transak-widget\" class=\"transak-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                  <div id=\"transak-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\" onclick=\"document.getElementById('transak-widget').remove();\"></div>\n                  <a class=\"transak-close-button\" href=\"javascript:void(0);\" onclick=\"document.getElementById('transak-widget').remove();\" style=\"position:absolute;width:30px;height:30px;top:10px;right:10px;font-size:22px;line-height:30px;text-align:center;color:#fff;font-weight:bold;z-index:10;text-decoration:none\">✕</a>\n                  <div class=\"transak-widget-container\" style=\"position:relative;z-index:2;width:500px;height:550px\">\n                    <div id=\"transak-widget-container\" style=\"position:relative;z-index:2;width:500px;height:550px\"></div>\n                    <div id=\"transak-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                      <div style=\"display:flex;flex-direction:row;align-items:center\">\n                        <img src=\"${globalConfigs.payments.providers.transak.imageSrc}\" style=\"height:50px;\" />\n                        <h3 style=\"font-weight:600;font-style:italic;color:#0040ca\">is loading...</h3>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              `;\n              document.body.appendChild(iframeBox);\n\n              // Add transak Widget style (mobile)\n              if (!document.getElementById('transakWidget_style')){\n                const transakStyle = document.createElement('style');\n                transakStyle.id = 'transakWidget_style';\n                transakStyle.innerHTML = `\n                @media (max-width: 40em){\n                  #transak-widget {\n                    align-items: flex-start !important;\n                  }\n                  #transak-widget-overlay{\n                    background:#fff !important;\n                  }\n                  #transak-widget-container{\n                    width:100vw;\n                    min-height: calc( 100vh - 60px ) !important;\n                  }\n                }`;\n                document.body.appendChild(transakStyle);\n              }\n            }\n\n            window.transakGlobal.render(initParams, 'transak-widget-container');\n          }\n        }\n      },\n      moonpay: {\n        enabled:true,\n        imageSrc: 'images/payments/moonpay.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 4.5% fee ~',\n        supportedMethods:['card','bank'],\n        supportedCountries:['GBR','EUR','AUS','BRA','CHN','MEX','CAN','HKG','RUS','ZAF','KOR'],\n        supportedTokens:['USDC','DAI','ETH'],\n        env:'prod',\n        envParams:{\n          test:{\n            url:'https://buy-staging.moonpay.io',\n            apiKey:env.REACT_APP_MOONPAY_KEY_TEST\n          },\n          prod:{\n            url:'https://buy.moonpay.io',\n            apiKey:env.REACT_APP_MOONPAY_KEY_PROD\n          }\n        },\n        getInfo: (props) => {\n          const info = {};\n          if (props.selectedMethod && props.selectedMethod){\n            switch (props.selectedMethod){\n              case 'bank':\n                if (props.selectedCountry && props.selectedCountry.value){\n                  switch (props.selectedCountry.value.toUpperCase()){\n                    case 'EUR':\n                      info.badge = {\n                        text:'SEPA',\n                        color:'#f7cb05 ',\n                        bgColor:'#10288a'\n                      }\n                      info.subcaption = `~ 1.5% fee ~\\nEUR ONLY`;\n                    break;\n                    case 'GBR':\n                      info.badge = {\n                        text:'GBP',\n                      }\n                      info.subcaption = `~ 1.5% fee ~\\nGBP ONLY`;\n                    break;\n                    default:\n                      info.badge = null;\n                      info.subcaption = `~ 1.5% fee ~\\nEUR/GBP ONLY`;\n                    break;\n                  }\n                }\n              break;\n              case 'card':\n                info.badge = null;\n                info.subcaption = `~ 5% fee ~`;\n              break;\n              default:\n              break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props,globalConfigs,buyParams) => {\n          const env = globalConfigs.payments.providers.moonpay.env;\n          const envParams = globalConfigs.payments.providers.moonpay.envParams[env];\n          const apiKey = envParams.apiKey;\n          const params = {\n            apiKey,\n            currencyCode: buyParams.selectedToken ? buyParams.selectedToken.toLowerCase() : ( props.tokenConfig.moonpay && props.tokenConfig.moonpay.currencyCode ? props.tokenConfig.moonpay.currencyCode : props.selectedToken.toLowerCase()),\n            walletAddress:props.account,\n            baseCurrencyCode:'USD',\n            showWalletAddressForm: true\n          };\n\n          const methods = {\n            'bank':{\n              'GBR':'gbp_bank_transfer',\n              'EUR':'sepa_bank_transfer'\n            },\n            'card':'credit_debit_card'\n          };\n\n          const selectedCountry = buyParams.selectedCountry && buyParams.selectedCountry.value ? buyParams.selectedCountry.value.toUpperCase() : null;\n\n          // Set payment method\n          if (buyParams.selectedMethod){\n            switch (buyParams.selectedMethod){\n              case 'bank':\n                params.enabledPaymentMethods = methods[buyParams.selectedMethod]['EUR'];\n                switch (selectedCountry){\n                  case 'GBR':\n                  case 'EUR':\n                    params.enabledPaymentMethods = methods[buyParams.selectedMethod][selectedCountry];\n                  break;\n                  default:\n                    params.enabledPaymentMethods = Object.values(methods[buyParams.selectedMethod]).join(',');\n                  break;\n                }\n              break;\n              case 'card':\n              default:\n                params.enabledPaymentMethods = methods[buyParams.selectedMethod];\n              break;\n            }\n          }\n\n          // Set baseCurrencyCode\n          switch (selectedCountry){\n            case 'GBR':\n              params.baseCurrencyCode = 'GBP';\n            break;\n            case 'EUR':\n              params.baseCurrencyCode = 'EUR';\n            break;\n            default:\n              params.baseCurrencyCode = 'USD';\n            break;\n          }\n\n          let url = envParams.url;\n\n          // Safari Fix\n          var isSafari = navigator.userAgent.indexOf(\"Safari\") > -1;\n          if (isSafari) {\n            if (!document.cookie.match(/^(.*;)?\\s*moonpay-fixed\\s*=\\s*[^;]+(.*)?$/)) {\n              document.cookie = \"moonpay-fixed=fixed; expires=Tue, 19 Jan 2038 03:14:07 UTC; path=/\";\n              url += \"/safari_fix\";\n            }\n          }\n\n          return `${url}?`+Object.keys(params)\n              .map(k => encodeURIComponent(k) + '=' + encodeURIComponent(params[k]))\n              .join('&');\n        },\n        render: (initParams,amount,props,globalConfigs) => {\n          const moonpayWidget = document.getElementById('moonpay-widget');\n          if (!moonpayWidget){\n            const iframeBox = document.createElement(\"div\");\n            iframeBox.innerHTML = `\n              <div id=\"moonpay-widget\" class=\"moonpay-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                <div id=\"moonpay-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\"></div>\n                  <div id=\"moonpay-widget-container\" style=\"position:relative;z-index:2;width:500px;height:490px\">\n                    <iframe\n                      style=\"position:relative;z-index:2;\"\n                      frameborder=\"0\"\n                      height=\"100%\"\n                      src=\"${initParams}\"\n                      width=\"100%\"\n                    >\n                      <p>Your browser does not support iframes.</p>\n                    </iframe>\n                    <div id=\"moonpay-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                      <div style=\"display:flex;flex-direction:row;align-items:end\">\n                        <img src=\"${globalConfigs.payments.providers.moonpay.imageSrc}\" style=\"height:50px;\" />\n                        <h3 style=\"padding-left:5px;font-weight:600;font-style:italic;\">is loading...</h3>\n                      </div>\n                    </div>\n                    <div id=\"moonpay-widget-footer\" style=\"position:relative;display:flex;justify-content:center;align-items:center;padding:8px 16px;width:100%;background:#fff;top:-20px;z-index:3\">\n                      <button style=\"background:#000;color:#fff;text-align:center;border-radius:5px;width:100%;height:51px;line-height:51px;font-weight:500;border:0;cursor:pointer\" onclick=\"document.getElementById('moonpay-widget').remove();\">Close</button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            `;\n            document.body.appendChild(iframeBox);\n\n            // Add Moonpay Widget style (mobile)\n            if (!document.getElementById('moonpayWidget_style')){\n              const moonpayStyle = document.createElement('style');\n              moonpayStyle.id = 'moonpayWidget_style';\n              moonpayStyle.innerHTML = `\n              @media (max-width: 40em){\n                #moonpay-widget {\n                  align-items: flex-start !important;\n                }\n                #moonpay-widget-overlay{\n                  background:#fff !important;\n                }\n                #moonpay-widget-container{\n                  width:100vw;\n                  min-height: calc( 100vh - 60px ) !important;\n                }\n              }`;\n              document.body.appendChild(moonpayStyle);\n            }\n          }\n        }\n      },\n      zeroExInstant: {\n        enabled: true,\n        imageSrc: 'images/payments/zeroexinstant.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 0.25% fee ~',\n        supportedMethods:['wallet'],\n        supportedTokens:['USDC','DAI'],\n        remoteResources:{'https://instant.0x.org/v3/instant.js':{}},\n        getInitParams: (props,globalConfigs,buyParams,onSuccess,onClose) => {\n\n          const tokenParams = globalConfigs.tokens[buyParams.selectedToken];\n          const connectorName = window.RimbleWeb3_context ? window.RimbleWeb3_context.connectorName : null;\n\n          if (!tokenParams.zeroExInstant){\n            return null;\n          }\n\n          return {\n            networkId: globalConfigs.network.requiredNetwork,\n            chainId: globalConfigs.network.requiredNetwork,\n            provider: connectorName && connectorName!=='Injected' && window.RimbleWeb3_context.connector[connectorName.toLowerCase()] ? window.RimbleWeb3_context.connector[window.RimbleWeb3_context.connectorName.toLowerCase()].provider : window.ethereum,\n            orderSource: tokenParams.zeroExInstant.orderSource,\n            affiliateInfo: tokenParams.zeroExInstant.affiliateInfo,\n            defaultSelectedAssetData: tokenParams.zeroExInstant.assetData,\n            availableAssetDatas: [tokenParams.zeroExInstant.assetData],\n            shouldDisableAnalyticsTracking: true,\n            onSuccess: onSuccess ? onSuccess : () => {},\n            onClose: onClose ? onClose : () => {}\n          };\n        },\n        render: (initParams,amount) => {\n          if (window.zeroExInstant && initParams){\n            if (amount){\n              initParams.defaultAssetBuyAmount = parseFloat(amount);\n            }\n            window.zeroExInstant.render(initParams, 'body');\n          }\n        }\n      },\n      kyberSwap: {\n        enabled: true,\n        imageSrc: 'images/payments/kyber.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Swap with',\n        captionPos: 'top',\n        subcaption: '~ 0.25% fee ~',\n        supportedMethods:['wallet'],\n        supportedTokens:['WETH','USDC','DAI','USDT','TUSD','SUSD','WBTC','RAI'],\n        web3Subscription:{ // Data for web3 subscription\n          enabled: true,\n          contractAddress: '0x818e6fecd516ecc3849daf6845e3ec868087b755',\n          decodeLogsData: [\n            {\n              \"internalType\": \"address\",\n              \"name\": \"_startAddress\",\n              \"type\": \"address\"\n            },\n            {\n              \"internalType\": \"address\",\n              \"name\": \"_tokenAddress\",\n              \"type\": \"address\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"_startAmount\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"_tokenAmount\",\n              \"type\": \"uint256\"\n            },\n          ],\n        },\n        remoteResources:{\n          'https://widget.kyber.network/v0.7.5/widget.css':{},\n          'https://widget.kyber.network/v0.7.5/widget.js':{\n            parentElement:document.body,\n            precall: (props,globalConfigs,providerInfo) => {\n\n              // Remove previous elements\n              const buttons = document.querySelectorAll('.kyber-widget-button');\n              for (let i=0;i<buttons.length;i++){\n                buttons[i].remove();\n              }\n\n              // const kyberWidgetScript = document.getElementById('kyber-widget-script');\n              // if (kyberWidgetScript){\n              //   kyberWidgetScript.remove();\n              // }\n\n              const scripts = document.querySelectorAll('.script_kyberSwap');\n              for (let i=0;i<scripts.length;i++){\n                scripts[i].remove();\n              }\n\n              const buttonId = props.buttonId ? props.buttonId : `kyber-swapper-${props.selectedToken}`;\n              if (!document.getElementById(buttonId)){\n                const a = document.createElement('a');\n                a.id = buttonId;\n                a.href = providerInfo.getInitParams(props,globalConfigs);\n                a.target = '_blank';\n                a.rel = 'nofollow noopener noreferrer';\n                a.className = 'kyber-widget-button theme-ocean theme-supported';\n                a.title = 'Swap with Kyber';\n                a.style = 'display:none;';\n                document.body.appendChild(a);\n              }\n            }\n          }\n        },\n        getInitParams: (props,globalConfigs,buyParams=null) => {\n          const baseToken = props.baseToken ? props.baseToken : 'ETH';\n          const params = {\n            lang:'en',\n            type:'swap',\n            mode:'iframe',\n            theme:'theme-ocean',\n            paramForwarding:true,\n            // callback:globalConfigs.baseURL,\n            pinnedTokens:`${baseToken}_${props.selectedToken}`,\n            title:`Swap ${baseToken} for ${props.selectedToken}`,\n            defaultPair:`${baseToken}_${props.selectedToken}`,\n            commissionId:'0x4215606a720477178AdFCd5A59775C63138711e8',\n            network: globalConfigs.network.requiredNetwork === 1 ? 'mainnet' : 'test',\n          };\n\n          const url  = 'https://widget.kyber.network/v0.7.5/';\n\n          return `${url}?`+Object.keys(params)\n              .map(k => encodeURIComponent(k) + '=' + encodeURIComponent(params[k]))\n              .join('&');\n        },\n        render: (initParams,amount,props) => {\n          const buttonId = props.buttonId ? props.buttonId :`kyber-swapper-${props.selectedToken}`;\n          const a = document.getElementById(buttonId);\n          if (a){\n            a.click();\n\n            // Observe for pending transaction\n            /*\n            if (window.MutationObserver){\n              setTimeout(() => {\n\n                const observer = new window.MutationObserver(function(mutations) {\n                  mutations.forEach((m,i) => {\n                    if (m.addedNodes.length && m.target.className === 'kyber_widget-broadcast'){\n\n                      // Show persistent toast message\n                      window.showToastMessage({\n                        variant:'processing',\n                        message:'Pending deposit',\n                        secondaryMessage:'kyberSwap is processing your request'\n                      });\n\n                      observer.disconnect();\n                    } else if (m.target.id === 'kyber-widget' && m.removedNodes.length && m.removedNodes[0].firstChild.className.includes('kyber_widget-widget-container')) {\n                      observer.disconnect();\n                    }\n                  });\n                });\n                const target = document.querySelector('#kyber-widget');\n                observer.observe(target, { childList: true, subtree: true });\n              },1000);\n            }\n            */\n          }\n        }\n      },\n      airSwap: {\n        enabled: false,\n        imageSrc: 'images/payments/airswap.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 0% fee ~',\n        supportedMethods:['wallet'],\n        supportedTokens:['USDC','DAI'],\n        env:'production',\n        remoteResources:{'https://cdn.airswap.io/airswap-instant-widget.js':{}},\n        getInitParams: (props,globalConfigs,buyParams,onComplete,onClose) => {\n          return {\n            env: 'production',\n            mode: 'buy',\n            token: props.tokenConfig.address,\n            baseToken: 'ETH',\n            onComplete: onComplete ? onComplete : () => {},\n            onClose: onClose ? onClose : () => {}\n          };\n        },\n        render: (initParams,amount,props) => {\n          if (window.AirSwapInstant){\n            if (amount){\n              initParams.amount = amount.toString();\n            }\n            window.AirSwapInstant.render(initParams,'body');\n          }\n        }\n      },\n      totle: {\n        enabled: false,\n        imageSrc: 'images/payments/totle.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 0% fee ~',\n        supportedMethods:['wallet'],\n        supportedTokens:['USDC','DAI'],\n        env:'production',\n        remoteResources:{'https://widget.totle.com/latest/dist.js':{}},\n        getInitParams: (props,globalConfigs,buyParams,onComplete,onClose) => {\n          return {\n            sourceAssetAddress: null,\n            sourceAmountDecimal: null,\n            destinationAssetAddress: null,\n            destinationAmountDecimal: null,\n            apiKey: null,\n            partnerContractAddress: null,\n          };\n        },\n        render: (initParams,amount,props) => {\n          if (window.TotleWidget){\n            const nodeId = 'totle-widget';\n            if (!document.getElementById(nodeId)){\n              const totleWidgetContainer = document.createElement(\"div\");\n              totleWidgetContainer.id = nodeId;\n              document.body.appendChild(totleWidgetContainer);\n            }\n\n            window.TotleWidget.default.run(initParams,document.getElementById(nodeId));\n          }\n        }\n      }\n    }\n  }\n};\n\nexport default globalConfigs;\n","import React, { Component } from 'react';\nimport styles from './DashboardCard.module.scss';\nimport { Flex, Icon, Heading, Card, Tooltip } from \"rimble-ui\";\n\nclass DashboardCard extends Component {\n\n  state = {\n    mouseOver:false\n  }\n\n  setMouseOver(mouseOver){\n    this.setState({\n      mouseOver\n    });\n  }\n\n  render() {\n    const isDisabled = this.props.isDisabled;\n    const isActive = this.props.isActive && !isDisabled;\n    const isInteractive = this.props.isInteractive && !isDisabled;\n    const isVisible = typeof this.props.isVisible !== 'undefined' ? this.props.isVisible : true;\n    const isRainbow = typeof this.props.isRainbow !== 'undefined' ? this.props.isRainbow : false;\n\n    const cardProps = {\n      p:0,\n      border:1,\n      boxShadow:1,\n      borderRadius:2,\n      borderColor:null,\n      position:'relative',\n      minHeight:'initial',\n      backgroundColor:'cardBg'\n    };\n\n    if (isActive || (isInteractive && this.state.mouseOver)){\n      cardProps.border = 2;\n      cardProps.boxShadow = null;\n      cardProps.backgroundColor = 'cardBgHover';\n    }\n\n    // Replace props\n    if (this.props.cardProps && Object.keys(this.props.cardProps).length){\n      Object.keys(this.props.cardProps).forEach(p => {\n        cardProps[p] = this.props.cardProps[p];\n      });\n    }\n\n    const className = [\n      styles.defaultOpacity,\n      isActive ? styles.active : null,\n      !isVisible ? styles.hidden : null,\n      isRainbow ? styles.rainbow : null,\n      isDisabled ? styles.disabled : null,\n      isInteractive ? styles.interactive : null,\n    ];\n\n    if (this.props.className && styles[this.props.className]){\n      className.push(styles[this.props.className]);\n    }\n\n    return (\n      <Card\n        {...cardProps}\n        className={className}\n        onClick={this.props.handleClick}\n        onMouseOut={(e) => this.setMouseOver(false)}\n        onMouseOver={(e) => this.setMouseOver(true)}\n      >\n        {\n          this.props.title && this.props.title.length>0 &&\n            <Flex\n              mt={[3,4]}\n              ml={[3,4]}\n              alignItems={'center'}\n              flexDirection={'row'}\n              {...this.props.titleParentProps}\n            >\n              <Heading.h4\n                fontWeight={4}\n                fontSize={[2,3]}\n                textAlign={'left'}\n                color={'dark-gray'}\n                lineHeight={'initial'}\n                {...this.props.titleProps}\n              >\n                {this.props.title}\n              </Heading.h4>\n              {\n                this.props.description && this.props.description.length>0 &&\n                  <Tooltip\n                    placement={'top'}\n                    message={this.props.description}\n                  >\n                    <Icon\n                      ml={2}\n                      name={\"Info\"}\n                      size={'1em'}\n                      color={'cellTitle'}\n                    />\n                  </Tooltip>\n              }\n            </Flex>\n        }\n        {this.props.children}\n      </Card>\n    );\n  }\n}\n\nexport default DashboardCard;","import FunctionsUtil from './FunctionsUtil';\n\nclass IdleGovToken{\n  // Attributes\n  props = {};\n  tokenName = null;\n  tokenConfig = null;\n  functionsUtil = null;\n\n  // Constructor\n  constructor(props){\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    this.tokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n    this.tokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.tokenName]);\n  }\n\n  getBalance = async () => {\n    let balance = await this.functionsUtil.getTokenBalance(this.tokenName,this.props.account);\n    if (!balance || this.functionsUtil.BNify(balance).isNaN()){\n      balance = this.functionsUtil.BNify(0);\n    }\n    return balance;\n  }\n\n  claimRewards = async (callback,callbackReceipt) => {\n    return this.functionsUtil.contractMethodSendWrapper('EarlyRewards', 'claim', [], callback, callbackReceipt);\n  }\n\n  getPriorVotes = async (account=null) => {\n    account = account ? account : this.props.account;\n    let priorVotes = await this.functionsUtil.genericContractCall(this.tokenName,'getPriorVotes',[account]);\n    if (priorVotes){\n      return this.functionsUtil.BNify(priorVotes);\n    }\n    return null;\n  }\n\n  refreshIdleSpeed = async () => {\n    return this.functionsUtil.genericContractCall('IdleController','refreshIdleSpeeds');\n  }\n\n  getUnclaimedTokens = async () => {\n    /*\n    let rewards =  await this.functionsUtil.genericContractCall('EarlyRewards','rewards',[this.props.account]);\n    if (rewards){\n      return this.functionsUtil.fixTokenDecimals(rewards,this.tokenConfig.decimals);\n    }\n    */\n    return this.functionsUtil.BNify(0);\n  }\n\n  getAPR = async (token,tokenConfig,conversionRate=null) => {\n    const IDLETokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.tokenName]);\n    if (!IDLETokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getIdleAPR_${tokenConfig.idle.token}_${conversionRate}`;\n    /*\n    const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n    */\n\n    let APR = this.functionsUtil.BNify(0);\n\n    const [\n      idleDistribution,\n      tokenAllocation\n    ] = await Promise.all([\n      this.getDistribution(tokenConfig),\n      this.functionsUtil.getTokenAllocation(tokenConfig,false,false)\n    ]);\n\n    if (idleDistribution && tokenAllocation){\n\n      const DAITokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens','DAI']);\n        \n      // Get IDLE oconversion rate\n      if (!conversionRate){\n        try {\n          conversionRate = await this.functionsUtil.getUniswapConversionRate(DAITokenConfig,IDLETokenConfig);\n        } catch (error) {\n\n        }\n        if (!conversionRate || conversionRate.isNaN()){\n          conversionRate = this.functionsUtil.BNify(0);\n        }\n      }\n\n      if (!conversionRate || this.functionsUtil.BNify(conversionRate).lte(0)){\n        return this.functionsUtil.BNify(0);\n      }\n\n      const tokenPool = await this.functionsUtil.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent,token,tokenConfig);\n\n      const idleDistributedPerYearUSD = this.functionsUtil.BNify(conversionRate).times(idleDistribution);\n      APR = idleDistributedPerYearUSD.div(tokenPool).times(100);\n\n      // console.log(tokenConfig.idle.token,idleDistributedPerYearUSD.toFixed(5),conversionRate.toFixed(5),tokenPool.toFixed(5),APR.toFixed(5));\n\n      return this.functionsUtil.setCachedData(cachedDataKey,APR);\n    }\n\n    return APR;\n  }\n\n  // Get IDLE distribution speed\n  getSpeed = async (idleTokenAddress) => {\n\n    const cachedDataKey = `getIdleSpeed_${idleTokenAddress}`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return this.functionsUtil.BNify(cachedData);\n    }\n\n    let idleSpeeds = await this.functionsUtil.genericContractCall('IdleController','idleSpeeds',[idleTokenAddress]);\n    if (idleSpeeds && !this.functionsUtil.BNify(idleSpeeds).isNaN()){\n      idleSpeeds = this.functionsUtil.BNify(idleSpeeds);\n      return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,idleSpeeds);\n    }\n    return null;\n  }\n\n  getDistribution = async (tokenConfig) => {\n\n    const cachedDataKey = `getIdleDistribution_${tokenConfig.idle.token}`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return this.functionsUtil.BNify(cachedData);\n    }\n\n    // Get IDLE distribution speed and Total Supply\n    const idleSpeeds = await this.getSpeed(tokenConfig.idle.address);\n\n    if (idleSpeeds){\n\n      // Get IDLE distribution for Idle in a Year\n      const blocksPerYear = this.functionsUtil.getGlobalConfig(['network','blocksPerYear']);\n\n      // Take 50% of distrubution for lenders side\n      const distribution = this.functionsUtil.BNify(idleSpeeds).times(this.functionsUtil.BNify(blocksPerYear)).div(1e18);\n\n      if (!this.functionsUtil.BNify(distribution).isNaN()){\n        return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,distribution);\n      }\n    }\n\n    return null;\n  }\n\n  getUserDistribution = async (account=null,availableTokens=null,fixByFrequency=false) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens){\n      return false;\n    }\n\n    let totalSpeed = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n\n      if (this.tokenConfig && this.tokenConfig.disabledTokens.includes(tokenConfig.idle.token)){\n        return;\n      }\n\n      const [\n        idleSpeed,\n        userPoolShare\n      ] = await Promise.all([\n        this.getSpeed(tokenConfig.idle.address),\n        this.functionsUtil.getUserPoolShare(account,tokenConfig)\n      ]);\n\n      if (idleSpeed && userPoolShare){\n        const tokenSpeed = idleSpeed.times(userPoolShare);\n        totalSpeed = totalSpeed.plus(tokenSpeed);\n      }\n    });\n\n    if (fixByFrequency){\n      totalSpeed = this.functionsUtil.fixTokenDecimals(totalSpeed,this.tokenConfig.decimals);\n      totalSpeed = this.functionsUtil.fixDistributionSpeed(totalSpeed,this.tokenConfig.distributionFrequency)\n    }\n\n    return totalSpeed;\n  }\n\n  getAvgApr = async (availableTokens=null) => {\n    if (!availableTokens){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n    let output = this.functionsUtil.BNify(0);\n    let totalAllocation = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [idleApr,tokenAllocation] = await Promise.all([\n        this.getAPR(token,tokenConfig),\n        this.functionsUtil.getTokenAllocation(tokenConfig,false,false)\n      ]);\n      \n      if (idleApr && tokenAllocation){\n        output = output.plus(idleApr.times(tokenAllocation.totalAllocation));\n        totalAllocation = totalAllocation.plus(tokenAllocation.totalAllocation);\n      }\n    });\n\n    output = output.div(totalAllocation);\n\n    return output;\n  }\n\n}\n\nexport default IdleGovToken;","import React from \"react\";\nimport axios from 'axios';\nimport moment from 'moment';\nimport { Text } from \"rimble-ui\";\nimport BigNumber from 'bignumber.js';\nimport IdleGovToken from './IdleGovToken';\nimport { toBuffer } from \"ethereumjs-util\";\nimport globalConfigs from '../configs/globalConfigs';\nimport ENS, { getEnsAddress } from '@ensdomains/ensjs';\n\nconst ethereumjsABI = require('ethereumjs-abi');\nconst env = process.env;\n\nclass FunctionsUtil {\n\n  // Attributes\n  props = {};\n  idleGovToken = null;\n\n  // Constructor\n  constructor(props){\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n  }\n  trimEth = eth => {\n    return this.BNify(eth).toFixed(6);\n  }\n  toBN = n => new this.props.web3.utils.BN(n)\n  toEth = wei => {\n    if (!this.props.web3){\n      return null;\n    }\n    return this.props.web3.utils.fromWei(\n      (wei || 0).toString(),\n      \"ether\"\n    );\n  }\n  toWei = eth => {\n    if (!this.props.web3){\n      return null;\n    }\n    return this.props.web3.utils.toWei(\n      (eth || 0).toString(),\n      \"ether\"\n    );\n  }\n  htmlDecode = input => {\n    var e = document.createElement('textarea');\n    e.innerHTML = input;\n    return e.childNodes.length === 0 ? '' : e.childNodes[0].nodeValue;\n  }\n  BNify_obj = s => new BigNumber(s)\n  BNify = s => new BigNumber( typeof s === 'object' ? s : String(s) )\n  customLog = (...props) => { if (globalConfigs.logs.messagesEnabled) this.customLog(moment().format('HH:mm:ss'),...props); }\n  customLogError = (...props) => { if (globalConfigs.logs.errorsEnabled) console.error(moment().format('HH:mm:ss'),...props); }\n  getContractByName = (contractName) => {\n    const contract = this.props.contracts.find(c => c.name === contractName);\n    if (!contract) {\n      return false;\n    }\n    return contract.contract;\n  }\n  normalizeSimpleIDNotification = (n) => {\n    return n.replace(/<\\/p><p>/g,\"\\n\")\n            .replace(/<p>/g,\"\")\n            .replace(/<br>/g,\"\")\n            .replace(/&nbsp;/g,\" \")\n            .replace(/<\\/p>/g,\"\");\n  }\n  capitalize = (str) => {\n    return str ? str.substr(0,1).toUpperCase()+str.substr(1) : '';\n  }\n  strToMoment = (date,format=null) => {\n    return moment(date,format);\n  }\n  replaceArrayProps = (arr1,arr2) => {\n    if (arr2 && Object.keys(arr2).length){\n      Object.keys(arr2).forEach(p => {\n        arr1[p] = arr2[p];\n      });\n    }\n\n    return arr1;\n  }\n  stripHtml = (html) => {\n     var tmp = document.createElement(\"DIV\");\n     tmp.innerHTML = html;\n     return tmp.textContent || tmp.innerText || \"\";\n  }\n  // VanillaJS function for smooth scroll\n  scrollTo = (to, duration) => {\n    const start = window.scrollY;\n    const change = to - start;\n    const increment = 20;\n    let currentTime = 0;\n\n    Math.easeInOutQuad = function (t, b, c, d) {\n      t /= d/2;\n      if (t < 1) return c/2*t*t + b;\n      t--;\n      return -c/2 * (t*(t-2) - 1) + b;\n    };\n\n    const animateScroll = () => {\n        currentTime += increment;\n        var val = Math.easeInOutQuad(currentTime, start, change, duration);\n        window.scrollTo(0,val);\n        if(currentTime < duration) {\n          window.setTimeout(animateScroll, increment);\n        }\n    };\n\n    animateScroll();\n  }\n  getQueryStringParameterByName = (name, url = window.location.href) => {\n    // eslint-disable-next-line\n    name = name.replace(/[\\[\\]]/g, '\\\\$&');\n    var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)'),\n        results = regex.exec(url);\n    if (!results) return null;\n    if (!results[2]) return '';\n    return decodeURIComponent(results[2].replace(/\\+/g, ' '));\n  }\n  getTxAction = (tx,tokenConfig) => {\n\n    const idleTokenAddress = tokenConfig.idle.address;\n    const depositProxyContractInfo = this.getGlobalConfig(['contract','methods','deposit','proxyContract']);\n    const migrationContractAddr = tokenConfig.migration && tokenConfig.migration.migrationContract ? tokenConfig.migration.migrationContract.address : null;\n    const migrationContractOldAddrs = tokenConfig.migration && tokenConfig.migration.migrationContract && tokenConfig.migration.migrationContract.oldAddresses ? tokenConfig.migration.migrationContract.oldAddresses : [];\n    const batchMigration = this.getGlobalConfig(['tools','batchMigration','props','availableTokens',tokenConfig.idle.token]);\n    const batchMigrationContractAddr = batchMigration && batchMigration.migrationContract ? batchMigration.migrationContract.address : null;\n\n    const isBatchMigrationTx = batchMigrationContractAddr && tx.from.toLowerCase() === batchMigrationContractAddr.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase();    \n    const isMigrationTx = isBatchMigrationTx || (migrationContractAddr && (tx.from.toLowerCase() === migrationContractAddr.toLowerCase() || migrationContractOldAddrs.map((v) => { return v.toLowerCase(); }).indexOf(tx.from.toLowerCase()) !== -1 ) && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase());\n    const isSendTransferTx = !isMigrationTx && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n    const isReceiveTransferTx = !isMigrationTx && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n    const isDepositTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && (tx.to.toLowerCase() === idleTokenAddress.toLowerCase() || (depositProxyContractInfo && tx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase()));\n    const isRedeemTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && tx.to.toLowerCase() === this.props.account.toLowerCase();\n    const isSwapTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && !isDepositTx && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n\n    let action = null;\n\n    if (isDepositTx){\n      action = 'Deposit';\n    } else if (isRedeemTx){\n      action = 'Redeem';\n    } else if (isMigrationTx){\n      action = 'Migrate';\n    } else if (isSendTransferTx){\n      action = 'Send';\n    } else if (isReceiveTransferTx){\n      action = 'Receive';\n    } else if (isSwapTx){\n      action = 'Swap';\n    } else if (isSwapTx){\n      action = 'SwapOut';\n    }\n\n    return action;\n  }\n  shortenHash = hash => {\n    let shortHash = hash;\n    const txStart = shortHash.substr(0, 7);\n    const txEnd = shortHash.substr(shortHash.length - 4);\n    shortHash = txStart + \"...\" + txEnd;\n    return shortHash;\n  }\n  getENSName = async (address) => {\n\n    const networkId = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n    const ensConfig = this.getGlobalConfig(['network','providers','ens']);\n\n    if (!ensConfig.enabled || !ensConfig.supportedNetworks.includes(networkId)){\n      return null;\n    }\n\n    if (!this.checkAddress(address) || !this.props.web3){\n      return null;\n    }\n\n    const cachedDataKey = `getENSName_${address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const TTL = 3600;\n    const provider = this.props.web3.currentProvider;\n    if (networkId === 1){\n      const ens = new ENS({ provider, ensAddress: getEnsAddress(networkId.toString()) });\n      const ensName = await ens.getName(address);\n      if (ensName && ensName.name){\n        const addressCheck = await ens.name(ensName.name).getAddress();\n        if (addressCheck && address.toLowerCase() === addressCheck.toLowerCase()){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,ensName.name,TTL);\n        }\n      }\n    }\n\n    return null;\n  }\n  getAccountPortfolio = async (availableTokens=null,account=null) => {\n    const portfolio = {\n      tokensBalance:{},\n      avgAPY:this.BNify(0),\n      totalBalance:this.BNify(0),\n      totalEarnings:this.BNify(0),\n      totalAmountLent:this.BNify(0),\n      totalEarningsPerc:this.BNify(0),\n      totalBalanceConverted:this.BNify(0)\n    };\n\n    availableTokens = availableTokens ? availableTokens : this.props.availableTokens;\n    account = account ? account : this.props.account;\n\n    if (!account || !availableTokens){\n      return portfolio;\n    }\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const idleTokenBalance = await this.getTokenBalance(tokenConfig.idle.token,account);\n\n      if (idleTokenBalance){\n        const tokenPrice = await this.getIdleTokenPrice(tokenConfig);\n        const tokenBalance = idleTokenBalance.times(tokenPrice);\n        const tokenBalanceConverted = await this.convertTokenBalance(tokenBalance,token,tokenConfig,isRisk);\n\n        if (!tokenPrice.isNaN() && !tokenBalance.isNaN()){\n          portfolio.tokensBalance[token] = {\n            tokenPrice,\n            tokenBalance,\n            idleTokenBalance,\n            tokenBalanceConverted\n          };\n\n          // Increment total balance\n          portfolio.totalBalance = portfolio.totalBalance.plus(tokenBalance);\n          portfolio.totalBalanceConverted = portfolio.totalBalanceConverted.plus(tokenBalanceConverted);\n        }\n      }\n    });\n\n    const orderedTokensBalance = {};\n    Object.keys(availableTokens).forEach( token => {\n      if (portfolio.tokensBalance[token]){\n        orderedTokensBalance[token] = portfolio.tokensBalance[token];\n      }\n    });\n\n    portfolio.tokensBalance = orderedTokensBalance;\n\n    const depositedTokens = Object.keys(portfolio.tokensBalance).filter(token => ( this.BNify(portfolio.tokensBalance[token].idleTokenBalance).gt(0) ));\n\n    let avgAPY = this.BNify(0);\n    let totalEarnings = this.BNify(0);\n    let totalAmountLent = this.BNify(0);\n    let totalEarningsPerc = this.BNify(0);\n    // const amountLents = await this.getAmountLent(depositedTokens,this.props.account);\n\n    await this.asyncForEach(depositedTokens,async (token) => {\n      const tokenConfig = availableTokens[token];\n      const amountDeposited = await this.getAmountDeposited(tokenConfig,account);\n\n      // console.log(token,'amountDeposited',amountDeposited.toString(),'amountLent',amountLents[token].toString());\n\n      const tokenBalanceConverted = portfolio.tokensBalance[token].tokenBalanceConverted;\n      const [\n        tokenAprs\n        // tokenEarnings\n      ] = await Promise.all([\n        this.getTokenAprs(tokenConfig)\n        // this.loadAssetField('earnings',token,tokenConfig,this.props.account,false),\n      ]);\n\n      const tokenAPY = this.BNify(tokenAprs.avgApy);\n      const tokenWeight = tokenBalanceConverted.div(portfolio.totalBalanceConverted);\n      const amountLentToken = await this.convertTokenBalance(amountDeposited,token,tokenConfig,isRisk);\n      const tokenEarnings = tokenBalanceConverted.minus(amountLentToken);\n\n      if (tokenEarnings){\n        totalEarnings = totalEarnings.plus(tokenEarnings);\n      }\n\n      if (tokenAPY){\n        avgAPY = avgAPY.plus(tokenAPY.times(tokenWeight));\n      }\n\n      if (amountLentToken){\n        totalAmountLent = totalAmountLent.plus(amountLentToken);\n      }\n\n      // console.log(token,amountLentToken.toFixed(),tokenEarnings.toFixed(),tokenBalanceConverted.toFixed());\n    });\n\n    if (totalAmountLent.gt(0)){\n      totalEarningsPerc = totalEarnings.div(totalAmountLent).times(100);\n    }\n\n    portfolio.avgAPY = avgAPY;\n    portfolio.totalEarnings = totalEarnings;\n    portfolio.totalAmountLent = totalAmountLent;\n    portfolio.totalEarningsPerc = totalEarningsPerc;\n\n    // debugger;\n\n    return portfolio;\n  }\n  getCurveAvgSlippage = async (enabledTokens=[],account=null,fixDecimals=true) => {\n    account = account ? account : this.props.account;\n\n    if (!account){\n      return [];\n    }\n\n    const availableTokens = this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    let processedTxs = {};\n    const processedHashes = {};\n    let curveTokensBalance = this.BNify(0);\n    const curveTxs = await this.getCurveTxs(account,0,'latest',enabledTokens);\n\n    if (curveTxs && curveTxs.length){\n\n      curveTxs.forEach((tx,index) => {\n\n        // Skip transactions with no hash\n        if (!tx.hash || !tx.curveTokens || !tx.curveTokenPrice){\n          return false;\n        }\n\n        const tokenAmount = this.BNify(tx.tokenAmount);\n        let curveTokens = this.BNify(tx.curveTokens);\n        const curveTokenPrice = this.BNify(tx.curveTokenPrice);\n\n        switch (tx.action){\n          case 'CurveIn':\n          case 'CurveZapIn':\n          case 'CurveDepositIn':\n          case 'CurveTransferIn':\n            if (tx.action === 'CurveTransferIn'){\n              if (index>0 && curveTokensBalance.gt(0)){\n                return;\n              }\n            }\n\n            if (!processedTxs[tx.hash]){\n              processedTxs[tx.hash] = {\n                price:null,\n                received:null,\n                slippage:null,\n                deposited:this.BNify(0),\n              };\n            }\n\n            processedTxs[tx.hash].deposited = processedTxs[tx.hash].deposited.plus(tokenAmount);\n            if (processedTxs[tx.hash].received === null){\n              processedTxs[tx.hash].price = curveTokenPrice;\n              processedTxs[tx.hash].received = curveTokens.times(curveTokenPrice);\n            }\n\n            // this.customLog('getCurveAvgSlippage',tx.action,tx.hash,tx.blockNumber,curveTokens.toFixed(6),curveTokenPrice.toFixed(6),processedTxs[tx.hash].deposited.toFixed(6),processedTxs[tx.hash].received.toFixed(6));\n          break;\n          case 'CurveOut':\n          case 'CurveZapOut':\n          case 'CurveDepositOut':\n            curveTokens = curveTokens.times(this.BNify(-1));\n          break;\n          default:\n          break;\n        }\n\n        // Update curveTokens balance\n        if (!processedHashes[tx.hash]){\n          curveTokensBalance = curveTokensBalance.plus(curveTokens);\n          if (curveTokensBalance.lte(0)){\n            curveTokensBalance = this.BNify(0);\n\n            // Reset processed transactions\n            // processedTxs = {};\n          }\n          processedHashes[tx.hash] = true;\n        }\n      });\n    }\n\n    // this.customLog('processedTxs',processedTxs);\n\n    let avgSlippage = this.BNify(0);\n    let totalDeposited = this.BNify(0);\n    Object.values(processedTxs).forEach( tx => {\n      const slippage = tx.received.div(tx.deposited).minus(1);\n      avgSlippage = avgSlippage.plus(slippage.times(tx.deposited));\n      totalDeposited = totalDeposited.plus(tx.deposited);\n    });\n\n    avgSlippage = avgSlippage.div(totalDeposited).times(-1);\n\n    // debugger;\n    // this.customLog('avgSlippage',avgSlippage.toString());\n\n    return avgSlippage;\n  }\n  getCurveAvgBuyPrice = async (enabledTokens=[],account=null) => {\n    account = account ? account : this.props.account;\n\n    if (!account){\n      return [];\n    }\n\n    const availableTokens = this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    const processedTxs = {};\n    let avgBuyPrice = this.BNify(0);\n    let curveTokensBalance = this.BNify(0);\n    const curveTxs = await this.getCurveTxs(account,0,'latest',enabledTokens);\n\n    // this.customLog('curveTxs',curveTxs);\n\n    if (curveTxs && curveTxs.length){\n\n      curveTxs.forEach((tx,index) => {\n\n        if (!processedTxs[tx.hash]){\n          processedTxs[tx.hash] = [];\n        }\n\n        if (processedTxs[tx.hash].includes(tx.action)){\n          return;\n        }\n\n        // Skip transactions with no hash\n        if (!tx.hash || !tx.curveTokens || !tx.curveTokenPrice){\n          return false;\n        }\n\n        const prevAvgBuyPrice = avgBuyPrice;\n        let curveTokens = this.BNify(tx.curveTokens);\n        const curveTokenPrice = this.BNify(tx.curveTokenPrice);\n\n        // Deposited\n        switch (tx.action){\n          case 'CurveIn':\n          case 'CurveZapIn':\n          case 'CurveDepositIn':\n          case 'CurveTransferIn':\n            if (tx.action === 'CurveTransferIn'){\n              if (index>0 && curveTokensBalance.gt(0)){\n                return;\n              }\n            }\n            avgBuyPrice = curveTokens.times(curveTokenPrice).plus(prevAvgBuyPrice.times(curveTokensBalance)).div(curveTokensBalance.plus(curveTokens));\n          break;\n          case 'CurveOut':\n          case 'CurveZapOut':\n          case 'CurveDepositOut':\n          // case 'CurveTransferOut':\n            curveTokens = curveTokens.times(this.BNify(-1));\n          break;\n          default:\n          break;\n        }\n        \n        // Update curveTokens balance\n        curveTokensBalance = curveTokensBalance.plus(curveTokens);\n        if (curveTokensBalance.lte(0)){\n          avgBuyPrice = this.BNify(0);\n          curveTokensBalance = this.BNify(0);\n        }\n\n        processedTxs[tx.hash].push(tx.action);\n\n        // this.customLog('getCurveAvgBuyPrice',tx.action,tx.hash,tx.blockNumber,curveTokens.toString(),curveTokenPrice.toString(),curveTokensBalance.toString(),avgBuyPrice.toString());\n      });\n    }\n\n    // this.customLog('avgCurveBuyPrice',avgBuyPrice.toString());\n\n    return avgBuyPrice;\n  }\n  getAvgBuyPrice = async (enabledTokens=[],account) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens){\n      return [];\n    }\n\n    const output = {};\n    const etherscanTxs = await this.getEtherscanTxs(account,0,'latest',enabledTokens);\n\n    enabledTokens.forEach( selectedToken => {\n\n      output[selectedToken] = [];\n      let avgBuyPrice = this.BNify(0);\n\n      let idleTokensBalance= this.BNify(0);\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n\n      if (filteredTxs && filteredTxs.length){\n\n        filteredTxs.forEach((tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.idleTokens || !tx.tokenPrice){\n            return false;\n          }\n\n          const prevAvgBuyPrice = avgBuyPrice;\n          let idleTokens = this.BNify(tx.idleTokens);\n          const tokenPrice = this.BNify(tx.tokenPrice);\n\n          // Deposited\n          switch (tx.action){\n            case 'Deposit':\n            case 'Receive':\n            case 'Swap':\n            case 'Migrate':\n            case 'CurveOut':\n              avgBuyPrice = idleTokens.times(tokenPrice).plus(prevAvgBuyPrice.times(idleTokensBalance)).div(idleTokensBalance.plus(idleTokens));\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              idleTokens = idleTokens.times(this.BNify(-1));\n            break;\n            default:\n            break;\n          }\n\n          // Update idleTokens balance\n          idleTokensBalance = idleTokensBalance.plus(idleTokens);\n          if (idleTokensBalance.lte(0)){\n            avgBuyPrice = this.BNify(0);\n            idleTokensBalance = this.BNify(0);\n          }\n\n        });\n      }\n\n      // Add token Data\n      output[selectedToken] = avgBuyPrice;\n    });\n\n    return output;\n  }\n  getFirstDepositTx = async (enabledTokens=[],account) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens){\n      return [];\n    }\n\n    const etherscanTxs = await this.getEtherscanTxs(account,0,'latest',enabledTokens);\n\n    const deposits = {};\n\n    enabledTokens.forEach((selectedToken) => {\n      let amountLent = this.BNify(0);\n      let firstDepositTx = null;\n      deposits[selectedToken] = firstDepositTx;\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        filteredTxs.forEach((tx,index) => {\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.tokenAmount){\n            return false;\n          }\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n              amountLent = amountLent.plus(tx.tokenAmount);\n              if (!firstDepositTx){\n                firstDepositTx = tx;\n              }\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tx.tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.BNify(0);\n            firstDepositTx = null;\n          }\n        });\n      }\n\n      // Add token Data\n      deposits[selectedToken] = firstDepositTx;\n    });\n\n    return deposits;\n  }\n  asyncTimeout = (ms) => {\n    return new Promise(resolve => setTimeout(resolve, ms));\n  }\n  getDepositTimestamp = async (enabledTokens=[],account) => {\n    const firstDepositTxs = await this.getFirstDepositTx(enabledTokens,account);\n    if (firstDepositTxs){\n      return Object.keys(firstDepositTxs).reduce( (acc,token) => {\n        if (firstDepositTxs[token]){\n          acc[token] = firstDepositTxs[token].timeStamp;\n        }\n        return acc;\n      },{});\n    }\n\n    return null;\n  }\n  getAmountDeposited = async (tokenConfig,account) => {\n    let [tokenBalance,userAvgPrice] = await Promise.all([\n      this.getTokenBalance(tokenConfig.idle.token,account),\n      this.genericContractCall(tokenConfig.idle.token, 'userAvgPrices', [account])\n    ]);\n\n    if (tokenBalance && userAvgPrice){\n      userAvgPrice = this.fixTokenDecimals(userAvgPrice,tokenConfig.decimals);\n      const amountDeposited = tokenBalance.times(userAvgPrice);\n      return amountDeposited;\n    }\n\n    return null;\n  }\n  getAmountLent = async (enabledTokens=[],account) => {\n\n    account = account || this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens){\n      return [];\n    }\n\n    const etherscanTxs = await this.getEtherscanTxs(account,0,'latest',enabledTokens,false);\n\n    const amountLents = {};\n\n    enabledTokens.forEach((selectedToken) => {\n      let amountLent = this.BNify(0);\n      amountLents[selectedToken] = amountLent;\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        filteredTxs.forEach((tx,index) => {\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.tokenAmount){\n            return false;\n          }\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n            case 'CurveOut':\n              amountLent = amountLent.plus(tx.tokenAmount);\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tx.tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.BNify(0);\n          }\n        });\n      }\n\n      // Add token Data\n      amountLents[selectedToken] = amountLent;\n    });\n\n    // debugger;\n\n    return amountLents;\n  }\n  getEtherscanBaseTxs = async (account=false,firstBlockNumber=0,endBlockNumber='latest',enabledTokens=[],debug=false) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length){\n      return [];\n    }\n\n    account = account.toLowerCase();\n\n    const selectedStrategy = this.props.selectedStrategy;\n\n    // Check if firstBlockNumber is less that firstIdleBlockNumber\n    const firstIdleBlockNumber = this.getGlobalConfig(['network','firstBlockNumber']);\n    firstBlockNumber = Math.max(firstIdleBlockNumber,firstBlockNumber);\n\n    const requiredNetwork = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n    const etherscanInfo = this.getGlobalConfig(['network','providers','etherscan']);\n\n    let results = [];\n    let etherscanBaseTxs = null;\n    let etherscanBaseEndpoint = null;\n\n    // Check if etherscan is enabled for the required network\n    if (etherscanInfo.enabled && etherscanInfo.endpoints[requiredNetwork]){\n      const etherscanApiUrl = etherscanInfo.endpoints[requiredNetwork];\n\n      // Get base endpoint cached transactions\n      etherscanBaseEndpoint = `${etherscanApiUrl}?strategy=${selectedStrategy}&apikey=${env.REACT_APP_ETHERSCAN_KEY}&module=account&action=tokentx&address=${account}&startblock=${firstIdleBlockNumber}&endblock=${endBlockNumber}&sort=asc`;\n      etherscanBaseTxs = this.getCachedRequest(etherscanBaseEndpoint);\n\n      if (debug){\n        console.log('DEBUG - CACHED - etherscanBaseTxs',etherscanBaseTxs);\n      }\n\n      // Check if the latest blockNumber is actually the latest one\n      if (etherscanBaseTxs && etherscanBaseTxs.data.result && Object.values(etherscanBaseTxs.data.result).length){\n\n        const lastCachedTx = Object.values(etherscanBaseTxs.data.result).pop();\n        const lastCachedBlockNumber = lastCachedTx && lastCachedTx.blockNumber ? parseInt(lastCachedTx.blockNumber)+1 : firstBlockNumber;\n\n        const etherscanEndpointLastBlock = `${etherscanApiUrl}?strategy=${selectedStrategy}&apikey=${env.REACT_APP_ETHERSCAN_KEY}&module=account&action=tokentx&address=${account}&startblock=${lastCachedBlockNumber}&endblock=${endBlockNumber}&sort=asc`;\n        let latestTxs = await this.makeCachedRequest(etherscanEndpointLastBlock,15);\n\n        if (latestTxs && latestTxs.data.result && latestTxs.data.result.length){\n          \n          latestTxs = await this.filterEtherscanTxs(latestTxs.data.result,enabledTokens,true,false);\n\n          if (latestTxs && Object.values(latestTxs).length){\n\n            const latestBlockNumbers = Object.values(latestTxs).map( lastTx => (parseInt(lastTx.blockNumber)) );\n            const lastRealBlockNumber = Math.max(...latestBlockNumbers);\n\n            // If real tx blockNumber differs from last blockNumber\n            if (lastRealBlockNumber>=lastCachedBlockNumber){\n              // Merge latest Txs with etherscanBaseTxs\n              Object.values(latestTxs).forEach((tx) => {\n                const txFound = Object.keys(etherscanBaseTxs.data.result).includes(tx.hashKey);\n                if (!txFound){\n                  etherscanBaseTxs.data.result[tx.hashKey] = tx;\n                }\n              });\n\n              // Save etherscan txs\n              this.saveEtherscanTxs(etherscanBaseEndpoint,etherscanBaseTxs.data.result);\n            }\n          }\n        }\n      } else {\n        etherscanBaseTxs = null;\n      }\n\n      let txs = etherscanBaseTxs;\n\n      if (debug){\n        console.log('DEBUG - txs',txs);\n      }\n\n      if (!txs){\n        // Make request\n        txs = await this.makeRequest(etherscanBaseEndpoint);\n\n        // console.log('makeRequest 1',account,etherscanBaseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n\n        if (!txs || !txs.data || parseInt(txs.data.status)===0){\n          let requestCount = 0;\n          let requestStatus = false;\n          do {\n            await this.asyncTimeout(500);\n            txs = await this.makeRequest(etherscanBaseEndpoint);\n            requestCount++;\n            requestStatus = txs && txs.data ? parseInt(txs.data.status) : false;\n            // console.log('makeRequest '+(requestCount+1),account,etherscanBaseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n          } while (requestCount<5 && !requestStatus);\n        }\n\n        // Cache request\n        if (txs && txs.data && parseInt(txs.data.status)>0){\n          const timestamp = parseInt(Date.now()/1000);\n          const cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n          cachedRequests[etherscanBaseEndpoint] = {\n            data:txs,\n            timestamp\n          };\n          this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n        }\n      }\n\n      if (txs && txs.data && txs.data.result){\n        results = txs.data.result;\n      } else {\n        return [];\n      }\n    }\n\n    return {\n      results,\n      etherscanBaseTxs,\n      etherscanBaseEndpoint\n    };\n  }\n  getCurveTxs = async (account=false,firstBlockNumber=0,endBlockNumber='latest',enabledTokens=[]) => {\n    const results = await this.getEtherscanTxs(account,firstBlockNumber,endBlockNumber,enabledTokens);\n    // results = results ? Object.values(results) : [];\n    return this.filterCurveTxs(results,enabledTokens);\n  }\n  saveEtherscanTxs = (endpoint,txs) => {\n    const txsToStore = {};\n    Object.keys(txs).forEach(txHash => {\n      const tx = txs[txHash];\n      if (tx.blockNumber && (!tx.status || tx.status.toLowerCase() !== 'pending')){\n        txsToStore[txHash] = tx;\n      }\n    });\n\n    // Save new cached data\n    const cachedRequest = {\n      data:{\n        result:txsToStore\n      }\n    };\n    this.saveCachedRequest(endpoint,false,cachedRequest);\n  }\n  getEtherscanTxs = async (account=false,firstBlockNumber=0,endBlockNumber='latest',enabledTokens=[],debug=false) => {\n    const {\n      results,\n      etherscanBaseTxs,\n      etherscanBaseEndpoint\n    } = await this.getEtherscanBaseTxs(account,firstBlockNumber,endBlockNumber,enabledTokens,debug);\n\n    // Initialize prevTxs\n    let etherscanTxs = {};\n    if (etherscanBaseTxs){\n      // Filter txs for token\n      etherscanTxs = await this.processStoredTxs(results,enabledTokens);\n    } else {\n      const allAvailableTokens = Object.keys(this.props.availableTokens);\n      // Save base endpoint with all available tokens\n      etherscanTxs = await this.filterEtherscanTxs(results,allAvailableTokens);\n\n      // Store filtered txs\n      if (etherscanTxs && Object.keys(etherscanTxs).length){\n        this.saveEtherscanTxs(etherscanBaseEndpoint,etherscanTxs);\n      }\n    }\n\n    if (debug){\n      console.log('DEBUG - getEtherscanTxs -',etherscanTxs);\n    }\n\n    return Object\n            .values(etherscanTxs)\n            .filter(tx => (tx.token && enabledTokens.includes(tx.token.toUpperCase())))\n            .sort((a,b) => (a.timeStamp < b.timeStamp ? -1 : 1));\n  }\n  filterCurveTxs = async (results,enabledTokens=[]) => {\n\n    if (!results || !results.length || typeof results.forEach !== 'function'){\n      return [];\n    }\n\n    const availableTokens = this.props.availableTokens ? this.props.availableTokens : this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    const curveTxs = results.filter( tx => (enabledTokens.includes(tx.token) && ['CurveIn','CurveOut','CurveZapIn','CurveZapOut','CurveTransferIn','CurveTransferOut','CurveDepositIn','CurveDepositOut'].includes(tx.action)) );\n\n    if (curveTxs.length){\n      curveTxs.sort((a,b) => (a.timeStamp < b.timeStamp ? -1 : 1));\n    }\n\n    return curveTxs;\n  }\n  filterEtherscanTxs = async (results,enabledTokens=[],processTxs=true,processStoredTxs=true) => {\n    if (!this.props.account || !results || !results.length || typeof results.forEach !== 'function'){\n      return [];\n    }\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let etherscanTxs = {};\n    let curveTransfersTxs = [];\n    let curveTransfersTxsToDelete = [];\n\n    // const idleTokensAddresses = Object.values(this.props.availableTokens).map( tokenConfig => (tokenConfig.idle.address) );\n    const curveZapContract = this.getGlobalConfig(['curve','zapContract']);\n    const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n    const curveSwapContract = this.getGlobalConfig(['curve','migrationContract']);\n    const curveDepositContract = this.getGlobalConfig(['curve','depositContract']);\n\n    // this.customLog('filterEtherscanTxs',enabledTokens,results);\n\n    enabledTokens.forEach(token => {\n      const tokenConfig = this.props.availableTokens[token];\n      const depositProxyContractInfo = this.getGlobalConfig(['contract','methods','deposit','proxyContract']);\n      const migrationContractAddr = tokenConfig.migration && tokenConfig.migration.migrationContract ? tokenConfig.migration.migrationContract.address : null;\n      const migrationContractOldAddrs = tokenConfig.migration && tokenConfig.migration.migrationContract && tokenConfig.migration.migrationContract.oldAddresses ? tokenConfig.migration.migrationContract.oldAddresses : [];\n      const tokenMigrationToolParams = this.getGlobalConfig(['tools','tokenMigration','props','migrationContract']);\n\n      const batchMigration = this.getGlobalConfig(['tools','batchMigration','props','availableTokens',tokenConfig.idle.token]);\n      const batchMigrationContractAddr = batchMigration && batchMigration.migrationContract ? batchMigration.migrationContract.address : null;\n\n      // const curveEnabled = this.getGlobalConfig(['curve','enabled']);\n      const curveTokenConfig = this.getGlobalConfig(['curve','availableTokens',tokenConfig.idle.token]);\n\n      results.forEach( tx => {\n        let tokenDecimals = tokenConfig.decimals;\n        const idleToken = tokenConfig.idle.token;\n        const internalTxs = results.filter(r => r.hash === tx.hash);\n        const isRightToken = internalTxs.length>1 && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase()).length>0;\n        const isSendTransferTx = internalTxs.length === 1 && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isReceiveTransferTx = internalTxs.length === 1 && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isBatchMigrationTx = batchMigrationContractAddr && tx.from.toLowerCase() === batchMigrationContractAddr.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase();\n\n        const isDepositInternalTx = isRightToken && internalTxs.find( iTx => iTx.from.toLowerCase() === this.props.account.toLowerCase() && (iTx.to.toLowerCase() === tokenConfig.idle.address.toLowerCase() || (depositProxyContractInfo && iTx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase() && internalTxs.filter(iTx2 => iTx2.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length>0 )) );\n        const isRedeemInternalTx = isRightToken && internalTxs.find( iTx => iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && internalTxs.filter(iTx2 => iTx2.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length && iTx.to.toLowerCase() === this.props.account.toLowerCase() );\n\n        const isMigrationTx = isBatchMigrationTx || (migrationContractAddr && (tx.from.toLowerCase() === migrationContractAddr.toLowerCase() || migrationContractOldAddrs.map((v) => { return v.toLowerCase(); }).includes(tx.from.toLowerCase()) ) && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase());\n        const isConversionTx = tokenMigrationToolParams && (tx.from.toLowerCase() === tokenMigrationToolParams.address.toLowerCase() || tokenMigrationToolParams.oldAddresses.map((v) => { return v.toLowerCase(); }).includes(tx.from.toLowerCase())) && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isDepositTx = isRightToken && !isMigrationTx && tx.from.toLowerCase() === this.props.account.toLowerCase() && (tx.to.toLowerCase() === tokenConfig.idle.address.toLowerCase() || (depositProxyContractInfo && tx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase() && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length>0 ));\n        const isRedeemTx = isRightToken && !isMigrationTx && !isDepositInternalTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length && tx.to.toLowerCase() === this.props.account.toLowerCase();\n        const isWithdrawTx = internalTxs.length>1 && internalTxs.filter(iTx => tokenConfig.protocols.map(p => p.address.toLowerCase()).includes(iTx.contractAddress.toLowerCase()) ).length>0 && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n\n        // const curveDepositTx = internalTxs.find( iTx => (iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && iTx.from.toLowerCase() === this.props.account.toLowerCase()) );\n        const idleTokenAddress = curveTokenConfig && curveTokenConfig.address ? curveTokenConfig.address : tokenConfig.idle.address;\n\n        // Check Curve\n        const curveTx = internalTxs.find( tx => (tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && (tx.to.toLowerCase() === this.props.account.toLowerCase() || tx.from.toLowerCase() === this.props.account.toLowerCase()) ) );\n        const isCurveTx = curveTx !== undefined;\n\n        const isCurveDepositTx = isCurveTx && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase() && tx.to.toLowerCase() === curveSwapContract.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveRedeemTx = isCurveTx && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveSwapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveDepositIn = isCurveTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.to.toLowerCase() === curveDepositContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveDepositOut = isCurveTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveDepositContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveZapIn = isCurveTx && tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveZapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveZapOut = isCurveTx && tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.to.toLowerCase() === curveZapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveTransferOut = tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && !isCurveZapOut && !isCurveRedeemTx && /*internalTxs[internalTxs.length-1] === tx &&*/ tx.from.toLowerCase() === this.props.account.toLowerCase();\n        const isCurveTransferIn = tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && !isCurveZapIn && !isCurveDepositTx && /*internalTxs[internalTxs.length-1] === tx &&*/ tx.to.toLowerCase() === this.props.account.toLowerCase();\n\n        const isSwapOutTx = !isCurveTx && !isSendTransferTx && !isWithdrawTx && !isRedeemInternalTx && !etherscanTxs[tx.hash] && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isSwapTx = !isCurveTx && !isReceiveTransferTx && !isConversionTx && !isDepositInternalTx && !etherscanTxs[tx.hash] && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n\n        // if (tx.hash.toLowerCase() === '0x599a2e7b0094b0a943ffb1d520cb47598dcf3764145c33824e3b032d91ccc489'.toLowerCase()){\n        //   debugger;\n        // }\n\n        if (isSendTransferTx || isReceiveTransferTx || isMigrationTx || isDepositTx || isRedeemTx || isSwapTx || isSwapOutTx || isWithdrawTx || isConversionTx || isCurveDepositTx || isCurveRedeemTx || isCurveZapIn || isCurveZapOut || isCurveTransferOut || isCurveTransferIn || isCurveDepositIn || isCurveDepositOut){\n\n          let action = null;\n          let hashKey = tx.hash;\n\n          if (isDepositTx){\n            action = 'Deposit';\n          } else if (isRedeemTx){\n            action = 'Redeem';\n          } else if (isMigrationTx || isConversionTx){\n            action = 'Migrate';\n          } else if (isSendTransferTx){\n            action = 'Send';\n          } else if (isReceiveTransferTx){\n            action = 'Receive';\n          } else if (isSwapTx){\n            action = 'Swap';\n          } else if (isSwapOutTx){\n            action = 'SwapOut';\n          } else if (isWithdrawTx){\n            action = 'Withdraw';\n          } else if (isCurveDepositTx){\n            action = 'CurveIn';\n          } else if (isCurveRedeemTx){\n            action = 'CurveOut';\n          } else if (isCurveZapIn){\n            action = 'CurveZapIn';\n          } else if (isCurveZapOut){\n            action = 'CurveZapOut';\n          } else if (isCurveDepositIn){\n            action = 'CurveDepositIn';\n          } else if (isCurveDepositOut){\n            action = 'CurveDepositOut';\n          } else if (isCurveTransferIn){\n            action = 'CurveTransferIn';\n          } else if (isCurveTransferOut){\n            action = 'CurveTransferOut';\n          }\n\n          let curveTokens = null;\n          if (isCurveTx){\n            hashKey += '_'+tx.tokenSymbol;\n            curveTokens = this.fixTokenDecimals(curveTx.value,curvePoolContract.decimals);\n\n            // Add action for curve tokens transfers\n            if ((isCurveTransferIn || isCurveTransferOut)){\n              hashKey+='_'+action;\n            }\n          }\n\n          // this.customLog('SAVE!',action);\n\n          if (tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()){\n            tokenDecimals = 18;\n          } else if (isCurveTx){\n            tokenDecimals = parseInt(tx.tokenDecimal);\n          }\n\n          // Sum the value if already processed\n          if (etherscanTxs[hashKey]){\n            // Prevent second internal tx to sum SwapOut original value\n            switch (etherscanTxs[hashKey].action){\n              case 'SwapOut':\n                if (etherscanTxs[hashKey].action !== action && isRedeemTx){\n                  etherscanTxs[hashKey].tokenValue = this.fixTokenDecimals(tx.value,tokenDecimals);\n                }\n              break;\n              default:\n                if (!curveTx){\n                  const newValue = etherscanTxs[hashKey].value.plus(this.fixTokenDecimals(tx.value,tokenDecimals));\n                  etherscanTxs[hashKey].value = newValue;\n                }\n              break;\n            }\n          } else {\n            // Insert tx in curve transfers buffer\n            if (isCurveTransferIn || isCurveTransferOut){\n              if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())){\n                curveTokens = this.fixTokenDecimals(tx.value,curvePoolContract.decimals);\n                curveTransfersTxs.push({...tx, hashKey, token, idleToken, curveTokens, action, value: this.fixTokenDecimals(tx.value,tokenDecimals)});\n              }\n            } else {\n              etherscanTxs[hashKey] = ({...tx, hashKey, token, idleToken, curveTokens, action, value: this.fixTokenDecimals(tx.value,tokenDecimals)});\n\n              // Delete curveTransfers\n              if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())){\n                curveTransfersTxsToDelete.push(tx.hash.toLowerCase());\n              }\n\n              // Take right tokenSymbol\n              switch (action){\n                case 'Withdraw':\n                  const iTxs = internalTxs.filter(iTx => (iTx !== tx));\n                  if (iTxs.length>0){\n                    const iTx = iTxs[0];\n                    etherscanTxs[hashKey].withdrawnValue = this.fixTokenDecimals(iTx.value,iTx.tokenDecimal);\n                    etherscanTxs[hashKey].tokenSymbol = iTx.tokenSymbol;\n                  }\n                break;\n                case 'CurveIn':\n                case 'CurveOut':\n                case 'CurveZapIn':\n                case 'CurveZapOut':\n                case 'CurveDepositIn':\n                case 'CurveDepositOut':\n                  etherscanTxs[hashKey].tokenSymbol = token;\n                break;\n                default:\n                break;\n              }\n            }   \n          }\n        }\n      });\n    });\n    \n    curveTransfersTxs.forEach( tx => {\n      if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())){\n        etherscanTxs[tx.hashKey] = tx;\n      }\n    });\n  \n    if (processTxs){\n      etherscanTxs = await this.processEtherscanTransactions(etherscanTxs,enabledTokens,processStoredTxs);\n    }\n\n    // console.log('etherscanTxs',etherscanTxs);\n\n    return etherscanTxs;\n  }\n  addStoredTransaction = (txKey,transaction) => {\n\n    const account = this.props && this.props.account ? this.props.account : null;\n    const selectedToken = this.props && this.props.selectedToken ? this.props.selectedToken : null;\n\n    if (!account || !selectedToken || !this.props.availableTokens || !this.props.availableTokens[selectedToken]){\n      return false;\n    }\n\n    const tokenConfig = this.props.availableTokens[selectedToken];\n    const tokenKey = tokenConfig.idle.token;\n\n    let storedTxs = this.getStoredTransactions();\n    if (!storedTxs[account]){\n      storedTxs[account] = {};\n    }\n\n    if (!storedTxs[account][tokenKey]){\n      storedTxs[account][tokenKey] = {};\n    }\n\n    storedTxs[account][tokenKey][txKey] = transaction;\n    this.updateStoredTransactions(storedTxs);\n  }\n  updateStoredTransactions = transactions => {\n    this.setLocalStorage('transactions',JSON.stringify(transactions));\n  }\n  /*\n  Merge storedTxs with this.props.transactions\n  */\n  getStoredTransactions = (account=null,tokenKey=null,selectedToken=null) => {\n    const storedTxs = this.getStoredItem('transactions',true,{});\n    const transactions = this.props.transactions ? { ...this.props.transactions } : {};\n    let output = storedTxs;\n\n    if (account){\n      if (storedTxs[account]){\n        output = storedTxs[account];\n        if (tokenKey){\n          output = output[tokenKey] ? output[tokenKey] : {};\n\n          if (selectedToken){\n            Object.keys(transactions).forEach(txKey => {\n              const tx = transactions[txKey];\n              if (!output[txKey] && tx.token && tx.token.toUpperCase() === selectedToken.toUpperCase()){\n                output[txKey] = transactions[txKey];\n              }\n            });\n          }\n        }\n      } else {\n        output = {};\n      }\n    }\n\n    return output;\n  }\n  processEtherscanTransactions = async (etherscanTxs,enabledTokens=[],processStoredTxs=true) => {\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let txReceipts = {};\n    let storedTxs = this.getStoredTransactions();\n\n    // Init storedTxs for pair account-token if empty\n    if (typeof storedTxs[this.props.account] !== 'object'){\n      storedTxs[this.props.account] = {};\n    }\n\n    // Take base tokens addresses and configs\n    const baseTokensConfigs = {};\n    const baseTokensAddresses = [];\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n    Object.keys(curveAvailableTokens).forEach( token => {\n      const curveTokenConfig = curveAvailableTokens[token];\n      const baseTokenConfig = this.getGlobalConfig(['stats','tokens',curveTokenConfig.baseToken]);\n      const baseTokenAddress = baseTokenConfig.address.toLowerCase();\n      baseTokensConfigs[baseTokenAddress] = baseTokenConfig;\n      baseTokensConfigs[baseTokenAddress].token = curveTokenConfig.baseToken;\n      baseTokensAddresses.push(baseTokenAddress);\n    });\n\n    const curveZapContract = this.getGlobalConfig(['curve','zapContract']);\n    // const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n    // const curveSwapContract = this.getGlobalConfig(['curve','migrationContract']);\n    // const curveDepositContract = this.getGlobalConfig(['curve','depositContract']);\n\n    await this.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const tokenKey = tokenConfig.idle.token;\n      const idleToken = tokenConfig.idle.token;\n\n      // Init storedTxs for pair account-token if empty\n      if (typeof storedTxs[this.props.account][tokenKey] !== 'object'){\n        storedTxs[this.props.account][tokenKey] = {};\n      }\n\n      const minedTxs = {...storedTxs[this.props.account][tokenKey]};\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        await this.asyncForEach(filteredTxs,async (tx,index) => {\n          const txKey = `tx${tx.timeStamp}000`;\n          const storedTx = storedTxs[this.props.account][tokenKey][txKey] ? storedTxs[this.props.account][tokenKey][txKey] : tx;\n\n          let tokenPrice = null;\n          \n          if (storedTx.tokenPrice && !this.BNify(storedTx.tokenPrice).isNaN()){\n            tokenPrice = this.BNify(storedTx.tokenPrice);\n          } else {\n            tokenPrice = await this.getIdleTokenPrice(tokenConfig,tx.blockNumber,tx.timeStamp);\n            storedTx.tokenPrice = tokenPrice;\n          }\n\n          let idleTokens = this.BNify(tx.value);\n          let tokensTransfered = tokenPrice.times(idleTokens);\n\n          // Add transactionHash to storedTx\n          if (!storedTx.transactionHash){\n            storedTx.transactionHash = tx.hash;\n          }\n\n          // Deposited\n          switch (tx.action){\n            case 'Send':\n            case 'Receive':\n            case 'Swap':\n            case 'SwapOut':\n            case 'Migrate':\n              if (!storedTx.tokenAmount){\n                storedTx.idleTokens = idleTokens;\n                storedTx.value = tokensTransfered;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.tokenSymbol = selectedToken;\n              }\n            break;\n            case 'Deposit':\n            case 'Redeem':\n              if (!storedTx.tokenAmount){\n                storedTx.value = idleTokens;\n                storedTx.tokenAmount = idleTokens;\n                storedTx.idleTokens = idleTokens.div(tokenPrice);\n              }\n            break;\n            case 'Withdraw':\n              if (!storedTx.tokenAmount){\n                storedTx.idleTokens = idleTokens;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.value = storedTx.withdrawnValue;\n              }\n            break;\n            case 'CurveIn':\n            case 'CurveOut':\n              if (!storedTx.tokenAmount){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.idleTokens = idleTokens;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n            break;\n            case 'CurveTransferIn':\n            case 'CurveTransferOut':\n              if (!storedTx.curveTokenPrice){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n                storedTx.tokenAmount = this.BNify(storedTx.curveTokens).times(storedTx.curveTokenPrice);\n              }\n\n              storedTx.idleTokens = this.BNify(0);\n            break;\n            case 'CurveZapIn':\n            case 'CurveZapOut':\n              if (!storedTx.curveTokenPrice){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n\n              if (!storedTx.tokenAmount){\n\n                storedTx.tokenAmount = this.BNify(0);\n                storedTx.idleTokens = this.BNify(0);\n\n                const curveTxReceipt = txReceipts[tx.hashKey] ? txReceipts[tx.hashKey] : await (new Promise( async (resolve, reject) => {\n                  this.props.web3.eth.getTransactionReceipt(tx.hash,(err,tx)=>{\n                    if (err){\n                      reject(err);\n                    }\n                    resolve(tx);\n                  });\n                }));\n\n                if (curveTxReceipt){\n\n                  // Save receipt\n                  if (!txReceipts[tx.hashKey]){\n                    txReceipts[tx.hashKey] = curveTxReceipt;\n                  }\n\n                  const filteredLogs = curveTxReceipt.logs.filter( log => (baseTokensAddresses.includes(log.address.toLowerCase()) && log.topics[log.topics.length-1].toLowerCase() === `0x00000000000000000000000${curveZapContract.address.replace('x','').toLowerCase()}` ) );\n\n                  this.customLog('filteredLogs',filteredLogs);\n\n                  if (filteredLogs && filteredLogs.length){\n                    filteredLogs.forEach( log => {\n                      let tokenAmount = parseInt(log.data,16);\n                      const baseTokensConfig = baseTokensConfigs[log.address.toLowerCase()];\n                      const tokenDecimals = baseTokensConfig.decimals;\n                      tokenAmount = this.fixTokenDecimals(tokenAmount,tokenDecimals);\n                      storedTx.tokenAmount = storedTx.tokenAmount.plus(tokenAmount);\n                      this.customLog('Add tokenAmount ('+tx.hash+')',baseTokensConfig.token,tokenAmount.toFixed(5),storedTx.tokenAmount.toFixed(5));\n                    });\n                  }\n                }\n              }\n            break;\n            case 'CurveDepositIn':\n            case 'CurveDepositOut':\n              if (!storedTx.curveTokenPrice){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n\n              storedTx.tokenAmount = this.BNify(storedTx.value);\n\n              if (!storedTx.idleTokens){\n\n                const curveTxReceipt = txReceipts[tx.hashKey] ? txReceipts[tx.hashKey] : await (new Promise( async (resolve, reject) => {\n                  this.props.web3.eth.getTransactionReceipt(tx.hash,(err,tx)=>{\n                    if (err){\n                      reject(err);\n                    }\n                    resolve(tx);\n                  });\n                }));\n\n                if (curveTxReceipt){\n                  const curveTokenConfig = this.getGlobalConfig(['curve','availableTokens',idleToken]);\n                  const idleTokenDecimals = curveTokenConfig && curveTokenConfig.decimals ? curveTokenConfig.decimals : 18;\n                  const idleTokenAddress = curveTokenConfig && curveTokenConfig.address ? curveTokenConfig.address : tokenConfig.idle.address;\n\n                  // Save receipt\n                  if (!txReceipts[tx.hashKey]){\n                    txReceipts[tx.hashKey] = curveTxReceipt;\n                  }\n\n                  const filteredLogs = curveTxReceipt.logs.filter( log => (log.address.toLowerCase()===idleTokenAddress ) );\n                  if (filteredLogs && filteredLogs.length){\n                    idleTokens = parseInt(filteredLogs[0].data,16);\n                    idleTokens = this.fixTokenDecimals(idleTokens,idleTokenDecimals);\n                    storedTx.idleTokens = idleTokens;\n                  }\n                }\n              }\n            break;\n            default:\n            break;\n          }\n            \n          // Save token for future filtering\n          storedTx.token = selectedToken;\n\n          // Save processed tx\n          etherscanTxs[tx.hashKey] = storedTx;\n\n          // Store processed Tx\n          storedTxs[this.props.account][tokenKey][txKey] = storedTx;\n\n          // Remove from minted Txs\n          delete minedTxs[txKey];\n        });\n      }\n\n      // Process Stored txs\n      if (processStoredTxs){\n        etherscanTxs = await this.processStoredTxs(etherscanTxs,[selectedToken],this.props.transactions);\n      }\n    });\n\n    // Update Stored txs\n    if (storedTxs){\n      this.updateStoredTransactions(storedTxs);\n    }\n\n    return etherscanTxs;\n  }\n  processStoredTxs = async (etherscanTxs,enabledTokens=[],txsToProcess=null) => {\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let storedTxs = this.getStoredItem('transactions',true,{})\n\n    // Init storedTxs\n    if (!storedTxs[this.props.account]){\n      storedTxs[this.props.account] = {};\n    }\n\n    etherscanTxs = Object.assign({},etherscanTxs);\n\n    const networkId = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n\n    // this.customLog('Processing stored txs',enabledTokens);\n\n    await this.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const tokenKey = tokenConfig.idle.token;\n\n      // Init storedTxs\n      if (!storedTxs[this.props.account][tokenKey]){\n        storedTxs[this.props.account][tokenKey] = {};\n      }\n\n      txsToProcess = txsToProcess && Object.values(txsToProcess).length ? txsToProcess : this.getStoredTransactions(this.props.account,tokenKey,selectedToken);\n      \n      // this.customLog('txsToProcess',selectedToken,txsToProcess);\n\n      // if (!Object.values(txsToProcess).length && selectedToken==='DAI' && Object.values(this.props.transactions).length>0){\n      //   debugger;\n      // }\n\n      // Debug transactions\n      /*\n      txsToProcess['xxxxx'] = {\n        status:'success',\n        created:Date.now(),\n        method:'executeMetaTransaction',\n        token:selectedToken.toUpperCase(),\n        transactionHash:'0x000000000000000000000000000'\n      };\n      */\n\n      await this.asyncForEach(Object.keys(txsToProcess),async (txKey,i) => {\n        const tx = txsToProcess[txKey];\n\n        // Skip wrong token\n        if (!tx || !tx.token || tx.token.toUpperCase() !== selectedToken.toUpperCase() || (tx.networkId && parseInt(tx.networkId) !== parseInt(networkId))){\n          return false;\n        }\n\n        const isStoredTx = storedTxs && storedTxs[this.props.account] && storedTxs[this.props.account][tokenKey] && storedTxs[this.props.account][tokenKey][txKey];\n\n        const allowedMethods = {\n          mintIdleToken:'Deposit',\n          redeemIdleToken:'Redeem',\n          migrateFromToIdle:'Migrate',\n          mintIdleTokensProxy:'Deposit',\n          migrateFromAaveToIdle:'Migrate',\n          migrateFromIearnToIdle:'Migrate',\n          executeMetaTransaction:'Migrate',\n          migrateFromFulcrumToIdle:'Migrate',\n          migrateFromCompoundToIdle:'Migrate',\n        };\n        const pendingStatus = ['pending','started'];\n        const txSucceeded = tx.status === 'success';\n        const txPending = pendingStatus.includes(tx.status);\n        const isMetaTx = tx.method === 'executeMetaTransaction';\n        const txHash = tx.transactionHash ? tx.transactionHash : null;\n        const methodIsAllowed = Object.keys(allowedMethods).includes(tx.method);\n\n        // Skip transaction if already present in etherscanTxs with same status\n        if (txHash && etherscanTxs[txHash] && etherscanTxs[txHash].tokenPrice){\n          return false;\n        }\n\n        if (txPending && txHash && !etherscanTxs[txHash] && methodIsAllowed && tx.params.length){\n          // this.customLog('processStoredTxs',tx.method,tx.status,tx.params);\n          const isMigrationTx = allowedMethods[tx.method] === 'Migrate';\n          const decimals = isMigrationTx ? 18 : tokenConfig.decimals;\n          etherscanTxs[`t${tx.created}`] = {\n            status:'Pending',\n            token:selectedToken,\n            action:allowedMethods[tx.method],\n            timeStamp:parseInt(tx.created/1000),\n            hash:txHash ? tx.transactionHash : null,\n            tokenSymbol:isMigrationTx ? tokenConfig.idle.token : selectedToken,\n            value: tx.value ? tx.value : this.fixTokenDecimals(tx.params[0],decimals).toString()\n          };\n\n          return false;\n        }\n\n        // Skip invalid txs\n        if (!txSucceeded || !txHash || !methodIsAllowed){\n          return false;\n        }\n\n        let realTx = tx.realTx ? tx.realTx : null;\n\n        if (!realTx){\n          // this.customLog('loadTxs - getTransaction',tx.transactionHash);\n          realTx = await (new Promise( async (resolve, reject) => {\n            this.props.web3.eth.getTransaction(tx.transactionHash,(err,txReceipt)=>{\n              if (err){\n                reject(err);\n              }\n              resolve(txReceipt);\n            });\n          }));\n        }\n\n        // this.customLog('realTx (localStorage)',realTx);\n\n        // Skip txs from other wallets if not meta-txs\n        if (!realTx || (!isMetaTx && realTx.from.toLowerCase() !== this.props.account.toLowerCase())){\n          return false;\n        }\n\n        const tokenPrice = await this.getIdleTokenPrice(tokenConfig,realTx.blockNumber,realTx.timeStamp);\n\n        realTx.status = 'Completed';\n        realTx.action = allowedMethods[tx.method];\n        realTx.contractAddress = tokenConfig.address;\n        realTx.timeStamp = parseInt(tx.created/1000);\n\n        let txValue = null;\n        switch (tx.method){\n          case 'mintIdleToken':\n          case 'mintIdleTokensProxy':\n            if (!tx.params){\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n              return false;\n            }\n\n            if (realTx.to.toLowerCase() !== tokenConfig.idle.address.toLowerCase()){\n              // Remove wrong contract tx\n              if (isStoredTx){\n                delete storedTxs[this.props.account][tokenKey][txKey];\n              }\n              // this.customLog('Skipped deposit tx '+tx.transactionHash+' - wrong contract');\n              return false;\n            }\n\n            txValue = tx.params ? this.fixTokenDecimals(tx.params[0],tokenConfig.decimals).toString() : 0;\n            if (!txValue){\n              // this.customLog('Skipped deposit tx '+tx.transactionHash+' - value is zero ('+txValue+')');\n              return false;\n            }\n\n            realTx.value = txValue;\n            realTx.tokenAmount = txValue;\n          break;\n          case 'redeemIdleToken':\n            if (!tx.params){\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n              return false;\n            }\n\n            if (!realTx.tokenPrice){\n              const redeemedValueFixed = this.fixTokenDecimals(tx.params[0],18).times(tokenPrice);\n              realTx.tokenPrice = tokenPrice;\n              realTx.value = redeemedValueFixed;\n              realTx.tokenAmount = redeemedValueFixed;\n            }\n          break;\n          case 'executeMetaTransaction':\n            let executeMetaTransactionReceipt = tx.txReceipt ? tx.txReceipt : null;\n\n            if (!executeMetaTransactionReceipt){\n              executeMetaTransactionReceipt = await (new Promise( async (resolve, reject) => {\n                this.props.web3.eth.getTransactionReceipt(tx.transactionHash,(err,tx)=>{\n                  if (err){\n                    reject(err);\n                  }\n                  resolve(tx);\n                });\n              }));\n            }\n\n            if (!executeMetaTransactionReceipt){\n              return false;\n            }\n\n            // Save txReceipt into the tx\n            if (!tx.txReceipt){\n              tx.txReceipt = executeMetaTransactionReceipt;\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n            }\n\n            let action = null;\n            let executeMetaTransactionContractAddr = null;\n            let executeMetaTransactionInternalTransfers = [];\n            const IdleProxyMinterInfo = this.getGlobalConfig(['contract','deposit','proxyContract']);\n\n            // Handle migration tx\n            if (tokenConfig.migration && tokenConfig.migration.oldContract){\n              if (executeMetaTransactionReceipt.logs){\n                executeMetaTransactionContractAddr = tokenConfig.migration.oldContract.address.replace('x','').toLowerCase();\n                executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n              } else if (executeMetaTransactionReceipt.events){\n                executeMetaTransactionInternalTransfers = Object.values(executeMetaTransactionReceipt.events).filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase(); });\n              }\n\n              if (executeMetaTransactionInternalTransfers.length){\n                action = 'Migrate';\n              }\n            }\n\n            // Handle deposit tx\n            if (!executeMetaTransactionInternalTransfers.length){\n              if (executeMetaTransactionReceipt.logs){\n                executeMetaTransactionContractAddr = tokenConfig.idle.address.replace('x','').toLowerCase();\n                executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n\n                // Handle deposit made with proxy contract\n                if (!executeMetaTransactionInternalTransfers.length && IdleProxyMinterInfo){\n                  executeMetaTransactionContractAddr = IdleProxyMinterInfo.address.replace('x','').toLowerCase();\n                  executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n                }\n              } else if (executeMetaTransactionReceipt.events){\n                executeMetaTransactionInternalTransfers = Object.values(executeMetaTransactionReceipt.events).filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase(); });\n              }\n\n              if (executeMetaTransactionInternalTransfers.length){\n                action = 'Deposit';\n              }\n            }\n\n            if (!executeMetaTransactionInternalTransfers.length){\n              return false;\n            }\n\n            const internalTransfer = executeMetaTransactionInternalTransfers[0];\n\n            const metaTxValue = internalTransfer.data ? parseInt(internalTransfer.data,16) : (internalTransfer.raw && internalTransfer.raw.data) ? parseInt(internalTransfer.raw.data,16) : null;\n\n            if (!metaTxValue){\n              return false;\n            }\n\n            const metaTxValueFixed = this.fixTokenDecimals(metaTxValue,tokenConfig.decimals);\n            realTx.action = action;\n            realTx.value = metaTxValueFixed;\n            realTx.tokenAmount = metaTxValueFixed;\n            // this.customLog(metaTxValueFixed.toString());\n          break;\n          case 'migrateFromCompoundToIdle':\n          case 'migrateFromFulcrumToIdle':\n          case 'migrateFromAaveToIdle':\n          case 'migrateFromIearnToIdle':\n          case 'migrateFromToIdle':\n            if (!tokenConfig.migration || !tokenConfig.migration.oldContract){\n              return false;\n            }\n\n            let migrationTxReceipt = tx.txReceipt ? tx.txReceipt : null;\n\n            if (!migrationTxReceipt){\n              migrationTxReceipt = await (new Promise( async (resolve, reject) => {\n                this.props.web3.eth.getTransactionReceipt(tx.transactionHash,(err,tx)=>{\n                  if (err){\n                    reject(err);\n                  }\n                  resolve(tx);\n                });\n              }));\n            }\n\n            if (!migrationTxReceipt){\n              return false;\n            }\n\n            // Save txReceipt into the tx\n            if (!tx.txReceipt){\n              tx.txReceipt = migrationTxReceipt;\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n            }\n\n            const migrationContractAddr = tokenConfig.migration.migrationContract.address.toLowerCase().replace('x','');\n            const contractAddress = tokenConfig.idle.address.toLowerCase().replace('x','');\n            const migrationTxInternalTransfers = migrationTxReceipt.logs.filter((tx) => { return tx.topics.length>=3 && tx.topics[tx.topics.length-2].toLowerCase() === `0x00000000000000000000000${migrationContractAddr}` && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${contractAddress}`; });\n\n            if (!migrationTxInternalTransfers.length){\n              return false;\n            }\n\n            const migrationInternalTransfer = migrationTxInternalTransfers.pop();\n\n            const decodedLogs = this.props.web3.eth.abi.decodeLog([\n              {\n                internalType: \"uint256\",\n                name: \"_token\",\n                type: \"uint256\"\n              },\n            ],migrationInternalTransfer.data,migrationInternalTransfer.topics);\n\n            if (!decodedLogs || !decodedLogs._token){\n              return false;\n            }\n\n            const migrationValue = decodedLogs._token;\n            const migrationValueFixed = this.fixTokenDecimals(migrationValue,tokenConfig.decimals);\n            realTx.value = migrationValueFixed.toString();\n          break;\n          default:\n          break;\n        }\n\n        realTx.tokenPrice = tokenPrice;\n        realTx.token = selectedToken;\n        realTx.tokenSymbol = selectedToken;\n        realTx.idleTokens = tokenPrice.times(this.BNify(realTx.value));\n\n        // Save processed tx\n        etherscanTxs[txHash] = realTx;\n        // etherscanTxs.push(realTx);\n\n        // Store processed Tx\n        if (!tx.realTx){\n          tx.realTx = realTx;\n          storedTxs[this.props.account][tokenKey][txKey] = tx;\n        }\n      });\n    });\n\n    // Update Stored Txs\n    if (storedTxs){\n      this.updateStoredTransactions(storedTxs);\n    }\n\n    return etherscanTxs;\n  }\n  saveCachedRequest = (endpoint,alias=false,data) => {\n    const key = alias ? alias : endpoint;\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    const timestamp = parseInt(Date.now()/1000);\n    cachedRequests[key] = {\n      data,\n      timestamp\n    };\n    return this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n  }\n  getCustomAddress = () => {\n    return this.getStoredItem('customAddress',false);\n  }\n  setCustomAddress = (customAddress) => {\n    return this.setLocalStorage('customAddress',customAddress);\n  }\n  getCachedRequest = (endpoint,alias=false) => {\n    const key = alias ? alias : endpoint;\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key]){\n      return cachedRequests[key].data;\n    }\n    return null;\n  }\n  makeRequest = async(endpoint,error_callback=false,config=null) => {\n    const data = await axios\n                  .get(endpoint,config)\n                  .catch(err => {\n                    if (typeof error_callback === 'function'){\n                      error_callback(err);\n                    }\n                  });\n    return data;\n  }\n  makeEtherscanApiRequest = async (endpoint,keys=[],TTL=120,apiKeyIndex=0) => {\n    const timestamp = parseInt(Date.now()/1000);\n    \n    // Check if already exists\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[endpoint] && cachedRequests[endpoint].timestamp && timestamp-cachedRequests[endpoint].timestamp<TTL){\n      return cachedRequests[endpoint].data;\n    }\n\n    const apiKey = keys[apiKeyIndex];\n    const data = await this.makeRequest(endpoint+'&apikey='+apiKey);\n\n    console.log('makeEtherscanApiRequest',endpoint+'&apikey='+apiKey,apiKeyIndex+'/'+keys.length,data,(data.data ? data.data.message : null),apiKeyIndex<keys.length-1);\n\n    if (data && data.data && data.data.message === 'OK'){\n      cachedRequests[endpoint] = {\n        data,\n        timestamp\n      };\n      this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n      return data;\n    } else if (apiKeyIndex<keys.length-1) {\n      return await this.makeEtherscanApiRequest(endpoint,keys,TTL,apiKeyIndex+1);\n    }\n    return null;\n  }\n  makeCachedRequest = async (endpoint,TTL=60,return_data=false,alias=false,config=null) => {\n    const key = alias ? alias : endpoint;\n    const timestamp = parseInt(Date.now()/1000);\n    \n    // Check if already exists\n    const cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key] && cachedRequests[key].timestamp && timestamp-cachedRequests[key].timestamp<TTL){\n      return (cachedRequests[key].data && return_data ? cachedRequests[key].data.data : cachedRequests[key].data);\n    }\n\n    const data = await this.makeRequest(endpoint,false,config);\n\n    cachedRequests[key] = {\n      data,\n      timestamp\n    };\n    this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n    return (data && return_data ? data.data : data);\n  }\n  getTransactionError = error => {\n    let output = 'error';\n    if (parseInt(error.code)){\n      const errorCode = parseInt(error.code);\n      switch (errorCode){\n        case 4001:\n          output = 'denied';\n        break;\n        default:\n          output = `error_${errorCode}`;\n        break;\n      }\n    } else if (error.message){\n      output = error.message.split(\"\\n\")[0]; // Take just the first line of the error\n    }\n\n    return output;\n  }\n  getGlobalConfigs = () => {\n    return globalConfigs;\n  }\n  getArrayPath = (path,array) => {\n    path = Object.assign([],path);\n    if (path.length>0){\n      const prop = path.shift();\n      if (!path.length){\n        return array[prop] ? array[prop] : null;\n      } else if (array[prop]) {\n        return this.getArrayPath(path,array[prop]);\n      }\n    }\n    return null;\n  }\n  getGlobalConfig = (path,configs=false) => {\n    configs = configs ? configs : globalConfigs;\n    if (path.length>0){\n      const prop = path.shift();\n      if (!path.length){\n        return configs[prop] ? configs[prop] : null;\n      } else if (configs[prop]) {\n        return this.getGlobalConfig(path,configs[prop]);\n      }\n    }\n    return null;\n  }\n  checkUrlOrigin = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n  }\n  checkUrlBeta = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.betaURL.toLowerCase());\n  }\n  sendGoogleAnalyticsPageview = async (page=null) => {\n    page = page || window.location.hash.substr(1);\n    const googlePageviewInfo = this.getGlobalConfig(['analytics','google','pageView']);\n    const isOrigin = this.checkUrlOrigin();\n    if (googlePageviewInfo.enabled && isOrigin && window.ga){\n      window.ga('set', 'page', page);\n      window.ga('send', 'pageview');\n    }\n  }\n  sendGoogleAnalyticsEvent = async (eventData,callback=null) => {\n\n    const googleEventsInfo = globalConfigs.analytics.google.events;\n    const debugEnabled = googleEventsInfo.debugEnabled;\n    const originOk = window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n\n    if (googleEventsInfo.enabled && window.ga && ( debugEnabled || originOk)){\n\n      // Check if testnet postfix required\n      if (googleEventsInfo.addPostfixForTestnet){\n        // Postfix network name if not mainnet\n        if (globalConfigs.network.requiredNetwork !== 1){\n          const currentNetwork = globalConfigs.network.availableNetworks[globalConfigs.network.requiredNetwork];\n          eventData.eventCategory += `_${currentNetwork}`;\n        // Postfix test for debug\n        } else if (debugEnabled && !originOk) {\n          eventData.eventCategory += '_test';\n        }\n      }\n\n      await (new Promise( async (resolve, reject) => {\n        eventData.hitCallback = () => {\n          resolve(true);\n        };\n        eventData.hitCallbackFail = () => {\n          reject();\n        };\n\n        window.ga('send', 'event', eventData);\n      }));\n\n      if (typeof callback === 'function'){\n        callback();\n      }\n    }\n\n    if (typeof callback === 'function'){\n      callback();\n    }\n\n    return false;\n  }\n  createContract = async (name, address, abi) => {\n    try {\n      const contract = new this.props.web3.eth.Contract(abi, address);\n      return {name, contract};\n    } catch (error) {\n      this.customLogError(\"Could not create contract.\",name,address,error);\n    }\n    return null;\n  }\n  getWalletProvider = (defaultProvider=null) => {\n    return this.getStoredItem('walletProvider',false,defaultProvider);\n  }\n  simpleIDPassUserInfo = (userInfo,simpleID) => {\n    if (!userInfo.address && this.props.account){\n      userInfo.address = this.props.account;\n    }\n    if (!userInfo.provider){\n      userInfo.provider = this.getWalletProvider();\n    }\n    if (typeof userInfo.email !== 'undefined' && !userInfo.email){\n      delete userInfo.email;\n    }\n    if (!userInfo.address){\n      return false;\n    }\n    simpleID = simpleID ? simpleID : (this.props.simpleID ? this.props.simpleID : (typeof this.props.initSimpleID === 'function' ? this.props.initSimpleID() : null));\n    if (simpleID){\n      return simpleID.passUserInfo(userInfo);\n    }\n    return false;\n  }\n  getEtherscanTransactionUrl = (txHash) => {\n    const requiredNetwork = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n    const baseurl = this.getGlobalConfig(['network','providers','etherscan','baseUrl',requiredNetwork]);\n    return txHash ? `${baseurl}/tx/${txHash}` : null;\n  }\n  getEtherscanAddressUrl = (address) => {\n    const requiredNetwork = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n    const baseurl = this.getGlobalConfig(['network','providers','etherscan','baseUrl',requiredNetwork]);\n    return address ? `${baseurl}/address/${address}` : null;\n  }\n  formatMoney = (amount, decimalCount = 2, decimal = \".\", thousands = \",\") => {\n    try {\n      decimalCount = Math.abs(decimalCount);\n      decimalCount = isNaN(decimalCount) ? 2 : decimalCount;\n\n      const negativeSign = amount < 0 ? \"-\" : \"\";\n\n      let i = parseInt(amount = Math.abs(Number(amount) || 0).toFixed(decimalCount)).toString();\n      let j = (i.length > 3) ? i.length % 3 : 0;\n\n      return negativeSign + (j ? i.substr(0, j) + thousands : '') + i.substr(j).replace(/(\\d{3})(?=\\d)/g, \"$1\" + thousands) + (decimalCount ? decimal + Math.abs(amount - i).toFixed(decimalCount).slice(2) : \"\");\n    } catch (e) {\n      return null;\n    }\n  }\n  getSnapshotProposals = async (activeOnly=false) => {\n\n    const cachedDataKey = `snapshotProposals_${activeOnly}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const whitelist = this.getGlobalConfig(['network','providers','snapshot','whitelist']).map( addr => addr.toLowerCase() );\n    const endpoint = this.getGlobalConfig(['network','providers','snapshot','endpoints','proposals']);\n    let proposals = await this.makeCachedRequest(endpoint,1440,true);\n\n    // console.log('getSnapshotProposals',proposals);\n\n    if (proposals && !proposals.error){\n      proposals = Object.values(proposals);\n\n      const currTime = parseInt(Date.now()/1000);\n      if (activeOnly){\n        proposals =  proposals.filter( p => (p.msg.payload.start<=currTime && p.msg.payload.end>currTime) );\n      }\n\n      // console.log(proposals);\n\n      const validProposals = [];\n      await this.asyncForEach(proposals, async (p) => {\n        // Add proposal if ended\n        if (p.msg.payload.end<=currTime || whitelist.includes(p.address.toLowerCase())){\n          validProposals.push(p);\n        } else {\n          const blockNumber = p.msg.payload.snapshot;\n\n          let checkedStrategies = false;\n          await this.asyncForEach( p.msg.payload.metadata.strategies, async (s) => {\n            if (checkedStrategies){\n              return;\n            }\n            if (s.name==='erc20-balance-of'){\n              const tokenName = s.params.symbol;\n              const tokenContract = this.getContractByName(tokenName);\n              if (tokenContract){\n                const tokenBalance = await this.getTokenBalance(tokenName,p.address,true,blockNumber);\n                // console.log(p.relayerIpfsHash,p.address,s.name,tokenBalance ? tokenBalance.toFixed() : null);\n                if (tokenBalance && this.BNify(tokenBalance).gt(100)){\n                  checkedStrategies = true;\n                }\n              }\n            } else {\n              // checkedStrategies = true;\n            }\n\n            // console.log(p.relayerIpfsHash,p.address,s.name,checkedStrategies);\n          });\n          \n          // Add proposal is passed token balances check\n          if (checkedStrategies){\n            validProposals.push(p);\n          }\n        }\n      });\n\n      return this.setCachedData(cachedDataKey,validProposals);\n    }\n\n  }\n  getTokenApiData = async (address,isRisk=null,startTimestamp=null,endTimestamp=null,forceStartTimestamp=false,frequency=null,order=null,limit=null) => {\n    if (globalConfigs.network.requiredNetwork!==1 || !globalConfigs.stats.enabled){\n      return [];\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenApiData_${address}_${isRisk}_${frequency}_${order}_${limit}`;\n    let cachedData = this.getCachedData(cachedDataKey);\n\n    if (cachedData){\n      // Check for fittable start and end time\n      const filteredCachedData = cachedData.filter( c => ( (c.startTimestamp===null || (startTimestamp && c.startTimestamp<=startTimestamp)) && (c.endTimestamp===null || (endTimestamp && c.endTimestamp>=endTimestamp)) ) )\n\n      if (filteredCachedData && filteredCachedData.length>0){\n        const filteredData = filteredCachedData.pop().data;\n        if (filteredData){\n          return filteredData.filter( d => ((!startTimestamp || d.timestamp>=startTimestamp) && (!endTimestamp || d.timestamp<=endTimestamp)) );\n        }\n        return null;\n      }\n    // Initialize cachedData\n    } else {\n      cachedData = [];\n    }\n\n    const apiInfo = globalConfigs.stats.rates;\n    let endpoint = `${apiInfo.endpoint}${address}`;\n\n    if (startTimestamp || endTimestamp || isRisk !== null || frequency !== null){\n      const params = [];\n\n      if (startTimestamp && parseInt(startTimestamp)){\n        if (forceStartTimestamp){\n          params.push(`start=${startTimestamp}`);\n        } else {\n          const start = startTimestamp-(60*60*24*2); // Minus 1 day for Volume graph\n          params.push(`start=${start}`);\n        }\n      }\n\n      if (endTimestamp && parseInt(endTimestamp)){\n        params.push(`end=${endTimestamp}`);\n      }\n\n      if (isRisk !== null){\n        params.push(`isRisk=${isRisk}`);\n      }\n\n      if (frequency !== null && parseInt(frequency)){\n        params.push(`frequency=${frequency}`);\n      }\n\n      if (order !== null){\n        params.push(`order=${order}`);\n      }\n\n      if (limit !== null && parseInt(limit)){\n        params.push(`limit=${limit}`);\n      }\n\n      if (params.length){\n        endpoint += '?'+params.join('&');\n      }\n    }\n\n    const config = this.getGlobalConfig(['stats','config']);\n    let output = await this.makeRequest(endpoint,false,config);\n    if (!output){\n      return [];\n    }\n\n    const data = output.data;\n\n    let filteredData = null;\n    if (isRisk !== null){\n      filteredData = data.filter( d => ( d.isRisk === isRisk ) );\n    }\n\n    cachedData.push({\n      isRisk,\n      endTimestamp,\n      startTimestamp,\n      data:filteredData,\n    });\n\n    this.setCachedData(cachedDataKey,cachedData);\n\n    return data;\n  }\n  getTokenDecimals = async (contractName) => {\n    contractName = contractName ? contractName : this.props.selectedToken;\n    return await this.genericContractCall(contractName,'decimals');\n  }\n  getAvgApr = (aprs,allocations,totalAllocation) => {\n    if (aprs && allocations && totalAllocation){\n      let avgApr = Object.keys(aprs).reduce((aprWeighted,protocolAddr) => {\n        const allocation = this.BNify(allocations[protocolAddr]);\n        const apr = this.BNify(aprs[protocolAddr]);\n        return this.BNify(aprWeighted).plus(allocation.times(apr));\n      },0);\n\n      if (avgApr){\n        return this.BNify(avgApr).div(totalAllocation);\n      }\n    }\n    return null;\n  }\n  getFrequencySeconds = (frequency,quantity=1) => {\n    const frequency_seconds = {\n      hour:3600,\n      day:86400,\n      week:604800\n    };\n    return frequency_seconds[frequency]*quantity;\n  }\n  getIdleStakingRewardsTxs = async () => {\n    const idleTokenConfig = this.getGlobalConfig(['govTokens','IDLE']);\n    const feeDistributorConfig = this.getGlobalConfig(['tools','stake','props','availableTokens','IDLE','feeDistributor']);\n    const etherscanInfo = this.getGlobalConfig(['network','providers','etherscan']);\n    const etherscanApiUrl = etherscanInfo.endpoints[1];\n    const etherscanEndpoint = `${etherscanApiUrl}?module=account&action=tokentx&address=${feeDistributorConfig.address}&sort=desc`;\n    const etherscanTxlist = await this.makeEtherscanApiRequest(etherscanEndpoint,etherscanInfo.keys,3600);\n    // console.log('getIdleStakingRewardsTxs',etherscanEndpoint,etherscanTxlist);\n    if (etherscanTxlist && etherscanTxlist.data && etherscanTxlist.data.result && typeof etherscanTxlist.data.result.filter === 'function'){\n      return etherscanTxlist.data.result.filter( tx => (tx.contractAddress.toLowerCase() === idleTokenConfig.address.toLowerCase() && tx.to.toLowerCase() === feeDistributorConfig.address.toLowerCase() && this.BNify(tx.value).gt(0) ));\n    }\n    return [];\n  }\n  getProtocolInfoByAddress = (addr) => {\n    return this.props.tokenConfig.protocols.find(c => c.address.toLowerCase() === addr.toLowerCase());\n  }\n  integerValue = value => {\n    return this.BNify(value).integerValue(BigNumber.ROUND_FLOOR).toFixed();\n  }\n  normalizeTokenDecimals = tokenDecimals => {\n    return this.BNify(`1e${tokenDecimals}`);\n  }\n  normalizeTokenAmount = (tokenBalance,tokenDecimals,round=true) => {\n    const normalizedTokenDecimals = this.normalizeTokenDecimals(tokenDecimals);\n    return this.BNify(tokenBalance).times(normalizedTokenDecimals).integerValue(BigNumber.ROUND_FLOOR).toFixed();\n  }\n  fixTokenDecimals = (tokenBalance,tokenDecimals,exchangeRate=null) => {\n    const normalizedTokenDecimals = this.normalizeTokenDecimals(tokenDecimals);\n    let balance = this.BNify(tokenBalance).div(normalizedTokenDecimals);\n    if (exchangeRate && !exchangeRate.isNaN()){\n      balance = balance.times(exchangeRate);\n    }\n    return balance;\n  }\n  checkContractPaused = async (contractName=null) => {\n    contractName = contractName ? contractName : this.props.tokenConfig.idle.token;\n    const contractPaused = await this.genericContractCall(contractName, 'paused', [], {}).catch(err => {\n      this.customLogError('Generic Idle call err:', err);\n    });\n    // this.customLog('checkContractPaused',this.props.tokenConfig.idle.token,contractPaused);\n    return contractPaused;\n  }\n  getStoredItem = (key,parse_json=true,return_default=null) => {\n    let output = return_default;\n    if (window.localStorage){\n      const item = localStorage.getItem(key);\n      if (item){\n        output = item;\n        if (parse_json){\n          output = JSON.parse(item);\n        }\n      }\n    }\n    if (!output){\n      return return_default;\n    }\n    return output;\n  }\n  clearStoredData = (excludeKeys=[]) => {\n    if (window.localStorage){\n\n      if (!excludeKeys || !excludeKeys.length){\n        return window.localStorage.clear();\n      }\n\n      const storedKeysToRemove = [];\n      for (let i=0;i<window.localStorage.length;i++){\n        const storedKey = window.localStorage.key(i);\n        if (!excludeKeys.includes(storedKey)){\n          storedKeysToRemove.push(storedKey);\n        }\n      }\n      storedKeysToRemove.forEach((storedKey) => {\n        this.removeStoredItem(storedKey)\n      });\n    }\n  }\n  removeStoredItem = (key) => {\n    if (window.localStorage){\n      window.localStorage.removeItem(key);\n      return true;\n    }\n    return false;\n  }\n  setLocalStorage = (key,value,stringify=false) => {\n    if (window.localStorage){\n      try {\n        value = stringify ? JSON.stringify(value) : value;\n        window.localStorage.setItem(key,value);\n        return true;\n      } catch (error) {\n        // this.customLog('setLocalStorage',error);\n        window.localStorage.removeItem(key);\n      }\n    }\n    return false;\n  }\n  checkRebalance = async (tokenConfig) => {\n    if (!tokenConfig && this.props.tokenConfig){\n      tokenConfig = this.props.tokenConfig;\n    }\n    if (!tokenConfig){\n      return false;\n    }\n\n    const lastAllocationsPromises = [];\n    const allocations = await this.genericContractCall(tokenConfig.idle.token, 'getAllocations');\n\n    if (!allocations || !allocations.length){\n      return false;\n    }\n\n    for (let protocolIndex=0;protocolIndex<allocations.length;protocolIndex++){\n      const lastAllocationsPromise = new Promise( async (resolve, reject) => {\n        try {\n          const lastAllocations = await this.genericContractCall(tokenConfig.idle.token, 'lastAllocations',[protocolIndex]);\n          resolve(lastAllocations);\n        } catch (error) {\n          console.log(error);\n          resolve(null);\n        }\n      });\n      lastAllocationsPromises.push(lastAllocationsPromise);\n    }\n\n    const newAllocations = await Promise.all(lastAllocationsPromises);\n\n    if (!allocations || !newAllocations){\n      return true;\n    }\n\n    const diff = allocations.filter( (alloc,index) => alloc !== newAllocations[index] );\n\n    return diff.length>0;\n  }\n  checkMigration = async (tokenConfig,account) => {\n\n    if (!tokenConfig || !account){\n      return false;\n    }\n\n    let migrationEnabled = false;\n    let oldContractBalance = null;\n    let oldContractTokenDecimals = null;\n    // let migrationContractApproved = false;\n    let oldContractBalanceFormatted = null;\n\n    // Check migration contract enabled and balance\n    if (tokenConfig.migration && tokenConfig.migration.enabled){\n      const oldContractName = tokenConfig.migration.oldContract.name;\n      const oldContract = this.getContractByName(oldContractName);\n      const migrationContract = this.getContractByName(tokenConfig.migration.migrationContract.name);\n\n      // this.customLog(oldContractName,tokenConfig.migration.migrationContract.name);\n\n      if (oldContract && migrationContract){\n        // Get old contract token decimals\n        oldContractTokenDecimals = await this.getTokenDecimals(oldContractName);\n\n        // this.customLog('Migration - token decimals',oldContractTokenDecimals ? oldContractTokenDecimals.toString() : null);\n\n        // Check migration contract approval\n        // migrationContractApproved = await this.checkMigrationContractApproved();\n\n        // this.customLog('Migration - approved',migrationContractApproved ? migrationContractApproved.toString() : null);\n\n        // Check old contractBalance\n        oldContractBalance = await this.getContractBalance(oldContractName,account);\n\n        if (oldContractBalance){\n          oldContractBalanceFormatted = this.fixTokenDecimals(oldContractBalance,oldContractTokenDecimals);\n          // Enable migration if old contract balance if greater than 0\n          migrationEnabled = this.BNify(oldContractBalance).gt(0);\n        }\n\n        // this.customLog('Migration - oldContractBalance',oldContractName,account,oldContractBalance,oldContractBalanceFormatted);\n      }\n    }\n\n    // Set migration contract balance\n    return {\n      migrationEnabled,\n      oldContractBalance,\n      oldContractTokenDecimals,\n      oldContractBalanceFormatted,\n    };\n  }\n\n  getContractEvents = async (contractName, eventName, params = {}) => {\n    return await this.getContractPastEvents(contractName, eventName, params);\n  }\n\n  estimateMethodGasUsage = async (contractName, methodName, methodParams = [], account = null) => {\n    account = account || this.props.account;\n    if (!account){\n      return null;\n    }\n    const contract = this.getContractByName(contractName);\n    if (contract && contract.methods[methodName]){\n      const functionCall = contract.methods[methodName](...methodParams);\n\n      let gasPrice = null;\n      let gasLimit = null;\n      \n      try {\n        [\n          gasPrice,\n          gasLimit\n        ] = await Promise.all([\n          this.props.web3.eth.getGasPrice(),\n          functionCall.estimateGas({from: account})\n        ]);\n      } catch (error) {\n\n      }\n\n      if (gasPrice && gasLimit){\n        return this.fixTokenDecimals(this.fixTokenDecimals(gasPrice,9).times(gasLimit),9);\n      }\n    }\n\n    return this.BNify(0);\n  }\n\n  executeMetaTransaction = async (contract, userAddress, signedParameters, callback, callback_receipt) => {\n    try {\n\n      // const gasLimit = await contract.methods\n      //   .executeMetaTransaction(userAddress, ...signedParameters)\n      //   .estimateGas({ from: userAddress });\n\n      // this.customLog(gasLimit);\n\n      const gasPrice = await this.props.web3.eth.getGasPrice();\n\n      const tx = contract.methods\n        .executeMetaTransaction(userAddress, ...signedParameters)\n        .send({\n          from: userAddress,\n          gasPrice\n          // gasLimit\n        });\n\n      tx.on(\"transactionHash\", function(hash) {\n        this.customLog(`Transaction sent by relayer with hash ${hash}`);\n        callback_receipt()\n      }).once(\"confirmation\", function(confirmationNumber, receipt) {\n        this.customLog(\"Transaction confirmed on chain\",receipt);\n        callback_receipt(receipt);\n      });\n    } catch (error) {\n      this.customLog(error);\n      callback(null,error);\n    }\n  }\n\n  getSignatureParameters_v4 = signature => {\n    if (!this.props.web3.utils.isHexStrict(signature)) {\n      throw new Error(\n        'Given value \"'.concat(signature, '\" is not a valid hex string.')\n      );\n    }\n    var r = signature.slice(0, 66);\n    var s = \"0x\".concat(signature.slice(66, 130));\n    var v = \"0x\".concat(signature.slice(130, 132));\n    v = this.props.web3.utils.hexToNumber(v);\n    if (![27, 28].includes(v)) v += 27;\n    return {\n      r: r,\n      s: s,\n      v: v\n    };\n  };\n\n  constructMetaTransactionMessage = (nonce, chainId, functionSignature, contractAddress) => {\n    return ethereumjsABI.soliditySHA3(\n      [\"uint256\",\"address\",\"uint256\",\"bytes\"],\n      [nonce, contractAddress, chainId, toBuffer(functionSignature)]\n    );\n  }\n\n  checkBiconomyLimits = async (userAddress) => {\n    const biconomyInfo = this.getGlobalConfig(['network','providers','biconomy']);\n    const res = await this.makeRequest(`${biconomyInfo.endpoints.limits}?userAddress=${userAddress}&apiId=${biconomyInfo.params.apiId}`,null,{\n      headers:{\n        'x-api-key':biconomyInfo.params.apiKey\n      }\n    });\n\n    if (res && res.data){\n      return res.data;\n    }\n\n    return null;\n  }\n\n  sendTxWithPermit = async (contractName,methodName,methodParams,nonce,callback,callback_receipt) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      callback(null,'Contract not found');\n      return false;\n    }\n\n    if (!contract.methods[methodName]){\n      callback(null,'Method not found');\n      return false;\n    }\n\n    const functionSignature = contract.methods[methodName](...methodParams).encodeABI();\n\n    try{\n      const userAddress = this.props.account;\n      const chainId = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n      const messageToSign = this.constructMetaTransactionMessage(nonce, chainId, functionSignature, contract._address);\n\n      const signature = await this.props.web3.eth.personal.sign(\n        \"0x\" + messageToSign.toString(\"hex\"),\n        userAddress\n      );\n\n      const { r, s, v } = this.getSignatureParameters_v4(signature);\n\n      this.contractMethodSendWrapper(contractName, methodName, methodParams.concat([nonce, r, s, v]), callback, callback_receipt);\n\n      return true;\n    } catch (error) {\n      callback(null,error);\n      return false;\n    }\n  }\n\n  buildBiconomyErc20ForwarderTx = async (contractName,tokenAddress,permitType,callData,gasLimit) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      return false;\n    }\n\n    console.log('Build Tx ',contract._address,tokenAddress,Number(gasLimit),callData);\n\n    //Create the call data that the recipient contract will receive\n    const tx = await this.props.erc20ForwarderClient.buildTx({\n      permitType,\n      data:callData,\n      token:tokenAddress,\n      to:contract._address,\n      txGas:Number(gasLimit)\n    });\n\n    return tx;\n  }\n\n  getTransactionReceipt = async (hash) => {\n    return await (new Promise( async (resolve, reject) => {\n      this.props.web3.eth.getTransactionReceipt(hash,(err,tx)=>{\n        if (err){\n          reject(err);\n        }\n        resolve(tx);\n      });\n    }));\n  }\n\n  sendBiconomyTxWithErc20Forwarder = async (req,metaInfo,callback,callback_receipt) => {\n\n    let transactionHash = null;\n\n    try {\n      const txResponse = await this.props.erc20ForwarderClient.permitAndSendTxEIP712({req,metaInfo});\n      transactionHash = txResponse.txHash;\n      console.log('permitAndSendTxEIP712',transactionHash);\n    } catch (error) {\n      console.log('permitAndSendTxEIP712 ERROR',error);\n      callback(null,true);\n      return false;\n    }\n\n    if (!transactionHash){\n      console.log('!transactionHash ERROR');\n      callback(null,true);\n      return false;\n    }\n    \n    const tx = {\n      method:'mintIdleToken',\n      transactionHash\n    };\n    console.log('sendBiconomyTxWithErc20Forwarder',transactionHash);\n    callback_receipt(tx);\n\n    // fetch mined transaction receipt \n    const fetchReceiptIntervalId = window.setInterval(()=> {\n      this.props.web3.eth.getTransactionReceipt(transactionHash, (err, receipt)=> {\n        console.log('sendBiconomyTxWithErc20Forwarder',transactionHash,err,receipt);\n        if(!err && receipt){\n          window.clearInterval(fetchReceiptIntervalId);\n          tx.txReceipt = receipt;\n          tx.status = !err && receipt.status ? 'success' : 'error';\n\n          callback(tx,err);\n\n          if (typeof window.updateTransaction === 'function'){\n            window.updateTransaction(tx,transactionHash,tx.status,null);\n          }\n        }\n      });\n    }, 3000);\n\n    return true;\n  }\n\n  sendBiconomyTxWithPersonalSign = async (contractName,functionSignature,callback,callback_receipt) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      callback(null,'Contract not found');\n      return false;\n    }\n\n    try{\n      const userAddress = this.props.account;\n      const nonce = await contract.methods.getNonce(userAddress).call();\n      const chainId = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n      const messageToSign = this.constructMetaTransactionMessage(nonce, chainId, functionSignature, contract._address);\n\n      const signature = await this.props.web3.eth.personal.sign(\n        \"0x\" + messageToSign.toString(\"hex\"),\n        userAddress\n      );\n\n      const { r, s, v } = this.getSignatureParameters_v4(signature);\n\n      this.contractMethodSendWrapper(contractName, 'executeMetaTransaction', [userAddress, functionSignature, r, s, v], callback, callback_receipt);\n\n      return true;\n    } catch (error) {\n      console.error(error);\n      callback(null,error);\n      return false;\n    }\n  }\n\n  signPermitEIP2612 = async (contractAddress, erc20Name, owner, spender, value, nonce, deadline, chainId) => {\n    if (chainId === undefined) {\n      const result = await this.props.web3.eth.getChainId();\n      chainId = parseInt(result);\n    }\n\n    const domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const permit = [\n      { name: \"owner\", type: \"address\" },\n      { name: \"spender\", type: \"address\" },\n      { name: \"value\", type: \"uint256\" },\n      { name: \"nonce\", type: \"uint256\" },\n      { name: \"deadline\", type: \"uint256\" },\n    ];\n\n    const domainData = {\n      version: \"2\",\n      name: erc20Name,\n      chainId: chainId,\n      verifyingContract: contractAddress\n    };\n\n    const message = {\n      owner,\n      spender,\n      value,\n      nonce,\n      deadline,\n    };\n\n    const data = JSON.stringify({\n      types: {\n        EIP712Domain: domain,\n        Permit: permit,\n      },\n      primaryType: \"Permit\",\n      domain: domainData,\n      message: message\n    });\n\n    return new Promise((resolve, reject) => {\n      this.props.web3.currentProvider.send({\n        jsonrpc: '2.0',\n        id: Date.now().toString().substring(9),\n        method: \"eth_signTypedData_v4\",\n        params: [owner, data],\n        from: owner\n      }, (error, res) => {\n        if (error) {\n          return reject(error);\n        }\n\n        resolve(res.result);\n      });\n    });\n  }\n\n  signPermit = async (baseContractName, holder, spenderContractName, addToNonce=0) => {\n    const baseContract = this.getContractByName(baseContractName);\n    const spenderContract = this.getContractByName(spenderContractName);\n\n    if (!baseContract || !spenderContract){\n      return false;\n    }\n\n    const result = await this.props.web3.eth.net.getId();\n    let chainId = parseInt(result);\n\n    const EIP712Domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const permitConfig = this.getGlobalConfig(['permit',baseContractName]);\n\n    // console.log('permitConfig',permitConfig);\n\n    const expiry = Math.round(new Date().getTime() / 1000 + 3600);\n    let nonce = permitConfig.nonceMethod ? await baseContract.methods[permitConfig.nonceMethod](holder).call() : null;\n    if (addToNonce>0){\n      nonce = parseInt(nonce)+parseInt(addToNonce);\n    }\n    nonce = nonce.toString();\n\n    const Permit = permitConfig.type;\n    const EIPVersion = permitConfig.EIPVersion;\n\n    const spender = spenderContract._address;\n    const verifyingContract = baseContract._address;\n\n    const permitName = permitConfig.name || baseContractName;\n\n    const domain = {\n      chainId,\n      name: permitName,\n      verifyingContract,\n      version: permitConfig.version.toString() || '1',\n    };\n\n    let message = {};\n\n    switch (EIPVersion){\n      case 2612:\n        const owner = holder;\n        const deadline = expiry;\n        // Unlimited allowance\n        const value = this.integerValue(this.BNify(2).pow(256).minus(1));\n        message = {\n          value,\n          nonce,\n          owner,\n          spender,\n          deadline\n        };\n      break;\n      default:\n        message = {\n          holder,\n          nonce,\n          expiry,\n          spender,\n          allowed: true,\n        };\n      break;\n    }\n\n    const data = JSON.stringify({\n      domain,\n      message,\n      types: {\n        Permit,\n        EIP712Domain\n      },\n      primaryType: 'Permit',\n    });\n\n    // console.log('Permit',JSON.parse(data));\n\n    return new Promise((resolve, reject) => {\n      this.props.web3.currentProvider.send({\n        from: holder,\n        jsonrpc: '2.0',\n        params: [holder, data],\n        method: 'eth_signTypedData_v4',\n        id: Date.now().toString().substring(9),\n      }, (error, response) => {\n        if (error || (response && response.error)) {\n          return resolve(null);\n        } else if (response && response.result) {\n          const signedParameters = this.getSignatureParameters_v4(response.result);\n          signedParameters.nonce = nonce;\n          signedParameters.expiry = expiry;\n          return resolve(signedParameters);\n        }\n      });\n    });\n  }\n\n  sendTxWithPermit = async (baseContractName, holder, spenderContractName, methodName, methodParams, callback, callback_receipt, callback_permit=null) => {\n\n    const baseContract = this.getContractByName(baseContractName);\n    const spenderContract = this.getContractByName(spenderContractName);\n\n    if (!baseContract || !spenderContract){\n      callback(null,'Contract not found');\n      return false;\n    }\n\n    const signedParameters = await this.signPermit(baseContractName, holder, spenderContractName);\n\n    if (signedParameters){\n      const { expiry, nonce, r, s, v } = signedParameters;\n      const permitParams = [expiry, v, r, s];\n\n      const methodAbi = spenderContract._jsonInterface.find( f => f.name === methodName );\n      const useNonce = methodAbi ? methodAbi.inputs.find( i => i.name === 'nonce' ) : true;\n      if (!isNaN(parseInt(nonce)) && useNonce){\n        permitParams.unshift(nonce);\n      }\n      const params = methodParams.concat(permitParams);\n      this.contractMethodSendWrapper(spenderContractName, methodName, params, callback, callback_receipt);\n    } else {\n      callback(null,'Permit cancelled');\n    }\n  }\n\n  sendSignedTx = async (contractName,contractAddress,functionSignature,callback,callback_receipt) => {\n\n    const EIP712Domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const MetaTransaction = [\n      { name: \"nonce\", type: \"uint256\" },\n      { name: \"from\", type: \"address\" },\n      { name: \"functionSignature\", type: \"bytes\" }\n    ];\n\n    const chainId = await this.props.web3.eth.getChainId();\n\n    const domainData = {\n      chainId,\n      version: '1',\n      name: contractName,\n      verifyingContract: contractAddress\n    };\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      callback(null,'Contract not found');\n      return false\n    }\n\n    let userAddress = this.props.account;\n    let nonce = await contract.methods.getNonce(userAddress).call();\n    let message = {};\n    message.nonce = nonce;\n    message.from = userAddress;\n    message.functionSignature = functionSignature;\n\n    const dataToSign = JSON.stringify({\n      types: {\n        EIP712Domain,\n        MetaTransaction\n      },\n      domain: domainData,\n      primaryType: \"MetaTransaction\",\n      message\n    });\n\n    // this.customLog('dataToSign',dataToSign);\n\n    this.props.web3.currentProvider.send(\n      {\n        jsonrpc: \"2.0\",\n        id: 999999999999,\n        from: userAddress,\n        method: \"eth_signTypedData_v4\",\n        params: [userAddress, dataToSign]\n      },\n      (error, response) => {\n        if (error || (response && response.error)) {\n          return callback(null,error);\n        } else if (response && response.result) {\n          const signedParameters = this.getSignatureParameters_v4(response.result);\n          const { r, s, v } = signedParameters;\n            \n          this.contractMethodSendWrapper(contractName, 'executeMetaTransaction', [userAddress, functionSignature, r, s, v], callback, callback_receipt);\n        }\n      }\n    );\n  }\n\n  checkTokenApproved = async (contractName,contractAddr,walletAddr) => {\n    const [\n      balance,\n      allowance\n    ] = await Promise.all([\n      this.getTokenBalance(contractName,walletAddr,false),\n      this.getAllowance(contractName,contractAddr,walletAddr)\n    ]);\n    this.customLog('checkTokenApproved',contractName,this.BNify(allowance).toFixed(),this.BNify(balance).toFixed(),(allowance && this.BNify(allowance).gte(this.BNify(balance))));\n    return allowance && this.BNify(allowance).gte(this.BNify(balance));\n  }\n  getAllowance = async (contractName,contractAddr,walletAddr) => {\n    if (!contractName || !contractAddr || !walletAddr){\n      return false;\n    }\n    this.customLog('getAllowance',contractName,contractAddr,walletAddr);\n    return await this.genericContractCall(\n      contractName, 'allowance', [walletAddr, contractAddr]\n    );\n  }\n  contractMethodSendWrapperWithValue = (contractName,methodName,params,value,callback,callback_receipt,txData) => {\n    this.props.contractMethodSendWrapper(contractName, methodName, params, value, (tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    }, null, txData);\n  }\n  contractMethodSendWrapper = (contractName,methodName,params,callback,callback_receipt,txData) => {\n    this.props.contractMethodSendWrapper(contractName, methodName, params, null, (tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    }, null, txData);\n  }\n  disableERC20 = (contractName,address,callback,callback_receipt) => {\n    this.props.contractMethodSendWrapper(contractName, 'approve', [\n      address,\n      this.props.web3.utils.toTwosComplement('0') // max uint solidity\n    ],null,(tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    });\n  }\n  enableERC20 = (contractName,address,callback,callback_receipt) => {\n    this.props.contractMethodSendWrapper(contractName, 'approve', [\n      address,\n      this.props.web3.utils.toTwosComplement('-1') // max uint solidity\n    ],null,(tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    });\n  }\n  loadAssetField = async (field,token,tokenConfig,account,addGovTokens=true,addCurveApy=false) => {\n\n    let output = null;\n    const govTokens = this.getGlobalConfig(['govTokens']);\n\n    // Remove gov tokens for risk adjusted strategy\n    const strategyInfo = this.getGlobalConfig(['strategies',this.props.selectedStrategy]);\n    if (addGovTokens && strategyInfo && typeof strategyInfo.addGovTokens !== 'undefined'){\n      addGovTokens = strategyInfo.addGovTokens;\n    }\n\n    // Take available tokens for gov tokens fields\n    let govTokenAvailableTokens = null;\n    if (this.props.selectedStrategy && this.props.selectedToken){\n      const newTokenConfig = this.props.availableStrategies[this.props.selectedStrategy][this.props.selectedToken];\n      if (newTokenConfig){\n        govTokenAvailableTokens = {};\n        govTokenAvailableTokens[newTokenConfig.token] = newTokenConfig;\n      }\n    } else if (!Object.keys(govTokens).includes(token)){\n      govTokenAvailableTokens = {};\n      govTokenAvailableTokens[token] = tokenConfig;\n    }\n\n    switch (field){\n      case 'amountLentCurve':\n        const [\n          curveAvgSlippage,\n          curveAvgBuyPrice,\n          curveTokenBalance,\n        ] = await Promise.all([\n          this.getCurveAvgSlippage(),\n          this.getCurveAvgBuyPrice([],account),\n          this.getCurveTokenBalance(account,true),\n        ]);\n\n        if (curveAvgBuyPrice && curveTokenBalance){\n          output = this.BNify(curveTokenBalance).times(curveAvgBuyPrice);\n          if (curveAvgSlippage){\n            output = output.minus(output.times(curveAvgSlippage));\n          }\n          // this.customLog('amountLentCurve',curveTokenBalance.toFixed(6),curveAvgBuyPrice.toFixed(6),curveAvgSlippage.toString(),output.toFixed(6));\n        }\n      break;\n      case 'earningsPercCurve':\n        let [amountLentCurve1,redeemableBalanceCurve] = await Promise.all([\n          this.loadAssetField('amountLentCurve',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalanceCurve',token,tokenConfig,account)\n        ]);\n\n        if (amountLentCurve1 && redeemableBalanceCurve && amountLentCurve1.gt(0) && redeemableBalanceCurve.gt(0)){\n          output = redeemableBalanceCurve.div(amountLentCurve1).minus(1).times(100);\n          // this.customLog('earningsPercCurve',redeemableBalanceCurve.toFixed(6),amountLentCurve1.toFixed(6),output.toFixed(6));\n        }\n      break;\n      case 'curveApy':\n        output = await this.getCurveAPY();\n      break;\n      case 'curveAvgSlippage':\n        output = await this.getCurveAvgSlippage();\n      break;\n      case 'redeemableBalanceCurve':\n        output = await this.getCurveRedeemableIdleTokens(account);\n        // this.customLog('earningsPercCurve',output.toFixed(6));\n      break;\n      case 'redeemableBalanceCounterCurve':\n        let [\n          curveApy,\n          amountLentCurve,\n          redeemableBalanceCurveStart\n        ] = await Promise.all([\n          this.loadAssetField('curveApy',token,tokenConfig,account),\n          this.loadAssetField('amountLentCurve',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalanceCurve',token,tokenConfig,account),\n        ]);\n\n        let redeemableBalanceCurveEnd = null;\n\n        if (redeemableBalanceCurveStart && curveApy && amountLentCurve){\n          const earningPerYear = amountLentCurve.times(curveApy.div(100));\n          redeemableBalanceCurveEnd = redeemableBalanceCurveStart.plus(earningPerYear);\n          // this.customLog('redeemableBalanceCounterCurve',amountLentCurve.toFixed(6),redeemableBalanceCurveStart.toFixed(6),redeemableBalanceCurveEnd.toFixed(6));\n        }\n\n        output = {\n          redeemableBalanceCurveEnd,\n          redeemableBalanceCurveStart\n        };\n      break;\n      case 'earningsPerc':\n        let [amountLent1,redeemableBalance1] = await Promise.all([\n          this.loadAssetField('amountLent',token,tokenConfig,account,false),\n          this.loadAssetField('redeemableBalance',token,tokenConfig,account,false)\n        ]);\n\n        if (amountLent1 && redeemableBalance1 && amountLent1.gt(0)){\n          output = redeemableBalance1.div(amountLent1).minus(1).times(100);\n        }\n      break;\n      case 'daysFirstDeposit':\n        const depositTimestamp = await this.loadAssetField('depositTimestamp',token,tokenConfig,account);\n        if (depositTimestamp){\n          const currTimestamp = parseInt(Date.now()/1000);\n          output = (currTimestamp-depositTimestamp)/86400;\n        }\n      break;\n      case 'pool':\n        if (Object.keys(govTokens).includes(token)){\n          output = await this.getGovTokenPool(token, govTokenAvailableTokens);\n        } else {\n          output = await this.getTokenPool(tokenConfig,addGovTokens);\n        }\n      break;\n      case 'userDistributionSpeed':\n        switch (token){\n          case 'COMP':\n            output = await this.getCompUserDistribution(account,govTokenAvailableTokens);\n          break;\n          case 'stkAAVE':\n            output = await this.getStkAaveUserDistribution(account,govTokenAvailableTokens);\n          break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getUserDistribution(account,govTokenAvailableTokens);\n          break;\n          default:\n          break;\n        }\n        if (output && !this.BNify(output).isNaN()){\n          output = this.BNify(output).div(1e18);\n          if (output){\n            output = this.fixDistributionSpeed(output,tokenConfig.distributionFrequency,tokenConfig.distributionMode);\n          }\n        }\n      break;\n      case 'idleDistribution':\n        const idleGovToken = this.getIdleGovToken();\n        const tokenName = this.getGlobalConfig(['governance','props','tokenName']);\n        const govTokenConfig = this.getGlobalConfig(['govTokens',tokenName]);\n        output = await idleGovToken.getSpeed(tokenConfig.idle.address);\n\n        if (output){\n\n          output = this.fixTokenDecimals(output,govTokenConfig.decimals);\n\n          const blocksPerYear = this.BNify(this.getGlobalConfig(['network','blocksPerYear']));\n          switch (govTokenConfig.distributionFrequency){\n            case 'day':\n              const blocksPerDay = blocksPerYear.div(365.242199);\n              output = output.times(blocksPerDay);\n            break;\n            case 'week':\n              const blocksPerWeek = blocksPerYear.div(52.1429);\n              output = output.times(blocksPerWeek);\n            break;\n            case 'month':\n              const blocksPerMonth = blocksPerYear.div(12);\n              output = output.times(blocksPerMonth);\n            break;\n            case 'year':\n              output = output.times(blocksPerYear);\n            break;\n            default:\n            break;\n          }\n        }\n      break;\n      case 'distributionSpeed':\n        const selectedTokenConfig = govTokenAvailableTokens[this.props.selectedToken];\n        switch (token){\n          case 'COMP':\n            output = await this.getCompDistribution(selectedTokenConfig);\n          break;\n          case 'stkAAVE':\n            output = await this.getStkAaveDistribution(selectedTokenConfig);\n          break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getSpeed(selectedTokenConfig.idle.address);\n          break;\n          default:\n          break;\n        }\n        if (output && !this.BNify(output).isNaN()){\n          output = this.BNify(output).div(1e18);\n        }\n      break;\n      case 'apr':\n        switch (token){\n          case 'COMP':\n            output = await this.getCompAvgApr(govTokenAvailableTokens);\n          break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getAvgApr(govTokenAvailableTokens);\n          break;\n          default:\n            const tokenAprs = await this.getTokenAprs(tokenConfig,false,addGovTokens);\n            if (tokenAprs && tokenAprs.avgApr !== null){\n              output = tokenAprs.avgApr;\n            }\n          break;\n        }\n      break;\n      case 'apy':\n        const tokenApys = await this.getTokenAprs(tokenConfig,false,addGovTokens);\n\n        // console.log('apr',token,tokenApys.avgApr ? tokenApys.avgApr.toFixed() : null,tokenApys.avgApy ? tokenApys.avgApy.toFixed() : null);\n\n        output = this.BNify(0);\n\n        if (tokenApys && !this.BNify(tokenApys.avgApy).isNaN()){\n          output = this.BNify(tokenApys.avgApy);\n\n          if (addCurveApy){\n            const curveAPY = await this.getCurveAPY();\n            if (curveAPY){\n              output = output.plus(curveAPY);\n            }\n          }\n        } else {\n\n        }\n      break;\n      case 'avgAPY':\n        const [\n          tokenPrice,\n          firstDepositTx,\n          days\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.getFirstDepositTx([token],account),\n          this.loadAssetField('daysFirstDeposit',token,tokenConfig,account)\n        ]);\n\n        if (tokenPrice && firstDepositTx && firstDepositTx[token]){\n          const tokenPriceFirstDeposit = await this.getIdleTokenPrice(tokenConfig,firstDepositTx[token].blockNumber);\n          output = this.BNify(tokenPrice).div(tokenPriceFirstDeposit).minus(1).times(365).div(days).times(100);\n        }\n      break;\n      case 'avgAPY_old':\n        const [\n          daysFirstDeposit,\n          earningsPerc\n        ] = await Promise.all([\n          this.loadAssetField('daysFirstDeposit',token,tokenConfig,account),\n          this.loadAssetField('earningsPerc',token,tokenConfig,account), // Take earnings perc instead of earnings\n        ]);\n\n        if (daysFirstDeposit && earningsPerc){\n          output = earningsPerc.times(365).div(daysFirstDeposit);\n        }\n      break;\n      case 'depositTimestamp':\n        const depositTimestamps = account ? await this.getDepositTimestamp([token],account) : false;\n        if (depositTimestamps && depositTimestamps[token]){\n          output = depositTimestamps[token];\n        }\n      break;\n      case 'amountLent':\n        output = account ? await this.getAmountDeposited(tokenConfig,account) : false;\n        // const amountLents = account ? await this.getAmountLent([token],account) : false;\n        // if (amountLents && amountLents[token]){\n        //   output = amountLents[token];\n        // }\n      break;\n      case 'tokenPrice':\n        if (Object.keys(govTokens).includes(token)){\n          const govTokenConfig = govTokens[token];\n          const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n          try {\n            output = await this.getUniswapConversionRate(DAITokenConfig,govTokenConfig);\n          } catch (error) {\n\n          }\n          if (!output || this.BNify(output).isNaN()){\n            output = '-';\n          }\n        } else {\n          output = await this.genericContractCall(tokenConfig.idle.token, 'tokenPrice');\n        }\n      break;\n      case 'fee':\n        output = await this.getUserTokenFees(tokenConfig,account);\n      break;\n      case 'tokenBalance':\n        if (Object.keys(govTokens).includes(token)){\n          output = await this.getTokenBalance(token,account);\n          if (!output || output.isNaN()){\n            output = '-';\n          }\n        } else {\n          let tokenBalance = account ? await this.getTokenBalance(tokenConfig.token,account) : false;\n          if (!tokenBalance || tokenBalance.isNaN()){\n            tokenBalance = '-';\n          }\n          output = tokenBalance;\n        }\n      break;\n      case 'idleTokenBalance':\n        const idleTokenBalance = account ? await this.getTokenBalance(tokenConfig.idle.token,account) : false;\n        if (idleTokenBalance){\n          output = idleTokenBalance;\n        }\n      break;\n      case 'redeemableBalanceCounter':\n        let [tokenAPY1,amountLent2,redeemableBalanceStart] = await Promise.all([\n          this.loadAssetField('apy',token,tokenConfig,account,false),\n          this.loadAssetField('amountLent',token,tokenConfig,account,false),\n          this.loadAssetField('redeemableBalance',token,tokenConfig,account,false),\n        ]);\n\n        let redeemableBalanceEnd = redeemableBalanceStart;\n\n        if (redeemableBalanceStart && tokenAPY1 && amountLent2){\n          const earningPerYear = amountLent2.times(tokenAPY1.div(100));\n          redeemableBalanceEnd = redeemableBalanceStart.plus(earningPerYear);\n        }\n\n        // this.customLog('redeemableBalanceCounter',token,parseFloat(redeemableBalanceStart),parseFloat(redeemableBalanceEnd));\n\n        output = {\n          redeemableBalanceEnd,\n          redeemableBalanceStart\n        };\n      break;\n      case 'redeemableBalance':\n        if (Object.keys(govTokens).includes(token)){\n          const govTokenConfig = govTokens[token];\n          output = await this.getGovTokenUserBalance(govTokenConfig,account,govTokenAvailableTokens);\n        } else {\n          let [\n            idleTokenPrice1,\n            idleTokenBalance2,\n            govTokensBalance\n          ] = await Promise.all([\n            this.getIdleTokenPrice(tokenConfig),\n            this.loadAssetField('idleTokenBalance',token,tokenConfig,account),\n            addGovTokens ? this.getGovTokensUserTotalBalance(account,govTokenAvailableTokens,token) : null,\n          ]);\n\n          if (idleTokenBalance2 && idleTokenPrice1){\n            const tokenBalance = idleTokenBalance2.times(idleTokenPrice1);\n            let redeemableBalance = tokenBalance;\n            if (govTokensBalance && !this.BNify(govTokensBalance).isNaN()){\n              redeemableBalance = redeemableBalance.plus(this.BNify(govTokensBalance));\n            }\n            output = redeemableBalance;\n            // console.log('redeemableBalance',token,idleTokenBalance2.toFixed(4),idleTokenPrice1.toFixed(4),tokenBalance.toFixed(4),govTokensBalance ? govTokensBalance.toFixed(4) : null,output.toFixed(4));\n          }\n        }\n      break;\n      case 'earningsCurve':\n        let [amountLentCurve2,redeemableBalanceCurve1] = await Promise.all([\n          this.loadAssetField('amountLentCurve',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalanceCurve',token,tokenConfig,account)\n        ]);\n\n        if (!amountLentCurve2){\n          amountLentCurve2 = this.BNify(0);\n        }\n\n        if (!redeemableBalanceCurve1){\n          redeemableBalanceCurve1 = this.BNify(0);\n        }\n\n        output = redeemableBalanceCurve1.minus(amountLentCurve2);\n      break;\n      case 'earnings':\n        let [amountLent,redeemableBalance2] = await Promise.all([\n          this.loadAssetField('amountLent',token,tokenConfig,account,false),\n          this.loadAssetField('redeemableBalance',token,tokenConfig,account,false)\n        ]);\n\n        if (!amountLent){\n          amountLent = this.BNify(0);\n        }\n        if (!redeemableBalance2){\n          redeemableBalance2 = this.BNify(0);\n        }\n\n        output = redeemableBalance2.minus(amountLent);\n\n        // console.log('earnings',token,amountLent.toFixed(5),redeemableBalance2.toFixed(5),output.toFixed(5));\n\n        if (output.lt(this.BNify(0))){\n          output = this.BNify(0);\n        }\n      break;\n      default:\n      break;\n    }\n\n    return output;\n  }\n  getIdleTokenSupply = async (idleToken,blockNumber='latest') => {\n    const cachedDataKey = `idleTokenSupply_${idleToken}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let idleTokenSupply = await this.genericContractCall(idleToken,'totalSupply',[],{},blockNumber);\n    if (idleTokenSupply){\n      idleTokenSupply = this.BNify(idleTokenSupply);\n      return this.setCachedDataWithLocalStorage(cachedDataKey,idleTokenSupply);\n    }\n\n    return null;\n  }\n  getIdleTokenPriceWithFee = async (tokenConfig,account,blockNumber='latest') => {\n    account = account || this.props.account;\n    if (!account){\n      return null;\n    }\n\n    let [\n      fee,\n      tokenPrice,\n      userAvgPrice\n    ] = await Promise.all([\n      this.genericContractCall(tokenConfig.idle.token, 'fee', [], {}, blockNumber),\n      this.genericContractCall(tokenConfig.idle.token, 'tokenPrice', [], {}, blockNumber),\n      this.genericContractCall(tokenConfig.idle.token, 'userAvgPrices', [account], {}, blockNumber)\n    ]);\n    \n    fee = this.BNify(fee);\n    tokenPrice = this.BNify(tokenPrice);\n    userAvgPrice = this.BNify(userAvgPrice);\n\n    if (!tokenPrice.isNaN() && !userAvgPrice.isNaN() && !fee.isNaN() && !this.BNify(userAvgPrice).eq(0) && this.BNify(tokenPrice).gt(this.BNify(userAvgPrice))){\n      const priceWFee = this.integerValue(this.BNify(tokenPrice).minus(parseInt(fee.div(1e5).times(tokenPrice.minus(userAvgPrice)))));\n      return priceWFee;\n    }\n\n    return tokenPrice;\n  }\n  getIdleTokenPrice = async (tokenConfig,blockNumber='latest',timestamp=false) => {\n\n    const cachedDataKey = `idleTokenPrice_${tokenConfig.idle.token}_${blockNumber}`;\n    // if (blockNumber !== 'latest'){\n      const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.BNify(cachedData).isNaN()){\n        return this.BNify(cachedData);\n      }\n    // }\n\n    let decimals = tokenConfig.decimals;\n\n    let tokenPrice = await this.genericContractCall(tokenConfig.idle.token,'tokenPrice',[],{},blockNumber);\n\n    // If price is NaN try to take it from APIs\n    if (!tokenPrice && timestamp){\n      const isRisk = this.props.selectedStrategy === 'risk';\n      const startTimestamp = parseInt(timestamp)-(60*60);\n      const endTimestamp = parseInt(timestamp)+(60*60);\n      const tokenData = await this.getTokenApiData(tokenConfig.address,isRisk,startTimestamp,endTimestamp,true);\n\n      let beforePrice = {\n        data:null,\n        timeDiff:null\n      };\n\n      let afterPrice = {\n        data:null,\n        timeDiff:null\n      };\n\n      tokenData.forEach( d => {\n        const timeDiff = Math.abs(parseInt(d.timestamp)-parseInt(timestamp));\n        if (parseInt(d.timestamp)<parseInt(timestamp) && (!beforePrice.timeDiff || timeDiff<beforePrice.timeDiff)){\n          beforePrice.timeDiff = timeDiff;\n          beforePrice.data = d;\n        }\n\n        if (parseInt(d.timestamp)>parseInt(timestamp) && !afterPrice.timeDiff){\n          afterPrice.timeDiff = timeDiff;\n          afterPrice.data = d;\n        }\n      });\n\n      // Take before and after and calculate correct tokenPrice based from price acceleration\n      if (beforePrice.data && afterPrice.data){\n        const tokenPriceBefore = this.BNify(beforePrice.data.idlePrice);\n        const tokenPriceAfter = this.BNify(afterPrice.data.idlePrice);\n        const timeBefore = this.BNify(beforePrice.data.timestamp);\n        const timeAfter = this.BNify(afterPrice.data.timestamp);\n        const timeDiff = timeAfter.minus(timeBefore);\n        const priceDiff = tokenPriceAfter.minus(tokenPriceBefore);\n        const priceAcceleration = priceDiff.div(timeDiff);\n        const timeDiffFromBeforePrice = this.BNify(timestamp).minus(timeBefore);\n        tokenPrice = tokenPriceBefore.plus(priceAcceleration.times(timeDiffFromBeforePrice));\n      }\n    }\n\n    // Fix token price decimals\n    if (tokenPrice && !this.BNify(tokenPrice).isNaN()){\n      tokenPrice = this.fixTokenDecimals(tokenPrice,decimals);\n    }\n\n    // If price is NaN then return 1\n    if (!tokenPrice || this.BNify(tokenPrice).isNaN() || this.BNify(tokenPrice).lt(1)){\n      tokenPrice = this.BNify(1);\n    }\n\n    // if (blockNumber !== 'latest'){\n      this.setCachedDataWithLocalStorage(cachedDataKey,tokenPrice);\n    // }\n\n    // this.customLog('getIdleTokenPrice',tokenPrice.toString());\n\n    return tokenPrice;\n  }\n  clearCachedData = () => {\n    if (this.props.clearCachedData && typeof this.props.clearCachedData === 'function'){\n      // this.customLog('clearCachedData',this.props.clearCachedData,typeof this.props.clearCachedData === 'function');\n      this.props.clearCachedData();\n    } else {\n      // this.customLog('clearCachedData - Function not found!');\n    }\n    return false;\n  }\n  /*\n  Cache data locally for 3 minutes\n  */\n  setCachedData = (key,data,TTL=180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function'){\n      this.props.setCachedData(key,data,TTL);\n    }\n    return data;\n  }\n  setCachedDataWithLocalStorage = (key,data,TTL=180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function'){\n      this.props.setCachedData(key,data,TTL,true);\n    }\n    return data;\n  }\n  getCachedDataWithLocalStorage = (key,defaultValue=null) => {\n    return this.getCachedData(key,defaultValue,true);\n  }\n  getCachedData = (key,defaultValue=null,useLocalStorage=false) => {\n    let cachedData = null;\n    key = key.toLowerCase();\n    // Get cache from current session\n    if (this.props.cachedData && this.props.cachedData[key]){\n      cachedData = this.props.cachedData[key];\n    // Get cache from local storage\n    } else if (useLocalStorage) {\n      cachedData = this.getStoredItem('cachedData');\n      if (cachedData && cachedData[key]){\n        cachedData = cachedData[key];\n      } else {\n        cachedData = null;\n      }\n    }\n\n    if (cachedData && cachedData.data && (!cachedData.expirationDate || cachedData.expirationDate>=parseInt(Date.now()/1000))){\n      return cachedData.data;\n    }\n    return defaultValue;\n  }\n  getUserPoolShare = async (walletAddr,tokenConfig) => {\n    const [\n      idleTokensBalance,\n      idleTokensTotalSupply\n    ] = await Promise.all([\n      this.getTokenBalance(tokenConfig.idle.token,walletAddr,false),\n      this.genericContractCall(tokenConfig.idle.token,'totalSupply')\n    ]);\n\n    let userShare = this.BNify(0);\n    if (this.BNify(idleTokensBalance).gt(0) && this.BNify(idleTokensTotalSupply).gt(0)){\n      userShare = this.BNify(idleTokensBalance).div(this.BNify(idleTokensTotalSupply));\n    }\n\n    return userShare;\n  }\n  openWindow = (url) => {\n    return window.open(url,'_blank','noopener');\n  }\n  getActiveCoverages = async (account=null) => {\n    const activeCoverages = [];\n    account = account || this.props.account;\n\n    if (!account){\n      return activeCoverages;\n    }\n\n    const currTimestamp = parseInt(Date.now()/1000);\n    const coverProtocolConfig = this.getGlobalConfig(['tools','coverProtocol']);\n    if (coverProtocolConfig.enabled){\n      await this.asyncForEach(coverProtocolConfig.props.coverages, async (coverage) => {\n        const token = 'Claim';\n        const coverageTokens = coverage.tokens;\n        const tokenConfig = coverageTokens[token];\n        // Initialize coverage contract\n        await this.props.initContract(tokenConfig.name,tokenConfig.address,tokenConfig.abi);\n        // Take balance\n        const balance = await this.getTokenBalance(tokenConfig.name,account);\n        if (balance && balance.gt(0)){\n          const collateral = coverage.collateral;\n          const protocolName = coverProtocolConfig.label;\n          const protocolImage = coverProtocolConfig.image;\n          const fileClaimUrl = coverProtocolConfig.fileClaimUrl;\n          const status = coverage.expirationTimestamp<=currTimestamp ? 'Expired' : 'Active';\n          const expirationDate = moment(coverage.expirationTimestamp*1000).utc().format('YYYY-MM-DD HH:mm:ss')+' UTC';\n          activeCoverages.push({\n            token,\n            status,\n            balance,\n            collateral,\n            protocolName,\n            fileClaimUrl,\n            protocolImage,\n            expirationDate\n          });\n        }\n      });\n    }\n\n    return activeCoverages;\n  }\n  getBatchedDepositExecutions = async (contractAddress) => {\n    const requiredNetwork = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n    const etherscanInfo = this.getGlobalConfig(['network','providers','etherscan']);\n    if (etherscanInfo.enabled && etherscanInfo.endpoints[requiredNetwork]){\n      const etherscanApiUrl = etherscanInfo.endpoints[requiredNetwork];\n      const etherscanEndpoint = `${etherscanApiUrl}?&apikey=${env.REACT_APP_ETHERSCAN_KEY}&module=account&action=tokentx&address=${contractAddress}&sort=desc`;\n      const transactions = await this.makeCachedRequest(etherscanEndpoint,1800,true);\n      if (transactions && typeof transactions.result === 'object'){\n        return transactions.result.filter( tx => tx.from === '0x0000000000000000000000000000000000000000' && tx.to.toLowerCase() === contractAddress.toLowerCase() );\n      }\n    }\n    return null;\n  }\n  getBatchedDeposits = async (account=null,filter_by_status=null) => {\n    account = account || this.props.account;\n    if (!account){\n      return null;\n    }\n\n    const batchDepositConfig = this.getGlobalConfig(['tools','batchDeposit']);\n    if (!batchDepositConfig.enabled){\n      return null;\n    }\n\n    const cachedDataKey = `batchedDeposits_${account}_${filter_by_status}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    const batchedDeposits = {};\n    const availableTokens = batchDepositConfig.props.availableTokens;\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const migrationContract = tokenConfig.migrationContract;\n      await this.props.initContract(migrationContract.name,migrationContract.address,migrationContract.abi);\n      const currBatchIndex = await this.genericContractCall(migrationContract.name,'currBatch');\n      for (let batchIndex = 0; batchIndex <= parseInt(currBatchIndex) ; batchIndex++){\n        let [\n          batchExecutions,\n          batchTotal,\n          batchRedeem,\n          batchDeposit\n        ] = await Promise.all([\n          this.getBatchedDepositExecutions(migrationContract.address),\n          this.genericContractCall(migrationContract.name,'batchTotals',[batchIndex]),\n          this.genericContractCall(migrationContract.name,'batchRedeemedTotals',[batchIndex]),\n          this.genericContractCall(migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n        ]);\n        let batchTotals = null;\n        let batchRedeems = null;\n        let batchDeposits = null;\n        if (batchTotal && batchTotal !== null){\n          batchTotals = this.fixTokenDecimals(batchTotal,tokenConfig.decimals);\n        }\n        if (batchDeposit !== null){\n          batchRedeem = this.fixTokenDecimals(batchRedeem,18);\n          batchDeposit = this.fixTokenDecimals(batchDeposit,tokenConfig.decimals);\n          if (batchDeposit.gt(0)){\n            batchDeposits = batchDeposit;\n\n            // Calculate redeemable idleTokens\n            batchRedeems = batchDeposit.times(batchRedeem).div(batchTotals);\n            if (batchRedeems.gt(batchRedeem)){\n              batchRedeems = batchRedeem;\n            }\n\n            const status = batchIndex < currBatchIndex && batchRedeems.gt(0) ? 'executed' : 'pending';\n\n            if (filter_by_status !== null && filter_by_status.toLowerCase() !== status){\n              return;\n            }\n\n            const lastExecution = batchExecutions && batchExecutions.length ? batchExecutions[0] : null;\n\n            batchedDeposits[token] = {\n              status,\n              batchTotals,\n              batchRedeems,\n              batchDeposits,\n              lastExecution\n            };\n          }\n        }\n      }\n    });\n\n    return this.setCachedData(cachedDataKey,batchedDeposits);\n  }\n  getETHBalance = async (walletAddr,fixDecimals=true,blockNumber='latest') => {\n    if (!walletAddr){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `ethBalance_${walletAddr}_${fixDecimals}_${blockNumber}`;\n    if (blockNumber !== 'latest'){\n      const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.BNify(cachedData).isNaN()){\n        return this.BNify(cachedData);\n      }\n    }\n\n    let tokenBalance = await this.props.web3.eth.getBalance(walletAddr);\n\n    if (tokenBalance){\n      if (fixDecimals){\n        tokenBalance = this.fixTokenDecimals(tokenBalance,18);\n      }\n\n      tokenBalance = this.BNify(tokenBalance);\n\n      // Set cached data\n      if (!tokenBalance.isNaN()){\n        if (blockNumber !== 'latest'){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,tokenBalance);\n        } else {\n          return tokenBalance;\n        }\n      }\n    }\n    return null;\n  }\n  getTokenBalance = async (contractName,walletAddr,fixDecimals=true,blockNumber='latest') => {\n    if (!walletAddr){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenBalance_${contractName}_${walletAddr}_${fixDecimals}_${blockNumber}`;\n    if (blockNumber !== 'latest'){\n      const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.BNify(cachedData).isNaN()){\n        return this.BNify(cachedData);\n      }\n    }\n\n    let [\n      tokenDecimals,\n      tokenBalance\n    ] = await Promise.all([\n      this.getTokenDecimals(contractName),\n      this.getContractBalance(contractName,walletAddr,blockNumber)\n    ]);\n\n    if (tokenBalance){\n      if (fixDecimals){\n        tokenBalance = this.fixTokenDecimals(tokenBalance,tokenDecimals);\n      }\n\n      tokenBalance = this.BNify(tokenBalance);\n\n      // Set cached data\n      if (!tokenBalance.isNaN()){\n        if (blockNumber !== 'latest'){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,tokenBalance);\n        } else {\n          return tokenBalance;\n        }\n      }\n    } else {\n      this.customLogError('Error on getting balance for ',contractName);\n    }\n    return null;\n  }\n  copyToClipboard = (copyText) => {\n    if (typeof copyText.select === 'function'){\n      copyText.select();\n      copyText.setSelectionRange(0, 99999); // Select\n      const res = document.execCommand(\"copy\");\n      copyText.setSelectionRange(0, 0); // Deselect\n      return res;\n    }\n    return false;\n  }\n  loadScript = (url,props,callback) => {\n    const script = document.createElement(\"script\");\n    script.src = url;\n\n    // Append props\n    if (props){\n      Object.keys(props).forEach((attr,i) => {\n        script[attr] = props[attr];\n      });\n    }\n\n    if (typeof callback === 'function'){\n      if (script.readyState) {  // only required for IE <9\n        script.onreadystatechange = function() {\n          if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n            script.onreadystatechange = null;\n            callback();\n          }\n        };\n      } else {  //Others\n        script.onload = callback;\n      }\n    }\n\n    if (!script.id || !document.getElementById(script.id)){\n      document.body.appendChild(script);\n    }\n  }\n  isValidJSON = str => {\n    try {\n      JSON.parse(str);\n    } catch (e) {\n      return false;\n    }\n    return true;\n  }\n  checkAddress = (address) => {\n    return address ? address.match(/^0x[a-fA-F0-9]{40}$/) !== null : false;\n  }\n  getTokenTotalSupply = async (contractName,blockNumber='latest') => {\n    return await this.genericContractCall(contractName, 'totalSupply', [], {}, blockNumber);\n  }\n  getContractBalance = async (contractName,address,blockNumber='latest') => {\n    address = address ? address : this.props.tokenConfig.idle.address;\n    return await this.genericContractCall(contractName, 'balanceOf', [address], {}, blockNumber);\n  }\n  getProtocolBalance = async (contractName,address) => {\n    address = address ? address : this.props.tokenConfig.idle.address;\n    return await this.genericContractCall(contractName, 'balanceOf', [address]);\n  }\n  getAprs = async (contractName) => {\n    contractName = contractName ? contractName : this.props.tokenConfig.idle.token;\n    const aprs = await this.genericContractCall(contractName, 'getAPRs');\n    if (aprs){\n      return {\n        aprs:aprs[1],\n        addresses:aprs[0]\n      };\n    }\n    return null;\n  }\n  genericIdleCall = async (methodName, params = [], callParams = {}) => {\n    return await this.genericContractCall(this.props.tokenConfig.idle.token, methodName, params, callParams).catch(err => {\n      this.customLogError('Generic Idle call err:', err);\n    });\n  }\n  estimateGas = async (contractName, methodName, params = [], callParams = {}) => {\n    let contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLogError('Wrong contract name', contractName);\n      return null;\n    }\n\n    return await contract.methods[methodName](...params).estimateGas(callParams);\n  }\n  getTxDecodedLogs = async (tx,logAddr,decodeLogs,storedTx) => {\n\n    let txReceipt = storedTx && storedTx.txReceipt ? storedTx.txReceipt : null;\n\n    if (!txReceipt){\n      txReceipt = await (new Promise( async (resolve, reject) => {\n        this.props.web3.eth.getTransactionReceipt(tx.hash,(err,tx)=>{\n          if (err){\n            reject(err);\n          }\n          resolve(tx);\n        });\n      }));\n\n    }\n\n    if (!txReceipt){\n      return null;\n    }\n\n    const internalTransfers = txReceipt.logs.filter((tx) => { return tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${logAddr}`; });\n\n    if (!internalTransfers.length){\n      return null;\n    }\n\n    try {\n      return [\n        txReceipt,\n        this.props.web3.eth.abi.decodeLog(decodeLogs,internalTransfers[0].data,internalTransfers[0].topics)\n      ];\n    } catch (error) {\n      return null;\n    }\n  }\n  blocksToSeconds = (blocks) => {\n    const blocksPerSeconds = this.BNify(this.getGlobalConfig(['network','blocksPerYear'])).div(365.2422).div(86400);\n    return this.BNify(blocks).div(blocksPerSeconds);\n  }\n  getBlockNumber = async () => {\n    return await this.props.web3.eth.getBlockNumber();\n  }\n  getContractPastEvents = async (contractName,methodName,params = {}) => {\n    if (!contractName){\n      return null;\n    }\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLogError('Wrong contract name', contractName);\n      return null;\n    }\n\n    return await contract.getPastEvents(methodName, params);\n  }\n  genericContractCall = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest') => {\n\n    if (!contractName){\n      return null;\n    }\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLog('Wrong contract name', contractName);\n      return null;\n    }\n\n    if (!contract.methods[methodName]) {\n      this.customLog('Wrong method name', methodName);\n      return null;\n    }\n\n    blockNumber = blockNumber !== 'latest' && blockNumber && !isNaN(blockNumber) ? parseInt(blockNumber) : blockNumber;\n\n    try{\n      this.customLog(`genericContractCall - ${contractName} - ${methodName}`);\n      const value = await contract.methods[methodName](...params).call(callParams,blockNumber).catch(error => {\n        this.customLog(`${contractName} contract method ${methodName} error: `, error);\n      });\n      this.customLog(`genericContractCall - ${contractName} - ${methodName} : ${value}`);\n      return value;\n    } catch (error) {\n      this.customLog(\"genericContractCall error\", error);\n    }\n  }\n  asyncForEach = async (array, callback, async=true) => {\n    if (async){\n      await Promise.all(array.map( (c,index) => {\n        return callback(c, index, array);\n      }));\n    } else {\n      for (let index = 0; index < array.length; index++) {\n        await callback(array[index], index, array);\n      }\n    }\n  }\n  apr2apy = (apr) => {\n    return (this.BNify(1).plus(this.BNify(apr).div(12))).pow(12).minus(1);\n  }\n  getUnlentBalance = async (tokenConfig) => {\n    let unlentBalance = await this.getProtocolBalance(tokenConfig.token,tokenConfig.idle.address);\n    if (unlentBalance){\n      unlentBalance = this.fixTokenDecimals(unlentBalance,tokenConfig.decimals);\n    }\n    return unlentBalance;\n  }\n  getTokenPool = async (tokenConfig,addGovTokens=true) => {\n    // Check for cached data\n    const cachedDataKey = `tokenPool_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN() ) {\n      return this.BNify(cachedData);\n    }\n\n    const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,addGovTokens);\n    if (tokenAllocation && tokenAllocation.totalAllocationWithUnlent){\n      const tokenPool = tokenAllocation.totalAllocationWithUnlent;\n      if (!this.BNify(tokenPool).isNaN()){\n        return this.setCachedDataWithLocalStorage(cachedDataKey,tokenPool);\n      }\n    }\n\n    return null;\n  }\n  /*\n  Get idleToken allocation between protocols\n  */\n  getTokenAllocation = async (tokenConfig,protocolsAprs=false,addGovTokens=true) => {\n\n    if (!tokenConfig.idle){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenAllocation_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    let totalAllocation = this.BNify(0);\n\n    const tokenAllocation = {\n      avgApr: null,\n      unlentBalance:null,\n      totalAllocation:null,\n      protocolsBalances:{},\n      protocolsAllocations:null,\n      protocolsAllocationsPerc:null,\n      totalAllocationConverted:null,\n      totalAllocationWithUnlent:null,\n      totalAllocationWithUnlentConverted:null,\n    };\n\n    const exchangeRates = {};\n    const protocolsBalances = {};\n    const protocolsAllocations = {};\n    const protocolsAllocationsPerc = {};\n\n    await this.asyncForEach(tokenConfig.protocols,async (protocolInfo,i) => {\n      const contractName = protocolInfo.token;\n      const protocolAddr = protocolInfo.address.toLowerCase();\n\n      let [\n        tokenDecimals,\n        protocolBalance,\n        exchangeRate\n      ] = await Promise.all([\n        this.getTokenDecimals(contractName),\n        this.getProtocolBalance(contractName,tokenConfig.idle.address),\n        ( protocolInfo.functions.exchangeRate ? this.genericContractCall(contractName,protocolInfo.functions.exchangeRate.name,protocolInfo.functions.exchangeRate.params) : null )\n      ]);\n\n      if (!protocolBalance){\n        return;\n      }\n\n      if (exchangeRate && protocolInfo.decimals){\n        exchangeRates[protocolAddr] = exchangeRate;\n        exchangeRate = this.fixTokenDecimals(exchangeRate,protocolInfo.decimals);\n      }\n\n      let protocolAllocation = this.fixTokenDecimals(protocolBalance,tokenDecimals,exchangeRate);\n\n      if (protocolAllocation.lt(this.BNify(0.00000001))){\n        protocolBalance = this.BNify(0);\n        protocolAllocation = this.BNify(0);\n      }\n\n      protocolsBalances[protocolAddr] = protocolBalance;\n      protocolsAllocations[protocolAddr] = protocolAllocation;\n      totalAllocation = totalAllocation.plus(protocolAllocation);\n\n      // console.log('getTokenAllocation',contractName,protocolAddr,protocolAllocation.toFixed(5),exchangeRate ? exchangeRate.toFixed(5) : null,totalAllocation.toFixed(5));\n    });\n\n    tokenAllocation.unlentBalance = this.BNify(0);\n    tokenAllocation.totalAllocationWithUnlent = this.BNify(totalAllocation);\n\n    // Add unlent balance to the pool\n    let unlentBalance = await this.getUnlentBalance(tokenConfig);\n    if (unlentBalance){\n      tokenAllocation.unlentBalance = unlentBalance;\n      tokenAllocation.totalAllocationWithUnlent = tokenAllocation.totalAllocationWithUnlent.plus(unlentBalance);\n    }\n\n    // console.log('totalAllocationWithUnlent 1',addGovTokens,tokenAllocation.totalAllocationWithUnlent.toFixed(5));\n\n    Object.keys(protocolsAllocations).forEach((protocolAddr,i) => {\n      const protocolAllocation = protocolsAllocations[protocolAddr];\n      const protocolAllocationPerc = protocolAllocation.div(totalAllocation);\n      protocolsAllocationsPerc[protocolAddr] = protocolAllocationPerc;\n    });\n\n    tokenAllocation.totalAllocation = totalAllocation;\n    tokenAllocation.protocolsAllocations = protocolsAllocations;\n    tokenAllocation.protocolsAllocationsPerc = protocolsAllocationsPerc;\n\n    if (addGovTokens){\n      const govTokensBalances = await this.getGovTokensBalances(tokenConfig.idle.address);\n\n      // Sum gov tokens balances\n      if (govTokensBalances.total){\n        const tokenUsdConversionRate = await this.getTokenConversionRate(tokenConfig,false);\n        if (tokenUsdConversionRate){\n          govTokensBalances.total = govTokensBalances.total.div(tokenUsdConversionRate);\n        }\n\n        tokenAllocation.totalAllocationWithUnlent = tokenAllocation.totalAllocationWithUnlent.plus(govTokensBalances.total);\n\n        // console.log('totalAllocationWithUnlent 2',govTokensBalances.total.toFixed(5),tokenAllocation.totalAllocationWithUnlent.toFixed(5));\n      }\n    }\n\n    tokenAllocation.totalAllocationConverted = await this.convertTokenBalance(tokenAllocation.totalAllocation,tokenConfig.token,tokenConfig);\n    tokenAllocation.totalAllocationWithUnlentConverted = await this.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent,tokenConfig.token,tokenConfig);\n\n    if (protocolsAprs){\n      tokenAllocation.avgApr = this.getAvgApr(protocolsAprs,protocolsAllocations,totalAllocation);\n    }\n\n    return this.setCachedData(cachedDataKey,tokenAllocation);\n  }\n  getUniswapConversionRate_path = async (path) => {\n    const one = this.normalizeTokenDecimals(18);\n    const unires = await this.genericContractCall('UniswapRouter','getAmountsIn',[one.toFixed(),path]);\n    return unires;\n  }\n  getSushiswapPoolTokenPrice = async (contractName,pairAddresses) => {\n    const [\n      token0_address,\n      token1_address,\n      poolReserves,\n      totalSupply\n    ] = await Promise.all([\n      this.genericContractCall(contractName,'token0'),\n      this.genericContractCall(contractName,'token1'),\n      this.genericContractCall(contractName,'getReserves'),\n      this.genericContractCall(contractName,'totalSupply')\n    ]);\n\n    if (token0_address && token1_address && poolReserves && totalSupply){\n      const token0_config = {\n        address:token0_address\n      };\n      const token1_config = {\n        address:token1_address\n      };\n      const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n\n      let [\n        token0_price,\n        token1_price\n      ] = await Promise.all([\n        this.getSushiswapConversionRate(DAITokenConfig,token0_config),\n        this.getSushiswapConversionRate(DAITokenConfig,token1_config)\n      ]);\n\n      if (token0_price && token1_price){\n        // token0_price = this.BNify(1).div(this.BNify(token0_price));\n        // token1_price = this.BNify(1).div(this.BNify(token1_price));\n\n        const token0_pool = token0_price.times(this.fixTokenDecimals(poolReserves[0],18));\n        const token1_pool = token1_price.times(this.fixTokenDecimals(poolReserves[1],18));\n\n        const totalPoolSize = token0_pool.plus(token1_pool);\n        const poolTokenPrice = totalPoolSize.div(this.fixTokenDecimals(totalSupply,18));\n\n        // console.log(parseFloat(token0_price),parseFloat(token1_price),parseFloat(poolTokenPrice));\n\n        return poolTokenPrice;\n      }\n    }\n\n    return null;\n  }\n  getSushiswapConversionRate = async (tokenConfigFrom,tokenConfigDest) => {\n\n    // Check for cached data\n    const cachedDataKey = `sushiswapConversionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    try {\n      const WETHAddr = this.getGlobalConfig(['stats','tokens','WETH','address']);\n      const one = this.normalizeTokenDecimals(18);\n\n      const path = [];\n      path.push(tokenConfigFrom.address);\n\n      // Don't pass through weth if i'm converting weth\n      if (WETHAddr.toLowerCase() !== tokenConfigFrom.address.toLowerCase() && WETHAddr.toLowerCase() !== tokenConfigDest.address.toLowerCase()){\n        path.push(WETHAddr);\n      }\n      path.push(tokenConfigDest.address);\n\n      const res = await this.genericContractCall('SushiswapRouter','getAmountsIn',[one.toFixed(),path]);\n\n      if (res){\n        const price = this.BNify(res[0]).div(one);\n        return this.setCachedDataWithLocalStorage(cachedDataKey,price);\n      }\n      return null;\n    } catch (error) {\n      return null;\n    }\n  }\n  getUniswapConversionRate = async (tokenConfigFrom,tokenConfigDest) => {\n\n    if (tokenConfigDest.addressForPrice){\n      tokenConfigDest = Object.assign({},tokenConfigDest);\n      tokenConfigDest.address = tokenConfigDest.addressForPrice;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `uniswapConversionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    // console.log('getUniswapConversionRate - CACHED',cachedDataKey,cachedData);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    try {\n      const WETHAddr = this.getGlobalConfig(['stats','tokens','WETH','address']);\n      const one = this.normalizeTokenDecimals(18);\n\n      const path = [];\n      path.push(tokenConfigFrom.address);\n      // Don't pass through weth if i'm converting weth\n      if (WETHAddr.toLowerCase() !== tokenConfigFrom.address.toLowerCase() && WETHAddr.toLowerCase() !== tokenConfigDest.address.toLowerCase()){\n        path.push(WETHAddr);\n      }\n      path.push(tokenConfigDest.address);\n\n      const unires = await this.genericContractCall('UniswapRouter','getAmountsIn',[one.toFixed(),path]);\n\n      if (unires){\n        const price = this.BNify(unires[0]).div(one);\n        // console.log('getUniswapConversionRate',path,price.toFixed());\n        return this.setCachedDataWithLocalStorage(cachedDataKey,price);\n      }\n      return null;\n    } catch (error) {\n      return null;\n    }\n  }\n  /*\n  getUniswapConversionRate_old = async (tokenConfigFrom,tokenConfigDest) => {\n    const cachedDataKey = `compUniswapConverstionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n\n    const tokenFrom = new Token(ChainId.MAINNET, tokenConfigFrom.address, tokenConfigFrom.decimals);\n    const tokenTo = new Token(ChainId.MAINNET, tokenConfigDest.address, tokenConfigDest.decimals);\n\n    const pair = await Fetcher.fetchPairData(tokenFrom, tokenTo);\n    const route = new Route([pair], tokenTo);\n\n    let output = null;\n    if (route && route.midPrice){\n      output = this.BNify(route.midPrice.toSignificant(tokenConfigDest.decimals));\n      this.setCachedData(cachedDataKey,output);\n    }\n    return output;\n  }\n  */\n  getCurveDepositedTokens = async (account,enabledTokens=[]) => {\n    account = account ? account : this.props.account;\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    if (!account || !enabledTokens || !enabledTokens.length){\n      return [];\n    }\n\n    const curveTxs = await this.getCurveTxs(account,0,'latest',enabledTokens);\n\n    const idleTokensBalances = {};\n    let remainingCurveTokens = this.BNify(0);\n\n    // this.customLog('getCurveDepositedTokens',curveTxs);\n\n    curveTxs.forEach( tx => {\n\n      const idleToken = tx.idleToken;\n      const idleTokens = this.BNify(tx.idleTokens);\n\n      if (!idleTokensBalances[idleToken]){\n        idleTokensBalances[idleToken] = this.BNify(0);\n      }\n\n      switch (tx.action){\n        case 'CurveIn':\n        case 'CurveZapIn':\n          idleTokensBalances[idleToken] = idleTokensBalances[idleToken].plus(idleTokens);\n        break;\n        case 'CurveOut':\n        case 'CurveZapOut':\n          if (idleTokens.gt(idleTokensBalances[idleToken])){\n            remainingCurveTokens = remainingCurveTokens.plus(idleTokens.minus(idleTokensBalances[idleToken]));\n          }\n          idleTokensBalances[idleToken] = idleTokensBalances[idleToken].minus(idleTokens);\n          if (idleTokensBalances[idleToken].lt(0)){\n            idleTokensBalances[idleToken] = this.BNify(0);\n          }\n        break;\n        default:\n        break;\n      }\n\n      // this.customLog(this.strToMoment(tx.timeStamp*1000).format('DD-MM-YYYY HH:mm:ss'),tx.blockNumber,idleToken,tx.action,idleTokens.toFixed(6),idleTokensBalances[idleToken].toFixed(6),remainingCurveTokens.toFixed(6));\n\n      // Scalo il remaining tokens\n      if (remainingCurveTokens.gt(0)){\n        Object.keys(idleTokensBalances).forEach( token => {\n          const tokenBalance = idleTokensBalances[token];\n          if (tokenBalance && tokenBalance.gt(0)){\n            if (tokenBalance.gt(remainingCurveTokens)){\n              idleTokensBalances[token] = idleTokensBalances[token].minus(remainingCurveTokens);\n            } else {\n              remainingCurveTokens = remainingCurveTokens.minus(idleTokensBalances[token]);\n              idleTokensBalances[token] = 0;\n            }\n          }\n        });\n      }\n    });\n\n    // this.customLog('idleTokensBalances',idleTokensBalances);\n  }\n  getCurveUnevenTokenAmounts = async (amounts,max_burn_amount) => {\n    const curveSwapContract = await this.getCurveDepositContract();\n    if (curveSwapContract){\n      const unevenAmounts = await this.genericContractCall(curveSwapContract.name, 'remove_liquidity_imbalance', [amounts, max_burn_amount]);\n      // this.customLog('getCurveUnevenTokenAmounts',amounts,max_burn_amount,unevenAmounts);\n      return unevenAmounts;\n    }\n    return null;\n  }\n  getCurveAPY = async () => {\n\n    // Check for cached data\n    const cachedDataKey = `getCurveAPY`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const curveRatesInfo = this.getGlobalConfig(['curve','rates']);\n    if (curveRatesInfo){\n      const results = await this.makeRequest(curveRatesInfo.endpoint);\n      if (results && results.data){\n        const path = Object.values(curveRatesInfo.path);\n        let curveApy = this.getArrayPath(path,results.data);\n        if (curveApy){\n          curveApy = this.BNify(curveApy).times(100);\n          if (!this.BNify(curveApy).isNaN()){\n            return this.setCachedDataWithLocalStorage(cachedDataKey,curveApy);\n          }\n        }\n      }\n    }\n    return null;\n  }\n  getCurveAvailableTokens = () => {\n    if (!this.props.availableStrategies){\n      return false;\n    }\n    const curveTokens = this.getGlobalConfig(['curve','availableTokens']);\n    const strategyTokens = this.props.availableStrategies['best'];\n    const availableTokens = Object.keys(strategyTokens).reduce( (availableTokens,token) => {\n      const tokenConfig = strategyTokens[token];\n      if (Object.keys(curveTokens).includes(tokenConfig.idle.token) && curveTokens[tokenConfig.idle.token].enabled){\n        availableTokens[token] = tokenConfig;\n      }\n      return availableTokens;\n    },{});\n\n    return availableTokens;\n  }\n  getCurveAPYContract = async () => {\n    const curveSwapContract = await this.getCurveDepositContract();\n    if (curveSwapContract){\n      const blockNumber = await this.getBlockNumber();\n      if (blockNumber){\n        const blocksForPrevTokenPrice = 10;\n        let [tokenPrice,prevTokenPrice] = await Promise.all([\n          this.genericContractCall(curveSwapContract.name,'get_virtual_price'),\n          this.genericContractCall(curveSwapContract.name,'get_virtual_price',[],{},blockNumber-blocksForPrevTokenPrice)\n        ]);\n\n        if (tokenPrice && prevTokenPrice){\n\n          const blocksMultiplier = this.BNify(this.getGlobalConfig(['network','blocksPerYear'])).div(blocksForPrevTokenPrice);\n          const curveAPR = this.BNify(tokenPrice).div(prevTokenPrice).minus(1).times(blocksMultiplier);\n          return this.apr2apy(curveAPR).times(100);\n        }\n      }\n    }\n    return null;\n  }\n  getCurveTokenSupply = async () => {\n    const curvePoolContract = await this.getCurvePoolContract();\n    if (curvePoolContract){\n      return await this.genericContractCall(curvePoolContract.name,'totalSupply');\n    }\n    return null;\n  }\n  getCurveTokenBalance = async (account=null,fixDecimals=true) => {\n    const curvePoolContract = await this.getCurvePoolContract();\n    if (curvePoolContract){\n      account = account ? account : this.props.account;\n      return await this.getTokenBalance(curvePoolContract.name,account,fixDecimals);\n    }\n    return null;\n  }\n  getCurveTokenPrice = async (blockNumber='latest',fixDecimals=true) => {\n    const migrationContract = await this.getCurveDepositContract();\n    let curveTokenPrice = await this.genericContractCall(migrationContract.name,'get_virtual_price',[],{},blockNumber);\n    if (curveTokenPrice){\n      curveTokenPrice = this.BNify(curveTokenPrice);\n      if (fixDecimals){\n        const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n        curveTokenPrice = this.fixTokenDecimals(curveTokenPrice,curvePoolContract.decimals);\n      }\n      return curveTokenPrice;\n    }\n    return null;\n  }\n  getCurveRedeemableIdleTokens = async (account) => {\n    let [curveTokenPrice,curveTokenBalance] = await Promise.all([\n      this.getCurveTokenPrice('latest'),\n      this.getCurveTokenBalance(account),\n    ]);\n    if (curveTokenBalance && curveTokenPrice){\n      return this.BNify(curveTokenBalance).times(curveTokenPrice);\n    }\n    return null;\n  }\n  getCurveDepositContract = async () => {\n    const depositContractInfo = this.getGlobalConfig(['curve','depositContract']);\n    if (depositContractInfo){\n      let curveDepositContract = this.getContractByName(depositContractInfo.name);\n      if (!curveDepositContract && depositContractInfo.abi){\n        curveDepositContract = await this.props.initContract(depositContractInfo.name,depositContractInfo.address,depositContractInfo.abi);\n      }\n    }\n    return depositContractInfo;\n  }\n  getCurveZapContract = async () => {\n    const zapContractInfo = this.getGlobalConfig(['curve','zapContract']);\n    if (zapContractInfo){\n      let curveZapContract = this.getContractByName(zapContractInfo.name);\n      if (!curveZapContract && zapContractInfo.abi){\n        curveZapContract = await this.props.initContract(zapContractInfo.name,zapContractInfo.address,zapContractInfo.abi);\n      }\n    }\n    return zapContractInfo;\n  }\n  getCurvePoolContract = async () => {\n    const poolContractInfo = this.getGlobalConfig(['curve','poolContract']);\n    if (poolContractInfo){\n      let curvePoolContract = this.getContractByName(poolContractInfo.name);\n      if (!curvePoolContract && poolContractInfo.abi){\n        curvePoolContract = await this.props.initContract(poolContractInfo.name,poolContractInfo.address,poolContractInfo.abi);\n      }\n    }\n    return poolContractInfo;\n  }\n  getCurveSwapContract = async () => {\n    const migrationContractInfo = this.getGlobalConfig(['curve','migrationContract']);\n    if (migrationContractInfo){\n      let migrationContract = this.getContractByName(migrationContractInfo.name);\n      if (!migrationContract && migrationContractInfo.abi){\n        migrationContract = await this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi);\n      }\n    }\n    return migrationContractInfo;\n  }\n  getCurveIdleTokensAmounts = async (account=null,curveTokenBalance=null,max_slippage=null) => {\n    if (!account && this.props.account){\n      account = this.props.account;\n    }\n\n    if (!account){\n      return null;\n    }\n\n    const tokensBalances = {};\n    const curveSwapContract = await this.getCurveSwapContract();\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n\n    const curveTokenSupply = await this.getCurveTokenSupply();\n    if (!curveTokenBalance){\n      curveTokenBalance = await this.getCurveTokenBalance(account,false);\n    }\n\n    if (curveTokenBalance && curveTokenSupply){\n      const curveTokenShare = this.BNify(curveTokenBalance).div(this.BNify(curveTokenSupply));\n      const n_coins = Object.keys(curveAvailableTokens).length;\n\n      if (max_slippage){\n        max_slippage = this.BNify(max_slippage).div(n_coins);\n      }\n\n      // this.customLog('curveTokenShare',this.BNify(curveTokenBalance).toString(),this.BNify(curveTokenSupply).toString(),curveTokenShare.toString());\n\n      await this.asyncForEach(Object.keys(curveAvailableTokens), async (token) => {\n        const curveTokenConfig = curveAvailableTokens[token];\n        const coinIndex = curveTokenConfig.migrationParams.coinIndex;\n        const curveIdleTokens = await this.genericContractCall(curveSwapContract.name,'balances',[coinIndex]);\n        if (curveIdleTokens){\n          let idleTokenBalance = this.BNify(curveIdleTokens).times(curveTokenShare);\n          if (max_slippage){\n            // this.customLog('getCurveIdleTokensAmounts',idleTokenBalance.toFixed());\n            idleTokenBalance = idleTokenBalance.minus(idleTokenBalance.times(max_slippage));\n          }\n          tokensBalances[coinIndex] = this.integerValue(idleTokenBalance);\n        }\n      });\n    }\n\n    return Object.values(tokensBalances);\n  }\n\n  // Get amounts of underlying tokens in the curve pool\n  getCurveTokensAmounts = async (account=null,curveTokenBalance=null,fixDecimals=false,useCoinIndex=false) => {\n\n    if (!account && this.props.account){\n      account = this.props.account;\n    }\n\n    if (!account){\n      return null;\n    }\n\n    const tokensBalances = {};\n    const availableTokens = this.getCurveAvailableTokens();\n    const curveSwapContract = await this.getCurveSwapContract();\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n\n    const curveTokenSupply = await this.getCurveTokenSupply();\n    if (!curveTokenBalance){\n      curveTokenBalance = await this.getCurveTokenBalance(account,false);\n    }\n\n    if (curveTokenBalance && curveTokenSupply){\n      const curveTokenShare = this.BNify(curveTokenBalance).div(this.BNify(curveTokenSupply));\n\n      await this.asyncForEach(Object.keys(curveAvailableTokens), async (token) => {\n        const curveTokenConfig = curveAvailableTokens[token];\n        const coinIndex = curveTokenConfig.migrationParams.coinIndex;\n        const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n        const [\n          idleTokenPrice,\n          idleTokenBalance\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.genericContractCall(curveSwapContract.name,'balances',[coinIndex]),\n        ]);\n\n        const totalTokenSupply = this.BNify(idleTokenBalance).times(this.BNify(idleTokenPrice));\n        let tokenBalance = totalTokenSupply.times(curveTokenShare);\n        if (fixDecimals){\n          tokenBalance = this.fixTokenDecimals(tokenBalance,18);\n        }\n\n        tokensBalances[curveTokenConfig.baseToken] = useCoinIndex ? this.integerValue(tokenBalance) : tokenBalance;\n      });\n    }\n\n    return useCoinIndex ? Object.values(tokensBalances) : tokensBalances;\n  }\n\n  // Compile amounts array for Curve\n  getCurveAmounts = async (token,amount,deposit=false) => {\n    const amounts = {};\n    const availableTokens = this.getCurveAvailableTokens();\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n\n    await this.asyncForEach(Object.keys(curveAvailableTokens), async (idleToken) => {\n      const curveTokenConfig = curveAvailableTokens[idleToken];\n      const migrationParams = curveTokenConfig.migrationParams;\n      const coinIndex = migrationParams.coinIndex;\n      if (idleToken === token && parseFloat(amount)>0){\n        const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n        amount = this.fixTokenDecimals(amount,18);\n        if (!deposit){\n          const idleTokenPrice = await this.getIdleTokenPrice(tokenConfig);\n          amount = amount.div(idleTokenPrice);\n        }\n        amount = this.normalizeTokenAmount(amount,curveTokenConfig.decimals);\n        amounts[coinIndex] = amount;\n      } else {\n        amounts[coinIndex] = 0;\n      }\n    });\n\n    return Object.values(amounts);\n  }\n  getCurveTokenAmount = async (amounts,deposit=true) => {\n    const migrationContract = await this.getCurveSwapContract();\n    if (migrationContract){\n      return await this.genericContractCall(migrationContract.name,'calc_token_amount',[amounts,deposit]);\n    }\n    return null;\n  }\n  getCurveSlippage = async (token,amount,deposit=true,uneven_amounts=null) => {\n    let slippage = null;\n    const depositContract = await this.getCurveDepositContract();\n    if (depositContract){\n\n      const n_coins = this.getGlobalConfig(['curve','params','n_coins']);\n\n      amount = this.BNify(amount)\n      if (!amount || amount.isNaN() || amount.lte(0)){\n        return null;\n      }\n\n      let amounts = uneven_amounts;\n      if (!amounts || amounts.length !== n_coins){\n        amounts = await this.getCurveAmounts(token,amount);\n      }\n\n      let [\n        virtualPrice,\n        tokenAmount\n      ] = await Promise.all([\n        this.genericContractCall(depositContract.name,'get_virtual_price'),\n        this.genericContractCall(depositContract.name,'calc_token_amount',[amounts,deposit]),\n      ]);\n\n      if (virtualPrice && tokenAmount){\n        amount = this.fixTokenDecimals(amount,18);\n        virtualPrice = this.fixTokenDecimals(virtualPrice,18);\n        tokenAmount = this.fixTokenDecimals(tokenAmount,18);\n        const Sv = tokenAmount.times(virtualPrice);\n\n        // Handle redeem in uneven amounts (Slippage 0%)\n        if (uneven_amounts && !deposit){\n          amount = amount.times(virtualPrice);\n        }\n\n        if (deposit){\n          slippage = Sv.div(amount).minus(1).times(-1);\n        } else {\n          slippage = amount.div(Sv).minus(1).times(-1);\n        }\n\n        // console.log('getCurveSlippage',token,deposit,amounts,tokenAmount.toFixed(6),virtualPrice.toFixed(6),Sv.toFixed(6),amount.toFixed(6),slippage.toFixed(6));\n\n        return slippage;\n      }\n    }\n    return null;\n  }\n  getStkAaveDistribution = async (tokenConfig,aTokenIdleSupply=null,annualize=true) => {\n\n    const cachedDataKey = `getStkAaveDistribution_${tokenConfig.idle.token}_${aTokenIdleSupply}_${annualize}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let aaveDistribution = this.BNify(0);\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens','stkAAVE']);\n    const aTokenConfig = tokenConfig.protocols.find( p => p.name === stkAAVETokenConfig.protocol );\n\n    if (!aTokenConfig || stkAAVETokenConfig.disabledTokens.includes(tokenConfig.idle.token)){\n      return aaveDistribution;\n    }\n\n    const aaveIncentivesController_address = await this.genericContractCall(aTokenConfig.token,'getIncentivesController');\n\n    // console.log('getStkAaveDistribution',tokenConfig.idle.token,aTokenConfig.token,aaveIncentivesController_address);\n\n    if (!aaveIncentivesController_address){\n      return aaveDistribution;\n    }\n\n    const IAaveIncentivesController_name = `IAaveIncentivesController_${aTokenConfig.token}`;\n    await this.props.initContract(IAaveIncentivesController_name,aaveIncentivesController_address,stkAAVETokenConfig.abi);\n\n    let [\n      aTokenTotalSupply,\n      tokenAllocation,\n      assetData,\n    ] = await Promise.all([\n      this.getTokenTotalSupply(aTokenConfig.token),\n      this.getTokenAllocation(tokenConfig,false,false),\n      this.genericContractCall(IAaveIncentivesController_name,'getAssetData',[aTokenConfig.address]),\n    ]);\n\n    if (assetData && tokenAllocation){\n\n      const aaveAllocationPerc = tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()];\n\n      if (aaveAllocationPerc && aaveAllocationPerc.gte(0.001)){\n        if (!aTokenIdleSupply){\n          aTokenIdleSupply = await this.genericContractCall(aTokenConfig.token,'balanceOf',[tokenConfig.idle.address]);\n        }\n\n        const aaveSpeed = this.BNify(assetData[1]);\n        aTokenIdleSupply = this.BNify(aTokenIdleSupply);\n        aTokenTotalSupply = this.BNify(aTokenTotalSupply);\n        const secondsPerYear = this.getGlobalConfig(['network','secondsPerYear']);\n\n        const aavePoolShare = aTokenIdleSupply.div(aTokenTotalSupply);\n        aaveDistribution = aaveSpeed.times(aavePoolShare);\n\n        if (annualize){\n          aaveDistribution = aaveDistribution.div(1e18).times(secondsPerYear);\n        }\n\n        // console.log('getStkAaveDistribution',tokenConfig.idle.token,aTokenIdleSupply.toFixed(),aTokenTotalSupply.toFixed(),aavePoolShare.toFixed(),aaveSpeed.toFixed(),aaveDistribution.toFixed());\n\n        if (!this.BNify(aaveDistribution).isNaN()){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,aaveDistribution);\n        }\n      }\n    }\n\n    return aaveDistribution;\n  }\n  getStkAaveUserDistribution = async (account=null,availableTokens=null) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens){\n      return false;\n    }\n\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens','stkAAVE']);\n\n    let output = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const aTokenInfo = tokenConfig.protocols.find( p => (p.name === stkAAVETokenConfig.protocol) );\n      if (aTokenInfo){\n        const [\n          userPoolShare,\n          aaveDistribution,\n        ] = await Promise.all([\n          this.getUserPoolShare(account,tokenConfig,false),\n          this.getStkAaveDistribution(tokenConfig,null,false),\n        ]);\n\n        if (aaveDistribution && userPoolShare){\n          output = output.plus(aaveDistribution.times(userPoolShare));\n        }\n      }\n    });\n\n    return output;\n  }\n  getStkAaveApr = async (token,tokenConfig,aaveConversionRate=null) => {\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens','stkAAVE']);\n    if (!stkAAVETokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getStkAaveApr_${tokenConfig.idle.token}_${aaveConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let stkAaveAPR = this.BNify(0);\n    const aaveDistribution = await this.getStkAaveDistribution(tokenConfig);\n\n    if (aaveDistribution && this.BNify(aaveDistribution).gt(0)){\n\n      // Get COMP conversion rate\n      if (!aaveConversionRate){\n        const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n        try {\n          const destTokenConfig = {\n            address:stkAAVETokenConfig.addressForPrice || stkAAVETokenConfig.address\n          };\n          aaveConversionRate = await this.getUniswapConversionRate(DAITokenConfig,destTokenConfig);\n        } catch (error) {\n\n        }\n        if (!aaveConversionRate || aaveConversionRate.isNaN()){\n          aaveConversionRate = this.BNify(1);\n        }\n      }\n\n      const stkAaveValue = this.BNify(aaveConversionRate).times(aaveDistribution);\n\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,false);\n\n      if (tokenAllocation){\n        stkAaveAPR = stkAaveValue.div(tokenAllocation.totalAllocationConverted).times(100);\n\n        // console.log('getStkAaveApr',tokenConfig.idle.token,aaveDistribution.toFixed(),this.BNify(aaveConversionRate).toFixed(),stkAaveValue.toFixed(),tokenAllocation.totalAllocationConverted.toFixed(),stkAaveAPR.toFixed());\n\n        if (!this.BNify(stkAaveAPR).isNaN()){\n          this.setCachedDataWithLocalStorage(cachedDataKey,stkAaveAPR);\n        }\n      }\n    }\n\n    return stkAaveAPR;\n  }\n  getCompAPR = async (token,tokenConfig,cTokenIdleSupply=null,compConversionRate=null) => {\n    const COMPTokenConfig = this.getGlobalConfig(['govTokens','COMP']);\n    if (!COMPTokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getCompAPR_${tokenConfig.idle.token}_${cTokenIdleSupply}_${compConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let compAPR = this.BNify(0);\n    const compDistribution = await this.getCompDistribution(tokenConfig,cTokenIdleSupply);\n\n    if (compDistribution){\n\n      const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n        \n      // Get COMP conversion rate\n      if (!compConversionRate){\n        try {\n          compConversionRate = await this.getUniswapConversionRate(DAITokenConfig,COMPTokenConfig);\n        } catch (error) {\n\n        }\n        if (!compConversionRate || compConversionRate.isNaN()){\n          compConversionRate = this.BNify(1);\n        }\n      }\n\n      const compValue = this.BNify(compConversionRate).times(compDistribution);\n\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,false);\n\n      if (tokenAllocation){\n        compAPR = compValue.div(tokenAllocation.totalAllocationConverted).times(100);\n        if (!this.BNify(compAPR).isNaN()){\n          this.setCachedDataWithLocalStorage(cachedDataKey,compAPR);\n        }\n      }\n    }\n\n    return compAPR;\n  }\n  getCompSpeed = async (cTokenAddress) => {\n    let compSpeed = await this.genericContractCall('Comptroller','compSpeeds',[cTokenAddress]);\n    if (compSpeed){\n      return this.BNify(compSpeed);\n    }\n    return null;\n  }\n  getCompDistribution = async (tokenConfig,cTokenIdleSupply=null,annualize=true) => {\n\n    const cachedDataKey = `getCompDistribution_${tokenConfig.idle.token}_${cTokenIdleSupply}_${annualize}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const cTokenInfo = tokenConfig.protocols.find( p => (p.name === 'compound') );\n    if (cTokenInfo){\n\n      // Get IdleToken allocation in compound\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,false);\n      const compoundAllocationPerc = tokenAllocation.protocolsAllocationsPerc[cTokenInfo.address.toLowerCase()];\n\n      // Calculate distribution if compound allocation >= 0.1%\n      if (compoundAllocationPerc && compoundAllocationPerc.gte(0.001)){\n\n        // Get COMP distribution speed and Total Supply\n        const [\n          compSpeed,\n          cTokenTotalSupply\n        ] = await Promise.all([\n          this.getCompSpeed(cTokenInfo.address),\n          this.genericContractCall(cTokenInfo.token,'totalSupply'),\n        ]);\n\n        if (compSpeed && cTokenTotalSupply){\n\n          // Get Idle liquidity supply\n          if (!cTokenIdleSupply){\n            cTokenIdleSupply = await this.genericContractCall(cTokenInfo.token,'balanceOf',[tokenConfig.idle.address]);\n          }\n\n          if (cTokenIdleSupply){\n\n            // Get COMP distribution for Idle in a Year\n            const blocksPerYear = this.getGlobalConfig(['network','blocksPerYear']);\n\n            // Take 50% of distrubution for lenders side\n            const compoundPoolShare = this.BNify(cTokenIdleSupply).div(this.BNify(cTokenTotalSupply));\n            let compDistribution = this.BNify(compSpeed).times(compoundPoolShare);\n\n            if (annualize){\n              compDistribution = compDistribution.div(1e18).times(this.BNify(blocksPerYear));\n            }\n\n            if (!this.BNify(compDistribution).isNaN()){\n              return this.setCachedDataWithLocalStorage(cachedDataKey,compDistribution);\n            }\n          }\n        }\n      }\n    }\n\n    return null;\n  }\n  getCompUserDistribution = async (account=null,availableTokens=null) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens){\n      return false;\n    }\n\n    let output = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const cTokenInfo = tokenConfig.protocols.find( p => (p.name === 'compound') );\n      if (cTokenInfo){\n        const [\n          userPoolShare,\n          compDistribution,\n        ] = await Promise.all([\n          this.getUserPoolShare(account,tokenConfig,false),\n          this.getCompDistribution(tokenConfig,null,false),\n        ]);\n\n        if (compDistribution && userPoolShare){\n          output = output.plus(compDistribution.times(userPoolShare));\n        }\n      }\n    });\n\n    return output;\n  }\n  getCompAvgApr = async (availableTokens=null) => {\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n    let output = this.BNify(0);\n    let totalAllocation = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [compApr,tokenAllocation] = await Promise.all([\n        this.getCompAPR(token,tokenConfig),\n        this.getTokenAllocation(tokenConfig,false,false)\n      ]);\n      \n      if (compApr && tokenAllocation){\n        output = output.plus(compApr.times(tokenAllocation.totalAllocation));\n        totalAllocation = totalAllocation.plus(tokenAllocation.totalAllocation);\n        // this.customLog(token,compApr.toString(),tokenAllocation.totalAllocation.toString(),output.toString(),totalAllocation.toString());\n      }\n    });\n\n    output = output.div(totalAllocation);\n\n    return output;\n  }\n  getTokensCsv = async () => {\n\n    // eslint-disable-next-line\n    Array.prototype.sum = function() {\n      return this.reduce(function(pv, cv) { return pv + cv; }, 0);\n    };\n    // eslint-disable-next-line\n    Array.prototype.max = function() {\n      return Math.max.apply(null, this);\n    };\n    // eslint-disable-next-line\n    Array.prototype.avg = function() {\n      return this.sum()/this.length;\n    };\n\n    const csv = [];\n    const availableStrategies = this.props.availableStrategies;\n    await this.asyncForEach(Object.keys(availableStrategies), async (strategy) => {\n      const availableTokens = availableStrategies[strategy];\n      const isRisk = strategy === 'risk';\n      await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n        const tokenConfig = availableTokens[token];\n        const rates = await this.getTokenApiData(tokenConfig.address,isRisk,null,null,false,7200,'ASC');\n        const header = [];\n        let protocols = null;\n        const rows = [];\n        const aprAvg = {};\n        const scoreAvg = {};\n\n        const lastRow = rates[rates.length-1];\n\n        rates.forEach( r => {\n          if (!protocols){\n            header.push('Token');\n            header.push('Date');\n\n            // Get protocols\n            protocols = [];\n            lastRow.protocolsData.forEach( p1 => {\n              const foundProtocol = tokenConfig.protocols.find( p2 => ( p2.address.toLowerCase() === p1.protocolAddr.toLowerCase() ) );\n              if (foundProtocol){\n                protocols.push(foundProtocol);\n              }\n            });\n\n            // Add APR columns\n            header.push('APR Idle');\n            header.push('SCORE Idle');\n\n            aprAvg['idle'] = [];\n            scoreAvg['idle'] = [];\n\n            protocols.forEach( p => {\n              header.push('APR '+p.name);\n              header.push('SCORE '+p.name);\n\n              aprAvg[p.name] = [];\n              scoreAvg[p.name] = [];\n            });\n\n            rows.push(header.join(','));\n          }\n\n          const date = moment(r.timestamp*1000).format('YYYY-MM-DD');\n          const rate = this.BNify(r.idleRate).div(1e18).toFixed(5);\n          const score = parseFloat(r.idleScore);\n\n          const row = [];\n          row.push(`${token}-${strategy}`);\n          row.push(date);\n          row.push(rate);\n          row.push(score);\n\n          if (date>='2020-09-15'/* && date<='2020-11-09'*/){\n            aprAvg['idle'].push(parseFloat(rate));\n            scoreAvg['idle'].push(parseFloat(score));\n          }\n\n          protocols.forEach( pInfo => {\n            const pData = r.protocolsData.find( p => (p.protocolAddr.toLowerCase() === pInfo.address.toLowerCase()) );\n            let pRate = '';\n            let pScore = '';\n            if (pData){\n              pScore = !this.BNify(pData.defiScore).isNaN() ? parseFloat(pData.defiScore) : '0.00000';\n              pRate = !this.BNify(pData.rate).isNaN() ? this.BNify(pData.rate).div(1e18) : '0.00000';\n              if (typeof pData[`${pInfo.name}AdditionalAPR`] !== 'undefined'){\n                const additionalRate = this.BNify(pData[`${pInfo.name}AdditionalAPR`]).div(1e18);\n                if (!additionalRate.isNaN()){\n                  pRate = pRate.plus(additionalRate);\n                }\n              }\n\n              if (date>='2020-09-15'/* && date<='2020-11-09'*/){\n                if (!isNaN(parseFloat(pRate))){\n                  aprAvg[pInfo.name].push(parseFloat(pRate));\n                }\n                if (!isNaN(parseFloat(pScore))){\n                  scoreAvg[pInfo.name].push(parseFloat(pScore));\n                }\n              }\n            }\n\n            row.push(pRate);\n            row.push(pScore);\n          });\n\n          rows.push(row.join(','));\n        });\n\n        Object.keys(aprAvg).forEach( p => {\n          const avgRate = aprAvg[p].sum()/aprAvg[p].length;\n          this.customLog(`${token}-${strategy}-${p} - Avg Rate: ${avgRate}`);\n        });\n\n        Object.keys(scoreAvg).forEach( p => {\n          const avgScore = scoreAvg[p].sum()/scoreAvg[p].length;\n          this.customLog(`${token}-${strategy}-${p} - Avg Score: ${avgScore}`);\n        });\n\n        // if (token==='DAI' && isRisk){\n        //   debugger;\n        // }\n\n        csv.push(rows.join('\\n'));\n      });\n    });\n\n    this.customLog(csv.join('\\n'));\n  }\n  getGovTokenPool = async (govToken=null,availableTokens=null,convertToken=null) => {\n    let output = this.BNify(0);\n\n    if (!availableTokens){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const enabledTokens = govToken ? [govToken] : null;\n      const compTokenBalance = await this.getGovTokensBalances(tokenConfig.idle.address,convertToken,enabledTokens);\n      if (compTokenBalance && compTokenBalance.total){\n        output = output.plus(compTokenBalance.total);\n      }\n    });\n    return output;\n  }\n  getIdleGovToken = () => {\n    if (!this.idleGovToken){\n      this.idleGovToken = new IdleGovToken(this.props);\n    }\n    return this.idleGovToken;\n  }\n  getTokenGovTokens = (tokenConfig) => {\n    const output = {};\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    Object.keys(govTokens).forEach( govToken => {\n      const govTokenConfig = govTokens[govToken];\n      if (!govTokenConfig.enabled || govTokenConfig.disabledTokens.includes(tokenConfig.idle.token)){\n        return;\n      }\n      if (govTokenConfig.protocol === 'idle'){\n        output[govToken] = govTokenConfig;\n      } else {\n        const foundProtocol = tokenConfig.protocols.find( p => (p.enabled && p.name.toLowerCase() === govTokenConfig.protocol.toLowerCase()) )\n        if (foundProtocol){\n          output[govToken] = govTokenConfig;\n        }\n      }\n    });\n    return output;\n  }\n  fixDistributionSpeed = (speed,frequency='day',mode='block') => {\n    const blocksPerYear = this.BNify(this.getGlobalConfig(['network','blocksPerYear']));\n    const secondsPerYear = this.BNify(this.getGlobalConfig(['network','secondsPerYear']));\n    const multipliers = {\n      'day':{\n        'block':blocksPerYear.div(365.242199),\n        'second':secondsPerYear.div(365.242199)\n      },\n      'week':{\n        'block':blocksPerYear.div(52.1429),\n        'second':secondsPerYear.div(52.1429)\n      },\n      'month':{\n        'block':blocksPerYear.div(12),\n        'second':secondsPerYear.div(12)\n      },\n      'year':{\n        'block':blocksPerYear.div(1),\n        'second':secondsPerYear.div(1)\n      }\n    };\n    speed = this.BNify(speed);\n    if (speed && !speed.isNaN()){\n      return speed.times(multipliers[frequency][mode]);\n    }\n    return null;\n  }\n  getGovTokensUserDistributionSpeed = async (account,tokenConfig=null,enabledTokens=null) => {\n    const govTokensUserDistribution = {};\n    const govTokens = this.getGlobalConfig(['govTokens']);\n\n    await this.asyncForEach(Object.keys(govTokens),async (govToken) => {\n      if (enabledTokens && !enabledTokens.includes(govToken)){\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled){\n        return;\n      }\n\n      const availableTokens = {};\n      availableTokens[tokenConfig.token] = tokenConfig;\n\n      let output = null;\n      switch (govToken){\n        case 'COMP':\n          output = await this.getCompUserDistribution(account,availableTokens);\n        break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          output = await idleGovToken.getUserDistribution(account,availableTokens);\n        break;\n        default:\n        break;\n      }\n\n      if (output){\n        output = output.div(1e18);\n        if (govTokenConfig.distributionFrequency){\n          output = this.fixDistributionSpeed(output,govTokenConfig.distributionFrequency,govTokenConfig.distributionMode);\n        }\n        govTokensUserDistribution[govToken] = output;\n      }\n    });\n\n    return govTokensUserDistribution;\n  }\n  getGovTokensDistributionSpeed = async (tokenConfig,enabledTokens=null) => {\n    const govTokensDistribution = {};\n    const tokenGovTokens = this.getTokenGovTokens(tokenConfig);\n    \n    await this.asyncForEach(Object.keys(tokenGovTokens), async (govToken) => {\n      let govSpeed = null;\n      const govTokenConfig = tokenGovTokens[govToken];\n\n      switch (govToken){\n        case 'COMP':\n          govSpeed = await this.getCompDistribution(tokenConfig,null,false);\n        break;\n        case 'stkAAVE':\n          govSpeed = await this.getStkAaveDistribution(tokenConfig,null,false);\n        break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          govSpeed = await idleGovToken.getSpeed(tokenConfig.idle.address);\n        break;\n        default:\n        break;\n      }\n\n      if (govSpeed){\n        govSpeed = govSpeed.div(1e18);\n        if (govTokenConfig.distributionFrequency && govTokenConfig.distributionMode){\n          govSpeed = this.fixDistributionSpeed(govSpeed,govTokenConfig.distributionFrequency,govTokenConfig.distributionMode);\n        }\n        govTokensDistribution[govToken] = govSpeed;\n      }\n    });\n\n    return govTokensDistribution;\n  }\n  getGovTokensAprs = async (token,tokenConfig,enabledTokens=null) => {\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const govTokensAprs = {}\n\n    await this.asyncForEach(Object.keys(govTokens),async (govToken) => {\n\n      if (enabledTokens && !enabledTokens.includes(govToken)){\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled || govTokenConfig.aprTooltipMode === false){\n        return;\n      }\n\n      let output = null;\n      let tokenAllocation = null;\n\n      switch (govToken){\n        case 'stkAAVE':\n          switch (govTokenConfig.aprTooltipMode){\n            default:\n            case 'apr':\n              [output,tokenAllocation] = await Promise.all([\n                this.getStkAaveApr(token,tokenConfig),\n                this.getTokenAllocation(tokenConfig,false,false)\n              ]);\n\n              // Cut the AAVE token proportionally on Idle funds allocation in aave\n              if (tokenAllocation){\n                const aTokenConfig = tokenConfig.protocols.find( p => (p.name === govTokenConfig.protocol) );\n                if (aTokenConfig){\n                  if (tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()]){\n                    const aaveAllocationPerc = tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()];\n                    output = output.times(aaveAllocationPerc);\n                  }\n                }\n              }\n            break;\n          }\n        break;\n        case 'COMP':\n          switch (govTokenConfig.aprTooltipMode){\n            default:\n            case 'apr':\n              [output,tokenAllocation] = await Promise.all([\n                this.getCompAPR(token,tokenConfig),\n                this.getTokenAllocation(tokenConfig,false,false)\n              ]);\n\n              // Cut the COMP token proportionally on Idle funds allocation in compound\n              if (tokenAllocation){\n                const cTokenConfig = tokenConfig.protocols.find( p => (p.name === 'compound') );\n                if (cTokenConfig){\n                  if (tokenAllocation.protocolsAllocationsPerc[cTokenConfig.address.toLowerCase()]){\n                    const compoundAllocationPerc = tokenAllocation.protocolsAllocationsPerc[cTokenConfig.address.toLowerCase()];\n                    output = output.times(compoundAllocationPerc);\n                  }\n                }\n              }\n            break;\n          }\n        break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          switch (govTokenConfig.aprTooltipMode){\n            case 'apr':\n              output = await idleGovToken.getAPR(token,tokenConfig);\n            break;\n            case 'distribution':\n              output = await idleGovToken.getSpeed(tokenConfig.idle.address);\n              if (output){\n                output = this.fixTokenDecimals(output,18);\n                output = this.fixDistributionSpeed(output,govTokenConfig.distributionFrequency,govTokenConfig.distributionMode);\n              }\n            break;\n            case 'userDistribution':\n              output = await idleGovToken.getUserDistribution(tokenConfig);\n            break;\n            default:\n            break;\n          }\n        break;\n        default:\n        break;\n      }\n\n      if (output !== null && this.BNify(output).gt(0)){\n        govTokensAprs[govToken] = output;\n      }\n    });\n\n    return govTokensAprs;\n  }\n  getGovTokensBalances = async (address=null,convertToken='DAI',enabledTokens=null) => {\n    if (!address){\n      address = this.props.tokenConfig.idle.address;\n    }\n\n    const cachedDataKey = `getGovTokensBalances_${address}_${convertToken}_${JSON.stringify(enabledTokens)}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const govTokensBalances = {}\n\n    await this.asyncForEach(Object.keys(govTokens),async (token) => {\n\n      if (enabledTokens && !enabledTokens.includes(token)){\n        return;\n      }\n      \n      const govTokenConfig = govTokens[token];\n\n      if (!govTokenConfig.enabled){\n        return;\n      }\n\n      const destTokenConfig = {\n        address:govTokenConfig.addressForPrice || govTokenConfig.address\n      };\n\n      // Get gov token balance\n      let govTokenBalance = await this.getProtocolBalance(token,address);\n\n      if (govTokenBalance){\n        // Get gov token conversion rate\n        let tokenConversionRate = null;\n        if (convertToken){\n          const fromTokenConfig = this.getGlobalConfig(['stats','tokens',convertToken]);\n          try {\n            tokenConversionRate = await this.getUniswapConversionRate(fromTokenConfig,destTokenConfig);\n          } catch (error) {\n            tokenConversionRate = this.BNify(0);\n          }\n        }\n\n        const tokenBalance = this.fixTokenDecimals(govTokenBalance,govTokens[token].decimals,tokenConversionRate);\n\n        // Fix token decimals and convert\n        govTokensBalances[token] = tokenBalance;\n\n        // Initialize Total gov Tokens\n        if (!govTokensBalances.total){\n          govTokensBalances.total = this.BNify(0);\n        }\n\n        // Sum Total gov Tokens\n        govTokensBalances.total = govTokensBalances.total.plus(govTokensBalances[token]);\n      }\n    });\n\n    return this.setCachedData(cachedDataKey,govTokensBalances);\n  }\n  getGovTokenConfigByAddress = (address) => {\n    if (!address){\n      return false;\n    }\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    return Object.values(govTokens).find( tokenConfig => (tokenConfig.enabled && tokenConfig.address.toLowerCase() === address.toLowerCase()) );\n  }\n  getGovTokensUserTotalBalance = async (account=null,availableTokens=null,convertToken=null,checkShowBalance=true) => {\n\n    // Check for cached data\n    const cachedDataKey = `govTokensUserTotalBalance_${account}_${JSON.stringify(availableTokens)}_${convertToken}_${checkShowBalance}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const govTokensUserBalances = await this.getGovTokensUserBalances(account,availableTokens,convertToken,null,checkShowBalance);\n    if (govTokensUserBalances){\n      const govTokensEarnings = Object.values(govTokensUserBalances).reduce( (acc, govTokenAmount) => {\n        acc = acc.plus(this.BNify(govTokenAmount));\n        return acc;\n      }, this.BNify(0));\n\n      return this.setCachedDataWithLocalStorage(cachedDataKey,govTokensEarnings);\n    }\n    return this.BNify(0);\n  }\n  getGovTokensIndexes = async (account,tokenConfig) => {\n    if (!account){\n      account = this.props.account;\n    }\n    const output = {};\n    const govTokensAmounts = await this.genericContractCall(tokenConfig.idle.token,'getGovTokensAmounts',[account]);\n    if (govTokensAmounts){\n      await this.asyncForEach(govTokensAmounts, async (govTokenAmount,govTokenIndex) => {\n        // Get gov Token config by index\n        const govTokenAddress = await this.genericContractCall(tokenConfig.idle.token,'govTokens',[govTokenIndex]);\n\n        if (govTokenAddress){\n          const govTokenConfig = this.getGovTokenConfigByAddress(govTokenAddress);\n\n          if (govTokenConfig){\n            output[govTokenConfig.token] = govTokenIndex;\n          }\n        }\n      });\n    }\n\n    return output;\n  }\n  getGovTokensUserBalances = async (account=null,availableTokens=null,convertToken=null,govTokenConfigForced=null,checkShowBalance=false) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.availableStrategies && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    const output = {};\n\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const idleTokenConfig = availableTokens[token].idle;\n\n      // Get govTokens amounts\n      const govTokensAmounts = await this.genericContractCall(idleTokenConfig.token,'getGovTokensAmounts',[account]);\n\n      // console.log('getGovTokensUserBalances_1',idleTokenConfig.token,govTokensAmounts);\n\n      if (govTokensAmounts){\n        await this.asyncForEach(govTokensAmounts, async (govTokenAmount,govTokenIndex) => {\n          govTokenAmount = this.BNify(govTokenAmount);\n          // Get gov Token config by index\n          const govTokenAddress = await this.genericContractCall(idleTokenConfig.token,'govTokens',[govTokenIndex]);\n\n          // console.log('getGovTokensUserBalances_2',idleTokenConfig.token,govTokenIndex,govTokenAddress);\n\n          if (govTokenAddress){\n            const govTokenConfig = govTokenConfigForced ? govTokenConfigForced : this.getGovTokenConfigByAddress(govTokenAddress);\n\n            if (govTokenConfig && (!checkShowBalance || govTokenConfig.showBalance) && govTokenConfig.address && govTokenConfig.address.toLowerCase() === govTokenAddress.toLowerCase()){\n\n              // Get gov token conversion rate\n              let tokenConversionRate = null;\n              if (convertToken){\n                const fromTokenConfig = this.getGlobalConfig(['stats','tokens',convertToken]);\n                if (fromTokenConfig){\n                  try {\n                    tokenConversionRate = await this.getUniswapConversionRate(fromTokenConfig,govTokenConfig);\n                  } catch (error) {\n                    \n                  }\n                }\n              }\n\n              govTokenAmount = this.fixTokenDecimals(govTokenAmount,govTokenConfig.decimals,tokenConversionRate);\n\n              // console.log('getGovTokensUserBalances',idleTokenConfig.token,govTokenIndex,govTokenConfig.token,govTokenAddress,parseFloat(tokenConversionRate),parseFloat(govTokenAmount));\n\n              // Initialize govToken balance\n              if (!output[govTokenConfig.token]){\n                output[govTokenConfig.token] = this.BNify(0); // this.BNify(1) for testing\n              }\n\n              // Add govTokens balance\n              output[govTokenConfig.token] = output[govTokenConfig.token].plus(govTokenAmount);\n            }\n          }\n        });\n      }\n    });\n\n    return output;\n  }\n  getTokenFees = async (tokenConfig=null) => {\n    if (!tokenConfig && this.props.tokenConfig){\n      tokenConfig = this.props.tokenConfig;\n    }\n    const fee = await this.genericContractCall(tokenConfig.idle.token, 'fee');\n    if (fee){\n      return this.BNify(fee).div(this.BNify(100000));\n    }\n    return null;\n  }\n  getUserTokenFees = async (tokenConfig=null,account=null) => {\n    if (!tokenConfig && this.props.tokenConfig){\n      tokenConfig = this.props.tokenConfig;\n    }\n    if (!account && this.props.account){\n      account = this.props.account;\n    }\n\n    if (!account || !tokenConfig){\n      return null;\n    }\n\n    let [\n      feePercentage,\n      amountLent,\n      redeemableBalance\n    ] = await Promise.all([\n      this.getTokenFees(tokenConfig),\n      this.loadAssetField('amountLent',tokenConfig.token,tokenConfig,account),\n      this.loadAssetField('redeemableBalance',tokenConfig.token,tokenConfig,account)\n    ]);\n\n    if (feePercentage && amountLent && redeemableBalance){\n      const gain = redeemableBalance.minus(amountLent);\n      const fees = gain.times(feePercentage);\n\n      // this.customLog('fees',tokenConfig.token,amountLent.toString(),redeemableBalance.toString(),gain.toString(),fees.toString());\n\n      return fees;\n    }\n\n    return null;\n  }\n  getGovTokenUserBalance = async (govTokenConfig,account=null,availableTokens=null,convertToken=null) => {\n    const govTokensUserBalances = await this.getGovTokensUserBalances(account,availableTokens,convertToken,govTokenConfig);\n    return govTokensUserBalances && govTokensUserBalances[govTokenConfig.token] ? govTokensUserBalances[govTokenConfig.token] : this.BNify(0);\n  }\n  getTotalTVL = async () => {\n    const tokensTVL = await this.getTokensTVL();\n    return Object.values(tokensTVL).reduce( (totalTVL,tokenInfo) => {\n      const tokenTVL = this.BNify(tokenInfo.totalTVL);\n      if (tokenTVL && !tokenTVL.isNaN()){\n        totalTVL = totalTVL.plus(tokenTVL);\n      }\n      return totalTVL;\n    },this.BNify(0));\n  }\n  getTokensTVL = async () => {\n    const output = {};\n    const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n    await this.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n      const isRisk = strategy === 'risk';\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n\n        let tokenTVL = this.BNify(0);\n        let totalTVL = this.BNify(0);\n        let oldTokenTVL = this.BNify(0);\n        const tokenConfig = availableTokens[token];\n        const idleTokenName = tokenConfig.idle.token;\n\n        output[idleTokenName] = {\n          tokenTVL,\n          totalTVL,\n          oldTokenTVL,\n          govTokens:{},\n        };\n\n        const [\n          tokenPrice,\n          totalSupply\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.getIdleTokenSupply(tokenConfig)\n        ]);\n\n        tokenTVL = this.fixTokenDecimals(totalSupply,18).times(tokenPrice);\n        tokenTVL = await this.convertTokenBalance(tokenTVL,token,tokenConfig,isRisk);\n\n        output[idleTokenName].tokenTVL = tokenTVL;\n        totalTVL = totalTVL.plus(tokenTVL);\n\n        // Add Gov Tokens\n        const govTokens = this.getTokenGovTokens(tokenConfig);\n        if (govTokens){\n          await this.asyncForEach(Object.keys(govTokens).filter( govToken => (govTokens[govToken].showAUM) ), async (govToken) => {\n            const govTokenConfig = govTokens[govToken];\n            const [\n              govTokenBalance,\n              govTokenConversionRate\n            ] = await Promise.all([\n              this.getProtocolBalance(govToken,tokenConfig.idle.address),\n              this.getUniswapConversionRate(DAITokenConfig,govTokenConfig)\n            ]);\n            \n            if (govTokenBalance && govTokenConversionRate){\n              const govTokenBalanceConverted = this.fixTokenDecimals(govTokenBalance,govTokenConfig.decimals).times(this.BNify(govTokenConversionRate));\n              if (govTokenBalanceConverted && !govTokenBalanceConverted.isNaN()){\n                totalTVL = totalTVL.plus(govTokenBalanceConverted);\n                output[idleTokenName].govTokens[govToken] = govTokenBalanceConverted;\n              }\n            }\n          });\n        }\n\n        // Get old token allocation\n        if (tokenConfig.migration && tokenConfig.migration.oldContract){\n          const oldTokenConfig = Object.assign({},tokenConfig);\n          oldTokenConfig.protocols = Object.values(tokenConfig.protocols);\n          oldTokenConfig.idle = Object.assign({},tokenConfig.migration.oldContract);\n\n          // Replace protocols with old protocols\n          if (oldTokenConfig.migration.oldProtocols){\n            oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n              const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n              if (foundProtocol){\n                const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                oldTokenConfig.protocols[protocolPos] = oldProtocol;\n              }\n            });\n          }\n\n          const [\n            oldTokenPrice,\n            oldTotalSupply\n          ] = await Promise.all([\n            this.getIdleTokenPrice(oldTokenConfig),\n            this.getIdleTokenSupply(oldTokenConfig.idle.name)\n          ]);\n\n          if (oldTokenPrice && oldTotalSupply){\n            oldTokenTVL = this.fixTokenDecimals(oldTotalSupply,18).times(oldTokenPrice);\n            oldTokenTVL = await this.convertTokenBalance(oldTokenTVL,token,oldTokenConfig,isRisk);\n            if (oldTokenTVL && !oldTokenTVL.isNaN()){\n              output[idleTokenName].oldTokenTVL = oldTokenTVL;\n              totalTVL = totalTVL.plus(oldTokenTVL);\n            }\n          }\n        }\n\n        output[idleTokenName].totalTVL = totalTVL;\n      });\n    });\n\n    return output;\n  }\n  getSubstackLatestFeed = async () => {\n    const cachedDataKey = `substackLatestFeed`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const config = this.getGlobalConfig(['stats','config']);\n    const endpointInfo = this.getGlobalConfig(['stats','substack']);\n    const idleSubstackFeed = await this.makeRequest(endpointInfo.endpoint,false,config);\n\n    if (idleSubstackFeed && idleSubstackFeed.data && idleSubstackFeed.data.items && idleSubstackFeed.data.items.length>0){\n      const latestFeed = idleSubstackFeed.data.items[0];\n      return this.setCachedDataWithLocalStorage(cachedDataKey,latestFeed,endpointInfo.TTL);\n    }\n\n    return null;\n  }\n  getAggregatedStats = async (addGovTokens=true) => {\n    const config = this.getGlobalConfig(['stats','config']);\n    const endpointInfo = this.getGlobalConfig(['stats','tvls']);\n    const tvls = await this.makeCachedRequest(endpointInfo.endpoint,endpointInfo.TTL,true,false,config);\n\n    if (tvls){\n      const avgAPY = this.BNify(tvls.avgAPY);\n      const totalAUM = this.BNify(tvls.totalTVL);\n      return {\n        avgAPY,\n        totalAUM\n      };\n    } else {\n      return await this.getAggregatedStats_chain();\n    }\n  }\n  getAggregatedStats_chain = async (addGovTokens=true) => {\n\n    // Check for cached data\n    const cachedDataKey = `getAggregatedStats_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && (cachedData.avgAPR && !this.BNify(cachedData.avgAPR).isNaN()) && (cachedData.avgAPY && !this.BNify(cachedData.avgAPY).isNaN()) && (cachedData.totalAUM && !this.BNify(cachedData.totalAUM).isNaN())){\n      return {\n        avgAPR:this.BNify(cachedData.avgAPR),\n        avgAPY:this.BNify(cachedData.avgAPY),\n        totalAUM:this.BNify(cachedData.totalAUM)\n      };\n    }\n\n    let avgAPR = this.BNify(0);\n    let avgAPY = this.BNify(0);\n    let totalAUM = this.BNify(0);\n    const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n    await this.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n      const isRisk = strategy === 'risk';\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n        const tokenConfig = availableTokens[token];\n        const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,addGovTokens);\n        const tokenAprs = await this.getTokenAprs(tokenConfig,tokenAllocation,addGovTokens);\n        if (tokenAllocation && tokenAllocation.totalAllocationWithUnlent && !tokenAllocation.totalAllocationWithUnlent.isNaN()){\n          const tokenAUM = await this.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent,token,tokenConfig,isRisk);\n          totalAUM = totalAUM.plus(tokenAUM);\n          // console.log(tokenConfig.idle.token+'V4',tokenAUM.toFixed());\n          if (tokenAprs && tokenAprs.avgApr && !tokenAprs.avgApr.isNaN()){\n            avgAPR = avgAPR.plus(tokenAUM.times(tokenAprs.avgApr));\n            avgAPY = avgAPY.plus(tokenAUM.times(tokenAprs.avgApy));\n          }\n        }\n\n        // Add Gov Tokens\n        const govTokens = this.getTokenGovTokens(tokenConfig);\n        if (govTokens){\n          await this.asyncForEach(Object.keys(govTokens).filter( govToken => (govTokens[govToken].showAUM) ), async (govToken) => {\n            const govTokenConfig = govTokens[govToken];\n            const [\n              tokenBalance,\n              tokenConversionRate\n            ] = await Promise.all([\n              this.getProtocolBalance(govToken,tokenConfig.idle.address),\n              this.getUniswapConversionRate(DAITokenConfig,govTokenConfig)\n            ]);\n            \n            if (tokenBalance && tokenConversionRate){\n              const tokenBalanceConverted = this.fixTokenDecimals(tokenBalance,govTokenConfig.decimals).times(this.BNify(tokenConversionRate));\n              if (tokenBalanceConverted && !tokenBalanceConverted.isNaN()){\n                // console.log(tokenConfig.idle.token+'V4 - COMP',tokenBalanceConverted.toFixed());\n                totalAUM = totalAUM.plus(tokenBalanceConverted);\n              }\n            }\n          });\n        }\n\n        // Get old token allocation\n        if (tokenConfig.migration && tokenConfig.migration.oldContract){\n          const oldTokenConfig = Object.assign({},tokenConfig);\n          oldTokenConfig.protocols = Object.values(tokenConfig.protocols);\n          oldTokenConfig.idle = Object.assign({},tokenConfig.migration.oldContract);\n\n          // Replace protocols with old protocols\n          if (oldTokenConfig.migration.oldProtocols){\n            oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n              const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n              if (foundProtocol){\n                const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                oldTokenConfig.protocols[protocolPos] = oldProtocol;\n              }\n            });\n          }\n\n          const oldTokenAllocation = await this.getTokenAllocation(oldTokenConfig,false,false);\n          if (oldTokenAllocation && oldTokenAllocation.totalAllocation && !oldTokenAllocation.totalAllocation.isNaN()){\n            const oldTokenTotalAllocation = await this.convertTokenBalance(oldTokenAllocation.totalAllocation,token,oldTokenConfig,isRisk);\n            totalAUM = totalAUM.plus(oldTokenTotalAllocation);\n            // console.log(oldTokenConfig.idle.name,oldTokenTotalAllocation.toFixed(5));\n          }\n        }\n      });\n    });\n\n    avgAPR = avgAPR.div(totalAUM);\n    avgAPY = avgAPY.div(totalAUM);\n\n    const output = {\n      avgAPR,\n      avgAPY,\n      totalAUM\n    };\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey,output);\n  }\n  getTokenApy = async (tokenConfig) => {\n    const tokenAprs = await this.getTokenAprs(tokenConfig);\n    if (tokenAprs && tokenAprs.avgApy !== null){\n      return tokenAprs.avgApy;\n    }\n    return null;\n  }\n  getTokensToMigrate = async (selectedStrategy=null) => {\n\n    if (!this.props.availableStrategies || !this.props.account){\n      return false;\n    }\n\n    const tokensToMigrate = {};\n\n    await this.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n      if (selectedStrategy && selectedStrategy !== strategy){\n        return;\n      }\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n        const tokenConfig = availableTokens[token];\n        const {\n          migrationEnabled,\n          oldContractBalanceFormatted\n        } = await this.checkMigration(tokenConfig,this.props.account);\n        \n        if (migrationEnabled){\n          const tokenKey = selectedStrategy ? token : tokenConfig.idle.token;\n          tokensToMigrate[tokenKey] = {\n            token,\n            strategy,\n            tokenConfig,\n            oldContractBalanceFormatted\n          }\n        }\n      });\n    });\n\n    return tokensToMigrate;\n  }\n  /*\n  Get protocols tokens balances\n  */\n  getProtocolsTokensBalances = async (protocol=null) => {\n    if (!this.props.account){\n      return false;\n    }\n    const tokenBalances = {};\n    const minTokenBalance = this.BNify(1).div(1e4);\n    const protocolsTokens = this.getGlobalConfig(['tools','tokenMigration','props','availableTokens']);\n    if (protocolsTokens){\n      await this.asyncForEach(Object.keys(protocolsTokens),async (token) => {\n        const tokenConfig = protocolsTokens[token];\n        if (protocol !== null && tokenConfig.protocol.toLowerCase() !== protocol.toLowerCase() ){\n          return;\n        }\n        let tokenContract = this.getContractByName(tokenConfig.token);\n        if (!tokenContract && tokenConfig.abi){\n          tokenContract = await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n        }\n        if (tokenContract){\n          const tokenBalance = await this.getTokenBalance(tokenConfig.token,this.props.account);\n          if (tokenBalance && tokenBalance.gte(minTokenBalance)){\n            tokenBalances[token] = {\n              tokenConfig,\n              balance:tokenBalance,\n            };\n          }\n        }\n      });\n    }\n\n    return tokenBalances;\n  }\n  /*\n  Convert token Balance\n  */\n  convertTokenBalance = async (tokenBalance,token,tokenConfig,isRisk=false) => {\n    // Check for USD conversion rate\n    tokenBalance = this.BNify(tokenBalance);\n    if (tokenBalance.gt(0)){\n      const tokenUsdConversionRate = await this.getTokenConversionRate(tokenConfig,isRisk);\n      // console.log('convertTokenBalance',token,isRisk,tokenUsdConversionRate);\n      if (tokenUsdConversionRate){\n        tokenBalance = tokenBalance.times(tokenUsdConversionRate);\n      }\n    }\n    return tokenBalance;\n  }\n\n  getAvgAPYStats = async (address,isRisk,startTimestamp=null,endTimestamp=null) => {\n\n    const apiResults = await this.getTokenApiData(address,isRisk,startTimestamp,endTimestamp,true,7200);\n\n    if (apiResults && apiResults.length){\n      const apr = apiResults.reduce( (sum,r) => {\n        const idleRate = this.fixTokenDecimals(r.idleRate,18);\n        return sum.plus(idleRate);\n      },this.BNify(0));\n\n      // Calculate average\n      return apr.div(apiResults.length);\n    }\n\n    return this.BNify(0);\n  }\n\n  /*\n  Get idleToken conversion rate\n  */\n  getTokenConversionRate = async (tokenConfig,isRisk,conversionRateField=null,count=0) => {\n\n    if (!conversionRateField){\n      conversionRateField = this.getGlobalConfig(['stats','tokens',tokenConfig.token,'conversionRateField']);\n      if (!conversionRateField){\n        return null;\n      }\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenConversionRate_${tokenConfig.address}_${isRisk}_${conversionRateField}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let tokenData = await this.getTokenApiData(tokenConfig.address,isRisk,null,null,false,null,'desc',1);\n\n    if (tokenData && tokenData.length){\n      tokenData = tokenData.pop();\n      if (tokenData && !this.BNify(tokenData[conversionRateField]).isNaN()){\n        const conversionRate = this.fixTokenDecimals(tokenData[conversionRateField],18);\n        if (!this.BNify(conversionRate).isNaN()){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,conversionRate);\n        }\n      }\n    }\n\n    const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n    const conversionRate = await this.getUniswapConversionRate(DAITokenConfig,tokenConfig);\n    if (!this.BNify(conversionRate).isNaN()){\n      return this.setCachedDataWithLocalStorage(cachedDataKey,conversionRate);\n    }\n\n    if (count<3){\n      return await this.getTokenConversionRate(tokenConfig,isRisk,conversionRateField,count+1); \n    }\n\n    return null;\n  }\n\n  getTokenScore = async (tokenConfig,isRisk) => {\n    // Check for cached data\n    const cachedDataKey = `tokenScore_${tokenConfig.address}_${isRisk}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const apiInfo = globalConfigs.stats.rates;\n    const config = this.getGlobalConfig(['stats','config']);\n    const endpoint = `${apiInfo.endpoint}${tokenConfig.address}?isRisk=${isRisk}&limit=1&order=DESC`;\n    const [\n      tokenData,\n      tokenAllocation\n    ] = await Promise.all([\n      this.makeCachedRequest(endpoint,apiInfo.TTL,true,false,config),\n      this.getTokenAllocation(tokenConfig,false,false)\n    ]);\n\n    let tokenScore = this.BNify(0);\n\n    if (tokenData && tokenAllocation){\n      Object.keys(tokenAllocation.protocolsAllocationsPerc).forEach( protocolAddr => {\n        const protocolAllocationPerc = this.BNify(tokenAllocation.protocolsAllocationsPerc[protocolAddr]);\n        if (protocolAllocationPerc.gt(0.001) && tokenData.length>0){\n          const protocolInfo = tokenData[0].protocolsData.find( p => (p.protocolAddr.toLowerCase() === protocolAddr.toLowerCase()) );\n          if (protocolInfo){\n            const protocolScore = this.BNify(protocolInfo.defiScore);\n            if (!protocolScore.isNaN()){\n              tokenScore = tokenScore.plus(protocolScore.times(protocolAllocationPerc));\n            }\n          }\n        }\n      });\n    }\n\n    // Fallback\n    if (!tokenScore || tokenScore.isNaN() || tokenScore.lte(0)){\n      tokenScore = await this.getTokenScoreApi(tokenConfig,isRisk);\n    }\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey,tokenScore);\n  }\n\n  /*\n  Get idleToken score\n  */\n  getTokenScoreApi = async (tokenConfig,isRisk) => {\n    // Check for cached data\n    const cachedDataKey = `tokenScoreApi_${tokenConfig.address}_${isRisk}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const apiInfo = globalConfigs.stats.scores;\n    const config = this.getGlobalConfig(['stats','config']);\n    const endpoint = `${apiInfo.endpoint}${tokenConfig.address}?isRisk=${isRisk}`;\n    let scores = await this.makeCachedRequest(endpoint,apiInfo.TTL,true,false,config);\n\n    if (scores && scores.length>0){\n      let tokenData = scores.find( s => s.address.toLowerCase() === tokenConfig.address.toLowerCase() );\n      if (tokenData){\n        let tokenScore = this.BNify(tokenData.idleScore);\n        if (tokenScore && tokenScore.gt(0)){\n          // Set cached data\n          return this.setCachedData(cachedDataKey,tokenScore);\n        // Take latest historical valid score\n        } else {\n          const timestamp = parseInt(Date.now()/1000);\n          const startTimestamp = parseInt(timestamp)-(60*60*24);\n          tokenData = await this.getTokenApiData(tokenConfig.address,isRisk,startTimestamp,null,true,null,'DESC');\n\n          const filteredTokenData = tokenData.filter( d => (this.BNify(d.idleScore).gt(0)) );\n          if (filteredTokenData.length){\n            tokenScore = this.BNify(filteredTokenData[0].idleScore);\n            if (!this.BNify(tokenScore).isNaN()){\n              return this.setCachedDataWithLocalStorage(cachedDataKey,tokenScore);\n            }\n          }\n        }\n      }\n    }\n\n    return this.BNify(0);\n  }\n  /*\n  Get idleTokens aggregated APR\n  */\n  getTokenAprs = async (tokenConfig,tokenAllocation=false,addGovTokens=true) => {\n\n    const tokenAprs = {\n      avgApr: this.BNify(0),\n      avgApy: this.BNify(0)\n    };\n\n    if (!tokenConfig.idle){\n      // console.log('getTokenAprs - !tokenConfig.idle',tokenConfig);\n      return tokenAprs;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenAprs_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && (cachedData.avgApr && !this.BNify(cachedData.avgApr).isNaN()) && (cachedData.avgApy && !this.BNify(cachedData.avgApy).isNaN()) ){\n      // console.log('getTokenAprs - CACHED',tokenConfig.idle.token,cachedData);\n      return {\n        avgApr:this.BNify(cachedData.avgApr),\n        avgApy:this.BNify(cachedData.avgApy)\n      };\n    }\n\n    const Aprs = await this.getAprs(tokenConfig.idle.token);\n\n    if (!Aprs){\n      // console.log('getTokenAprs - !Aprs',Aprs);\n      return tokenAprs;\n    }\n\n    if (!tokenAllocation){\n      tokenAllocation = await this.getTokenAllocation(tokenConfig);\n    }\n\n    if (!tokenAllocation){\n      // console.log('getTokenAprs - !tokenAllocation',tokenAllocation);\n      return tokenAprs;\n    }\n\n    const addresses = Aprs.addresses.map((addr,i) => { return addr.toString().toLowerCase() });\n    const aprs = Aprs.aprs;\n\n    const govTokensAprs = {};\n    const protocolsAprs = {};\n    const protocolsApys = {};\n\n    await this.asyncForEach(tokenConfig.protocols,async (protocolInfo,i) => {\n      const protocolAddr = protocolInfo.address.toString().toLowerCase();\n      const addrIndex = addresses.indexOf(protocolAddr);\n      if ( addrIndex !== -1 ) {\n        let protocolApr = this.BNify(+this.toEth(aprs[addrIndex]));\n        let protocolApy = this.apr2apy(protocolApr.div(100)).times(100);\n\n        if (addGovTokens){\n          let govTokenAPR = null;\n          const tokenGovTokens = this.getTokenGovTokens(tokenConfig);\n          await this.asyncForEach(Object.keys(tokenGovTokens), async (govToken) => {\n            switch (govToken){\n              case 'COMP':\n                govTokenAPR = await this.getCompAPR(tokenConfig.token,tokenConfig);\n              break;\n              case 'stkAAVE':\n                govTokenAPR = await this.getStkAaveApr(tokenConfig.token,tokenConfig);\n              break;\n              default:\n              break;\n            }\n            if (govTokenAPR){\n              govTokensAprs[govToken] = govTokenAPR;\n            }\n          });\n          \n        }\n\n        protocolsApys[protocolAddr] = protocolApy;\n        protocolsAprs[protocolAddr] = protocolApr;\n      }\n    });\n\n    if (tokenAllocation){\n      tokenAprs.avgApr = this.getAvgApr(protocolsAprs,tokenAllocation.protocolsAllocations,tokenAllocation.totalAllocation);\n      tokenAprs.avgApy = this.getAvgApr(protocolsApys,tokenAllocation.protocolsAllocations,tokenAllocation.totalAllocation);\n\n      Object.values(govTokensAprs).forEach( govTokenAPR => {\n        tokenAprs.avgApr = tokenAprs.avgApr.plus(govTokenAPR);\n        tokenAprs.avgApy = tokenAprs.avgApy.plus(govTokenAPR);\n      });\n\n      // console.log('getTokenAprs',tokenConfig.idle.token,tokenConfig,aprs,protocolsAprs,tokenAllocation,tokenAprs,govTokensAprs);\n\n      // Add $IDLE token APR\n      const idleGovTokenShowAPR = this.getGlobalConfig(['govTokens','IDLE','showAPR']);\n      const idleGovTokenEnabled = this.getGlobalConfig(['govTokens','IDLE','enabled']);\n      if (idleGovTokenEnabled && idleGovTokenShowAPR){\n        const idleGovToken = this.getIdleGovToken();\n        const idleAPR = await idleGovToken.getAPR(tokenConfig.token,tokenConfig);\n        if (idleAPR){\n          tokenAprs.avgApr = tokenAprs.avgApr.plus(idleAPR);\n          tokenAprs.avgApy = tokenAprs.avgApy.plus(idleAPR);\n        }\n      }\n\n      if (this.BNify(tokenAprs.avgApy).isNaN()){\n        tokenAprs.avgApy = this.BNify(0);\n      }\n      if (this.BNify(tokenAprs.avgApr).isNaN()){\n        tokenAprs.avgApr = this.BNify(0);\n      }\n\n      return this.setCachedDataWithLocalStorage(cachedDataKey,tokenAprs);\n    }\n\n    return tokenAprs;\n  }\n  abbreviateNumber(value,decimals=3,maxPrecision=5,minPrecision=0){\n\n    const isNegative = parseFloat(value)<0;\n    let newValue = this.BNify(value).abs();\n    const suffixes = [\"\", \"K\", \"M\", \"B\",\"T\"];\n    let suffixNum = 0;\n    while (newValue.gte(1000)) {\n      newValue = newValue.div(1000);\n      suffixNum++;\n    }\n\n    maxPrecision = Math.max(1,maxPrecision);\n\n    // Prevent decimals on integer number\n    if (value>=1000){\n      const decimalPart = decimals ? newValue.mod(1).toFixed(maxPrecision).substr(2,decimals) : null;\n      newValue = parseInt(newValue).toString()+( decimalPart ? '.'+decimalPart : '' );\n    } else {\n      newValue = newValue.toFixed(decimals);\n    }\n\n    // Adjust number precision\n    if (newValue>=1 && (newValue.length-1)>maxPrecision){\n      newValue = parseFloat(newValue).toPrecision(maxPrecision);\n    } else if ((newValue.length-1)<minPrecision) {\n      const difference = minPrecision-(newValue.length-1);\n      const append = this.BNify(value).abs().toString().replace('.','').substr((newValue.length-1),difference);\n      newValue += append;\n    }\n\n    // Add minus if number is negative\n    if (isNegative){\n      newValue = '-'+newValue;\n    }\n\n    newValue += suffixes[suffixNum];\n\n    return newValue;\n  }\n  getFormattedBalance(balance,label,decimals,maxLen,highlightedDecimals){\n    const defaultValue = '-';\n    decimals = !isNaN(decimals) ? decimals : 6;\n    maxLen = !isNaN(maxLen) ? maxLen : 10;\n    highlightedDecimals = !isNaN(highlightedDecimals) ? highlightedDecimals : 0;\n    balance = parseFloat(this.BNify(balance)).toFixed(decimals);\n\n    const numLen = balance.toString().replace('.','').length;\n    if (numLen>maxLen){\n      decimals = Math.max(0,decimals-(numLen-maxLen));\n      balance = parseFloat(this.BNify(balance)).toFixed(decimals);\n    }\n\n    const intPart = Math.floor(balance);\n    let decPart = (balance%1).toPrecision(decimals).substr(2,decimals);;\n    decPart = (decPart+(\"0\".repeat(decimals))).substr(0,decimals);\n\n    if (highlightedDecimals){\n      const highlightedDec = decPart.substr(0,highlightedDecimals);\n      decPart = decPart.substr(highlightedDecimals);\n      const highlightedIntPart = (<Text.span fontSize={'100%'} color={'blue'} fontWeight={'inerith'}>{intPart}.{highlightedDec}</Text.span>);\n      return !isNaN(this.trimEth(balance)) ? ( <>{highlightedIntPart}<small style={{fontSize:'70%'}}>{decPart}</small> <Text.span fontSize={[1,2]}>{label}</Text.span></> ) : defaultValue;\n    } else {\n      return !isNaN(this.trimEth(balance)) ? ( <>{intPart}<small>.{decPart}</small>{ label !== '%' ? ' ' : null }{ label ? <Text.span fontSize={[1,2]}>{label}</Text.span> : null }</> ) : defaultValue;\n    }\n  }\n};\n\nexport default FunctionsUtil;","import Footer from '../Footer/Footer';\nimport styles from './Tos.module.scss';\nimport React, { Component } from 'react';\nimport { Box, Flex, Text, Heading } from 'rimble-ui'\n\nclass Tos extends Component {\n  state = {};\n\n  render() {\n    return (\n      <Box>\n        <Box className={styles.headerContainer} pb={[3,5]} px={[3,6]} pt={['2em', '3em']}>\n          <Box className={styles.headerBgFiller}></Box>\n          <Box position={'relative'} zIndex={10}>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"60em\"]} mx={'auto'} pb={3} textAlign={'center'} pt={['8vh', '8vh']}>\n              <Heading.h1 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.2em'} fontSize={['2.5em',7]} textAlign={'center'} color={'white'}>\n                Terms of Service\n              </Heading.h1>\n              <Heading.h2 fontWeight={'400'} lineHeight={['1.4em', '2em']} fontSize={[2,3]} textAlign={'center'} color={'white'}>\n                Updated: November 28, 2019\n              </Heading.h2>\n            </Flex>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"70em\"]} mx={'auto'} textAlign={'center'}>\n              <Box className={styles.textContainer} alignItems={'center'} width={'100%'} minHeight={['auto','20em']} backgroundColor={'white'} color={'dark-gray'} p={[3,4]} boxShadow={'0 0 25px 5px rgba(102, 139, 255, 0.7)'} borderRadius={'15px'} style={{position:'relative'}}>\n                <Box id={'first-paragraph'} pb={3}>\n                  <Text pb={3}>\n                    These terms of service, together with any documents and additional terms they expressly incorporate by reference (collectively, these “Terms”), are entered into between Idle Labs Inc. (“Idle,” “we,” “us” and “our”) and you or the company or other legal entity you represent (“you” or “your”), and constitute a binding legal agreement.\n                  </Text>\n                  <Text pb={3}>\n                    Please read these Terms carefully, as these Terms govern your use of our Portal and our Services, and expressly cover your rights and obligations, and our disclaimers and limitations of legal liability, relating to such use. By accessing or using the Interface, you signify that you have read, understand, and agree to be bound by and to comply with these Terms, including the mandatory arbitration provision in Section 12. If you do not agree to these Terms, you must not access or use our Portal or the Services.\n                  </Text>\n                  <Text pb={3}>\n                    You must be able to form a legally binding contract online either on behalf of a company or as an individual. Accordingly, you represent that: (a) if you are agreeing to these Terms on behalf of a company or other legal entity, you have the legal authority to bind the company or other legal entity to these Terms; and (b) you are at least 18 years old (or the age of majority where you reside, whichever is older), can form a legally binding contract online, and have the full, right, power and authority to enter into and to comply with the obligations under these Terms.\n                  </Text>\n                  <Text pb={3}>\n                    In addition to the foregoing, you also represent and warrant that you are not a citizen or resident of a state, country, territory or other jurisdiction that is embargoed by the United States or where your use of the Portal or the Services would be illegal or otherwise violate any applicable law.  Specifically, you represent that you are not located in, organized in, or a resident of New York, Cuba, Iran, Syria, North Korea, the Crimea region, Venezuela, or any other jurisdiction where Applicable law prohibits you from accessing or using the Services; and you represent that you are not be named on the Office of Foreign Asset Control of the U.S. Department of the Treasury’s Specially Designated and Blocked Persons List.\n                   </Text>\n                  <Text>\n                    Please carefully review the disclosures and disclaimers set forth in Section 9 in their entirety before using any software developed by Idle. The information in Section 9 provides important details about the legal obligations associated with your use of the Idle open-source software. By accessing or using our Portal or our Services, you agree that Idle is a provider of open-source software that optimizes the allocation of your digital assets to third-party decentralized web protocols.  Idle is not affiliated with and has no control over these third-party protocols and is not responsible for any losses that occur as a result of interconnection with these third-party protocols. The Protocol is open-source software deployed on the Ethereum Blockchain.  While Idle developed and deployed the Protocol, the software operates in an autonomous fashion on a decentralized network and, as a result, Idle has no control over user transactions. You accordingly acknowledge that you use the Services at your own risk and agree that Idle will not be responsible for any losses that occur as a result of your use of the Services.\n                  </Text>\n                </Box>\n\n                <Box id={'key-definitions'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    1. KEY DEFINITIONS\n                  </Heading.h3>\n\n                  <Text py={2}>\n                    For the purpose of these Terms, the following capitalized terms shall have the following meanings:\n                  </Text>\n\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>1.1. “Affiliate”</strong> means, with respect to a party to these Terms, any legal entity that, directly or indirectly controls, is controlled by, or is under common control with such party.\n                    </li>\n                    <li>\n                      <strong>1.2. “Applicable Law”</strong> means any domestic or foreign law, rule, statute, regulation, by-law, order, protocol, code, decree, or other directive, requirement or guideline, published or in force which applies to or is otherwise intended to govern or regulate any person, property, transaction, activity, event or other matter, including any rule, order, judgment, directive or other requirement or guideline issued by any Governmental Authority having jurisdiction over Idle, you, the Portal or the Services, or as otherwise duly enacted, enforceable by law, the common law or equity.\n                    </li>\n                    <li>\n                      <strong>1.3. “Ether”</strong> means the Ethereum Blockchain utility token that may be used to purchase computational resources to run decentralized applications or perform actions on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.4. “Ethereum Address”</strong> means the unique public key digital asset identifier that points to an Ethereum-compatible wallet to which Ether may be sent or stored.\n                    </li>\n                    <li>\n                      <strong>1.5. “Ethereum Blockchain”</strong> means the underlying blockchain infrastructure which the Portal leverages to perform portions of the Services.\n                    </li>\n                    <li>\n                      <strong>1.6. “Governmental Authority”</strong> includes any domestic or foreign federal, provincial or state, municipal, local or other governmental, regulatory, judicial or administrative authority.\n                    </li>\n                    <li>\n                      <strong>1.7. “Portal”</strong> means the Idle site located at https://idle.finance and all associated sites linked thereto by Idle and its Affiliates, which includes, for certainty, Idle’s decentralized application layer on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.8. “Protocol”</strong> means the Idle decentralized web protocol, which optimizes the allocation of users’ digital assets to third-party decentralized web protocols.\n                    </li>\n                    <li>\n                      <strong>1.9. “Token”</strong> means an “ERC-20” digital asset issued on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.10. “Services”</strong> has the meaning set out in Section 3.1.\n                    </li>\n                    <li>\n                      <strong>1.11. “Third-Parties Services”</strong> means other services (such as fiat-to-token gateway, or token-to-token swap) provided by third parties services running on Ethereum Blockchain.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'modifications-terms'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    2. MODIFICATIONS TO THESE TERMS\n                  </Heading.h3>\n\n                  <Text py={2}>\n                    We reserve the right, in our sole discretion, to modify these Terms from time to time. If we make changes, we will provide you with notice of such changes, such as by sending an email, providing a notice through our Services or updating the date at the top of these Terms. Unless we say otherwise in our notice, any and all such modifications are effective immediately, and your continued use of our Services after we provide such notice will confirm your acceptance of the changes. If you do not agree to the amended Terms, you must stop using our Services.\n                  </Text>\n                </Box>\n\n                <Box id={'services'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    3. SERVICES\n                  </Heading.h3>\n                </Box>\n\n                <ul className={styles.list}>\n                  <li>\n                    <strong>3.1. Services</strong><br />\n                    The primary purpose of the Portal and Protocol is to enable users to interact with smart contracts that allocate their digital assets to third-party decentralized web protocols and enable users to receive an optimized allocation of digital assets from these protocols in return (the “Services”).\n                  </li>\n                  <li>\n                    <strong>3.2. Fees</strong><br />\n                    Use of the Services is provided to you at no charge. Fees are charged on-top of Third-Parties.\n                  </li>\n                  <li>\n                    <strong>3.3. Ethereum Gas Charges</strong><br />\n                    Some Services involve the use of the Ethereum Blockchain, which may require that you pay a fee, commonly known as “Ethereum Gas Charges,” for the computational resources required to perform a transaction on the Ethereum Blockchain. You acknowledge and agree that Idle has no control over: (a) any Ethereum Blockchain transactions; (b) the method of payment of any Ethereum Gas Charges; or (c) any actual payments of Ethereum Gas Charges. Accordingly, you must ensure that you have a sufficient balance of Ether stored at your Ethereum Address to complete any transaction on the Ethereum Blockchain before initiating such Ethereum Blockchain transaction. We will make reasonable efforts to notify you of any Ethereum Gas Charges before initiating any Services that require the use of the Ethereum Blockchain.\n                  </li>\n                  <li>\n                    <strong>3.4. Conditions and Restrictions</strong><br />\n                    We may, at any time and in our sole discretion, restrict your access to, or otherwise impose conditions or restrictions upon your use of, the Services or the Portal, with or without prior notice.\n                  </li>\n                  <li>\n                    <strong>3.5. No Broker, Legal or Fiduciary Relationship</strong><br />\n                    Idle is not your broker, lawyer, intermediary, agent, or advisor and has no fiduciary relationship or obligation to you regarding any other decisions or activities that you effect when using the Portal or the Services. Neither our communications nor any information that we provide to you is intended as, or shall be considered or construed as, advice.\n                  </li>\n                  <li>\n                    <strong>3.6. Your Responsibilities</strong><br />\n                    As a condition to accessing or using the Services or the Portal, you shall:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>only use the Services and the Portal for lawful purposes and in accordance with these Terms;</li>\n                      <li>ensure that, at all times, all information that you provide on the Portal is current, complete and accurate; and maintain the security and confidentiality of your Ethereum Address.</li>\n                      <li>shall be responsible for payment of all applicable taxes, if any, to which the Services might be subject and any and all other taxes which may apply to you.</li>\n                    </ul>\n                  </li>\n                  <li>\n                    <strong>3.7. Unacceptable Use or Conduct</strong><br />\n                    As a condition to accessing or using the Portal or the Services, you will not:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>violate any Applicable Law, including, without limitation, any relevant and applicable anti-money laundering and anti-terrorist financing laws, such as the Bank Secrecy Act, each as may be amended;</li>\n                      <li>infringe on or misappropriate any contract, intellectual property or other third-party right, or commit a tort while using the Portal or the Services;</li>\n                      <li>use the Services in any manner that could interfere with, disrupt, negatively affect, or inhibit other users from fully enjoying the Services, or that could damage, disable, overburden, or impair the functioning of the Services in any manner;</li>\n                      <li>attempt to circumvent any content filtering techniques or security measures that Idle employs on the Portal, or attempt to access any service or area of the Portal or the Services that you are not authorized to access;</li>\n                      <li>use the Services to pay for, support, or otherwise engage in any illegal gambling activities, fraud, money-laundering, or terrorist activities, or other illegal activities;</li>\n                      <li>use any robot, spider, crawler, scraper, or other automated means or interface not provided by us, to access the Services or to extract data;</li>\n                      <li>introduce any malware, virus, Trojan horse, worm, logic bomb, drop-dead device, backdoor, shutdown mechanism or other harmful material into the Portal or the Services;</li>\n                      <li>provide false, inaccurate, or misleading information;</li>\n                      <li>post content or communications on the Portal that are, in our sole discretion, libelous, defamatory, profane, obscene, pornographic, sexually explicit, indecent, lewd, vulgar, suggestive, harassing, hateful, threatening, offensive, discriminatory, bigoted, abusive, inflammatory, fraudulent, deceptive or otherwise objectionable;</li>\n                      <li>post content on the Portal containing unsolicited promotions, political campaigning, or commercial messages or any chain messages or user content designed to deceive or trick the user of the Service;</li>\n                      <li>use the Portal or the Services from a jurisdiction that we have, in our sole discretion, or a relevant Governmental Authority has determined is a jurisdiction where the use of the Portal or the Services is prohibited; or</li>\n                      <li>encourage or induce any third party to engage in any of the activities prohibited under this Section 3.7.</li>\n                    </ul>\n                  </li>\n\n                  <li>\n                    <strong>3.8. Your Assumption of Risks</strong><br />\n                    You represent and warrant that you:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>have the necessary technical expertise and ability to review and evaluate the security, integrity and operation of any transactions that you engage in through the Protocol;</li>\n                      <li>have the knowledge, experience, understanding, professional advice and information to make your own evaluation of the merits, risks and applicable compliance requirements under Applicable Law of engaging in transactions through the Protocol;</li>\n                      <li>acknowledge and understand that the Protocol allocates your digital assets to third-party decentralized web protocols to facilitate your lending and borrowing through these third-party protocols and that Idle is not responsible or liable for these transactions or the operation of these third-party protocols;</li>\n                      <li>know, understand and accept the risks associated with your Ethereum Address, the Ethereum Blockchain, Ether and Tokens; and</li>\n                      <li>accept the risks associated with lending, borrowing and trading Ether and Tokens, and are responsible for conducting your own independent analysis of the risks specific to any Ether and Tokens lent, borrowed or traded by you and your use of the Services.</li>\n                    </ul>\n                    You hereby assume, and agree that Idle will have no responsibility or liability for, such risks. You hereby irrevocably waive, release and discharge all claims, whether known or unknown to you, against Idle, its affiliates and their respective shareholders, members, directors, officers, employees, agents and representatives related to any of the risks set forth herein.\n                  </li>\n                  <li>\n                    <strong>3.9. Additional Representations</strong><br />\n                    You represent and warrant that you:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>are not using the Protocol to engage in the leveraged, margined, or financed purchase of digital assets; and</li>\n                      <li>are using the Protocol for the purpose of accessing third-party decentralized web protocols.</li>\n                    </ul>\n                  </li>\n                  <li>\n                    <strong>3.10. Your Content</strong><br />\n                    You hereby grant to us a royalty-free, fully paid-up, sublicensable, transferable, perpetual, irrevocable, non-exclusive, worldwide license to use, copy, modify, create derivative works of, display, perform, publish and distribute, in any form, medium or manner, any content that is available to other users via the Idle Platform as a result of your use of the Portal (collectively, “Your Content”) through your use of the Services or the Portal, including, without limitation, for promoting Idle (or its Affiliates), the Services or the Portal. You represent and warrant that: (a) you own Your Content or have the right to grant the rights and licenses in these Terms; and (b) Your Content and our use of Your Content, as licensed herein, does not and will not violate, misappropriate or infringe on any third party’s rights.\n                  </li>\n                </ul>\n\n                <Box id={'privacy-policy'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    4. PRIVACY POLICY\n                  </Heading.h3>\n                  <Text py={2}>\n                    Please refer to our privacy policy available at https://idle.finance/privacy-policy for information about how we collect, use, share and otherwise process information about you.\n                  </Text>\n                </Box>\n\n                <Box id={'proprietary-rights'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    5. PROPRIETARY RIGHTS\n                  </Heading.h3>\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>5.1. Ownership of Services; License to Services</strong><br />\n                      Excluding any open source software (as further described in Section 5.2) or third-party software that the Portal or the Services incorporates, as between you and Idle, Idle owns the Portal and the Services, including all technology, content and other materials used, displayed or provided on the Portal or in connection with the Services (including all intellectual property rights subsisting therein), and hereby grants you a limited, revocable, transferable, license to access and use those portions of the Portal and the Services that are proprietary to Idle.\n                    </li>\n                    <li>\n                      <strong>5.2. Idle License; Open Source Software License; Limitations</strong><br />\n                      The Portal and the Services are governed by the most recent version of the open source license commonly known as the Apache 2.0 a copy of which (as it applies to the Portal and the Services) can be found at:  https://apache.org/licenses/LICENSE-2.0 (as of the date these Terms were last updated) and any other applicable licensing terms for the Portal and the Services in these Terms (collectively, the “Idle License”). You acknowledge that the Portal or the Services may use, incorporate or link to certain open-source components and that your use of the Portal or Services is subject to, and you will comply with any, applicable open-source licenses that govern any such open-source components (collectively, “Open-Source Licenses”). Without limiting the generality of the foregoing, you may not: (a) resell, lease, lend, share, distribute or otherwise permit any third party to use the Portal or the Services; (b) use the Portal or the Services for time-sharing or service bureau purposes; or (c) otherwise use the Portal or the Services in a manner that violates the Idle License or any other Open-Source Licenses.\n                    </li>\n                    <li>\n                      <strong>5.3. Trademarks</strong><br />\n                      Any of Idle’s product or service names, logos, and other marks used in the Portal or as a part of the Services, including Idle's name and logo are trademarks owned by Idle, its Affiliates or its applicable licensors. You may not copy, imitate or use them without Idle’s (or the applicable licensor’s) prior written consent.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'changes-suspension-termination'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    6. CHANGES; SUSPENSION; TERMINATION\n                  </Heading.h3>\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>6.1. Changes to Services</strong><br />\n                      We may, at our sole discretion, from time to time and with or without prior notice to you, modify, suspend or disable, temporarily or permanently, the Services, in whole or in part, for any reason whatsoever, including, but not limited to, as a result of a security incident.\n                    </li>\n                    <li>\n                      <strong>6.2. No Liability</strong><br />\n                      We will not be liable for any losses suffered by you resulting from any modification to any Services or from any suspension or termination, for any reason, of your access to all or any portion of the Portal or the Services.\n                    </li>\n                    <li>\n                      <strong>6.3. Survival</strong><br />\n                      The following sections will survive any termination of your access to the Portal or the Services, regardless of the reasons for its expiration or termination, in addition to any other provision which by law or by its nature should survive: Sections 1, 4, 5, 6.3, and 7-14.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'electronic-notices'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    7. ELECTRONIC NOTICES\n                  </Heading.h3>\n                  <Text py={2}>\n                    You consent to receive all communications, agreements, documents, receipts, notices, and disclosures electronically (collectively, our “Communications”) that we provide in connection with these Terms or any Services. You agree that we may provide our Communications to you by posting them on the Portal or by emailing them to you at the email address you provide in connection with using the Services, if any. You should maintain copies of our Communications by printing a paper copy or saving an electronic copy. You may also contact our support team to request additional electronic copies of our Communications by filing a support request at info@idle.finance.\n                  </Text>\n                </Box>\n\n                <Box id={'indemnification'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    8. INDEMNIFICATION\n                  </Heading.h3>\n                  <Text py={2}>\n                    You will defend, indemnify, and hold harmless us, our Affiliates, and our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers and contractors (collectively, “Indemnified Parties”) from any claim, demand, lawsuit, action, proceeding, investigation, liability, damage, loss, cost or expense, including without limitation reasonable attorneys’ fees, arising out of or relating to (a) your use of, or conduct in connection with, the Portal, Services or Margin Tokens; (b) Ethereum Blockchain assets associated with your Ethereum Address; (c) any feedback or user content you provide to the Portal, if any; (d) your violation of these Terms; or (e) your infringement or misappropriation of the rights of any other person or entity. If you are obligated to indemnify any Indemnified Party, Idle (or, at its discretion, the applicable Indemnified Party) will have the right, in its sole discretion, to control any action or proceeding and to determine whether Idle wishes to settle, and if so, on what terms.\n                  </Text>\n                </Box>\n\n                <Box id={'disclosures-disclaimers'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    9. Disclosures; DISCLAIMERS\n                  </Heading.h3>\n                  <Text py={2}>\n                    Idle is a developer of open-source software. Idle does not operate a digital asset exchange platform or execute peer-to-peer transactions through its Protocol and therefore has no oversight, involvement, or control with respect to your transactions, which are executed through third-party protocols and the Ethereum Blockchain.  The Protocol is an autonomous decentralized web protocol deployed to the Ethereum Blockchain that operates in a disintermediated fashion, and, as such, Idle does not participate in any of these transactions.  In each instance, when you interact with the Protocol, you are interacting with a smart contract that transfers your digital assets to a third-party protocol.\n                  </Text>\n                  <Text py={2}>\n                    [Under U.S. federal law, unless you are an “eligible contract participant” as defined in 7 U.S.C. § 1a(18), your transaction must settle within 28 days. Individuals who do not have more than $10 million invested on a discretionary basis (or $5 million if the transaction is for the purpose of managing risk associated with an asset owned or liability incurred, or reasonably likely to be owned or incurred) are not eligible contract participants and may not enter into transactions using the Idle open-source software that do not result in actual delivery of digital assets within 28 days.]\n                  </Text>\n                  <Text py={2}>\n                    You are responsible for complying with all laws and regulations applicable to your transactions, including, but not limited to, the Commodity Exchange Act and the regulations promulgated thereunder by the U.S. Commodity Futures Trading Commission (“CFTC”), and the federal securities laws and the regulations promulgated thereunder by the U.S. Securities and Exchange Commission (“SEC”).\n                  </Text>\n                  <Text py={2}>\n                    You understand that Idle is not registered or licensed by the CFTC, SEC, the Financial Crimes Enforcement Network or any financial regulatory authority. No financial regulatory authority has reviewed or approved the use of the Idle open-source software. This website and the Idle open-source software do not constitute advice or a recommendation concerning any commodity, security or other asset. Idle is not acting as an investment adviser or commodity trading adviser to any person.\n                  </Text>\n                  <Text py={2}>\n                    Idle does not own or control the underlying software protocols that enable the Protocol to function. In general, the underlying protocols are open-source and anyone can use, copy, modify, and distribute them. Idle is not responsible for operation of the underlying protocols, and Idle makes no guarantee of their functionality, security, or availability.\n                  </Text>\n                  <Text py={2}>\n                    To the maximum extent permitted under Applicable Law, the Portal and the Services (and any of their content or functionality) provided by or on behalf of us are provided on an “AS IS” and “AS AVAILABLE” basis, and we expressly disclaim, and you hereby waive, any representations, conditions or warranties of any kind, whether express or implied, legal, statutory or otherwise, or arising from statute, otherwise in law, course of dealing, or usage of trade, including, without limitation, the implied or legal warranties and conditions of merchantability, merchantable quality, quality or fitness for a particular purpose, title, security, availability, reliability, accuracy, quiet enjoyment and non-infringement of third party rights. Without limiting the foregoing, we do not represent or warrant that the Portal or the Services (including any data relating thereto) will be uninterrupted, available at any particular time or error-free. Further, we do not warrant that errors in the Portal or the Service are correctable or will be correctable.\n                  </Text>\n                  <Text py={2}>\n                    You acknowledge that your data on the Portal may become irretrievably lost or corrupted or temporarily unavailable due to a variety of causes, and agree that, to the maximum extent permitted under Applicable Law, we will not be liable for any loss or damage caused by denial-of-service attacks, software failures, viruses or other technologically harmful materials (including those which may infect your computer equipment), protocol changes by third party providers, Internet outages, force majeure events or other disasters, scheduled or unscheduled maintenance, or other causes either within or outside our control.\n                  </Text>\n                  <Text py={2}>\n                    The disclaimer of implied warranties contained herein may not apply if and to the extent such warranties cannot be excluded or limited under the Applicable Law of the jurisdiction in which you reside.\n                  </Text>\n                </Box>\n\n                <Box id={'exclusion-consequential-related-damages'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    10. EXCLUSION OF CONSEQUENTIAL AND RELATED DAMAGES\n                  </Heading.h3>\n                  <Text py={2}>\n                    In no event shall we (together with our Affiliates, including our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers or contractors) be liable for any incidental, indirect, special, punitive, consequential or similar damages or liabilities whatsoever (including, without limitation, damages for loss of data, information, revenue, goodwill, profits or other business or financial benefit) arising out of or in connection with the Portal and the Services (and any of their content and functionality), any execution or settlement of a transaction, any performance or non-performance of the Services, your Ether, Margin Tokens or any other product, service or other item provided by or on behalf of us, whether under contract, tort (including negligence), civil liability, statute, strict liability, breach of warranties, or under any other theory of liability, and whether or not we have been advised of, knew of or should have known of the possibility of such damages and notwithstanding any failure of the essential purpose of these Terms or any limited remedy hereunder nor is Idle in any way responsible for the execution or settlement of transactions between users of Idle open-source software.\n                  </Text>\n                </Box>\n\n                <Box id={'exclusion-consequential-related-damages'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    11. LIMITATION OF LIABILITY\n                  </Heading.h3>\n                  <Text py={2}>\n                    In no event shall our aggregate liability (together with our Affiliates, including our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers or contractors) arising out of or in connection with the Portal and the Services (and any of their content and functionality), any performance or non-performance of the Services, your Ether, Margin Tokens or any other product, service or other item provided by or on behalf of us, whether under contract, tort (including negligence), civil liability, statute, strict liability or other theory of liability exceed the amount of fees paid by you to us under these Terms, if any, in the twelve (12) month period immediately preceding the event giving rise to the claim for liability.\n                  </Text>\n                </Box>\n\n                <Box id={'dispute-resolution-arbitration'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    12. DISPUTE RESOLUTION AND ARBITRATION\n                  </Heading.h3>\n                  <Text py={2}>\n                    Please read the following section carefully because it requires you to arbitrate certain disputes and claims with Idle and limits the manner in which you can seek relief from us, unless you opt out of arbitration by following the instructions set forth below. In addition, arbitration precludes you from suing in court or having a jury trial.\n                    You and Idle agree that any dispute arising out of or related to these Terms or our Services is personal to you and Idle and that any dispute will be resolved solely through individual action, and will not be brought as a class arbitration, class action or any other type of representative proceeding.\n                  </Text>\n                  <Text py={2}>\n                    Except for small claims disputes in which you or Idle seeks to bring an individual action in small claims court located in the county of your billing address or disputes in which you or Idle seeks injunctive or other equitable relief for the alleged unlawful use of intellectual property, you and Idle waive your rights to a jury trial and to have any dispute arising out of or related to these Terms or our Services resolved in court. Instead, for any dispute or claim that you have against Idle or relating in any way to the Services, you agree to first contact Idle and attempt to resolve the claim informally by sending a written notice of your claim (“Notice”) to Idle by email at info@idle.finance or by certified mail addressed to info@idle.finance. The Notice must (a) include your name, residence address, email address, and telephone number; (b) describe the nature and basis of the claim; (c) set forth the specific relief sought. Our notice to you will be similar in form to that described above. If you and Idle cannot reach an agreement to resolve the claim within thirty (30) days after such Notice is received, then either party may submit the dispute to binding arbitration administered by JAMS or, under the limited circumstances set forth above, in court. All disputes submitted to JAMS will be resolved through confidential, binding arbitration before one arbitrator. Arbitration proceedings will be held in New York City, New York, in accordance with the JAMS Streamlined Arbitration Rules and Procedures (“JAMS Rules”). The most recent version of the JAMS Rules are available on the JAMS website and are hereby incorporated by reference. You either acknowledge and agree that you have read and understand the JAMS Rules or waive your opportunity to read the JAMS Rules and waive any claim that the JAMS Rules are unfair or should not apply for any reason.\n                  </Text>\n                  <Text py={2}>\n                    You and Idle agree that these Terms affect interstate commerce and that the enforceability of this Section 12 will be substantively and procedurally governed by the Federal Arbitration Act, 9 U.S.C. § 1, et seq. (the “FAA”), to the maximum extent permitted by applicable law. As limited by the FAA, these Terms and the JAMS Rules, the arbitrator will have exclusive authority to make all procedural and substantive decisions regarding any dispute and to grant any remedy that would otherwise be available in court, including the power to determine the question of arbitrability. The arbitrator may conduct only an individual arbitration and may not consolidate more than one individual’s claims, preside over any type of class or representative proceeding or preside over any proceeding involving more than one individual.\n                  </Text>\n                  <Text py={2}>\n                    The arbitrator, Idle, and you will maintain the confidentiality of any arbitration proceedings, judgments and awards, including, but not limited to, all information gathered, prepared and presented for purposes of the arbitration or related to the dispute(s) therein. The arbitrator will have the authority to make appropriate rulings to safeguard confidentiality, unless the law provides to the contrary. The duty of confidentiality does not apply to the extent that disclosure is necessary to prepare for or conduct the arbitration hearing on the merits, in connection with a court application for a preliminary remedy or in connection with a judicial challenge to an arbitration award or its enforcement, or to the extent that disclosure is otherwise required by law or judicial decision.\n                  </Text>\n                  <Text py={2}>\n                    You and Idle agree that for any arbitration you initiate, you will pay the filing fee and Idle will pay the remaining JAMS fees and costs. For any arbitration initiated by Idle, Idle will pay all JAMS fees and costs. You and Idle agree that the state or federal courts of the State of New York and the United States sitting in New York City, New York have exclusive jurisdiction over any appeals and the enforcement of an arbitration award.\n                  </Text>\n                  <Text py={2}>\n                    Any claim arising out of or related to these Terms or our Services must be filed within one year after such claim arose; otherwise, the claim is permanently barred, which means that you and Idle will not have the right to assert the claim.\n                  </Text>\n                  <Text py={2}>\n                    You have the right to opt out of binding arbitration within 30 days of the date you first accepted the terms of this Section 12 by emailing us at info@idle.finance. In order to be effective, the opt-out notice must include your full name and address and clearly indicate your intent to opt out of binding arbitration. By opting out of binding arbitration, you are agreeing to resolve disputes in accordance with Section 13.\n                  </Text>\n                  <Text py={2}>\n                    If any portion of this Section 12 is found to be unenforceable or unlawful for any reason, (a) the unenforceable or unlawful provision shall be severed from these Terms; (b) severance of the unenforceable or unlawful provision shall have no impact whatsoever on the remainder of this Section 12 or the parties’ ability to compel arbitration of any remaining claims on an individual basis pursuant to this Section 12; and (c) to the extent that any claims must therefore proceed on a class, collective, consolidated, or representative basis, such claims must be litigated in a civil court of competent jurisdiction and not in arbitration, and the parties agree that litigation of those claims shall be stayed pending the outcome of any individual claims in arbitration. Further, if any part of this Section 12 is found to prohibit an individual claim seeking public injunctive relief, that provision will have no effect to the extent such relief is allowed to be sought out of arbitration, and the remainder of this Section 12 will be enforceable.\n                  </Text>\n                </Box>\n\n                <Box id={'governing-law'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    13. GOVERNING LAW\n                  </Heading.h3>\n                  <Text py={2}>\n                    The interpretation and enforcement of these Terms, and any dispute related to these Terms, the Portal or the Services, will be governed by and construed and enforced in accordance with the laws of the State of Delaware, as applicable, without regard to conflict of law rules or principles (whether of the State of Delaware or any other jurisdiction) that would cause the application of the laws of any other jurisdiction. You agree that we may initiate a proceeding related to the enforcement or validity of our intellectual property rights in any court having jurisdiction. With respect to any other proceeding that is not subject to arbitration under these Terms, the state and federal courts located in Wilmington, Delaware, will have exclusive jurisdiction. You waive any objection to venue in any such courts.\n                  </Text>\n                </Box>\n\n                <Box id={'miscellaneous'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    14. MISCELLANEOUS\n                  </Heading.h3>\n                  <Text py={2}>\n                    Any right or remedy of Idle set forth in these Terms is in addition to, and not in lieu of, any other right or remedy whether described in these Terms, under Applicable Law, at law or in equity. Our failure or delay in exercising any right, power, or privilege under these Terms shall not operate as a waiver thereof. The invalidity or unenforceability of any of these Terms shall not affect the validity or enforceability of any other of these Terms, all of which shall remain in full force and effect. We will have no responsibility or liability for any failure or delay in performance of the Portal or any of the Services, or any loss or damage that you may incur, due to any circumstance or event beyond our control, including without limitation any flood, extraordinary weather conditions, earthquake, or other act of God, fire, war, insurrection, riot, labor dispute, accident, action of government, communications, power failure, or equipment or software malfunction. You may not assign or transfer any right to use the Portal or the Services, or any of your rights or obligations under these Terms, without our express prior written consent, including by operation of law or in connection with any change of control. We may assign or transfer any or all of our rights or obligations under these Terms, in whole or in part, without notice or obtaining your consent or approval. Headings of sections are for convenience only and shall not be used to limit or construe such sections. These Terms contain the entire agreement and supersede all prior and contemporaneous understandings between the parties regarding the Portal and the Services. In the event of any conflict between these Terms and any other agreement you may have with us, these Terms will control unless the other agreement specifically identifies these Terms and declares that the other agreement supersedes these Terms.\n                  </Text>\n                </Box>\n\n              </Box>\n            </Flex>\n          </Box>\n        </Box>\n        <Footer />\n      </Box>\n    );\n  }\n}\n\nexport default Tos;\n","import baseColors, { blue, green, yellow, red } from \"./colors\";\nimport { tint, shade } from 'polished';\n\n// theme.js\nexport default {\n  breakpoints: ['52em', '64em'],\n  // breakpoints: ['40em', '52em', '64em', '80em'],\n  fontSizes: [12, 14, 16, 18, 21, 32, 38, 48, 54, 64, 72, 84],\n  fontWeights: [0, 300, 400, 600, 700, 800],\n  letterSpacings: [0, 1, 2, 4, 8],\n  lineHeights: {\n    solid: 1,\n    title: 1.25,\n    copy: 1.5,\n  },\n  fonts: {\n    serif: '\"georgia regular\", athelas, times, serif',\n    sansSerif: '\"Inter\", -apple-system, sans-serif',\n    counter: '\"Roboto Mono\", Arial, -apple-system, sans-serif'\n  },\n  space: [0, 4, 8, 16, 32, 64, 128, 256],\n  radii: ['0', '4px', '8px', '16px', '2rem'],\n  width: [0, 16, 32, 64, 128, 256],\n  minWidths: [0, 16, 32, 64, 128, 256],\n  maxWidths: [0, 16, 32, 64, 128, 256, 512, 768, 1024, 1536],\n  heights: [0, 16, 32, 64, 128, 256],\n  minHeights: [0, 16, 32, 64, 128, 256],\n  maxHeights: [0, 16, 32, 64, 128, 256],\n  borders: [0, '1px solid #0d2034','1px solid #475d7c'],\n  borderWidths: ['0', '1px', '2px', '4px'],\n  shadows: [\n    '0',\n    '0px 2px 4px rgba(0, 0, 0, 0.1)',\n    '0 7px 14px rgba(50,50,93,.1)',\n    '1px 1px 0px rgba(0,0,0,0.2)',\n    '0px 0px 16px 2px rgb(71,93,123,0.6)'\n  ],\n  opacity: {\n    disabled: 0.4,\n  },\n  colors: {\n    primary: '#fcfcfc',\n    'gradient-bg': 'linear-gradient(120deg, #f6d365 0%, #ea0d73 100%)',\n    'primary-light': blue.light[1],\n    'primary-dark': blue.dark[1],\n    bgBlue: '#0030e0',\n    blue: '#0036ff',\n    'dark-blue': '#00219a',\n    skyBlue: '#00abfe',\n    lightBlue: '#79f4e1',\n    copyColor: '#fcfcfc',\n    subColor: '#a7a7a7',\n    black: baseColors.black,\n    'near-black': '#1e3657',\n    'dark-gray': '#fcfcfc',\n    'mid-gray': '#999',\n    gray: ' #e0e0e0',\n    grey: '#CCC',\n    silver: '#999',\n    'light-silver': '#aaa',\n    'moon-gray': '#ccc',\n    'light-gray': '#eee',\n    'near-white': '#a4aec6',\n    white: '#fff',\n    transparent: 'transparent',\n    /*\n    NEW COLORS\n    */\n    alert:'#ff9900',\n    arrowActive:'#d8d8d8',\n    arrowInactive:'#4f4f4f',\n    selectBgFocused:'#1e3657',\n    selectBg:'#162e4d',\n    backButtonBg:'#162e4d',\n    lineChartStroke:'#a4aec6',\n    wrongNetworkBannerBg:'#0e2133',\n    dashboardBg: '#13273f',\n    statValue: '#a4aec6',\n    boxBorder: '#eeeeee',\n    cellTitle: '#a4aec6',\n    cellText: '#a4aec6',\n    divider: '#a4aec6',\n    counter: '#a4aec6',\n    redeem: '#00a9fe',\n    link:'#00a9fe',\n    deposit: '#0239ff',\n    migrate: '#00a9fe',\n    legend: '#c9c9c9',\n    cardBg:'#162e4d',\n    menuBg:'#162e4d',\n    menuHover:'#1e3657',\n    flashColor:'#bac5ff',\n    cardBgHover:'#1e3657',\n    cardBorder:'#0d2034',\n    pageActive:'#d8d8d8',\n    pageInactive:'#4f4f4f',\n    menuRightBorder:'#0d2034',\n    cardHoverShadow:'0px 0px 0px 1px rgb(45 74 114)',\n    transactions:{\n      action:{\n        send:'#10a0dd',\n        swap:'#3d53c0',\n        boost:'#ffff00',\n        redeem:'#10a0dd',\n        swapout:'#10a0dd',\n        deposit:'#3d53c0',\n        curvein:'#10a0dd',\n        receive:'#3d53c0',\n        migrate:'#3d53c0',\n        default:'#4f4f4f',\n        curveout:'#3d53c0',\n        withdraw:'#10a0dd',\n        curvedepositin:'#10a0dd',\n        curvedepositout:'#3d53c0'\n      },\n      actionBg:{\n        send:'#ceeff6',\n        swap:'#ced6ff',\n        boost:'#ff7979',\n        redeem:'#ceeff6',\n        swapout:'#ceeff6',\n        deposit:'#ced6ff',\n        curvein:'#ceeff6',\n        default:'#dadada',\n        receive:'#ced6ff',\n        migrate:'#ced6ff',\n        withdraw:'#ceeff6',\n        curveout:'#ced6ff',\n        curvedepositin:'#ceeff6',\n        curvedepositout:'#ced6ff'\n      },\n      status:{\n        completed:'#00b84a',\n        pending:'#a5a5a5',\n        failed:'#fa0000'\n      }\n    },\n    blacks: [\n      'rgba(0,0,0,.0125)',\n      'rgba(0,0,0,.025)',\n      'rgba(0,0,0,.05)',\n      'rgba(0,0,0,.1)',\n      'rgba(0,0,0,.2)',\n      'rgba(0,0,0,.3)',\n      'rgba(0,0,0,.4)',\n      'rgba(0,0,0,.5)',\n      'rgba(0,0,0,.6)',\n      'rgba(0,0,0,.7)',\n      'rgba(0,0,0,.8)',\n      'rgba(0,0,0,.9)',\n    ],\n    whites: [\n      'rgba(255,255,255,.0125)',\n      'rgba(255,255,255,.025)',\n      'rgba(255,255,255,.05)',\n      'rgba(255,255,255,.1)',\n      'rgba(255,255,255,.2)',\n      'rgba(255,255,255,.3)',\n      'rgba(255,255,255,.4)',\n      'rgba(255,255,255,.5)',\n      'rgba(255,255,255,.6)',\n      'rgba(255,255,255,.7)',\n      'rgba(255,255,255,.8)',\n      'rgba(255,255,255,.9)',\n    ],\n  },\n  zIndices: [0, 9, 99, 999, 9999],\n  messageStyle: {\n    base: {\n      color: '#fcfcfc',\n      borderColor: '#0d2034',\n      backgroundColor: '#162e4d',\n    },\n    success: {\n      color: shade(0.4, green.base),\n      backgroundColor: tint(0.9, green.base),\n      borderColor: green.base,\n    },\n    warning: {\n      color: shade(0.4, yellow.base),\n      backgroundColor: tint(0.9, yellow.base),\n      borderColor: yellow.base,\n    },\n    danger: {\n      color: shade(0.4, red.base),\n      backgroundColor: tint(0.9, red.base),\n      borderColor: red.base,\n    },\n    info: {\n      color: '#fcfcfc',\n      borderColor: '#0d2034',\n      backgroundColor: '#162e4d',\n    },\n  },\n  buttons: {\n    primary: {\n      color: blue.text,\n      backgroundColor: blue.base,\n      // use css custom props\n      '--main-color': blue.base,\n      '--contrast-color': blue.text,\n    },\n    normal: {\n      color: baseColors.black,\n      '--contrast-color': baseColors.black,\n    },\n    success: {\n      '--main-color': green.base,\n      '--contrast-color': green.text,\n    },\n    danger: {\n      '--main-color': red.base,\n      '--contrast-color': red.text,\n    },\n  },\n  buttonSizes: {\n    small: {\n      fontSize: '0.75rem',\n      height: '2rem',\n      minWidth: '2rem',\n      padding: '0 1rem',\n    },\n    medium: {\n      fontSize: '1rem',\n      height: '3rem',\n      minWidth: '3rem',\n    },\n    large: {\n      fontSize: '1.5rem',\n      height: '4rem',\n      minWidth: '4rem',\n      borderRadius: '2rem'\n    },\n  },\n};\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class TorusConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: Torus, initParams, ...rest } = kwargs;\n    super(rest);\n\n    this.torus = null;\n    this.Torus = Torus;\n    this.initParams = initParams;\n  }\n\n  async onActivation() {\n    if (!this.torus) {\n      this.torus = new this.Torus({\n        buttonPosition: \"bottom-right\" // default: bottom-left\n      });\n    }\n    await this.torus.init();\n    await this.torus.login();\n  }\n\n  async getProvider(){\n    return new Promise( async (resolve, reject) => {\n      resolve(this.torus.provider);\n    });\n  }\n\n  async getAccount(provider) {\n    const userInfo = await this.torus.getUserInfo();\n    if (userInfo){\n      return await this.torus.getPublicAddress({\n        verifier:userInfo.verifier,\n        verifierId:userInfo.verifierId\n      });\n    }\n    return null;\n  }\n\n  async onDeactivation() {\n    await this.torus.logout();\n  }\n\n  changeNetwork(network) {\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class AuthereumConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: Authereum, network, ...rest } = kwargs;\n    super(rest);\n\n    this.authereum = null;\n    this.Authereum = Authereum;\n    this.network = network;\n  }\n\n  async onActivation() {\n    if (!this.authereum) {\n      this.authereum = new this.Authereum(this.network);\n    }\n    const provider = await this.getProvider();\n    if (provider){\n      await provider.enable();\n      return provider;\n    }\n  }\n\n  async getProvider(){\n    return new Promise( async (resolve, reject) => {\n      resolve(this.authereum.getProvider());\n    });\n  }\n\n  async getAccount(provider) {\n    if (provider){\n      const accounts = await provider.getAccounts();\n      if (accounts && accounts.length){\n        return accounts[0];\n      }\n    }\n    return null;\n  }\n\n  async disable() {\n    const provider = await this.getProvider();\n    if (provider){\n      await provider.disable();\n      return provider;\n    }\n  }\n\n  changeNetwork(network) {\n    this.constructor({\n      api: this.Authereum,\n      network\n    })\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class GnosisSafeConnector extends Connector {\n\n  constructor(SafeAppConnector) {\n    super(...arguments);\n    this.safeLoaded = false;\n    this.SafeAppConnector = SafeAppConnector;\n    this.provider = new this.SafeAppConnector();\n    this.checkSafeApp();\n  }\n\n  async onActivation() {\n    if (!this.provider) {\n      this.provider = new this.SafeAppConnector();\n    }\n\n    if (this.provider){\n      await this.provider.activate();\n      return this.provider;\n    }\n  }\n\n  async getAccount() {\n    if (this.provider){\n      return await this.provider.getAccount();\n    }\n  }\n\n  async getProvider(){\n    if (this.provider){\n      return await this.provider.getProvider();\n    }\n  }\n\n  async getSafeInfo() {\n    if (this.provider){\n      return await this.provider.getSafeInfo();\n    }\n  }\n\n  async getChainId() {\n    if (this.provider){\n      return await this.provider.getChainId();\n    }\n  }\n\n  async checkSafeApp() {\n    if (this.provider){\n      const isSafeApp = await this.provider.isSafeApp();\n      this.safeLoaded = true;\n      return isSafeApp;\n    }\n  }\n\n  async disable() {\n    if (this.provider){\n      this.provider.deactivate();\n      return this.provider;\n    }\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class WalletLinkConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: WalletLink, appName, infuraUrl, chainId, appLogoUrl, ...rest } = kwargs;\n    super(rest);\n\n    this.provider = null;\n    this.walletLink = null;\n    this.appName = appName;\n    this.chainId = chainId;\n    this.infuraUrl = infuraUrl;\n    this.appLogoUrl = appLogoUrl;\n    this.WalletLink = WalletLink;\n  }\n\n  async onActivation() {\n    if (!this.walletLink){\n      this.walletLink = new this.WalletLink({\n        darkMode: false,\n        appName: this.appName,\n        infuraUrl: this.infuraUrl,\n        appLogoUrl: this.appLogoUrl,\n      });\n    }\n\n    const provider = this.getProvider();\n    if (provider){\n      await provider.enable();\n      return provider;\n    }\n  }\n\n  getProvider(){\n    if (!this.provider){\n      this.provider = this.walletLink.makeWeb3Provider(this.infuraUrl, this.chainId);\n    }\n    return this.provider;\n  }\n\n  async getAccount(provider) {\n    if (provider){\n      // Use eth_RequestAccounts\n      const accounts = await provider.send('eth_requestAccounts');\n      if (accounts && accounts.length){\n        return accounts[0];\n      }\n    }\n    return null;\n  }\n\n  async disable() {\n    const provider = this.getProvider();\n    if (provider){\n      this.walletLink.disconnect();\n      await provider.close();\n      return provider;\n    }\n  }\n\n  changeNetwork(network) {\n    this.constructor({\n      network,\n      api: this.WalletLink,\n      appName: this.appName,\n      chainId: this.chainId,\n      infuraUrl: this.infuraUrl,\n      appLogoUrl: this.appLogoUrl,\n    })\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class WalletConnectConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: WalletConnectProvider, defaultNetwork, infuraId, ...rest } = kwargs;\n    super(rest);\n\n    this.provider = null;\n    this.WalletConnectProvider = WalletConnectProvider;\n    this.infuraId = infuraId;\n  }\n\n  async onActivation() {\n    if (!this.provider) {\n      this.provider = new this.WalletConnectProvider({\n        infuraId:this.infuraId\n      });\n    }\n\n    if (this.provider){\n      await this.provider.enable();\n      return this.provider;\n    }\n  }\n\n  async getProvider(){\n    return this.provider;\n  }\n\n  async disable() {\n    if (this.provider){\n      this.provider.close();\n      return this.provider;\n    }\n  }\n}\n","import WalletLink from 'walletlink';\nimport AuthereumApi from 'authereum';\nimport PortisApi from \"@portis/web3\";\nimport FortmaticApi from \"fortmatic\";\nimport TrezorApi from \"trezor-connect\";\nimport { Connectors } from \"web3-react\";\nimport TorusApi from '@toruslabs/torus-embed';\nimport globalConfigs from '../configs/globalConfigs';\nimport TorusConnector from './connectors/TorusConnector';\nimport AuthereumConnector from './connectors/AuthereumConnector';\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport GnosisSafeConnector from './connectors/GnosisSafeConnector';\nimport WalletLinkConnector from './connectors/WalletLinkConnector';\nimport { SafeAppConnector } from '@gnosis.pm/safe-apps-web3-react';\nimport WalletConnectConnector from './connectors/WalletConnectConnector';\n\nconst {\n  InjectedConnector,\n  NetworkOnlyConnector,\n  TrezorConnector,\n  LedgerConnector,\n  FortmaticConnector,\n  PortisConnector\n} = Connectors;\n\nconst env = process.env;\n\nconst manifestEmail = env.REACT_APP_TREZOR_MANIFEST_EMAIL; // trezor\nconst manifestAppUrl = env.REACT_APP_TREZOR_MANIFEST_URL; // trezor\nconst defaultNetwork = globalConfigs.network.requiredNetwork;\nconst fortmaticApiKey = env.REACT_APP_FORTMATIC_KEY_MAINNET;\nconst portisDAppId = env.REACT_APP_PORTIS_DAPP_ID;\nconst portisNetwork = env.REACT_APP_PORTIS_NETWORK;\n\nconst supportedNetworkURLs = {};\n  \nObject.keys(globalConfigs.network.providers.infura).forEach((networkId,index) => {\n  supportedNetworkURLs[networkId] = globalConfigs.network.providers.infura[networkId]+env.REACT_APP_INFURA_KEY;\n});\n\nconst Injected = new InjectedConnector({\n  supportedNetworks: globalConfigs.network.enabledNetworks\n});\n\nconst Infura = new NetworkOnlyConnector({\n  providerURL: globalConfigs.network.providers.infura[defaultNetwork]+env.REACT_APP_INFURA_KEY\n});\n\n\nconst Trezor = new TrezorConnector({\n  api: TrezorApi,\n  supportedNetworkURLs,\n  defaultNetwork,\n  manifestEmail,\n  manifestAppUrl\n});\n\nconst Ledger = new LedgerConnector({\n  supportedNetworkURLs,\n  defaultNetwork\n});\n\nconst WalletConnect = new WalletConnectConnector({\n  defaultNetwork,\n  supportedNetworkURLs,\n  api: WalletConnectProvider,\n  infuraId:env.REACT_APP_INFURA_KEY,\n  bridge: \"https://bridge.walletconnect.org\",\n});\n\nconst Fortmatic = new FortmaticConnector({\n  api: FortmaticApi,\n  apiKey: fortmaticApiKey,\n  logoutOnDeactivation: false\n});\n\nconst Portis = new PortisConnector({\n  api: PortisApi,\n  dAppId: portisDAppId,\n  network: portisNetwork\n});\n\nconst Authereum = new AuthereumConnector({\n  api: AuthereumApi,\n  network: globalConfigs.network.availableNetworks[defaultNetwork].toLowerCase()\n});\n\nconst walletLink = new WalletLinkConnector({\n  api: WalletLink,\n  darkMode: false,\n  chainId: defaultNetwork,\n  appName: globalConfigs.appName,\n  infuraUrl: supportedNetworkURLs[defaultNetwork],\n  appLogoUrl: 'https://idle.finance/images/idle-mark.png',\n});\n\nconst Torus = new TorusConnector({\n  api: TorusApi,\n  initParams:{\n    buildEnv: 'production', // default: production\n    enableLogging: false, // default: false\n    network: {\n      host: globalConfigs.network.availableNetworks[defaultNetwork].toLowerCase(), // default: mainnet\n      chainId: defaultNetwork, // default: 1\n      networkName: globalConfigs.network.availableNetworks[defaultNetwork].toLowerCase() // default: Main Ethereum Network\n    },\n    showTorusButton: false // default: true\n  }\n});\n\nconst gnosis = new GnosisSafeConnector(SafeAppConnector);\n\nexport default {\n  Injected,\n  Infura,\n  WalletConnect,\n  gnosis,\n  walletLink,\n  Fortmatic,\n  Portis,\n  Authereum,\n  Torus,\n  Trezor,\n  Ledger,\n};","import React from \"react\";\nimport { Box, Flex, Text, Icon } from \"rimble-ui\";\n\nclass WrongNetworkBanner extends React.Component {\n  render() {\n    const bannerStyle = {\n      position: \"fixed\",\n      bottom: 0,\n      left: 0,\n      right: 0,\n      width: \"100%\",\n      zIndex: 9999\n    };\n\n    return (\n      <Box style={bannerStyle} backgroundColor={'wrongNetworkBannerBg'} p={3}>\n        <Flex alignItems={\"center\"}>\n          <Box p={4}>\n            <Icon name=\"Warning\" color=\"gold\" size=\"30\" />\n          </Box>\n          <Flex flexDirection={\"column\"}>\n            <Text fontWeight={\"bold\"}>\n              Looks like you're on the wrong network\n            </Text>\n            <Text>\n              You should be on the {this.props.network.required.name} Ethereum\n              network. You are currently connected to the{\" \"}\n              <Text.span style={{ textTransform: \"capitalize\" }}>\n                {this.props.network.current.name}\n              </Text.span>{\" \"}\n              Network - please switch to the correct network.\n            </Text>\n          </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default WrongNetworkBanner;\n","import React from \"react\";\n\nimport WrongNetworkBanner from \"./components/WrongNetworkBanner\";\n\nclass NetworkUtil extends React.Component {\n  render() {\n    return (\n      <div>\n        { this.props.network.isCorrectNetwork === false && this.props.web3\n          ?\n            <WrongNetworkBanner\n              network={this.props.network}\n            />\n          :\n            null\n        }\n      </div>\n    );\n  }\n}\n\nexport default NetworkUtil;\n","import React from \"react\";\nimport { Box, Heading, Text, Modal, Link } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport RimbleUtil from \"@rimble/utils\";\n\nclass NoWeb3BrowserModal extends React.Component {\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2\n          fontSize={4}\n          fontWeight={3}\n          lineHeight={\"1.375em\"}\n          my={3}\n        >\n          Switch browsers to use the Idle App\n        </Heading.h2>\n\n        {RimbleUtil.isMobileDevice() ? (\n          <Text my={4}>\n            You can't use our blockchain features, like increasing the count\n            value, in this browser. We recommend using{\" \"}\n            <Link\n              href=\"https://status.im/\"\n              title=\"status.im website\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Status\n            </Link>\n            ,{\" \"}\n            <Link\n              href=\"https://www.cipherbrowser.com/\"\n              title=\"Cipher Wallet\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Cipher\n            </Link>{\" \"}\n            or{\" \"}\n            <Link\n              href=\"https://wallet.coinbase.com/\"\n              title=\"Coinbase Wallet\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Coinbase wallet\n            </Link>{\" \"}\n            browsers.\n          </Text>\n        ) : (\n          <Box>\n            <Text my={4}>\n              You can't use our blockchain features, like increasing the\n              count value, in this browser. Switch to{\" \"}\n              <Link\n                href=\"https://brave.com/download/\"\n                title=\"Download Brave browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Brave\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.mozilla.org/\"\n                title=\"Download FireFox browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                FireFox\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.opera.com/download\"\n                title=\"Download Opera Browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Opera\n              </Link>\n              , or{\" \"}\n              <Link\n                href=\"https://www.google.com/chrome/\"\n                title=\"Download Chrome browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Chrome\n              </Link>{\" \"}\n              to continue.\n            </Text>\n\n            <Text>\n              <Text.span bold>Rather use your phone?</Text.span> You can use\n              the Idle App in mobile browser wallets like{\" \"}\n              <Link\n                href=\"https://status.im/\"\n                title=\"status.im website\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Status\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.cipherbrowser.com/\"\n                title=\"Cipher Wallet\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Cipher\n              </Link>{\" \"}\n              or{\" \"}\n              <Link\n                href=\"https://wallet.coinbase.com/\"\n                title=\"Coinbase Wallet\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Coinbase wallet\n              </Link>\n              .\n            </Text>\n          </Box>\n        )}\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default NoWeb3BrowserModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Flex,\n  Icon,\n  Modal,\n  Link,\n  Button\n} from \"rimble-ui\";\n\nclass NoWalletModal extends React.Component {\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card p={5} maxWidth={\"600px\"}>\n          <Button.Text\n            icononly\n            icon={\"Close\"}\n            color={\"moon-gray\"}\n            position={\"absolute\"}\n            top={0}\n            right={0}\n            mt={3}\n            mr={3}\n            onClick={this.props.closeModal}\n          />\n\n          <Flex flexDirection={\"column\"} justifyContent={\"space-between\"}>\n            <Flex justifyContent={\"center\"} my={4}>\n              <Icon name=\"Warning\" color=\"gold\" size=\"40\" />\n            </Flex>\n\n            <Heading.h2 my={3}>No Wallet Available</Heading.h2>\n\n            <Text my={4}>\n              Your current browser does not have a blockchain connected wallet.\n              Try using MetaMask, Fortmatic, Portis.\n            </Text>\n\n            <Link\n              href=\"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              <Button.Outline size=\"small\">Get MetaMask Extension</Button.Outline>\n            </Link>\n          </Flex>\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default NoWalletModal;\n","// Checks for MetaMask\nconst GeneralUtil = {\n  hasMetaMask: () => {\n    let hasMetaMask = false;\n\n    if (typeof window.ethereum !== \"undefined\") {\n      hasMetaMask = typeof window.ethereum.isMetaMask !== \"undefined\";\n    } else if (typeof window.web3 !== 'undefined') {\n      hasMetaMask = typeof window.web3.currentProvider.isMetaMask !== 'undefined' && window.web3.currentProvider.isMetaMask;\n    }\n\n    return hasMetaMask;\n  },\n  isTrustWallet: () => {\n    if (typeof window.web3 !== \"undefined\" && typeof window.web3.currentProvider !== 'undefined'){\n      return typeof window.web3.currentProvider.isTrust !== 'undefined' && window.web3.currentProvider.isTrust;\n    }\n    return false;\n  },\n  isCoinbaseWallet: () => {\n    if (typeof window.web3 !== \"undefined\" && typeof window.web3.currentProvider !== 'undefined'){\n      return typeof window.web3.currentProvider.isCoinbaseWallet !== 'undefined' && window.web3.currentProvider.isCoinbaseWallet;\n    }\n    return false;\n  },\n  hasDapper: () => {\n    let hasDapper = typeof window.DapperEthereum !== 'undefined';\n\n    if (typeof window.ethereum !== \"undefined\") {\n      hasDapper = typeof window.ethereum.isDapper !== \"undefined\" && window.ethereum.isDapper;\n    }\n\n    return hasDapper;\n  },\n  isOpera: () => {\n    return /Opera|OPR\\//.test(navigator.userAgent);\n  },\n  // Current device is Android\n  isAndroid: () => {\n    const isAndroid = /android/i.test(navigator.userAgent) ? true : false;\n\n    return isAndroid;\n  },\n  // Current device is iOS\n  isIos() {\n    const isIos =\n      /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream\n        ? true\n        : false;\n\n    return isIos;\n  }\n};\n\nexport default GeneralUtil;\n","import React from \"react\";\nimport {\n  Heading,\n  Text,\n  Flex,\n  Modal,\n  Button,\n  Box,\n  Loader\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport GeneralUtil from \"../GeneralUtil\";\nimport RimbleUtils from \"@rimble/utils\";\n\nclass WrongNetworkModal extends React.Component {\n  renderContent = () => {\n    return (\n      <ModalCard.Body>\n        <Heading.h2 my={3}>\n          Switch to the {this.props.network.required.name} network in{\" \"}\n          {GeneralUtil.hasMetaMask() ? `MetaMask` : `Settings`}\n        </Heading.h2>\n\n        <Text my={4}>\n          The Idle App only works on the{\" \"}\n          <Text.span style={{ textTransform: \"capitalize\" }}>\n            {this.props.network.required.name}\n          </Text.span>{\" \"}\n          network. You’re currently on the{\" \"}\n          <Text.span style={{ textTransform: \"capitalize\" }}>\n            {\" \"}\n            {this.props.network.current.name}\n          </Text.span>{\" \"}\n          network.\n        </Text>\n\n        {GeneralUtil.hasMetaMask() && !RimbleUtils.isMobileDevice() ? (\n          <Box bg={\"#f6f6fc\"} p={3} display={[\"none\", \"block\"]}>\n            <Flex alignItems={\"center\"}>\n              <Box position={\"relative\"} width={\"4em\"}>\n                <Box>\n                  <Loader size={\"3em\"} />\n                </Box>\n              </Box>\n              <Box>\n                <Text fontWeight={4}>Waiting for the right network...</Text>\n                <Text fontWeight={2}>\n                  Go to your Wallet and to switch\n                </Text>\n              </Box>\n            </Flex>\n          </Box>\n        ) : null}\n\n        <Box display={[\"block\", \"none\"]}>\n          <Button onClick={this.props.closeModal} width={1}>\n            OK\n          </Button>\n        </Box>\n      </ModalCard.Body>\n    )\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <React.Fragment>\n            {this.renderContent()}\n          </React.Fragment>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default WrongNetworkModal;\n","import React from \"react\";\nimport { Heading, Text, Box, Flex, Icon } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\n\nfunction TransactionFeeModal(props) {\n  return (\n    <Box>\n      <ModalCard.Header title={'Transaction fees, what are you paying for?'} subtitle={'You need to pay a fee to use the Ethereum blockchain.'} subtitle2={'This pays for someone to process your transaction and store the data.'}></ModalCard.Header>\n      <ModalCard.Body>\n        <Flex flexDirection={['column', 'row']}\n          justifyContent={\"space-between\"}\n          my={[0, 4]}>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"Fingerprint\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Undeniable proof</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              You get a public record of any funds you send or receive, a bit like\n              a deed for a house.\n            </Text>\n          </Box>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"EnhancedEncryption\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Unbreakable encryption</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              Your funds can only ever go to your intended recipients.\n            </Text>\n          </Box>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"AccountBalance\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n              <Icon\n                name=\"NotInterested\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Unparalleled control</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              You can pay or get paid without using any banks or companies.\n            </Text>\n          </Box>\n        </Flex>\n      </ModalCard.Body>\n    </Box>\n  );\n}\n\nexport default TransactionFeeModal;\n","import React from 'react'\nimport moment from 'moment';\nimport connectors from '../App/connectors';\nimport { useWeb3Context } from 'web3-react';\nimport GeneralUtil from \"../utilities/GeneralUtil\";\nimport ImageButton from '../ImageButton/ImageButton';\nimport globalConfigs from '../configs/globalConfigs';\nimport styles from './Web3ConnectionButtons.module.scss';\nimport { Button, Box, Text, Flex, Link } from 'rimble-ui';\n\nconst LOG_ENABLED = false;\nconst customLog = (...props) => { if (LOG_ENABLED) console.log(moment().format('HH:mm:ss'),...props); };\n\nexport default function Web3ConnectionButtons(props) {\n  const context = useWeb3Context();\n\n  if (!context.active && !context.error) {\n    customLog('context loading', context);\n  } else if (context.error) {\n    customLog('context error', context);\n  } else {\n    customLog('context success', context);\n  }\n\n  const setConnector = async (connectorName,name) => {\n    let walletProvider = connectorName === 'Injected' ? name : connectorName;\n    if (localStorage) {\n      localStorage.setItem('walletProvider', walletProvider);\n      localStorage.setItem('connectorName', connectorName);\n    }\n\n    if (props.setConnector && typeof props.setConnector === 'function'){\n      props.setConnector(connectorName,walletProvider);\n    }\n    \n    // Close modal\n    if (typeof props.connectionCallback === 'function'){\n      props.connectionCallback();\n    }\n\n    return connectorName;\n    // return await context.setConnector(connectorName);\n  };\n\n  const unsetConnector = async () => {\n    context.unsetConnector();\n    if (props.setConnector && typeof props.setConnector === 'function'){\n      props.setConnector('Infura','Infura');\n    }\n  };\n\n  // Show provider fields to detect in-app browser\n  // alert(JSON.stringify(Object.keys(window.web3.currentProvider)));\n    \n  const isOpera = GeneralUtil.isOpera();\n  const isDapper = GeneralUtil.hasDapper();\n  const isMetamask = GeneralUtil.hasMetaMask();\n  const isTrustWallet = GeneralUtil.isTrustWallet();\n  const isGnosisSafe = !!connectors.gnosis.provider.safe;\n  const isCoinbaseWallet = GeneralUtil.isCoinbaseWallet();\n  const browserWalletDetected = isMetamask || isOpera || isDapper || isCoinbaseWallet || isTrustWallet;\n  \n  const allowedConnectors = props.allowedConnectors;\n  const registerPage = props.registerPage;\n\n  if (connectors.Portis) {\n    if (registerPage) {\n      connectors.Portis.options = connectors.Portis.options || {};\n      connectors.Portis.options.registerPageByDefault = true;\n    } else {\n      connectors.Portis.options = connectors.Portis.options || {};\n      connectors.Portis.options.registerPageByDefault = false;\n    }\n  }\n\n  let basicConnectorsName = Object.keys(connectors).filter(c => c !== 'Infura');\n\n  if (allowedConnectors) {\n    basicConnectorsName = basicConnectorsName.filter(n => allowedConnectors.map((v) => { return v.toLowerCase(); }).indexOf(n.toLowerCase()) !== -1 );\n  }\n\n  // Handle Gnosis Safe connector\n  if (isGnosisSafe){\n    const injectedIndex = basicConnectorsName.indexOf('Injected');\n    // Remove Injected\n    basicConnectorsName.splice(injectedIndex,1);\n    // Remove Gnosis\n    const gnosisIndex = basicConnectorsName.indexOf('gnosis');\n    basicConnectorsName.splice(gnosisIndex,1);\n    // Insert Gnosis in first place\n    basicConnectorsName.unshift('gnosis');\n  } else {\n    const gnosisIndex = basicConnectorsName.indexOf('gnosis');\n    // Remove Gnosis\n    basicConnectorsName.splice(gnosisIndex,1);\n  }\n\n  const buttons = basicConnectorsName.map( (connectorName,index) => {\n    switch (connectorName) {\n      case 'Injected':\n        if (browserWalletDetected) {\n          let name = null;\n          if (isMetamask) {\n            name = 'Metamask';\n          } else if (isOpera) {\n            name = 'Opera';\n          } else if (isDapper){\n            name = 'Dapper';\n          } else if (isCoinbaseWallet){\n            name = 'Coinbase';\n          } else if (isTrustWallet){\n            name = 'TrustWallet';\n          }\n\n          const connectorInfo = globalConfigs.connectors[name.toLowerCase()];\n          if (connectorInfo && connectorInfo.enabled){\n            const walletIcon = connectorInfo.icon ? connectorInfo.icon : `${name.toLowerCase()}.svg`;\n            return (\n              <Flex\n                width={1}\n                key={`wallet_${name}`}\n                justifyContent={'space-between'}\n                style={{\n                  flex:'0 100%',\n                }}\n              >\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={name}\n                  isMobile={true}\n                  width={[1,0.48]}\n                  imageProps={{width:'auto',height:'42px'}}\n                  imageSrc={`images/connectors/${walletIcon}`}\n                  handleClick={ async () => await setConnector(connectorName,name)}\n                  subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using ${name}` }\n                />\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  isMobile={true}\n                  width={[1,0.48]}\n                  caption={'Watch Address'}\n                  imageSrc={`images/tokens/ETH.svg`}\n                  subcaption={'Watch an Ethereum address'}\n                  imageProps={{width:'auto',height:'42px'}}\n                  handleClick={ e => props.setCustomAddress(true) }\n                />\n              </Flex>\n            )\n          }\n          return null;\n        } else {\n          const connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n          return (\n            <ImageButton\n              buttonProps={{\n                border:2\n              }}\n              isMobile={true}\n              caption={'Browser Wallet'}\n              key={`wallet_${connectorName}`}\n              imageProps={{width:'auto',height:'42px'}}\n              imageSrc={`images/connectors/browser-wallet.png`}\n              handleClick={ async () => await setConnector(connectorName) }\n              subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using a browser wallet`}\n              buttonStyle={ props.isMobile ? {justifyContent:'flex-start',flex:'0 100%'} : {justifyContent:'flex-start',flex:'0 48%'} }\n            />\n          );\n        }\n      default:\n        const connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n        if (connectorInfo && connectorInfo.enabled){\n          const walletIcon = connectorInfo.iconModal ? connectorInfo.iconModal : (connectorInfo.icon ? connectorInfo.icon : `${connectorName.toLowerCase()}.svg`);\n\n          let caption = connectorInfo.name ? connectorInfo.name : connectorName;\n          return (\n            <ImageButton\n              buttonProps={{\n                border:2\n              }}\n              isMobile={true}\n              caption={caption}\n              key={`wallet_${connectorName}`}\n              imageSrc={`images/connectors/${walletIcon}`}\n              imageProps={{width:'auto',height:'42px'}}\n              handleClick={ async () => await setConnector(connectorName) }\n              subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using ${connectorName}`}\n              buttonStyle={ props.isMobile ? {justifyContent:'flex-start',flex:'0 100%'} : {justifyContent:'flex-start',flex:'0 48%'} }\n            />\n          );\n        }\n        return null;\n    }\n  });\n\n  return (\n    <Box width={[1]}>\n      <Flex flexDirection={'column'} alignItems={\"center\"}>\n        {context.error && (\n          <Text.p textAlign=\"center\">\n            An error occurred, are you using an Ethereum browser such as\n            <Link href=\"https://metamask.io/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">\n              &nbsp; Metamask &nbsp;\n            </Link>\n             or\n            <Link href=\"https://www.meetdapper.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">\n              &nbsp; Dapper\n            </Link>\n            ?\n            If you do not have an Ethereum wallet follow the\n            \"I'm new to Ethereum\" flow when connecting.\n            If you do have a wallet, click Reset and retry one of the wallet listed below,\n            Generic wallet option is used for Ethereum browsers only.\n          </Text.p>\n        )}\n        {(context.active || (context.error && context.connectorName)) && context.connectorName !== 'Infura' && (\n          <Button.Outline\n            width={[1/2]}\n            className={[styles.button]}\n            mb={[1, 3]}\n            size={'large'}\n            key={'reset'}\n            onClick={async () => await unsetConnector()}\n          >\n            {context.active ? \"Deactivate Connector\" : \"Reset\"}\n          </Button.Outline>\n        )}\n      </Flex>\n      <Flex\n        flexWrap={'wrap'}\n        flexDirection={'row'}\n        justifyContent={'space-between'}\n      >\n        {buttons}\n      </Flex>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport {\n  Box,\n  Text,\n  Link,\n  Icon,\n  Flex,\n  Field,\n  Modal,\n  Input,\n  Loader,\n  Button,\n  Heading\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard.js';\nimport styles from './Header.module.scss';\nimport FunctionsUtil from '../FunctionsUtil.js';\nimport ImageButton from '../../ImageButton/ImageButton.js';\nimport TransactionFeeModal from \"./TransactionFeeModal.js\";\nimport Web3ConnectionButtons from \"../../Web3ConnectionButtons/Web3ConnectionButtons.js\";\n\nimport {\n  Link as RouterLink\n} from \"react-router-dom\";\n\nclass ConnectionModal extends React.Component {\n  // TODO save pref in localstorage and do not show 'Before connecting' info every time\n  state = {\n    validated:false,\n    showTxFees:false,\n    customAddress:'',\n    currentSection:null,\n    showInstructions:false,\n    askCustomAddress:false,\n    closeRemainingTime:null,\n    customAddressError:false,\n    newToEthereumChoice:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  toggleShowTxFees = e => {\n    e.preventDefault();\n\n    this.setState({\n      showTxFees: !this.state.showTxFees\n    });\n  }\n\n  setStoredSection = () => {\n    let currentSection = null;\n    if (localStorage){\n      currentSection = localStorage.getItem('currentSection');\n      if (currentSection){\n        this.setState({\n          currentSection\n        });\n      }\n    }\n    return currentSection;\n  }\n\n  componentDidMount = () => {\n    this.loadUtils();\n    this.setStoredSection();\n  }\n\n  componentDidUpdate = () => {\n    this.loadUtils();\n  }\n\n  resetModal = e => {\n    this.setState({\n      showTxFees: false,\n      currentSection:null,\n      askCustomAddress:false,\n      showInstructions: false,\n      newToEthereumChoice:null,\n    });\n  }\n\n  setConnector = async (connectorName,name) => {\n    let walletProvider = connectorName === 'Injected' ? name : connectorName;\n\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory:'Connect',\n      eventLabel:walletProvider,\n      eventAction:'select_wallet'\n    });\n\n    if (this.props.setConnector && typeof this.props.setConnector === 'function'){\n      this.props.setConnector(connectorName,walletProvider);\n    }\n\n    // Set Wallet choice\n    this.setState({\n      newToEthereumChoice: connectorName\n    });\n\n    this.closeCountdown();\n\n    return connectorName;\n\n    // return await window.RimbleWeb3_context.setConnector(connectorName);\n  }\n\n  closeCountdown = () => {\n    const closeRemainingTime = this.state.closeRemainingTime ? this.state.closeRemainingTime-1 : 5;\n    if (!closeRemainingTime){\n      this.closeModal();\n    } else {\n      setTimeout(() => { this.closeCountdown() },1000);\n    }\n    this.setState({\n      closeRemainingTime\n    });\n  }\n\n  setWalletChoice = (e,choice) => {\n    e.preventDefault();\n    this.setState({\n      newToEthereumChoice: choice\n    });\n  }\n\n  closeModal = () => {\n    // Reset modal\n    this.resetModal();\n    // Set latest stored sections\n    this.setStoredSection();\n    // Close modal\n    this.props.closeModal();\n  }\n\n  setCurrentSection = (e,currentSection) => {\n    e.preventDefault();\n    this.setState({\n      currentSection\n    });\n\n    if (currentSection!=='instructions'){\n      // Send Google Analytics event\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Connect',\n        eventAction: 'select_mode',\n        eventLabel: currentSection\n      });\n\n      this.functionsUtil.setLocalStorage('currentSection',currentSection);\n    }\n  }\n\n  connectCustomAddress = () => {\n    const addressValid = this.functionsUtil.checkAddress(this.state.customAddress);\n    if (addressValid){\n      this.setCustomAddress(false);\n      this.functionsUtil.setCustomAddress(this.state.customAddress);\n      this.setConnector('custom','custom');\n      setTimeout(() => { this.closeModal() },1000);\n      return true;\n    } else {\n      return this.setState({\n        customAddressError:true\n      });\n    }\n  }\n\n  updateCustomAddress = (e) => {\n    const customAddressError = false;\n    const customAddress = e.target.value;\n    const validated = this.functionsUtil.checkAddress(customAddress);\n    this.setState({\n      validated,\n      customAddress,\n      customAddressError\n    });\n  }\n\n  setCustomAddress = (askCustomAddress) => {\n    this.setState({\n      askCustomAddress\n    });\n  }\n\n  renderModalContent = () => {\n\n    const TOSacceptance = (\n      <Box>\n        <Text textAlign={'center'} fontSize={1} py={[2,3]}>By connecting, I accept Idle's <RouterLink to=\"/terms-of-service\" color={'primary'} style={{color:this.props.theme.colors.primary,textDecoration:'underline'}} target={'_blank'} rel=\"nofollow noopener noreferrer\">Terms of Service</RouterLink></Text>\n      </Box>\n    );\n\n    const newToEthereum = this.state.currentSection === 'new';\n    const showConnectionButtons = this.state.currentSection === 'wallet';\n    const showInstructions = this.state.currentSection === 'instructions';\n\n    if (showInstructions){\n      return (\n        <React.Fragment>\n          <ModalCard.Header title={'Before you connect'} subtitle={'Connecting lets you use Idle via your Ethereum account.'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              flexDirection={['column', 'row']}\n              justifyContent={\"space-between\"}\n              my={[0, 3]}\n            >\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"Public\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>The blockchain is public</Heading>\n                <Text fontSize={1} textAlign={'center'}>\n                  Your Ethereum account activity is public on the\n                  blockchain. Choose an account you don’t mind being\n                  linked with your activity here.\n                </Text>\n              </Box>\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"AccountBalanceWallet\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>Have some Ether for fees</Heading>\n                <Text fontSize={1} mb={3} textAlign={'center'}>\n                  You’ll need Ether to pay transaction fees. Buy Ether\n                  from exchanges like Coinbase or directly via enabled wallet\n                  such as Portis or Dapper.<br />\n                  <Link\n                    title=\"Learn about Ethereum transaction fees\"\n                    fontWeight={'0'}\n                    color={'blue'}\n                    textAlign={'center'}\n                    hoverColor={'blue'}\n                    href=\"#\"\n                    onClick={this.toggleShowTxFees}\n                  >\n                    What are transaction fees?\n                  </Link>\n                </Text>\n              </Box>\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"People\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>Have the right account ready</Heading>\n                <Text fontSize={1} textAlign={'center'}>\n                  If you have multiple Ethereum accounts, check that the\n                  one you want to use is active in your browser.\n                </Text>\n              </Box>\n            </Flex>\n          </ModalCard.Body>\n        </React.Fragment>\n      );\n    }\n\n    if (this.state.askCustomAddress){\n      return (\n        <Box>\n          <ModalCard.Header\n            title={'Connect ETH wallet'}\n            icon={'images/idle-mark.png'}\n            subtitle={'And get started with Idle.'}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              width={1}\n              minWidth={[1,'30em']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Field\n                width={1}\n                label={'Ethereum address'}\n              >\n                <Input\n                  required\n                  width={1}\n                  type={'text'}\n                  className={styles.input}\n                  borderColor={'cardBorder'}\n                  backgroundColor={'cardBg'}\n                  pattern={'^0x[a-fA-F0-9]{40}$'}\n                  value={this.state.customAddress}\n                  onChange={ e => this.updateCustomAddress(e) }\n                  placeholder={'Insert a valid Ethereum address'}\n                />\n              </Field>\n              {\n                this.state.customAddressError && (\n                  <Text\n                    mb={2}\n                    fontSize={2}\n                    color={'red'}\n                    fontWeight={3}\n                    textAlign={'center'}\n                  >\n                    Insert a valid Ethereum Address\n                  </Text>\n                )\n              }\n              <Button\n                px={[3,4]}\n                mx={'auto'}\n                fontWeight={3}\n                size={'medium'}\n                fontSize={[2,2]}\n                borderRadius={4}\n                contrastColor={'primary'}\n                className={[styles.gradientButton]}\n                onClick={ e => this.connectCustomAddress() }\n              >\n                CONNECT\n              </Button>\n            </Flex>\n            <Flex\n              pt={3}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <Link\n                hoverColor={'blue'}\n                textAlign={'center'}\n                onClick={ e => this.setCustomAddress(false) }\n              >\n                Select another Wallet\n              </Link>\n            </Flex>\n            { TOSacceptance }\n          </ModalCard.Body>\n        </Box>\n      );\n    }\n\n    if (showConnectionButtons) {\n      return (\n        <Box>\n          <ModalCard.Header title={'Select your Wallet'} subtitle={'And get started with Idle.'} icon={'images/idle-mark.png'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex width={1} px={[0,5]} flexDirection={'column'} justifyContent={'center'}>\n              <Web3ConnectionButtons\n                width={1/2}\n                isMobile={this.props.isMobile}\n                setConnector={this.setConnector}\n                connectionCallback={this.closeModal}\n                size={this.props.isMobile ? 'medium' : 'large'}\n                setCustomAddress={this.setCustomAddress.bind(this)}\n              />\n            </Flex>\n            <Flex pt={3} alignItems={'center'} justifyContent={'center'}>\n              <Link textAlign={'center'} hoverColor={'blue'} onClick={ e => this.setCurrentSection(e,'new') }>I don't have a wallet</Link>\n            </Flex>\n            { TOSacceptance }\n          </ModalCard.Body>\n        </Box>\n      );\n    }\n\n    if (newToEthereum) {\n      return (\n        <React.Fragment>\n          <ModalCard.Header title={'Let\\'s create your first Ethereum wallet'} icon={'images/idle-mark.png'}></ModalCard.Header>\n          <ModalCard.Body>\n            {\n              !this.state.newToEthereumChoice ? (\n                <Flex width={1} px={[0,4]} flexDirection={'column'} justifyContent={'center'}>\n                  <Box mb={3}>\n                    <Text fontSize={[2,3]} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                      Connect with e-mail or phone number?\n                    </Text>\n                  </Box>\n                  <Flex mb={3} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                    <ImageButton\n                      buttonProps={{\n                        border:2\n                      }}\n                      caption={'Use e-mail'}\n                      imageSrc={'images/email.svg'}\n                      isMobile={this.props.isMobile}\n                      subcaption={'Powered by Portis'}\n                      handleClick={ e => this.setConnector('Portis','Portis') }\n                      imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {mb:'3px',width:'auto',height:'55px'}}\n                    />\n                    <ImageButton\n                      buttonProps={{\n                        border:2\n                      }}\n                      caption={'Use phone number'}\n                      isMobile={this.props.isMobile}\n                      imageSrc={'images/mobile.svg'}\n                      subcaption={'Powered by Fortmatic'}\n                      handleClick={ e => this.setConnector('Fortmatic','Fortmatic') }\n                      imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {mb:'3px',width:'auto',height:'55px'}}\n                    />\n                  </Flex>\n                  <Flex alignItems={'center'} justifyContent={'center'}>\n                    <Link textAlign={'center'} hoverColor={'blue'} onClick={ e => this.setCurrentSection(e,'wallet') }>I already have a wallet</Link>\n                  </Flex>\n                </Flex>\n              ) : (\n                <Box>\n                  <Text fontSize={3} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                    We are connecting you to {this.state.newToEthereumChoice} wallet provider...\n                  </Text>\n                  <Flex\n                    mt={2}\n                    justifyContent={'center'}\n                    alignItems={'center'}\n                    textAlign={'center'}>\n                    <Loader size=\"40px\" /> <Text ml={2} color={'dark-gray'}>Closing in {this.state.closeRemainingTime} seconds...</Text>\n                  </Flex>\n                </Box>\n              )\n            }\n            { TOSacceptance }\n          </ModalCard.Body>\n        </React.Fragment>\n      );\n    }\n\n    return (\n      <React.Fragment>\n        <ModalCard.Header title={'Connect to Idle'} icon={'images/idle-mark.png'}></ModalCard.Header>\n        <ModalCard.Body>\n          {\n            <Flex\n              width={1}\n              px={[0,4]}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Box mb={3}>\n                <Text\n                  fontWeight={2}\n                  fontSize={[2,3]}\n                  lineHeight={1.5}\n                  textAlign={'center'}\n                >\n                  How do you want to connect to Idle?\n                </Text>\n              </Box>\n              <Flex\n                mb={[2,3]}\n                alignItems={'center'}\n                justifyContent={'center'}\n                flexDirection={['column','row']}\n              >\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={`Ethereum wallet`}\n                  isMobile={this.props.isMobile}\n                  subcaption={'Choose your favourite'}\n                  imageSrc={'images/ethereum-wallet.svg'}\n                  handleClick={ e => this.setCurrentSection(e,'wallet') }\n                  imageProps={this.props.isMobile ? {width:'auto',height:'42px'} : {width:'auto',height:'55px',marginBottom:'5px'}}\n                />\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={`New wallet`}\n                  isMobile={this.props.isMobile}\n                  subcaption={'Use email / phone'}\n                  imageSrc={'images/new-wallet.png'}\n                  handleClick={ e => this.setCurrentSection(e,'new') }\n                  imageProps={this.props.isMobile ? {width:'auto',height:'42px'} : {width:'auto',height:'55px',marginBottom:'5px'}}\n                />\n              </Flex>\n              <Flex\n                alignItems={'center'}\n                justifyContent={'center'}\n              >\n                <Link\n                  color={'primary'}\n                  hoverColor={'primary'}\n                  onClick={ e => this.setCustomAddress(true) }\n                >\n                  Watch Ethereum Address\n                </Link>\n              </Flex>\n            </Flex>\n          }\n          { TOSacceptance }\n        </ModalCard.Body>\n      </React.Fragment>\n    );\n  }\n\n  renderFooter = () => {\n\n    if (this.state.newToEthereumChoice || (this.state.currentSection && this.state.askCustomAddress)){\n      return null;\n    }\n\n    return (\n      <ModalCard.Footer>\n        { !this.state.currentSection ? (\n            <Button\n              className={[styles.gradientButton,styles.empty]}\n              onClick={ e => this.setCurrentSection(e,'instructions') }\n              size={'medium'}\n              borderRadius={4}\n              contrastColor={'blue'}\n              fontWeight={3}\n              fontSize={[2,2]}\n              mx={'auto'}\n              px={[4,5]}\n            >\n              READ INSTRUCTIONS\n            </Button>\n          ) : (!this.state.askCustomAddress || this.state.currentSection==='instructions') && (\n            <Button\n              className={[styles.gradientButton,styles.empty]}\n              onClick={this.resetModal}\n              size={'medium'}\n              borderRadius={4}\n              contrastColor={'blue'}\n              fontWeight={3}\n              fontSize={[2,2]}\n              mx={'auto'}\n              px={[4,5]}\n            >\n              BACK\n            </Button>\n          )\n        }\n      </ModalCard.Footer>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.closeModal}>\n          {this.state.showTxFees === false ? (\n            <React.Fragment>\n              {this.renderModalContent()}\n              {this.renderFooter()}\n            </React.Fragment>\n          ) : (\n            <Box>\n              <TransactionFeeModal />\n              {this.renderFooter()}\n            </Box>\n          )}\n\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionModal;\n","import React from \"react\";\nimport {\n  Heading,\n  Text,\n  Modal,\n  Flex,\n  Box,\n  Loader\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport GeneralUtil from \"../GeneralUtil\";\n\nclass ConnectionPendingModal extends React.Component {\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2 my={3}>Connect Ethereum account</Heading.h2>\n\n        <Text my={4}>\n          Confirm the request that's just appeared. If you can't see a\n          request, open your{\" \"}\n          {GeneralUtil.hasMetaMask()\n            ? `MetaMask extension`\n            : `eth wallet settings`}\n          .\n        </Text>\n\n        <Box bg={\"#f6f6fc\"} p={3} display={[\"none\", \"block\"]}>\n          <Flex alignItems={\"center\"}>\n            <Box position={\"relative\"} width={\"4em\"}>\n              <Box>\n                <Loader size={\"3em\"} />\n              </Box>\n            </Box>\n            <Box>\n              <Text fontWeight={4}>\n                Waiting for connection confirmation...\n              </Text>\n              <Text fontWeight={2}>This won’t cost you any Ether</Text>\n            </Box>\n          </Flex>\n        </Box>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionPendingModal;\n","import React from \"react\";\nimport { Heading, Text, Flex, Button, Modal } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\n\nclass UserRejectedConnectionModal extends React.Component {\n  sendMessageAgain = event => {\n    this.props.closeModal();\n    this.props.initAccount();\n  };\n\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2 my={3}>\n          You can't continue without connecting your account\n        </Heading.h2>\n\n        <Text my={4}>\n          To use our blockchain features you need to confirm the connection\n          request.\n        </Text>\n\n        <Flex flexDirection={['column', 'row']} justifyContent={\"flex-end\"} mt={4}>\n          <Button.Outline onClick={this.props.closeModal} mr={[0, 3]} mb={[3, 0]}>\n            Cancel connection\n          </Button.Outline>\n          <Button onClick={this.sendMessageAgain}>\n            Try again\n          </Button>\n        </Flex>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default UserRejectedConnectionModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Icon,\n  Modal,\n  Flex,\n  Box,\n  Button,\n  EthAddress,\n  QR,\n  Link\n} from \"rimble-ui\";\nimport TransactionFeeModal from \"./TransactionFeeModal\";\n\nclass LowFundsModal extends React.Component {\n  state = {\n    showSecondary: false,\n    showTxFees: false\n  };\n\n  toggleQRVisible = () => {\n    this.setState({\n      showSecondary: !this.state.showSecondary\n    });\n  };\n\n  toggleShowTxFees = e => {\n    console.log(\"showTxFees\", this.state.showTxFees);\n    e.preventDefault();\n\n    this.setState({\n      showTxFees: !this.state.showTxFees\n    });\n  };\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card\n          pr={[0, 5]}\n          pl={[0, 5]}\n          pt={[\"48px\", 5]}\n          pb={[\"97px\", 4]}\n          maxWidth={\"960px\"}\n          overflow={\"hidden\"}\n          position={\"relative\"}\n        >\n          <Box position={\"relative\"}>\n            <Flex\n              justifyContent={\"flex-end\"}\n              mr={[0, -5]}\n              mt={[\"-48px\", -5]}\n              position={\"absolute\"}\n              top={\"0\"}\n              left={\"0\"}\n              right={\"0\"}\n              bg={\"white\"}\n              zIndex={\"1\"}\n            >\n              <Button.Text\n                icononly\n                icon={\"Close\"}\n                color={\"moon-gray\"}\n                onClick={this.props.closeModal}\n              />\n            </Flex>\n          </Box>\n\n          {this.state.showSecondary === false &&\n          this.state.showTxFees === false ? (\n            <Box>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start primary content */}\n\n                  <Box alignContent=\"center\" py={3}>\n                    <Heading.h2>\n                      Not enough Ether for transaction fees\n                    </Heading.h2>\n                  </Box>\n                  <Text mb={4}>\n                    This is a blockchain action so you’ll have to pay a\n                    transaction fee. A few dollars worth of Ether should be\n                    enough but fees do change based on how busy the network is.{\" \"}\n                    <strong>Fund your account and try again.</strong>{\" \"}\n                    <Link\n                      title=\"Learn about Ethereum transaction fees\"\n                      as={\"a\"}\n                      href=\"#\"\n                      onClick={this.toggleShowTxFees}\n                    >\n                      What are transaction fees?\n                    </Link>\n                  </Text>\n\n                  <Heading.h3>How to add funds</Heading.h3>\n\n                  <Flex\n                    alignItems={\"stretch\"}\n                    mx={0}\n                    mb={[4, 5]}\n                    mt={[3, 4]}\n                    flexWrap={[\"wrap\", \"no-wrap\"]}\n                  >\n                    <Box p={[1, 2]} width={[1, 1 / 2]}>\n                      <Flex\n                        flexDirection={\"column\"}\n                        justifyContent={\"space-between\"}\n                        height={\"100%\"}\n                      >\n                        <Box>\n                          <Heading.h5>Buy ETH from an exchange</Heading.h5>\n                          <Text fontSize=\"1\">\n                            You can buy ETH from exchanges like Coinbase and\n                            send it to your account. If you don’t already have\n                            a Coinbase account, it can take a while to get set\n                            up.\n                          </Text>\n                        </Box>\n\n                        <Button.Outline my={3}>\n                          <Flex alignItems={\"center\"}>\n                            <Icon name=\"OpenInNew\" mr={2} />\n                            Go to CoinBase\n                          </Flex>\n                        </Button.Outline>\n                      </Flex>\n                    </Box>\n                    <Box p={[1, 2]} width={[1, 1 / 2]}>\n                      <Flex\n                        flexDirection={\"column\"}\n                        justifyContent={\"space-between\"}\n                        height={\"100%\"}\n                      >\n                        <Box>\n                          <Heading.h5>\n                            Send ETH from another account\n                          </Heading.h5>\n                          <Text fontSize=\"1\">\n                            If you have ETH in another Ethereum account, you\n                            can send it to this account using your public\n                            Ethereum address or QR code.\n                          </Text>\n                        </Box>\n                        <Button.Outline my={3} onClick={this.toggleQRVisible}>\n                          <Flex alignItems={\"center\"}>\n                            <Icon name=\"FilterCenterFocus\" mr={2} />\n                            Show account QR code\n                          </Flex>\n                        </Button.Outline>\n                      </Flex>\n                    </Box>\n                  </Flex>\n                  {/* End primary content */}\n                </Box>\n              </Box>\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start primary footer */}\n                <Flex borderTop={1} borderColor={\"#eee\"} />\n                <Flex pt={4} justifyContent={[\"center\", \"flex-end\"]}>\n                  <Button onClick={this.props.closeModal} width={[1, \"auto\"]}>\n                    Back to Idle\n                  </Button>\n                </Flex>\n                {/* End primary footer */}\n              </Box>\n            </Box>\n          ) : null}\n\n          {this.state.showSecondary ? (\n            <Box mb={3}>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start secondary content */}\n                  <Flex my={3} justifyContent={\"center\"}>\n                    <QR\n                      size={130}\n                      value={\n                        this.props.account ? this.props.account : \"1234512345\"\n                      }\n                    />\n                  </Flex>\n\n                  <EthAddress my={4} address={this.props.account} />\n                  <Flex mb={3} />\n                  {/* End secondary content */}\n                </Box>\n              </Box>\n\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start secondary footer */}\n                <Flex borderTop={1} borderColor={\"#eee\"} />\n                <Flex mt={4} justifyContent={[\"center\", \"flex-end\"]}>\n                  <Button.Outline\n                    width={[1, \"auto\"]}\n                    onClick={this.toggleQRVisible}\n                  >\n                    Go back\n                  </Button.Outline>\n                </Flex>\n                {/* End secondary footer */}\n              </Box>\n            </Box>\n          ) : null}\n\n          {this.state.showTxFees ? (\n            <Box mb={3}>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start tx fee content */}\n                  <TransactionFeeModal />\n                  {/* End tx fee content */}\n                </Box>\n              </Box>\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start primary footer */}\n                <Flex\n                  pt={4}\n                  justifyContent={[\"center\", \"flex-end\"]}\n                  borderTop={1}\n                  borderColor={\"#eee\"}\n                >\n                  <Button.Outline\n                    width={[1, \"auto\"]}\n                    onClick={this.toggleShowTxFees}\n                  >\n                    Go Back\n                  </Button.Outline>\n                </Flex>\n                {/* End primary footer */}\n              </Box>\n            </Box>\n          ) : null}\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default LowFundsModal;\n","import React from \"react\";\n\nimport NoWeb3BrowserModal from \"./components/NoWeb3BrowserModal\";\nimport NoWalletModal from \"./components/NoWalletModal\";\nimport WrongNetworkModal from \"./components/WrongNetworkModal\";\n\nimport ConnectionModal from \"./components/ConnectionModal\";\nimport ConnectionPendingModal from \"./components/ConnectionPendingModal\";\nimport UserRejectedConnectionModal from \"./components/UserRejectedConnectionModal\";\n\nimport LowFundsModal from \"./components/LowFundsModal\";\n\nclass ConnectionModalUtil extends React.Component {\n  render() {\n    return (\n      <div>\n        <NoWeb3BrowserModal\n          closeModal={this.props.modals.methods.closeNoWeb3BrowserModal}\n          isOpen={this.props.modals.data.noWeb3BrowserModalIsOpen}\n          transaction={this.props.transaction}\n        />\n\n        <NoWalletModal\n          closeModal={this.props.modals.methods.closeNoWalletModal}\n          isOpen={this.props.modals.data.noWalletModalIsOpen}\n          transaction={this.props.transaction}\n        />\n\n        <WrongNetworkModal\n          closeModal={this.props.modals.methods.closeWrongNetworkModal}\n          isOpen={this.props.modals.data.wrongNetworkModalIsOpen}\n          network={this.props.network}\n        />\n\n        <ConnectionModal\n          {...this.props}\n          isMobile={this.props.isMobile}\n          setConnector={this.props.setConnector}\n          currentNetwork={this.props.network.current}\n          validateAccount={this.props.validateAccount}\n          closeModal={this.props.modals.methods.closeConnectionModal}\n          isOpen={ this.props.modals.data.connectionModalIsOpen && !this.props.accountValidated }\n        />\n\n        <ConnectionPendingModal\n          closeModal={this.props.modals.methods.closeConnectionPendingModal}\n          isOpen={this.props.modals.data.accountConnectionPending}\n          currentNetwork={this.props.network.current}\n        />\n        <UserRejectedConnectionModal\n          closeModal={\n            this.props.modals.methods.closeUserRejectedConnectionModal\n          }\n          isOpen={this.props.modals.data.userRejectedConnect}\n          initAccount={this.props.initAccount}\n        />\n\n        <LowFundsModal\n          closeModal={this.props.modals.methods.closeLowFundsModal}\n          isOpen={this.props.modals.data.lowFundsModalIsOpen}\n          currentNetwork={this.props.network.current}\n          account={this.props.account}\n        />\n      </div>\n    );\n  }\n}\n\nexport default ConnectionModalUtil;\n","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Flex,\n  Button\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass ConnectionErrorModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  async closeModal(e){\n    e.preventDefault();\n    // Disconnect to Infura only if the wallet is not logged\n    if (!this.props.account){\n      await this.props.context.setFirstValidConnector(['Infura']);\n      this.props.setConnector('Infura',null);\n    }\n    this.props.modals.methods.closeConnectionErrorModal();\n  }\n\n  render() {\n\n    const walletProvider = this.functionsUtil.getWalletProvider();\n    const isLedger = (walletProvider && walletProvider.toLowerCase() === 'ledger') || (typeof this.props.modals.data.connectionError === 'string' && this.props.modals.data.connectionError.toLowerCase().includes('ledger'));\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={ e => this.closeModal(e) }>\n          <ModalCard.Header title={ isLedger ? 'Ledger Error' : `Connection Error` } icon={'images/warning.svg'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={1} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text.p color={'dark-gray'} textAlign={'center'}>\n                The following error occured while trying to connect with your { isLedger ? 'Ledger' : 'account' }:<br />\n                <Text.span color={'red'} fontWeight={3}>\"{this.props.modals.data.connectionError}\"</Text.span><br />\n                {\n                  isLedger ? (\n                    <Text.span>\n                      Make sure that your Ledger is <strong>connected</strong> and <strong>unlocked</strong>. Also check that both <strong>Contract data</strong> and <strong>Browser support</strong> are enabled in the Ledger settings.<br />\n\n                    </Text.span>\n                  ) : 'Make sure that your wallet is unlocked and try again.'\n                }\n              </Text.p>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ async (e) => { await this.closeModal(e); } }\n              >\n              GOT IT\n              </Button>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionErrorModal;","import React from \"react\";\nimport {\n  Text,\n  Link,\n  Flex,\n  Modal,\n  Button\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass TransactionErrorModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  async closeModal(e){\n    e.preventDefault();\n    this.props.modals.methods.closeTransactionErrorModal();\n  }\n\n  render() {\n\n    const isLedgerError = typeof this.props.modals.data.transactionError === 'string' && this.props.modals.data.transactionError.toLowerCase().includes('ledger');\n    const isSlowTxError = typeof this.props.modals.data.transactionError === 'string' && this.props.modals.data.transactionError.toLowerCase().includes('not mined within 50 blocks');\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={ e => this.closeModal(e) }>\n          <ModalCard.Header title={ 'Transaction Error' } icon={'images/warning.svg'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={1} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text.p color={'dark-gray'} textAlign={'center'}>\n                The following error occured while trying to send a transaction:<br />\n                <Text.span color={'red'} fontWeight={3}>\"{this.props.modals.data.transactionError}\"</Text.span><br />\n                {\n                  isLedgerError ? (\n                    <Text.span\n                      fontSize={1}\n                    >\n                      <br />Make sure that your Ledger is <strong>connected</strong> and <strong>unlocked</strong>. Also check that both <strong>Contract data</strong> and <strong>Browser support</strong> are enabled in the Ledger settings.<br />\n                      We also suggest you to connect your Ledger with Metamask, read the <Link fontSize={1} color={'blue'} hoverColor={'blue'} target={'_blank'} rel={\"nofollow noopener noreferrer\"} href={'https://metamask.zendesk.com/hc/en-us/articles/360020394612-How-to-connect-a-Trezor-or-Ledger-Hardware-Wallet'}>instructions here</Link>.\n                    </Text.span>\n                  ) : isSlowTxError ? 'This could happen when the gas price is low, check the transaction status with your Wallet.' : 'Make sure that your have enough funds in your wallet.'\n                }\n              </Text.p>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ async (e) => { await this.closeModal(e); } }\n              >\n              GOT IT\n              </Button>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default TransactionErrorModal;","import Web3 from \"web3\";\nimport React from 'react';\nimport BigNumber from 'bignumber.js';\nimport SimpleID from 'simpleid-js-sdk';\nimport NetworkUtil from \"./NetworkUtil\";\nimport { Biconomy } from \"@biconomy/mexa\";\nimport * as Sentry from '@sentry/browser';\nimport FunctionsUtil from './FunctionsUtil';\nimport globalConfigs from '../configs/globalConfigs';\nimport ConnectionModalUtil from \"./ConnectionModalsUtil\";\nimport detectEthereumProvider from '@metamask/detect-provider';\nimport ConnectionErrorModal from './components/ConnectionErrorModal';\nimport TransactionErrorModal from './components/TransactionErrorModal';\n\nrequire('dotenv').config();\nconst INFURA_KEY = process.env[\"REACT_APP_INFURA_KEY\"];\n\nconst RimbleTransactionContext = React.createContext({\n  web3: {},\n  account: {},\n  biconomy: {},\n  simpleID: {},\n  contracts: [],\n  web3Infura: {},\n  tokenConfig: {},\n  transactions: {},\n  permitClient: {},\n  accountBalance: {},\n  initWeb3: () => {},\n  accountValidated: {},\n  initAccount: () => {},\n  accountBalanceLow: {},\n  initSimpleID: () => {},\n  initContract: () => {},\n  erc20ForwarderClient: {},\n  accountBalanceToken: {},\n  checkPreflight: () => {},\n  validateAccount: () => {},\n  network: {\n    current: {},\n    required: {},\n    checkNetwork: () => {},\n    isCorrectNetwork: null,\n  },\n  accountInizialized: false,\n  getTokenDecimals: () => {},\n  rejectValidation: () => {},\n  getAccountBalance: () => {},\n  contractsInitialized: false,\n  accountValidationPending: {},\n  initializeContracts: () => {},\n  rejectAccountConnect: () => {},\n  enableUnderlyingWithdraw: false,\n  connectAndValidateAccount: () => {},\n  modals: {\n    data: {\n      connectionError: {},\n      lowFundsModalIsOpen: {},\n      noWalletModalIsOpen: {},\n      userRejectedConnect: {},\n      connectionModalIsOpen: {},\n      userRejectedValidation: {},\n      wrongNetworkModalIsOpen: {},\n      accountValidationPending: {},\n      accountConnectionPending: {},\n      noWeb3BrowserModalIsOpen: {},\n      transactionConnectionModalIsOpen: {},\n    },\n    methods: {\n      openLowFundsModal: () => {},\n      closeLowFundsModal: () => {},\n      openWrongNetworkModal: () => {},\n      closeWrongNetworkModal: () => {},\n      openNoWeb3BrowserModal: () => {},\n      closeNoWeb3BrowserModal: () => {},\n      openConnectionErrorModal: () => {},\n      closeConnectionErrorModal: () => {},\n      openTransactionErrorModal: () => {},\n      closeTransactionErrorModal: () => {},\n      openConnectionPendingModal: () => {},\n      closeConnectionPendingModal: () => {},\n      openUserRejectedConnectionModal: () => {},\n      openUserRejectedValidationModal: () => {},\n      closeUserRejectedConnectionModal: () => {},\n      closeUserRejectedValidationModal: () => {},\n    }\n  },\n  transaction: {\n    data: {\n      transactions: {}\n    },\n    meta: {},\n    methods: {}\n  }\n});\n\nlet setConnectorName = null;\nlet biconomyLoginProcessing = false;\n\nclass RimbleTransaction extends React.Component {\n  static Consumer = RimbleTransactionContext.Consumer;\n\n  componentUnmounted = false;\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    const props = Object.assign({},this.props);\n    props.contracts = this.state.contracts;\n    if (this.functionsUtil){\n      props.account = this.state.account;\n      this.functionsUtil.setProps(props);\n    } else {\n      props.account = this.state.account;\n      this.functionsUtil = new FunctionsUtil(props);\n    }\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n    this.checkNetwork();\n\n    // detect Network account change\n    if (window.ethereum){\n      window.ethereum.on('networkChanged', async (networkId) => {\n        await this.props.clearCachedData(() => {\n          this.checkNetwork();\n        });\n      });\n    }\n\n    window.initWeb3 = this.initWeb3;\n  }\n\n  componentDidMount = async () => {\n    this.initSimpleID();\n\n    // this.functionsUtil.customLog('RimbleWeb3 componentDidMount');\n    this.initWeb3();\n\n    this.connectGnosisSafe();\n\n    // TEST - Manually triggers transaction error\n    // this.openTransactionErrorModal(null,'Your Ledger device is Ineligible');\n\n    window.testTransaction = (method) => {\n      const transaction = this.createTransaction();\n      transaction.method = method;\n      this.addTransaction(transaction);\n      return transaction;\n    }\n\n    window.updateTransaction = (transaction,hash,status,params) => {\n      // Add meta data to transaction\n      transaction.status = status;\n      transaction.params = params;\n      transaction.type = \"contract\";\n      transaction.created = Date.now();\n      transaction.transactionHash = hash;\n\n      // console.log('window.updateTransaction',transaction);\n\n      this.updateTransaction(transaction);\n      return transaction;\n    }\n  }\n\n  connectGnosisSafe = () => {\n    const gnosisSafeLoaded = this.props.connectors.gnosis.safeLoaded;\n    if (gnosisSafeLoaded){\n      const walletProvider = this.functionsUtil.getWalletProvider();\n      const isGnosisSafe = this.props.connectors.gnosis.safeLoaded && !!this.props.connectors.gnosis.provider.safe;\n      // console.log('isGnosisSafe',this.props.connectors.gnosis.provider.safe,isGnosisSafe);\n      if (isGnosisSafe){\n        this.props.setConnector('gnosis','gnosis');\n      } else if (walletProvider === 'gnosis') {\n        this.props.setConnector('Infura',null);\n      }\n    }\n  }\n\n  componentDidUpdate = async (prevProps, prevState) => {\n\n    this.loadUtils();\n\n    // this.functionsUtil.customLog('componentDidUpdate',prevProps.connectorName,this.props.connectorName,this.props.context.connectorName,this.props.context.active,(this.props.context.error ? this.props.context.error.message : null));\n\n    const gnosisSafeLoaded = !this.state.gnosisSafeLoaded && this.props.connectors.gnosis.safeLoaded;\n    // console.log('gnosisSafeLoaded',this.state.gnosisSafeLoaded,this.props.connectors.gnosis.safeLoaded,gnosisSafeLoaded);\n    if (gnosisSafeLoaded){\n      this.setState({\n        gnosisSafeLoaded:true\n      },() => {\n        this.connectGnosisSafe();\n      });\n    }\n\n    if (prevProps.connectorName !== this.props.connectorName && this.props.connectorName){\n      this.initWeb3();\n    } else if ( prevProps.context !== this.props.context ){\n      if (this.props.context.error instanceof Error && this.props.context.error.message.length){\n        const errorMessage = this.props.context.error.message;\n        const isWalletConnectClosedModalError = (errorMessage === 'User closed WalletConnect modal' || errorMessage === 'User closed modal');\n        // this.functionsUtil.customLog('componentDidUpdate',setConnectorName,errorMessage);\n        if (setConnectorName === 'WalletConnect' && isWalletConnectClosedModalError){\n          // this.functionsUtil.customLog('WalletConnect disconnected! Set Infura connector');\n          this.props.setConnector('Infura',null);\n          // this.functionsUtil.removeStoredItem('walletProvider');\n          // this.functionsUtil.removeStoredItem('connectorName');\n          // this.functionsUtil.setLocalStorage('context',JSON.stringify({active:this.props.context.active,connectorName:'Infura'}));\n          setConnectorName = null;\n          // await this.props.context.setConnector('Infura');\n        } else if (!isWalletConnectClosedModalError) {\n          this.openConnectionErrorModal(null,errorMessage);\n        } else {\n          this.initWeb3();\n        }\n      // WalletConnect double trigger initWeb3\n      } else if (this.props.context.active && this.props.context.connectorName!=='WalletConnect' && this.props.connectorName==='WalletConnect') {\n        this.initWeb3();\n      }\n    } else if ( (this.props.context.connectorName && this.props.context.connectorName !== this.props.connectorName) || prevProps.customAddress !== this.props.customAddress){\n      this.initWeb3();\n    }\n\n    const customAddressChanged = prevProps.customAddress !== this.props.customAddress;\n    if (customAddressChanged){\n      this.initAccount();\n    }\n\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    // const availableTokensChanged = prevProps.availableTokens && this.props.availableTokens && JSON.stringify(Object.keys(prevProps.availableTokens)) !== JSON.stringify(Object.keys(this.props.availableTokens));\n    const availableStrategiesChanged = prevProps.availableStrategies && this.props.availableStrategies && JSON.stringify(Object.keys(prevProps.availableStrategies)) !== JSON.stringify(Object.keys(this.props.availableStrategies));\n\n    // Reset tokenDecimals if token is changed\n    if (tokenChanged){\n      this.setState({\n        tokenDecimals: null\n      });\n    }\n\n    // this.functionsUtil.customLog(prevProps.enableUnderlyingWithdraw,this.props.enableUnderlyingWithdraw,this.state.enableUnderlyingWithdraw);\n    if (prevProps.enableUnderlyingWithdraw !== this.props.enableUnderlyingWithdraw){\n      this.setState({\n        enableUnderlyingWithdraw:this.props.enableUnderlyingWithdraw\n      });\n    }\n\n    if (localStorage){\n      const context = JSON.parse(localStorage.getItem('context'));\n      if (!context || (this.props.context.active !== context.active || this.props.context.connectorName !== context.connectorName)){\n        this.functionsUtil.setLocalStorage('context',JSON.stringify({active:this.props.context.active,connectorName:this.props.context.connectorName}));\n      }\n    }\n\n    if (tokenChanged || availableStrategiesChanged){\n      await this.initializeContracts();\n    }\n\n    const networkChanged = JSON.stringify(prevState.network) !== JSON.stringify(this.state.network);\n    // console.log('networkChanged',JSON.stringify(prevState.network),JSON.stringify(this.state.network),networkChanged);\n    if (networkChanged){\n      this.setState({\n        contracts:[],\n        contractsInitialized:false\n      }, () => {\n        this.initWeb3();\n        if (typeof this.props.setNetwork === 'function'){\n          this.props.setNetwork(this.state.network);\n        }\n      });\n    }\n  }\n\n  // Initialize a web3 provider\n  initWeb3 = async (connectorName=null) => {\n\n    // Detect ethereum provider\n    const metamaskProvider = await detectEthereumProvider();\n    if (metamaskProvider && (!window.ethereum || window.ethereum !== metamaskProvider)){\n      window.ethereum = metamaskProvider;\n    }\n\n    const context = this.props.context;\n    const networkId = this.state.network.current.id || this.state.network.required.id;\n\n    if (!networkId){\n      return false;\n    }\n\n    // console.log('initWeb3',this.state.network.current.id,this.state.network.required.id,networkId);\n\n    const web3Infura = new Web3(new Web3.providers.HttpProvider(globalConfigs.network.providers.infura[networkId]+INFURA_KEY));\n\n    let web3 = context.library;\n\n    // 0x Instant Wallet Provider Injection\n    if (!window.RimbleWeb3_context || context.connectorName !== window.RimbleWeb3_context.connectorName){\n      window.RimbleWeb3_context = context;\n    }\n\n    // Reset setConnectorName if force connectorName\n    if (connectorName){\n      setConnectorName = null;\n    } else {\n      connectorName = this.props.connectorName;\n    }\n\n    // const last_context = localStorage ? JSON.parse(localStorage.getItem('context')) : null;\n\n    // this.functionsUtil.customLog('initWeb3',context.active,connectorName,context.connectorName,context.connector,(web3 && web3.currentProvider ? web3.currentProvider.disable : null),(context.connector ? context.connector.disable : null));\n    if (context && connectorName === 'Infura' && connectorName !== context.connectorName){\n      if (web3 && typeof web3.currentProvider.disable === 'function'){\n        web3.currentProvider.disable();\n      } else if (context.connector && typeof context.connector.disable === 'function'){\n        context.connector.disable();\n      }\n      web3 = null;\n      setConnectorName = null;\n    }\n\n    const connectorNameChanged = (context.connectorName && context.connectorName !== connectorName) || (connectorName !== 'Infura' && connectorName !== setConnectorName);\n\n    // this.functionsUtil.customLog('initWeb3',context.active,connectorNameChanged,context.connectorName,connectorName,setConnectorName);\n\n    if (!context.active || connectorNameChanged) {\n      // Select preferred web3 provider\n      if (connectorName && connectorNameChanged){\n\n        if (connectorName === 'gnosis' && !this.state.gnosisSafeLoaded){\n          return false;\n        }\n\n        // this.functionsUtil.customLog('initWeb3 set connector',connectorName);\n        setConnectorName = connectorName;\n        await context.setConnector(connectorName);\n        // await context.setFirstValidConnector([connectorName, 'Infura']);\n        return web3;\n      }\n      /*\n      else if (setConnectorName){\n        // Catch WalletConnect unexpected disconnect and fallback to Infura\n        if (connectorName === 'WalletConnect' && connectorName === setConnectorName && last_context && last_context.active && last_context.connectorName==='WalletConnect' && !context.connectorName){\n          this.functionsUtil.customLog('WalletConnect disconnected! Set Infura connector');\n          this.props.setConnector('Infura',null);\n          this.functionsUtil.removeStoredItem('walletProvider');\n          this.functionsUtil.removeStoredItem('connectorName');\n          this.functionsUtil.setLocalStorage('context',JSON.stringify({active:context.active,connectorName:context.connectorName}));\n          setConnectorName = null;\n          await context.setConnector('Infura');\n          if (context.connector && typeof context.connector.disable === 'function'){\n            await context.connector.disable();\n          }\n        }\n\n        this.functionsUtil.customLog('initWeb3 skip due to setConnectorName ('+setConnectorName+') already set');\n        return web3;\n      }\n      */\n    }\n    /* else if (context.connectorName === \"WalletConnect\") {\n      if (!context.account) {\n\n        // WalletConnect already opened\n        if (document.getElementById('walletconnect-wrapper')){\n          return web3;\n        }\n\n        WalletConnectQRCodeModal.open(\n          context.connector.walletConnector.uri,\n          async () => {\n            document.getElementById('walletconnect-wrapper').remove();\n            this.props.setConnector('Infura',null);\n            await context.setConnector('Infura');\n            setConnectorName = null;\n          }\n        );\n      } else {\n        try {\n          WalletConnectQRCodeModal.close();\n        } catch {}\n      }\n    // Reset web3 if Infura\n    } */\n    /*\n    else if (context.active && (connectorName === 'Infura' || context.connectorName === \"Infura\")){\n      if (typeof web3.currentProvider.disable === 'function'){\n        await web3.currentProvider.disable();\n      } else if (context.connector && typeof context.connector.disable === 'function'){\n        await context.connector.disable();\n      }\n      web3 = null;\n      setConnectorName = null;\n    }\n    */\n\n    let web3Host = null;\n    let web3Provider = null;\n\n    if (!web3) { // safety web3 implementation\n      if (window.ethereum) {\n        this.functionsUtil.customLog(\"Using modern web3 provider.\");\n        web3Provider = window.ethereum;\n      } else if (window.web3) {\n        this.functionsUtil.customLog(\"Legacy web3 provider. Try updating.\");\n        web3Provider = window.web3;\n      } else {\n        this.functionsUtil.customLog(\"Non-Ethereum browser detected. Using Infura fallback.\");\n        web3Host = globalConfigs.network.providers.infura[networkId]+INFURA_KEY;\n      }\n    } else {\n      web3Provider = web3.currentProvider;\n    }\n\n    let forceCallback = false;\n\n    if ((!connectorName || connectorName === 'Infura') && web3Provider && typeof web3Provider.enable === 'function'){\n      try {\n        await web3Provider.enable();\n      } catch (connectionError){\n        web3Provider = null;\n        web3Host = globalConfigs.network.providers.infura[networkId]+INFURA_KEY;\n        forceCallback = true;\n      }\n    }\n\n    // Injected web3 provider\n    if (web3Provider){\n      web3 = new Web3(web3Provider);\n    // Infura\n    } else if (web3Host) {\n      web3 = new Web3(new Web3.providers.HttpProvider(web3Host));\n      if (connectorName !== 'Infura'){\n        this.props.setConnector('Infura',null);\n      }\n    }\n\n    const web3Callback = async () => {\n\n      window.web3Injected = this.state.web3;\n      // window.web3InfuraInjected = this.state.web3Infura;\n\n      if (typeof this.props.callbackAfterLogin === 'function'){\n        this.props.callbackAfterLogin();\n        this.props.setCallbackAfterLogin(null);\n      }\n\n      // After setting the web3 provider, check network\n      try {\n        await this.checkNetwork();\n        if (this.state.network.isCorrectNetwork){\n\n          if (!this.state.contractsInitialized){\n            await this.initializeContracts();\n          }\n\n          if (context.account){\n            // Login with biconomy\n            if (this.state.biconomy){\n              const biconomy = this.state.biconomy;\n              const biconomyInfo = globalConfigs.network.providers.biconomy;\n              if (biconomyInfo.enableLogin && !biconomy.isLogin && !biconomyLoginProcessing){\n                biconomyLoginProcessing = true;\n                biconomy.login(context.account, (error, response) => {\n                  // this.functionsUtil.customLog('biconomy login',error,response);\n                  // Failed to login with Biconomy\n                  if (error) {\n                    return this.setState({\n                      biconomy:false,\n                    },() => {\n                      this.initAccount(context.account);\n                    });\n                  }\n\n                  biconomyLoginProcessing = false;\n\n                  if (response.transactionHash) {\n                    this.initAccount(context.account);\n                  } else if(response.userContract) {\n                    this.initAccount(context.account);\n                  }\n                });\n                return false;\n              }\n            }\n\n            await this.initAccount(context.account);\n          } else {\n            await this.setState({\n              accountInizialized: true,\n              account: this.props.customAddress\n            });\n          }\n        }\n      // Initialize Infura Web3 and display error\n      } catch (error) {\n        this.openConnectionErrorModal(null,error.message);\n      }\n    }\n\n    // Save original web3 connector in case Mexa initialization fails\n    const originalWeb3 = web3;\n    const biconomyInfo = globalConfigs.network.providers.biconomy;\n    const walletProvider = this.functionsUtil.getWalletProvider();\n\n    if (connectorName !== 'Infura' && biconomyInfo && biconomyInfo.enabled && biconomyInfo.supportedNetworks.includes(networkId) && (!walletProvider || !biconomyInfo.disabledWallets.includes(walletProvider.toLowerCase()))){\n\n      if (this.state.biconomy === null){\n        const biconomyWeb3Provider = web3Provider ? web3Provider : web3Host;\n\n        const biconomy = new Biconomy(biconomyWeb3Provider,biconomyInfo.params);\n\n        if (biconomy && typeof biconomy.onEvent === 'function'){\n          web3 = new Web3(biconomy);\n          biconomy.onEvent(biconomy.READY, () => {\n            if (this.componentUnmounted || this.state.biconomy === false || this.state.biconomy === biconomy){\n              return false;\n            }\n            \n            const permitClient = biconomy.permitClient;\n            const erc20ForwarderClient = biconomy.erc20ForwarderClient;\n\n            const newState = {\n              web3,\n              biconomy,\n              web3Infura,\n              permitClient,\n              erc20ForwarderClient\n            };\n            // console.log('biconomy',newState);\n\n            if (web3 !== this.state.web3){\n              this.setState(newState, web3Callback);\n            }\n          }).onEvent(biconomy.ERROR, (error, message) => {\n            // console.error('Biconomy error',error,message,this.state.biconomy);\n            web3 = originalWeb3;\n            // Handle error while initializing mexa\n            if (this.state.biconomy !== false){\n              this.setState({\n                web3,\n                web3Infura,\n                biconomy:false\n              }, web3Callback);\n            }\n          });\n        } else {\n          this.setState({\n            web3,\n            web3Infura,\n            biconomy:false\n          }, web3Callback);\n        }\n      }\n    } else {\n      if (web3 !== this.state.web3){\n        this.setState({\n          web3,\n          web3Infura,\n        }, web3Callback);\n      } else if (context.account || forceCallback){\n        web3Callback();\n      }\n    }\n\n    return web3;\n  }\n\n  initContract = async (name, address, abi, useInfuraProvider=false) => {\n    this.functionsUtil.customLog(`Init contract: ${name}`);\n    return await this.createContract(name, address, abi, useInfuraProvider);\n  }\n\n  createContract = async (name, address, abi, useInfuraProvider=false) => {\n    this.functionsUtil.customLog(`creating contract ${name} - addr: ${address}`);\n\n    const web3Provider = useInfuraProvider && this.state.web3Infura ? this.state.web3Infura : this.state.web3;\n\n    if (!web3Provider){\n      return null;\n    }\n\n    // Create contract on initialized web3 provider with given abi and address\n    try {\n      const contract = new web3Provider.eth.Contract(abi, address);\n      this.setState(state => ({\n        ...state,\n        contracts: [...state.contracts, {name, contract}]\n      }));\n      return {name, contract};\n    } catch (error) {\n      this.functionsUtil.customLogError(\"Could not create contract.\",name,address,error);\n    }\n\n    return null;\n  }\n\n  initSimpleID = () => {\n\n    if (this.state.simpleID){\n      return this.state.simpleID;\n    }\n\n    const simpleIDInfo = globalConfigs.network.providers.simpleID;\n    let simpleID = null;\n    const networkId = this.state.network.current.id || this.state.network.required.id;\n\n    if (simpleIDInfo && simpleIDInfo.enabled && simpleIDInfo.supportedNetworks.indexOf(networkId) !== -1 ){\n      const simpleIDParams = simpleIDInfo.params;\n      simpleIDParams.network = simpleIDInfo.getNetwork(this.state.network.current.id,globalConfigs.network.availableNetworks);\n      simpleID = new SimpleID(simpleIDParams);\n    }\n\n    window.simpleID = simpleID;\n\n    this.setState({\n      simpleID\n    });\n\n    return simpleID;\n  }\n\n  initAccount = async (account=false) => {\n    \n    const customAddress = this.props.customAddress;\n    const walletProvider = this.functionsUtil.getWalletProvider('Infura');\n\n    if (customAddress){\n      // Set custom account\n      this.setState({\n        account:customAddress,\n        accountInizialized:true,\n      });\n\n      // After account is complete, get the balance\n      this.getAccountBalance();\n\n      return false;\n    }\n\n    try {\n      if (!account){\n        const wallets = await this.state.web3.eth.getAccounts();\n        if (wallets && wallets.length){\n          account = wallets[0];\n        }\n      }\n\n      if (!account || this.state.account === account){\n        this.setState({\n          accountInizialized: true\n        });\n        return false;\n      }\n\n      // Request account access if needed\n      if (account && walletProvider !== 'Infura'){\n\n        if (walletProvider === 'Infura'){\n          this.setState({\n            accountInizialized: true,\n            account:this.props.customAddress\n          });\n          return false;\n        }\n\n        // Send address info to SimpleID\n        const simpleID = this.initSimpleID();\n\n        if (simpleID){\n\n          const notifications = await simpleID.notifications();\n\n          if (notifications && notifications.length && window.$crisp){\n\n            let shownNotifications = [];\n            if (localStorage){\n              shownNotifications = localStorage.getItem('shownNotifications') && JSON.parse(localStorage.getItem('shownNotifications')) ? JSON.parse(localStorage.getItem('shownNotifications')) : [];\n            }\n\n            notifications.forEach((n,i) => {\n\n              const notificationId = n.name;\n\n              // Show notification if not shown already\n              if (shownNotifications.indexOf(notificationId) === -1){\n                window.$crisp.push([\"do\", \"message:show\", [\"text\", this.functionsUtil.normalizeSimpleIDNotification(n.content) ]]);\n\n                // Save notification id\n                shownNotifications.push(notificationId);\n              }\n            });\n\n            // Store shown notification\n            if (localStorage){\n              this.functionsUtil.setLocalStorage('shownNotifications',JSON.stringify(shownNotifications));\n            }\n          }\n        }\n\n        // Send Google Analytics connection event\n        this.functionsUtil.sendGoogleAnalyticsEvent({\n          eventCategory: 'Connect',\n          eventAction: 'connected',\n          eventLabel: walletProvider\n        });\n\n        /*\n        // Unsubscribes to all subscriptions\n        if (this.state.web3SocketProvider && typeof this.state.web3SocketProvider.clearSubscriptions === 'function'){\n          this.functionsUtil.customLog('Clear all web3SocketProvider subscriptions');\n          this.state.web3SocketProvider.clearSubscriptions();\n        }\n\n        const networkName = globalConfigs.network.availableNetworks[globalConfigs.network.requiredNetwork].toLowerCase();\n        const web3SocketProvider = new Web3(new Web3.providers.WebsocketProvider(`wss://${networkName}.infura.io/ws/v3/${INFURA_KEY}`));\n\n        // Subscribe to logs\n        const addressTopic = '0x00000000000000000000000'+account.toLowerCase().replace('x','');\n\n        // Subscribe for payment methods\n        const paymentProviders = Object.keys(globalConfigs.payments.providers).filter((providerName,i) => { const providerInfo = globalConfigs.payments.providers[providerName]; return providerInfo.enabled && providerInfo.web3Subscription && providerInfo.web3Subscription.enabled  })\n        if (paymentProviders && paymentProviders.length){\n          paymentProviders.forEach((providerName,i) => {\n            const providerInfo = globalConfigs.payments.providers[providerName];\n\n            this.functionsUtil.customLog(`Subscribe to ${providerName} logs`);\n\n            // Subscribe for deposit transactions\n            web3SocketProvider.eth.subscribe('logs', {\n                address: [account,providerInfo.web3Subscription.contractAddress],\n                topics: [null,[addressTopic]]\n            }, function(error, result){\n              \n            })\n            .on(\"data\", async (log) => {\n              this.functionsUtil.customLog(providerName,'logs',log);\n\n              if (log){\n                const txHash = log.transactionHash;\n                const subscribedTransactions = this.state.subscribedTransactions;\n                const walletAddressFound = log.topics.filter((addr,i) => { return addr.toLowerCase().includes(addressTopic); });\n\n                this.functionsUtil.customLog(providerName,txHash,walletAddressFound);\n\n                if (!subscribedTransactions[txHash] && walletAddressFound.length){\n                  const decodedLogs = web3SocketProvider.eth.abi.decodeLog(providerInfo.web3Subscription.decodeLogsData,log.data,log.topics);\n\n                  this.functionsUtil.customLog(providerName,txHash,decodedLogs);\n\n                  if (decodedLogs && decodedLogs._tokenAmount && decodedLogs._tokenAddress && decodedLogs._tokenAddress.toLowerCase() === this.props.tokenConfig.address.toLowerCase()){\n\n                    const receiptCallback = async (tx,decodedLogs) => {\n                      const tokenDecimals = await this.getTokenDecimals();\n                      const tokenAmount = this.functionsUtil.BNify(decodedLogs._tokenAmount);\n                      const tokenAmountFixed = this.functionsUtil.fixTokenDecimals(tokenAmount,tokenDecimals);\n                      const tokenAmountFormatted = parseFloat(tokenAmountFixed.toString()).toFixed(2);\n                      const isProviderTx = tx.from.toLowerCase() === account.toLowerCase() && tx.to.toLowerCase() === providerInfo.web3Subscription.contractAddress.toLowerCase();\n\n                      if (isProviderTx){\n\n                        // Mined\n                        if (tx.blockNumber && tx.status){\n                          // Toast message\n                          window.showToastMessage({\n                            variant:'success',\n                            message:'Deposit completed',\n                            secondaryMessage:`${providerName} sent you ${tokenAmountFormatted} ${this.props.selectedToken}`,\n                          });\n\n                          // Update User Balance\n                          this.getAccountBalance(tokenAmount);\n                        } else {\n                          // Toast message\n                          window.showToastMessage({\n                            variant:'processing',\n                            message:'Deposit pending',\n                            secondaryMessage:`${providerName} is sending ${tokenAmountFormatted} ${this.props.selectedToken}`,\n                          });\n                        }\n                      }\n                    }\n\n                    let checkTransactionReceiptTimeoutID = null;\n\n                    const checkTransactionReceipt = (txHash,decodedLogs) => {\n                      if (checkTransactionReceiptTimeoutID){\n                        window.clearTimeout(checkTransactionReceiptTimeoutID);\n                      }\n                      web3SocketProvider.eth.getTransactionReceipt(txHash,(err,txReceipt)=>{\n                        if (!err){\n                          if (txReceipt){\n                            receiptCallback(txReceipt,decodedLogs);\n                          } else{\n                            checkTransactionReceiptTimeoutID = window.setTimeout(() => { checkTransactionReceipt(txHash,decodedLogs) },3000);\n                          }\n                        }\n                      });\n                    }\n\n                    checkTransactionReceipt(txHash,decodedLogs);\n\n                    subscribedTransactions[txHash] = log;\n                    this.setState({subscribedTransactions});\n                  }\n                }\n              }\n            });\n          })\n        }\n\n        // Subscribe for deposit transactions\n        web3SocketProvider.eth.subscribe('logs', {\n            address: [account,this.props.tokenConfig.address],\n            topics: [null,null,[addressTopic]]\n        }, function(error, result){\n\n        })\n        .on(\"data\", async (log) => {\n          if (log){\n            const txHash = log.transactionHash;\n            const subscribedTransactions = this.state.subscribedTransactions;\n            const walletAddressFound = log.topics.filter((addr,i) => { return addr.toLowerCase().includes(addressTopic); });\n\n            if (!subscribedTransactions[txHash] && walletAddressFound.length){\n              const decodedLogs = web3SocketProvider.eth.abi.decodeLog([\n                {\n                  \"internalType\": \"uint256\",\n                  \"name\": \"_tokenAmount\",\n                  \"type\": \"uint256\"\n                },\n              ],log.data,log.topics);\n\n              if (decodedLogs && decodedLogs._tokenAmount){\n\n                const receiptCallback = async (tx,decodedLogs) => {\n                  const tokenDecimals = await this.getTokenDecimals();\n                  const tokenAmount = this.functionsUtil.BNify(decodedLogs._tokenAmount);\n                  const tokenAmountFixed = this.functionsUtil.fixTokenDecimals(tokenAmount,tokenDecimals);\n                  const tokenAmountFormatted = parseFloat(tokenAmountFixed.toString()).toFixed(2);\n                  const isDepositTokenTx = tx.to.toLowerCase() === this.props.tokenConfig.address.toLowerCase();\n\n                  if (isDepositTokenTx){\n\n                    // Mined\n                    if (tx.blockNumber && tx.status){\n                      // Toast message\n                      window.showToastMessage({\n                        message:'Deposit completed',\n                        secondaryMessage: `${tokenAmountFormatted} ${this.props.selectedToken} has been deposited`,\n                        variant: \"success\",\n                      });\n\n                      // Update User Balance\n                      this.getAccountBalance(tokenAmount);\n                    } else {\n                      // Toast message\n                      window.showToastMessage({\n                        message:'Deposit pending',\n                        secondaryMessage: `${tokenAmountFormatted} ${this.props.selectedToken} are on the way`,\n                        variant: \"processing\",\n                      });\n                    }\n                  }\n                }\n\n                let checkTransactionReceiptTimeoutID = null;\n\n                const checkTransactionReceipt = (txHash,decodedLogs) => {\n                  if (checkTransactionReceiptTimeoutID){\n                    window.clearTimeout(checkTransactionReceiptTimeoutID);\n                  }\n                  web3SocketProvider.eth.getTransactionReceipt(txHash,(err,txReceipt)=>{\n                    if (!err){\n                      if (txReceipt){\n                        receiptCallback(txReceipt,decodedLogs);\n                      } else{\n                        checkTransactionReceiptTimeoutID = window.setTimeout(() => { checkTransactionReceipt(txHash,decodedLogs) },3000);\n                      }\n                    }\n                  });\n                }\n\n                checkTransactionReceipt(txHash,decodedLogs);\n\n                subscribedTransactions[txHash] = log;\n                this.setState({subscribedTransactions});\n              }\n            }\n          }\n        })\n        .on(\"changed\", log => {\n          \n        });\n        */\n\n        // this.functionsUtil.customLog('initAccount',account);\n\n        // Set custom account\n        this.setState({\n          account,\n          // web3SocketProvider,\n          accountInizialized: true\n        });\n\n        // After account is complete, get the balance\n        this.getAccountBalance();\n\n        // TODO subscribe for account changes, no polling\n        // set a state flag which indicates if the subscribe handler has been\n        // called at least once\n      }\n    } catch (error) {\n\n      this.setState({\n        accountInizialized: true\n      });\n\n      // User denied account access...\n      this.functionsUtil.customLog(\"User cancelled connect request. Error:\", error);\n\n      // this.functionsUtil.customLog(error);\n\n      // Catch ledger error\n      if (error && error.message && error.message.includes('MULTIPLE_OPEN_CONNECTIONS_DISALLOWED')) {\n        return;\n      }\n\n      // Send Sentry connection error\n      const isError = error instanceof Error;\n      if (this.functionsUtil.checkUrlOrigin() && isError){\n        Sentry.captureException(error);\n      }\n\n      // Reject Connect\n      // this.rejectAccountConnect(error);\n    }\n  }\n\n  // TODO: Can this be moved/combined?\n  rejectAccountConnect = error => {\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    modals.data.userRejectedConnect = true;\n    this.setState({ modals });\n  }\n\n  getAccountBalance = async (increaseAmount) => {\n\n    increaseAmount = increaseAmount ? this.functionsUtil.BNify(increaseAmount) : null;\n\n    try {\n\n      let [accountBalance,accountBalanceToken,tokenDecimals] = await Promise.all([\n        this.state.web3.eth.getBalance(this.state.account), // Get ETH balance\n        this.getTokenBalance(this.state.account), // Get token balance\n        this.getTokenDecimals()\n      ]);\n\n      if (accountBalance) {\n\n        // Convert to wei if decimals found\n        if (accountBalance.toString().includes('.')){\n          accountBalance = this.state.web3.utils.toWei(accountBalance);\n        }\n\n        // Convert to Eth amount\n        accountBalance = this.state.web3.utils.fromWei(\n          accountBalance,\n          'ether'\n        );\n\n        accountBalance = this.functionsUtil.BNify(accountBalance).toString();\n\n        this.setState({\n          accountBalance\n        });\n\n        this.functionsUtil.customLog(\"account balance: \", accountBalance);\n      }\n\n      // this.functionsUtil.customLog('accountBalance',res,(accountBalanceToken ? accountBalanceToken.toString() : null),tokenDecimals,increaseAmount);\n\n      if (accountBalanceToken) {\n\n        accountBalanceToken = this.functionsUtil.BNify(accountBalanceToken);\n\n        // Increase balance amount if passed and balance didn't change\n        if (increaseAmount && this.state.accountBalanceToken && this.functionsUtil.normalizeTokenAmount(this.state.accountBalanceToken,tokenDecimals).toString() === accountBalanceToken.toString()){\n          accountBalanceToken = accountBalanceToken.plus(increaseAmount);\n        }\n        \n        accountBalanceToken = this.functionsUtil.fixTokenDecimals(accountBalanceToken,tokenDecimals).toString();\n\n        // this.functionsUtil.customLog('increaseAmount',(increaseAmount ? increaseAmount.toString() : '0'),(this.state.accountBalanceToken ? this.state.accountBalanceToken.toString() : '0'),(accountBalanceToken ? accountBalanceToken.toString() : 'ERROR'));\n        // this.functionsUtil.customLog(`account balance ${this.props.selectedToken}: `, accountBalanceToken);\n\n        this.setState({\n          accountBalanceToken,\n          [`accountBalance${this.props.selectedToken}`]:accountBalanceToken\n        });\n\n      } else {\n        this.functionsUtil.customLog('accountBalanceToken is not set:',accountBalanceToken);\n      }\n    } catch (error) {\n      this.functionsUtil.customLogError(\"Failed to get account balance.\", error);\n    }\n  }\n\n  initializeContracts = async () => {\n\n    const contracts = this.functionsUtil.getGlobalConfig(['contracts']);\n    await this.functionsUtil.asyncForEach(Object.keys(contracts),async (contractName) => {\n      const contractInfo = contracts[contractName];\n      if (contractInfo.address !== null && contractInfo.abi !== null){\n        this.functionsUtil.customLog('initializeContracts, init contract', contractName, contractInfo.address);\n        await this.initContract(contractName, contractInfo.address, contractInfo.abi);\n      }\n    });\n\n    const govTokens = this.functionsUtil.getGlobalConfig(['govTokens']);\n    await this.functionsUtil.asyncForEach(Object.keys(govTokens),async (token) => {\n      const govTokenConfig = govTokens[token];\n      if (!govTokenConfig.enabled){\n        return;\n      }\n      // Initialize govToken contracts\n      let foundGovTokenContract = this.state.contracts.find(c => c.name === token);\n      if (!foundGovTokenContract) {\n        this.functionsUtil.customLog('initializeContracts, init contract', token, govTokenConfig.address);\n        await this.initContract(token, govTokenConfig.address, govTokenConfig.abi);\n      }\n    });\n\n    if (this.props.availableStrategies){\n      // Initialize Tokens Contracts\n      await this.functionsUtil.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n        \n        const availableTokens = this.props.availableStrategies[strategy];\n\n        await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n          const tokenConfig = availableTokens[token];\n\n          let foundTokenContract = this.state.contracts.find(c => c.name === token);\n          if (!foundTokenContract) {\n            this.functionsUtil.customLog('initializeContracts, init contract',token, tokenConfig.address);\n            await this.initContract(token, tokenConfig.address, tokenConfig.abi);\n          }\n\n          // Initialize idleTokens contracts\n          let foundIdleTokenContract = this.state.contracts.find(c => c.name === tokenConfig.idle.token);\n          if (!foundIdleTokenContract) {\n            this.functionsUtil.customLog('initializeContracts, init contract',tokenConfig.idle.token, tokenConfig.idle.address);\n            await this.initContract(tokenConfig.idle.token, tokenConfig.idle.address, tokenConfig.idle.abi);\n          }\n\n          // Initialize protocols contracts\n          tokenConfig.protocols.forEach(async (p,i) => {\n            let foundProtocolContract = this.state.contracts.find(c => c.name === p.token);\n            if (!foundProtocolContract) {\n              this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n              await this.initContract(p.token, p.address, p.abi);\n            }\n          });\n\n          // Check migration contract\n          if (tokenConfig.migration){\n\n            if (tokenConfig.migration.oldContract){\n              const oldContract = tokenConfig.migration.oldContract;\n              this.functionsUtil.customLog('initializeContracts, init '+oldContract.name+' contract',oldContract);\n              await this.initContract(oldContract.name, oldContract.address, oldContract.abi);\n            }\n\n            // Initialize protocols contracts\n            if (tokenConfig.migration.oldProtocols){\n              tokenConfig.migration.oldProtocols.forEach(async (p,i) => {\n                let foundProtocolContract = this.state.contracts.find(c => c.name === p.token);\n                if (!foundProtocolContract) {\n                  this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n                  await this.initContract(p.token, p.address, p.abi);\n                }\n              });\n            }\n\n            if (tokenConfig.migration.migrationContract){\n              const migrationContract = tokenConfig.migration.migrationContract;\n              this.functionsUtil.customLog('initializeContracts, init '+migrationContract.name+' contract',migrationContract);\n              await this.initContract(migrationContract.name, migrationContract.address, migrationContract.abi);\n            }\n          }\n        })\n      });\n    }\n\n    return this.setState({\n      contractsInitialized:true\n    });\n  }\n\n  getContractByName = async (contractName) => {\n    let contract = this.state.contracts.find(c => c.name === contractName);\n\n    if (!contract && this.props.tokenConfig) {\n      const tokenConfig = this.props.tokenConfig;\n      contract = await this.initContract(contractName, tokenConfig.address, tokenConfig.abi);\n    }\n\n    return contract ? contract.contract : null;\n  }\n\n  getTokenDecimals = async () => {\n    let tokenDecimals = null;\n\n    if (!this.state.tokenDecimals){\n\n      tokenDecimals = await this.functionsUtil.getTokenDecimals(this.props.selectedToken);\n\n      this.setState({\n        tokenDecimals\n      });\n    } else {\n      tokenDecimals = await (new Promise( async (resolve, reject) => {\n        resolve(this.state.tokenDecimals);\n      }));\n    }\n\n    return tokenDecimals;\n  }\n\n  getTokenBalance = async (account) => {\n    const contract = await this.getContractByName(this.props.selectedToken);\n\n    if (!contract) {\n      this.functionsUtil.customLogError('Wrong contract name', this.props.selectedToken);\n      return null;\n    }\n\n    if (!contract.methods['balanceOf']){\n      this.customLogError('Wrong method name balanceOf');\n      return null;\n    }\n\n    return await contract.methods.balanceOf(account).call().catch(error => {\n      this.functionsUtil.customLog(`Failed to get ${this.props.selectedToken} balance`, error);\n    });\n  }\n\n  determineAccountLowBalance = () => {\n    // If provided a minimum from config then use it, else default to 1\n    const accountBalanceMinimum =\n      typeof this.props.config !== \"undefined\" &&\n      typeof this.props.config.accountBalanceMinimum !== \"undefined\"\n        ? this.props.config.accountBalanceMinimum\n        : 1;\n    // Determine if the account balance is low\n    const accountBalanceLow =\n      this.state.accountBalance < accountBalanceMinimum;\n\n    this.setState({\n      accountBalanceLow\n    });\n  }\n\n  connectAndValidateAccount = async (callbackAfterLogin) => {\n    // Check for account\n    if (!this.state.account) {\n      this.props.setCallbackAfterLogin(callbackAfterLogin);\n      // Show modal to connect account\n      this.openConnectionModal();\n    }\n  }\n\n  getRequiredNetwork = () => {\n\n    const networkId =\n      typeof this.props.config !== \"undefined\" &&\n      typeof this.props.config.requiredNetwork !== \"undefined\"\n        ? this.props.config.requiredNetwork\n        : globalConfigs.network.requiredNetwork;\n\n    let networkName = globalConfigs.network.availableNetworks[networkId] ? globalConfigs.network.availableNetworks[networkId] : 'unknown';\n\n    let requiredNetwork = {\n      name: networkName,\n      id: networkId\n    };\n\n    let network = Object.assign({},this.state.network);\n    network.required = requiredNetwork;\n\n    this.setState({ network });\n  }\n\n  getNetworkId = async () => {\n    try {\n      return this.state.web3.eth.net.getId((error, networkId) => {\n        let current = { ...this.state.network.current };\n        current.id = networkId;\n        let network = Object.assign({},this.state.network);\n        network.current = current;\n        network.isCorrectNetwork = globalConfigs.network.enabledNetworks.includes(networkId);\n        this.setState({ network });\n      });\n    } catch (error) {\n      this.functionsUtil.customLog(\"Could not get network ID: \", error);\n    }\n  }\n\n  getNetworkName = async () => {\n    try {\n      return this.state.web3.eth.net.getNetworkType((error, networkName) => {\n        let current = { ...this.state.network.current };\n        current.name = networkName;\n        let network = Object.assign({},this.state.network);\n        network.current = current;\n        this.setState({ network });\n      });\n    } catch (error) {\n      this.functionsUtil.customLog(\"Could not get network Name: \", error);\n    }\n  }\n\n  checkNetwork = async () => {\n    this.getRequiredNetwork();\n\n    await Promise.all([\n      this.getNetworkId(),\n      this.getNetworkName()\n    ]);\n\n    let network = Object.assign({},this.state.network);\n    network.isCorrectNetwork = !this.state.network.current.id || globalConfigs.network.enabledNetworks.includes(this.state.network.current.id);\n    // console.log('checkNetwork',this.state.network.current.id,network.isCorrectNetwork);\n\n    this.setState({ network });\n  }\n\n  contractMethodSendWrapper = async (contractName, contractMethod, params = [], value = null, callback = null, callback_receipt = null, gasLimit = null, txData = null) => {\n    // Is it on the correct network?\n    if (!this.state.network.isCorrectNetwork) {\n      // wrong network modal\n      this.state.modals.methods.openWrongNetworkModal();\n      return false;\n    }\n\n    // Is a wallet connected and verified?\n    if (!this.state.account) {\n      this.openConnectionModal();\n      if (typeof callback === 'function') {\n        callback(null,'account_not_connected');\n      }\n      return false;\n    }\n\n    // Are there a minimum amount of funds?\n    if (this.state.accountBalanceLow) {\n      this.openLowFundsModal();\n      if (typeof callback === 'function') {\n        callback(null,'account_balance_low');\n      }\n      return false;\n    }\n\n    // Is the contract loaded?\n\n    // Create new tx and add to collection\n    // Maybe this needs to get moved out of the wrapper?\n    let transaction = this.createTransaction(txData);\n    transaction.method = contractMethod;\n\n    this.addTransaction(transaction);\n\n    // Add meta data to transaction\n    transaction.type = \"contract\";\n    transaction.status = \"started\";\n    transaction.params = params;\n\n    // Show toast for starting transaction\n    this.updateTransaction(transaction);\n\n    const { account, contracts } = this.state;\n    let contract = contracts.find(c => c.name === contractName);\n    if (!contract) {\n      if (typeof callback === 'function') {\n        callback(null,'contract_not_found');\n      }\n      return this.functionsUtil.customLog(`No contract with name ${contractName}`);\n    }\n\n    contract = contract.contract;\n\n    // Does the method exists?\n    // if (typeof contract.methods[contractMethod] === 'undefined'){\n    //   return false;\n    // }\n\n    let manualConfirmationTimeoutId = null;\n\n    try {\n\n      if (!value){\n        value = this.functionsUtil.BNify(0);\n      }\n\n      this.functionsUtil.customLog('contractMethodSendWrapper',contractName,contract._address,account,contractMethod,params,(value ? { from: account, value } : { from: account }));\n\n      // estimate gas price\n      let gas = await contract.methods[contractMethod](...params)\n        .estimateGas(value ? { from: account, value } : { from: account })\n        .catch(e => console.error(e));\n\n      if (gas) {\n\n        gas = this.functionsUtil.BNify(gas);\n        gas = gas.plus(gas.times(this.functionsUtil.BNify('0.2'))); // Increase 20% of enstimation\n\n        // Check if gas is under the gasLimit param\n        if (gasLimit && gas.lt(this.functionsUtil.BNify(gasLimit))){\n          gas = this.functionsUtil.BNify(gasLimit);\n        }\n\n        // Convert gasLimit toBN with web3 utils\n        gas = this.state.web3.utils.toBN(gas.integerValue(BigNumber.ROUND_FLOOR));\n      }\n\n      const confirmationCallback = (confirmationNumber, receipt) => {\n\n        // this.functionsUtil.customLog('confirmationCallback', confirmationNumber, receipt);\n\n        if (manualConfirmationTimeoutId){\n          window.clearTimeout(manualConfirmationTimeoutId);\n        }\n\n        // this.functionsUtil.customLog('txOnConfirmation', receipt);\n        // Update confirmation count on each subsequent confirmation that's received\n        transaction.confirmationCount += 1;\n\n        const call_callback = !globalConfigs.network.isForked && typeof callback === 'function' && transaction.confirmationCount===1;\n\n        // How many confirmations should be received before informing the user\n        const confidenceThreshold = this.props.config.requiredConfirmations || 1;\n\n        if (transaction.confirmationCount === 1) {\n          // Initial confirmation receipt\n          transaction.status = \"confirmed\";\n        } else if (transaction.confirmationCount < confidenceThreshold) {\n          // Not enough confirmations to match threshold\n        }\n\n        if (transaction.confirmationCount === confidenceThreshold) {\n          // Confirmations match threshold\n          // Check the status from result since we are confident in the result\n          if (receipt.status) {\n            transaction.status = \"success\";\n          } else if (!receipt.status) {\n            transaction.status = \"error\";\n          }\n        } else if (transaction.confirmationCount > confidenceThreshold) {\n          // Confidence threshold met\n        }\n\n\n        if (call_callback){\n          // Update transaction with receipt details\n          if (receipt){\n            transaction.txReceipt = receipt;\n          }\n          transaction.recentEvent = \"confirmation\";\n          this.updateTransaction(transaction);\n          \n          callback(transaction);\n\n          this.functionsUtil.customLog('Confirmed', confirmationNumber, receipt, transaction);\n        }\n      };\n\n      const manualConfirmation = (transactionHash,timeout) => {\n        if (!transactionHash){\n          return false;\n        }\n        this.state.web3.eth.getTransactionReceipt(transactionHash,(err,txReceipt) => {\n          if (txReceipt && txReceipt.status){\n            this.functionsUtil.customLog('Tx manualConfirmation', txReceipt);\n            confirmationCallback(1,txReceipt);\n          } else {\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(transactionHash,timeout) , timeout);\n          }\n        });\n      };\n\n      const receiptCallback = receipt => {\n\n        // this.functionsUtil.customLog('txOnReceipt', receipt);\n\n        if (manualConfirmationTimeoutId){\n          window.clearTimeout(manualConfirmationTimeoutId);\n        }\n\n        // Received receipt, met total number of confirmations\n        if (receipt){\n          transaction.txReceipt = receipt;\n        }\n        transaction.recentEvent = \"receipt\";\n\n        // If the network is forked use the receipt for confirmation\n        if (globalConfigs.network.isForked){\n          transaction.status = \"success\";\n          if (typeof callback === 'function') {\n            callback(transaction);\n          }\n        } else {\n          this.updateTransaction(transaction);\n\n          // Transaction mined, wait for manual confirmation\n          if (receipt.status){\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(receipt.transactionHash,4000), 2000);\n          }\n        }\n      };\n\n      // const networkId = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n      // const common = { customChain:{ chainId: 1337, networkId: 1337 } };\n\n      return contract.methods[contractMethod](...params)\n        .send(value ? { from: account, value, gas/*, common*/ } : { from: account, gas/*, common*/ })\n        .on(\"transactionHash\", hash => {\n          this.functionsUtil.customLog('txOnTransactionHash', hash);\n\n          if (!hash){\n            this.functionsUtil.customLog('Skip transactionHash due to hash empty', hash);\n            return false;\n          }\n\n          transaction.transactionHash = hash;\n          transaction.status = \"pending\";\n          transaction.recentEvent = \"transactionHash\";\n          this.updateTransaction(transaction);\n\n          if (callback_receipt){\n            callback_receipt(transaction);\n          }\n\n          // Wait for manual confirmation only for mobile\n          if (this.props.isMobile){\n            if (manualConfirmationTimeoutId){\n              window.clearTimeout(manualConfirmationTimeoutId);\n            }\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(hash,60000), 20000);\n          }\n        })\n        .on(\"receipt\", receiptCallback)\n        .on(\"confirmation\", confirmationCallback)\n        .on(\"error\", error => {\n\n          console.log('Tx error',error);\n          \n          const isDeniedTx = error && error.message && typeof error.message.includes === 'function' ? error.message.includes('User denied transaction signature') : false;\n          \n          // Set error on transaction\n          transaction.status = \"error\";\n          transaction.recentEvent = \"error\";\n          this.updateTransaction(transaction);\n\n\n          // Show ToastProvider\n          if (!isDeniedTx){\n            window.toastProvider.addMessage(\"Something went wrong\", {\n              icon: 'Block',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"failure\",\n              colorTheme: 'light',\n              secondaryMessage: \"Please retry\",\n            });\n\n            const isError = error instanceof Error;\n\n            if (typeof error.message !== 'undefined'){\n              this.openTransactionErrorModal(null,error.message);\n            } else if (this.functionsUtil.checkUrlOrigin() && isError){\n              Sentry.captureException(error);\n            }\n          }\n\n          if (typeof callback === 'function') {\n            callback(transaction,error);\n          }\n        });\n    } catch (error) {\n\n      console.log('Tx catch error',error);\n\n      transaction.status = \"error\";\n      this.updateTransaction(transaction);\n\n      // TODO: should this be a custom error? What is the error here?\n      // TODO: determine how to handle error messages globally\n      window.toastProvider.addMessage(\"Something went really wrong, we are sorry\", {\n        icon: 'Block',\n        actionHref: \"\",\n        actionText: \"\",\n        variant: \"failure\",\n        colorTheme: 'light',\n        secondaryMessage: \"Try refreshing the page :(\",\n      });\n\n      const isDeniedTx = error && error.message ? error.message.includes('User denied transaction signature') : false;\n\n      const isError = error instanceof Error;\n      if ( this.functionsUtil.checkUrlOrigin() && isError && !isDeniedTx){\n        Sentry.captureException(error);\n      }\n\n      if (typeof callback === 'function') {\n        // this.functionsUtil.customLog('Tx Failed',error,transaction,typeof callback);\n        callback(transaction,error);\n      }\n\n      return false;\n    }\n  }\n\n  // Create tx\n  createTransaction = (txData=null) => {\n    let transaction = {\n      ...txData\n    };\n    transaction.txReceipt = {};\n    transaction.created = Date.now();\n    transaction.confirmationCount = 0;\n    transaction.status = \"initialized\";\n    transaction.lastUpdated = Date.now();\n    transaction.token = this.props.selectedToken;\n    transaction.strategy = this.props.selectedStrategy;\n    transaction.networkId = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    return transaction;\n  }\n\n  addTransaction = transaction => {\n    const transactions = { ...this.state.transactions };\n    transactions[`tx${transaction.created}`] = transaction;\n    this.setState({ transactions });\n  }\n\n  // Add/update transaction in state\n  updateTransaction = updatedTransaction => {\n    const transactions = { ...this.state.transactions };\n    const transaction = { ...updatedTransaction };\n    transaction.lastUpdated = Date.now();\n    transactions[`tx${updatedTransaction.created}`] = transaction;\n    this.setState({ transactions });\n\n    // Save transactions in localStorage only if pending or succeeded\n    // console.log('updateTransaction',transaction);\n    if (transaction.transactionHash){\n      // Clear cached data\n      this.functionsUtil.clearCachedData();\n\n      // Store transaction\n      this.functionsUtil.addStoredTransaction(`tx${transaction.created}`,transaction);\n    }\n\n    return transaction;\n  }\n\n  // CONNECTION MODAL METHODS\n  closeConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionModalIsOpen = false;\n    // this.functionsUtil.customLog(\"this.state\", this.state);\n    this.setState({ modals });\n  }\n\n  openConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionModalIsOpen = true;\n    this.setState({ modals: modals });\n  }\n\n  closeConnectionPendingModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    this.setState({ modals });\n  }\n\n  openConnectionPendingModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = true;\n    modals.data.transactionConnectionModalIsOpen = false;\n    modals.data.connectionModalIsOpen = false;\n\n    this.setState({ modals });\n  }\n\n  closeTransactionErrorModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.transactionError = false;\n    this.setState({ modals });\n  }\n\n  openTransactionErrorModal = (e,error) => {\n    if (typeof e !== \"undefined\" && e) {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.transactionError = error;\n\n    this.setState({ modals });\n  }\n\n  closeConnectionErrorModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n\n    if (!this.state.modals.data.connectionError){\n      return false;\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionError = false;\n    this.setState({ modals });\n  }\n\n  openConnectionErrorModal = (e,error) => {\n    if (typeof e !== \"undefined\" && e) {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n\n    // Handle generic error\n    if (error==='[object Object]'){\n      error = 'Unable to access to the wallet.'\n    }\n    \n    if (this.state.modals.data.connectionError !== error){\n      // console.log('openConnectionErrorModal',typeof error,typeof error === 'object' ? JSON.stringify(error) : error);\n      modals.data.connectionError = error;\n      this.setState({ modals });\n    }\n  }\n\n  closeUserRejectedConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedConnect = false;\n    this.setState({ modals });\n  }\n\n  openUserRejectedConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedConnect = true;\n    this.setState({ modals });\n  }\n\n  closeNoWeb3BrowserModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWeb3BrowserModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openNoWeb3BrowserModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWeb3BrowserModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeNoWalletModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openNoWalletModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeWrongNetworkModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.wrongNetworkModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openWrongNetworkModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.wrongNetworkModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeLowFundsModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.lowFundsModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openLowFundsModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.lowFundsModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  state = {\n    web3: null,\n    context:null,\n    account: null,\n    contracts: [],\n    biconomy: null,\n    simpleID: null,\n    web3Infura:null,\n    transactions: {},\n    CrispClient: null,\n    permitClient:null,\n    tokenDecimals:null,\n    accountBalance: null,\n    web3Subscription: null,\n    accountValidated: null,\n    gnosisSafeLoaded:false,\n    accountBalanceDAI: null,\n    initWeb3: this.initWeb3,\n    accountBalanceLow: null,\n    accountInizialized:false,\n    erc20ForwarderClient:null,\n    subscribedTransactions:{},\n    contractsInitialized:false,\n    initAccount: this.initAccount,\n    accountValidationPending: null,\n    initSimpleID: this.initSimpleID,\n    initContract: this.initContract,\n    checkPreflight: this.checkPreflight,\n    validateAccount: this.validateAccount,\n    rejectValidation: this.rejectValidation,\n    getTokenDecimals: this.getTokenDecimals,\n    getAccountBalance: this.getAccountBalance,\n    initializeContracts: this.initializeContracts,\n    rejectAccountConnect: this.rejectAccountConnect,\n    contractMethodSendWrapper: this.contractMethodSendWrapper,\n    connectAndValidateAccount: this.connectAndValidateAccount,\n    enableUnderlyingWithdraw: this.props.enableUnderlyingWithdraw,\n    network: {\n      current: {},\n      required: {},\n      isCorrectNetwork: null,\n      checkNetwork: this.checkNetwork\n    },\n    modals: {\n      data: {\n        connectionError: null,\n        lowFundsModalIsOpen: null,\n        userRejectedConnect: null,\n        connectionModalIsOpen: null,\n        userRejectedValidation: null,\n        wrongNetworkModalIsOpen: null,\n        accountConnectionPending: null,\n        accountValidationPending: null,\n        transactionConnectionModalIsOpen: null,\n        noWalletModalIsOpen: this.noWalletModalIsOpen,\n        noWeb3BrowserModalIsOpen: this.noWeb3BrowserModalIsOpen,\n      },\n      methods: {\n        openLowFundsModal: this.openLowFundsModal,\n        openNoWalletModal: this.openNoWalletModal,\n        closeNoWalletModal: this.closeNoWalletModal,\n        closeLowFundsModal: this.closeLowFundsModal,\n        openConnectionModal: this.openConnectionModal,\n        closeConnectionModal: this.closeConnectionModal,\n        openWrongNetworkModal: this.openWrongNetworkModal,\n        closeWrongNetworkModal: this.closeWrongNetworkModal,\n        openNoWeb3BrowserModal: this.openNoWeb3BrowserModal,\n        closeNoWeb3BrowserModal: this.closeNoWeb3BrowserModal,\n        openConnectionErrorModal: this.openConnectionErrorModal,\n        closeConnectionErrorModal: this.closeConnectionErrorModal,\n        openTransactionErrorModal: this.openTransactionErrorModal,\n        closeTransactionErrorModal: this.closeTransactionErrorModal,\n        openConnectionPendingModal: this.openConnectionPendingModal,\n        closeConnectionPendingModal: this.closeConnectionPendingModal,\n        openUserRejectedValidationModal: this.openUserRejectedValidationModal,\n        openUserRejectedConnectionModal: this.openUserRejectedConnectionModal,\n        closeUserRejectedValidationModal: this.closeUserRejectedValidationModal,\n        closeUserRejectedConnectionModal: this.closeUserRejectedConnectionModal,\n      }\n    },\n    transaction: {\n      data: {\n        transactions: null\n      },\n      meta: {},\n      methods: {}\n    }\n  }\n\n  render() {\n    const connectionErrorModalOpened = typeof this.state.modals.data.connectionError === 'string' && this.state.modals.data.connectionError.length>0;\n    const transactionErrorModalOpened = typeof this.state.modals.data.transactionError === 'string' && this.state.modals.data.transactionError.length>0;\n    return (\n      <div>\n        <RimbleTransactionContext.Provider\n          {...this.props}\n          value={this.state}\n        />\n        <ConnectionModalUtil\n          {...this.props}\n          modals={this.state.modals}\n          network={this.state.network}\n          account={this.state.account}\n          isMobile={this.props.isMobile}\n          initAccount={this.state.initAccount}\n          setConnector={this.props.setConnector}\n          validateAccount={this.state.validateAccount}\n          accountValidated={this.state.accountValidated}\n          accountConnectionPending={this.state.accountConnectionPending}\n          accountValidationPending={this.state.accountValidationPending}\n        />\n        <TransactionErrorModal\n          modals={this.state.modals}\n          account={this.state.account}\n          context={this.props.context}\n          isOpen={transactionErrorModalOpened}\n        />\n        <ConnectionErrorModal\n          modals={this.state.modals}\n          account={this.state.account}\n          context={this.props.context}\n          isOpen={connectionErrorModalOpened}\n          setConnector={this.props.setConnector}\n        />\n        <NetworkUtil\n          web3={this.state.web3}\n          theme={this.props.theme}\n          network={this.state.network}\n        />\n      </div>\n    );\n  }\n}\n\nexport default RimbleTransaction;\n","import React from \"react\";\nimport ExtLink from '../../ExtLink/ExtLink';\nimport FunctionsUtil from '../FunctionsUtil';\nimport { Box, Flex, Image, Text, Link, Icon } from \"rimble-ui\";\n\nimport {\n  Link as RouterLink\n} from \"react-router-dom\";\n\nclass Header extends React.Component {\n  state = {\n\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidMount() {\n\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n\n    this.loadUtils();\n\n    if (this.props.network && !this.props.network.isCorrectNetwork){\n      return false;\n    }\n  }\n\n  render() {\n\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n\n    return (\n      <Box\n        style={{\n          left: '0',\n          right: '0',\n          zIndex: 99,\n          position: 'absolute',\n        }}\n      >\n        <Flex\n          p={2}\n          alignItems={'center'}\n          justifyContent={'center'}\n          backgroundColor={'dark-blue'}\n          flexDirection={['column','row']}\n        >\n          <Text\n            color={'white'}\n            textAlign={'center'}\n          >\n            IDLE Governance Token is now live!\n          </Text>\n          <ExtLink\n            pr={2}\n            py={1}\n            mt={[1,0]}\n            ml={[0,2]}\n            pl={'12px'}\n            color={'white'}\n            style={{\n              display:'flex',\n              borderRadius:'8px',\n              flexDirection:'row',\n              alignItems:'flex-end'\n            }}\n            backgroundColor={'#0037ff'}\n            href={'https://idlefinance.medium.com/idle-governance-is-live-9b55e8f407d7'}\n          >\n            Read More\n            <Icon\n              ml={1}\n              size={'1.3em'}\n              color={'white'}\n              name={'KeyboardArrowRight'}\n            >\n            </Icon>\n          </ExtLink>\n        </Flex>\n        <Flex\n          pt={[3,4]}\n          mx={'auto'}\n          bg={\"transparent\"}\n          width={['98%','100%']}\n          maxWidth={['100%','100em']}\n          alignItems={['center','flex-start']}\n        >\n          <Flex\n            ml={[3, 5]}\n            width={[0.5, 3/12]}\n          >\n            <RouterLink\n              to=\"/\"\n            >\n              <Image\n                position={'relative'}\n                src={'images/logo.svg'}\n                height={['35px','48px']}\n              />\n            </RouterLink>\n          </Flex>\n            <Flex\n              width={[0.5,8/12]}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={\"flex-end\"}\n            >\n              {\n                governanceEnabled && \n                  <Link\n                    mr={4}\n                    fontSize={3}\n                    color={'white'}\n                    hoverColor={'white'}\n                    fontFamily={'sansSerif'}\n                    textAlign={['center','left']}\n                    onClick={ (e) => window.location.hash='#/governance' }\n                  >\n                    Governance\n                  </Link>\n              }\n              {\n                !this.props.isMobile &&\n                  <>\n                    <Link\n                      mr={4}\n                      fontSize={3}\n                      color={'white'}\n                      hoverColor={'white'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                      onClick={(e) => {this.functionsUtil.scrollTo(document.getElementById('contacts').offsetTop,300)}}\n                    >\n                      Contact Us\n                    </Link>\n                    <Link\n                      fontSize={3}\n                      color={'white'}\n                      hoverColor={'white'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                      onClick={(e) => {this.functionsUtil.scrollTo(document.getElementById('faq').offsetTop,300)}}\n                    >\n                      FAQs\n                    </Link>\n                  </>\n              }\n            </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default Header;\n","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nexport default function ScrollToTop() {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return null;\n}","import Footer from '../Footer/Footer';\nimport React, { Component } from 'react';\nimport styles from './PageNotFound.module.scss';\nimport { Box, Flex, Heading, Button } from 'rimble-ui'\nimport Header_styles from '../utilities/components/Header.module.scss';\nimport {\n  Link as RouterLink,\n} from \"react-router-dom\";\n\nclass PageNotFound extends Component {\n  state = {};\n\n  render() {\n    return (\n      <Box>\n        <Box className={styles.headerContainer} px={[3,6]} pt={['2em', '3em']}>\n          <Box className={styles.headerBgFiller}></Box>\n          <Box position={'relative'} zIndex={10}>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"60em\"]} mx={'auto'} textAlign={'center'} pt={['8vh', '8vh']}>\n              <Heading.h1 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.3em'} fontSize={['2.5em',7]} textAlign={'center'} color={'white'}>\n                This page doesn't exist!\n              </Heading.h1>\n              <Heading.h3 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.6em'} fontWeight={2} fontSize={['1.5em',4]} textAlign={'center'} color={'white'}>\n                Sorry, the page you are looking for cannot be found.\n              </Heading.h3>\n              <RouterLink to=\"/\" style={{textDecoration:'none'}}>\n                <Button\n                  className={Header_styles.gradientButton}\n                  borderRadius={4}\n                  size={this.props.isMobile ? 'medium' : 'medium'}\n                  mainColor={'blue'}\n                  contrastColor={'white'}\n                  fontWeight={3}\n                  fontSize={[2,2]}\n                  mx={'auto'}\n                  px={[4,5]}\n                  mt={2}\n                >\n                  GO TO HOMEPAGE\n                </Button>\n              </RouterLink>\n            </Flex>\n          </Box>\n        </Box>\n        <Footer />\n      </Box>\n    );\n  }\n}\n\nexport default PageNotFound;\n","import React from \"react\";\nimport { Box, Flex, Text } from \"rimble-ui\";\n\nclass NetworkOverview extends React.Component {\n  getNetworkCircleColor = () => {\n    let circleColor = \"#333\";\n    if (this.props.network) {\n      switch (this.props.network.id) {\n        case 1:\n          circleColor = \"#56b3ae\";\n          break;\n        case 2:\n          circleColor = \"#000\";\n          break;\n        case 3:\n          circleColor = \"#ed5a8d\";\n          break;\n        case 4:\n          circleColor = \"#efc35c\";\n          break;\n        case 42:\n          circleColor = \"#6a5ff6\";\n          break;\n        default:\n          circleColor = \"#ccc\";\n      }\n    }\n\n    return circleColor;\n  };\n\n  render() {\n    const networkCircle = {\n      borderRadius: \"50%\",\n      backgroundColor: this.getNetworkCircleColor(),\n      height: \"1em\",\n      width: \"1em\"\n    };\n\n    return (\n      <Flex alignItems={\"center\"}>\n        <Box style={networkCircle} mr={2} />\n        <Text style={{ textTransform: \"capitalize\" }}>\n          {this.props.network.name}\n        </Text>\n      </Flex>\n    );\n  }\n}\n\nexport default NetworkOverview;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Icon,\n  Flex,\n  ToastMessage,\n  Box,\n  Button,\n  Link\n} from \"rimble-ui\";\nimport NetworkOverview from \"../utilities/components/NetworkOverview\";\n\nconst DebuggerButtons = props => (\n  <Box mt={4} borderTop={1} borderColor=\"#E8E8E8\" pt={3}>\n    <Heading.h4 textAlign={\"center\"}>Show Modal</Heading.h4>\n    <Button\n      onClick={props.modals.methods.openWrongNetworkModal}\n      size=\"small\"\n      mr={2}\n      mb={2}\n    >\n      Blocking Wrong Network\n    </Button>\n\n    <Button\n      onClick={props.modals.methods.openConnectionModal}\n      size=\"small\"\n      mr={2}\n      mb={2}\n    >\n      Connection\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openConnectionPendingModal}\n      mr={2}\n      mb={2}\n    >\n      Connection Pending\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openUserRejectedConnectionModal}\n      mr={2}\n      mb={2}\n    >\n      Connection Rejected\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={event => {\n        props.modals.methods.openLowFundsModal(event);\n      }}\n      mr={2}\n      mb={2}\n    >\n      Low Funds\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openNoWeb3BrowserModal}\n      mr={2}\n      mb={2}\n    >\n      Not Web3 Browser\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openNoWalletModal}\n      mr={2}\n      mb={2}\n    >\n      No Wallet\n    </Button>\n  </Box>\n);\n\nclass Web3Debugger extends React.Component {\n  render() {\n    return (\n      <Card width={\"600px\"} mx={\"auto\"} px={4}>\n        <Heading.h3 textAlign={\"center\"}>Get Connected</Heading.h3>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            <Icon name=\"Check\" color={\"green\"} mr={2} />\n            <Text>Modern & Web3 Capable Browser</Text>\n          </Flex>\n        </Box>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.web3 ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Browser-connected Wallet</Text>\n          </Flex>\n\n          {!this.props.web3 ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">You do not have a wallet.</Text>\n              </Flex>\n\n              <Link\n                href=\"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                <Button.Outline size=\"small\">\n                  Get MetaMask Extension\n                </Button.Outline>\n              </Link>\n            </Flex>\n          ) : null}\n        </Box>\n\n        {this.props.web3 ? (\n          <Flex\n            py={3}\n            my={3}\n            borderTop={1}\n            borderBottom={1}\n            borderColor={\"#E8E8E8\"}\n            textAlign={\"center\"}\n            justifyContent={\"space-around\"}\n            alignItems={\"center\"}\n          >\n            <Button\n              size=\"small\"\n              onClick={this.props.connectAndValidateAccount}\n              disabled={!this.props.web3}\n            >\n              Connect and verify\n            </Button>\n            <Text>- or -</Text>\n            <Button size=\"small\" disabled>\n              Initiate On-Chain Action\n            </Button>\n          </Flex>\n        ) : null}\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.network.isCorrectNetwork ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Correct Network</Text>\n          </Flex>\n\n          {this.props.web3 && !this.props.network.isCorrectNetwork ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Box>\n                  <Flex alignItems={\"center\"}>\n                    <Text\n                      mr={2}\n                      color=\"#999\"\n                      style={{ textTransform: \"capitalize\" }}\n                    >\n                      Current network:\n                    </Text>\n                    <NetworkOverview network={this.props.network.current} />\n                  </Flex>\n                  <Flex alignItems={\"center\"}>\n                    <Text\n                      mr={2}\n                      color=\"#999\"\n                      style={{ textTransform: \"capitalize\" }}\n                    >\n                      Required network:\n                    </Text>\n                    <NetworkOverview network={this.props.network.required} />\n                  </Flex>\n                </Box>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.checkNetwork}>\n                Check Network\n              </Button.Outline>\n            </Flex>\n          ) : null}\n          {this.props.web3 && this.props.isCorrectNetwork ? (\n            <Flex ml={4} alignItems={\"center\"}>\n              <NetworkOverview network={this.props.network.current} />\n            </Flex>\n          ) : null}\n        </Box>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.account && this.props.accountValidated ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Wallet connected and verified</Text>\n          </Flex>\n\n          {!this.props.account &&\n          this.props.web3 &&\n          !this.props.userRejectedConnect ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">Not connected to this dApp.</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.initAccount}>\n                Connect\n              </Button.Outline>\n            </Flex>\n          ) : null}\n          {this.props.account && this.props.web3 ? (\n            <Flex ml={4} alignItems={\"center\"}>\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n              <Box>\n                <Text color=\"#999\">Connected wallet {this.props.account}</Text>\n                <Text color={this.props.accountBalanceLow ? \"red\" : \"#999\"}>\n                  Account balance {this.props.accountBalance}\n                </Text>\n              </Box>\n            </Flex>\n          ) : null}\n\n          {this.props.userRejectedConnect ? (\n            <Flex ml={4} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Error\" mr={2} color=\"red\" />\n                <Text color=\"red\">User rejected Connect request</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.initAccount}>\n                Connect\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {(this.props.accountValidated === null ||\n            this.props.accountValidated === false) &&\n          this.props.web3 ? (\n            <Flex\n              ml={4}\n              my={1}\n              alignItems={\"center\"}\n              justifyContent={\"space-between\"}\n            >\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">Account not verified</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.validateAccount}>\n                Validate\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {this.props.accountValidated === false ? (\n            <Flex\n              ml={4}\n              my={1}\n              alignItems={\"center\"}\n              justifyContent={\"space-between\"}\n            >\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Error\" mr={2} color=\"red\" />\n                <Text color=\"red\">Account not verified</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.validateAccount}>\n                Validate\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {this.props.userRejectedValidation === false ? (\n            <Flex ml={4}>\n              <Icon name=\"Error\" mr={2} color=\"red\" />\n              <Text color=\"red\">Account not verified</Text>\n            </Flex>\n          ) : null}\n        </Box>\n\n        <DebuggerButtons {...this.props} />\n\n        <ToastMessage.Provider ref={node => (window.toastProvider = node)} />\n      </Card>\n    );\n  }\n}\n\nexport default Web3Debugger;\n","const address = '0xf5dce57282a584d2746faf1593d3121fcac444dc'; // mainnet\nconst abi = [\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"name\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x06fdde03\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"approve\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x095ea7b3\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"reserveFactorMantissa\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x173b9904\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"borrowBalanceCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x17bfdfbc\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalSupply\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x18160ddd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"exchangeRateStored\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x182df0f5\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"src\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"dst\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transferFrom\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x23b872dd\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"pendingAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x26782247\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"decimals\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x313ce567\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOfUnderlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x3af9e669\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"getCash\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x3b1d21a2\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newComptroller\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setComptroller\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x4576b5db\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalBorrows\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x47bd3718\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"comptroller\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x5fe3b567\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"reduceAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"_reduceReserves\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x601a0bf1\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"initialExchangeRateMantissa\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x675d972c\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"accrualBlockNumber\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x6c540baf\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"underlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x6f307dc3\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOf\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x70a08231\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"totalBorrowsCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x73acee98\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalReserves\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x8f840ddd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"symbol\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x95d89b41\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"borrowBalanceStored\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x95dd9193\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"accrueInterest\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa6afed95\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"dst\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transfer\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa9059cbb\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"borrowIndex\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xaa5af0fd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"supplyRatePerBlock\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xae9d70b0\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"liquidator\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"seizeTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"seize\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xb2a02ff1\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newPendingAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setPendingAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xb71d1a0c\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"exchangeRateCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xbd6d894d\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"getAccountSnapshot\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xc37f68e2\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"allowance\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xdd62ed3e\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"_acceptAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xe9c714f2\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newInterestRateModel\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setInterestRateModel\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf2b3abbd\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"interestRateModel\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf3fdb15a\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"admin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf851a440\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"borrowRatePerBlock\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf8f9da28\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"_setReserveFactor\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xfca7820b\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"isCToken\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xfe9c44ae\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"name\": \"underlying_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"comptroller_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"interestRateModel_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"initialExchangeRateMantissa_\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"name_\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"symbol_\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"decimals_\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"constructor\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"constructor\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"interestAccumulated\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrowIndex\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"AccrueInterest\",\n    \"signature\": \"0x875352fb3fadeb8c0be7cbbe8ff761b308fa7033470cd0287f02f3436fd76cb9\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"minter\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"mintAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"mintTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Mint\",\n    \"signature\": \"0x4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"redeemer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"redeemAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"redeemTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Redeem\",\n    \"signature\": \"0xe5b754fb1abb7f01b499791d0b820ae3b6af3424ac1c59768edb53f4ec31a929\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrowAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"accountBorrows\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Borrow\",\n    \"signature\": \"0x13ed6866d4e1ee6da46f845c46d7e54120883d75c5ea9a2dacc1c4ca8984ab80\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"payer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"accountBorrows\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"RepayBorrow\",\n    \"signature\": \"0x1a2a22cb034d26d1854bdc6666a5b91fe25efbbb5dcad3b0355478d6f5c362a1\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"liquidator\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"cTokenCollateral\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"seizeTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"LiquidateBorrow\",\n    \"signature\": \"0x298637f684da70674f26509b10f07ec2fbc77a335ab1e7d6215a4b2484d8bb52\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldPendingAdmin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newPendingAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewPendingAdmin\",\n    \"signature\": \"0xca4f2f25d0898edd99413412fb94012f9e54ec8142f9b093e7720646a95b16a9\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldAdmin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewAdmin\",\n    \"signature\": \"0xf9ffabca9c8276e99321725bcb43fb076a6c66a54b7f21c4e8146d8519b417dc\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldComptroller\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newComptroller\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewComptroller\",\n    \"signature\": \"0x7ac369dbd14fa5ea3f473ed67cc9d598964a77501540ba6751eb0b3decf5870d\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldInterestRateModel\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newInterestRateModel\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewMarketInterestRateModel\",\n    \"signature\": \"0xedffc32e068c7c95dfd4bdfd5c4d939a084d6b11c4199eac8436ed234d72f926\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"NewReserveFactor\",\n    \"signature\": \"0xaaa68312e2ea9d50e16af5068410ab56e1a1fd06037b1a35664812c30f821460\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"admin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"reduceAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newTotalReserves\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"ReservesReduced\",\n    \"signature\": \"0x3bad0c59cf2f06e7314077049f48a93578cd16f5ef92329f1dab1420a99c177e\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"error\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"info\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"detail\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Failure\",\n    \"signature\": \"0x45b96fe442630264581b197e84bbada861235052c5a1aadfff9ea4e40a969aa0\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"name\": \"from\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"name\": \"to\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Transfer\",\n    \"signature\": \"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Approval\",\n    \"signature\": \"0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\",\n    \"type\": \"event\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"mintAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"mint\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa0712d68\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"redeemTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"redeem\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xdb006a75\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"redeemAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"redeemUnderlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x852a12e3\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrowAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"borrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xc5ebeaec\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"repayBorrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x0e752702\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"repayBorrowBehalf\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x2608f818\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"cTokenCollateral\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"liquidateBorrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf5e3c462\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }\n];\nexport default { address, abi };\n","const address = '0x5592EC0cfb4dbc12D3aB100b257153436a1f0FEa'; // rinkeby\nconst abi = [{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"stop\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"owner_\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"name_\",\"type\":\"bytes32\"}],\"name\":\"setName\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"stopped\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"authority_\",\"type\":\"address\"}],\"name\":\"setAuthority\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"push\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"move\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"start\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"authority\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"pull\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"symbol_\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"authority\",\"type\":\"address\"}],\"name\":\"LogSetAuthority\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"LogSetOwner\",\"type\":\"event\"},{\"anonymous\":true,\"inputs\":[{\"indexed\":true,\"name\":\"sig\",\"type\":\"bytes4\"},{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"foo\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"bar\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"fax\",\"type\":\"bytes\"}],\"name\":\"LogNote\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"dst\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}];\nexport default { address, abi };\n","import DAI from '../abis/tokens/DAI.json';\nimport CHAI from '../abis/chai/CHAI.json';\nimport cToken from '../abis/compound/cDAI';\nimport WETH from '../abis/tokens/WETH.json';\nimport USDC from '../abis/tokens/USDC.json';\nimport ERC20 from '../abis/tokens/ERC20.js';\nimport fToken from '../abis/fuse/fToken.json';\nimport aToken from '../abis/aave/AToken.json';\nimport yToken from '../abis/dydx/yToken.json';\nimport iToken from '../abis/fulcrum/iToken.json';\nimport crToken from '../abis/cream/crToken.json';\nimport IdleTokenV3 from '../contracts/IdleTokenV3.json';\nimport IdleTokenV4 from '../contracts/IdleTokenV4.json';\nimport IdleConverterPersonalSignV4 from '../contracts/IdleConverterPersonalSignV4.json';\n\nconst availableTokens = {\n  42:{\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x4f96fe3b7a6cf9725f59d353f723c1bdb64ca6aa',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x295CA5bC5153698162dDbcE5dF50E436a58BA21e',\n        },\n        protocols:[\n          {\n            decimals:28,\n            token:'cDAI',\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0xf0d0eb522cfa50b716b3b1604c4f0fa6f04376ad',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          }\n        ]\n      },\n      USDC:{\n        abi:USDC,\n        token:'USDC',\n        decimals:6,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0xb7a4f3e9097c08da09517b5ab877f7a917224ede',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        ramp:{\n          swapAsset:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x0de23D3bc385a74E2196cfE827C8a640B8774B9f',\n        },\n        protocols:[\n          {\n            decimals:16,\n            enabled:true,\n            token:'cUSDC',\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x4a92e71227d294f041bd82dd8f78591b75140d63',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          }\n        ]\n      },\n    },\n    risk:{\n      \n    }\n  },\n  1337:{\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your DAI with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleDAI',\n            name:'idleDAIYieldV3',\n            address:'0x78751b12da02728f467a44eac40f5cbc16bd7934',\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token:'yxDAIOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            token:'idleDAI',\n            abi:IdleConverterPersonalSignV4,\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token:'cDAI',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:iToken,\n            enabled:false,\n            name:'fulcrum',\n            address:'0x493c57c4763932315a328269e1adad09653b9081',\n            token:'iDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            address:'0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token:'aDAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            address:'0x028171bCA77440897B824Ca71D1c56caC55b68A3',\n            token:'aDAIv2',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:CHAI,\n            name:'dsr',\n            enabled:true,\n            address:'0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token:'CHAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:yToken,\n            name:'dydx',\n            enabled:true,\n            address:'0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token:'yxDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDC:{\n        abi:USDC,\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x5274891bEC421B39D23760c04A6755eCB444797C',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your USDC with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDC',\n            name:'idleUSDCYieldV3',\n            address:'0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6'\n          },\n          oldProtocols:[\n            {\n              abi:yToken,\n              name:'dydx',\n              enabled:true,\n              address:'0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token:'yxUSDCOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token:'cUSDC',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token:'iUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token:'aUSDC',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            decimals:18,\n            enabled:true,\n            name:'aavev2',\n            token:'aUSDCv2',\n            address:'0xBcca60bB61934080951369a648Fb03DF4F96263C',\n            functions:{\n              \n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token:'yxUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDT:{\n        decimals:6,\n        token:'USDT',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre:{\n          destCurrency:'USDT'\n        },\n        defiPrime:{\n          token:'usdt'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDTYield',\n          address:'0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your USDT with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDT',\n            name:'idleUSDTYieldV3',\n            address:'0x63D27B3DA94A9E871222CB0A32232674B02D2f2D'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDT',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token:'cUSDT',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token:'iUSDT',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token:'aUSDT',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            decimals:18,\n            name:'aavev2',\n            enabled:true,\n            token:'aUSDTv2',\n            address:'0x3ed3b47dd13ec9a98b44e6204a523e766b225811',\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      SUSD:{\n        decimals:18,\n        token:'SUSD',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        skipMintForDeposit:false,\n        color:'hsl(250, 31%, 15%)',\n        // icon:'images/tokens/SUSD.svg',\n        address:'0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n        wyre:{\n          destCurrency:'SUSD'\n        },\n        defiPrime:{\n          token:'susd'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleSUSDYield',\n          address:'0xf52cdcd458bf455aed77751743180ec4a595fd3f',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your SUSD with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleSUSD',\n            name:'idleSUSDYieldV3',\n            address:'0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleSUSD',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x625aE63000f46200499120B906716420bd059240',\n            token:'aSUSD',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            name:'aavev2',\n            enabled:true,\n            abi:aToken,\n            address:'0x6c5024cd4f8a59110119c56f8933403a539555eb',\n            token:'aSUSDv2',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      TUSD:{\n        decimals:18,\n        token:'TUSD',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        skipMintForDeposit:false,\n        color:'hsl(217, 100%, 20%)',\n        address:'0x0000000000085d4780b73119b644ae5ecd22b376',\n        wyre:{\n          destCurrency:'TUSD'\n        },\n        defiPrime:{\n          token:'tusd'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleTUSDYield',\n          address:'0xc278041fDD8249FE4c1Aad1193876857EEa3D68c',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your TUSD with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleTUSD',\n            name:'idleTUSDYieldV3',\n            address:'0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleTUSD',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x4da9b813057d04baef4e5800e36083717b4a0341',\n            token:'aTUSD',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            enabled:true,\n            name:'aavev2',\n            token:'aTUSDv2',\n            address:'0x101cc05f4A51C0319f570d5E146a8C625198e636',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      WETH:{\n        abi:WETH,\n        token:'WETH',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WETH'\n        },\n        ramp:{\n          swapAsset:'WETH'\n        },\n        defiPrime:{\n          token:'weth'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWETHYield',\n          address:'0xC8E6CA6E96a326dC448307A5fDE90a0b21fd7f80',\n        },\n        protocols:[\n          {\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x4Ddc2D193948926D02f9B1fE9e1daa0718270ED5',\n            token:'cETH',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            address:'0x030bA81f1c18d280636F32af80b9AAd02Cf0854e',\n            token:'aWETH',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n      WBTC:{\n        decimals:8,\n        token:'WBTC',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(29, 81%, 59%)',\n        address:'0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WBTC'\n        },\n        defiPrime:{\n          token:'wbtc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWBTCYield',\n          address:'0x8C81121B15197fA0eEaEE1DC75533419DcfD3151',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your WBTC with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleWBTC',\n            name:'idleWBTCYieldV3',\n            address:'0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleWBTC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            enabled:true,\n            token:'cWBTC',\n            abi:cToken.abi,\n            name:'compound',\n            address:'0xccF4429DB6322D5C611ee964527D42E5d685DD6a',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:iToken,\n            decimals:18,\n            token:'iWBTC',\n            enabled:false,\n            name:'fulcrum',\n            address:'0xba9262578efef8b3aff7f60cd629d6cc8859c8b5',\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            token:'aWBTC',\n            address:'0xfc4b8ed459e00e5400be803a9bb3954234fd50e3',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            enabled:true,\n            name:'aavev2',\n            token:'aWBTCv2',\n            address:'0x9ff58f4fFB29fA2266Ab25e75e2A8b3503311656',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      RAI:{\n        deposit:{},\n        token:'RAI',\n        decimals:18,\n        enabled:true,\n        abi:ERC20.abi,\n        enabledEnvs:['beta'],\n        govTokensDisabled:false,\n        color:'hsl(169,42%,37%)',\n        icon:'images/tokens/RAI.png',\n        address:'0x03ab458634910aad20ef5f1c8ee96f1d6ac54919',\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleRAIYield',\n          address:'0x5C960a3DCC01BE8a0f49c02A8ceBCAcf5D07fABe',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:28,\n            enabled:true,\n            name:'cream',\n            token:'crRAI',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0xf8445c529d363ce114148662387eba5e62016e20',\n          },\n          {\n            abi:fToken,\n            decimals:28,\n            name:'fuse',\n            token:'fRAI',\n            enabled:true,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x752F119bD4Ee2342CE35E2351648d21962c7CAfE',\n          }\n        ]\n      },\n    },\n    risk:{\n      DAI:{\n        abi:DAI,\n        decimals:18,\n        token:'DAI',\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAISafe',\n          address:'0xa14ea0e11121e6e951e87c66afe460a00bcd6a16'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleDAI',\n            name:'idleDAISafeV3',\n            address:'0x1846bdfDB6A0f5c473dEc610144513bd071999fB'\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token:'yxDAIOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleDAI',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token:'cDAI',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0x493c57c4763932315a328269e1adad09653b9081',\n            token:'iDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token:'aDAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            name:'dsr',\n            enabled:true,\n            abi:CHAI,\n            address:'0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token:'CHAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token:'yxDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDC:{\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCSafe',\n          address:'0x3391bc034f2935ef0e1e41619445f998b2680d35'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDC',\n            name:'idleUSDCSafeV3',\n            address:'0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token:'yxUSDCOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token:'cUSDC',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token:'iUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token:'aUSDC',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token:'yxUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDT:{\n        decimals:6,\n        token:'USDT',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre:{\n          destCurrency:'USDT'\n        },\n        defiPrime:{\n          token:'usdt'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDTSafe',\n          address:'0x28fAc5334C9f7262b3A3Fe707e250E01053e07b5'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDT',\n            name:'idleUSDTSafeV3',\n            address:'0x42740698959761baf1b06baa51efbd88cb1d862b'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleDAI',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token:'cUSDT',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token:'iUSDT',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token:'aUSDT',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      }\n    }\n  },\n  1:{ // Mainnet\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your DAI with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleDAI',\n            name:'idleDAIYieldV3',\n            address:'0x78751b12da02728f467a44eac40f5cbc16bd7934',\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token:'yxDAIOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            token:'idleDAI',\n            abi:IdleConverterPersonalSignV4,\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token:'cDAI',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:iToken,\n            enabled:false,\n            name:'fulcrum',\n            address:'0x493c57c4763932315a328269e1adad09653b9081',\n            token:'iDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            address:'0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token:'aDAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            address:'0x028171bCA77440897B824Ca71D1c56caC55b68A3',\n            token:'aDAIv2',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:CHAI,\n            name:'dsr',\n            enabled:true,\n            address:'0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token:'CHAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:yToken,\n            name:'dydx',\n            enabled:true,\n            address:'0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token:'yxDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDC:{\n        abi:USDC,\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x5274891bEC421B39D23760c04A6755eCB444797C',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your USDC with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDC',\n            name:'idleUSDCYieldV3',\n            address:'0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6'\n          },\n          oldProtocols:[\n            {\n              abi:yToken,\n              name:'dydx',\n              enabled:true,\n              address:'0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token:'yxUSDCOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token:'cUSDC',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token:'iUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token:'aUSDC',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            decimals:18,\n            enabled:true,\n            name:'aavev2',\n            token:'aUSDCv2',\n            address:'0xBcca60bB61934080951369a648Fb03DF4F96263C',\n            functions:{\n              \n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token:'yxUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDT:{\n        decimals:6,\n        token:'USDT',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre:{\n          destCurrency:'USDT'\n        },\n        defiPrime:{\n          token:'usdt'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDTYield',\n          address:'0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your USDT with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDT',\n            name:'idleUSDTYieldV3',\n            address:'0x63D27B3DA94A9E871222CB0A32232674B02D2f2D'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDT',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token:'cUSDT',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token:'iUSDT',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token:'aUSDT',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            decimals:18,\n            name:'aavev2',\n            enabled:true,\n            token:'aUSDTv2',\n            address:'0x3ed3b47dd13ec9a98b44e6204a523e766b225811',\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      SUSD:{\n        decimals:18,\n        token:'SUSD',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        skipMintForDeposit:false,\n        color:'hsl(250, 31%, 15%)',\n        // icon:'images/tokens/SUSD.svg',\n        address:'0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n        wyre:{\n          destCurrency:'SUSD'\n        },\n        defiPrime:{\n          token:'susd'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleSUSDYield',\n          address:'0xf52cdcd458bf455aed77751743180ec4a595fd3f',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your SUSD with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleSUSD',\n            name:'idleSUSDYieldV3',\n            address:'0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleSUSD',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x625aE63000f46200499120B906716420bd059240',\n            token:'aSUSD',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            name:'aavev2',\n            enabled:true,\n            abi:aToken,\n            address:'0x6c5024cd4f8a59110119c56f8933403a539555eb',\n            token:'aSUSDv2',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      TUSD:{\n        decimals:18,\n        token:'TUSD',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        skipMintForDeposit:false,\n        color:'hsl(217, 100%, 20%)',\n        address:'0x0000000000085d4780b73119b644ae5ecd22b376',\n        wyre:{\n          destCurrency:'TUSD'\n        },\n        defiPrime:{\n          token:'tusd'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleTUSDYield',\n          address:'0xc278041fDD8249FE4c1Aad1193876857EEa3D68c',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your TUSD with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleTUSD',\n            name:'idleTUSDYieldV3',\n            address:'0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleTUSD',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x4da9b813057d04baef4e5800e36083717b4a0341',\n            token:'aTUSD',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            enabled:true,\n            name:'aavev2',\n            token:'aTUSDv2',\n            address:'0x101cc05f4A51C0319f570d5E146a8C625198e636',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      WETH:{\n        abi:WETH,\n        token:'WETH',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WETH'\n        },\n        ramp:{\n          swapAsset:'WETH'\n        },\n        defiPrime:{\n          token:'weth'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWETHYield',\n          address:'0xC8E6CA6E96a326dC448307A5fDE90a0b21fd7f80',\n        },\n        protocols:[\n          {\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x4Ddc2D193948926D02f9B1fE9e1daa0718270ED5',\n            token:'cETH',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            address:'0x030bA81f1c18d280636F32af80b9AAd02Cf0854e',\n            token:'aWETH',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n      WBTC:{\n        decimals:8,\n        token:'WBTC',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(29, 81%, 59%)',\n        address:'0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WBTC'\n        },\n        defiPrime:{\n          token:'wbtc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWBTCYield',\n          address:'0x8C81121B15197fA0eEaEE1DC75533419DcfD3151',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your WBTC with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleWBTC',\n            name:'idleWBTCYieldV3',\n            address:'0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleWBTC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            enabled:true,\n            token:'cWBTC',\n            abi:cToken.abi,\n            name:'compound',\n            address:'0xccF4429DB6322D5C611ee964527D42E5d685DD6a',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:iToken,\n            decimals:18,\n            token:'iWBTC',\n            enabled:false,\n            name:'fulcrum',\n            address:'0xba9262578efef8b3aff7f60cd629d6cc8859c8b5',\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            token:'aWBTC',\n            address:'0xfc4b8ed459e00e5400be803a9bb3954234fd50e3',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            enabled:true,\n            name:'aavev2',\n            token:'aWBTCv2',\n            address:'0x9ff58f4fFB29fA2266Ab25e75e2A8b3503311656',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      RAI:{\n        deposit:{},\n        token:'RAI',\n        decimals:18,\n        enabled:true,\n        abi:ERC20.abi,\n        enabledEnvs:['beta'],\n        govTokensDisabled:false,\n        color:'hsl(169,42%,37%)',\n        icon:'images/tokens/RAI.png',\n        address:'0x03ab458634910aad20ef5f1c8ee96f1d6ac54919',\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleRAIYield',\n          address:'0x5C960a3DCC01BE8a0f49c02A8ceBCAcf5D07fABe',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:28,\n            enabled:true,\n            name:'cream',\n            token:'crRAI',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0xf8445c529d363ce114148662387eba5e62016e20',\n          },\n          {\n            abi:fToken,\n            decimals:28,\n            name:'fuse',\n            token:'fRAI',\n            enabled:true,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x752F119bD4Ee2342CE35E2351648d21962c7CAfE',\n          },\n          {\n            abi:aToken,\n            decimals:18,\n            token:'aRAI',\n            enabled:true,\n            name:'aavev2',\n            functions:{\n            },\n            address:'0xc9bc48c72154ef3e5425641a3c747242112a46af',\n          }\n        ]\n      },\n    },\n    risk:{\n      DAI:{\n        abi:DAI,\n        decimals:18,\n        token:'DAI',\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAISafe',\n          address:'0xa14ea0e11121e6e951e87c66afe460a00bcd6a16'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleDAI',\n            name:'idleDAISafeV3',\n            address:'0x1846bdfDB6A0f5c473dEc610144513bd071999fB'\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token:'yxDAIOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleDAI',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token:'cDAI',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0x493c57c4763932315a328269e1adad09653b9081',\n            token:'iDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token:'aDAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            name:'dsr',\n            enabled:true,\n            abi:CHAI,\n            address:'0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token:'CHAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token:'yxDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDC:{\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCSafe',\n          address:'0x3391bc034f2935ef0e1e41619445f998b2680d35'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDC',\n            name:'idleUSDCSafeV3',\n            address:'0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token:'yxUSDCOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token:'cUSDC',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token:'iUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token:'aUSDC',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token:'yxUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDT:{\n        decimals:6,\n        token:'USDT',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre:{\n          destCurrency:'USDT'\n        },\n        defiPrime:{\n          token:'usdt'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDTSafe',\n          address:'0x28fAc5334C9f7262b3A3Fe707e250E01053e07b5'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDT',\n            name:'idleUSDTSafeV3',\n            address:'0x42740698959761baf1b06baa51efbd88cb1d862b'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleDAI',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token:'cUSDT',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token:'iUSDT',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token:'aUSDT',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      }\n    }\n  }\n};\n\nexport default availableTokens;","const TransactionToastMessages = {\n    initialized: {\n      message: \"{action} request initialized\",\n      secondaryMessage: \"Confirm with your wallet provider\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"default\",\n      icon: \"InfoOutline\"\n    },\n    started: {\n      message: \"{action} request submitted\",\n      secondaryMessage: \"Confirm with your wallet provider\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"default\",\n      icon: \"InfoOutline\"\n    },\n    pending: {\n      message: \"Processing {action} request...\",\n      secondaryMessage: \"This may take a few minutes\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"processing\",\n      icon: \"InfoOutline\"\n    },\n    confirmed: {\n      message: \"First block confirmed\",\n      secondaryMessage: \"Your {action} request is in progress\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"processing\",\n      icon: 'CheckCircle'\n    },\n    success: {\n      message: \"{action} request completed\",\n      variant: \"success\",\n      icon: 'CheckCircle'\n    },\n    error: {\n      message: \"{action} request failed\",\n      secondaryMessage: \"Could not complete transaction.\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"failure\",\n      icon: \"Block\"\n    }\n  };\n\n  export default TransactionToastMessages;\n","import React from \"react\";\nimport { ToastMessage } from \"rimble-ui\";\nimport TransactionToastMessages from \"./TransactionToastMessages\";\n\nclass TransactionToastUtil extends React.Component {\n  // Determines if collections are same size\n  collectionHasNewObject = (prevCollection, currentCollection) => {\n    return (\n      typeof prevCollection === \"undefined\" ||\n      Object.keys(prevCollection).length !==\n        Object.keys(currentCollection).length\n    );\n  };\n\n  // Returns object from currentCollection that doesn't exist in prevCollection\n  getNewObjectFromCollection = (prevCollection, currentCollection) => {\n    if (typeof prevCollection !== \"undefined\") {\n      const objectKey = Object.keys(currentCollection).filter(key => {\n        return !Object.keys(prevCollection).includes(key);\n      });\n      return currentCollection[objectKey];\n    } else {\n      return Object.keys(currentCollection).map(key => {\n        return currentCollection[key];\n      });\n    }\n  };\n\n  // Compare two collections of objects, return single object from current collection that differs from prev collection\n  getUpdatedObjectFromCollection = (prevCollection, currentCollection) => {\n    const updatedTransaction = Object.keys(prevCollection)\n      .map(key => {\n        if (\n          prevCollection[key].lastUpdated !== currentCollection[key].lastUpdated\n        ) {\n          return currentCollection[key];\n        } else {\n          return null;\n        }\n      })\n      .filter(object => object !== null);\n    return updatedTransaction[0];\n  };\n\n  // Returns an transaction from a collection based on a given identifier\n  getTransactionFromCollection = (identifier, collection) => {\n    const object = collection[`tx${identifier}`];\n    return object;\n  };\n\n  // Returns either a new object or finds an updated object in a collection against a previous collection\n  getUpdatedTransaction = (prevCollection, currentCollection) => {\n    let tx = null;\n    let currentTx = {};\n    let prevTx = {};\n\n    if (this.collectionHasNewObject(prevCollection, currentCollection)) {\n      tx = this.getNewObjectFromCollection(prevCollection, currentCollection);\n    } else {\n      currentTx = this.getUpdatedObjectFromCollection(\n        prevCollection,\n        currentCollection\n      );\n      if (currentTx) {\n        prevTx = this.getTransactionFromCollection(\n          currentTx.created,\n          prevCollection\n        );\n      } else {\n        return false;\n      }\n\n      if (currentTx.status !== prevTx.status) {\n        tx = currentTx;\n      }\n    }\n    return tx;\n  };\n\n  // Check for updates to the transactions collection\n  processTransactionUpdates = prevProps => {\n    let tx = null;\n    if (Object.keys(this.props.transactions).length) {\n      tx = this.getUpdatedTransaction(\n        prevProps.transactions,\n        this.props.transactions\n      );\n    }\n\n    if (tx) {\n      this.showTransactionToast(tx);\n    }\n  };\n\n  showTransactionToast = transaction => {\n    // console.log(\"showTransactionToast: \", { ...transaction });\n    // Get text info for toast\n    let toastMeta = this.getTransactionToastMeta(transaction);\n    toastMeta.colorTheme = this.props.themeMode;\n    toastMeta.closeElem = true;\n    // console.log('toastMeta',toastMeta);\n\n    // Show toast\n    window.toastProvider.addMessage(\".\", toastMeta);\n  };\n\n  getTransactionToastMeta = transaction => {\n    let transactionToastMeta = {};\n    let status = transaction.status;\n\n    switch (status) {\n      case \"initialized\":\n        transactionToastMeta = TransactionToastMessages.initialized;\n        break;\n      case \"started\":\n        transactionToastMeta = TransactionToastMessages.started;\n        break;\n      case \"pending\":\n        transactionToastMeta = TransactionToastMessages.pending;\n        break;\n      case \"confirmed\":\n        transactionToastMeta = TransactionToastMessages.confirmed;\n        break;\n      case \"success\":\n        transactionToastMeta = TransactionToastMessages.success;\n        break;\n      case \"error\":\n        transactionToastMeta = TransactionToastMessages.error;\n        break;\n      default:\n        // do nothing\n        break;\n    }\n\n    let transactionAction = '';\n    switch (transaction.method){\n      case 'redeemIdleToken':\n        transactionAction = 'Redeem';\n      break;\n      case 'redeemGovTokens':\n        transactionAction = 'Redeem (Gov Tokens)';\n      break;\n      case 'mintIdleToken':\n      case 'mintIdleTokensProxy':\n        transactionAction = 'Lending';\n      break;\n      case 'migrateFromToIdle':\n      case 'migrateFromCompoundToIdle':\n      case 'migrateFromFulcrumToIdle':\n      case 'migrateFromAaveToIdle':\n      case 'migrateFromIearnToIdle':\n      case 'bridgeIdleV1ToIdleV2':\n        transactionAction = 'Migration';\n      break;\n      case 'executeMetaTransaction':\n        transactionAction = 'Meta-Tx';\n      break;\n      case 'approve':\n        transactionAction = 'Approve';\n      break;\n      case 'rebalance':\n        transactionAction = 'Rebalance';\n      break;\n      default:\n        transactionAction = transaction.method.charAt(0).toUpperCase() + transaction.method.substr(1);\n      break;\n    }\n\n    transactionToastMeta = JSON.parse(JSON.stringify(transactionToastMeta));\n\n    let newMessage = transactionToastMeta.message.replace('{action}',transactionAction);\n    newMessage = newMessage.charAt(0).toUpperCase() + newMessage.slice(1);\n    transactionToastMeta.message = newMessage;\n    transactionToastMeta.closeElem = true;\n    transactionToastMeta.colorTheme = this.props.themeMode;\n\n    return transactionToastMeta;\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    this.processTransactionUpdates(prevProps);\n  }\n\n  render() {\n    return (\n      <div>\n        <ToastMessage.Provider ref={node => (window.toastProvider = node)} />\n      </div>\n    );\n  }\n}\n\nexport default TransactionToastUtil;\n","import Web3 from \"web3\";\nimport jQuery from 'jquery';\nimport theme from \"../theme\";\nimport Tos from \"../Tos/Tos\";\nimport themeDark from \"../theme-dark\";\nimport connectors from './connectors';\nimport Web3Provider from 'web3-react';\nimport { Web3Consumer } from 'web3-react';\nimport CookieConsent from \"react-cookie-consent\";\nimport RimbleWeb3 from \"../utilities/RimbleWeb3\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport React, { Component, Suspense } from \"react\";\nimport GeneralUtil from \"../utilities/GeneralUtil\";\nimport Header from \"../utilities/components/Header\";\nimport globalConfigs from '../configs/globalConfigs';\nimport ScrollToTop from \"../ScrollToTop/ScrollToTop\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport PageNotFound from \"../PageNotFound/PageNotFound\";\nimport Web3Debugger from \"../Web3Debugger/Web3Debugger\";\nimport availableTokens from '../configs/availableTokens';\nimport TransactionToastUtil from \"../utilities/TransactionToastUtil\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { ThemeProvider, Box, Text, Link, Image, Flex } from 'rimble-ui';\n\n// Lazy Loading\nconst Landing = React.lazy(() => import(\"../Landing/Landing\"));\nconst Dashboard = React.lazy(() => import('../Dashboard/Dashboard'));\nconst Governance = React.lazy(() => import('../Governance/Governance'));\n\nclass App extends Component {\n  state = {\n    network:null,\n    cachedData:{},\n    buyToken: null,\n    currentEnv:null,\n    selectedTab: '1',\n    route: \"default\", // or 'onboarding'\n    themeMode:'light',\n    connecting: false,\n    tokenConfig: null,\n    genericError: null,\n    customAddress: null,\n    connectorName: null,\n    selectedToken: null,\n    selectedTheme:theme,\n    currentSection:null,\n    walletProvider: null,\n    availableTokens: null,\n    buyModalOpened: false,\n    selectedStrategy: null,\n    toastMessageProps: null,\n    callbackAfterLogin: null,\n    width: window.innerWidth,\n    availableStrategies: null,\n    height: window.innerHeight,\n    unsubscribeFromHistory: null,\n    enableUnderlyingWithdraw: false,\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  closeToastMessage = (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    this.setState({\n      toastMessageProps:null\n    });\n  }\n\n  showToastMessage = (props) => {\n    this.setState({\n      toastMessageProps:props\n    });\n  }\n\n  processCustomParam = (props,prevProps) => {\n    // const params = props ? props.match.params : null;\n    // const prevParams = prevProps ? prevProps.match.params : null;\n\n    // Reset params\n    /*\n    if ( prevParams && params && prevParams.customParam !== params.customParam && (!params || !params.customParam || params.customParam === undefined)){\n      this.setState({\n        customAddress:null,\n        enableUnderlyingWithdraw:false\n      });\n    } else if (params && typeof params.customParam === 'string') {\n      // Check if custom address\n      if (params.customParam.toLowerCase().match(/0x[\\w]{40}/) && this.state.customAddress !== params.customParam){\n        this.setCustomAddress(params.customParam);\n      } else if (params && params.customParam === 'withdraw' && !this.state.enableUnderlyingWithdraw){\n        this.setState({\n          customAddress:null,\n          enableUnderlyingWithdraw:true\n        });\n      }\n    }\n    */\n  }\n\n  clearCachedData = async (callback=null) => {\n    this.functionsUtil.setLocalStorage('cachedData',{},true);\n    await this.setState({\n      cachedData:{}\n    },() => {\n      if (typeof callback === 'function'){\n        callback();\n      }\n    });\n    return true;\n  }\n\n  setCachedData = (key,data,TTL=null,useLocalStorage=false) => {\n\n    key = key.toLowerCase();\n    const cachedKeyFound = this.state.cachedData[key];\n    const currentTime = parseInt(Date.now()/1000);\n\n    const update_key = !cachedKeyFound || ( (!cachedKeyFound.expirationDate || cachedKeyFound.expirationDate>=currentTime) || JSON.stringify(cachedKeyFound.data) !== JSON.stringify(data));\n\n    let output = false;\n\n    if (update_key){\n      const expirationDate = TTL ? currentTime+(TTL) : null;\n\n      // Save cached data in local storage\n      if (useLocalStorage){\n        let storedCachedData = this.functionsUtil.getStoredItem('cachedData');\n        if (!storedCachedData){\n          storedCachedData = {};\n        }\n        storedCachedData = {\n          ...storedCachedData,\n          [key]:{\n            data,\n            expirationDate\n          }\n        };\n        // console.log('STORED CACHE - INSERT KEY',key,data);\n        this.functionsUtil.setLocalStorage('cachedData',storedCachedData,true);\n      }\n\n      // Set new cached data state\n      this.setState((prevState) => ({\n        cachedData: {\n          ...prevState.cachedData,\n          [key]:{\n            data,\n            expirationDate\n          }\n        }\n      }));\n\n      output = true;\n    }\n\n    return output;\n  }\n\n  setCallbackAfterLogin = (callbackAfterLogin) => {\n    this.setState({\n      callbackAfterLogin\n    });\n  }\n\n  setCustomAddress = (customAddress) => {\n    // Reset customAddress if not well formatted\n    if (customAddress && !customAddress.toLowerCase().match(/0x[\\w]{40}/)){\n      customAddress = null;\n    }\n\n    if (customAddress !== this.state.customAddress){\n      this.setState({\n        customAddress,\n        enableUnderlyingWithdraw:false\n      });\n    }\n  }\n\n  async selectTab(e, tabIndex) {\n    return this.setState(state => ({...state, selectedTab: tabIndex}));\n  }\n\n  async loadAvailableTokens() {\n    const newState = {};\n    const availableStrategies = {};\n    const requiredNetwork = this.state.network && this.state.network.isCorrectNetwork ? (this.state.network.current.id || this.state.network.required.id) : globalConfigs.network.requiredNetwork;\n\n    // console.log('loadAvailableTokens',this.state.network,requiredNetwork,availableTokens);\n\n    // Load available strategies\n    Object.keys(availableTokens[requiredNetwork]).forEach((strategy) => {\n      availableStrategies[strategy] = Object.keys(availableTokens[requiredNetwork][strategy]).reduce( (enabledTokens,token) => {\n        const tokenConfig = availableTokens[requiredNetwork][strategy][token];\n        const envEnabled = !tokenConfig.enabledEnvs || !tokenConfig.enabledEnvs.length || tokenConfig.enabledEnvs.includes(this.state.currentEnv);\n        if (tokenConfig.enabled && envEnabled){\n          enabledTokens[token] = tokenConfig;\n        }\n        return enabledTokens;\n      },{});\n    });\n\n    newState.availableStrategies = availableStrategies;\n\n    // Load strategy\n    const selectedStrategy = this.state.selectedStrategy;\n    if (selectedStrategy && availableStrategies[selectedStrategy]){\n      newState.availableTokens = availableStrategies[selectedStrategy];\n\n      // Load token\n      const selectedToken = this.state.selectedToken;\n      if (selectedToken && newState.availableTokens[selectedToken]){\n        newState.tokenConfig = newState.availableTokens[selectedToken];\n      }\n    }\n\n    // console.log('loadAvailableTokens',newState);\n\n    await this.setState(newState);\n  }\n\n  async setStrategyToken(selectedStrategy,selectedToken){\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    const newState = {\n      tokenConfig:!selectedToken ? null : this.state.tokenConfig,\n      availableTokens:!selectedToken ? null : this.state.availableTokens,\n      selectedToken:!selectedToken ? selectedToken :this.state.selectedToken,\n      selectedStrategy:!selectedStrategy ? selectedStrategy :this.state.selectedStrategy,\n    };\n\n    if (selectedStrategy && this.state.availableStrategies && selectedStrategy !== this.state.selectedStrategy && Object.keys(this.state.availableStrategies).includes(selectedStrategy.toLowerCase())){\n      newState.selectedStrategy = selectedStrategy.toLowerCase();\n    }\n\n    if (selectedToken && selectedToken !== this.state.selectedToken) {\n      if ( this.state.availableTokens && Object.keys(this.state.availableTokens).includes(selectedToken.toUpperCase()) ){\n        newState.selectedToken = selectedToken.toUpperCase();\n        newState.tokenConfig = this.state.availableTokens[selectedToken];\n      } else if (this.state.availableStrategies && Object.keys(this.state.availableStrategies[selectedStrategy]).includes(selectedToken.toUpperCase())) {\n        newState.selectedToken = selectedToken.toUpperCase();\n        newState.tokenConfig = this.state.availableStrategies[selectedStrategy][newState.selectedToken];\n        newState.availableTokens = this.state.availableStrategies[selectedStrategy];\n      }\n    }\n\n    // console.log('setStrategyToken',newState);\n\n    await this.setState(newState,callback);\n  }\n\n  async setStrategy(selectedStrategy) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    if (selectedStrategy && selectedStrategy !== this.state.selectedStrategy && Object.keys(this.state.availableStrategies).includes(selectedStrategy.toLowerCase())){\n      selectedStrategy = selectedStrategy.toLowerCase();\n      await this.setState({\n        selectedStrategy\n      },callback);\n    } else if (!selectedStrategy) {\n      await this.setState({\n        selectedStrategy\n      },callback);\n    }\n  }\n\n  async setToken(selectedToken) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    if (selectedToken && selectedToken !== this.state.selectedToken && Object.keys(this.state.availableTokens).includes(selectedToken.toUpperCase())){\n      selectedToken = selectedToken.toUpperCase();\n      const newState = {\n        selectedToken\n      };\n      newState.tokenConfig = this.state.availableTokens[selectedToken];\n      await this.setState(newState,callback);\n    } else if(!selectedToken) {\n      await this.setState({\n        selectedToken,\n        tokenConfig:null\n      },callback);\n    }\n  }\n\n  async componentWillMount() {\n\n    this.loadUtils();\n\n    window.BNify = this.functionsUtil.BNify;\n\n    // Suppress warnings and errors in production\n    const isProduction = window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n    if (isProduction){\n      window.console.error = () => {};\n      window.console.warn = () => {};\n    }\n\n    window.jQuery = jQuery;\n\n    if (window.localStorage){\n      this.functionsUtil.removeStoredItem('context');\n\n      // Clear all localStorage data except walletProvider and connectorName if version has changed\n      const version = this.functionsUtil.getStoredItem('version',false);\n      if (version !== globalConfigs.version){\n        this.functionsUtil.clearStoredData(['walletProvider','connectorName','themeMode']);\n        this.functionsUtil.setLocalStorage('version',globalConfigs.version);\n      }\n    }\n\n    const themeMode = this.functionsUtil.getStoredItem('themeMode',false);\n    if (themeMode){\n      this.setThemeMode(themeMode);\n    }\n\n    window.closeIframe = (w) => {\n      const iFrames = document.getElementsByTagName('iframe');\n      for (let i=0;i<iFrames.length;i++){\n        const iframe = iFrames[i];\n        if (iframe.contentWindow === w){\n          window.jQuery(iframe).parents('.iframe-container')[0].remove();\n        }\n      }\n    }\n\n    window.addEventListener('resize', this.handleWindowSizeChange);\n\n    this.loadCustomAddress();\n    this.loadCurrentEnvironment();\n  }\n\n  loadCurrentEnvironment(){\n    const isLive = this.functionsUtil.checkUrlOrigin();\n    const currentEnv = isLive ? 'live' : 'beta';\n    this.setState({\n      currentEnv\n    },() => {\n      this.loadAvailableTokens();\n    })\n  }\n\n  loadCustomAddress(){\n    if (!this.state.customAddress){\n      const walletProvider = this.functionsUtil.getWalletProvider('Infura');\n      if (walletProvider === 'custom'){\n        const customAddress = this.functionsUtil.getCustomAddress();\n        if (customAddress && customAddress !== this.state.customAddress){\n          this.setState({\n            customAddress\n          });\n        }\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n\n  componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const currentSectionChanged = prevState.currentSection !== this.state.currentSection;\n    if (currentSectionChanged){\n      if (this.state.currentSection === 'landing'){\n        this.setThemeMode('light',false);\n      } else {\n        // Get stored Mode\n        const themeMode = this.functionsUtil.getStoredItem('themeMode',false) || this.functionsUtil.getGlobalConfig(['dashboard','theme','mode']);\n        this.setThemeMode(themeMode);\n      }\n    }\n\n    const tokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const strategyChanged = prevState.selectedStrategy !== this.state.selectedStrategy;\n    const networkChanged = JSON.stringify(prevState.network) !== JSON.stringify(this.state.network);\n\n    if (tokenChanged || strategyChanged || networkChanged){\n      this.loadAvailableTokens();\n    }\n  }\n\n  componentDidMount() {\n\n    // Close iFrame\n    // if (window.self !== window.top && window.top.location.href.indexOf(globalConfigs.baseURL) !== -1 && typeof window.parent.closeIframe === 'function' ){\n    //   window.parent.closeIframe(window.self);\n    // }\n\n    window.showToastMessage = this.showToastMessage;\n    window.closeToastMessage = this.closeToastMessage;\n\n    if (localStorage){\n      const connectorName = localStorage.getItem('connectorName') ? localStorage.getItem('connectorName') : 'Infura';\n      const walletProvider = localStorage.getItem('walletProvider') ? localStorage.getItem('walletProvider') : 'Infura';\n\n      this.setConnector(connectorName,walletProvider);\n    }\n  }\n\n  handleWindowSizeChange = () => {\n    const newState = {\n      width:this.state.width,\n      height:this.state.height,\n    };\n\n    const widthChanged = window.innerWidth !== this.state.width;\n    const heightChanged = window.innerHeight !== this.state.height;\n\n    if (widthChanged || heightChanged){\n      if (widthChanged){\n        newState.width = window.innerWidth;\n      }\n      if (heightChanged){\n        newState.height = window.innerHeight;\n      }\n      return this.setState(newState);\n    }\n\n    return null;\n  };\n\n  // Optional parameters to pass into RimbleWeb3\n  config = globalConfigs.network;\n\n  showRoute(route) {\n    return this.setState({ route });\n  }\n\n  closeBuyModal(e) {\n    if (e){\n      e.preventDefault();\n    }\n    return this.setState({\n      buyToken:null,\n      buyModalOpened:false\n    });\n  }\n\n  openBuyModal(e,buyToken) {\n    e.preventDefault();\n\n    return this.setState({\n      buyToken,\n      buyModalOpened:true\n    });\n  }\n\n  async logout(){\n    // Reset Custom Address\n    this.setState({\n      customAddress:null\n    });\n    // Reset Localstorage\n    this.functionsUtil.clearStoredData(['version','themeMode','lastLogin']);\n  }\n\n  setNetwork(network){\n    this.setState({\n      network\n    });\n  }\n\n  setConnector(connectorName,walletProvider){\n\n    let connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n    if (!connectorInfo && walletProvider){\n      connectorInfo = globalConfigs.connectors[walletProvider.toLowerCase()];\n    }\n\n    if ( (connectorInfo && !connectorInfo.enabled) || (connectorName !== 'Injected' && !Object.keys(globalConfigs.connectors).includes(connectorName.toLowerCase())) || (walletProvider && !Object.keys(globalConfigs.connectors).includes(walletProvider.toLowerCase()))) {\n      connectorName = 'Infura';\n      walletProvider = 'Infura';\n    } else if ( connectorName === 'Injected' ){\n      const hasMetamask = GeneralUtil.hasMetaMask();\n      const hasDapper = GeneralUtil.hasDapper()\n\n      // Check if injected connector is valid\n      switch (walletProvider){\n        case 'Metamask':\n          if (!hasMetamask && hasDapper){\n            walletProvider = 'Dapper';\n          }\n        break;\n        case 'Dapper':\n          if (!hasDapper && hasMetamask){\n            walletProvider = 'Metamask';\n          }\n        break;\n        default:\n        break;\n      }\n    }\n\n    this.functionsUtil.setLocalStorage('connectorName', connectorName);\n    this.functionsUtil.setLocalStorage('walletProvider', walletProvider);\n\n    return this.setState({\n      connectorName,\n      walletProvider\n    },() => {\n      this.loadCustomAddress();\n    });\n  }\n\n  setThemeMode(themeMode,store=true){\n    let selectedTheme = null;\n\n    // Check Dark Mode Enabled\n    const darkModeEnabled = this.functionsUtil.getGlobalConfig(['dashboard','theme','darkModeEnabled']);\n    if (themeMode === 'dark' && !darkModeEnabled){\n      themeMode = 'light';\n    }\n\n    switch (themeMode){\n      default:\n      case 'light':\n        selectedTheme = theme;\n      break;\n      case 'dark':\n        selectedTheme = themeDark;\n      break;\n    }\n\n    if (store){\n      this.functionsUtil.setLocalStorage('themeMode',themeMode);\n    }\n\n    this.setState({\n      themeMode,\n      selectedTheme\n    });\n  }\n\n  setCurrentSection(currentSection){\n    this.setState({\n      currentSection\n    });\n  }\n\n  render() {\n    const isMobile = this.state.width <= 768;\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n\n    // console.log(this.state.selectedToken,this.state.tokenConfig);\n\n    const SuspenseLoader = (\n      <Flex\n        width={1}\n        minHeight={'100vh'}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        backgroundColor={'selectBg'}\n      >\n        <FlexLoader\n          textProps={{\n            textSize:4,\n            fontWeight:2\n          }}\n          loaderProps={{\n            mb:3,\n            size:'80px',\n            color:'primary'\n          }}\n          flexProps={{\n            my:3,\n            flexDirection:'column'\n          }}\n          text={''}\n        />\n      </Flex>\n    );\n\n    return (\n      <Router>\n        <ScrollToTop />\n        <ThemeProvider\n          theme={this.state.selectedTheme}\n        >\n          <Web3Provider\n            web3Api={Web3}\n            connectors={connectors}\n            libraryName={'web3.js'}\n          >\n            <Web3Consumer>\n              {context => {\n                return (\n                  <RimbleWeb3\n                    context={context}\n                    isMobile={isMobile}\n                    config={this.config}\n                    connectors={connectors}\n                    theme={this.state.selectedTheme}\n                    cachedData={this.state.cachedData}\n                    tokenConfig={this.state.tokenConfig}\n                    setNetwork={this.setNetwork.bind(this)}\n                    customAddress={this.state.customAddress}\n                    selectedToken={this.state.selectedToken}\n                    connectorName={this.state.connectorName}\n                    walletProvider={this.state.walletProvider}\n                    setConnector={this.setConnector.bind(this)}\n                    availableTokens={this.state.availableTokens}\n                    setCachedData={this.setCachedData.bind(this)}\n                    clearCachedData={this.clearCachedData.bind(this)}\n                    callbackAfterLogin={this.state.callbackAfterLogin}\n                    availableStrategies={this.state.availableStrategies}\n                    setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                    enableUnderlyingWithdraw={this.state.enableUnderlyingWithdraw}\n                  >\n                    <RimbleWeb3.Consumer>\n                      {({\n                        web3,\n                        modals,\n                        network,\n                        account,\n                        initWeb3,\n                        simpleID,\n                        biconomy,\n                        contracts,\n                        transaction,\n                        initAccount,\n                        initContract,\n                        transactions,\n                        initSimpleID,\n                        permitClient,\n                        tokenDecimals,\n                        accountBalance,\n                        needsPreflight,\n                        validateAccount,\n                        rejectValidation,\n                        accountValidated,\n                        getTokenDecimals,\n                        getAccountBalance,\n                        accountBalanceLow,\n                        accountInizialized,\n                        accountBalanceToken,\n                        userRejectedConnect,\n                        initializeContracts,\n                        erc20ForwarderClient,\n                        rejectAccountConnect,\n                        contractsInitialized,\n                        userRejectedValidation,\n                        accountValidationPending,\n                        connectAndValidateAccount,\n                        contractMethodSendWrapper\n                      }) => {\n                        return (\n                        <Box>\n                          <Switch>\n                            <Route\n                              path=\"/dashboard/:section?/:param1?/:param2?\"\n                              render={\n                                (props) => \n                                  <Suspense\n                                    fallback={SuspenseLoader}\n                                  >\n                                    <Dashboard\n                                      {...props}\n                                      web3={web3}\n                                      modals={modals}\n                                      network={network}\n                                      context={context}\n                                      account={account}\n                                      isDashboard={true}\n                                      initWeb3={initWeb3}\n                                      biconomy={biconomy}\n                                      isMobile={isMobile}\n                                      simpleID={simpleID}\n                                      contracts={contracts}\n                                      initAccount={initAccount}\n                                      permitClient={permitClient}\n                                      initSimpleID={initSimpleID}\n                                      initContract={initContract}\n                                      transactions={transactions}\n                                      buyToken={this.state.buyToken}\n                                      logout={this.logout.bind(this)}\n                                      accountBalance={accountBalance}\n                                      themeMode={this.state.themeMode}\n                                      theme={this.state.selectedTheme}\n                                      validateAccount={validateAccount}\n                                      connecting={this.state.connecting}\n                                      cachedData={this.state.cachedData}\n                                      setToken={this.setToken.bind(this)}\n                                      accountValidated={accountValidated}\n                                      getTokenDecimals={getTokenDecimals}\n                                      rejectValidation={rejectValidation}\n                                      tokenConfig={this.state.tokenConfig}\n                                      getAccountBalance={getAccountBalance}\n                                      accountBalanceLow={accountBalanceLow}\n                                      accountInizialized={accountInizialized}\n                                      selectedToken={this.state.selectedToken}\n                                      connectorName={this.state.connectorName}\n                                      setStrategy={this.setStrategy.bind(this)}\n                                      userRejectedConnect={userRejectedConnect}\n                                      accountBalanceToken={accountBalanceToken}\n                                      initializeContracts={initializeContracts}\n                                      walletProvider={this.state.walletProvider}\n                                      buyModalOpened={this.state.buyModalOpened}\n                                      erc20ForwarderClient={erc20ForwarderClient}\n                                      contractsInitialized={contractsInitialized}\n                                      openBuyModal={this.openBuyModal.bind(this)}\n                                      rejectAccountConnect={rejectAccountConnect}\n                                      handleMenuClick={this.selectTab.bind(this)}\n                                      setConnector={this.setConnector.bind(this)}\n                                      setThemeMode={this.setThemeMode.bind(this)}\n                                      availableTokens={this.state.availableTokens}\n                                      closeBuyModal={this.closeBuyModal.bind(this)}\n                                      setCachedData={this.setCachedData.bind(this)}\n                                      selectedStrategy={this.state.selectedStrategy}\n                                      userRejectedValidation={userRejectedValidation}\n                                      clearCachedData={this.clearCachedData.bind(this)}\n                                      setStrategyToken={this.setStrategyToken.bind(this)}\n                                      accountValidationPending={accountValidationPending}\n                                      availableStrategies={this.state.availableStrategies}\n                                      setCurrentSection={this.setCurrentSection.bind(this)}\n                                      connectAndValidateAccount={connectAndValidateAccount}\n                                      contractMethodSendWrapper={contractMethodSendWrapper}\n                                      setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                                    />\n                                  </Suspense>\n\n                              }\n                            >\n                            </Route>\n                            {\n                              governanceEnabled && \n                                <Route\n                                  path=\"/governance/:section?/:item_id?\"\n                                  render={\n                                    (props) =>\n                                      <Suspense\n                                        fallback={SuspenseLoader}\n                                      >\n                                        <Governance\n                                          {...props}\n                                          web3={web3}\n                                          modals={modals}\n                                          network={network}\n                                          context={context}\n                                          account={account}\n                                          initWeb3={initWeb3}\n                                          biconomy={biconomy}\n                                          isMobile={isMobile}\n                                          simpleID={simpleID}\n                                          isGovernance={true}\n                                          contracts={contracts}\n                                          initAccount={initAccount}\n                                          initSimpleID={initSimpleID}\n                                          initContract={initContract}\n                                          transactions={transactions}\n                                          buyToken={this.state.buyToken}\n                                          logout={this.logout.bind(this)}\n                                          accountBalance={accountBalance}\n                                          themeMode={this.state.themeMode}\n                                          theme={this.state.selectedTheme}\n                                          validateAccount={validateAccount}\n                                          connecting={this.state.connecting}\n                                          cachedData={this.state.cachedData}\n                                          setToken={this.setToken.bind(this)}\n                                          accountValidated={accountValidated}\n                                          getTokenDecimals={getTokenDecimals}\n                                          rejectValidation={rejectValidation}\n                                          tokenConfig={this.state.tokenConfig}\n                                          getAccountBalance={getAccountBalance}\n                                          accountBalanceLow={accountBalanceLow}\n                                          accountInizialized={accountInizialized}\n                                          selectedToken={this.state.selectedToken}\n                                          connectorName={this.state.connectorName}\n                                          setStrategy={this.setStrategy.bind(this)}\n                                          userRejectedConnect={userRejectedConnect}\n                                          accountBalanceToken={accountBalanceToken}\n                                          initializeContracts={initializeContracts}\n                                          walletProvider={this.state.walletProvider}\n                                          buyModalOpened={this.state.buyModalOpened}\n                                          contractsInitialized={contractsInitialized}\n                                          openBuyModal={this.openBuyModal.bind(this)}\n                                          rejectAccountConnect={rejectAccountConnect}\n                                          handleMenuClick={this.selectTab.bind(this)}\n                                          setConnector={this.setConnector.bind(this)}\n                                          setThemeMode={this.setThemeMode.bind(this)}\n                                          availableTokens={this.state.availableTokens}\n                                          closeBuyModal={this.closeBuyModal.bind(this)}\n                                          setCachedData={this.setCachedData.bind(this)}\n                                          selectedStrategy={this.state.selectedStrategy}\n                                          userRejectedValidation={userRejectedValidation}\n                                          clearCachedData={this.clearCachedData.bind(this)}\n                                          setStrategyToken={this.setStrategyToken.bind(this)}\n                                          accountValidationPending={accountValidationPending}\n                                          availableStrategies={this.state.availableStrategies}\n                                          setCurrentSection={this.setCurrentSection.bind(this)}\n                                          connectAndValidateAccount={connectAndValidateAccount}\n                                          contractMethodSendWrapper={contractMethodSendWrapper}\n                                          setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                                        />\n                                      </Suspense>\n                                  }\n                                >\n                                </Route>\n                            }\n                            <Route>\n                              <Header\n                                modals={modals}\n                                network={network}\n                                context={context}\n                                account={account}\n                                initWeb3={initWeb3}\n                                isMobile={isMobile}\n                                contracts={contracts}\n                                initAccount={initAccount}\n                                initContract={initContract}\n                                buyToken={this.state.buyToken}\n                                accountBalance={accountBalance}\n                                logout={this.logout.bind(this)}\n                                validateAccount={validateAccount}\n                                connecting={this.state.connecting}\n                                accountValidated={accountValidated}\n                                getTokenDecimals={getTokenDecimals}\n                                rejectValidation={rejectValidation}\n                                tokenConfig={this.state.tokenConfig}\n                                getAccountBalance={getAccountBalance}\n                                accountBalanceLow={accountBalanceLow}\n                                selectedToken={this.state.selectedToken}\n                                connectorName={this.state.connectorName}\n                                userRejectedConnect={userRejectedConnect}\n                                accountBalanceToken={accountBalanceToken}\n                                walletProvider={this.state.walletProvider}\n                                buyModalOpened={this.state.buyModalOpened}\n                                contractsInitialized={contractsInitialized}\n                                openBuyModal={this.openBuyModal.bind(this)}\n                                rejectAccountConnect={rejectAccountConnect}\n                                handleMenuClick={this.selectTab.bind(this)}\n                                setConnector={this.setConnector.bind(this)}\n                                availableTokens={this.state.availableTokens}\n                                closeBuyModal={this.closeBuyModal.bind(this)}\n                                userRejectedValidation={userRejectedValidation}\n                                accountValidationPending={accountValidationPending}\n                                connectAndValidateAccount={connectAndValidateAccount}\n                                setToken={ e => { this.setToken(e) } }\n                              />\n\n                              {this.state.route === \"onboarding\" ? (\n                                <Web3Debugger\n                                  web3={web3}\n                                  account={account}\n                                  accountBalance={accountBalance}\n                                  accountBalanceToken={accountBalanceToken}\n                                  accountBalanceLow={accountBalanceLow}\n                                  initAccount={initAccount}\n                                  rejectAccountConnect={rejectAccountConnect}\n                                  userRejectedConnect={userRejectedConnect}\n                                  accountValidated={accountValidated}\n                                  accountValidationPending={accountValidationPending}\n                                  rejectValidation={rejectValidation}\n                                  userRejectedValidation={userRejectedValidation}\n                                  validateAccount={validateAccount}\n                                  connectAndValidateAccount={connectAndValidateAccount}\n                                  modals={modals}\n                                  network={network}\n                                  transaction={transaction}\n                                />\n                              ) : null}\n\n                              {this.state.route === \"default\" ? (\n                                <Switch>\n                                  <Route exact path=\"/\"\n                                    render={ (props) =>\n                                      <Suspense\n                                        fallback={SuspenseLoader}\n                                      >\n                                        <Landing\n                                          {...props}\n                                          web3={web3}\n                                          network={network}\n                                          account={account}\n                                          isMobile={isMobile}\n                                          simpleID={simpleID}\n                                          contracts={contracts}\n                                          initContract={initContract}\n                                          innerWidth={this.state.width}\n                                          logout={this.logout.bind(this)}\n                                          innerHeight={this.state.height}\n                                          accountBalance={accountBalance}\n                                          themeMode={this.state.themeMode}\n                                          theme={this.state.selectedTheme}\n                                          cachedData={this.state.cachedData}\n                                          connecting={this.state.connecting}\n                                          selectedTab={this.state.selectedTab}\n                                          tokenConfig={this.state.tokenConfig}\n                                          accountBalanceLow={accountBalanceLow}\n                                          getAccountBalance={getAccountBalance}\n                                          customAddress={this.state.customAddress}\n                                          selectedToken={this.state.selectedToken}\n                                          accountBalanceToken={accountBalanceToken}\n                                          closeToastMessage={this.closeToastMessage}\n                                          contractsInitialized={contractsInitialized}\n                                          openBuyModal={this.openBuyModal.bind(this)}\n                                          setThemeMode={this.setThemeMode.bind(this)}\n                                          processCustomParam={this.processCustomParam}\n                                          availableTokens={this.state.availableTokens}\n                                          setCachedData={this.setCachedData.bind(this)}\n                                          updateSelectedTab={this.selectTab.bind(this)}\n                                          toastMessageProps={this.state.toastMessageProps}\n                                          clearCachedData={this.clearCachedData.bind(this)}\n                                          availableStrategies={this.state.availableStrategies}\n                                          setCurrentSection={this.setCurrentSection.bind(this)}\n                                          connectAndValidateAccount={connectAndValidateAccount}\n                                          setToken={ e => { this.setToken(e) } }\n                                        />\n                                        <CookieConsent\n                                          expires={365}\n                                          buttonText={\"Ok\"}\n                                          location={\"bottom\"}\n                                          acceptOnScroll={true}\n                                          cookieName={\"cookieAccepted\"}\n                                          acceptOnScrollPercentage={5}\n                                          style={{background: \"rgba(255,255,255,0.95)\",zIndex:'9999999'}}\n                                          buttonStyle={{display: isMobile ? \"block\" : \"none\", backgroundColor:'#0036ff', color: 'white', marginTop: isMobile ? \"0px\" : \"15px\"}}\n                                        >\n                                          <Flex flexDirection={'row'} alignItems={['flex-start','center']} justifyContent={'flex-start'} maxHeight={['150px','initial']} style={ isMobile ? {overflowY:'scroll'} : null }>\n                                            <Image display={['none','block']} src={'images/cookie.svg'} width={'42px'} height={'42px'} />\n                                            <Text pl={[0,3]} color={'dark-gray'} fontSize={1} textAlign={'justify'}>\n                                              This website or its third-party tools process personal data (e.g. browsing data or IP addresses) and use cookies or other identifiers, which are necessary for its functioning and required to achieve the purposes illustrated in the cookie policy. To learn more, please refer to the <Link href={'https://www.iubenda.com/privacy-policy/61211749/cookie-policy'} target={'_blank'} rel=\"nofollow noopener noreferrer\" hoverColor={'blue'}>cookie policy</Link>.\n                                              You accept the use of cookies or other identifiers by closing or dismissing this notice, by scrolling this page, by clicking a link or button or by continuing to browse otherwise.\n                                            </Text>\n                                          </Flex>\n                                        </CookieConsent>\n                                      </Suspense>\n                                    }\n                                  ></Route>\n                                  <Route exact path=\"/terms-of-service\">\n                                    <Tos />\n                                  </Route>\n                                  <Route>\n                                    <PageNotFound />\n                                  </Route>\n                                </Switch>\n                              ) : null}\n                            </Route>\n                          </Switch>\n                          <TransactionToastUtil\n                            transactions={transactions}\n                            themeMode={this.state.themeMode}\n                          />\n                        </Box>\n                      )}}\n                    </RimbleWeb3.Consumer>\n                  </RimbleWeb3>\n                );\n              }}\n            </Web3Consumer>\n          </Web3Provider>\n        </ThemeProvider>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport * as Sentry from '@sentry/browser';\nimport App from './App/App';\nimport * as serviceWorker from './serviceWorker';\n\nif (window.location.hostname !== 'localhost') {\n  Sentry.init({\n    dsn: \"https://56f5c0bce273442390d7f25698fefe53@sentry.io/1547544\",\n    beforeSend(event, hint) {\n      let output = event;\n      const error = hint.originalException;\n      if (error && error.message){\n        if (error.message.match(/Failed to subscribe to new newBlockHeaders/i)){\n          output = false;\n        }\n      }\n      return output;\n    }\n  });\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass TableRow extends Component {\n  render() {\n    const FieldComponent = this.props.fieldComponent;\n    const isInteractive = typeof this.props.handleClick === 'function';\n    return (\n      <DashboardCard\n        cardProps={{\n          mb:2,\n          width:1,\n          px:[2,4],\n          py:[2,'12px']\n        }}\n        id={this.props.cardId}\n        {...this.props.rowProps}\n        className={this.props.token}\n        isInteractive={isInteractive}\n        handleClick={ isInteractive ? e => this.props.handleClick(this.props) : null }\n      >\n        <Flex\n          flexDirection={'row'}\n          id={this.props.rowId}\n        >\n          {\n            this.props.cols.map((colInfo,colIndex) => {\n              if (colInfo.visible === false || (colInfo.mobile === false && this.props.isMobile)){\n                return null;\n              }\n              return (\n                <Flex\n                  key={`col-${colIndex}`}\n                  {...colInfo.props}\n                >\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    {...colInfo.parentProps}\n                  >\n                    {\n                      colInfo.fields.map((fieldInfo,fieldIndex) => {\n                        if (fieldInfo.visible === false || (fieldInfo.mobile === false && this.props.isMobile)){\n                          return null;\n                        }\n                        return (\n                          <Flex\n                            height={'100%'}\n                            flexDirection={'column'}\n                            alignItems={'flex-start'}\n                            justifyContent={'center'}\n                            {...fieldInfo.parentProps}\n                            style={fieldInfo.style || {\n                              overflow:'hidden'\n                            }}\n                            width={colInfo.fields.length>1 ? 'auto' : 1}\n                            id={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                            key={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                          >\n                            <FieldComponent\n                              {...this.props}\n                              fieldInfo={fieldInfo}\n                              colProps={colInfo.props}\n                              parentId={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                            />\n                          </Flex>\n                        );\n                      })\n                    }\n                  </Flex>\n                </Flex>\n              )\n            })\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default TableRow;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableCellHeader from '../TableCellHeader/TableCellHeader';\n\nclass TableHeader extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        px={[2,4]}\n        pb={[2,3]}\n        flexDirection={'row'}\n      >\n        {\n          this.props.cols.map((colInfo,colIndex) => {\n            // Skip non-mobile columns\n            if (colInfo.visible === false || (colInfo.mobile === false && this.props.isMobile)){\n              return null;\n            }\n\n            return (colInfo.title && colInfo.title.length) ? (\n              <TableCellHeader\n                {...this.props}\n                {...colInfo.props}\n                desc={colInfo.desc}\n                title={colInfo.title}\n                key={`col-header-${colIndex}`}\n              >\n                {colInfo.title}\n              </TableCellHeader>\n            ) : (\n              <Flex key={`col-header-${colIndex}`} {...colInfo.props}></Flex>\n            )\n          })\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TableHeader;\n","import React, { Component } from 'react';\nimport styles from './Migrate.module.scss';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport TransactionField from '../TransactionField/TransactionField';\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\nimport { Box, Flex, Text, Icon, Checkbox, Input, Link, Image } from \"rimble-ui\";\n\nclass Migrate extends Component {\n\n  state = {\n    nonce:0,\n    loading:true,\n    action:'migrate',\n    processing:{\n      approve:{\n        txHash:null,\n        loading:false\n      },\n      migrate:{\n        txHash:null,\n        loading:false\n      },\n      redeem:{\n        txHash:null,\n        loading:false\n      }\n    },\n    inputValue:{},\n    usePermit:false,\n    oldTokenName:null,\n    oldIdleTokens:null,\n    skipMigration:false,\n    buttonDisabled:true,\n    migrationEnabled:null,\n    fastBalanceSelector:{},\n    oldContractBalance:null,\n    biconomyLimitReached:false,\n    metaTransactionsEnabled:true,\n    oldContractTokenDecimals:null,\n    migrationContractApproved:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  setAction = (action) => {\n    if (action !== null){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  toggleSkipMigration = (skipMigration) => {\n    this.setState({\n      skipMigration\n    });\n\n    if (typeof this.props.toggleSkipMigration === 'function'){\n      this.props.toggleSkipMigration(skipMigration);\n    }\n  }\n\n  changeInputValue = (e) => {\n    if (!this.state.action){\n      return false;\n    }\n    const amount = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: null\n      },\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  checkButtonDisabled = (amount=null) => {\n    if (!this.state.action){\n      return false;\n    }\n    if (!amount){\n      amount = this.state.inputValue[this.state.action];\n    }\n    let buttonDisabled = true;\n    if (amount){\n      buttonDisabled = amount.lte(0);\n      switch (this.state.action){\n        case 'migrate':\n        case 'redeem':\n          buttonDisabled = buttonDisabled || amount.gt(this.state.oldIdleTokens);\n        break;\n        default:\n        break;\n      }\n    }\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  setInputValue = () => {\n    if (!this.state.action || this.state.fastBalanceSelector[this.state.action] === null){\n      return false;\n    }\n\n    let amount = null;\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector[this.state.action]).div(100);\n\n    switch(this.state.action){\n      case 'migrate':\n      case 'redeem':\n        amount = this.state.oldIdleTokens ? this.functionsUtil.BNify(this.state.oldIdleTokens).times(selectedPercentage) : null;\n      break;\n      default:\n      break;\n    }\n\n    this.setState((prevState) => ({\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  setFastBalanceSelector = (percentage) => {\n    if (!this.state.action){\n      return false;\n    }\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: percentage\n      }\n    }));\n  }\n\n  executeAction = async () => {\n\n    const inputValue = this.state.inputValue[this.state.action];\n\n    if (this.state.buttonDisabled || !inputValue || this.functionsUtil.BNify(inputValue).lte(0)){\n      return false;\n    }\n\n    const loading = true;\n\n    switch (this.state.action){\n      case 'redeem':\n\n        if (!this.props.tokenConfig.migration || !this.props.tokenConfig.migration.oldContract){\n          return false;\n        }\n\n        const oldContractName = this.props.tokenConfig.migration.oldContract.name;\n\n        const idleTokenToRedeem = this.functionsUtil.normalizeTokenAmount(inputValue,18);\n\n        // Get amounts for best allocations\n        const _skipRebalance = true;\n        let paramsForRedeem = null;\n\n        /*\n        if (this.props.account){\n          const callParams = { from: this.props.account, gas: this.props.web3.utils.toBN(5000000) };\n          paramsForRedeem = await this.functionsUtil.genericContractCall(oldContractName,'getParamsForRedeemIdleToken',[idleTokenToRedeem, _skipRebalance],callParams);\n        }\n        */\n\n        const _clientProtocolAmountsRedeem = paramsForRedeem && paramsForRedeem.length ? paramsForRedeem[1] : [];\n        const gasLimitRedeem = _clientProtocolAmountsRedeem.length && _clientProtocolAmountsRedeem.indexOf('0') === -1 ? this.functionsUtil.BNify(1500000) : this.functionsUtil.BNify(1000000);\n\n        const callbackRedeem = (tx,error) => {\n          const txSucceeded = tx.status === 'success';\n\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: `Redeem_old`,\n            eventAction: this.props.selectedToken,\n            eventLabel: tx.status,\n            eventValue: parseInt(inputValue)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (txSucceeded){\n            this.setState((prevState) => ({\n              inputValue:{\n                ...prevState.inputValue,\n                [this.state.action]: this.functionsUtil.BNify(0)\n              }\n            }));\n          }\n        };\n\n        const callbackReceiptRedeem = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                ...prevState.processing[this.state.action],\n                txHash\n              }\n            }\n          }));\n        };\n\n        this.props.contractMethodSendWrapper(oldContractName, 'redeemIdleToken', [\n          idleTokenToRedeem, _skipRebalance, _clientProtocolAmountsRedeem\n        ], null, callbackRedeem, callbackReceiptRedeem, gasLimitRedeem);\n      break;\n      default:\n      break;\n    }\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        [this.state.action]:{\n          ...prevState.processing[this.state.action],\n          loading\n        }\n      }\n    }));\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n    this.checkMigration();\n  }\n\n  componentDidMount(){\n    \n  }\n\n  componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const biconomyChanged = prevProps.biconomy !== this.props.biconomy;\n    const usePermitChanged = prevProps.usePermit !== this.props.usePermit;\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken || (!prevProps.tokenConfig && this.props.tokenConfig);\n\n    if (tokenChanged || accountChanged || biconomyChanged || usePermitChanged){\n      this.checkMigration();\n    }\n\n    const actionChanged = this.state.action !== prevState.action;\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector[this.state.action] !== prevState.fastBalanceSelector[this.state.action];\n    if (actionChanged || fastBalanceSelectorChanged){\n      this.setInputValue();\n    }\n\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue;\n    if (inputValueChanged){\n      this.checkButtonDisabled();\n    }\n\n    const contractApprovedChanged = prevState.migrationContractApproved !== this.state.migrationContractApproved;\n    if (contractApprovedChanged){\n      // console.log(this.props.selectedToken,'contractApprovedChanged',this.state.migrationContractApproved);\n      if (typeof this.props.callbackApprove === 'function'){\n        this.props.callbackApprove(this.state.migrationContractApproved);\n      }\n    }\n  }\n\n  toggleMetaTransactionsEnabled = (metaTransactionsEnabled) => {\n    this.setState({\n      metaTransactionsEnabled\n    });\n  }\n\n  checkMigrationContractApproved = async () => {\n    if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.migrationContract){\n      const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n      const migrationContractName = migrationContractInfo.name;\n      const migrationContract = this.functionsUtil.getContractByName(migrationContractName);\n      if (migrationContract){\n        const oldContractName = this.props.tokenConfig.migration.oldContract.name;\n        const tokenApproved = await this.functionsUtil.checkTokenApproved(oldContractName,migrationContractInfo.address,this.props.account);\n        return tokenApproved;\n      }\n    }\n    return false;\n  }\n\n  checkMigration = async () => {\n\n    if (!this.props.tokenConfig || !this.props.account){\n      return false;\n    }\n\n    let loading = true;\n    this.setState({\n      loading,\n      processing:{\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        migrate:{\n          txHash:null,\n          loading:false\n        },\n        redeem:{\n          txHash:null,\n          loading:false\n        }\n      },\n    });\n\n    let migrationEnabled = false;\n    let oldTokenName = 'idleTokens';\n    let oldIdleTokensConverted = null;\n    let oldContractTokenDecimals = null;\n    let migrationContractApproved = false;\n    let oldTokenPrice = this.functionsUtil.BNify(0);\n    let oldIdleTokens = this.functionsUtil.BNify(0);\n    let oldContractBalance = this.functionsUtil.BNify(0);\n    const getTokenPrice = this.props.getTokenPrice !== undefined ? this.props.getTokenPrice : true;\n\n    // Check migration contract enabled and balance\n    if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.enabled){\n      const oldContractInfo = this.props.tokenConfig.migration.oldContract;\n      const oldContractABI = oldContractInfo.abi;\n      const oldContractName = oldContractInfo.name;\n      let oldContract = this.functionsUtil.getContractByName(oldContractName);\n\n      // Initialize contract\n      if (!oldContract && oldContractABI){\n        oldContract = await this.props.initContract(oldContractName,oldContractInfo.address,oldContractABI);\n      }\n\n      let migrationContract = this.functionsUtil.getContractByName(this.props.tokenConfig.migration.migrationContract.name);\n\n      if (!migrationContract && this.props.tokenConfig.migration.migrationContract.abi){\n        migrationContract = await this.props.initContract(this.props.tokenConfig.migration.migrationContract.name,this.props.tokenConfig.migration.migrationContract.address,this.props.tokenConfig.migration.migrationContract.abi);\n      }\n\n      if (oldContract && migrationContract){\n\n        oldTokenName = this.props.tokenConfig.migration.oldContract.token;\n\n        [\n          oldContractTokenDecimals,\n          migrationContractApproved,\n          oldContractBalance,\n          oldTokenPrice,\n        ] = await Promise.all([\n          // Get old contract token decimals\n          this.functionsUtil.getTokenDecimals(oldContractName),\n          // Check migration contract approval\n          this.checkMigrationContractApproved(),\n          // Check old contractBalance\n          this.functionsUtil.getContractBalance(oldContractName,this.props.account),\n          // Get token price\n          (getTokenPrice ? this.functionsUtil.genericContractCall(oldContractName,'tokenPrice') : null)\n        ]);\n\n        // console.log('Migration',oldContractName,migrationContractApproved,this.props.selectedToken,oldContractBalance ? oldContractBalance.toString() : null,oldTokenPrice ? oldTokenPrice.toString() : null);\n\n        if (oldContractBalance){\n          // Convert old idleTokens\n          oldIdleTokens = this.functionsUtil.fixTokenDecimals(oldContractBalance,oldContractTokenDecimals);\n          if (oldTokenPrice){\n            oldTokenPrice = this.functionsUtil.fixTokenDecimals(oldTokenPrice,this.props.tokenConfig.decimals);\n            oldIdleTokensConverted = this.functionsUtil.BNify(oldIdleTokens).times(this.functionsUtil.BNify(oldTokenPrice));\n          }\n          // Enable migration if old contract balance if greater than 0\n          migrationEnabled = this.functionsUtil.BNify(oldContractBalance).gt(0);\n        }\n      }\n    }\n    \n    loading = false;\n\n    // If use Permit don't ask for Approve\n    const usePermit = this.props.usePermit;\n\n    const newState = {\n      loading,\n      usePermit,\n      oldTokenName,\n      oldIdleTokens,\n      migrationEnabled,\n      oldContractBalance,\n      oldIdleTokensConverted,\n      oldContractTokenDecimals,\n      migrationContractApproved\n    };\n\n    if (this.props.biconomy){\n      const biconomyLimits = await this.functionsUtil.checkBiconomyLimits(this.props.account);\n      if (biconomyLimits && !biconomyLimits.allowed){\n        newState.biconomyLimitReached = true;\n      }\n    }\n\n    if (typeof this.props.migrationEnabledCallback === 'function'){\n      this.props.migrationEnabledCallback(migrationEnabled);\n    }\n\n    // console.log('checkMigration',this.props.selectedToken,'usePermit',this.props.usePermit,'migrationContractApproved',newState.migrationContractApproved);\n\n    // Set migration contract balance\n    return this.setState(newState);\n  }\n\n  disapproveMigration = async (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n      this.disableERC20(null,this.props.tokenConfig.migration.oldContract.name,migrationContractInfo.address);\n    }\n  }\n\n  cancelTransaction = async () => {\n    this.setState({\n      processing: {\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        migrate:{\n          txHash:null,\n          loading:false\n        },\n        redeem:{\n          txHash:null,\n          loading:false\n        }\n      },\n    });\n  }\n\n  approveMigration = async (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n\n      // Check if the migration contract is approved\n      const migrationContractApproved = await this.checkMigrationContractApproved();\n\n      if (!migrationContractApproved){\n\n        const callbackApprove = (tx,error) => {\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: 'Migrate',\n            eventAction: 'approve',\n            eventLabel: tx ? tx.status : null\n          };\n\n          const txSucceeded = tx && tx.status === 'success';\n\n          // console.log('callbackApprove',tx,error);\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            migrationContractApproved: txSucceeded, // True\n            processing: {\n              ...prevState.processing,\n              approve:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (typeof this.props.callbackApprove === 'function' && txSucceeded){\n            this.props.callbackApprove(tx);\n          }\n\n          this.checkMigration();\n        };\n\n        const callbackReceiptApprove = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              approve:{\n                ...prevState.processing.approve,\n                txHash\n              }\n            }\n          }));\n        };\n\n        this.functionsUtil.enableERC20(this.props.tokenConfig.migration.oldContract.name,migrationContractInfo.address,callbackApprove,callbackReceiptApprove);\n\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            approve:{\n              txHash:null,\n              loading:true\n            }\n          },\n          migrationContractApproved:false\n        }));\n      } else {\n        this.setState({\n          migrationContractApproved:true\n        });\n      }\n    }\n  }\n\n  migrate = async (e,migrationMethod) => {\n    e.preventDefault();\n\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n\n      // Check if the migration contract is approved\n      // const migrationContractApproved = await this.checkMigrationContractApproved();\n\n      // if (!migrationContractApproved){\n      //   return this.approveMigration();\n      // } else {\n        const callbackMigrate = (tx,error) => {\n\n          if (!error && tx && tx.status === 'error'){\n            error = {\n              message:'Unknown error'\n            };\n          } else if (!tx && error){\n            tx = {\n              status:'error'\n            };\n          }\n\n          const txSucceeded = tx && tx.status === 'success';\n\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: 'Migrate',\n            eventAction: migrationMethod,\n            eventLabel: tx ? tx.status : null,\n            eventValue: parseInt(oldIdleTokens)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          // console.log('callbackMigrate',tx,tx.status,txSucceeded,error,this.props.migrationCallback);\n\n          if (txSucceeded){\n            // Toast message\n            window.toastProvider.addMessage(`Migration completed`, {\n              secondaryMessage: `Your funds has been migrated`,\n              colorTheme: 'light',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"success\",\n            });\n\n            if (this.props.migrationCallback && typeof this.props.migrationCallback === 'function'){\n              this.props.migrationCallback(tx);\n            }\n\n          } else { // Show migration error toast only for real error\n            window.toastProvider.addMessage(`Migration error`, {\n              secondaryMessage: `The migration has failed, try again...`,\n              colorTheme: 'light',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"failure\",\n            });\n\n            // Check migration if failed\n            this.checkMigration();\n          }\n\n          this.setState((prevState) => ({\n            migrationEnabled:txSucceeded ? false : true,\n            processing: {\n              ...prevState.processing,\n              migrate:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n        }\n\n        const callbackReceiptMigrate = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              migrate:{\n                ...prevState.processing.migrate,\n                txHash\n              }\n            }\n          }));\n        };\n\n        const callbackPermit = () => {\n          if (typeof this.props.callbackPermit === 'function'){\n            this.props.callbackPermit();\n          }\n        }\n\n        const useMetaTx = this.props.biconomy && this.state.metaTransactionsEnabled && !this.state.biconomyLimitReached;\n\n        // Call migration contract function to migrate funds\n        const oldIdleTokens = this.state.oldIdleTokens;\n        const toMigrate = this.props.showBalanceSelector ? this.functionsUtil.integerValue(this.functionsUtil.normalizeTokenAmount(this.state.inputValue[this.state.action],this.state.oldContractTokenDecimals)) : this.functionsUtil.integerValue(this.state.oldContractBalance);\n        // const toMigrate =  this.functionsUtil.normalizeTokenAmount('1',this.state.oldContractTokenDecimals).toString(); // TEST AMOUNT\n\n        let _skipRebalance = typeof this.props.tokenConfig.skipMintForDeposit !== 'undefined' ? this.props.tokenConfig.skipMintForDeposit : this.functionsUtil.getGlobalConfig(['contract','methods','migrate','skipRebalance']);\n\n        // Mint if someone mint over X amount\n        let minAmountForRebalance = null;\n        \n        if (_skipRebalance){\n\n          // Check if the amount is over a certain amount to rebalance the pool\n          if (useMetaTx){\n            minAmountForRebalance = this.functionsUtil.getGlobalConfig(['contract','methods','migrate','minAmountForRebalanceMetaTx']);\n          } else {\n            minAmountForRebalance = this.functionsUtil.getGlobalConfig(['contract','methods','migrate','minAmountForRebalance']);\n          }\n\n          if (minAmountForRebalance){\n            const amountToDeposit = await this.functionsUtil.convertTokenBalance(oldIdleTokens,this.props.selectedToken,this.props.tokenConfig,false);\n            if (amountToDeposit.gte(this.functionsUtil.BNify(minAmountForRebalance))){\n              _skipRebalance = false;\n            }\n          }\n        }\n\n        let migrationParams = this.props.migrationParams ? this.props.migrationParams : [toMigrate,this.props.tokenConfig.migration.oldContract.address,this.props.tokenConfig.idle.address,this.props.tokenConfig.address,_skipRebalance];\n\n        if (typeof migrationParams === 'function'){\n          migrationParams = migrationParams(toMigrate);\n        }\n\n        // Check if Biconomy is enabled\n        if (useMetaTx){\n          const functionSignature = migrationContract.methods[migrationMethod](...migrationParams).encodeABI();\n          this.functionsUtil.sendBiconomyTxWithPersonalSign(migrationContractInfo.name, functionSignature, callbackMigrate, callbackReceiptMigrate);\n          // this.functionsUtil.sendBiconomyTx(migrationContractInfo.name, migrationContractInfo.address, functionSignature, callbackMigrate, callbackReceiptMigrate);\n        } else {\n          const permitContract = this.functionsUtil.getContractByName(this.props.tokenConfig.name);\n          const functionInfo = migrationContractInfo.functions.find( f => f.name === migrationMethod );\n          if (this.props.usePermit && permitContract){\n            this.functionsUtil.sendTxWithPermit(this.props.tokenConfig.name, this.props.account, migrationContractInfo.name, functionInfo.permitName, migrationParams, callbackMigrate, callbackReceiptMigrate, callbackPermit);\n          } else {\n            // Send migration tx\n            this.functionsUtil.contractMethodSendWrapper(migrationContractInfo.name, migrationMethod, migrationParams, callbackMigrate, callbackReceiptMigrate);\n          }\n        }\n\n        // debugger;\n\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            migrate:{\n              txHash:null,\n              loading:true\n            }\n          }\n        }));\n      // }\n    }\n\n    return false;\n  }\n\n  render() {\n\n    if (!this.props.tokenConfig || !this.props.selectedToken){\n      return null;\n    }\n\n    const contractApproved = this.props.usePermit || this.state.migrationContractApproved;\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationEnabled = batchMigrationInfo.enabled && typeof batchMigrationInfo.props.availableTokens[this.props.tokenConfig.idle.token] !== 'undefined';\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    // console.log('contractApproved',contractApproved,this.props.usePermit,this.state.migrationContractApproved);\n\n    const SkipMigrationComponent = (props) => (\n      <DashboardCard\n        cardProps={{\n          pt:2,\n          pb:3,\n          px:2,\n          mb:2,\n          display:'flex',\n          alignItems:'center',\n          flexDirection:'column',\n          justifyContent:'center',\n          mt:this.state.skipMigration ? 3 : 2,\n        }}\n      >\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Icon\n            size={'1.8em'}\n            color={'cellText'}\n            name={'FastForward'}\n          />\n        </Flex>\n        <Checkbox\n          required={false}\n          checked={this.state.skipMigration}\n          label={`Skip migration and deposit in Idle v4`}\n          onChange={ e => this.toggleSkipMigration(e.target.checked) }\n        />\n      </DashboardCard>\n    );\n\n    const biconomyEnabled = this.functionsUtil.getGlobalConfig(['network','providers','biconomy','enabled']) && !this.state.biconomyLimitReached;\n\n    return (\n      this.state.loading && this.props.account ? (\n        <DashboardCard\n          cardProps={{\n            p:3,\n            mt:3,\n            minHeight:'195px',\n            style:{\n              display:'flex',\n              alignItems:'center',\n              justifyContent:'center'\n            }\n          }}\n        >\n          <FlexLoader\n            flexProps={{\n              flexDirection:'row'\n            }}\n            loaderProps={{\n              size:'30px'\n            }}\n            textProps={{\n              ml:2\n            }}\n            text={'Checking migration...'}\n          />\n        </DashboardCard>\n      ) : (\n        (this.state.migrationEnabled && !this.state.skipMigration) ? (\n          <Box width={1}>\n            {\n              !this.props.isMigrationTool &&\n              <Flex\n                mt={3}\n                flexDirection={'column'}\n              >\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  >\n                    <Icon\n                      size={'2.3em'}\n                      color={'cellText'}\n                      name={ this.props.isMigrationTool ? 'SwapHoriz' : 'Warning' }\n                    />\n                    <Text\n                      mt={1}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      { this.props.migrateTextBefore !== null ? this.props.migrateTextBefore : null }\n                      { this.props.migrateTextBefore !== null &&\n                        <br />\n                      }\n                      You { !this.props.isMigrationTool ? 'still' : '' } have <strong>{this.state.oldIdleTokens.toFixed(4)} {this.state.oldTokenName} {this.state.oldIdleTokensConverted ? `(${this.state.oldIdleTokensConverted.toFixed(4)} ${this.props.selectedToken})` : ''}</strong> to migrate.<br />\n                      { this.props.migrateText !== null ? this.props.migrateText : 'Please use the section below to migrate or redeem your old tokens.' }\n                    </Text>\n                  </Flex>\n                </DashboardCard>\n              </Flex>\n            }\n            {\n              (this.props.showActions === undefined || this.props.showActions) && \n                <Flex\n                  mt={2}\n                  flexDirection={'column'}\n                >\n                  {\n                    !this.props.isMigrationTool && \n                      <SkipMigrationComponent />\n                  }\n                  <Text mb={2}>\n                    Choose the action:\n                  </Text>\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'space-between'}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        width:0.48,\n                        onMouseDown:() => {\n                          this.setAction('migrate');\n                        }\n                      }}\n                      isInteractive={true}\n                      isActive={ this.state.action === 'migrate' }\n                    >\n                      <Flex\n                        my={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <TransactionField\n                          transaction={{\n                            action:'migrate'\n                          }}\n                          fieldInfo={{\n                            name:'icon',\n                            props:{\n                              mr:3\n                            }\n                          }}\n                        />\n                        <Text\n                          fontSize={3}\n                          fontWeight={3}\n                        >\n                          Migrate\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        width:0.48,\n                        onMouseDown:() => {\n                          this.setAction('redeem');\n                        }\n                      }}\n                      isInteractive={true}\n                      isActive={ this.state.action === 'redeem' }\n                    >\n                      <Flex\n                        my={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <TransactionField\n                          transaction={{\n                            action:'redeem'\n                          }}\n                          fieldInfo={{\n                            name:'icon',\n                            props:{\n                              mr:3\n                            }\n                          }}\n                        />\n                        <Text\n                          fontSize={3}\n                          fontWeight={3}\n                        >\n                          Redeem\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                </Flex>\n            }\n            {\n              this.state.action === 'migrate' ? (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  flexDirection={'column'}\n                >\n                  {\n                    (batchMigrationEnabled && batchMigrationDepositEnabled && !this.props.isMigrationTool) &&\n                      <Flex\n                        mb={3}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <Link\n                          textAlign={'center'}\n                          hoverColor={'primary'}\n                          href={`/#/dashboard/tools/${batchMigrationInfo.route}/${this.props.tokenConfig.idle.token}`}\n                        >\n                          Gas fees too high? Save gas with our Batch Migrator!\n                        </Link>\n                        <Icon\n                          ml={1}\n                          size={'1em'}\n                          color={'primary'}\n                          name={'LocalGasStation'}\n                        />\n                      </Flex>\n                  }\n                  {\n                    contractApproved ? (\n                      this.state.processing.migrate.loading ? (\n                        <Flex\n                          mt={3}\n                          flexDirection={'column'}\n                        >\n                          <TxProgressBar\n                            {...this.props}\n                            hash={this.state.processing.migrate.txHash}\n                            endMessage={`Finalizing migration request...`}\n                            cancelTransaction={this.cancelTransaction.bind(this)}\n                            waitText={ this.props.waitText ? this.props.waitText : 'Migration estimated in'}\n                            sendingMessage={ this.props.biconomy && this.state.metaTransactionsEnabled ? 'Sending meta-transaction...' : 'Sending transaction...' }\n                          />\n                        </Flex>\n                      ) : this.props.showBalanceSelector ? (\n                        <Flex\n                          mt={1}\n                          flexDirection={'column'}\n                        >\n                          <Flex\n                            mb={3}\n                            width={1}\n                            flexDirection={'column'}\n                          >\n                            <Flex\n                              mb={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={this.props.balanceSelectorInfo ? 'space-between' : 'flex-end'}\n                            >\n                              {\n                                this.props.balanceSelectorInfo && (\n                                  <Flex\n                                    width={1}\n                                    maxWidth={'50%'}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                  >\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      textAlign={'left'}\n                                      style={{\n                                        maxWidth:'100%',\n                                        overflow:'hidden',\n                                        whiteSpace:'nowrap',\n                                        textOverflow:'ellipsis'\n                                      }}\n                                      color={this.props.balanceSelectorInfo.color ? this.props.balanceSelectorInfo.color : 'copyColor'}\n                                    >\n                                      {this.props.balanceSelectorInfo.text}\n                                    </Text>\n                                  </Flex>\n                                )\n                              }\n                              {\n                                this.state.oldIdleTokens && (\n                                  <Flex\n                                    width={1}\n                                    maxWidth={'50%'}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'flex-end'}\n                                  >\n                                    <Link\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      color={'dark-gray'}\n                                      textAlign={'right'}\n                                      hoverColor={'copyColor'}\n                                      onClick={ (e) => this.setFastBalanceSelector(100) }\n                                    >\n                                      Balance: {this.state.oldIdleTokens.toFixed(6)} {this.props.selectedToken}\n                                    </Link>\n                                  </Flex>\n                                )\n                              }\n                            </Flex>\n                            <Input\n                              min={0}\n                              type={\"number\"}\n                              required={true}\n                              height={'3.4em'}\n                              borderRadius={2}\n                              fontWeight={500}\n                              borderColor={'cardBorder'}\n                              backgroundColor={'cardBg'}\n                              boxShadow={'none !important'}\n                              placeholder={'Insert amount'}\n                              onChange={this.changeInputValue.bind(this)}\n                              border={`1px solid ${this.props.theme.colors.divider}`}\n                              value={this.state.inputValue[this.state.action] ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]).toFixed() : ''}\n                            />\n                            <Flex\n                              mt={2}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              {\n                                [25,50,75,100].map( percentage => (\n                                  <FastBalanceSelector\n                                    percentage={percentage}\n                                    key={`selector_${percentage}`}\n                                    onMouseDown={()=>this.setFastBalanceSelector(percentage)}\n                                    isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(percentage)}\n                                  />\n                                ))\n                              }\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            mt={1}\n                            width={1}\n                            alignItems={'center'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.props.tokenConfig.migration.migrationContract.functions.map((functionInfo,i) => {\n                                const functionName = functionInfo.name;\n                                return (\n                                  <RoundButton\n                                    buttonProps={{\n                                      width:[1,0.5],\n                                      disabled:this.state.buttonDisabled,\n                                      mainColor:this.props.theme.colors.migrate\n                                    }}\n                                    key={`migrate_${i}`}\n                                    handleClick={ e => this.migrate(e,functionName) }\n                                  >\n                                    { functionInfo.label }\n                                  </RoundButton>\n                                )\n                              })\n                            }\n                          </Flex>\n                        </Flex>\n                      ) : (\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:2,\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            {\n                              this.props.migrationImage ? (\n                                <Image\n                                  {...this.props.migrationImage}\n                                />\n                              ) : (\n                                <Icon\n                                  size={'2.3em'}\n                                  color={'cellText'}\n                                  name={ this.props.migrationIcon ? this.props.migrationIcon : (this.props.isMigrationTool ? 'SwapHoriz' : 'Repeat') }\n                                />\n                              )\n                            }\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              {\n                                this.props.migrationText ? (\n                                  <Text.span\n                                    migrationTextProps={this.props.migrationTextProps}\n                                    dangerouslySetInnerHTML={{\n                                      __html:this.props.migrationText\n                                    }}\n                                  >\n                                  </Text.span>\n                                ) : (\n                                  <Text.span\n                                    color={'cellText'}\n                                  >\n                                    You are one step away from the migration of your { this.props.isMigrationTool ? this.state.oldIdleTokens.toFixed(4) : 'old' } {this.state.oldTokenName}{ this.props.isMigrationTool ? ` into the Idle ${this.props.tokenConfig.token} ${this.props.selectedStrategy} strategy` : '' }!\n                                  </Text.span>\n                                )\n                              }\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                            {\n                              biconomyEnabled && \n                                <Flex\n                                  py={3}\n                                  px={2}\n                                  mt={2}\n                                  width={1}\n                                  borderRadius={2}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                  backgroundColor={'dashboardBg'}\n                                  border={`1px solid ${this.props.theme.colors.boxBorder}`}\n                                >\n                                  <Text\n                                    mt={1}\n                                    fontSize={1}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    {\n                                      this.props.biconomy ?\n                                        `Meta-Transactions allow you to migrate without spending a dime! But, if you are stuck, please disable it and try again.`\n                                      :\n                                        'Your wallet does not support Meta-transactions, you are still able to migrate with a normal transaction.'\n                                    }\n                                  </Text>\n                                  {\n                                  this.props.biconomy &&\n                                    <Checkbox\n                                      mt={2}\n                                      required={false}\n                                      label={\"Migrate with Meta-Transaction\"}\n                                      checked={this.state.metaTransactionsEnabled}\n                                      onChange={ e => this.toggleMetaTransactionsEnabled(e.target.checked) }\n                                    />\n                                  }\n                                </Flex>\n                            }\n                            {\n                              this.props.tokenConfig.migration.migrationContract.functions.map((functionInfo,i) => {\n                                const functionName = functionInfo.name;\n                                return (\n                                  <RoundButton\n                                    buttonProps={{\n                                      mt:3,\n                                      width:[1,0.5],\n                                      mainColor:this.props.theme.colors.migrate\n                                    }}\n                                    key={`migrate_${i}`}\n                                    handleClick={ e => this.migrate(e,functionName) }\n                                  >\n                                    { functionInfo.label }\n                                  </RoundButton>\n                                )\n                              })\n                            }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      )\n                    ) : this.state.processing.approve.loading ? (\n                      <Flex\n                        mt={3}\n                        flexDirection={'column'}\n                      >\n                        <TxProgressBar\n                          {...this.props}\n                          waitText={`Approve estimated in`}\n                          hash={this.state.processing.approve.txHash}\n                          endMessage={`Finalizing approve request...`}\n                          cancelTransaction={this.cancelTransaction.bind(this)}\n                        />\n                      </Flex>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          mt:2,\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            size={'2.3em'}\n                            name={'LockOpen'}\n                            color={'cellText'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            {\n                              this.props.approveText ? this.props.approveText : `To migrate your ${ !this.props.isMigrationTool ? 'old' : '' } ${this.state.oldTokenName} you need to approve our Smart-Contract first.`\n                            }\n                          </Text>\n                          <RoundButton\n                            buttonProps={{\n                              mt:3,\n                              width:[1,1/2]\n                            }}\n                            handleClick={this.approveMigration.bind(this)}\n                          >\n                            Approve\n                          </RoundButton>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  }\n                </Flex>\n              ) : (\n                !this.state.processing[this.state.action].loading ? (\n                  <Flex\n                    mt={3}\n                    flexDirection={'column'}\n                  >\n                    <Input\n                      min={0}\n                      type={\"number\"}\n                      required={true}\n                      height={'3.4em'}\n                      borderRadius={2}\n                      fontWeight={500}\n                      className={styles.input}\n                      borderColor={'cardBorder'}\n                      backgroundColor={'cardBg'}\n                      boxShadow={'none !important'}\n                      onChange={this.changeInputValue.bind(this)}\n                      border={`1px solid ${this.props.theme.colors.divider}`}\n                      placeholder={`Insert ${this.state.oldTokenName} amount`}\n                      value={this.state.inputValue[this.state.action] !== null ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]).toString() : ''}\n                    />\n                    <Flex\n                      mt={3}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'space-between'}\n                    >\n                      <FastBalanceSelector\n                        percentage={25}\n                        onMouseDown={()=>this.setFastBalanceSelector(25)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(25)}\n                      />\n                      <FastBalanceSelector\n                        percentage={50}\n                        onMouseDown={()=>this.setFastBalanceSelector(50)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(50)}\n                      />\n                      <FastBalanceSelector\n                        percentage={75}\n                        onMouseDown={()=>this.setFastBalanceSelector(75)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(75)}\n                      />\n                      <FastBalanceSelector\n                        percentage={100}\n                        onMouseDown={()=>this.setFastBalanceSelector(100)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(100)}\n                      />\n                    </Flex>\n                    <Flex\n                      mt={3}\n                      justifyContent={'center'}\n                    >\n                      <RoundButton\n                        buttonProps={{\n                          width:[1,1/2],\n                          disabled:this.state.buttonDisabled,\n                          style:{\n                            textTransform:'capitalize'\n                          }\n                        }}\n                        handleClick={this.state.buttonDisabled ? null : this.executeAction.bind(this) }\n                      >\n                        {this.state.action}\n                      </RoundButton>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Flex\n                    mt={4}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      {...this.props}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                      hash={this.state.processing[this.state.action].txHash}\n                      endMessage={`Finalizing ${this.state.action} request...`}\n                      waitText={`${this.functionsUtil.capitalize(this.state.action)} estimated in`}\n                    />\n                  </Flex>\n                )\n              )\n            }\n          </Box>\n        ) : (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'column'}\n            justifyContent={'center'}\n          >\n            {\n              (!this.props.isMigrationTool && this.state.migrationEnabled) && \n                <SkipMigrationComponent />\n            }\n            {\n              this.props.children ? this.props.children : null\n            }\n          </Flex>\n        )\n      )\n    )\n  }\n}\n\nexport default Migrate;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport AssetField from '../AssetField/AssetField';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass AssetsList extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    return (\n      <Flex id=\"assets-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"assets-list\" flexDirection={'column'}>\n          {\n            enabledTokens.map(token => {\n              const tokenConfig = this.props.availableTokens[token];\n              if (!tokenConfig){\n                return null;\n              }\n              return (\n                <TableRow\n                  token={token}\n                  {...this.props}\n                  key={`asset-${token}`}\n                  tokenConfig={tokenConfig}\n                  rowId={`asset-col-${token}`}\n                  cardId={`asset-card-${token}`}\n                  fieldComponent={this.props.fieldComponent || AssetField}\n                />\n              );\n            })\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default AssetsList;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__38P6I\",\"link\":\"Footer_link__13yZU\"};","import { tint, shade, readableColor } from 'polished';\n\n// rimble base colors\nconst baseColors = {\n  black: '#000e1a',\n  white: '#FFF',\n  blue: '#0036ff',\n  darkBlue: '#0028be',\n  green: '#28C081',\n  yellow: '#FD9D28',\n  red: '#DC2C10',\n  blurple: '#4E3FCE',\n  consensysblue: '#3259D6',\n};\n\n// rimble palette\nconst colors = {\n  blurple: {\n    base: baseColors.blurple,\n    text: readableColor(baseColors.blurple),\n    light: [null, tint(0.2, baseColors.blurple)],\n    dark: [null, shade(0.2, baseColors.blurple)],\n  },\n  blue: {\n    base: baseColors.blue,\n    text: readableColor(baseColors.blue),\n    light: [null, tint(0.9, baseColors.blue)],\n    dark: [null, shade(0.4, baseColors.blue)],\n  },\n  green: {\n    base: baseColors.green,\n    text: baseColors.white,\n    light: [null, tint(0.9, baseColors.green)],\n    dark: [null, shade(0.4, baseColors.green)],\n  },\n  yellow: {\n    base: baseColors.yellow,\n    text: readableColor(baseColors.yellow),\n    light: [null, tint(0.9, baseColors.yellow)],\n    dark: [null, shade(0.4, baseColors.yellow)],\n  },\n  red: {\n    base: baseColors.red,\n    text: readableColor(baseColors.red),\n    light: [null, tint(0.9, baseColors.red)],\n    dark: [null, shade(0.4, baseColors.red)],\n  },\n};\n\nconst blurple = colors.blurple;\nconst blue = colors.blue;\nconst green = colors.green;\nconst yellow = colors.yellow;\nconst red = colors.red;\n\nexport { blurple };\nexport { blue };\nexport { green };\nexport { yellow };\nexport { red };\nexport default baseColors;\n","import { Flex, Icon } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass VariationNumber extends Component {\n\n  render() {\n\n    const IconDirection = () => (\n      <Icon\n        color={ this.props.direction === 'up' ?  '#6dd400' : '#f7b500' }\n        name={ this.props.direction === 'up' ?  'ArrowDropUp' : 'ArrowDropDown' }\n        size={ this.props.iconSize ? this.props.iconSize : ( this.props.isMobile ? '1.4em' : '2em') }\n      />\n    );\n\n    return (\n      <Flex\n        alignItems={'center'}\n        flexDirection={'row'}\n        width={ this.props.width ? this.props.width : 1 }\n        justifyContent={this.props.justifyContent ? this.props.justifyContent : 'center'}\n      >\n        {\n          (!this.props.iconPos || this.props.iconPos==='left') &&\n            <IconDirection />\n        }\n        {this.props.children}\n        {\n          this.props.iconPos==='right' &&\n            <IconDirection />\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default VariationNumber;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchInput\":\"GenericSelector_searchInput__vl2hJ\",\"genericSelector\":\"GenericSelector_genericSelector__1Nqkd\",\"dark\":\"GenericSelector_dark__zCOnP\",\"searchInputHidden\":\"GenericSelector_searchInputHidden__2Zm1B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loading-dots\":\"LoadingSpinner_loading-dots__2-3YZ\",\"loading-dots--dot\":\"LoadingSpinner_loading-dots--dot__2Y25C\",\"dot-keyframes\":\"LoadingSpinner_dot-keyframes__3SU_M\"};","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Box,\n  Button,\n  Flex,\n  Image\n} from \"rimble-ui\";\nimport Select from 'react-select';\nimport ModalCard from './ModalCard';\nimport ImageButton from '../../ImageButton/ImageButton';\nimport styles from './Header.module.scss';\nimport globalConfigs from '../../configs/globalConfigs';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\n\nclass BuyModal extends React.Component {\n\n  state = {\n    selectedMethod:null,\n    availableMethods:[],\n    selectedCountry:null,\n    selectedProvider:null,\n    availableProviders:null,\n    selectedToken:this.props.buyToken,\n  }\n\n  async loadRemoteResources() {\n\n    if (!this.state.selectedToken){\n      return false;\n    }\n\n    // Load payments providers external remote resources\n    Object.keys(globalConfigs.payments.providers).forEach((provider,i) => {\n\n      const providerInfo = globalConfigs.payments.providers[provider];\n      if (providerInfo.enabled && providerInfo.remoteResources && (providerInfo.supportedTokens.indexOf(this.state.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1)){\n        \n        const remoteResources = providerInfo.remoteResources;\n\n        Object.keys(remoteResources).forEach((url,j) => {\n\n          const resourceType = url.split('.').pop().toLowerCase();\n\n          switch (resourceType){\n            case 'js':\n              const scriptID = `script_${provider}_${j}_${this.state.selectedToken}`;\n\n              if (!document.getElementById(scriptID)){\n                const script = document.createElement(\"script\");\n                const remoteResourceParams = remoteResources[url];\n                const callback = remoteResourceParams && remoteResourceParams.callback ? remoteResourceParams.callback : null;\n                const precall = remoteResourceParams && remoteResourceParams.precall ? remoteResourceParams.precall : null;\n\n                if (precall && typeof precall === 'function'){\n                  precall(this.state,globalConfigs,providerInfo);\n                }\n\n                if (callback && typeof callback === 'function'){\n                  if (script.readyState) {  // only required for IE <9\n                    script.onreadystatechange = function() {\n                      if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n                        script.onreadystatechange = null;\n                        callback();\n                      }\n                    };\n                  } else {  //Others\n                    script.onload = callback;\n                  }\n                }\n\n                script.id = scriptID;\n                script.className = `script_${provider}`;\n                script.src = url;\n                script.async = true;\n\n                if (remoteResourceParams && remoteResourceParams.parentElement){\n                  remoteResourceParams.parentElement.appendChild(script)\n                } else {\n                  document.head.appendChild(script);\n                }\n              }\n            break;\n            case 'css':\n              const stylesheetId = `stylesheet_${provider}_${j}`;\n\n              if (!document.getElementById(stylesheetId)){\n                const style = document.createElement(\"link\");\n\n                style.id = stylesheetId;\n                style.rel = 'stylesheet';\n                style.href = url;\n\n                document.head.appendChild(style);\n              }\n            break;\n            default:\n            break;\n          }\n        });\n      }\n    });\n  }\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  loadAvailableMethods(){\n    const availableMethods = {};\n    const availableMethodsKeys = this.props.availableMethods && this.props.availableMethods.length ? this.props.availableMethods : Object.keys(globalConfigs.payments.methods);\n\n    availableMethodsKeys.forEach(method => {\n      const availableProviders = this.getAvailablePaymentProviders(method,this.state.selectedToken);\n      if (availableProviders && availableProviders.length>0){\n        const methodInfo = globalConfigs.payments.methods[method];\n        methodInfo.availableProviders = availableProviders;\n        availableMethods[method] = methodInfo;\n      }\n    });\n\n    this.setState({\n      availableMethods\n    });\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n\n    this.loadAvailableMethods();\n    this.loadRemoteResources();\n  }\n\n  async componentDidMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps) {\n\n    this.loadUtils();\n\n    if ( this.props.buyToken && prevProps.buyToken !== this.props.buyToken){\n      this.selectToken(null,this.props.buyToken);\n    }\n  }\n\n  renderPaymentMethod = async (e,provider,buyParams) => {\n\n    const onSuccess = async (tx) => {\n      // Toast message\n      window.toastProvider.addMessage(`Deposit completed`, {\n        secondaryMessage: `Your ${this.state.selectedToken} have been deposited`,\n        colorTheme: 'light',\n        actionHref: \"\",\n        actionText: \"\",\n        variant: \"success\",\n      });\n\n      this.props.getAccountBalance();\n    };\n\n    const onClose = async (e) => {\n      return true;\n    }\n\n    const paymentProvider = globalConfigs.payments.providers[provider];\n    const initParams = paymentProvider && paymentProvider.getInitParams ? paymentProvider.getInitParams(this.props,globalConfigs,buyParams,onSuccess,onClose) : null;\n\n    // Render the Payment Provider\n    switch (provider){\n      default:\n        if (typeof paymentProvider.render === 'function'){\n          const currentState = Object.assign({},this.state);\n          paymentProvider.render(initParams,null,currentState,globalConfigs);\n        }\n      break;\n    }\n\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_provider',\n        eventLabel: provider\n      });\n\n      this.closeModal(e);\n    } else {\n      this.closeModal(e);\n    }\n  }\n\n  goBack = (e) => {\n    e.preventDefault();\n\n    if (this.state.selectedProvider){\n      this.setState({\n        selectedProvider:null,\n      });\n    } else if (this.state.selectedMethod){\n      this.setState({\n        selectedMethod:null,\n        selectedCountry:null,\n        selectedProvider:null,\n      });\n    } else if (this.state.selectedToken){\n      this.setState({\n        selectedMethod:null,\n        selectedCountry:null,\n        selectedProvider:null,\n        selectedToken:this.props.buyToken,\n      });\n    } else {\n      this.resetModal();\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      selectedMethod:null,\n      selectedCountry:null,\n      selectedProvider:null,\n      availableProviders:null,\n      selectedToken:this.props.buyToken\n    });\n\n    this.componentWillMount();\n  }\n\n  closeModal = (e) => {\n    this.resetModal();\n    if (!this.props.showInline && typeof this.props.closeModal === 'function'){\n      this.props.closeModal();\n    }\n  }\n\n  getProviderInfo = (provider) => {\n    if (!globalConfigs.payments.providers[provider]){\n      return false;\n    }\n    let providerInfo = globalConfigs.payments.providers[provider];\n    if (typeof providerInfo.getInfo === 'function'){\n      const newProviderInfo = providerInfo.getInfo(this.state);\n      if (newProviderInfo && Object.keys(newProviderInfo).length){\n        providerInfo = Object.assign(providerInfo,newProviderInfo);\n      }\n    }\n    return providerInfo;\n  }\n\n  getDefaultPaymentProvider = (selectedMethod) => {\n    const paymentMethod = this.state.availableMethods[selectedMethod];\n    if (paymentMethod && paymentMethod.defaultProvider){\n      return paymentMethod.defaultProvider;\n    }\n    return null;\n  }\n\n  getAvailablePaymentProviders = (selectedMethod,selectedToken) => {\n    const availableProviders = [];\n\n    Object.keys(globalConfigs.payments.providers).map((provider,i) => {\n      const providerInfo = globalConfigs.payments.providers[provider];\n      const providerSupportMethod = providerInfo.supportedMethods.indexOf(selectedMethod) !== -1;\n      const providerSupportToken = selectedToken ? providerInfo.supportedTokens.indexOf(selectedToken) !== -1 : (providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1);\n      if (providerInfo.enabled && providerSupportMethod && providerSupportToken ){\n        availableProviders.push(provider);\n      }\n      return provider;\n    });\n\n    const defaultPaymentProvider = this.getDefaultPaymentProvider(selectedMethod);\n\n    if (defaultPaymentProvider && this.state.availableMethods[selectedMethod].showDefaultOnly && availableProviders.indexOf(defaultPaymentProvider) !== -1){\n      return [defaultPaymentProvider];\n    }\n\n    return availableProviders;\n  }\n\n  selectProvider = (e,selectedProvider) => {\n    if (e){\n      e.preventDefault();\n    }\n    \n    if (!selectedProvider || !globalConfigs.payments.providers[selectedProvider]){\n      return this.setState({\n        selectedProvider:null\n      });\n    }\n\n    const providerInfo = globalConfigs.payments.providers[selectedProvider];\n    if (providerInfo){\n\n      if (this.state.selectedToken){\n        this.renderPaymentMethod(e,selectedProvider,this.state);\n        return;\n      }\n\n      const ethAvailable = providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1;\n      const tokenAvailable = providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1;\n\n      // Show tokens to buy if more are available or if the selected one is not\n      const availableTokens = [];\n      if ( (ethAvailable && tokenAvailable) || !tokenAvailable ){\n        if (ethAvailable){\n          availableTokens.push(globalConfigs.baseToken);\n        }\n        if (tokenAvailable){\n          availableTokens.push(this.props.selectedToken);\n        }\n      } else {\n        this.renderPaymentMethod(e,selectedProvider,this.state);\n        return;\n      }\n\n      this.setState({\n        availableTokens,\n        selectedProvider\n      });\n    }\n  }\n\n  selectMethod = (e,selectedMethod) => {\n    if (e){\n      e.preventDefault();\n    }\n\n    if (Object.keys(this.state.availableMethods).indexOf(selectedMethod) !== -1){\n      const availableProviders = this.getAvailablePaymentProviders(selectedMethod,this.state.selectedToken);\n\n      // Send Google Analytics event\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_method',\n        eventLabel: selectedMethod\n      });\n\n      this.setState({\n        availableProviders,\n        selectedMethod\n      });\n    }\n  }\n\n  selectToken = (e,selectedToken) => {\n    if (e){\n      e.preventDefault();\n    }\n\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Buy',\n      eventAction: 'select_token',\n      eventLabel: selectedToken\n    });\n\n    this.setState({ selectedToken }, async () => {\n      if (this.state.selectedProvider){\n        return this.renderPaymentMethod(e,this.state.selectedProvider,this.state);\n      } else {\n        this.loadRemoteResources();\n      }\n    });\n  }\n\n  handleCountryChange = selectedCountry => {\n\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled && selectedCountry){\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_country',\n        eventLabel: selectedCountry.value\n      });\n    }\n\n    this.setState({\n      selectedCountry\n    });\n  }\n\n  getAvailableCountries = () => {\n    const availableCountries = {};\n    this.state.availableProviders.forEach((provider,i) => {\n      const providerInfo = this.getProviderInfo(provider);\n      const providerSupportMethod = providerInfo.supportedMethods.indexOf(this.state.selectedMethod) !== -1;\n      const providerSupportToken = this.state.selectedToken ? providerInfo.supportedTokens.indexOf(this.state.selectedToken) !== -1 : (providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1);\n\n      // Skip disabled provider, not supported selected method or not supported token\n      if (!providerInfo.enabled || !providerSupportMethod || !providerSupportToken ){\n        return;\n      }\n\n      // Get available providers and countries\n      providerInfo.supportedCountries.forEach((countryCode,j) => {\n        if (!availableCountries[countryCode]){\n          availableCountries[countryCode] = {\n            providers:[],\n            label:globalConfigs.countries[countryCode],\n            value:countryCode\n          };\n        }\n        availableCountries[countryCode].providers.push(provider);\n      });\n    });\n\n    return Object.values(availableCountries);\n  }\n\n  render() {\n\n    let title = null;\n    if (this.state.selectedToken === null){\n      title = 'BUY TOKEN';\n    } else {\n      title = 'BUY '+this.state.selectedToken;\n      if (this.state.selectedMethod !== null){\n        title += ' - '+this.state.availableMethods[this.state.selectedMethod].props.caption;\n      }\n    }\n\n    let availableTokens = this.props.availableTokens && Object.keys(this.props.availableTokens).length>0 ? [globalConfigs.baseToken,...Object.keys(this.props.availableTokens)] : [globalConfigs.baseToken];\n\n    // Show all tokens\n    if (this.props.showAllTokens){\n      availableTokens = [];\n      Object.keys(globalConfigs.payments.providers).forEach( provider => {\n        const providerInfo = globalConfigs.payments.providers[provider];\n        if (providerInfo.supportedTokens){\n          providerInfo.supportedTokens.forEach(token => {\n            if (!availableTokens.includes(token)){\n              availableTokens.push(token);\n            }\n          })\n        }\n      });\n    }\n\n    const InnerComponent = props => (\n      <Box minWidth={ this.props.showInline ? 'auto' : ['auto','35em'] }>\n      {\n        this.state.selectedToken === null ? (\n          <Box mb={2}>\n            <Text\n              mb={[2,3]}\n              fontWeight={2}\n              textAlign={'center'}\n              fontSize={[2, this.props.showInline ? 2 : 3]}\n            >\n              Which token do you want to buy?\n            </Text>\n            <Flex\n              mb={4}\n              style={{\n                flexWrap:'wrap'\n              }}\n              alignItems={'center'}\n              justifyContent={'center'}\n              flexDirection={['column','row']}\n            >\n            {\n              availableTokens.map((token,i) => {\n                return (\n                  <ImageButton\n                    caption={token}\n                    key={`token_${token}`}\n                    isMobile={this.props.isMobile}\n                    imageSrc={`images/tokens/${token}.svg`}\n                    handleClick={ e => { this.selectToken(e,token); } }\n                    imageProps={ this.props.isMobile ? {height:'42px'} : {p:[2,3],height:'80px'}}\n                    buttonProps={ !this.props.isMobile ? {\n                      style:{\n                        'flex':'0 0 170px'\n                      }\n                    } : null}\n                  />\n                );\n              })\n            }\n            </Flex>\n          </Box>\n        ) : this.state.selectedMethod === null ? (\n          <Box>\n            <Flex mb={3} flexDirection={'column'} justifyContent={'center'} alignItems={'center'}>\n              {\n                !this.props.showInline &&\n                  <Image height={2} mb={2} src={`images/tokens/${this.state.selectedToken}.svg`} />\n              }\n              <Text textAlign={'center'} fontWeight={500} fontSize={[2, this.props.showInline ? 2 : 3]} my={0}>\n                {\n                  this.props.showInline && this.props.buyToken ? `Ops... you don't have any ${this.props.buyToken} in your wallet, how do you prefer do buy some?` : `How do you prefer to buy ${this.state.selectedToken}?`\n                }\n              </Text>\n            </Flex>\n            <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n              {\n                Object.keys(this.state.availableMethods).map((method,i) => {\n                  const methodInfo = this.state.availableMethods[method];\n                  let imageProps = methodInfo.props && methodInfo.props.imageProps ? methodInfo.props.imageProps : {};\n                  const imagePropsExtended = this.props.isMobile ? {height:'42px'} : {height:'70px'};\n                  imageProps = Object.assign(imageProps,imagePropsExtended);\n\n                  return (\n                    <ImageButton\n                      {...methodInfo.props}\n                      buttonProps={{\n                        border:2\n                      }}\n                      key={`method_${method}`}\n                      imageProps={ imageProps }\n                      isMobile={ this.props.isMobile }\n                      handleClick={ e => this.selectMethod(e,method) }\n                    />\n                  );\n                })\n              }\n            </Flex>\n          </Box>\n        ) : this.state.selectedMethod === 'wallet' ? (\n              <Box mt={2} mb={3}>\n                <Text textAlign={'center'} fontWeight={3} fontSize={2} my={0}>\n                  <Box width={'100%'}>\n                      <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                      {\n                        this.state.availableProviders.length > 0 ?\n                          (\n                            <Box>\n                              <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                                Choose your preferred payment provider:\n                              </Text>\n                              {\n                                this.state.availableProviders.map((provider,i) => {\n                                  const providerInfo = this.getProviderInfo(provider);\n                                  return (\n                                    <ImageButton key={`payment_provider_${provider}`} {...providerInfo} handleClick={ e => { this.renderPaymentMethod(e,provider,this.state); } } />\n                                  );\n                                })\n                              }\n                            </Box>\n                          )\n                        : (\n                          <Text textAlign={'center'} fontWeight={3} fontSize={2} my={2}>\n                            Sorry, there are no providers available for the selected method.\n                          </Text>\n                        )\n                      }\n                      </Flex>\n                    </Box>\n                </Text>\n              </Box>\n            ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              {\n                !this.state.selectedProvider &&\n                <Box\n                  mb={3}\n                  maxWidth={ this.props.showInline ? '35em' : 'initial' }\n                  width={ (this.props.showInline && !this.props.isMobile) ? 0.72 : 1 }\n                >\n                  {\n                    !this.props.showInline &&\n                      <Flex flexDirection={'column'} justifyContent={'center'} alignItems={'center'}>\n                        <Image height={2} mb={2} src={`images/tokens/${this.state.selectedToken}.svg`} />\n                      </Flex>\n                  }\n                  <Text textAlign={'center'} fontWeight={ this.props.showInline ? 2 : 3 } fontSize={2} mb={2}>\n                    Select your country:\n                  </Text>\n                  <Select\n                    bg={'#162e4d'}\n                    backgroundColor={'#162e4d'}\n                    value={this.state.selectedCountry}\n                    placeholder={'Select your country'}\n                    onChange={this.handleCountryChange}\n                    options={this.getAvailableCountries()}\n                    maxWidth={ this.props.showInline && !this.props.isMobile ? '25em' : 'auto' }\n                    noOptionsMessage={ (inputValue) => 'For European countries select Europe' }\n                    className={this.props.themeMode === 'light' ? styles.select : styles.selectDark}\n                  />\n                </Box>\n              }\n              <Flex flexDirection={'column'} justifyContent={'center'} alignItems={'center'} minHeight={'200px'}>\n                {\n                  !this.state.selectedProvider ?\n                    this.state.selectedCountry !== null ? (\n                      <Box width={'100%'}>\n                        <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                          Choose your preferred payment provider:\n                        </Text>\n                        <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                        {\n                          this.state.selectedCountry.providers.length > 0 ?\n                            this.state.selectedCountry.providers.map((provider,i) => {\n                              const providerInfo = this.getProviderInfo(provider);\n                              return (\n                                <ImageButton key={`payment_provider_${provider}`} {...providerInfo} handleClick={ e => {this.selectProvider(e,provider) } } />\n                              );\n                            })\n                          : (\n                            <Text textAlign={'center'} fontWeight={3} fontSize={2} mb={2}>\n                              Sorry, there are no providers available for the selected method.\n                            </Text>\n                          )\n                        }\n                        </Flex>\n                      </Box>\n                    ) : (\n                      <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={2}>\n                        Select the country to load the payment providers.\n                      </Text>\n                    )\n                  : false && this.state.availableTokens && this.state.availableTokens.length > 0 && (\n                    <Box mb={2}>\n                      <Flex justifyContent={'center'} my={2}>\n                        <Image src={ globalConfigs.payments.providers[this.state.selectedProvider].imageSrc } height={'35px'} />\n                      </Flex>\n                      <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                        Choose which token do you want to buy:\n                      </Text>\n                      <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                      {\n                        this.state.availableTokens.map((token,i) => {\n                          return (\n                            <ImageButton key={`token_${token}`} imageSrc={`images/tokens/${token}.svg`} caption={token} imageProps={{p:[2,3],height:'80px'}} handleClick={ e => { this.selectToken(e,token); } } />\n                          );\n                        })\n                      }\n                      </Flex>\n                    </Box>\n                  )\n                }\n              </Flex>\n            </Flex>\n          )\n      }\n        {\n          this.props.showInline && this.state.selectedToken !== null  && (this.props.buyToken === null || this.state.selectedMethod !== null) && (\n            <Flex\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <Button\n                my={2}\n                mx={[0, 2]}\n                size={'medium'}\n                borderRadius={4}\n                mainColor={'blue'}\n                onClick={ e => this.goBack(e) }\n              >\n                GO BACK\n              </Button>\n            </Flex>\n          )\n        }\n      </Box>\n    );\n\n    if (this.props.showInline){\n      return (\n        <InnerComponent\n          {...this.props}\n        />\n      );\n    }\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.closeModal}>\n          <ModalCard.Header title={title}>\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <InnerComponent/>\n          </ModalCard.Body>\n          <ModalCard.Footer>\n            <Flex px={[2,0]} flexDirection={['column', 'row']} width={1} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                onClick={ e => this.closeModal(e) }\n                size={this.props.isMobile ? 'small' : 'medium'}\n              >\n              CLOSE\n              </Button>\n              {\n                this.state.selectedToken !== null && (this.props.buyToken === null || this.state.selectedMethod !== null) && (\n                  <Button\n                    my={2}\n                    mx={[0, 2]}\n                    borderRadius={4}\n                    onClick={ e => this.goBack(e) }\n                    className={styles.gradientButton}\n                    size={this.props.isMobile ? 'small' : 'medium'}\n                  >\n                    GO BACK\n                  </Button>\n                )\n              }\n            </Flex>\n          </ModalCard.Footer>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default BuyModal;","import React, { Component } from 'react';\nimport { Flex, Icon, Text } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass ConnectBox extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          p:3,\n          mt:3,\n          ...this.props.cardProps\n        }}\n      >\n        <Flex\n          alignItems={'center'}\n          flexDirection={'column'}\n        >\n          <Icon\n            size={'1.8em'}\n            name={'Input'}\n            color={'cellText'}\n          />\n          <Text\n            mt={2}\n            fontSize={2}\n            color={'cellText'}\n            textAlign={'center'}\n          >\n            Please connect with your wallet interact with Idle.\n          </Text>\n          <RoundButton\n            buttonProps={{\n              mt:2,\n              width:[1,1/2]\n            }}\n            handleClick={this.props.connectAndValidateAccount}\n          >\n            Connect\n          </RoundButton>\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default ConnectBox;\n","import React from \"react\";\nimport styles from './ModalCard.module.scss';\nimport { Box, Flex, Card, Button, Heading, Image } from \"rimble-ui\";\n\nconst ModalCard = ({children, closeFunc, ...props}) => (\n  <Card\n    p={0}\n    border={0}\n    mx={'auto'}\n    my={'auto'}\n    height={'auto'}\n    borderRadius={2}\n    overflow={'auto'}\n    width={ props.width ? props.width : 'auto' }\n    minWidth={ props.minWidth ? props.minWidth : 'auto' }\n    maxWidth={ props.maxWidth ? props.maxWidth : '960px'}\n  >\n    <Box\n      top={'0'}\n      zIndex={1}\n      right={'0'}\n      position={\"absolute\"}\n    >\n      <Button.Text\n        icononly\n        icon={\"Close\"}\n        size={'2.5em'}\n        onClick={closeFunc}\n        mainColor={ props.mainColor ? props.mainColor :  'copyColor' }\n      />\n    </Box>\n    <Flex\n      height={'100%'}\n      flex={'1 1 auto'}\n      flexDirection={'column'}\n      className={[ props.bgLayer ? styles.bg : null]}\n      style={{\n        overflow: 'auto',\n        backgroundRepeat:'no-repeat',\n        backgroundPosition:'bottom right',\n        backgroundSize: !props.background ? '65%' : null,\n        backgroundImage:'url(/images/bg-bottom-right.png)',\n        background: props.background ? props.background : null,\n      }}\n      backgroundColor={'cardBg'}\n    >\n      {children}\n    </Flex>\n  </Card>\n);\n\nModalCard.Header = (props) => (\n  <Box\n    width={1}\n    mb={[2,3]}\n    pb={[2,2]}\n    pt={ props.pt ? props.pt : (props.icon ? 3 : [5,3]) }\n    borderBottom={ props.borderBottom ? props.borderBottom : '1px solid #eee' }\n  >\n    <Flex\n      px={[1,2]}\n      alignItems={'center'}\n      flexDirection={'column'}\n    >\n      { props.icon && <Image width={ props.iconHeight ? props.iconHeight : '50px' } src={props.icon} /> }\n      <Heading.h3\n        mb={0}\n        fontSize={[3,3]}\n        color={'copyColor'}\n        textAlign={'center'}\n        mt={props.icon ? 2 : 0}\n        fontFamily={'sansSerif'}\n        {...props.titleProps}\n      >\n        {props.title}\n      </Heading.h3>\n      {\n        props.subtitle &&\n        <Heading.h4\n          pt={[1,2]}\n          fontWeight={2}\n          fontSize={[2,2]}\n          lineHeight={1.5}\n          color={'dark-gray'}\n          textAlign={'center'}\n          {...props.subtitleProps}\n        >\n          {props.subtitle}\n        </Heading.h4>\n      }\n      {\n        props.subtitle2 &&\n        <Heading.h4 pt={0} fontSize={[2,2]} textAlign={'center'} fontWeight={2} lineHeight={1.5} color={'dark-gray'}>\n          {props.subtitle2}\n        </Heading.h4>\n      }\n    </Flex>\n  </Box>\n);\n\nModalCard.Body = ({children, ...props}) => (\n  <Box\n    width={1}\n    px={[3,5]}\n    {...props}\n  >\n    {children}\n  </Box>\n);\n/*\nModalCard.Body = ({children, ...props}) => (\n  <Flex flex={'1 1 auto'} style={{ overflow: 'auto' }} >\n    <Box width={1} px={[4,5]} py={[3,4]} m={'auto'}>\n      {children}\n    </Box>\n  </Flex>\n);\n*/\n\nModalCard.Footer = ({children, ...props}) => (\n  <Flex\n    flex={'1 0 auto'}\n    justifyContent={'center'}\n    borderTop={1}\n    borderColor={'light-gray'}\n    px={[0,3]}\n    py={3}\n  >\n    {children}\n  </Flex>\n);\n\n\nModalCard.BackButton = ({onClick, ...props}) => (\n  <Box\n    position={'absolute'}\n    top={'0'}\n    left={'0'}\n    m={3}\n    bg={'white'}\n  >\n    <Button.Outline\n      onClick={onClick}\n      icononly\n      icon={'ArrowBack'}\n      size={'2.5em'}\n    />\n  </Box>\n);\n\nexport default ModalCard;\n","import {\n  Link as RouterLink,\n} from \"react-router-dom\";\nimport ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport styles from './Footer.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Heading, Image, Link } from 'rimble-ui';\n\nclass Footer extends Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  render() {\n    const currYear = new Date().getFullYear();\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n    const columnWidth = governanceEnabled ? 1/4 : 1/3;\n    return (\n      <Flex\n        pl={0}\n        id={\"footer\"}\n        alignItems={'center'}\n        flexDirection={'column'}\n        className={styles.footer}\n        backgroundColor={'white'}\n        justifyContent={'flex-start'}\n      >\n        <Flex\n          width={1}\n          px={[3,6]}\n          justifyContent={'center'}\n        >\n          <Flex\n            width={1}\n            height={['auto','100%']}\n            alignItems={'flex-start'}\n            maxWidth={['35em','70em']}\n            justifyContent={'flex-start'}\n            flexDirection={['column','row']}\n          >\n            <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Resources\n              </Heading.h3>\n              <Flex width={1} flexDirection={'column'}>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://developers.idle.finance'}\n                >\n                  <span role=\"img\" aria-label=\"documentation\">📚</span> Documentation\n                </ExtLink>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://www.notion.so/idlelabs/Idle-Finance-Brand-Assets-fd63e4161cb64c999531646c7549bc4b'}\n                >\n                  <span role=\"img\" aria-label=\"brand-assets\">🎨</span> Brand Assets\n                </ExtLink>\n                <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                  <RouterLink\n                    color={'blue'}\n                    to=\"/terms-of-service\"\n                    className={styles.link}\n                  >\n                    <Text\n                      fontWeight={3}\n                      color={'blue'}\n                      fontSize={[3,2]}\n                      hoverColor={'blue'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                    >\n                      <span role=\"img\" aria-label=\"terms-of-service\">📑</span> Terms of Service\n                    </Text>\n                  </RouterLink>\n                </Flex>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://www.iubenda.com/privacy-policy/61211749'}\n                >\n                  <span role=\"img\" aria-label=\"privacy-policy\">🕵️‍♂️</span> Privacy Policy\n                </ExtLink>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://www.iubenda.com/privacy-policy/61211749/cookie-policy'}\n                >\n                  <span role=\"img\" aria-label=\"cookie-policy\">🍪</span> Cookie Policy\n                </ExtLink>\n              </Flex>\n            </Flex>\n            {\n              governanceEnabled && \n                <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n                  <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                    Governance\n                  </Heading.h3>\n                  <Flex width={1} flexDirection={'column'}>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        to={\"/governance\"}\n                        className={styles.link}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-overview\">🏛</span> Overview\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        className={styles.link}\n                        to={\"/governance/proposals\"}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-proposals\">💡</span> Proposals\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        className={styles.link}\n                        to={\"/governance/leaderboard\"}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-leaderboard\">📋</span> Leaderboard\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <ExtLink href=\"https://gov.idle.finance/\">\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-forum\">🤝</span> Forum\n                        </Text>\n                      </ExtLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <ExtLink href=\"https://www.notion.so/idlelabs/ffe8115b7b53489ab0a7f84e656e4bb0?v=916250f54ff24daabad72cf095fd6d88\">\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-forum\">🌎</span> Team\n                        </Text>\n                      </ExtLink>\n                    </Flex>\n                  </Flex>\n                </Flex>\n            }\n            <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Start a Conversation\n              </Heading.h3>\n              <Link textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} color={'blue'} hoverColor={'blue'}>\n                <span role=\"img\" aria-label=\"email\">✉️</span> info@idle.finance\n              </Link>\n            </Flex>\n            <Flex width={[1,columnWidth]} flexDirection={'column'}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Explore\n              </Heading.h3>\n              <Flex flexDirection={'row'} justifyContent={['space-evenly','flex-start']}>\n                <ExtLink href=\"https://twitter.com/idlefinance\">\n                  <Image src=\"images/social/twitter.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://t.me/idlefinance\">\n                  <Image src=\"images/social/telegram.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://discord.gg/mpySAJp\">\n                  <Image src=\"images/social/discord.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://medium.com/@idlefinance\">\n                  <Image src=\"images/social/medium.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://github.com/Idle-Labs/\">\n                  <Image src=\"images/social/github.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://www.linkedin.com/company/idlefinance\">\n                  <Image src=\"images/social/linkedin.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://defipulse.com/defi-list\">\n                  <Image src=\"images/social/defi-pulse.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n              </Flex>\n            </Flex>\n          </Flex>\n        </Flex>\n        <Flex\n          width={1}\n          height={['auto','100%']}\n          flexDirection={'column'}\n          alignItems={['center','flex-end']}\n          justifyContent={['center','flex-end']}\n        >\n          <Flex\n            p={2}\n            width={1}\n            alignItems={'center'}\n            justifyContent={'center'}\n            backgroundColor={'dark-blue'}\n            flexDirection={['column','row']}\n          >\n            <Text\n              color={'white'}\n              textAlign={['center','flex-end']}\n            >\n              &copy; {currYear} - Idle Labs Inc.\n            </Text>\n            <RouterLink\n              color={'blue'}\n              to={'/terms-of-service'}\n              style={{textDecoration:'none'}}\n            >\n              <Text\n                pl={2}\n                color={'#0df'}\n                textAlign={['center','flex-end']}\n              >\n                Terms of Service\n              </Text>\n            </RouterLink>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default Footer;\n","import React, { Component } from 'react';\nimport styles from './TableCellHeader.module.scss';\nimport { Flex, Heading, Icon, Link, Tooltip } from \"rimble-ui\";\n\nclass TableCellHeader extends Component {\n  render() {\n\n    const ColTitle = (props) => (\n      <Heading.h4\n        fontWeight={[3,4]}\n        color={'cellTitle'}\n        style={{\n          width:'100%',\n          whiteSpace:'nowrap'\n        }}\n        fontSize={['10px',3]}\n        lineHeight={'initial'}\n        {...props}\n      >\n        {props.children}\n      </Heading.h4>\n    );\n\n    return (\n      <Flex\n        width={this.props.width}\n      >\n        {\n          (this.props.desc && this.props.desc.length>1) ? (\n            <Flex\n              alignItems={'center'}\n            >\n              <ColTitle\n                {...this.props}\n              />\n              <Link\n                style={{\n                  cursor:'pointer'\n                }}\n                onClick={ e => this.props.openTooltipModal(this.props.title,this.props.desc) }\n              >\n                <Tooltip\n                  placement={'top'}\n                  message={'Click to read the description'}\n                >\n                  <Icon\n                    ml={1}\n                    name={\"Info\"}\n                    color={'cellTitle'}\n                    className={styles.tooltip}\n                    size={ this.props.isMobile ? '1em' : '1.2em'}\n                  />\n                </Tooltip>\n              </Link>\n            </Flex>\n          ) : (\n            <ColTitle\n              {...this.props}\n            />\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TableCellHeader;\n","import React, { Component } from 'react';\nimport { Flex, Loader, Text } from \"rimble-ui\";\n\nclass FlexLoader extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        justifyContent={'center'}\n        {...this.props.flexProps}\n      >\n        <Loader {...this.props.loaderProps} />\n        {\n          this.props.text &&\n            <Text {...this.props.textProps}>{this.props.text}</Text>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default FlexLoader;\n","import React, { Component } from \"react\";\nimport { Button, Image, Flex, Text, Icon, Box } from 'rimble-ui';\n\nclass ImageButton extends Component {\n\n  render() {\n\n    const isMobile = typeof this.props.isMobile !== 'undefined' ? this.props.isMobile : false;\n    const image = this.props.imageSrc ? (<Image width={'auto'} src={this.props.imageSrc} {...this.props.imageProps} />) : ( this.props.iconName ? (<Icon name={this.props.iconName} {...this.props.iconProps} />) : null );\n    const caption = (<Text textAlign={ isMobile ? 'left' : 'center'} fontSize={2} fontWeight={3} color={'dark-gray'}>{this.props.caption}</Text>);\n\n    return (\n        <Button\n          color={'white'}\n          borderRadius={3}\n          px={ isMobile ? [3,4] : 4 }\n          py={ isMobile ? 0 : [3,4] }\n          my={ isMobile ? 2 : [2,2] }\n          mx={ isMobile ? 0 : [0,2] }\n          onClick={ this.props.handleClick }\n          height={ isMobile ? '58px' : ['150px','170px']}\n          mainColor={this.props.isActive ? 'cardBgHover' : 'cardBg'}\n          contrastColor={this.props.isActive ? 'cardBgHover' : 'cardBg'}\n          width={this.props.width ? this.props.width : (isMobile ? '100%' : ['150px','170px'])}\n          style={this.props.buttonStyle ? this.props.buttonStyle : (isMobile ? {justifyContent:'flex-start'} : null)}\n          {...this.props.buttonProps}\n        >\n          <>\n            {\n              this.props.badge && (\n                <Box\n                  position={'absolute'}\n                  borderRadius={'16px'}\n                  backgroundColor={ this.props.badge.bgColor ? this.props.badge.bgColor : 'blue' }\n                  style={ isMobile ? {right:'-25px',top:'-17px'} : {right:'-25px',top:'-25px'} }\n                  px={['5px','7px']}\n                  py={['1px','3px']}\n                >\n                  <Text\n                    fontWeight={3}\n                    fontSize={'10px'}\n                    color={ this.props.badge.color ? this.props.badge.color : '#fff' }\n                  >\n                  {this.props.badge.text}\n                  </Text>\n                </Box>\n              )\n            }\n            <Flex flexDirection={ isMobile ? 'row' : 'column'} justifyContent={ isMobile ? 'flex-start' : 'center'} alignItems={'center'}>\n              <Flex width={ isMobile ? '45px' : 1 } mr={ isMobile ? 2 : 0 } justifyContent={ isMobile ? 'flex-start' : 'center' }>\n                { this.props.captionPos && this.props.captionPos === 'top' ? caption : image }\n              </Flex>\n              <Flex width={ isMobile ? 'auto' : 1 } flexDirection={'column'} justifyContent={ isMobile ? 'flex-start' : 'center' } >\n                { this.props.captionPos && this.props.captionPos === 'top' ? image : caption }\n                {\n                  this.props.subcaption && this.props.subcaption.split('\\n').map((v,i) => {\n                    // Smaller caption for second line\n                    if (i){\n                      v = (<small>{v}</small>);\n                    }\n                    return (\n                      <Text key={`subcaption_${i}`} lineHeight={'1.3'} textAlign={ isMobile ? 'left' : 'center'} color={'darkGray'} fontWeight={1} fontSize={1}>{v}</Text>\n                    );\n                  })\n                }\n              </Flex>\n            </Flex>\n          </>\n        </Button>\n    );\n  }\n}\nexport default ImageButton;\n","import { Line } from '@nivo/line';\nimport CountUp from 'react-countup';\nimport React, { Component } from 'react';\nimport { linearGradientDef } from '@nivo/core'\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport CustomTooltip from '../CustomTooltip/CustomTooltip';\nimport VariationNumber from '../VariationNumber/VariationNumber';\nimport AllocationChart from '../AllocationChart/AllocationChart';\nimport CustomTooltipRow from '../CustomTooltip/CustomTooltipRow';\nimport { Image, Text, Loader, Button, Tooltip, Icon, Flex } from \"rimble-ui\";\n\nclass AssetField extends Component {\n\n  state = {\n    ready:false\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const tokenChanged = prevProps.token !== this.props.token;\n    const accountChanged = prevProps.account !== this.props.account;\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    const contractInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized && this.props.contractsInitialized;\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (fieldChanged || tokenChanged || accountChanged || transactionsChanged || (contractInitialized && !this.state.ready)){\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.loadField();\n      });\n    } else if (mobileChanged || themeModeChanged){\n      const oldState = Object.assign({},this.state);\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  loadField = async(fieldName=null) => {\n    // Exit if component unmounted\n    // console.log('loadField',this.props.fieldInfo.name,this.props.account,this.props.token,this.props.tokenConfig);\n\n    if (this.componentUnmounted || !this.props.token || !this.props.tokenConfig){\n      return false;\n    }\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const setState = fieldName === null;\n    const fieldInfo = this.props.fieldInfo;\n    if (!fieldName){\n      fieldName = fieldInfo.name;\n    }\n\n    const fieldProps = fieldInfo.props;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    // const addCurveApy = typeof this.props.addCurveApy !== 'undefined' ? this.props.addCurveApy : false;\n    const addGovTokens = typeof this.props.addGovTokens !== 'undefined' ? this.props.addGovTokens : true;\n\n    let output = null;\n    if (this.props.token){\n      switch (fieldName){\n        case 'tokenBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              tokenBalance:output.toString()\n            });\n          }\n        break;\n        case 'govTokens':\n          const govTokens = this.functionsUtil.getTokenGovTokens(this.props.tokenConfig);\n          const getGovTokensDistributionSpeed = await this.functionsUtil.getGovTokensDistributionSpeed(this.props.tokenConfig);\n          this.setStateSafe({\n            govTokens,\n            getGovTokensDistributionSpeed\n          });\n        break;\n        case 'tokenPrice':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            let tokenPrice = '-';\n            if (typeof this.props.tokenConfig.showPrice === 'undefined' || this.props.tokenConfig.showPrice){\n              tokenPrice = output.toString();\n            }\n            this.setStateSafe({\n              tokenPrice\n            });\n          }\n        break;\n        case 'fee':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              fee:output.toString()\n            });\n          }\n        break;\n        case 'amountToMigrate':\n          const {\n            oldContractBalanceFormatted\n          } = await this.functionsUtil.checkMigration(this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (setState && oldContractBalanceFormatted){\n            this.setStateSafe({\n              amountToMigrate:oldContractBalanceFormatted.toString()\n            });\n            output = oldContractBalanceFormatted;\n          }\n        break;\n        case 'amountLent':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              amountLent:output.toString()\n            });\n          }\n        break;\n        case 'idleTokenBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              idleTokenBalance:output.toString()\n            });\n          }\n        break;\n        case 'redeemableBalanceCounterCurve':\n          const {\n            redeemableBalanceCurveEnd,\n            redeemableBalanceCurveStart\n          } = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (redeemableBalanceCurveStart && redeemableBalanceCurveEnd){\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                redeemableBalanceCurveEnd,\n                redeemableBalanceCurveStart\n              });\n            }\n\n            output = {\n              redeemableBalanceCurveEnd,\n              redeemableBalanceCurveStart\n            };\n          }\n        break;\n        case 'redeemableBalanceCounter':\n          const {\n            redeemableBalanceEnd,\n            redeemableBalanceStart\n          } = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (redeemableBalanceStart && redeemableBalanceEnd){\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                redeemableBalanceEnd,\n                redeemableBalanceStart\n              });\n            }\n\n            output = {\n              redeemableBalanceEnd,\n              redeemableBalanceStart\n            };\n          }\n        break;\n        case 'earnings':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earnings:output.toString()\n            });\n          }\n        break;\n        case 'feesCounter':\n          const [earningsCounter,feePercentage] = await Promise.all([\n            this.loadField('earningsCounter'),\n            this.functionsUtil.getTokenFees(this.props.tokenConfig)\n          ]);\n\n          if (earningsCounter && earningsCounter.earningsStart && earningsCounter.earningsEnd && feePercentage){\n\n            const feesStart = earningsCounter.earningsStart.times(feePercentage);\n            const feesEnd = earningsCounter.earningsEnd.times(feePercentage);\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                feesEnd,\n                feesStart\n              });\n            }\n\n            output = {\n              feesEnd,\n              feesStart\n            };\n          }\n        break;\n        case 'earningsCounterCurve':\n          const [curveApy,earningsCurveStart,amountLentCurve] = await Promise.all([\n            this.functionsUtil.getCurveAPY(),\n            this.functionsUtil.loadAssetField('earningsCurve',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('amountLentCurve',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens)\n          ]);\n\n          if (amountLentCurve && earningsCurveStart && curveApy){\n            const earningsCurveEnd = amountLentCurve.gt(0) ? amountLentCurve.times(curveApy.div(100)).plus(earningsCurveStart) : 0;\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                earningsCurveEnd,\n                earningsCurveStart\n              });\n            }\n\n            output = {\n              earningsCurveEnd,\n              earningsCurveStart\n            };\n          }\n        break;\n        case 'earningsCounter':\n          let [tokenAPY2,earningsStart,amountLent2] = await Promise.all([\n            this.functionsUtil.loadAssetField('apy',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('earnings',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('amountLent',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens)\n          ]);\n\n\n          if (amountLent2 && earningsStart && tokenAPY2){\n            const earningsEnd = amountLent2.gt(0) ? amountLent2.times(tokenAPY2.div(100)).plus(earningsStart) : 0;\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                earningsEnd,\n                earningsStart\n              });\n            }\n\n            output = {\n              earningsEnd,\n              earningsStart\n            };\n          }\n        break;\n        case 'redeemableBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              redeemableBalance:output.toString()\n            });\n          }\n        break;\n        case 'score':\n          const tokenScore = await this.functionsUtil.getTokenScore(this.props.tokenConfig,isRisk);\n          if (setState){\n            this.setStateSafe({\n              score:tokenScore ? tokenScore : false\n            });\n          }\n          output = tokenScore;\n        break;\n        case 'pool':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              poolSize:output.toString()\n            });\n          }\n        break;\n        case 'earningsPercCurve':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earningsPercCurveDirection:parseFloat(output)>0 ? 'up' : 'down',\n              earningsPercCurve:parseFloat(output).toFixed(decimals)\n            });\n          }\n        break;\n        case 'earningsPerc':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earningsPerc:parseFloat(output).toFixed(decimals),\n              earningsPercDirection:parseFloat(output)>0 ? 'up' : 'down'\n            });\n          }\n        break;\n        case 'apr':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            let tokenAPR = '-';\n            if (typeof this.props.tokenConfig.showAPR === 'undefined' || this.props.tokenConfig.showAPR){\n              tokenAPR = parseFloat(output).toFixed(decimals);\n            }\n            this.setStateSafe({\n              tokenAPR\n            });\n          }\n        break;\n        case 'oldApy':\n          if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.oldContract){\n            const oldTokenConfig = Object.assign({},this.props.tokenConfig);\n            oldTokenConfig.idle = Object.assign({},this.props.tokenConfig.migration.oldContract);\n            oldTokenConfig.protocols = Object.values(this.props.tokenConfig.protocols);\n\n            // Override token with name\n            oldTokenConfig.idle.token = oldTokenConfig.idle.name;\n\n            // Replace protocols with old protocols\n            if (oldTokenConfig.migration.oldProtocols){\n              oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n                const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n                if (foundProtocol){\n                  const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                  oldTokenConfig.protocols[protocolPos] = oldProtocol;\n                }\n              });\n            }\n\n            output = await this.functionsUtil.loadAssetField('apy',this.props.token,oldTokenConfig,this.props.account,false);\n\n          } else {\n            output = await this.loadField('apyNoGov');\n          }\n\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                oldAPY:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                oldAPY:false\n              });\n            }\n          }\n        break;\n        case 'apyNoGov':\n          output = await this.functionsUtil.loadAssetField('apy',this.props.token,this.props.tokenConfig,this.props.account,false);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                tokenAPYNoGov:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                tokenAPYNoGov:false\n              });\n            }\n          }\n        break;\n        case 'curveApy':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                curveApy:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                curveApy:false\n              });\n            }\n          }\n        break;\n        case 'curveAvgSlippage':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                curveAvgSlippage:(parseFloat(output)*100).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                curveAvgSlippage:false\n              });\n            }\n          }\n        break;\n\n        case 'apy':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              const tokenAPY = parseFloat(output).toFixed(decimals);\n              const showTooltip = !this.props.isMobile && (fieldInfo.showTooltip !== undefined && fieldInfo.showTooltip);\n              const govTokensAprs = showTooltip ? await this.functionsUtil.getGovTokensAprs(this.props.token,this.props.tokenConfig) : null;\n              this.setStateSafe({\n                tokenAPY,\n                govTokensAprs\n              });\n            } else {\n              this.setStateSafe({\n                tokenAPY:false\n              });\n            }\n          }\n        break;\n        case 'allocationChart':\n          let allocationChartWidth = 0;\n          let allocationChartHeight = 0;\n\n          const resizeAllocationChart = () => {\n            const allocationChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (allocationChartRowElement){\n              const $allocationChartRowElement = window.jQuery(allocationChartRowElement);\n              allocationChartWidth = $allocationChartRowElement.innerWidth()-parseFloat($allocationChartRowElement.css('padding-right'))-parseFloat($allocationChartRowElement.css('padding-left'));\n              allocationChartHeight = $allocationChartRowElement.innerHeight();\n\n              // Make it a square\n              allocationChartWidth = parseInt(allocationChartWidth)>0 ? Math.min(allocationChartWidth,allocationChartHeight) : allocationChartHeight;\n              allocationChartHeight = allocationChartWidth;\n\n\n              if (allocationChartWidth !== this.state.allocationChartWidth){\n                if (setState){\n                  this.setStateSafe({\n                    allocationChartWidth,\n                    allocationChartHeight\n                  });\n                }\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAllocationChart();\n          window.removeEventListener('resize', resizeAllocationChart.bind(this));\n          window.addEventListener('resize', resizeAllocationChart.bind(this));\n\n          if (setState){\n            this.setStateSafe({\n              allocationChartWidth,\n              allocationChartHeight\n            });\n          }\n        break;\n        case 'aprChart':\n          // Set start timestamp for v3 tokens\n          const aprChartEndTimestamp = isRisk ? this.functionsUtil.getGlobalConfig(['stats','versions','v3','endTimestamp']) : null;\n          const aprChartStartTimestamp = isRisk ? aprChartEndTimestamp-(7*24*60*60) : Math.max(this.functionsUtil.getGlobalConfig(['stats','versions','v3','startTimestamp']),parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(new Date()).format('DD/MM/YYYY 00:00:00'),'DD/MM/YYYY HH:mm:ss').subtract(7,'days')._d.getTime()/1000));\n\n          // Check for cached data\n          let aprChartData = null;\n          const cachedDataKey = `aprChart_${this.props.tokenConfig.address}_${isRisk}`;\n          const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n\n          aprChartData = [{\n            id:this.props.token,\n            color: this.props.color ? this.props.color : 'hsl('+this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token,'color','hsl']).join(',')+')',\n            data: []\n          }];\n\n          if (cachedData !== null){\n            aprChartData = cachedData;\n          } else {\n\n            // FAKE CHART DATA\n            if (this.props.token === 'COMP'){\n              aprChartData[0].data = [];\n              const startTimestamp = new Date().getTime();\n              let y = 20;\n              for (var i=0; i<=16; i++) {\n                const mDate = this.functionsUtil.strToMoment(startTimestamp).add(i,'day');\n                const x = mDate.format(\"YYYY/MM/DD HH:mm\");\n                // Grow\n                if ((i>=5 && i<=10) || (i>=13)){\n                  y+=Math.random()*4+2; // Risk\n                  // y+=Math.random()*7+4; // Best\n                // Decrease\n                } else {\n                  y-=Math.random()*3+1; // Risk\n                  // y-=Math.random()*3+1; // Best\n                }\n                aprChartData[0].data.push({x,y});\n              }\n            } else {\n              const frequencySeconds = this.functionsUtil.getFrequencySeconds('hour',12);\n              const apiResultsAprChart = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,aprChartStartTimestamp,aprChartEndTimestamp,false,frequencySeconds);\n\n              // if (isRisk){\n              //   debugger;\n              // }\n\n              apiResultsAprChart.forEach((d,i) => {\n                const x = this.functionsUtil.strToMoment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n                const y = parseFloat(this.functionsUtil.fixTokenDecimals(d.idleRate,18));\n                aprChartData[0].data.push({ x, y });\n              });\n            }\n\n            this.functionsUtil.setCachedData(cachedDataKey,aprChartData);\n          }\n\n\n          // Add same value\n          if (aprChartData[0].data.length === 1){\n            const newPoint = Object.assign({},aprChartData[0].data[0]);\n            newPoint.x = this.functionsUtil.strToMoment(newPoint,\"YYYY/MM/DD HH:mm\").add(1,'hours').format(\"YYYY/MM/DD HH:mm\")\n            aprChartData[0].data.push(newPoint);\n          }\n\n          let aprChartWidth = 0;\n          let aprChartHeight = 0;\n\n          const resizeAprChart = () => {\n            const aprChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (aprChartRowElement){\n              const $aprChartRowElement = window.jQuery(aprChartRowElement);\n              aprChartWidth = $aprChartRowElement.innerWidth()-parseFloat($aprChartRowElement.css('padding-right'))-parseFloat($aprChartRowElement.css('padding-left'));\n              aprChartHeight = $aprChartRowElement.innerHeight();\n              if (aprChartWidth !== this.state.aprChartWidth || !this.state.aprChartHeight){\n                this.setStateSafe({\n                  aprChartWidth,\n                  aprChartHeight: this.state.aprChartHeight ? this.state.aprChartHeight : aprChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAprChart();\n          window.removeEventListener('resize', resizeAprChart.bind(this));\n          window.addEventListener('resize', resizeAprChart.bind(this));\n\n          // Set chart type\n          const aprChartType = Line;\n\n          const aprChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            axisLeft:null,\n            animate:false,\n            axisBottom:null,\n            enableArea:true,\n            areaOpacity:0.1,\n            curve:'monotoneX',\n            enableGridX:false,\n            enableGridY:false,\n            pointBorderWidth:2,\n            isInteractive:true,\n            colors:d => d.color,\n            defs:[\n              linearGradientDef('gradientArea', [\n                  { offset: 0, color: '#faf047' },\n                  { offset: 50, color: '#e4b400' },\n              ])\n            ],\n            enableSlices:this.props.isMobile ? false : 'x',\n            yFormat:value => parseFloat(value).toFixed(2)+'%',\n            fill:[\n              { match: { id: this.props.token } , id: 'gradientArea' },\n            ],\n            margin: { top: 10, right: 0, bottom: 0, left: 0 },\n            sliceTooltip:(slideData) => {\n              const { slice } = slideData;\n              const point = slice.points[0];\n              return (\n                <CustomTooltip\n                  point={point}\n                >\n                  {\n                  typeof slice.points === 'object' && slice.points.length &&\n                    slice.points.map(point => {\n                      const protocolName = point.serieId;\n                      const protocolEarning = point.data.yFormatted;\n                      // const protocolApy = point.data.apy;\n                      return (\n                        <CustomTooltipRow\n                          key={point.id}\n                          color={point.color}\n                          label={protocolName}\n                          value={protocolEarning}\n                        />\n                      );\n                    })\n                  }\n                </CustomTooltip>\n              );\n            }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                aprChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              aprChartType,\n              aprChartData,\n              aprChartProps,\n              aprChartWidth,\n              aprChartHeight\n            });\n          }\n          output = aprChartData;\n        break;\n        case 'performanceChart':\n          let firstTokenPrice = null;\n          let firstIdleBlock = null;\n          /*\n          let performanceChartWidth = 0;\n          let performanceChartHeight = 0;\n\n          const performanceChartRowElement = document.getElementById(this.props.rowId) ? document.getElementById(this.props.rowId) : document.getElementById(this.props.parentId);\n          if (performanceChartRowElement){\n            performanceChartWidth = parseFloat(performanceChartRowElement.offsetWidth)>0 ? performanceChartRowElement.offsetWidth* (this.props.colProps ? this.props.colProps.width : 1) : 0;\n            performanceChartHeight = parseFloat(performanceChartRowElement.offsetHeight);\n          }\n          */\n\n          let performanceChartWidth = 0;\n          let performanceChartHeight = 0;\n\n          const resizePerformanceChart = () => {\n            const PerformanceChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (PerformanceChartRowElement){\n              const $PerformanceChartRowElement = window.jQuery(PerformanceChartRowElement);\n              performanceChartWidth = $PerformanceChartRowElement.innerWidth()-parseFloat($PerformanceChartRowElement.css('padding-right'))-parseFloat($PerformanceChartRowElement.css('padding-left'));\n              performanceChartHeight = $PerformanceChartRowElement.innerHeight();\n              if (performanceChartWidth !== this.state.performanceChartWidth || !this.state.performanceChartHeight){\n                this.setStateSafe({\n                  performanceChartWidth,\n                  performanceChartHeight: this.state.performanceChartHeight ? this.state.performanceChartHeight : performanceChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizePerformanceChart();\n          window.removeEventListener('resize', resizePerformanceChart.bind(this));\n          window.addEventListener('resize', resizePerformanceChart.bind(this));\n\n          const apr_end_date = this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(new Date()).subtract(1,'day').format('YYYY-MM-DD 23:59'),'YYYY-MM-DD HH:mm');\n          const apr_start_date = apr_end_date.clone().subtract(1,'week');\n\n          // Set start timestamp for v3 tokens\n          const apr_start_timestamp =  Math.max(this.functionsUtil.getGlobalConfig(['stats','versions','v3','startTimestamp']),parseInt(apr_start_date._d.getTime()/1000));\n          // const apr_end_timestamp = parseInt(apr_end_date._d.getTime()/1000);\n\n          let apiResultsPerformanceChart = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,apr_start_timestamp,null,false,43200);\n\n          const idleTokenPerformance = apiResultsPerformanceChart.map((d,i) => {\n            let y = 0;\n            const x = this.functionsUtil.strToMoment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n            const tokenPrice = this.functionsUtil.fixTokenDecimals(d.idlePrice,this.props.tokenConfig.decimals);\n\n            if (!firstTokenPrice){\n              firstTokenPrice = tokenPrice;\n            } else {\n              y = parseFloat(tokenPrice.div(firstTokenPrice).minus(1).times(100));\n            }\n\n            if (firstIdleBlock === null){\n              firstIdleBlock = parseInt(d.blocknumber);\n            }\n\n            return { x, y };\n          });\n\n          const performanceChartData = [{\n            id:'Idle',\n            color: 'hsl('+this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token,'color','hsl']).join(',')+')',\n            data: idleTokenPerformance\n          }];\n\n          // Set chart type\n          const performanceChartType = Line;\n\n          const performanceChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            animate:false,\n            axisLeft:null,\n            axisBottom:null,\n            enableArea:true,\n            enableGridX:false,\n            enableGridY:false,\n            curve:'monotoneX',\n            enableSlices:false,\n            pointBorderWidth:1,\n            colors:d => d.color,\n            pointLabelYOffset:-12,\n            margin: { top: 0, right: 0, bottom: 0, left: 0 }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                performanceChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              performanceChartType,\n              performanceChartData,\n              performanceChartProps,\n              performanceChartWidth,\n              performanceChartHeight\n            });\n          }\n          output = performanceChartData;\n        break;\n        case 'custom':\n          const path = fieldInfo.path;\n          output = this.functionsUtil.getArrayPath(path,this.props.tokenConfig);\n          if (output){\n            this.setStateSafe({\n              [fieldName]:output\n            });\n          }\n        break;\n        default:\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              ready:true,\n              [fieldName]:output\n            });\n          }\n        break;\n      }\n    }\n\n    return output;\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n    let output = null;\n\n    const showLoader = fieldInfo.showLoader === undefined || fieldInfo.showLoader;\n    const loader = showLoader ? (<Loader size=\"20px\" />) : null;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    const tokenConfig = this.props.tokenConfig || this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token]);\n      \n    const maxPrecision = fieldProps && fieldProps.maxPrecision ? fieldProps.maxPrecision : 5;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    const minPrecision = fieldProps && fieldProps.minPrecision ? fieldProps.minPrecision : ( this.props.isMobile ? 3 : 4 );\n\n    switch (fieldInfo.name){\n      case 'iconTooltip':\n        const icon1 = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${this.props.token}.svg`;\n        output = (\n          <Tooltip\n            placement={'top'}\n            message={this.props.token}\n            {...fieldInfo.tooltipProps}\n          >\n            <Image src={icon1} {...fieldProps} />\n          </Tooltip>\n        );\n      break;\n      case 'icon':\n        const icon2 = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${this.props.token}.svg`;\n        output = (\n          <Image src={icon2} {...fieldProps} />\n        );\n      break;\n      case 'tokenName':\n        output = (\n          <Text {...fieldProps}>{this.props.token}</Text>\n        );\n      break;\n      case 'strategyIcon':\n        const strategyIcon = this.functionsUtil.getGlobalConfig(['strategies',this.props.tokenConfig.strategy,'icon']);\n        if (strategyIcon){\n          output = (\n            <Image src={strategyIcon} {...fieldProps} />\n          );\n        }\n      break;\n      case 'strategyName':\n        const strategyName = this.functionsUtil.getGlobalConfig(['strategies',this.props.tokenConfig.strategy,'title']);\n        output = (\n          <Text {...fieldProps}>{strategyName}</Text>\n        );\n      break;\n      case 'tokenBalance':\n        output = this.state.tokenBalance ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.tokenBalance} />\n        ) : loader\n      break;\n      case 'fee':\n        output = this.state.fee ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.fee} />\n        ) : loader\n      break;\n      case 'tokenPrice':\n        output = this.state.tokenPrice ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.tokenPrice} />\n        ) : loader\n      break;\n      case 'amountToMigrate':\n        output = this.state.amountToMigrate ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.amountToMigrate} />\n        ) : loader\n      break;\n      case 'idleTokenBalance':\n        output = this.state.idleTokenBalance ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.idleTokenBalance} />\n        ) : loader\n      break;\n      case 'redeemableBalanceCounterCurve':\n        output = this.state.ready && this.state.redeemableBalanceCurveStart && this.state.redeemableBalanceCurveEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.redeemableBalanceCurveEnd)}\n            start={parseFloat(this.state.redeemableBalanceCurveStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'redeemableBalanceCounter':\n        output = this.state.ready && this.state.redeemableBalanceStart && this.state.redeemableBalanceEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.redeemableBalanceEnd)}\n            start={parseFloat(this.state.redeemableBalanceStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'feesCounter':\n        output = this.state.ready && this.state.feesStart && this.state.feesEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.feesEnd)}\n            start={parseFloat(this.state.feesStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounterCurve':\n        output = this.state.ready && this.state.earningsCurveStart && this.state.earningsCurveEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsCurveEnd)}\n            start={parseFloat(this.state.earningsCurveStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounter':\n        output = this.state.ready && this.state.earningsStart && this.state.earningsEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsEnd)}\n            start={parseFloat(this.state.earningsStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'redeemableBalance':\n        output = this.state.redeemableBalance ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.redeemableBalance} />\n        ) : loader\n      break;\n      case 'govTokens':\n        output = this.state.govTokens && Object.keys(this.state.govTokens).length>0 ? (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'flex-start'}\n          >\n            {\n              Object.values(this.state.govTokens).map( (govTokenConfig,govTokenIndex) => (\n                <AssetField\n                  token={govTokenConfig.token}\n                  tokenConfig={govTokenConfig}\n                  key={`asset_${govTokenIndex}`}\n                  fieldInfo={{\n                    name:'iconTooltip',\n                    tooltipProps:{\n                      message:`${govTokenConfig.token}`+(this.state.getGovTokensDistributionSpeed && this.state.getGovTokensDistributionSpeed[govTokenConfig.token] ? `: ${this.state.getGovTokensDistributionSpeed[govTokenConfig.token].toFixed(decimals)}/${govTokenConfig.distributionFrequency} (for the whole pool)` : '')\n                    },\n                    props:{\n                      borderRadius:'50%',\n                      position:'relative',\n                      height:['1.1em','2em'],\n                      ml:govTokenIndex ? '-10px' : 0,\n                      zIndex:Object.values(this.state.govTokens).length-govTokenIndex,\n                      boxShadow:['1px 1px 1px 0px rgba(0,0,0,0.1)','1px 2px 3px 0px rgba(0,0,0,0.1)'],\n                    }\n                  }}\n                />\n              ))\n            }\n          </Flex>\n        ) : this.state.govTokens ? (\n          <Text {...fieldProps}>-</Text>\n        ) : loader\n      break;\n      case 'amountLentCurve':\n        output = this.state.amountLentCurve ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.amountLentCurve} />\n        ) : loader\n      break;\n      case 'amountLent':\n        output = this.state.amountLent ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.amountLent} />\n        ) : loader\n      break;\n      case 'pool':\n        output = this.state.poolSize ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.poolSize} />\n        ) : loader\n      break;\n      case 'score':\n        output = this.state.score !== undefined && this.state.score !== null && this.functionsUtil.BNify(this.state.score).gt(0) ? (\n          <SmartNumber {...fieldProps} decimals={2} number={this.state.score} />\n        ) : this.functionsUtil.BNify(this.state.score).lte(0) ? '-' : loader\n      break;\n      case 'earningsPerc':\n        output = this.state.earningsPerc ?\n          (typeof fieldInfo.showDirection === 'undefined' || fieldInfo.showDirection) ? (\n            <VariationNumber\n              isMobile={this.props.isMobile}\n              direction={this.state.earningsPercDirection}\n            >\n              <Text {...fieldProps}>{this.state.earningsPerc}%</Text>\n            </VariationNumber>\n          ) : (\n            <Text {...fieldProps}>{this.state.earningsPerc}%</Text>\n          )\n        : loader\n      break;\n      case 'earningsPercCurve':\n        output = this.state.earningsPercCurve ?\n          (typeof fieldInfo.showDirection === 'undefined' || fieldInfo.showDirection) ? (\n            <VariationNumber\n              isMobile={this.props.isMobile}\n              direction={this.state.earningsPercCurveDirection}\n            >\n              <Text {...fieldProps}>{this.state.earningsPercCurve}%</Text>\n            </VariationNumber>\n          ) : (\n            <Text {...fieldProps}>{this.state.earningsPercCurve}%</Text>\n          )\n        : loader\n      break;\n      case 'earningsCurve':\n        output = this.state.earningsCurve ? (\n          <VariationNumber\n            direction={'up'}\n            isMobile={this.props.isMobile}\n          >\n            <SmartNumber\n              {...fieldProps}\n              decimals={decimals}\n              minPrecision={minPrecision}\n              number={this.state.earningsCurve}\n            />\n          </VariationNumber>\n        ) : loader\n      break;\n      case 'earnings':\n        output = this.state.earnings ? (\n          <VariationNumber\n            direction={'up'}\n            isMobile={this.props.isMobile}\n          >\n            <SmartNumber\n              {...fieldProps}\n              decimals={decimals}\n              minPrecision={minPrecision}\n              number={this.state.earnings}\n            />\n          </VariationNumber>\n        ) : loader\n      break;\n      case 'idleDistribution':\n        const governanceTokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n        const idleTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',governanceTokenName]);\n        output = this.state.idleDistribution ? (\n          <Text {...fieldProps}>+{this.state.idleDistribution.toFixed(decimals)} IDLE/{idleTokenConfig.distributionFrequency}</Text>\n        ) : loader\n      break;\n      case 'userDistributionSpeed':\n        output = this.state.userDistributionSpeed ? (\n          <Text {...fieldProps}>{this.state.userDistributionSpeed.toFixed(decimals)}/{this.props.tokenConfig.distributionFrequency}</Text>\n        ) : loader\n      break;\n      case 'distributionSpeed':\n        output = this.state.distributionSpeed ? (\n          <Text {...fieldProps}>{this.state.distributionSpeed.toFixed(decimals)}</Text>\n        ) : loader\n      break;\n      case 'apr':\n        output = this.state.tokenAPR ? (\n          <Text {...fieldProps}>{this.state.tokenAPR}{!isNaN(parseFloat(this.state.tokenAPR)) ? '%' : ''}</Text>\n        ) : loader\n      break;\n      case 'oldApy':\n        output = this.state.oldAPY !== undefined ? (\n          <Text {...fieldProps}>{this.state.oldAPY !== false ? this.state.oldAPY : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'apyNoGov':\n        output = this.state.tokenAPYNoGov !== undefined ? (\n          <Text {...fieldProps}>{this.state.tokenAPYNoGov !== false ? this.state.tokenAPYNoGov : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'curveApy':\n        output = this.state.curveApy !== undefined ? (\n          <Text {...fieldProps}>{this.state.curveApy !== false ? this.state.curveApy : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'curveAvgSlippage':\n        output = this.state.curveAvgSlippage !== undefined ? (\n          <Text {...fieldProps}>{this.state.curveAvgSlippage !== false ? this.state.curveAvgSlippage : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'apy':\n        output = this.state.tokenAPY !== undefined ? (\n          <Flex\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            <Text {...fieldProps}>{this.state.tokenAPY !== false ? this.state.tokenAPY : '-' }<small>%</small></Text>\n            {\n              this.state.govTokensAprs && Object.keys(this.state.govTokensAprs).length>0 && \n                <AssetField\n                  fieldInfo={{\n                    name:'tooltip',\n                    props:{\n                      iconProps:{\n                        ml:1\n                      },\n                      placement:'top',\n                      message:Object.keys(this.state.govTokensAprs).map( govToken => {\n                        const distributionFrequency = this.functionsUtil.getGlobalConfig(['govTokens',govToken,'distributionFrequency']);\n                        const tooltipMode = this.functionsUtil.getGlobalConfig(['govTokens',govToken,'aprTooltipMode']);\n                        let value = this.state.govTokensAprs[govToken].toFixed(decimals);\n                        switch (tooltipMode){\n                          default:\n                          case 'apr':\n                            value += '%';\n                          break;\n                          case 'distribution':\n                            value = `${value}/${distributionFrequency}`;\n                          break;\n                        }\n                        return `${govToken}: ${value}`\n                      }).join('; ')\n                    }\n                  }}\n                />\n            }\n          </Flex>\n        ) : loader\n      break;\n      case 'button':\n        const buttonLabel = typeof fieldInfo.label === 'function' ? fieldInfo.label(this.props) : fieldInfo.label;\n        output = (\n          <Button {...fieldProps} onClick={() => fieldProps.handleClick(this.props) }>{buttonLabel}</Button>\n        );\n      break;\n      case 'performanceChart':\n        output = this.state.performanceChartData ? (\n          <GenericChart\n            {...this.state.performanceChartProps}\n            type={this.state.performanceChartType}\n            data={this.state.performanceChartData}\n            width={this.state.performanceChartWidth}\n            height={this.state.performanceChartHeight}\n          />\n        ) : loader\n      break;\n      case 'allocationChart':\n        output = this.state.allocationChartWidth && this.state.allocationChartHeight ? (\n          <AllocationChart\n            {...this.props}\n            loaderProps={{\n              size:'20px'\n            }}\n            loaderText={''}\n            selectedToken={this.props.token}\n            width={this.state.allocationChartWidth}\n            height={this.state.allocationChartHeight}\n            inline={typeof this.props.inline !== 'undefined' ? this.props.inline : true}\n            showLoader={typeof this.props.showLoader !== 'undefined' ? this.props.showLoader : false}\n          />\n        ) : loader\n      break;\n      case 'tooltip':\n        output = (\n          <Tooltip\n            {...fieldProps}\n          >\n            <Icon\n              ml={2}\n              name={\"Info\"}\n              size={'1em'}\n              color={'cellTitle'}\n              {...fieldProps.iconProps}\n            />\n          </Tooltip>\n        );\n      break;\n      case 'aprChart':\n        output = this.state.aprChartData ? (\n          <GenericChart\n            {...this.state.aprChartProps}\n            type={this.state.aprChartType}\n            data={this.state.aprChartData}\n            width={this.state.aprChartWidth}\n            height={this.state.aprChartHeight}\n          />\n        ) : loader\n      break;\n      case 'custom':\n        let CustomComponent = null;\n        let customValue = this.state[fieldInfo.name];\n        switch (fieldInfo.type){\n          case 'number':\n            customValue = this.functionsUtil.BNify(customValue).toString();\n            CustomComponent = SmartNumber;\n            fieldProps.number = customValue;\n          break;\n          case 'icon':\n            CustomComponent = Icon;\n            fieldProps.name = customValue;\n            const customFieldName = Object.values(fieldInfo.path).pop();\n            if (this.props.tokenConfig[`${customFieldName}Props`]){\n              const customFieldProps = this.props.tokenConfig[`${customFieldName}Props`];\n              // Replace props\n              if (customFieldProps && Object.keys(customFieldProps).length){\n                Object.keys(customFieldProps).forEach(p => {\n                  fieldProps[p] = customFieldProps[p];\n                });\n              }\n            }\n          break;\n          default:\n            CustomComponent = Text;\n          break;\n        }\n        output = customValue ? (\n          <CustomComponent {...fieldProps}>{customValue}</CustomComponent>\n        ) : loader\n      break;\n      default:\n        let formattedValue = this.state[fieldInfo.name];\n        if (this.state[fieldInfo.name] && this.state[fieldInfo.name]._isBigNumber){\n          formattedValue = this.state[fieldInfo.name].toFixed(decimals);\n        }\n        output = this.state[fieldInfo.name] ? (\n          <Text {...fieldProps}>{formattedValue}</Text>\n        ) : loader\n      break;\n    }\n    return output;\n  }\n}\n\nexport default AssetField;\n"],"sourceRoot":""}