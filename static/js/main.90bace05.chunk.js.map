{"version":3,"sources":["FlexLoader/FlexLoader.js","ChartCustomTooltipRow/ChartCustomTooltipRow.js","PageNotFound/PageNotFound.module.scss","utilities/components/ShortHash.js","LoadingSpinner/LoadingSpinner.js","ButtonLoader/ButtonLoader.js","colors.js","IconBox/IconBox.js","TransactionListFilters/TransactionListFilters.js","TransactionsList/TransactionsList.js","CustomTooltip/CustomTooltip.js","AllocationChart/AllocationChart.js","SmartNumber/SmartNumber.js","CustomTooltip/CustomTooltipRow.js","PortfolioEquity/PortfolioEquity.js","ChartCustomTooltip/ChartCustomTooltip.js","ImageButton/ImageButton.js","RoundButton/RoundButton.js","ExtLink/ExtLink.js","theme.js","TableCellHeader/TableCellHeader.module.scss","TransactionListFilters/TransactionListFilters.module.scss","utilities/components/ModalCard.module.scss","Web3ConnectionButtons/Web3ConnectionButtons.module.scss","utilities/components/Header.module.scss","TxProgressBar/TxProgressBar.js","AssetSelector/AssetSelector.js","Tos/Tos.module.scss","TransactionField/TransactionField.js","GenericSelector/GenericSelector.js","Title/Title.js","GenericChart/GenericChart.js","DashboardCard/DashboardCard.module.scss","FastBalanceSelector/FastBalanceSelector.js","TokenSwap/TokenSwap.js","SendTxWithBalance/SendTxWithBalance.js","ETHWrapper/ETHWrapper.js","NexusMutual/NexusMutual.js","CustomField/CustomField.js","CustomList/CustomList.js","PortfolioDonut/PortfolioDonut.js","TotalEarningsCounter/TotalEarningsCounter.js","EarningsEstimation/EarningsEstimation.js","DashboardIconButton/DashboardIconButton.js","TotalBalanceCounter/TotalBalanceCounter.js","StrategyPage/StrategyPage.js","BatchDeposit/BatchDeposit.js","CoverProtocol/CoverProtocol.js","TokenMigration/TokenMigration.js","BatchMigration/BatchMigration.js","configs/globalConfigs.js","utilities/IdleGovToken.js","utilities/FunctionsUtil.js","DashboardCard/DashboardCard.js","Tos/Tos.js","theme-dark.js","App/connectors/TorusConnector.js","App/connectors/AuthereumConnector.js","App/connectors/WalletLinkConnector.js","App/connectors/WalletConnectConnector.js","App/connectors.js","utilities/components/WrongNetworkBanner.js","utilities/NetworkUtil.js","utilities/components/NoWeb3BrowserModal.js","utilities/components/NoWalletModal.js","utilities/GeneralUtil.js","utilities/components/WrongNetworkModal.js","utilities/components/TransactionFeeModal.js","Web3ConnectionButtons/Web3ConnectionButtons.js","utilities/components/ConnectionModal.js","utilities/components/ConnectionPendingModal.js","utilities/components/UserRejectedConnectionModal.js","utilities/components/LowFundsModal.js","utilities/ConnectionModalsUtil.js","utilities/components/ConnectionErrorModal.js","utilities/components/TransactionErrorModal.js","utilities/RimbleWeb3.js","utilities/components/Header.js","ScrollToTop/ScrollToTop.js","PageNotFound/PageNotFound.js","utilities/components/NetworkOverview.js","Web3Debugger/Web3Debugger.js","abis/compound/cDAI.js","abis/tokens/ERC20.js","configs/availableTokens.js","utilities/TransactionToastMessages.js","utilities/TransactionToastUtil.js","App/App.js","serviceWorker.js","index.js","TableRow/TableRow.js","TableHeader/TableHeader.js","Migrate/Migrate.js","AssetsList/AssetsList.js","Footer/Footer.module.scss","VariationNumber/VariationNumber.js","GenericSelector/GenericSelector.module.scss","LoadingSpinner/LoadingSpinner.module.scss","utilities/components/ModalCard.js","utilities/components/BuyModal.js","Footer/Footer.js","TableCellHeader/TableCellHeader.js","CardIconButton/CardIconButton.js","AssetField/AssetField.js"],"names":["FlexLoader","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","rimble_ui__WEBPACK_IMPORTED_MODULE_6__","Object","assign","width","alignItems","justifyContent","this","props","flexProps","loaderProps","text","textProps","Component","ChartCustomTooltipRow","prevProps","prevState","react__WEBPACK_IMPORTED_MODULE_7___default","rimble_ui__WEBPACK_IMPORTED_MODULE_8__","mb","flexDirection","pr","style","flexBasis","flex","color","mr","height","borderRadius","backgroundColor","fontSize","fontWeight","textAlign","textTransform","label","whiteSpace","dangerouslySetInnerHTML","__html","value","module","exports","headerContainer","headerBgFiller","bgContainer","list","textContainer","ShortHash","shortenHash","hash","shortHash","txStart","substr","txEnd","length","display","React","LoadingSpinner","react_default","index_es","className","styles","mx","ButtonLoader","onClick","handleClick","buttonProps","isLoading","src_LoadingSpinner_LoadingSpinner","buttonText","__webpack_require__","d","__webpack_exports__","blue","green","yellow","red","polished__WEBPACK_IMPORTED_MODULE_0__","baseColors","black","white","darkBlue","blurple","consensysblue","colors","base","readableColor","light","tint","dark","shade","IconBox","cardProps","p","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_7__","size","name","icon","iconProps","mt","children","TransactionListFilters","state","maxWidth","minWidth","maxHeight","isOpened","activeFilters","status","assets","actions","setFilter","filter","_this","setState","objectSpread","defineProperty","applyFilters","toggle","arguments","undefined","toggleOpened","resetFilter","resetFilters","_this2","top","zIndex","position","DashboardCard","py","px","transition","isInteractive","cursor","isMobile","overflow","borderTop","concat","theme","divider","keys","filters","map","filterCategory","filterValues","key","TableCellHeader","pb","toUpperCase","filterValue","filterLabel","isChecked","my","checked","radioBtn","onChange","e","Text","mainColor","ml","values","v","filterName","hoverColor","TransactionsList","page","prevTxs","txsPerPage","loading","totalTxs","totalPages","deposit","redeem","send","receive","migrate","swap","swapout","withdraw","completed","pending","failed","renderedTxs","processedTxs","lastBlockNumber","functionsUtil","processTxs","availableActions","action","toLowerCase","txsIndexes","tx","parseFloat","token","includes","sort","b","timeStamp","Math","ceil","forEach","i","selectedToken","tokenConfig","availableTokens","decimals","min","date","Date","getTxAction","parsedValue","tokenAmount","amount","toFixed","momentDate","strToMoment","push","setProps","FunctionsUtil","preventDefault","max","loadUtils","loadTxs","transactionsChanged","JSON","stringify","transactions","enabledTokens","count","account","firstBlockNumber","getGlobalConfig","enabledActions","getEtherscanTxs","etherscanTxs","hashKey","lastTx","pop","blockNumber","parseInt","_this3","_this4","hasActiveFilters","m","minHeight","id","pt","src_TransactionListFilters_TransactionListFilters","bind","TableHeader","cols","index","txHash","txHashKey","TableRow","rowProps","transaction","window","open","rowId","cardId","fieldComponent","TransactionField","prevPage","nextPage","h3","fontFamily","CustomTooltip","react__WEBPACK_IMPORTED_MODULE_6___default","point","left","data","itemPos","rimble_ui__WEBPACK_IMPORTED_MODULE_5__","xFormatted","AllocationChart","chartData","chartProps","selectedSlice","totalAllocation","protocolsAllocations","protocolsAllocationsPerc","componentUnmounted","loadData","setStateSafe","newState","callback","getTokenAllocation","padAngle","animate","borderWidth","cornerRadius","motionDamping","innerRadius","motionStiffness","onMouseEnter","onMouseLeave","tooltipFormat","sliceLabel","radialLabel","tooltip","container","inline","background","cardBg","labels","fonts","sansSerif","legends","slicesLabelsSkipAngle","radialLabelsSkipAngle","enableRadialLabels","radialLabelsTextXOffset","slicesLabelsTextColor","radialLabelsTextColor","radialLabelsLinkStrokeWidth","radialLabelsLinkDiagonalLength","radialLabelsLinkHorizontalLength","enableSlicesLabels","radialLabelsLinkColor","from","borderColor","modifiers","margin","right","bottom","protocols","protocolInfo","protocolName","protocolAddr","address","protocolAllocationPercParsed","times","globalConfigs","stats","hsl","join","capitalize","protocolIcon","react__WEBPACK_IMPORTED_MODULE_8___default","rimble_ui__WEBPACK_IMPORTED_MODULE_9__","src","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_10__","maxPrecision","number","unitProps","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_13__","type","Pie","showLoader","SmartNumber","formattedNumber","isNaN","formatMoney","precision","abbreviateNumber","minPrecision","showUnit","unitPos","rimble_ui__WEBPACK_IMPORTED_MODULE_7__","unit","CustomTooltipRow","PortfolioEquity","startDate","chartwidth","chartHeight","loadChartData","quickDateSelectionChanged","quickDateSelection","componentDidMount","mobileChanged","themeModeChanged","themeMode","tokensBalance","firstTxTimestamp","asyncForEach","_ref","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","mark","_callee3","filteredTxs","amountLent","wrap","_context3","prev","next","BNify","plus","minus","lt","balance","tokenPrice","idleTokens","stop","_x3","apply","currentDate","clone","subtract","days","prevBalances","prevTimestamp","minChartValue","maxChartValue","aggregatedBalance","aggregatedBalancesKeys","tokensBalancesPerDate","currTimestamp","getTime","tokensData","isRisk","selectedStrategy","_ref2","_callee4","_context4","getTokenApiData","sent","_x4","idleTokenBalance","foundBalances","tokensBalances","lastTokenData","lastTokenDataUnfiltered","filteredTokenData","timestamp","tokenDecimals","filteredBalances","lastFilteredTx","idlePrice","fixTokenDecimals","newBalance","lastTxBalance","gt","tokenUsdConversionRate","conversionRateField","chartToken","conversionRate","isSameOrAfter","isSameOrBefore","formattedDate","format","frequencySeconds","_loop","aggregatedBalances","x","y","balances","itemIndex","item","floor","yFormatDecimals","gridYStep","gridYValues","gridYValue","daysCount","daysFrequency","xScale","yScale","stacked","xFormat","yFormat","axisBottom","legend","tickSize","tickPadding","orient","legendOffset","legendPosition","tickValues","pointSize","useMesh","axisLeft","tickRotation","pointLabel","enableArea","enableSlices","enableGridY","curve","enableGridX","pointBorderWidth","pointLabelYOffset","areaBaselineValue","pointColor","areaOpacity","axis","ticks","fill","grid","line","stroke","lineChartStroke","strokeDasharray","sliceTooltip","slideData","slice","points","_ChartCustomTooltip_ChartCustomTooltip__WEBPACK_IMPORTED_MODULE_11__","_ChartCustomTooltipRow_ChartCustomTooltipRow__WEBPACK_IMPORTED_MODULE_12__","serieId","yFormatted","formattedBalance","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_10__","Line","parentId","parentIdHeight","ChartCustomTooltip","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_9__","ImageButton","image","imageSrc","imageProps","iconName","caption","isActive","contrastColor","buttonStyle","Fragment","badge","bgColor","captionPos","subcaption","split","lineHeight","RoundButton","boxShadow","ExtLink","target","rel","_colors__WEBPACK_IMPORTED_MODULE_0__","polished__WEBPACK_IMPORTED_MODULE_1__","breakpoints","fontSizes","fontWeights","letterSpacings","lineHeights","solid","title","copy","serif","counter","space","radii","minWidths","maxWidths","heights","minHeights","maxHeights","borders","borderWidths","shadows","opacity","disabled","primary","gradient-bg","primary-light","primary-dark","bgBlue","dark-blue","skyBlue","lightBlue","copyColor","subColor","near-black","dark-gray","mid-gray","gray","grey","silver","light-silver","moon-gray","light-gray","near-white","transparent","arrowActive","arrowInactive","selectBgFocused","selectBg","backButtonBg","dashboardBg","statValue","boxBorder","cellTitle","cellText","menuBg","menuHover","flashColor","menuRightBorder","cardHoverShadow","cardBgHover","cardBorder","boost","curvein","default","curveout","curvedepositin","curvedepositout","actionBg","blacks","whites","zIndices","messageStyle","success","warning","danger","info","buttons","--main-color","--contrast-color","normal","buttonSizes","small","padding","medium","large","bg","button","gradientButton","empty","select","selectDark","input","TxProgressBar","error","ended","percentage","processing","txTimestamp","initialized","estimatedTime","remainingTime","_callee","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default","_context","initProgressBar","getTransaction","Promise","_ref3","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__","_callee2","resolve","reject","_context2","customLog","web3","eth","err","_x","_x2","abrupt","getBlockTime","blockTime","axios","get","getPredictionTable","_callee5","predictTable","_context5","getTxEstimatedTime","gasPrice","prediction","gasprice","pdValues","_estimateWait","gas","txMeanSecs","block_time","calculateRemainingTime","_callee6","secondsPassed","timePassed","_context6","div","toString","setTimeout","updateProgressBar","getTxInfo","_callee7","txProgressBarKey","txProgressBarData","_ref8","_ref9","_context7","localStorage","getItem","parse","all","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__","setLocalStorage","_callee8","_context8","clearTimeout","gasoffered","minedProb","expectedWait","sum1","sum2","prob","exp","minutes","seconds","react__WEBPACK_IMPORTED_MODULE_10___default","rimble_ui__WEBPACK_IMPORTED_MODULE_13__","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_11__","textColor","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","endMessage","waitText","span","renderRemainingTime","loadingMessage","sendingMessage","href","cancelTransaction","cancelTextColor","cancelTextHoverColor","AssetSelector","options","defaultValue","CustomOptionValue","CustomValueContainer","find","_AssetField_AssetField__WEBPACK_IMPORTED_MODULE_9__","fieldInfo","showCustomField","cachedData","setCachedData","showBalance","selectProps","indexOf","innerProps","loadComponents","selectedTokenChanged","_GenericSelector_GenericSelector__WEBPACK_IMPORTED_MODULE_11__","isSearchable","changeToken","loadField","hashChanged","accountChanged","output","fieldProps","textOverflow","rimble_ui__WEBPACK_IMPORTED_MODULE_11__","align","_utilities_components_ShortHash__WEBPACK_IMPORTED_MODULE_12__","border","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_9__","tokenSymbol","GenericSelector","optionsChanged","defaultValueChanged","componentsChanged","ControlComponent","menuIsOpen","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_12__","CustomIndicatorSeparator","CustomMenu","CustomInputContainer","searchInput","searchInputHidden","CustomOption","selectedValue","o","genericSelector","isFocused","react_select__WEBPACK_IMPORTED_MODULE_7__","components","Menu","Option","Control","Input","SingleValue","IndicatorSeparator","Title","HeadingComponent","component","Heading","h1","GenericChart","addEventListener","handleWindowSizeChange","removeEventListener","chartContainer","document","getElementById","chartWidth","offsetWidth","chartContainerH","ChartType","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_7__","loaderText","defaultOpacity","hidden","interactive","rainbow","FastBalanceSelector","onMouseDown","replaceArrayProps","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_10__","TokenSwap","selectedFromToken","selectedDestToken","availableDestinationTokens","selectFromToken","baseToken","regenerator_default","selectDestToken","getGlobalConfigs","paymentProvider","providerInfo","initProps","buttonId","initParams","getInitParams","render","sendGoogleAnalyticsEvent","eventCategory","eventAction","eventLabel","enabled","remoteResources","url","j","scriptID","script","remoteResourceParams","precall","readyState","onreadystatechange","onload","async","parentElement","appendChild","head","stylesheetId","loadTokens","toolProps","asyncToGenerator","getContractByName","abi","initContract","fromTokenChanged","destTokenChanged","loadKyberWidget","SendTxWithBalance","inputValue","txSucceeded","buttonDisabled","contractApproved","fastBalanceSelector","changeInputValue","setInputValue","selectedPercentage","tokenBalance","getFastBalanceSelector","setFastBalanceSelector","checkButtonDisabled","lte","approve","callbackApprove","callbackReceiptApprove","checkContractApproved","eventData","getTransactionError","transactionHash","enableERC20","contractInfo","executeTx","_amount","params","callbackReceipt","methodName","methodParams","contractName","normalizeTokenAmount","getTransactionParams","eventValue","contractMethodSendWrapper","approveCallback","actionChanged","tokenBalanceChanged","contractChanged","tokenConfigChanged","changeInputCallback","approveEnabled","checkTokenApproved","infoBox","steps","step","stepIndex","link","description","balanceSelectorInfo","required","placeholder","approveDescription","ETHWrapper","balanceETH","balanceWETH","loadBalance","updateActionData","contract","getETHBalance","getTokenBalance","mintLog","txReceipt","logs","log","mintedAmount","withdrawLog","withdrawnAmount","fullWidth","depositOnly","CardIconButton","iconColor","iconBgColor","setAction","src_SendTxWithBalance_SendTxWithBalance","transactionSucceeded","connectAndValidateAccount","NexusMutual","1","2","3","amountValue","periodValue","quoteResponse","changeAmount","changePeriod","makeRequest","textDecoration","activeColor","changeSelectedToken","getQuote","CustomField","funcProps","CustomComponent","componentHasChildren","fieldType","fieldPath","path","customValue","getArrayPath","row","Image","Icon","Button","customFieldName","customFieldProps","CustomList","rows","rowIndex","PortfolioDonut","totalFunds","parentWidth","selectedTokenConfig","loadPortfolio","portfolio","idle","getIdleTokenPrice","convertTokenBalance","getGovTokensUserBalances","govTokensUserBalances","govToken","govTokenBalance","tokenPercentage","tokenColorHsl","round","radialLabelsLinkOffset","itemWidth","itemHeight","translateY","symbolSize","anchor","direction","itemTextColor","symbolShape","effects","on","strategyIcon","convertToken","AssetField","TotalEarningsCounter","earningsEnd","earningsStart","loadTotalEarnings","contractsInitialized","availableStrategies","counterStyle","oldState","getAccountPortfolio","totalEarnings","totalAmountLent","avgAPY","build_default","delay","decimal","separator","useEasing","duration","end","start","formattingFn","n","countUpRef","ref","EarningsEstimation","tokensEarnings","estimationStepsPerc","estimationStepsOptions","estimationStepsDefaultOption","estimationSteps","0","Month","perc","2 months","3 months","optionName","25","8 months","Year","90","2 Years","5 Years","loadEarnings","getAmountLent","amountLents","aggregatedEarnings","earnings","earningsYear","avgBuyPrice","idleTokenPrice","earningsPerc","tokenAPY","tokenAprs","earningsPercStep","possibleSteps","maxPossibleStep","getAvgBuyPrice","slicedToArray","getTokenAprs","avgApr","avgApy","orderedTokensEarnings","estimationStep","option","setEstimationStepsPerc","tokenIndex","tokenEarnings","estimationStepPerc","finalEarnings","cursorPerc","tokenRGBColor","estimateIndex","estimationStepEarnings","estimationStepEarningsFormatted","borderRight","wordBreak","gte","pl","src_TotalEarningsCounter_TotalEarningsCounter","estimationLabel","DashboardIconButton","TotalBalanceCounter","counterEnd","counterStart","StrategyPage","tokensToMigrate","aggregatedValues","activeCoverages","depositedTokens","remainingTokens","batchedDeposits","portfolioLoaded","availableGovTokens","portfolioEquityStartDate","batchedDepositsAvailableTokens","portfolioEquityQuickSelection","getActiveCoverages","getBatchedDeposits","getTokensToMigrate","c","statusColors","statusIcon","statusColor","portfolioCoverage","totalBalance","statusIconProps","reduce","batchInfo","strategy","deposited","batchDeposits","redeemable","batchRedeems","avgScore","_ref4","_ref5","tokenScore","amountLentToken","tokenWeight","getTokenScore","getGovTokensUserTotalBalance","govTokensTotalBalance","govTokensUserBalance","govTokensTotalBalanceTooltip","viewOnly","connectorName","govTokens","apyLong","riskScore","yieldFarming","batchDepositConfig","coverProtocolConfig","placement","message","src_TotalBalanceCounter_TotalBalanceCounter","totalEarningsPerc","titleProps","src_PortfolioDonut_PortfolioDonut","aligItems","setPortfolioEquityQuickSelection","getFrequencySeconds","AssetsList","fields","mobile","parentProps","goToSection","route","borderBottom","h4","desc","showTooltip","showDirection","toolName","toolIndex","toolConfig","src_DashboardIconButton_DashboardIconButton","src_CustomList_CustomList","fileClaimUrl","openWindow","src_EarningsEstimation_EarningsEstimation","textSize","BatchDeposit","canClaim","batchTotals","canDeposit","execute","claim","usePermit","lastExecution","permitEnabled","hasDeposited","permitSigned","showPermitBox","currBatchIndex","batchCompleted","claimSucceeded","componentLoaded","executeSucceeded","migrationEnabled","migrationSucceeded","batchDepositEnabled","migrationContractApproved","migrationEnabledCallback","migrationCallback","checkBatchs","loadStrategies","urlParams","param2","selectToken","executeSucceededChanged","contractApprovedChanged","callbackExecute","callbackReceiptExecute","migrationContract","migrationContractInfo","getBatchedDepositExecutions","genericContractCall","batchExecutions","functions","functionInfo","nonceMethod","permitContract","methods","batchIndex","batchTotal","batchRedeem","batchDeposit","batchDepositInfo","depositEnabled","availableStrategiesKeys","_ref6","strategyConfig","selectStrategy","_this5","obj","baseTokenConfig","strategyAvailableTokens","oldContract","migrateFunction","migration","setStrategyToken","_this6","batchId","callbackClaim","_this7","callbackReceiptClaim","_this8","canExecuteBatch","strategyDefaultValue","s","openTooltipModal","isDisabled","togglePermitEnabled","Migrate","showActions","getTokenPrice","isMigrationTool","showBalanceSelector","migrationIcon","migrationParams","toMigrate","callbackPermit","migrationText","minPoolSize","utc","CoverProtocol","swapInfo","selectedAction","successMessage","defaultCoverage","selectedCoverage","collateral","selectedActionChanged","inputValueChanged","swapInfoChanged","updateData","swapFee","covTokens","tokenAmountOut","getSwapInfo","MAX_UINT256","pow","expirationTimestamp","integerValue","balancerTokenConfig","tokens","dashboardUrl","fixedAmount","mintedClaimLog","mintedNoClaimLog","mintedClaimAmount","mintedNoClaimAmount","claimTokenConfig","claimTokensLog","receivedClaimAmount","balancerPool","noClaimTokenConfig","noClaimTokensLog","receivedNoClaimAmount","apy","collateralAmount","balancerClaimConfig","balancerNoClaimConfig","claimTokenBalance","noClaimTokenBalance","balancerPoolClaimBalance","balancerPoolNoClaimBalance","hasMintedTokens","isClaim","now","apyPrice","currTime","coverages","expirationDate","selectCoverage","coverage","isMint","isBuyClaim","isBuyNoClaim","txAction","BuyModal","showInline","availableMethods","buyToken","TokenMigration","changeFromToken","convertTool","tokenInfo","destTokenConfig","BatchMigration","batchMigrationInfo","batchMigrationDepositEnabled","_ref7","env","process","appName","version","baseURL","forumURL","darkModeEnabled","betaURL","countries","USA","GBR","AUS","BRA","CHN","CAN","EUR","HKG","IND","MEX","RUS","ZAF","KOR","errorsEnabled","messagesEnabled","connectors","metamask","opera","dapper","coinbase","trustwallet","walletconnect","iconModal","walletlink","fortmatic","portis","authereum","torus","trezor","ledger","custom","newsletterSubscription","endpoint","messages","scoreShort","apyShort","cheapRedeem","curveBonusSlippage","distributionSpeed","directMint","performanceFee","govTokenApr","userDistributionSpeed","govTokenRedeemableBalance","riskScoreShort","batchDepositExecutionSchedule","curveInstructions","analytics","google","events","debugEnabled","addPostfixForTestnet","modals","first_deposit_referral","first_deposit_share","welcome","frequency","dashboard","baseRoute","mode","governance","test","startBlock","tokenName","availableContracts","IDLE","PriceOracle","GovernorAlpha","EcosystemFund","IdleController","contracts","delegates","n_coins","imageInactive","rates","poolContract","CurvePool","depositContract","CurveDeposit","gaugeContract","LiquidityGaugeV2","zapContract","CurveZap","idleDAIYield","coinIndex","idleUSDCYield","idleUSDTYield","permit","DAI","EIPVersion","USDC","showAUM","showAPR","protocol","showPrice","disabledTokens","aprTooltipMode","distributionFrequency","COMP","LockedIDLE","Timelock","VesterFactory","EarlyRewards","Comptroller","UniswapRouter","UniswapV2Router02","BalancerExchangeProxy","zeroExInstant","orderSource","assetData","affiliateInfo","feeRecipient","feePercentage","strategies","best","comingSoon","addGovTokens","titlePostfix","govTokensEnabled","chartColor","iconInactive","iconInactiveDark","descLong","descShort","risk","new","TTL","tvls","substack","scores","versions","v3","additionalProtocols","endTimestamp","startTimestamp","showPerformanceTooltip","strategiesParams","enabledStrategies","v4","rgb","hex","chart","labelTextColorModifiers","performanceTooltip","USD","USDT","TUSD","SUSD","WBTC","WETH","idleDAI+idleUSDC+idleUSDT","compound","compoundWithCOMP","rateField","fulcrum","dsr","dydx","iearn","aave","aavev2","skipRebalance","metaTransactionsEnabled","skipMint","minAmountForMint","skipMintCheckboxEnabled","proxyContract","IdleProxyMinter","function","minAmountForRebalance","minAmountForRebalanceMetaTx","redeemGovTokens","rebalance","IdleRebalancerV3","network","availableNetworks","4","42","1337","isForked","requiredNetwork","blocksPerYear","requiredConfirmations","accountBalanceMinimum","providers","infura","etherscan","endpoints","snapshot","whitelist","proposals","urls","biconomy","enableLogin","supportedNetworks","disabledWallets","limits","debug","apiKey","REACT_APP_BICONOMY_KEY","dappId","REACT_APP_BICONOMY_APPID","apiId","terminal","REACT_APP_TERMINAL_KEY","projectId","REACT_APP_TERMINAL_PROJECT_ID","source","web3Version","Web3Versions","one","simpleID","getNetwork","networkId","networkName","appOrigin","location","origin","appId","renderNotifications","notifications","tools","ethWrapper","subComponent","coverProtocol","CoverMint","Claim","CovToken","BalancerPool","NoClaim","claimEnabled","IdleBatchedMint","permitName","batchMigration","IdleTokenV3","IdleBatchConverter","idleSUSDYield","idleTUSDYield","idleWBTCYield","idleDAISafe","idleUSDCSafe","idleUSDTSafe","tokenMigration","IdleConverterPersonalSignV4","oldAddresses","idleDAIv2","IdleTokenV2","cDAI","iDAI","aDAI","yDAIv3","yDAIv2","idleUSDCv2","cUSDC","iUSDC","aUSDC","yUSDCv3","yUSDCv2","cUSDT","iUSDT","aUSDT","yUSDTv3","yUSDTv2","idleSUSDv2","aSUSD","ySUSDv3","idleTUSDv2","aTUSD","yTUSDv3","cWBTC","iWBTC","aWBTC","addFunds","directProps","showAllTokens","insurance","ETH","ens","tokenSwap","USDS","BUSD","EURS","2KEY","ABT","ABYSS","AMPL","ANT","BAM","BAND","BAT","BLZ","BNT","BQX","BTU","CDT","CVC","DAT","DGX","EKG","ELF","ENJ","EQUAD","FXC","GDC","GEN","GHT","GNO","IOST","KEY","KNC","LEND","LINK","LOOM","LRC","MANA","MCO","MET","MFG","MKR","MLN","MTL","MYB","NEXXO","NPXS","OGN","OMG","OST","PAX","PBTC","PLR","PNK","POLY","POWR","PT","QKC","QNT","RAE","REN","REP","REQ","RLC","RSR","RSV","SAN","SNT","SNX","SPIKE","SPN","TKN","TKX","TRYB","UBT","UPP","ZRX","payments","bank","defaultProvider","showDefaultOnly","card","wallet","wyre","supportedMethods","supportedCountries","supportedTokens","envParams","accountId","prod","getInfo","selectedMethod","buyParams","referrerAccountId","dest","destCurrency","redirectUrl","k","encodeURIComponent","iframeBox","innerHTML","body","wyreStyle","ramp","hostAppName","userAddress","hostApiKey","REACT_APP_RAMP_KEY","variant","hostLogoUrl","swapAsset","RampInstantSDK","event","t0","getAccountBalance","getTokenDecimals","payload","purchase","toastProvider","addMessage","secondaryMessage","colorTheme","actionHref","actionText","show","transak","https://global.transak.com/v1/widget.js","REACT_APP_TRANSAK_KEY_TEST","REACT_APP_TRANSAK_KEY_PROD","fee","selectedCountry","fiatCurrency","cryptoCurrencyCode","currencyCode","walletAddress","partnerCustomerId","disableWalletAddressForm","transakGlobal","transakStyle","moonpay","REACT_APP_MOONPAY_KEY_TEST","REACT_APP_MOONPAY_KEY_PROD","baseCurrencyCode","showWalletAddressForm","enabledPaymentMethods","navigator","userAgent","cookie","match","moonpayStyle","https://instant.0x.org/v3/instant.js","onSuccess","onClose","tokenParams","RimbleWeb3_context","chainId","provider","connector","ethereum","defaultSelectedAssetData","availableAssetDatas","shouldDisableAnalyticsTracking","defaultAssetBuyAmount","kyberSwap","web3Subscription","contractAddress","decodeLogsData","internalType","https://widget.kyber.network/v0.7.5/widget.css","https://widget.kyber.network/v0.7.5/widget.js","querySelectorAll","remove","scripts","lang","paramForwarding","pinnedTokens","defaultPair","commissionId","click","airSwap","https://cdn.airswap.io/airswap-instant-widget.js","onComplete","AirSwapInstant","totle","https://widget.totle.com/latest/dist.js","sourceAssetAddress","sourceAmountDecimal","destinationAssetAddress","destinationAmountDecimal","partnerContractAddress","TotleWidget","nodeId","totleWidgetContainer","run","IdleGovToken","classCallCheck","getBalance","claimRewards","getPriorVotes","priorVotes","_args3","refreshIdleSpeed","getUnclaimedTokens","getAPR","IDLETokenConfig","cachedDataKey","APR","idleDistribution","tokenAllocation","DAITokenConfig","tokenPool","idleDistributedPerYearUSD","_args6","getDistribution","getUniswapConversionRate","totalAllocationWithUnlent","getSpeed","idleTokenAddress","idleSpeeds","getCachedDataWithLocalStorage","setCachedDataWithLocalStorage","_x5","_ref10","distribution","_x6","getUserDistribution","_callee10","fixByFrequency","totalSpeed","_args10","_context10","_ref12","_callee9","_ref13","_ref14","idleSpeed","userPoolShare","tokenSpeed","_context9","getUserPoolShare","_x7","fixDistributionSpeed","getAvgApr","_callee12","_args12","_context12","_ref16","_callee11","_ref17","_ref18","idleApr","_context11","_x8","ethereumjsABI","require","idleGovToken","trimEth","toBN","utils","BN","toEth","wei","fromWei","toWei","htmlDecode","childNodes","nodeValue","BNify_obj","BigNumber","String","_len","Array","_key","moment","customLogError","_console","_len2","_key2","console","normalizeSimpleIDNotification","replace","str","arr1","arr2","stripHtml","html","tmp","textContent","innerText","scrollTo","to","scrollY","change","currentTime","easeInOutQuad","t","animateScroll","val","depositProxyContractInfo","migrationContractAddr","migrationContractOldAddrs","batchMigrationContractAddr","isMigrationTx","isSendTransferTx","isReceiveTransferTx","isDepositTx","isRedeemTx","isSwapTx","orderedTokensBalance","totalBalanceConverted","tokenBalanceConverted","getCurveAvgSlippage","processedHashes","curveTokensBalance","curveTxs","avgSlippage","totalDeposited","_args4","getCurveAvailableTokens","getCurveTxs","curveTokens","curveTokenPrice","price","received","slippage","getCurveAvgBuyPrice","_args5","prevAvgBuyPrice","idleTokensBalance","getFirstDepositTx","deposits","_args7","firstDepositTx","asyncTimeout","ms","getDepositTimestamp","firstDepositTxs","_args8","acc","getAmountDeposited","_ref11","userAvgPrice","amountDeposited","getEtherscanBaseTxs","endBlockNumber","firstIdleBlockNumber","etherscanInfo","results","etherscanBaseTxs","etherscanBaseEndpoint","etherscanApiUrl","lastCachedTx","lastCachedBlockNumber","etherscanEndpointLastBlock","latestTxs","latestBlockNumbers","txs","requestCount","requestStatus","cachedRequests","_args11","REACT_APP_ETHERSCAN_KEY","getCachedRequest","result","makeCachedRequest","filterEtherscanTxs","toConsumableArray","saveEtherscanTxs","filterCurveTxs","txsToStore","cachedRequest","saveCachedRequest","_callee13","allAvailableTokens","_args13","_context13","processStoredTxs","_ref19","_callee14","_args14","_context14","_ref20","_callee15","curveTransfersTxs","curveTransfersTxsToDelete","curveZapContract","curvePoolContract","curveSwapContract","curveDepositContract","_args15","_context15","tokenMigrationToolParams","curveTokenConfig","idleToken","internalTxs","r","isRightToken","iTx","isBatchMigrationTx","isDepositInternalTx","iTx2","isRedeemInternalTx","isConversionTx","isWithdrawTx","curveTx","isCurveTx","isCurveDepositTx","isCurveRedeemTx","isCurveDepositIn","isCurveDepositOut","isCurveZapIn","isCurveZapOut","isCurveTransferOut","isCurveTransferIn","isSwapOutTx","tokenDecimal","tokenValue","newValue","iTxs","withdrawnValue","processEtherscanTransactions","addStoredTransaction","txKey","tokenKey","storedTxs","getStoredTransactions","updateStoredTransactions","getStoredItem","_ref21","_callee20","txReceipts","baseTokensConfigs","baseTokensAddresses","curveAvailableTokens","_args20","_context20","baseTokenAddress","_ref22","_callee19","minedTxs","_context19","_ref23","_callee18","storedTx","tokensTransfered","_curveTokenPrice","_curveTokenPrice2","curveTxReceipt","filteredLogs","_curveTokenPrice3","_curveTxReceipt","idleTokenDecimals","_filteredLogs","_context18","getCurveTokenPrice","t1","_ref24","_callee16","_context16","getTransactionReceipt","_x11","_x12","topics","baseTokensConfig","t2","_ref25","_callee17","_context17","_x13","_x14","_x9","_x10","_ref26","_callee26","txsToProcess","_args26","_context26","_ref27","_callee25","_context25","_ref28","_callee24","isStoredTx","allowedMethods","pendingStatus","txPending","isMetaTx","methodIsAllowed","realTx","txValue","redeemedValueFixed","executeMetaTransactionReceipt","executeMetaTransactionContractAddr","executeMetaTransactionInternalTransfers","IdleProxyMinterInfo","internalTransfer","metaTxValue","metaTxValueFixed","migrationTxReceipt","migrationTxInternalTransfers","migrationInternalTransfer","decodedLogs","migrationValue","migrationValueFixed","_context24","mintIdleToken","redeemIdleToken","migrateFromToIdle","mintIdleTokensProxy","migrateFromAaveToIdle","migrateFromIearnToIdle","executeMetaTransaction","migrateFromFulcrumToIdle","migrateFromCompoundToIdle","method","created","_ref29","_callee21","_context21","_x19","_x20","_ref30","_callee22","_context22","_x21","_x22","raw","_ref31","_callee23","_context23","_x23","_x24","decodeLog","_token","_x17","_x18","_x16","_x15","alias","getCustomAddress","setCustomAddress","customAddress","_ref32","_callee27","error_callback","config","_args27","_context27","catch","_x25","_ref33","_callee28","return_data","_args28","_context28","_x26","code","errorCode","array","prop","shift","configs","checkUrlOrigin","checkUrlBeta","_ref34","_callee30","googleEventsInfo","originOk","currentNetwork","_args30","_context30","ga","_ref35","_callee29","_context29","hitCallback","hitCallbackFail","_x28","_x29","_x27","createContract","_ref36","_callee31","_context31","Contract","_x30","_x31","_x32","getWalletProvider","simpleIDPassUserInfo","userInfo","email","initSimpleID","passUserInfo","getEtherscanTransactionUrl","tx_address","getEtherscanAddressUrl","decimalCount","thousands","abs","negativeSign","Number","getSnapshotProposals","_callee34","activeOnly","validProposals","_args34","_context34","getCachedData","addr","msg","_ref38","_callee33","checkedStrategies","_context33","metadata","_ref39","_callee32","_context32","symbol","_x34","_x33","_ref40","_callee35","forceStartTimestamp","order","limit","filteredCachedData","_filteredData","apiInfo","filteredData","_args35","_context35","_x35","_ref41","_callee36","_context36","_x36","aprs","allocations","aprWeighted","allocation","apr","quantity","hour","day","week","getProtocolInfoByAddress","ROUND_FLOOR","normalizeTokenDecimals","normalizedTokenDecimals","exchangeRate","checkContractPaused","_callee37","contractPaused","_args37","_context37","parse_json","return_default","clearStoredData","excludeKeys","clear","storedKeysToRemove","storedKey","removeStoredItem","removeItem","setItem","checkRebalance","_ref43","_callee39","lastAllocationsPromises","protocolIndex","newAllocations","diff","_context39","lastAllocationsPromise","_ref44","_callee38","lastAllocations","_context38","_x38","_x39","alloc","_x37","checkMigration","_ref45","_callee40","oldContractBalance","oldContractTokenDecimals","oldContractBalanceFormatted","oldContractName","_context40","getContractBalance","_x40","_x41","_ref46","_callee41","signedParameters","callback_receipt","_contract$methods","_context41","getGasPrice","once","confirmationNumber","receipt","_x42","_x43","_x44","_x45","_x46","getSignatureParameters_v4","signature","isHexStrict","Error","hexToNumber","constructMetaTransactionMessage","nonce","functionSignature","soliditySHA3","toBuffer","checkBiconomyLimits","_ref47","_callee42","biconomyInfo","res","_context42","headers","x-api-key","_x47","sendTxWithPermit","_ref48","_callee43","_contract$methods2","messageToSign","_this$getSignaturePar","_context43","encodeABI","_address","personal","sign","_x48","_x49","_x50","_x51","_x52","_x53","sendBiconomyTxWithPersonalSign","_ref49","_callee44","_this$getSignaturePar2","_context44","getNonce","call","_x54","_x55","_x56","_x57","signPermitEIP2612","_ref50","_callee45","erc20Name","owner","spender","deadline","domain","domainData","_context45","getChainId","verifyingContract","types","EIP712Domain","Permit","primaryType","currentProvider","jsonrpc","substring","_x58","_x59","_x60","_x61","_x62","_x63","_x64","_x65","signPermit","_ref51","_callee46","baseContractName","holder","spenderContractName","expiry","callback_permit","baseContract","spenderContract","permitConfig","_args46","_context46","net","getId","allowed","response","permitParams","methodAbi","_jsonInterface","f","useNonce","inputs","unshift","_x66","_x67","_x68","_x69","_x70","_x71","_x72","_x73","_x74","sendSignedTx","_ref52","_callee47","MetaTransaction","dataToSign","_context47","_x75","_x76","_x77","_x78","_x79","_ref53","_callee48","contractAddr","walletAddr","_ref54","_ref55","allowance","_context48","getAllowance","_x80","_x81","_x82","_ref56","_callee49","_context49","_x83","_x84","_x85","txData","disableERC20","toTwosComplement","loadAssetField","_ref57","_callee50","field","addCurveApy","strategyInfo","govTokenAvailableTokens","newTokenConfig","_ref58","_ref59","curveAvgSlippage","curveAvgBuyPrice","curveTokenBalance","_ref60","_ref61","amountLentCurve1","redeemableBalanceCurve","_ref62","_ref63","curveApy","amountLentCurve","redeemableBalanceCurveStart","redeemableBalanceCurveEnd","earningPerYear","_ref64","_ref65","amountLent1","redeemableBalance1","depositTimestamp","_idleGovToken","govTokenConfig","blocksPerDay","blocksPerWeek","blocksPerMonth","_idleGovToken2","_idleGovToken3","tokenApys","curveAPY","_ref66","_ref67","tokenPriceFirstDeposit","_ref68","_ref69","daysFirstDeposit","depositTimestamps","_govTokenConfig","_ref70","_ref71","tokenAPY1","amountLent2","redeemableBalanceStart","redeemableBalanceEnd","_earningPerYear","_govTokenConfig2","_ref72","_ref73","idleTokenPrice1","idleTokenBalance2","govTokensBalance","_tokenBalance","redeemableBalance","_ref74","_ref75","amountLentCurve2","redeemableBalanceCurve1","_ref76","_ref77","redeemableBalance2","_args50","_context50","getCurveTokenBalance","getCurveAPY","getCurveRedeemableIdleTokens","getGovTokenPool","getTokenPool","getCompUserDistribution","getIdleGovToken","t3","getCompDistribution","t4","getCompAvgApr","t5","t6","t7","getUserTokenFees","t8","t9","getGovTokenUserBalance","_x86","_x87","_x88","_x89","getIdleTokenSupply","_ref78","_callee51","idleTokenSupply","_args51","_context51","_x90","_ref79","_callee52","tokenData","beforePrice","afterPrice","tokenPriceBefore","tokenPriceAfter","timeBefore","timeAfter","timeDiff","priceDiff","priceAcceleration","timeDiffFromBeforePrice","_args52","_context52","_x91","clearCachedData","useLocalStorage","_ref80","_callee53","_ref81","_ref82","idleTokensTotalSupply","userShare","_context53","_x92","_x93","_callee55","_args55","_context55","_ref84","_callee54","coverageTokens","protocolImage","_context54","_x94","_ref85","_callee56","etherscanEndpoint","_context56","_x95","_callee58","filter_by_status","_args58","_context58","_ref87","_callee57","_ref88","_ref89","_context57","_x96","_ref90","_callee59","fixDecimals","_args59","_context59","_x97","_ref91","_callee60","_ref92","_ref93","_args60","_context60","_x98","_x99","copyToClipboard","copyText","setSelectionRange","execCommand","loadScript","attr","isValidJSON","checkAddress","_ref94","_callee61","_args61","_context61","_x100","_x101","getProtocolBalance","_ref95","_callee62","_context62","_x102","_x103","getAprs","_ref96","_callee63","_context63","_x104","genericIdleCall","_ref97","_callee64","callParams","_args64","_context64","_x105","estimateGas","_ref98","_callee65","_contract$methods3","_args65","_context65","_x106","_x107","getTxDecodedLogs","_ref99","_callee67","logAddr","decodeLogs","internalTransfers","_context67","_ref100","_callee66","_context66","_x112","_x113","_x108","_x109","_x110","_x111","blocksToSeconds","blocks","blocksPerSeconds","getBlockNumber","_callee68","_context68","getContractPastEvents","_ref102","_callee69","_args69","_context69","getPastEvents","_x114","_x115","_ref103","_callee70","_contract$methods4","_args70","_context70","_x116","_x117","_ref104","_callee71","_args71","_context71","_x118","_x119","apr2apy","getUnlentBalance","_ref105","_callee72","unlentBalance","_context72","_x120","_ref106","_callee73","_args73","_context73","_x121","_ref107","_callee75","protocolsAprs","exchangeRates","protocolsBalances","govTokensBalances","_args75","_context75","totalAllocationConverted","totalAllocationWithUnlentConverted","_ref108","_callee74","_ref109","_ref110","protocolBalance","protocolAllocation","_context74","_x123","_x124","protocolAllocationPerc","getGovTokensBalances","total","getTokenConversionRate","_x122","getUniswapConversionRate_path","_ref111","_callee76","unires","_context76","_x125","_ref112","_callee77","tokenConfigFrom","tokenConfigDest","WETHAddr","_context77","_x126","_x127","getCurveDepositedTokens","_ref113","_callee78","idleTokensBalances","remainingCurveTokens","_args78","_context78","_x128","getCurveUnevenTokenAmounts","_ref114","_callee79","amounts","max_burn_amount","unevenAmounts","_context79","getCurveDepositContract","_x129","_x130","_callee80","curveRatesInfo","_context80","strategyTokens","getCurveAPYContract","_callee81","blocksForPrevTokenPrice","_ref117","_ref118","prevTokenPrice","blocksMultiplier","curveAPR","_context81","getCurveTokenSupply","_callee82","_context82","getCurvePoolContract","_callee83","_args83","_context83","_callee84","_args84","_context84","_ref122","_callee85","_ref123","_ref124","_context85","_x131","_callee86","depositContractInfo","_context86","getCurveZapContract","_callee87","zapContractInfo","_context87","_callee88","poolContractInfo","_context88","getCurveSwapContract","_callee89","_context89","getCurveIdleTokensAmounts","_callee91","max_slippage","curveTokenSupply","curveTokenShare","_args91","_context91","_ref130","_callee90","curveIdleTokens","_context90","_x132","getCurveTokensAmounts","_callee93","useCoinIndex","_args93","_context93","_ref132","_callee92","_ref133","_ref134","totalTokenSupply","_context92","_x133","getCurveAmounts","_ref135","_callee95","_args95","_context95","_ref136","_callee94","_context94","_x136","_x134","_x135","getCurveTokenAmount","_ref137","_callee96","_args96","_context96","_x137","getCurveSlippage","_ref138","_callee97","uneven_amounts","_ref139","_ref140","virtualPrice","Sv","_args97","_context97","_x138","_x139","getCompAPR","_ref141","_callee98","cTokenIdleSupply","compConversionRate","COMPTokenConfig","compAPR","compDistribution","compValue","_args98","_context98","_x140","_x141","getCompSpeed","_ref142","_callee99","cTokenAddress","compSpeed","_context99","_x142","_ref143","_callee100","annualize","cTokenInfo","compoundAllocationPerc","_ref144","_ref145","cTokenTotalSupply","compoundPoolShare","_args100","_context100","_x143","_callee102","_args102","_context102","_ref147","_callee101","_ref148","_ref149","_context101","_x144","_callee104","_args104","_context104","_ref151","_callee103","_ref152","_ref153","compApr","_context103","_x145","getTokensCsv","_callee107","csv","_context107","prototype","sum","pv","cv","avg","_ref155","_callee106","_context106","_ref156","_callee105","header","aprAvg","scoreAvg","lastRow","_context105","protocolsData","p1","foundProtocol","p2","rate","idleRate","score","idleScore","pInfo","pData","pRate","pScore","defiScore","additionalRate","avgRate","_x147","_x146","_callee109","_args109","_context109","_ref158","_callee108","compTokenBalance","_context108","_x148","getTokenGovTokens","speed","getGovTokensUserDistributionSpeed","_ref159","_callee111","govTokensUserDistribution","_args111","_context111","_ref160","_callee110","_context110","_x150","_x149","getGovTokensDistributionSpeed","_ref161","_callee113","govTokensDistribution","_args113","_context113","_ref162","_callee112","govSpeed","_context112","_x152","_x151","getGovTokensAprs","_ref163","_callee115","govTokensAprs","_args115","_context115","_ref164","_callee114","_ref165","_ref166","compoundInfo","_context114","_x155","_x153","_x154","_callee117","_args117","_context117","_ref168","_callee116","tokenConversionRate","fromTokenConfig","_context116","_x156","getGovTokenConfigByAddress","_callee118","checkShowBalance","govTokensEarnings","_args118","_context118","govTokenAmount","_callee121","govTokenConfigForced","_args121","_context121","_ref171","_callee120","idleTokenConfig","govTokensAmounts","_context120","_ref172","_callee119","govTokenIndex","govTokenAddress","_context119","_x158","_x159","_x157","getTokenFees","_callee122","_args122","_context122","_callee123","_ref175","_ref176","gain","fees","_args123","_context123","_ref177","_callee124","_args124","_context124","_x160","getTotalTVL","_callee125","tokensTVL","_context125","getTokensTVL","totalTVL","tokenTVL","_callee129","_context129","_ref180","_callee128","_context128","_ref181","_callee127","oldTokenTVL","idleTokenName","_ref182","_ref183","totalSupply","oldTokenConfig","_ref187","_ref188","oldTokenPrice","oldTotalSupply","_context127","_ref184","_callee126","_ref185","_ref186","govTokenConversionRate","govTokenBalanceConverted","_context126","_x163","oldProtocols","oldProtocol","protocolPos","_x162","_x161","getSubstackLatestFeed","_callee130","endpointInfo","idleSubstackFeed","latestFeed","_context130","items","getAggregatedStats","_callee131","totalAUM","_args131","_context131","getAggregatedStats_chain","_callee135","avgAPR","_args135","_context135","_ref192","_callee134","_context134","_ref193","_callee133","tokenAUM","oldTokenAllocation","oldTokenTotalAllocation","_context133","_ref194","_callee132","_ref195","_ref196","_context132","_x166","_x165","_x164","getTokenApy","_ref197","_callee136","_context136","_x167","_callee139","_args139","_context139","_ref199","_callee138","_context138","_ref200","_callee137","_ref201","_context137","_x169","_x168","getProtocolsTokensBalances","_callee141","tokenBalances","minTokenBalance","protocolsTokens","_args141","_context141","_ref203","_callee140","tokenContract","_context140","_x170","_ref204","_callee142","_args142","_context142","_x171","_x172","_x173","getAvgAPYStats","_ref205","_callee143","apiResults","_args143","_context143","_x174","_x175","_ref206","_callee144","_conversionRate","_args144","_context144","_x176","_x177","_ref207","_callee145","_ref208","_ref209","_context145","protocolScore","getTokenScoreApi","_x178","_x179","_ref210","_callee146","_context146","_x180","_x181","_ref211","_callee148","Aprs","addresses","protocolsApys","idleGovTokenShowAPR","idleAPR","_args148","_context148","_ref212","_callee147","addrIndex","protocolApr","protocolApy","_context147","_x183","_x184","_x182","isNegative","suffixNum","decimalPart","mod","toPrecision","difference","maxLen","highlightedDecimals","numLen","intPart","decPart","repeat","highlightedDec","highlightedIntPart","mouseOver","isVisible","isRainbow","active","onMouseOut","setMouseOver","onMouseOver","titleParentProps","Tos","h2","listStyle","Footer","theme_dark","TorusConnector","kwargs","Torus","api","rest","objectWithoutProperties","possibleConstructorReturn","getPrototypeOf","buttonPosition","init","login","getUserInfo","getPublicAddress","verifier","verifierId","logout","updateNetworkId","Connector","AuthereumConnector","Authereum","getProvider","enable","getAccounts","accounts","disable","constructor","WalletLinkConnector","WalletLink","infuraUrl","appLogoUrl","walletLink","darkMode","makeWeb3Provider","close","WalletConnectConnector","WalletConnectProvider","infuraId","defaultNetwork","InjectedConnector","Connectors","NetworkOnlyConnector","TrezorConnector","LedgerConnector","FortmaticConnector","PortisConnector","manifestEmail","REACT_APP_TREZOR_MANIFEST_EMAIL","manifestAppUrl","REACT_APP_TREZOR_MANIFEST_URL","fortmaticApiKey","REACT_APP_FORTMATIC_KEY_MAINNET","portisDAppId","REACT_APP_PORTIS_DAPP_ID","portisNetwork","REACT_APP_PORTIS_NETWORK","supportedNetworkURLs","REACT_APP_INFURA_KEY","Injected","Infura","providerURL","Trezor","TrezorApi","Ledger","WalletConnect","bridge","Fortmatic","FortmaticApi","logoutOnDeactivation","Portis","PortisApi","dAppId","AuthereumApi","TorusApi","buildEnv","enableLogging","host","showTorusButton","WrongNetworkBanner","current","NetworkUtil","isCorrectNetwork","components_WrongNetworkBanner","NoWeb3BrowserModal","renderContent","RimbleUtil","isMobileDevice","bold","isOpen","ModalCard","closeFunc","closeModal","Body","NoWalletModal","icononly","Outline","GeneralUtil","hasMetaMask","isMetaMask","isTrustWallet","isTrust","isCoinbaseWallet","hasDapper","DapperEthereum","isDapper","isOpera","isAndroid","isIos","MSStream","WrongNetworkModal","RimbleUtils","TransactionFeeModal","Header","subtitle","subtitle2","Web3ConnectionButtons","context","useWeb3Context","setConnector","walletProvider","connectionCallback","unsetConnector","isMetamask","browserWalletDetected","allowedConnectors","registerPage","registerPageByDefault","basicConnectorsName","connectorInfo","walletIcon","flexWrap","ConnectionModal","validated","showTxFees","currentSection","showInstructions","askCustomAddress","closeRemainingTime","customAddressError","newToEthereumChoice","toggleShowTxFees","setStoredSection","componentDidUpdate","resetModal","closeCountdown","setWalletChoice","choice","setCurrentSection","connectCustomAddress","updateCustomAddress","renderModalContent","TOSacceptance","react_router_dom","newToEthereum","showConnectionButtons","pattern","assertThisInitialized","marginBottom","renderFooter","components_TransactionFeeModal","ConnectionPendingModal","UserRejectedConnectionModal","sendMessageAgain","initAccount","LowFundsModal","showSecondary","toggleQRVisible","alignContent","as","h5","ConnectionModalUtil","components_NoWeb3BrowserModal","closeNoWeb3BrowserModal","noWeb3BrowserModalIsOpen","components_NoWalletModal","closeNoWalletModal","noWalletModalIsOpen","components_WrongNetworkModal","closeWrongNetworkModal","wrongNetworkModalIsOpen","components_ConnectionModal","validateAccount","closeConnectionModal","connectionModalIsOpen","accountValidated","components_ConnectionPendingModal","closeConnectionPendingModal","accountConnectionPending","components_UserRejectedConnectionModal","closeUserRejectedConnectionModal","userRejectedConnect","components_LowFundsModal","closeLowFundsModal","lowFundsModalIsOpen","ConnectionErrorModal","setFirstValidConnector","closeConnectionErrorModal","isLedger","connectionError","TransactionErrorModal","closeTransactionErrorModal","isLedgerError","transactionError","isSlowTxError","INFURA_KEY","RimbleTransactionContext","createContext","web3Infura","accountBalance","initWeb3","accountBalanceLow","accountBalanceToken","checkPreflight","checkNetwork","accountInizialized","rejectValidation","accountValidationPending","initializeContracts","rejectAccountConnect","enableUnderlyingWithdraw","userRejectedValidation","transactionConnectionModalIsOpen","openLowFundsModal","openWrongNetworkModal","openNoWeb3BrowserModal","openConnectionErrorModal","openTransactionErrorModal","openConnectionPendingModal","openUserRejectedConnectionModal","openUserRejectedValidationModal","closeUserRejectedValidationModal","meta","setConnectorName","biconomyLoginProcessing","RimbleTransaction","testTransaction","createTransaction","addTransaction","updateTransaction","errorMessage","isWalletConnectClosedModalError","tokenChanged","availableStrategiesChanged","metamaskProvider","connectorNameChanged","web3Host","web3Provider","forceCallback","terminalInfo","TerminalHttpProviderParams","terminalSourceType","terminalHttpProvider","web3Callback","originalWeb3","biconomyWeb3Provider","detectEthereumProvider","autoRefreshOnNetworkChange","Web3","HttpProvider","library","SourceType","customHttpProvider","TerminalHttpProvider","web3Injected","callbackAfterLogin","setCallbackAfterLogin","isLogin","userContract","Biconomy","onEvent","READY","ERROR","useInfuraProvider","simpleIDInfo","simpleIDParams","SimpleID","wallets","shownNotifications","isError","$crisp","notificationId","content","Sentry","increaseAmount","_ref15","balanceOf","determineAccountLowBalance","openConnectionModal","getRequiredNetwork","getNetworkId","getNetworkName","getNetworkType","contractMethod","gasLimit","_this$state","manualConfirmationTimeoutId","confirmationCallback","manualConfirmation","receiptCallback","isDeniedTx","_args24","confirmationCount","call_callback","confidenceThreshold","recentEvent","timeout","lastUpdated","updatedTransaction","openNoWalletModal","CrispClient","accountBalanceDAI","subscribedTransactions","connectionErrorModalOpened","transactionErrorModalOpened","Provider","ConnectionModalsUtil","components_TransactionErrorModal","components_ConnectionErrorModal","utilities_NetworkUtil","Consumer","governanceEnabled","offsetTop","ScrollToTop","pathname","useLocation","useEffect","PageNotFound","Header_styles","NetworkOverview","getNetworkCircleColor","circleColor","networkCircle","DebuggerButtons","Web3Debugger","components_NetworkOverview","Web3Debugger_DebuggerButtons","node","constant","outputs","payable","stateMutability","anonymous","indexed","ERC20","govTokensDisabled","defiPrime","IdleTokenV4","cToken","yToken","iToken","aToken","CHAI","skipMintForDeposit","TransactionToastMessages","started","confirmed","TransactionToastUtil","collectionHasNewObject","prevCollection","currentCollection","getNewObjectFromCollection","objectKey","getUpdatedObjectFromCollection","object","getTransactionFromCollection","identifier","collection","getUpdatedTransaction","currentTx","prevTx","processTransactionUpdates","showTransactionToast","toastMeta","getTransactionToastMeta","closeElem","transactionToastMeta","transactionAction","charAt","newMessage","Landing","lazy","then","Dashboard","Governance","App","selectedTab","connecting","genericError","selectedTheme","buyModalOpened","toastMessageProps","innerWidth","innerHeight","unsubscribeFromHistory","closeToastMessage","showToastMessage","processCustomParam","cachedKeyFound","storedCachedData","widthChanged","heightChanged","tabIndex","loadAvailableTokens","warn","jQuery","setThemeMode","closeIframe","w","iFrames","getElementsByTagName","iframe","contentWindow","parents","loadCustomAddress","strategyChanged","self","parent","hasMetamask","store","themeDark","SuspenseLoader","web3_react_dist_default","web3Api","libraryName","web3_react_dist","RimbleWeb3","needsPreflight","react_router","react","fallback","isDashboard","setToken","setStrategy","openBuyModal","handleMenuClick","selectTab","closeBuyModal","isGovernance","components_Header","src_Web3Debugger_Web3Debugger","exact","updateSelectedTab","expires","acceptOnScroll","cookieName","acceptOnScrollPercentage","marginTop","overflowY","src_Tos_Tos","src_PageNotFound_PageNotFound","utilities_TransactionToastUtil","Boolean","hostname","dsn","beforeSend","hint","originalException","ReactDOM","src_App_App","serviceWorker","ready","registration","unregister","FieldComponent","colInfo","colIndex","visible","fieldIndex","colProps","_TableCellHeader_TableCellHeader__WEBPACK_IMPORTED_MODULE_7__","oldTokenName","oldIdleTokens","skipMigration","biconomyLimitReached","toggleSkipMigration","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_5__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_4__","executeAction","idleTokenToRedeem","_clientProtocolAmountsRedeem","gasLimitRedeem","callbackRedeem","callbackReceiptRedeem","toggleMetaTransactionsEnabled","checkMigrationContractApproved","migrationContractName","tokenApproved","oldIdleTokensConverted","oldContractInfo","oldContractABI","biconomyLimits","disapproveMigration","approveMigration","migrationMethod","callbackMigrate","callbackReceiptMigrate","useMetaTx","_skipRebalance","_migrationContract$me","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","biconomyChanged","usePermitChanged","fastBalanceSelectorChanged","batchMigrationEnabled","SkipMigrationComponent","react__WEBPACK_IMPORTED_MODULE_11___default","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_16__","rimble_ui__WEBPACK_IMPORTED_MODULE_20__","biconomyEnabled","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_13__","migrateTextBefore","migrateText","_TransactionField_TransactionField__WEBPACK_IMPORTED_MODULE_18__","_TxProgressBar_TxProgressBar__WEBPACK_IMPORTED_MODULE_17__","_FastBalanceSelector_FastBalanceSelector__WEBPACK_IMPORTED_MODULE_19__","functionName","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_14__","migrationImage","migrationTextProps","approveText","_TableHeader_TableHeader__WEBPACK_IMPORTED_MODULE_11__","_TableRow_TableRow__WEBPACK_IMPORTED_MODULE_9__","footer","VariationNumber","IconDirection","iconSize","iconPos","loading-dots","loading-dots--dot","dot-keyframes","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1___default","rimble_ui__WEBPACK_IMPORTED_MODULE_3__","bgLayer","backgroundRepeat","backgroundPosition","backgroundSize","backgroundImage","iconHeight","subtitleProps","BackButton","selectedProvider","availableProviders","renderPaymentMethod","currentState","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__","goBack","componentWillMount","getProviderInfo","newProviderInfo","getDefaultPaymentProvider","paymentMethod","getAvailablePaymentProviders","providerSupportMethod","providerSupportToken","defaultPaymentProvider","selectProvider","ethAvailable","tokenAvailable","selectMethod","loadRemoteResources","handleCountryChange","getAvailableCountries","availableCountries","countryCode","methodInfo","loadAvailableMethods","InnerComponent","_ImageButton_ImageButton__WEBPACK_IMPORTED_MODULE_12__","imagePropsExtended","react_select__WEBPACK_IMPORTED_MODULE_10__","noOptionsMessage","_ModalCard__WEBPACK_IMPORTED_MODULE_11__","currYear","getFullYear","columnWidth","react__WEBPACK_IMPORTED_MODULE_9___default","rimble_ui__WEBPACK_IMPORTED_MODULE_12__","_ExtLink_ExtLink__WEBPACK_IMPORTED_MODULE_8__","role","aria-label","react_router_dom__WEBPACK_IMPORTED_MODULE_7__","ColTitle","useIconOnly","fieldName","earningsCounter","feesStart","feesEnd","earningsCurveStart","earningsCurveEnd","tokenAPY2","tokenAPR","allocationChartWidth","allocationChartHeight","resizeAllocationChart","aprChartEndTimestamp","aprChartStartTimestamp","aprChartData","mDate","newPoint","aprChartWidth","aprChartHeight","resizeAprChart","aprChartType","aprChartProps","firstTokenPrice","firstIdleBlock","performanceChartWidth","performanceChartHeight","resizePerformanceChart","apr_end_date","apr_start_date","apr_start_timestamp","apiResultsPerformanceChart","idleTokenPerformance","performanceChartData","performanceChartType","performanceChartProps","_args","amountToMigrate","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","poolSize","earningsPercCurveDirection","earningsPercCurve","earningsPercDirection","oldAPY","tokenAPYNoGov","allocationChartRowElement","$allocationChartRowElement","css","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_9__","_d","add","random","aprChartRowElement","$aprChartRowElement","lineWidth","defs","linearGradientDef","offset","react__WEBPACK_IMPORTED_MODULE_12___default","_CustomTooltip_CustomTooltip__WEBPACK_IMPORTED_MODULE_17__","protocolEarning","_CustomTooltip_CustomTooltipRow__WEBPACK_IMPORTED_MODULE_20__","PerformanceChartRowElement","$PerformanceChartRowElement","blocknumber","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_1__","fieldChanged","contractInitialized","loader","rimble_ui__WEBPACK_IMPORTED_MODULE_21__","icon1","tooltipProps","icon2","strategyName","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_14__","react_countup__WEBPACK_IMPORTED_MODULE_11___default","_VariationNumber_VariationNumber__WEBPACK_IMPORTED_MODULE_18__","earningsCurve","governanceTokenName","tooltipMode","buttonLabel","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_16__","_AllocationChart_AllocationChart__WEBPACK_IMPORTED_MODULE_19__","formattedValue","_isBigNumber"],"mappings":"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","file":"static/js/main.90bace05.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Flex, Loader, Text } from \"rimble-ui\";\n\nclass FlexLoader extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        justifyContent={'center'}\n        {...this.props.flexProps}\n      >\n        <Loader {...this.props.loaderProps} />\n        {\n          this.props.text &&\n            <Text {...this.props.textProps}>{this.props.text}</Text>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default FlexLoader;\n","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\n\nclass ChartCustomTooltipRow extends Component {\n\n  async componentWillMount(){\n    \n  }\n\n  async componentDidUpdate(prevProps,prevState){\n\n  }\n\n  render() {\n    return (\n      <Flex\n        mb={2}\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n      >\n        <Flex\n          pr={2}\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-start'}\n        > \n          {\n            this.props.color && \n            <Box\n              mr={2}\n              width={'10px'}\n              height={'10px'}\n              borderRadius={'50%'}\n              backgroundColor={this.props.color}\n            >\n            </Box>\n          }\n          <Text\n            fontSize={1}\n            fontWeight={2}\n            textAlign={'left'}\n            color={'dark-gray'}\n            style={{\n              textTransform:'capitalize'\n            }}\n          >\n            {this.props.label}\n          </Text>\n        </Flex>\n        <Flex\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-end'}\n        >\n          <Text\n            fontSize={1}\n            fontWeight={3}\n            color={'cellText'}\n            textAlign={'right'}\n            style={{\n              whiteSpace:'nowrap'\n            }}\n            dangerouslySetInnerHTML={{\n              __html: this.props.value\n            }}\n          >\n          </Text>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default ChartCustomTooltipRow;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"PageNotFound_headerContainer__Ly5Tz\",\"headerBgFiller\":\"PageNotFound_headerBgFiller__1NzlO\",\"bgContainer\":\"PageNotFound_bgContainer__1Racj\",\"list\":\"PageNotFound_list__Cnz-b\",\"textContainer\":\"PageNotFound_textContainer__g_kTm\"};","import React from \"react\";\nimport { Text } from \"rimble-ui\";\n\nclass ShortHash extends React.Component {\n  shortenHash = hash => {\n    let shortHash = hash;\n    const txStart = shortHash.substr(0, 7);\n    const txEnd = shortHash.substr(shortHash.length - 4);\n    shortHash = txStart + \"...\" + txEnd;\n    return shortHash;\n  };\n  render() {\n    const shortHash = this.shortenHash(this.props.hash);\n\n    return <Text display={'inline'} {...this.props}>{shortHash}</Text>;\n  }\n}\n\nexport default ShortHash;\n","import React, { Component } from 'react';\nimport {\n  Flex, Box\n} from \"rimble-ui\";\nimport styles from './LoadingSpinner.module.scss';\n\nclass LoadingSpinner extends Component {\n  render() {\n    return (\n      <Flex\n        alignItems={'center'}\n        justifyContent={'center'}\n      >\n        <Box className={[styles[\"loading-dots\"]]}>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n        </Box>\n      </Flex>\n    );\n  }\n}\n\nexport default LoadingSpinner;\n","import React, { Component } from 'react';\nimport {\n  Flex,\n  Button\n} from \"rimble-ui\";\nimport LoadingSpinner from '../LoadingSpinner/LoadingSpinner.js';\n\nclass ButtonLoader extends Component {\n  render() {\n    return (\n       <Button\n        onClick={this.props.handleClick}\n         {...this.props.buttonProps}\n       >\n        <Flex flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n          <Flex width={1} display={ this.props.isLoading ? 'flex' : 'none' }>\n            <LoadingSpinner />\n          </Flex>\n          <Flex width={1} display={ this.props.isLoading ? 'none' : 'flex' }>\n            {this.props.buttonText}\n          </Flex>\n        </Flex>\n       </Button>\n    );\n  }\n}\n\nexport default ButtonLoader;\n","import { tint, shade, readableColor } from 'polished';\n\n// rimble base colors\nconst baseColors = {\n  black: '#000e1a',\n  white: '#FFF',\n  blue: '#0036ff',\n  darkBlue: '#0028be',\n  green: '#28C081',\n  yellow: '#FD9D28',\n  red: '#DC2C10',\n  blurple: '#4E3FCE',\n  consensysblue: '#3259D6',\n};\n\n// rimble palette\nconst colors = {\n  blurple: {\n    base: baseColors.blurple,\n    text: readableColor(baseColors.blurple),\n    light: [null, tint(0.2, baseColors.blurple)],\n    dark: [null, shade(0.2, baseColors.blurple)],\n  },\n  blue: {\n    base: baseColors.blue,\n    text: readableColor(baseColors.blue),\n    light: [null, tint(0.9, baseColors.blue)],\n    dark: [null, shade(0.4, baseColors.blue)],\n  },\n  green: {\n    base: baseColors.green,\n    text: baseColors.white,\n    light: [null, tint(0.9, baseColors.green)],\n    dark: [null, shade(0.4, baseColors.green)],\n  },\n  yellow: {\n    base: baseColors.yellow,\n    text: readableColor(baseColors.yellow),\n    light: [null, tint(0.9, baseColors.yellow)],\n    dark: [null, shade(0.4, baseColors.yellow)],\n  },\n  red: {\n    base: baseColors.red,\n    text: readableColor(baseColors.red),\n    light: [null, tint(0.9, baseColors.red)],\n    dark: [null, shade(0.4, baseColors.red)],\n  },\n};\n\nconst blurple = colors.blurple;\nconst blue = colors.blue;\nconst green = colors.green;\nconst yellow = colors.yellow;\nconst red = colors.red;\n\nexport { blurple };\nexport { blue };\nexport { green };\nexport { yellow };\nexport { red };\nexport default baseColors;\n","import React, { Component } from 'react';\nimport { Icon, Text, Flex } from \"rimble-ui\";\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass IconBox extends Component {\n\n  render() {\n    const cardProps = Object.assign({\n      p:3\n    },this.props.cardProps);\n    return (\n      <DashboardCard\n        cardProps={cardProps}\n      >\n        <Flex\n          alignItems={'center'}\n          flexDirection={'column'}\n        >\n          <Icon\n            size={'1.8em'}\n            color={'cellText'}\n            name={this.props.icon ? this.props.icon : 'InfoOutline'}\n            {...this.props.iconProps}\n          />\n          {\n            this.props.text && \n              <Text\n                mt={1}\n                fontSize={2}\n                color={'cellText'}\n                textAlign={'center'}\n                dangerouslySetInnerHTML={{\n                  __html:this.props.text\n                }}\n                {...this.props.textProps}\n              />\n          }\n          {\n            this.props.children\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default IconBox;\n","import theme from '../theme';\nimport React, { Component } from 'react';\nimport styles from './TransactionListFilters.module.scss';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TableCellHeader from '../TableCellHeader/TableCellHeader';\nimport { Flex, Text, Icon, Radio, Button, Link } from \"rimble-ui\";\n\nclass TransactionListFilters extends Component {\n\n  state = {\n    maxWidth:0.4,\n    minWidth:0.18,\n    maxHeight:425,\n    isOpened:false,\n    activeFilters:{\n      status:null,\n      assets:null,\n      actions:null\n    }\n  }\n\n  setFilter = (filter,value) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:value\n      }\n    }));\n  }\n\n  applyFilters = (toggle=true) => {\n    if (typeof this.props.applyFilters === 'function'){\n      this.props.applyFilters(this.state.activeFilters);\n    }\n    if (toggle){\n      this.toggleOpened();\n    }\n  }\n\n  resetFilter = (filter) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:null\n      }\n    }),() => {\n      this.applyFilters(false);\n    });\n  }\n\n  resetFilters = (toggle=true) => {\n    this.setState({\n      activeFilters:{\n        status:null,\n        assets:null,\n        actions:null\n      }\n    },() => {\n      if (typeof this.props.resetFilters === 'function'){\n        this.props.resetFilters();\n      }\n      if (toggle){\n        this.toggleOpened();\n      }\n    })\n  }\n\n  toggleOpened = () => {\n    this.setState((prevState) => ({\n      isOpened: !prevState.isOpened\n    }));\n  }\n\n  render() {\n    return (\n      <Flex\n        mb={3}\n        top={0}\n        width={1}\n        zIndex={1}\n        flexDirection={'column'}\n        alignItems={'flex-start'}\n        justifyContent={'center'}\n        position={['relative','absolute']}\n      >\n        <DashboardCard\n          cardProps={{\n            py:2,\n            px:3,\n            width:[1, this.state.isOpened ? this.state.maxWidth : this.state.minWidth ],\n            style:{\n              transition:'width 0.3s ease-in-out'\n            }\n          }}\n          isInteractive={ !this.state.isOpened }\n          handleClick={ !this.state.isOpened ? this.toggleOpened : null }\n        >\n          <Flex\n            width={1}\n            style={{\n              cursor:'pointer'\n            }}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'space-between'}\n            onClick={ this.state.isOpened ? this.toggleOpened : null }\n          >\n            <Text\n              fontSize={2}\n              fontWeight={500}\n              color={'copyColor'}\n            >\n              Filters\n            </Text>\n            <Icon\n              color={'copyColor'}\n              size={ this.props.isMobile ? '1.3em' : '1.5em'}\n              name={ this.state.isOpened ? 'Close' : 'Tune' }\n            />\n          </Flex>\n          <Flex\n            flexDirection={'column'}\n            style={{\n              overflow:'hidden',\n              transition:'max-height 0.3s ease-in-out',\n              maxHeight:this.state.isOpened ? this.state.maxHeight : 0\n            }}\n          >\n            <Flex\n              mt={2}\n              py={2}\n              width={1}\n              flexDirection={'row'}\n              borderTop={`1px solid ${theme.colors.divider}`}\n            >\n              {\n                Object.keys(this.props.filters).map((filterCategory) => {\n                  const filterValues = this.props.filters[filterCategory];\n                  return (\n                    <Flex\n                      flexDirection={'column'}\n                      key={`filter_${filterCategory}`}\n                      style={{\n                        flexBasis:'0',\n                        flex:'1 1 0px'\n                      }}\n                    >\n                      <TableCellHeader\n                        pb={2}\n                        fontWeight={3}\n                        fontSize={[0,2]}\n                        color={'cellText'}\n                      >\n                        {filterCategory.toUpperCase()}\n                      </TableCellHeader>\n                      {\n                        Object.keys(filterValues).map((filterValue) => {\n                          const filterLabel = filterValues[filterValue];\n                          const isChecked = this.state.activeFilters[filterCategory]===filterValue;\n                          return (\n                            <Radio\n                              my={2}\n                              fontSize={[0,2]}\n                              label={filterLabel}\n                              checked={isChecked}\n                              className={styles.radioBtn}\n                              key={`filter_${filterCategory}_${filterValue}`}\n                              onChange={ e => this.setFilter(filterCategory,filterValue) }\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                  );\n                })\n              }\n            </Flex>\n            <Flex\n              flexDirection={'row'}\n            >\n              <Button.Text\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.applyFilters}\n              >\n                Apply filters\n              </Button.Text>\n              <Button.Text\n                ml={3}\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.resetFilters}\n              >\n                Reset\n              </Button.Text>\n            </Flex>\n          </Flex>\n        </DashboardCard>\n        {\n          !this.state.isOpened && this.props.activeFilters && Object.values(this.props.activeFilters).filter( v => (v !== null) ).length>0 &&\n            <Flex\n              mt={3}\n              width={1}\n              flexDirection={['column','row']}\n              alignItems={['flex-start','flex-end']}\n              justifyContent={['flex-end','flex-start']}\n            >\n              {\n                Object.keys(this.props.activeFilters).map((filterName) => {\n                  const filterValue = this.props.activeFilters[filterName];\n                  if (filterValue !== null){\n                    const filterLabel = this.props.filters[filterName][filterValue];\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:[2,0],\n                          mr:[0,3],\n                          width:[1,this.state.minWidth]\n                        }}\n                        isInteractive={true}\n                        key={`filter_${filterName}`}\n                      >\n                        <Flex\n                          width={1}\n                          style={{\n                            cursor:'pointer'\n                          }}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'space-between'}\n                          onClick={e => this.resetFilter(filterName)}\n                        >\n                          <Text\n                            fontSize={2}\n                            fontWeight={500}\n                            color={'cellText'}\n                            style={{\n                              textTransform:'capitalize'\n                            }}\n                          >\n                            {filterLabel}\n                          </Text>\n                          <Icon\n                            name={'Close'}\n                            color={'cellText'}\n                            size={ this.props.isMobile ? '1.3em' : '1.5em'}\n                          />\n                        </Flex>\n                      </DashboardCard>\n                    );\n                  }\n                  return null;\n                })\n              }\n              <Link\n                mt={[2,0]}\n                fontSize={[3,2]}\n                fontWeight={[3]}\n                color={'dark-gray'}\n                hoverColor={'copyColor'}\n                textAlign={['center','left']}\n                onClick={ e => this.resetFilters(false) }\n              >\n                Clear all filters\n              </Link>\n            </Flex>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TransactionListFilters;","import React, { Component } from 'react';\n// import style from './TransactionsList.module.scss';\nimport TableRow from '../TableRow/TableRow';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Heading, Text, Link, Icon } from \"rimble-ui\";\nimport TransactionField from '../TransactionField/TransactionField';\nimport TransactionListFilters from '../TransactionListFilters/TransactionListFilters';\n\nclass TransactionsList extends Component {\n\n  state = {\n    page:1,\n    prevTxs:{},\n    txsPerPage:5,\n    loading:false,\n    totalTxs:null,\n    totalPages:null,\n    activeFilters:{\n      status:null,\n      assets:null,\n      actions:null,\n    },\n    filters:{\n      actions:{\n        deposit:'Deposit',\n        redeem:'Redeem',\n        send:'Send',\n        receive:'Receive',\n        migrate:'Migrate',\n        swap:'Swap-In',\n        swapout:'Swap-Out',\n        withdraw:'Withdraw',\n        // curvein:'CurveIn',\n        // curveout:'CurveOut',\n        // curvezapin:'CurveZapIn',\n        // curvezapout:'CurveZapOut',\n      },\n      status:{\n        completed:'Completed',\n        pending:'Pending',\n        failed:'Failed'\n      },\n      assets:{}\n    },\n    renderedTxs:null,\n    processedTxs:null,\n    lastBlockNumber:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  prevPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.max(1,this.state.page-1);\n    this.setState({\n      page\n    });\n  }\n\n  nextPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.min(this.state.totalPages,this.state.page+1);this.processTxs(page);\n    this.setState({\n      page\n    });\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadTxs();\n  }\n\n  applyFilters = activeFilters => {\n    this.setState({\n      activeFilters\n    },() => {\n      this.processTxs();\n    });\n  }\n\n  resetFilters = () => {\n    this.setState({\n      activeFilters:{\n        status:null,\n        assets:null,\n        actions:null,\n      }\n    },() => {\n      this.processTxs();\n    });\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n    const transactionsChanged = JSON.stringify(prevProps.transactions) !== JSON.stringify(this.props.transactions);\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n\n    if (tokenChanged || transactionsChanged){\n      this.setState({\n        page:1,\n        prevTxs:{}\n      },()=>{\n        this.loadTxs();\n      })\n      return false;\n    }\n    const pageChanged = prevState.page !== this.state.page;\n    if (pageChanged){\n      this.processTxs();\n    }\n  }\n\n  async loadTxs(count,endBlockNumber='latest'){\n    if (!this.props.account){\n      return false;\n    }\n\n    count = count ? count : 0;\n\n    this.setState({\n      loading:true\n    });\n\n    const firstBlockNumber = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n\n    // Take last block number, is null take first block number\n    let prevTxs = {...this.state.prevTxs};\n    let lastBlockNumber = Math.max(firstBlockNumber,this.state.lastBlockNumber);\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    const assets = {...this.state.filters.assets};\n\n    enabledTokens.forEach((token) => {\n      assets[token] = token;\n    });\n\n    let actions = {...this.state.filters.actions};\n    \n    const enabledActions = typeof this.props.enabledActions !== 'undefined' ? this.props.enabledActions : [];\n\n    if (enabledActions.length){\n      actions = {};\n      enabledActions.forEach( action => {\n        actions[action.toLowerCase()] = action;\n      });\n    }\n\n    const etherscanTxs = await this.functionsUtil.getEtherscanTxs(this.props.account,lastBlockNumber,'latest',enabledTokens);\n\n    // Merge new txs with previous ones\n    if (etherscanTxs && etherscanTxs.length){\n      etherscanTxs.forEach((tx) => {\n        if (tx.hashKey){\n          prevTxs[tx.hashKey] = tx;\n        } else {\n          prevTxs[`t${tx.timeStamp}`] = tx;\n        }\n      });\n    }\n\n    const lastTx = Object.values(prevTxs).pop();\n\n    // Update last block number\n    if (lastTx && lastTx.blockNumber && (!this.state.lastBlockNumber || lastTx.blockNumber>this.state.lastBlockNumber)){\n      lastBlockNumber = parseInt(lastTx.blockNumber)+1;\n    }\n\n    return this.setState( prevState => ({\n      prevTxs,\n      loading:false,\n      lastBlockNumber,\n      filters:{\n        ...prevState.filters,\n        assets,\n        actions\n      }\n    }), () => {\n      this.processTxs()\n    });\n  };\n\n  processTxs = (page=null) => {\n\n    page = page ? page : this.state.page;\n\n    const availableActions = Object.keys(this.state.filters.actions).map( action => (action.toLowerCase()) );\n\n    // Sort prevTxs by timeStamp\n    const txsIndexes = Object.values(this.state.prevTxs)\n                        .filter(tx => (!!parseFloat(tx.value))) // Filter txs with value\n                        .filter(tx => (\n                          (this.state.activeFilters.status === null || (tx.status && tx.status.toLowerCase() === this.state.activeFilters.status.toLowerCase())) && \n                          (this.state.activeFilters.assets === null || (tx.token && tx.token.toLowerCase() === this.state.activeFilters.assets.toLowerCase())) &&\n                          ( tx.action && availableActions.includes(tx.action.toLowerCase()) && (this.state.activeFilters.actions === null || (tx.action.toLowerCase() === this.state.activeFilters.actions.toLowerCase()) ))\n                        )) // Filter by activeFilters\n                        .sort((a,b) => (a.timeStamp > b.timeStamp) ? -1 : 1 );\n\n    // Calculate max number of pages\n    const totalTxs = txsIndexes.length;\n    const totalPages = Math.ceil(totalTxs/this.state.txsPerPage);\n\n    const processedTxs = [];\n\n    // console.log(this.state.prevTxs,txsIndexes);\n\n    txsIndexes.forEach((tx, i) => {\n      const selectedToken = tx.token;\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const decimals = Math.min(tokenConfig.decimals,8);\n      \n      const date = new Date(tx.timeStamp*1000);\n      const action = tx.action ? tx.action : this.functionsUtil.getTxAction(tx,tokenConfig);\n\n      const parsedValue = parseFloat(tx.tokenAmount);\n\n      const amount = parsedValue ? (this.props.isMobile ? parsedValue.toFixed(4) : parsedValue.toFixed(decimals)) : '-';\n      const momentDate = this.functionsUtil.strToMoment(date);\n\n      // Save new params\n      tx.status = tx.status ? tx.status : 'Completed';\n      tx.action = action;\n      tx.momentDate = momentDate;\n      tx.amount = amount;\n\n      if (i>=((page-1)*this.state.txsPerPage) && i<((page-1)*this.state.txsPerPage)+this.state.txsPerPage) {\n        processedTxs.push(tx);\n      }\n    });\n\n    // console.log('processedTxs',this.state.page,txsIndexes,processedTxs);\n\n    const loading = false;\n  \n    this.setState({\n      loading,\n      totalTxs,\n      totalPages,\n      processedTxs\n    });\n  }\n\n  render() {\n\n    const hasActiveFilters = Object.values(this.state.activeFilters).filter( v => (v !== null) ).length>0;\n\n    // console.log('processedTxs',this.state.processedTxs);\n    const processedTxs = this.state.processedTxs ? Object.values(this.state.processedTxs) : null;\n\n    return (\n      <Flex flexDirection={'column'} width={1} m={'0 auto'}>\n        {\n          this.state.loading ? (\n            <FlexLoader\n              flexProps={{\n                flexDirection:'row',\n                minHeight:this.props.height\n              }}\n              loaderProps={{\n                size:'30px'\n              }}\n              textProps={{\n                ml:2\n              }}\n              text={'Loading transactions...'}\n            />\n          ) : (\n            <Flex\n              width={1}\n              position={'relative'}\n              flexDirection={'column'}\n              id={'transactions-list-container'}\n              pt={[0, hasActiveFilters ? '116px' : 5]}\n            >\n              <TransactionListFilters\n                {...this.props}\n                filters={this.state.filters}\n                activeFilters={this.state.activeFilters}\n                resetFilters={this.resetFilters.bind(this)}\n                applyFilters={this.applyFilters.bind(this)}\n              />\n              {\n                processedTxs && processedTxs.length ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <TableHeader\n                      cols={this.props.cols}\n                      isMobile={this.props.isMobile}\n                    />\n                    <Flex\n                      id={'transactions-list'}\n                      flexDirection={'column'}\n                    >\n                      {\n                        processedTxs.map( (tx,index) => {\n                          const txHash = tx.hash;\n                          const txHashKey = tx.hashKey;\n                          const handleClick = (e) => {\n                            return (txHash ? window.open(`https://etherscan.io/tx/${txHash}`) : null);\n                          };\n\n                          return (\n                            <TableRow\n                              {...this.props}\n                              rowProps={{\n                                isInteractive:true\n                              }}\n                              hash={txHash}\n                              transaction={tx}\n                              key={`tx-${index}`}\n                              handleClick={handleClick}\n                              rowId={`tx-col-${txHashKey}`}\n                              cardId={`tx-card-${txHashKey}`}\n                              fieldComponent={TransactionField}\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                    <Flex\n                      height={'50px'}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'flex-end'}\n                      id={'transactions-list-pagination'}\n                    >\n                      <Flex mr={3}>\n                        <Link mr={1} onClick={ e => this.prevPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowLeft'}\n                            size={'2em'}\n                            color={ this.state.page>1 ? 'arrowActive' : 'arrowInactive' }\n                          />\n                        </Link>\n                        <Link onClick={ e => this.nextPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowRight'}\n                            size={'2em'}\n                            color={ this.state.page<this.state.totalPages ? 'arrowActive' : 'arrowInactive' }\n                          />\n                        </Link>\n                      </Flex>\n                      <Flex alignItems={'center'}>\n                        <Text \n                          fontSize={1}\n                          fontWeight={3}\n                          color={'cellText'}\n                        >\n                          Page {this.state.page} of {this.state.totalPages}\n                        </Text>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Heading.h3 textAlign={'center'} fontFamily={'sansSerif'} fontWeight={2} fontSize={[2]} color={'dark-gray'}>\n                    There are no transactions\n                  </Heading.h3>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TransactionsList;\n","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass CustomTooltip extends Component {\n\n  render() {\n    return (\n      <DashboardCard\n        key={this.props.point.id}\n        cardProps={{\n          py:2,\n          px:3,\n          width:1,\n          left: this.props.point.data.itemPos>50 ? '-110%' : '0'\n        }}\n      >\n        <Flex\n          width={1}\n          flexDirection={'column'}\n        >\n          {\n            this.props.point.data.xFormatted && \n              <Text\n                mb={2}\n                fontSize={1}\n                fontWeight={3}\n                color={'cellText'}\n                textAlign={'left'}\n              >\n                {this.props.point.data.xFormatted}\n              </Text>\n          }\n          {this.props.children}\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default CustomTooltip;","import { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport globalConfigs from '../configs/globalConfigs';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass AllocationChart extends Component {\n  state = {\n    chartData:null,\n    chartProps:null,\n    selectedSlice:null,\n    totalAllocation:null,\n    protocolsAllocations:null,\n    protocolsAllocationsPerc:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    if (tokenChanged){\n      this.setStateSafe({\n        chartData:null,\n        chartProps:null,\n        selectedSlice:null,\n        totalAllocation:null,\n        protocolsAllocations:null,\n        protocolsAllocationsPerc:null\n      },() => {\n        this.loadData();\n      });\n    } else if (prevProps.isMobile !== this.props.isMobile){\n      this.loadData()\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async loadData(){\n    const {\n      totalAllocation,\n      protocolsAllocations,\n      protocolsAllocationsPerc\n    } = await this.functionsUtil.getTokenAllocation(this.props.tokenConfig);\n\n    // console.log('AllocationChart',this.props.token,totalAllocation,protocolsAllocations,protocolsAllocationsPerc);\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth: 0,\n      cornerRadius:0,\n      motionDamping:15,\n      innerRadius: 0.65,\n      motionStiffness:90,\n      colors:d => d.color,\n      onMouseEnter:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:data\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:null\n        });\n      },\n      tooltipFormat: v => v+'%',\n      sliceLabel: d => d.value+'%',\n      radialLabel: d => {\n        return null;\n      },\n      theme:{\n        tooltip: {\n          container: this.props.inline ? {\n            background: this.props.theme.colors.cardBg\n          } : {\n            display: 'none',\n          }\n        },\n        labels:{\n          text:{\n            fontWeight:600,\n            fontSize:this.props.isMobile ? 13 : 15,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      enableRadialLabels:false,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      enableSlicesLabels: !this.props.inline,\n      radialLabelsLinkColor:{ from: 'color' },\n      borderColor:{ from: 'color', modifiers: [ [ 'darker', 0.2 ] ] },\n      margin: this.props.inline ? {top:0,right:15,bottom:0,left:1} : (this.props.isMobile ? { top: 10, right: 15, bottom: 0, left: 15 } : { top: 10, right: 35, bottom: 0, left: 35 }),\n    };\n\n    const chartData = [];\n\n    this.props.tokenConfig.protocols.forEach((protocolInfo,i)=>{\n      const protocolName = protocolInfo.name;\n      const protocolAddr = protocolInfo.address.toLowerCase();\n      if (protocolsAllocationsPerc[protocolAddr]){\n        const protocolAllocationPercParsed = parseFloat(protocolsAllocationsPerc[protocolAddr].times(100).toFixed(2));\n        chartData.push({\n          id:protocolAddr,\n          name:protocolName,\n          value:protocolAllocationPercParsed,\n          color:'hsl('+globalConfigs.stats.protocols[protocolName].color.hsl.join(',')+')',\n          label: globalConfigs.stats.protocols[protocolName].label ? globalConfigs.stats.protocols[protocolName].label : this.functionsUtil.capitalize(protocolName)\n        });\n      }\n\n    });\n\n    this.setStateSafe({\n      chartData,\n      chartProps,\n      totalAllocation,\n      protocolsAllocations,\n      protocolsAllocationsPerc\n    });\n  }\n\n  render() {\n    \n    const selectedSlice = this.state.selectedSlice !== null && this.state.protocolsAllocations[this.state.selectedSlice.id] ? this.state.protocolsAllocations[this.state.selectedSlice.id] : false;\n    const protocolIcon = this.state.selectedSlice !== null ? (globalConfigs.stats.protocols[this.state.selectedSlice.name] && globalConfigs.stats.protocols[this.state.selectedSlice.name].icon ? globalConfigs.stats.protocols[this.state.selectedSlice.name].icon : `${this.state.selectedSlice.name}.svg`) : null;\n\n    return (\n      <Flex\n        width={1}\n        position={'relative'}\n      >\n        {\n          this.state.totalAllocation && !this.props.inline &&\n            <Flex\n              zIndex={0}\n              top={['23%','25%']}\n              left={['20%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              position={'absolute'}\n              width={['60%','46%']}\n              height={['53%','46%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                selectedSlice ? (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={`/images/protocols/${protocolIcon}`}\n                    />\n                    <SmartNumber\n                      fontSize={[3,4]}\n                      decimals={3}\n                      fontWeight={4}\n                      maxPrecision={5}\n                      number={selectedSlice}\n                    />\n                    <Text\n                      fontSize={[1,2]}\n                      fontWeight={3}\n                      color={'cellTitle'}\n                    >\n                      Funds in {this.state.selectedSlice.label}\n                    </Text>\n                  </Flex>\n                ) : (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={`/images/idle-mark.png`}\n                    />\n                    <SmartNumber\n                      unitProps={{\n                        ml:2,\n                        fontWeight:3,\n                        fontSize:[3,4]\n                      }}\n                      decimals={3}\n                      fontWeight={4}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      number={this.state.totalAllocation}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      Total funds\n                    </Text>\n                  </Flex>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          showLoader={true}\n          {...this.props}\n          {...this.state.chartProps}\n          data={this.state.chartData}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default AllocationChart;","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass SmartNumber extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  render() {\n    let formattedNumber = '-';\n    const number = typeof this.props.number !== 'undefined' && !isNaN(this.props.number) && this.props.number !== false && this.props.number !== null ? this.props.number : null;\n\n    if (number){\n      switch (this.props.type){\n        case 'money':\n          formattedNumber = this.functionsUtil.formatMoney(number,this.props.precision);\n        break;\n        default:\n          formattedNumber = this.functionsUtil.abbreviateNumber(number,this.props.decimals,this.props.maxPrecision,this.props.minPrecision);\n        break;\n      }\n    } else {\n      formattedNumber = '-';\n    }\n\n    const flexProps = {\n      width:1,\n      alignItems:'center',\n      flexDirection:'row',\n      justifyContent:'center'\n    };\n\n    // Replace props\n    if (this.props.flexProps && Object.keys(this.props.flexProps).length){\n      Object.keys(this.props.flexProps).forEach(p => {\n        flexProps[p] = this.props.flexProps[p];\n      });\n    }\n\n    const showUnit = formattedNumber !== '-';\n    const unitPos = this.props.unitPos ? this.props.unitPos : 'right';\n\n    return (\n      <Flex\n        {...flexProps}\n      >\n        {\n          this.props.unit && unitPos === 'left' && showUnit &&\n            <Text {...this.props.unitProps}>{this.props.unit}</Text>\n        }\n        <Text {...this.props}>{formattedNumber}</Text>\n        {\n          this.props.unit && unitPos === 'right' && showUnit &&\n            <Text {...this.props.unitProps}>{this.props.unit}</Text>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default SmartNumber;\n","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\n\nclass CustomTooltipRow extends Component {\n\n  render() {\n    return (\n      <Flex\n        mb={2}\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n      >\n        <Flex\n          pr={2}\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-start'}\n        > \n          {\n            this.props.color && \n            <Box\n              mr={2}\n              width={'10px'}\n              height={'10px'}\n              borderRadius={'50%'}\n              backgroundColor={this.props.color}\n            >\n            </Box>\n          }\n          <Text\n            fontSize={1}\n            fontWeight={2}\n            textAlign={'left'}\n            color={'dark-gray'}\n            style={{\n              whiteSpace:'nowrap',\n              textTransform:'capitalize'\n            }}\n          >\n            {this.props.label}\n          </Text>\n        </Flex>\n        <Flex\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-end'}\n        >\n          <Text\n            fontSize={1}\n            fontWeight={3}\n            color={'cellText'}\n            textAlign={'right'}\n            style={{\n              whiteSpace:'nowrap'\n            }}\n            dangerouslySetInnerHTML={{\n              __html: this.props.value\n            }}\n          >\n          </Text>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default CustomTooltipRow;","import { Line } from '@nivo/line';\nimport React, { Component } from 'react';\n// import { linearGradientDef } from '@nivo/core'\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport ChartCustomTooltip from '../ChartCustomTooltip/ChartCustomTooltip';\nimport ChartCustomTooltipRow from '../ChartCustomTooltipRow/ChartCustomTooltipRow';\n\nclass PortfolioEquity extends Component {\n  state = {\n    startDate:null,\n    chartData:null,\n    chartProps:null,\n    chartwidth:null,\n    chartHeight:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadChartData();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const quickDateSelectionChanged = prevProps.quickDateSelection !== this.props.quickDateSelection;\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n    if (tokenChanged || quickDateSelectionChanged){\n      this.setState({\n        chartData:null\n      },() => {\n        this.componentDidMount();\n      });\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    if (mobileChanged || themeModeChanged){\n      this.loadChartData();\n    }\n  }\n\n  async loadChartData() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    const etherscanTxs = await this.functionsUtil.getEtherscanTxs(this.props.account,0,'latest',enabledTokens);\n\n    const chartData = [];\n    let tokensBalance = {};\n    let firstTxTimestamp = null;\n\n    await this.functionsUtil.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      tokensBalance[selectedToken] = [];\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        let amountLent = this.functionsUtil.BNify(0);\n\n        filteredTxs.forEach((tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending')){\n            return false;\n          }\n          \n          firstTxTimestamp = firstTxTimestamp ? Math.min(firstTxTimestamp,parseInt(tx.timeStamp)) : parseInt(tx.timeStamp);\n\n          const tokenAmount = this.functionsUtil.BNify(tx.tokenAmount);\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n            case 'CurveOut':\n              amountLent = amountLent.plus(tokenAmount);\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.functionsUtil.BNify(0);\n          }\n\n          const balance = amountLent;\n          const action = tx.action;\n          const timeStamp = parseInt(tx.timeStamp);\n          const tokenPrice = this.functionsUtil.BNify(tx.tokenPrice);\n          const idleTokens = this.functionsUtil.BNify(tx.idleTokens);\n\n          if (!tokenPrice.isNaN() && !tokenPrice.isNaN()){\n            tokensBalance[selectedToken].push({\n              action,\n              balance,\n              timeStamp,\n              tokenPrice,\n              idleTokens,\n              tokenAmount\n            });\n          }\n        });\n      }\n    });\n\n    // Calculate Start Date\n    let startDate = null;\n    const currentDate = this.functionsUtil.strToMoment(new Date());\n\n    switch (this.props.quickDateSelection){\n      case 'week':\n        startDate = currentDate.clone().subtract(1,'week');\n      break;\n      case 'month':\n        startDate = currentDate.clone().subtract(1,'month');\n      break;\n      case 'month3':\n        startDate = currentDate.clone().subtract(3,'month');\n      break;\n      case 'month6':\n        startDate = currentDate.clone().subtract(6,'month');\n      break;\n      default:\n        startDate = null;\n      break;\n    }\n\n    const days = {};\n    let prevBalances = {};\n    let prevTimestamp = null;\n    let minChartValue = null;\n    let maxChartValue = null;\n    let aggregatedBalance = null;\n    const aggregatedBalancesKeys = {};\n    const tokensBalancesPerDate = {};\n    const currTimestamp = parseInt(new Date().getTime()/1000)+86400;\n\n    const tokensData = {};\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      tokensData[token] = await this.functionsUtil.getTokenApiData(this.props.availableTokens[token].address,isRisk,firstTxTimestamp,null,false,3600);\n    });\n\n    // debugger;\n\n    const idleTokenBalance = {};\n\n    for (let timeStamp=firstTxTimestamp;timeStamp<=currTimestamp;timeStamp+=this.props.frequencySeconds){\n\n      const foundBalances = {};\n      const tokensBalances = {};\n      timeStamp = Math.min(currTimestamp,timeStamp);\n      aggregatedBalance = this.functionsUtil.BNify(0);\n\n      // await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      // eslint-disable-next-line\n      Object.keys(tokensBalance).forEach(token => {\n\n        let lastTokenData = null;\n        const lastTokenDataUnfiltered = Object.values(tokensData[token]).pop();\n        const filteredTokenData = tokensData[token].filter(tx => (tx.timestamp>=prevTimestamp && tx.timestamp<=timeStamp));\n        if (filteredTokenData && filteredTokenData.length){\n          lastTokenData = filteredTokenData.pop();\n        }\n\n        if (!idleTokenBalance[token]){\n          idleTokenBalance[token] = this.functionsUtil.BNify(0);\n        }\n\n        const tokenConfig = this.props.availableTokens[token];\n        const tokenDecimals = tokenConfig.decimals;\n        let filteredBalances = tokensBalance[token].filter(tx => (tx.timeStamp<=timeStamp && (!prevTimestamp || tx.timeStamp>prevTimestamp)));\n        \n        if (!filteredBalances.length){\n          if (prevBalances && prevBalances[token]){\n            filteredBalances = prevBalances[token];\n            const lastFilteredTx = Object.assign([],filteredBalances).pop();\n            const currentBalance = parseFloat(lastFilteredTx.balance);\n\n            // Take idleToken price from API and calculate new balance\n            if (currentBalance>0 && timeStamp>firstTxTimestamp && lastTokenData){\n              const idleTokens = idleTokenBalance[token];\n              const idlePrice = this.functionsUtil.fixTokenDecimals(lastTokenData.idlePrice,tokenDecimals);\n              let newBalance = idleTokens.times(idlePrice);\n\n              // Set new balance and tokenPrice\n              lastFilteredTx.balance = newBalance;\n              lastFilteredTx.tokenPrice = idlePrice;\n              filteredBalances = [lastFilteredTx];\n            }\n          } else {\n            filteredBalances = [{\n              balance:this.functionsUtil.BNify(0),\n              tokenPrice:this.functionsUtil.BNify(0)\n            }];\n          }\n        } else {\n          filteredBalances.forEach(tx => {\n            switch (tx.action){\n              case 'Swap':\n              case 'Deposit':\n              case 'Migrate':\n              case 'Receive':\n              case 'CurveOut':\n                idleTokenBalance[token] = idleTokenBalance[token].plus(tx.idleTokens);\n              break;\n              default:\n                idleTokenBalance[token] = idleTokenBalance[token].minus(tx.idleTokens);\n                if (idleTokenBalance[token].lt(0)){\n                  idleTokenBalance[token] = this.functionsUtil.BNify(0);\n                }\n              break;\n            }\n          });\n        }\n\n        const lastTx = Object.assign([],filteredBalances).pop();\n        // let lastTxBalance = this.functionsUtil.BNify(lastTx.balance);\n        let lastTxBalance = idleTokenBalance[token].times(lastTx.tokenPrice);\n\n        if (lastTxBalance.gt(0)){\n          // Convert token balance to USD\n          let tokenUsdConversionRate = null;\n          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'conversionRateField']);\n          if (!this.props.chartToken && conversionRateField){\n            const conversionRate = lastTokenData && lastTokenData[conversionRateField] ? lastTokenData[conversionRateField] : (lastTokenDataUnfiltered && lastTokenDataUnfiltered[conversionRateField] ? lastTokenDataUnfiltered[conversionRateField] : null);\n            if (conversionRate){\n              tokenUsdConversionRate = this.functionsUtil.fixTokenDecimals(conversionRate,18);\n              if (tokenUsdConversionRate.gt(0)){\n                lastTxBalance = lastTxBalance.times(tokenUsdConversionRate);\n              }\n            }\n          }\n          \n          tokensBalances[token] = lastTxBalance;\n\n          aggregatedBalance = aggregatedBalance.plus(lastTxBalance);\n        }\n\n        foundBalances[token] = filteredBalances;\n      });\n\n      let momentDate = this.functionsUtil.strToMoment(timeStamp*1000);\n\n      if (startDate === null || (momentDate.isSameOrAfter(startDate) && momentDate.isSameOrBefore(new Date(),'day'))){\n        \n        // if (momentDate.isAfter(new Date(),'day')){\n        //   momentDate = this.functionsUtil.strToMoment(new Date());\n        // }\n\n        // Force date to midnight\n        const formattedDate = momentDate.format('YYYY/MM/DD 00:00');\n\n        // Save days for axisBottom format\n        days[momentDate.format('YYYY/MM/DD')] = 1;\n\n        aggregatedBalance = parseFloat(parseFloat(aggregatedBalance.toFixed(6)));\n\n        tokensBalancesPerDate[formattedDate] = tokensBalances;\n        aggregatedBalancesKeys[formattedDate] = aggregatedBalance;\n\n        // console.log(formattedDate,tokensBalances);\n\n        minChartValue = minChartValue === null ? aggregatedBalance : Math.min(minChartValue,aggregatedBalance);\n        maxChartValue = maxChartValue === null ? aggregatedBalance : Math.max(maxChartValue,aggregatedBalance);\n      }\n\n      prevTimestamp = timeStamp;\n      prevBalances = foundBalances;\n    }\n\n    const aggregatedBalances = Object.keys(aggregatedBalancesKeys).map(date => ({\n      x:date,\n      y:aggregatedBalancesKeys[date],\n      balances:tokensBalancesPerDate[date]\n    }));\n\n    let itemIndex = 0;\n    aggregatedBalances.forEach( (item,index) => {\n      const itemPos = Math.floor(itemIndex/aggregatedBalances.length*100);\n      aggregatedBalances[index].itemPos = itemPos;\n      itemIndex++;\n    });\n\n    /*\n    aggregatedBalances.push({\n      x:momentDate.format('YYYY/MM/DD HH:mm'),\n      y:aggregatedBalance\n    });\n    */\n\n    // Add day before to start with zero balance\n    /*\n    const firstTxMomentDate = this.functionsUtil.strToMoment(firstTxTimestamp*1000);\n    if ((startDate === null || startDate.isSameOrBefore(firstTxMomentDate)) && aggregatedBalances.length){\n      const firstItem = aggregatedBalances[0];\n      const firstDate = this.functionsUtil.strToMoment(firstItem.x,'YYYY/MM/DD HH:mm');\n      firstDate.subtract(1,'day');\n      aggregatedBalances.unshift({\n        x:firstDate.format('YYYY/MM/DD HH:mm'),\n        y:0\n      });\n    }\n    */\n\n    const chartToken = this.props.chartToken ? this.props.chartToken.toUpperCase() : 'USD';\n\n    // Add token Data\n    chartData.push({\n      id:chartToken,\n      color: 'hsl('+ this.functionsUtil.getGlobalConfig(['stats','tokens',chartToken,'color','hsl']).join(',')+')',\n      data:aggregatedBalances\n    });\n\n    let yFormatDecimals = 2;\n    if (maxChartValue-minChartValue<1){\n      yFormatDecimals = 4;\n    }\n\n    if (maxChartValue === minChartValue){\n      minChartValue = Math.max(0,maxChartValue-1);\n    }\n\n    const maxGridLines = 5;\n    const gridYStep = (maxChartValue-minChartValue)/maxGridLines;\n    const gridYValues = [];\n    for (let i=0;i<=maxGridLines;i++){\n      const gridYValue = parseFloat(parseFloat(minChartValue+(i*gridYStep)).toFixed(6));\n      gridYValues.push(gridYValue);\n    }\n    \n    const axisBottomMaxValues = 10;\n    const daysCount = Object.values(days).length;    \n    const daysFrequency = Math.max(1,Math.ceil(daysCount/axisBottomMaxValues));\n\n    const chartProps = {\n      xScale:{\n        type: 'time',\n        format: '%Y/%m/%d %H:%M',\n      },\n      yScale:{\n        type: 'linear',\n        stacked: false,\n        min: minChartValue,\n        max: maxChartValue\n      },\n      xFormat:'time:%b %d %Y',\n      yFormat:value => this.functionsUtil.formatMoney(value,yFormatDecimals),\n      axisBottom: this.props.isMobile ? null : {\n        legend: '',\n        tickSize:0,\n        format: '%b %d',\n        tickPadding: 15,\n        orient: 'bottom',\n        legendOffset: 36,\n        legendPosition: 'middle',\n        tickValues:'every '+daysFrequency+' days'\n      },\n      gridYValues,\n      pointSize:0,\n      useMesh:true,\n      axisLeft: this.props.isMobile ? null : {\n        legend: '',\n        tickSize: 0,\n        orient: 'left',\n        tickPadding: 10,\n        tickRotation: 0,\n        legendOffset: -70,\n        tickValues:gridYValues,\n        legendPosition: 'middle',\n        format: v => this.functionsUtil.abbreviateNumber(v,2),\n      },\n      animate:true,\n      pointLabel:'y',\n      enableArea:true,\n      enableSlices:'x',\n      enableGridY:true,\n      curve:'monotoneX',\n      enableGridX:false,\n      pointBorderWidth:1,\n      colors:d => d.color,\n      pointLabelYOffset:-12,\n      areaBaselineValue:minChartValue,\n      pointColor:{ from: 'color', modifiers: []},\n      areaOpacity:this.props.themeMode === 'light' ? 0.1 : 0.5,\n      theme:{\n        axis: {\n          ticks: {\n            text: {\n              fontSize:12,\n              fontWeight:600,\n              fill:this.props.theme.colors.legend,\n              fontFamily:this.props.theme.fonts.sansSerif\n            }\n          }\n        },\n        grid: {\n          line: {\n            stroke: this.props.theme.colors.lineChartStroke, strokeDasharray: '8 4'\n          }\n        },\n      },\n      /*\n      defs:[\n        linearGradientDef('gradientA', [\n          { offset: 0, color: 'inherit' },\n          { offset: 100, color: 'inherit', opacity: 0 },\n        ]),\n      ],\n      fill:[{ match: '*', id: 'gradientA' }],\n      */\n      margin: this.props.isMobile ? { top: 20, right: 25, bottom: 25, left: 20 } : { top: 30, right: 50, bottom: 45, left: 60 },\n      sliceTooltip:(slideData) => {\n        const { slice } = slideData;\n        const point = slice.points[0];\n        return (\n          <ChartCustomTooltip\n            point={point}\n          >\n            <ChartCustomTooltipRow\n              color={point.color}\n              label={point.serieId}\n              value={`$ ${point.data.yFormatted}`}\n            />\n            {\n            typeof point.data.balances === 'object' && Object.keys(point.data.balances).length &&\n              Object.keys(point.data.balances).map(token => {\n                if (token === point.serieId){\n                  return null;\n                }\n                const color = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'color','hex']);\n                const balance = point.data.balances[token];\n                let formattedBalance = this.functionsUtil.formatMoney(balance,2);\n                if (parseFloat(balance)>=0.01){\n                  return (\n                    <ChartCustomTooltipRow\n                      label={token}\n                      color={color}\n                      key={`row_${token}`}\n                      value={`$ ${formattedBalance}`}\n                    />\n                  );\n                }\n                return null;\n              })\n            }\n          </ChartCustomTooltip>\n        );\n      }\n    };\n\n    this.setState({\n      chartData,\n      chartProps\n    });\n  }\n\n  render() {\n    return (\n      <GenericChart\n        type={Line}\n        showLoader={true}\n        {...this.state.chartProps}\n        data={this.state.chartData}\n        parentId={this.props.parentId}\n        height={this.props.chartHeight}\n        parentIdHeight={this.props.parentIdHeight}\n      />\n    );\n  }\n}\n\nexport default PortfolioEquity;","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass ChartCustomTooltip extends Component {\n\n  async componentWillMount(){\n\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    \n  }\n\n  render() {\n    return (\n      <DashboardCard\n        key={this.props.point.id}\n        cardProps={{\n          py:2,\n          px:3,\n          width:1,\n          left: this.props.point.data.itemPos && this.props.point.data.itemPos>50 ? '-110%' : '0'\n        }}\n      >\n        <Flex\n          width={1}\n          flexDirection={'column'}\n        >\n          {\n            this.props.point.data.xFormatted && \n              <Text\n                mb={2}\n                fontSize={1}\n                fontWeight={3}\n                color={'cellText'}\n                textAlign={'left'}\n              >\n                {this.props.point.data.xFormatted}\n              </Text>\n          }\n          {this.props.children}\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default ChartCustomTooltip;\n","import React, { Component } from \"react\";\nimport { Button, Image, Flex, Text, Icon, Box } from 'rimble-ui';\n\nclass ImageButton extends Component {\n\n  render() {\n\n    const isMobile = typeof this.props.isMobile !== 'undefined' ? this.props.isMobile : false;\n    const image = this.props.imageSrc ? (<Image width={'auto'} src={this.props.imageSrc} {...this.props.imageProps} />) : ( this.props.iconName ? (<Icon name={this.props.iconName} {...this.props.iconProps} />) : null );\n    const caption = (<Text textAlign={ isMobile ? 'left' : 'center'} fontSize={2} fontWeight={3} color={'dark-gray'}>{this.props.caption}</Text>);\n\n    return (\n        <Button\n          color={'white'}\n          borderRadius={3}\n          px={ isMobile ? [3,4] : 4 }\n          py={ isMobile ? 0 : [3,4] }\n          my={ isMobile ? 2 : [2,2] }\n          mx={ isMobile ? 0 : [0,2] }\n          onClick={ this.props.handleClick }\n          height={ isMobile ? '58px' : ['150px','170px']}\n          mainColor={this.props.isActive ? 'cardBgHover' : 'cardBg'}\n          contrastColor={this.props.isActive ? 'cardBgHover' : 'cardBg'}\n          width={this.props.width ? this.props.width : (isMobile ? '100%' : ['150px','170px'])}\n          style={this.props.buttonStyle ? this.props.buttonStyle : (isMobile ? {justifyContent:'flex-start'} : null)}\n          {...this.props.buttonProps}\n        >\n          <>\n            {\n              this.props.badge && (\n                <Box\n                  position={'absolute'}\n                  borderRadius={'16px'}\n                  backgroundColor={ this.props.badge.bgColor ? this.props.badge.bgColor : 'blue' }\n                  style={ isMobile ? {right:'-25px',top:'-17px'} : {right:'-25px',top:'-25px'} }\n                  px={['5px','7px']}\n                  py={['1px','3px']}\n                >\n                  <Text\n                    fontWeight={3}\n                    fontSize={'10px'}\n                    color={ this.props.badge.color ? this.props.badge.color : '#fff' }\n                  >\n                  {this.props.badge.text}\n                  </Text>\n                </Box>\n              )\n            }\n            <Flex flexDirection={ isMobile ? 'row' : 'column'} justifyContent={ isMobile ? 'flex-start' : 'center'} alignItems={'center'}>\n              <Flex width={ isMobile ? '45px' : 1 } mr={ isMobile ? 2 : 0 } justifyContent={ isMobile ? 'flex-start' : 'center' }>\n                { this.props.captionPos && this.props.captionPos === 'top' ? caption : image }\n              </Flex>\n              <Flex width={ isMobile ? 'auto' : 1 } flexDirection={'column'} justifyContent={ isMobile ? 'flex-start' : 'center' } >\n                { this.props.captionPos && this.props.captionPos === 'top' ? image : caption }\n                {\n                  this.props.subcaption && this.props.subcaption.split('\\n').map((v,i) => {\n                    // Smaller caption for second line\n                    if (i){\n                      v = (<small>{v}</small>);\n                    }\n                    return (\n                      <Text key={`subcaption_${i}`} lineHeight={'1.3'} textAlign={ isMobile ? 'left' : 'center'} color={'darkGray'} fontWeight={1} fontSize={1}>{v}</Text>\n                    );\n                  })\n                }\n              </Flex>\n            </Flex>\n          </>\n        </Button>\n    );\n  }\n}\nexport default ImageButton;\n","import { Button } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass RoundButton extends Component {\n  render() {\n    const buttonProps = Object.assign({\n      width:1,\n      fontSize:3,\n      fontWeight:3,\n      height:'45px',\n      boxShadow:null,\n      borderRadius:4,\n      mainColor:'blue'\n    },this.props.buttonProps);\n\n    return (\n       <Button\n        {...buttonProps}\n        onClick={this.props.handleClick}\n       >\n        {this.props.children}\n       </Button>\n    );\n  }\n}\n\nexport default RoundButton;\n","import { Link } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass ExtLink extends Component {\n\n  render() {\n    return (\n      <Link\n        target={'_blank'}\n        rel={'nofollow noopener noreferrer'}\n        {...this.props}\n      >\n        {this.props.children}\n      </Link>\n    );\n  }\n}\n\nexport default ExtLink;\n","import baseColors, { blue, green, yellow, red } from \"./colors\";\nimport { tint, shade } from 'polished';\n\n// theme.js\nexport default {\n  breakpoints: ['52em', '64em'],\n  // breakpoints: ['40em', '52em', '64em', '80em'],\n  fontSizes: [12, 14, 16, 18, 21, 32, 38, 48, 54, 64, 72, 84],\n  fontWeights: [0, 300, 400, 600, 700, 800],\n  letterSpacings: [0, 1, 2, 4, 8],\n  lineHeights: {\n    solid: 1,\n    title: 1.25,\n    copy: 1.5,\n  },\n  fonts: {\n    serif: '\"georgia regular\", athelas, times, serif',\n    sansSerif: '\"Inter\", -apple-system, sans-serif',\n    counter: '\"Roboto Mono\", Arial, -apple-system, sans-serif'\n  },\n  space: [0, 4, 8, 16, 32, 64, 128, 256],\n  radii: ['0', '4px', '8px', '16px', '2rem'],\n  width: [0, 16, 32, 64, 128, 256],\n  minWidths: [0, 16, 32, 64, 128, 256],\n  maxWidths: [0, 16, 32, 64, 128, 256, 512, 768, 1024, 1536],\n  heights: [0, 16, 32, 64, 128, 256],\n  minHeights: [0, 16, 32, 64, 128, 256],\n  maxHeights: [0, 16, 32, 64, 128, 256],\n  borders: [0, '1px solid #eee','1px solid #b6c2ff'],\n  borderWidths: ['0', '1px', '2px', '4px'],\n  shadows: [\n    '0',\n    '0px 2px 4px rgba(0, 0, 0, 0.1)',\n    '0 7px 14px rgba(50,50,93,.1)',\n    '1px 1px 0px rgba(0,0,0,0.2)',\n    '0px 0px 16px 2px rgba(0,54,255,0.3)'\n  ],\n  opacity: {\n    disabled: 0.4,\n  },\n  colors: {\n    primary: blue.base,\n    'gradient-bg': 'linear-gradient(120deg, #f6d365 0%, #ea0d73 100%)',\n    'primary-light': blue.light[1],\n    'primary-dark': blue.dark[1],\n    bgBlue: '#0030e0',\n    blue: '#0036ff',\n    'dark-blue': '#00219a',\n    skyBlue: '#00abfe',\n    lightBlue: '#79f4e1',\n    copyColor: '#3F3D4B',\n    subColor: '#a7a7a7',\n    black: baseColors.black,\n    'near-black': '#111',\n    'dark-gray': '#4e4e4e',\n    'mid-gray': '#999',\n    gray: ' #e0e0e0',\n    grey: '#CCC',\n    silver: '#999',\n    'light-silver': '#aaa',\n    'moon-gray': '#ccc',\n    'light-gray': '#eee',\n    'near-white': '#f4f4f4',\n    white: '#fff',\n    transparent: 'transparent',\n    /*\n    NEW COLORS\n    */\n    arrowActive:'#4f4f4f',\n    arrowInactive:'#d8d8d8',\n    selectBgFocused:'#fbfbfb',\n    selectBg:'#ffffff',\n    backButtonBg:'#ffffff',\n    lineChartStroke:'#dbdbdb',\n    dashboardBg: '#f9fafd',\n    statValue: '#959595',\n    boxBorder: '#eeeeee',\n    cellTitle: '#a3a4a5',\n    cellText: '#a6a6a6',\n    divider: '#d8d8d8',\n    counter: '#5d5d5d',\n    redeem: '#00a9fe',\n    deposit: '#0239ff',\n    migrate: '#00a9fe',\n    legend: '#c9c9c9',\n    menuBg:'#fff',\n    menuHover:'#f3f6ff',\n    cardBg:'#fff',\n    flashColor:'#3f4e9a',\n    menuRightBorder:'#eee',\n    cardHoverShadow:'0px 0px 0px 1px rgba(0, 54, 255, 0.3)',\n    cardBgHover:'#f7f8ff',\n    cardBorder:'#eee',\n    transactions:{\n      action:{\n        send:'#10a0dd',\n        swap:'#3d53c0',\n        boost:'#ffff00',\n        redeem:'#10a0dd',\n        swapout:'#10a0dd',\n        deposit:'#3d53c0',\n        curvein:'#10a0dd',\n        receive:'#3d53c0',\n        migrate:'#3d53c0',\n        default:'#4f4f4f',\n        curveout:'#3d53c0',\n        withdraw:'#10a0dd',\n        curvedepositin:'#10a0dd',\n        curvedepositout:'#3d53c0'\n      },\n      actionBg:{\n        send:'#ceeff6',\n        swap:'#ced6ff',\n        boost:'#ff7979',\n        redeem:'#ceeff6',\n        swapout:'#ceeff6',\n        deposit:'#ced6ff',\n        curvein:'#ceeff6',\n        default:'#dadada',\n        receive:'#ced6ff',\n        migrate:'#ced6ff',\n        withdraw:'#ceeff6',\n        curveout:'#ced6ff',\n        curvedepositin:'#ceeff6',\n        curvedepositout:'#ced6ff'\n      },\n      status:{\n        completed:'#00b84a',\n        pending:'#a5a5a5',\n        failed:'#fa0000'\n      }\n    },\n    blacks: [\n      'rgba(0,0,0,.0125)',\n      'rgba(0,0,0,.025)',\n      'rgba(0,0,0,.05)',\n      'rgba(0,0,0,.1)',\n      'rgba(0,0,0,.2)',\n      'rgba(0,0,0,.3)',\n      'rgba(0,0,0,.4)',\n      'rgba(0,0,0,.5)',\n      'rgba(0,0,0,.6)',\n      'rgba(0,0,0,.7)',\n      'rgba(0,0,0,.8)',\n      'rgba(0,0,0,.9)',\n    ],\n    whites: [\n      'rgba(255,255,255,.0125)',\n      'rgba(255,255,255,.025)',\n      'rgba(255,255,255,.05)',\n      'rgba(255,255,255,.1)',\n      'rgba(255,255,255,.2)',\n      'rgba(255,255,255,.3)',\n      'rgba(255,255,255,.4)',\n      'rgba(255,255,255,.5)',\n      'rgba(255,255,255,.6)',\n      'rgba(255,255,255,.7)',\n      'rgba(255,255,255,.8)',\n      'rgba(255,255,255,.9)',\n    ],\n  },\n  zIndices: [0, 9, 99, 999, 9999],\n  messageStyle: {\n    base: {\n      color: shade(0.4, '#AAA'),\n      backgroundColor: tint(0.9, '#AAA'),\n      borderColor: '#AAA',\n    },\n    success: {\n      color: shade(0.4, green.base),\n      backgroundColor: tint(0.9, green.base),\n      borderColor: green.base,\n    },\n    warning: {\n      color: shade(0.4, yellow.base),\n      backgroundColor: tint(0.9, yellow.base),\n      borderColor: yellow.base,\n    },\n    danger: {\n      color: shade(0.4, red.base),\n      backgroundColor: tint(0.9, red.base),\n      borderColor: red.base,\n    },\n    info: {\n      color: shade(0.4, blue.base),\n      backgroundColor: '#f3f6ff',\n      borderColor: '#b6c2ff',\n    },\n  },\n  buttons: {\n    primary: {\n      color: blue.text,\n      backgroundColor: blue.base,\n      // use css custom props\n      '--main-color': blue.base,\n      '--contrast-color': blue.text,\n    },\n    normal: {\n      color: baseColors.black,\n      '--contrast-color': baseColors.black,\n    },\n    success: {\n      '--main-color': green.base,\n      '--contrast-color': green.text,\n    },\n    danger: {\n      '--main-color': red.base,\n      '--contrast-color': red.text,\n    },\n  },\n  buttonSizes: {\n    small: {\n      fontSize: '0.75rem',\n      height: '2rem',\n      minWidth: '2rem',\n      padding: '0 1rem',\n    },\n    medium: {\n      fontSize: '1rem',\n      height: '3rem',\n      minWidth: '3rem',\n    },\n    large: {\n      fontSize: '1.5rem',\n      height: '4rem',\n      minWidth: '4rem',\n      borderRadius: '2rem'\n    },\n  },\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tooltip\":\"TableCellHeader_tooltip__3xM3k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"radioBtn\":\"TransactionListFilters_radioBtn__1vgHa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bg\":\"ModalCard_bg__3ocwQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Web3ConnectionButtons_button__1Wov0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gradientButton\":\"Header_gradientButton__2mrQl\",\"empty\":\"Header_empty__3fhiX\",\"select\":\"Header_select__27Xyx\",\"selectDark\":\"Header_selectDark__EHAAP\",\"input\":\"Header_input__3dr8P\"};","import axios from 'axios';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Progress, Icon, Link } from 'rimble-ui'\n\nclass TxProgressBar extends Component {\n  state = {\n    error:null,\n    ended:false,\n    percentage:0,\n    processing:true,\n    txTimestamp:null,\n    initialized:false,\n    estimatedTime:null,\n    remainingTime:null\n  };\n\n  componentUnmounted = false;\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n\n    this.componentUnmounted = true;\n\n    var id = window.setTimeout(function() {}, 0);\n\n    while (id--) {\n        window.clearTimeout(id); // will do nothing if no timeout with id is present\n    }\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps){\n    this.loadUtils();\n\n    if (!this.state.initialized && this.props.web3){\n      this.initProgressBar();\n    }\n  }\n\n  componentDidMount = async () => {\n    this.initProgressBar();\n  }\n\n  getTransaction = async () => {\n    const transaction = await (new Promise( async (resolve, reject) => {\n      this.functionsUtil.customLog('getTransaction',this.props.hash);\n      this.props.web3.eth.getTransaction(this.props.hash,(err,transaction) => {\n        resolve(transaction);\n      });\n    }));\n\n    const newState = {};\n    if (transaction){\n      newState.transaction = transaction;\n    } else {\n      newState.processing = false;\n      newState.error = 'Unable to find the transaction';\n    }\n\n    this.setState(newState);\n    return transaction;\n  }\n\n  /*\n  Taken from https://ethgasstation.info/calculatorTxV.php\n  */\n  _estimateWait (prediction, gasoffered) {\n    var minedProb;\n    var expectedWait;\n    var sum1, sum2;\n    var intercept = 4.2794;\n    var hpa = .0329;\n    var hgo = -3.2836;\n    var tx = -0.0004;\n    var intercept2 = 7.5375;\n    var hpa_coef = -0.0801;\n    var txatabove_coef= 0.0003;\n    var high_gas_coef = .3532;\n\n    if (gasoffered > 1000000) {    \n      sum1 = intercept + (prediction['hashpower_accepting'] * hpa) + hgo  + (prediction['tx_atabove'] * tx);\n      sum2 = intercept2 + (prediction['hashpower_accepting'] * hpa_coef) + (prediction['tx_atabove'] * txatabove_coef) + high_gas_coef;\n    } else {\n      sum1 = intercept + (prediction['hashpower_accepting'] * hpa) + (prediction['tx_atabove'] * tx);\n      sum2 = intercept2 + (prediction['tx_atabove'] * txatabove_coef) + (prediction['hashpower_accepting'] * hpa_coef);\n    }\n\n    var factor = Math.exp(- 1 * sum1);\n    const prob = 1 / (1 + factor);\n\n    if (prob > .95) {\n      minedProb = 'Very High';\n    } else if (prob > .9 && prob <= .95) {\n      minedProb = 'Medium'\n    } else {\n      minedProb = 'Low';\n    }\n\n    expectedWait = Math.exp(sum2);\n    if (expectedWait < 2) {\n      expectedWait = 2;\n    }\n\n    if (gasoffered > 2000000) {\n      expectedWait += 100;\n    }\n\n    return [expectedWait, prediction['hashpower_accepting'], prediction['tx_atabove'], minedProb];\n  }\n\n  getBlockTime = async () => {\n    const pt = await axios.get('https://ethgasstation.info/json/ethgasAPI.json');\n    if (pt){\n      const blockTime = pt.data;\n      this.setState({\n        blockTime\n      });\n      return blockTime;\n    }\n    return null;\n  }\n\n  getPredictionTable = async () => {\n    const pt = await axios.get('https://ethgasstation.info/json/predictTable.json');\n    if (pt){\n      const predictTable = pt.data;\n      this.setState({\n        predictTable\n      });\n      return predictTable;\n    }\n    return null;\n  }\n\n  getTxEstimatedTime = (gasPrice) => {\n    let prediction = null;\n    if (this.state.predictTable){\n      this.state.predictTable.forEach((p,i) => {\n        if (!prediction && parseFloat(p.gasprice)>=parseFloat(gasPrice)){\n          prediction = p;\n          return true;\n        }\n      });\n    }\n\n    if (this.state.blockTime && prediction){\n      const pdValues = this._estimateWait(prediction,this.state.transaction.gas);\n      const blocksWait = pdValues[0];\n      const blockInterval = this.state.blockTime.block_time;\n      let txMeanSecs = blocksWait * blockInterval;\n      txMeanSecs = parseInt(txMeanSecs.toFixed(0));\n      this.functionsUtil.customLog('getTxEstimatedTime',prediction,this.state.transaction.gas,pdValues,txMeanSecs);\n      return txMeanSecs; // Customized\n    }\n\n    return null;\n  }\n\n  calculateRemainingTime = async () => {\n    let remainingTime = 0;\n    let estimatedTime = 0;\n\n    if (!this.state.transaction || this.componentUnmounted){\n      return false;\n    }\n\n    if (!this.state.transaction.blockNumber){\n      const gasPrice = parseFloat(this.functionsUtil.BNify(this.state.transaction.gasPrice).div(1e9).toString());\n      remainingTime = this.getTxEstimatedTime(gasPrice);\n    }\n\n    estimatedTime = remainingTime ? remainingTime : 0;\n\n    if (this.state.txTimestamp){\n      const currTimestamp = new Date().getTime();\n      const secondsPassed = parseInt((currTimestamp-parseInt(this.state.txTimestamp))/1000);\n      \n      // Calculate new remaining time\n      remainingTime -= secondsPassed;\n      remainingTime = Math.max(remainingTime,0);\n\n      this.functionsUtil.customLog('Estimated time',estimatedTime,'secondsPassed',secondsPassed,'New remaining time',remainingTime);\n    }\n\n    const timePassed = estimatedTime-remainingTime;\n    const percentage = estimatedTime>0 ? parseFloat(timePassed/estimatedTime) : 1;\n\n    this.setState({\n      estimatedTime,\n      remainingTime,\n      percentage\n    });\n\n    setTimeout(()=>{this.updateProgressBar()},1000);\n  }\n\n  updateProgressBar = () => {\n\n    if (this.componentUnmounted){\n      return false;\n    }\n\n    let remainingTime = this.state.remainingTime;\n    if (remainingTime){\n      remainingTime--;\n      if (!remainingTime){\n        this.setState({\n          percentage:1,\n          ended:true\n        });\n      } else {\n        const timePassed = this.state.estimatedTime-remainingTime;\n        const percentage = parseFloat(timePassed/this.state.estimatedTime);\n        this.setState({\n          percentage,\n          remainingTime\n        });\n        setTimeout(()=>{this.updateProgressBar()},1000);\n      }\n    } else {\n      this.setState({\n        percentage:1,\n        ended:true\n      });\n    }\n  }\n\n  getTxInfo = async () => {\n\n    // Get tx timestamp\n    const txProgressBarKey = `txProgressBarData`;\n    const txHash = this.props.hash.toLowerCase();\n\n    let txProgressBarData = null;\n    let txTimestamp = null;\n    let newState = {};\n\n    if (localStorage){\n      txProgressBarData = localStorage.getItem(txProgressBarKey);\n      if (txProgressBarData){\n        txProgressBarData = JSON.parse(txProgressBarData);\n      }\n    }\n\n    if (!txProgressBarData || !txProgressBarData[txHash]){\n      txTimestamp = new Date().getTime();\n\n      const [predictTable,blockTime] = await Promise.all([\n        this.getPredictionTable(),\n        this.getBlockTime()\n      ]);\n\n      txProgressBarData = {};\n      txProgressBarData[txHash] = {\n        txTimestamp,\n        blockTime,\n        predictTable\n      };\n\n      // Save progress bar status in localStorage\n      this.functionsUtil.setLocalStorage(txProgressBarKey,JSON.stringify(txProgressBarData));\n\n      newState = txProgressBarData[txHash];\n\n      if (!predictTable || !blockTime){\n        newState.error = 'Processing transaction';\n      }\n    }\n\n    this.setState(newState);\n  }\n\n  initProgressBar = async () => {\n\n    if (!this.props.hash || !this.props.web3){\n      return false;\n    }\n\n    const newState = {\n      initialized:true\n    };\n    this.setState(newState);\n\n    const transaction = await this.getTransaction();\n\n    if (transaction){\n      await this.getTxInfo();\n      try{\n        this.calculateRemainingTime();\n      } catch (err) {\n        newState.error = 'Processing transaction';\n\n        // const errStringified = JSON.stringify(err);\n      }\n\n      this.setState(newState);\n    }\n  }\n\n  renderRemainingTime(){\n    // More than 60 seconds\n    if (this.state.remainingTime>60){\n      const minutes = Math.floor(this.state.remainingTime/60);\n      const seconds = this.state.remainingTime-(minutes*60);\n      return ('0'+minutes).substr(-2)+':'+('0'+seconds).substr(-2)+' min';\n    } else {\n      return this.state.remainingTime+'s';\n    }\n  }\n\n  render() {\n    return (\n      <Flex flexDirection={'column'} alignItems={'center'}>\n        {\n          this.state.remainingTime !== null ? (\n            this.state.ended ? (\n              <FlexLoader\n                textProps={{\n                  ml:2,\n                  color:this.props.textColor ? this.props.textColor : 'copyColor'\n                }}\n                loaderProps={{\n                  size:'25px',\n                  ...this.props.loaderProps\n                }}\n                flexProps={{\n                  textAlign:'center',\n                  alignItems:'center',\n                  justifyContent:'center',\n                }}\n                text={this.props.endMessage ? this.props.endMessage : 'Finalizing transaction...'}\n              />\n            ) : (\n              <Flex\n                mb={2}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Text mb={2} color={ this.props.textColor ? this.props.textColor : 'copyColor'}>{ this.props.waitText ? this.props.waitText : 'Remaining time:' } <Text.span color={ this.props.textColor ? this.props.textColor : 'copyColor'} fontWeight={3}>{ this.renderRemainingTime() }</Text.span></Text>\n                <Progress value={ this.state.percentage } />\n              </Flex>\n            )\n          ) : (\n            this.state.error !== null && !this.state.processing ? (\n              <Flex\n                alignItems={'center'}\n                flexDirection={'column'}\n              >\n                <Icon\n                  size={'2em'}\n                  name={'Warning'}\n                  color={'cellText'}\n                />\n                <Text\n                  mt={0}\n                  fontSize={2}\n                  textAlign={'center'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                >\n                  {this.state.error}\n                </Text>\n              </Flex>\n            ) : (\n              <FlexLoader\n                textProps={{\n                  ml:2,\n                  color:this.props.textColor ? this.props.textColor : 'copyColor'\n                }}\n                loaderProps={{\n                  size:'25px',\n                  ...this.props.loaderProps\n                }}\n                flexProps={{\n                  textAlign:'center',\n                  alignItems:'center',\n                  justifyContent:'center',\n                }}\n                text={ this.state.error ? this.state.error : (this.props.hash ? (this.props.loadingMessage ? this.props.loadingMessage : 'Calculating estimated time...') : (this.props.sendingMessage ? this.props.sendingMessage : 'Sending transaction...') ) }\n              />\n            )\n          )\n        }\n        {\n          this.props.hash ? (\n            <Link\n              mt={0}\n              target={'_blank'}\n              hoverColor={'dark-gray'}\n              rel={\"nofollow noopener noreferrer\"}\n              href={`https://etherscan.io/tx/${this.props.hash}`}\n              color={this.props.textColor ? this.props.textColor : 'cellText'}\n            >\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={'center'}\n              >\n                <Text\n                  fontSize={0}\n                  textAlign={'center'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                >\n                  View in Etherscan\n                </Text>\n                <Icon\n                  ml={1}\n                  size={'0.75em'}\n                  name={'OpenInNew'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                />\n              </Flex>\n            </Link>\n          ) : typeof this.props.cancelTransaction === 'function' ? (\n              <Link\n                mt={0}\n                href={`javascript:void(0)`}\n                onClick={ e => this.props.cancelTransaction() }\n                color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                hoverColor={this.props.cancelTextHoverColor ? this.props.cancelTextHoverColor : 'dark-gray'}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'row'}\n                  justifyContent={'center'}\n                >\n                  <Text\n                    fontSize={0}\n                    textAlign={'center'}\n                    color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                  >\n                    Cancel transaction\n                  </Text>\n                  <Icon\n                    ml={1}\n                    size={'0.85em'}\n                    name={'Cancel'}\n                    color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                  />\n                </Flex>\n              </Link>\n          ) : null\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TxProgressBar;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericSelector from '../GenericSelector/GenericSelector';\n\nclass AssetSelector extends Component {\n\n  state = {\n    options:null,\n    defaultValue:null,\n    CustomOptionValue:null,\n    CustomValueContainer:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  loadComponents(){\n    const options = Object.keys(this.props.availableTokens).map(token => {\n      const tokenConfig = this.props.availableTokens[token];\n      return {\n        value:token,\n        label:token,\n        tokenConfig\n      };\n    });\n\n    const defaultValue = this.props.selectedToken ? options.find(v => (v.value.toUpperCase() === this.props.selectedToken.toUpperCase())) : null;\n\n    const CustomOptionValue = props => {\n      const token = props.value;\n      const tokenConfig = props.data.tokenConfig;\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={token}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={token}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n          {\n            this.state.props.showCustomField ? (\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:this.state.props.showCustomField,\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n            ) : this.props.showBalance &&\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:'tokenBalance',\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n          }\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : defaultValue;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const token = selectProps.value;\n      const tokenConfig = selectProps.tokenConfig;\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={token}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={token}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n\n          {\n            this.props.showBalance &&\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:'tokenBalance',\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n          }\n        </Flex>\n      );\n    }\n\n    this.setState({\n      options,\n      defaultValue,\n      CustomOptionValue,\n      CustomValueContainer\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadComponents();\n\n    this.setState({\n      props:this.props\n    });\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const availableTokensChanged = JSON.stringify(Object.keys(prevProps.availableTokens)) !== JSON.stringify(Object.keys(this.props.availableTokens));\n    if (availableTokensChanged || selectedTokenChanged){\n      this.loadComponents();\n    }\n  }\n\n  render() {\n    if (!this.state.options || !this.state.defaultValue || !this.state.CustomOptionValue || !this.state.CustomValueContainer || !this.props.availableTokens || !Object.keys(this.props.availableTokens).length){\n      return null;\n    }\n\n    return (\n      <GenericSelector\n        {...this.props}\n        name={'assets'}\n        options={this.state.options}\n        innerProps={this.props.innerProps}\n        isSearchable={this.props.isSearchable}\n        defaultValue={this.state.defaultValue}\n        selectedToken={this.props.selectedToken}\n        CustomOptionValue={this.state.CustomOptionValue}\n        CustomValueContainer={this.state.CustomValueContainer}\n        onChange={ this.props.onChange ? this.props.onChange : this.props.changeToken}\n      />\n    );\n  }\n}\n\nexport default AssetSelector;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"Tos_headerContainer__23W_f\",\"headerBgFiller\":\"Tos_headerBgFiller__36Nfk\",\"bgContainer\":\"Tos_bgContainer__rX7uJ\",\"list\":\"Tos_list__3bMLG\",\"textContainer\":\"Tos_textContainer__3hUuq\"};","import theme from '../theme';\nimport React, { Component } from 'react';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Icon, Link, Image } from \"rimble-ui\";\nimport ShortHash from \"../utilities/components/ShortHash\";\n\nclass TransactionField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadField();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const hashChanged = prevProps.hash !== this.props.hash;\n    const accountChanged = prevProps.account !== this.props.account;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    if (fieldChanged || hashChanged || accountChanged){\n      this.loadField();\n    }\n  }\n\n  async loadField(){\n    const fieldInfo = this.props.fieldInfo;\n    if (this.props.hash && this.props.account){\n      switch (fieldInfo.name){\n        case 'icon':\n        break;\n        case 'hash':\n          \n        break;\n        case 'action':\n          \n        break;\n        case 'date':\n        break;\n        case 'status':\n        break;\n        case 'amount':\n        break;\n        case 'asset':\n        break;\n        default:\n        break;\n      }\n    }\n  }\n\n  render(){\n    let icon = null;\n    let color = null;\n    let output = null;\n    let bgColor = theme.colors.transactions.actionBg.default;\n    const fieldInfo = this.props.fieldInfo;\n    const transaction = this.props.transaction;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      style:{\n        maxWidth:'100%',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis'\n      },\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    switch (fieldInfo.name){\n      case 'icon':\n        if (transaction.action){\n          color = theme.colors.transactions.action[transaction.action.toLowerCase()] ? theme.colors.transactions.action[transaction.action.toLowerCase()] : color;\n          bgColor = theme.colors.transactions.actionBg[transaction.action.toLowerCase()] ? theme.colors.transactions.actionBg[transaction.action.toLowerCase()] : bgColor;\n        }\n        switch (transaction.action.toLowerCase()) {\n          case 'deposit':\n          case 'curveout':\n          case 'curvezapout':\n          case 'curvedepositout':\n            icon = \"ArrowDownward\";\n          break;\n          case 'boost':\n            icon = \"TrendingUp\";\n          break;\n          case 'redeem':\n          case 'curvein':\n          case 'curvezapin':\n          case 'curvedepositin':\n            icon = \"ArrowUpward\";\n          break;\n          case 'send':\n            icon = \"Send\";\n          break;\n          case 'receive':\n            icon = \"Redo\";\n          break;\n          case 'migrate':\n            // icon = \"Sync\";\n            icon = \"Repeat\";\n          break;\n          case 'swap':\n            icon = \"SwapHoriz\";\n          break;\n          case 'swapout':\n            icon = \"SwapHoriz\";\n          break;\n          case 'withdraw':\n            icon = \"ArrowUpward\";\n          break;\n          default:\n            icon = \"Refresh\";\n          break;\n        }\n        output = (\n          <Flex\n            p={'5px'}\n            borderRadius={'50%'}\n            {...fieldProps}\n            alignItems={'center'}\n            backgroundColor={bgColor}\n            justifyContent={'center'}\n          >\n            <Icon\n              name={icon}\n              color={color}\n              align={'center'}\n              size={this.props.isMobile ? '1em' : '1.4em'}\n            />\n          </Flex>\n        );\n      break;\n      case 'hash':\n        if (transaction.hash){\n          output = (\n            <Link\n              target={'_blank'}\n              rel={'nofollow noopener noreferrer'}\n              href={`https://etherscan.io/tx/${transaction.hash}`}\n            >\n              <ShortHash\n                fontSize={1}\n                color={'white'}\n                {...fieldProps}\n                hash={transaction.hash}\n              />\n            </Link>\n          );\n        }\n      break;\n      case 'action':\n        let action = transaction.action;\n        switch (transaction.action) {\n          case 'Swap':\n            action = \"Swap In\";\n          break;\n          case 'SwapOut':\n            action = \"Swap Out\";\n          break;\n          default:\n          break;\n        }\n        output = (\n          <Text {...fieldProps}>{action.toUpperCase()}</Text>\n        );\n      break;\n      case 'date':\n        const formattedDate = transaction.momentDate.format('DD MMM, YYYY');\n        output = (\n          <Text {...fieldProps}>{formattedDate}</Text>\n        );\n      break;\n      case 'statusIcon':\n        color = theme.colors.transactions.status[transaction.status.toLowerCase()];\n        switch (transaction.status) {\n          case 'Completed':\n            icon = \"Done\";\n          break;\n          case 'Pending':\n            icon = \"Timelapse\";\n          break;\n          case 'Failed':\n            icon = \"ErrorOutline\";\n          break;\n          default:\n          break;\n        }\n        output = (\n          <Flex\n            p={[0,'1px']}\n            borderRadius={'50%'}\n            {...fieldProps}\n            alignItems={'center'}\n            width={['24px','26px']}\n            height={['24px','26px']}\n            justifyContent={'center'}\n            border={ this.props.isMobile ? `1px solid ${color}` : `2px solid ${color}` }\n          >\n            <Icon\n              name={icon}\n              color={color}\n              align={'center'}\n              size={ this.props.isMobile ? '1em' : '1.2em'}\n            />\n          </Flex>\n        );\n      break;\n      case 'status':\n        output = (\n          <Text {...fieldProps}>{transaction.status}</Text>\n        );\n      break;\n      case 'amount':\n        output = (\n          <SmartNumber {...fieldProps} number={transaction.amount} />\n        );\n      break;\n      case 'tokenIcon':\n        output = (\n          <Image src={`images/tokens/${transaction.tokenSymbol.toUpperCase()}.svg`} {...fieldProps} />\n        );\n      break;\n      case 'tokenName':\n        output = (\n          <Text {...fieldProps}>{transaction.tokenSymbol}</Text>\n        );\n      break;\n      default:\n      break;\n    }\n    return output;\n  }\n}\n\nexport default TransactionField;\n","import Select from 'react-select';\nimport React, { Component } from 'react';\nimport { Flex, Text, Input } from \"rimble-ui\";\nimport styles from './GenericSelector.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass GenericSelector extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadComponents();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const optionsChanged = JSON.stringify(prevProps.options) !== JSON.stringify(this.props.options);\n    const defaultValueChanged = JSON.stringify(prevProps.defaultValue) !== JSON.stringify(this.props.defaultValue);\n    const componentsChanged = prevProps.CustomOptionValue !== this.props.CustomOptionValue || prevProps.CustomValueContainer !== this.props.CustomValueContainer;\n\n    if (optionsChanged || selectedTokenChanged || defaultValueChanged || componentsChanged){\n      this.loadComponents();\n    }\n  }\n\n  async loadComponents(){\n    \n    const ControlComponent = props => {\n      const cardProps = Object.assign(\n        props.innerProps,\n        {\n          p:2,\n          width:1,\n          style:{cursor:'pointer'}\n        },\n        (this.props.innerProps ? this.props.innerProps : {})\n      );\n\n      if (props.menuIsOpen){\n        cardProps.boxShadow = 4;\n      }\n      return (\n        <DashboardCard\n          isInteractive={true}\n          cardProps={cardProps}\n        >\n          <Flex\n            width={1}\n            flexDirection={'row'}\n          >\n            {props.children}\n          </Flex>\n        </DashboardCard>\n      );\n    };\n\n    const CustomIndicatorSeparator = props => null;\n\n    const CustomMenu = props => {\n      const cardProps = Object.assign(props.innerProps,{\n        mt:2,\n        zIndex:1,\n        boxShadow:null,\n        position:'absolute'\n      });\n      return (\n        <DashboardCard\n          cardProps={cardProps}\n        >\n          {props.children}\n        </DashboardCard>\n      );\n    }\n\n    const CustomValueContainer = this.props.CustomValueContainer ? this.props.CustomValueContainer : props => {\n      return (\n        <Flex\n          {...props.innerProps}\n        >\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            <Text\n              fontWeight={3}\n            >\n              {props.selectProps.value.label}\n            </Text>\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomOptionValue = this.props.CustomOptionValue ? this.props.CustomOptionValue : (props) => {\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n        >\n          <Text>\n            {props.label}\n          </Text>\n        </Flex>\n      );\n    };\n\n    const CustomInputContainer = this.props.CustomInputContainer ? this.props.CustomInputContainer : (props) => {\n\n      if (!props.selectProps.isSearchable){\n        return null;\n      }\n\n      return (\n        <Input\n          {...props}\n          fontSize={this.props.theme.fontSizes[2]}\n          color={this.props.theme.colors.copyColor}\n          fontWeight={this.props.theme.fontWeights[3]}\n          fontFamily={this.props.theme.fonts.sansSerif}\n          backgroundColor={this.props.theme.colors.cardBg}\n          className={[styles.searchInput,this.props.themeMode==='dark' ? styles.dark : null,!props.selectProps.menuIsOpen ? styles.searchInputHidden : null]}\n        />\n      );\n    };\n\n    const CustomOption = (props) => {\n\n      const options = props.selectProps.options;\n      let selectedValue = props.selectProps && props.selectProps.value && props.selectProps.value.value;\n\n      // Check if the selectedValue is included in options\n      if (selectedValue && options.map( o => o.value ).indexOf(selectedValue) === -1 && this.props.defaultValue){\n        selectedValue = this.props.defaultValue.value;\n      }\n\n      // Don't show selected value\n      if (selectedValue && selectedValue === props.value){\n        return null;\n      }\n\n      return (\n        <Flex\n          px={3}\n          py={2}\n          width={1}\n          {...props.innerProps}\n          alignItems={'center'}\n          flexDirection={'row'}\n          style={{cursor:'pointer'}}\n          justifyContent={'flex-start'}\n          className={styles.genericSelector}\n          backgroundColor={ props.isFocused ? 'selectBgFocused' : 'selectBg' }\n        >\n          <CustomOptionValue\n            {...props}\n          />\n        </Flex>\n      );\n    }\n\n    await this.setState({\n      CustomMenu,\n      CustomOption,\n      ControlComponent,\n      CustomValueContainer,\n      CustomInputContainer,\n      CustomIndicatorSeparator\n    });\n  }\n\n  render() {\n    const isSearchable = typeof this.props.isSearchable !== 'undefined' ? this.props.isSearchable : false;\n    return (\n      <Select\n        name={this.props.name}\n        isSearchable={isSearchable}\n        options={this.props.options}\n        defaultValue={this.props.defaultValue}\n        onChange={ v => this.props.onChange(v.value) }\n        components={{\n            Menu: this.state.CustomMenu,\n            Option: this.state.CustomOption,\n            Control: this.state.ControlComponent,\n            Input: this.state.CustomInputContainer,\n            SingleValue: this.state.CustomValueContainer,\n            IndicatorSeparator: this.state.CustomIndicatorSeparator\n        }}\n      />\n    );\n  }\n}\n\nexport default GenericSelector;\n","import { Heading } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass Title extends Component {\n  render() {\n    const props = {\n      fontWeight:4,\n      fontSize:[4,6],\n      color:'copyColor',\n      textAlign:'center',\n      lineHeight:'initial',\n    };\n\n    // Replace props\n    if (this.props && Object.keys(this.props).length){\n      Object.keys(this.props).forEach(p => {\n        props[p] = this.props[p];\n      });\n    }\n\n    const HeadingComponent = this.props.component ? this.props.component : Heading.h1;\n\n    return (\n      <HeadingComponent\n        {...props}\n      >\n        {this.props.children}\n      </HeadingComponent>\n    );\n  }\n}\n\nexport default Title;\n","/*\nTheming: https://github.com/plouc/nivo/issues/308\n*/\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\n\nclass GenericChart extends Component {\n  state = {\n    width:null,\n    height:null\n  };\n\n  componentUnmounted = false;\n\n  componentWillMount() {\n    window.addEventListener('resize', this.handleWindowSizeChange.bind(this));\n  }\n\n  componentWillUnmount() {\n    this.componentUnmounted = true;\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n\n  componentDidMount(){\n    this.handleWindowSizeChange();\n  }\n\n  componentDidUpdate(prevProps){\n    if (prevProps.isMobile !== this.props.isMobile){\n      this.handleWindowSizeChange();\n    }\n  }\n\n  handleWindowSizeChange(){\n    if (this.componentUnmounted){\n      return false;\n    }\n\n    const newState = {...this.state};\n\n    if (this.props.parentId){\n      const chartContainer = document.getElementById(this.props.parentId);\n      if (chartContainer){\n        const chartWidth = parseFloat(chartContainer.offsetWidth)>0 ? chartContainer.offsetWidth : 0;\n\n        if (chartWidth && chartWidth !== newState.width){\n          newState.width = chartWidth;\n        }\n      }\n    }\n\n    if (!newState.width && this.props.width && this.props.width !== newState.width) {\n      newState.width = this.props.width;\n    }\n\n    if (this.props.parentIdHeight){\n      const chartContainerH = document.getElementById(this.props.parentIdHeight);\n      if (chartContainerH){\n        const chartHeight = parseFloat(chartContainerH.offsetWidth)>0 ? chartContainerH.offsetWidth : 0;\n        if (chartHeight && chartHeight !== newState.height){\n          newState.height = chartHeight;\n        }\n      }\n    }\n\n    if (!newState.height && this.props.height && this.props.height !== newState.height) {\n      newState.height = this.props.height;\n    }\n\n    if (Object.keys(newState).length>0){\n      this.setState(newState);\n    }\n  };\n\n  render() {\n    const ChartType = this.props.type;\n\n    const height = this.state.height && !isNaN(this.state.height) ? parseInt(this.state.height) : 350;\n    const width = this.state.width && !isNaN(this.state.width) ? parseInt(this.state.width) : 0;\n\n    let chartProps = Object.assign({},this.props);\n    chartProps = {\n      ...chartProps,\n      height,\n      width\n    }\n\n    return chartProps.showLoader && (!chartProps.data || !width || !height) ? (\n      <FlexLoader\n        flexProps={{\n          flexDirection:'row',\n          minHeight:height\n        }}\n        loaderProps={ this.props.loaderProps ? this.props.loaderProps : {\n          size:'30px'\n        }}\n        textProps={{\n          ml:2\n        }}\n        text={ this.props.loaderText !== undefined ? this.props.loaderText : 'Loading graph data...'}\n      />\n    ) : this.props.data && (\n      <ChartType\n        {...chartProps}\n      />\n    )\n  }\n}\n\nexport default GenericChart;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"defaultOpacity\":\"DashboardCard_defaultOpacity__1B1rs\",\"hidden\":\"DashboardCard_hidden__8pO5t\",\"interactive\":\"DashboardCard_interactive__2adxr\",\"rainbow\":\"DashboardCard_rainbow__3HCI7\",\"disabled\":\"DashboardCard_disabled__uqHO2\"};","import { Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass FastBalanceSelector extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n\n    let cardProps = {\n      p:2,\n      width:0.23,\n      onMouseDown:this.props.onMouseDown\n    };\n\n    let textProps = {\n      fontSize:2,\n      fontWeight:3,\n      textAlign:'center',\n      color:this.props.isActive ? 'copyColor' : 'legend'\n    }\n\n    cardProps = this.functionsUtil.replaceArrayProps(cardProps,this.props.cardProps);\n    textProps = this.functionsUtil.replaceArrayProps(textProps,this.props.textProps);\n\n    return (\n      <DashboardCard\n        isInteractive={true}\n        cardProps={cardProps}\n        isActive={this.props.isActive}\n      >\n        <Text \n          {...textProps}\n        >\n          {this.props.percentage}%\n        </Text>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default FastBalanceSelector;","import React, { Component } from 'react';\nimport { Flex, Box, Text, Button } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\n\nclass TokenSwap extends Component {\n\n  state = {\n    tokenConfig:null,\n    selectedFromToken:null,\n    selectedDestToken:null,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async loadKyberWidget(){\n\n    if (!this.state.selectedFromToken || !this.state.selectedDestToken){\n      return false;\n    }\n\n    const provider = 'kyberSwap';\n    const providerInfo = this.functionsUtil.getGlobalConfig(['payments','providers',provider]);\n    if (providerInfo.enabled && providerInfo.remoteResources){\n\n      const globalConfigs = this.functionsUtil.getGlobalConfigs();\n      const remoteResources = providerInfo.remoteResources;\n\n      Object.keys(remoteResources).forEach((url,j) => {\n\n        const resourceType = url.split('.').pop().toLowerCase();\n\n        switch (resourceType){\n          case 'js':\n            const scriptID = `script_${provider}_${j}_${this.state.selectedFromToken}_${this.state.selectedDestToken}`;\n\n            if (!document.getElementById(scriptID)){\n              const script = document.createElement(\"script\");\n              const remoteResourceParams = remoteResources[url];\n              const callback = remoteResourceParams && remoteResourceParams.callback ? remoteResourceParams.callback : null;\n              const precall = remoteResourceParams && remoteResourceParams.precall ? remoteResourceParams.precall : null;\n\n              if (precall && typeof precall === 'function'){\n                const precallProps = {\n                  baseToken:this.state.selectedFromToken,\n                  selectedToken:this.state.selectedDestToken,\n                  buttonId:`kyber-swapper-${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n                };\n                precall(precallProps,globalConfigs,providerInfo);\n              }\n\n              if (callback && typeof callback === 'function'){\n                if (script.readyState) {  // only required for IE <9\n                  script.onreadystatechange = function() {\n                    if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n                      script.onreadystatechange = null;\n                      callback();\n                    }\n                  };\n                } else {  //Others\n                  script.onload = callback;\n                }\n              }\n\n              script.id = scriptID;\n              script.className = `script_${provider}`;\n              script.src = url;\n              script.async = true;\n\n              if (remoteResourceParams && remoteResourceParams.parentElement){\n                remoteResourceParams.parentElement.appendChild(script)\n              } else {\n                document.head.appendChild(script);\n              }\n            }\n          break;\n          case 'css':\n            const stylesheetId = `stylesheet_${provider}_${j}`;\n\n            if (!document.getElementById(stylesheetId)){\n              const style = document.createElement(\"link\");\n\n              style.id = stylesheetId;\n              style.rel = 'stylesheet';\n              style.href = url;\n\n              document.head.appendChild(style);\n            }\n          break;\n          default:\n          break;\n        }\n      });\n    }\n\n    this.setState({\n      providerInfo\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async loadTokens(){\n    const selectedFromToken = Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    this.selectFromToken(selectedFromToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const fromTokenChanged = prevState.selectedFromToken !== this.state.selectedFromToken;\n    const destTokenChanged = prevState.selectedDestToken !== this.state.selectedDestToken;\n    if ((fromTokenChanged ||  destTokenChanged) && this.state.selectedFromToken && this.state.selectedDestToken){\n      this.loadKyberWidget();\n    }\n  }\n\n  selectFromToken = async (selectedFromToken) => {\n    let selectedDestToken = null;\n    const availableDestinationTokens = {};\n    const supportedTokens = this.functionsUtil.getGlobalConfig(['payments','providers','kyberSwap','supportedTokens']);\n\n    supportedTokens.forEach( token => {\n      if (token !== selectedFromToken){\n        if (!selectedDestToken){\n          selectedDestToken = token;\n        }\n        availableDestinationTokens[token] = {\n          token\n        };\n      }\n    });\n\n    const baseToken = this.functionsUtil.getGlobalConfig(['baseToken']);\n    if (baseToken !== selectedFromToken){\n      availableDestinationTokens[baseToken] = {\n        token:baseToken\n      };\n    }\n\n    this.setState({\n      selectedFromToken,\n      availableDestinationTokens\n    },() => {\n      this.selectDestToken(selectedDestToken);\n    });\n  }\n\n  selectDestToken = async (selectedDestToken) => {\n    this.setState({\n      selectedDestToken\n    });\n  }\n\n  swap = () => {\n    const globalConfigs = this.functionsUtil.getGlobalConfigs();\n    const paymentProvider = this.state.providerInfo;\n    const initProps = {\n      baseToken:this.state.selectedFromToken,\n      selectedToken:this.state.selectedDestToken,\n      buttonId:`kyber-swapper-${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n    };\n    const initParams = paymentProvider && paymentProvider.getInitParams ? paymentProvider.getInitParams(initProps,globalConfigs) : null;\n\n    // Render the Payment Provider\n    if (typeof paymentProvider.render === 'function'){\n      paymentProvider.render(initParams,null,initProps);\n    }\n\n    // Send GA event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Tools',\n      eventAction: 'TokenSwap',\n      eventLabel: `${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedFromToken){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to swap:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              showBalance={false}\n              isSearchable={true}\n              onChange={this.selectFromToken}\n              selectedToken={this.state.selectedFromToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            this.state.availableDestinationTokens && this.state.selectedDestToken && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text mb={1}>\n                  Select destination asset:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  showBalance={false}\n                  isSearchable={true}\n                  onChange={this.selectDestToken}\n                  selectedToken={this.state.selectedDestToken}\n                  availableTokens={this.state.availableDestinationTokens}\n                />\n              </Box>\n          }\n          <Flex\n            mt={2}\n            width={1}\n            justifyContent={'center'}\n          >\n            <Button\n              my={2}\n              mx={[0, 2]}\n              size={'medium'}\n              borderRadius={4}\n              mainColor={'blue'}\n              onClick={ e => this.swap(e) }\n              disabled={ !this.state.selectedFromToken || !this.state.selectedDestToken }\n            >\n              SWAP TOKENS\n            </Button>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenSwap;\n","import React, { Component } from 'react';\nimport IconBox from '../IconBox/IconBox';\nimport ExtLink from '../ExtLink/ExtLink';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport { Flex, Box, Text, Icon, Link, Input } from \"rimble-ui\";\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\n\nclass SendTxWithBalance extends Component {\n\n  state = {\n    processing:{\n      txHash:null,\n      loading:false\n    },\n    inputValue:null,\n    txSucceeded:false,\n    buttonDisabled:true,\n    contractApproved:false,\n    fastBalanceSelector:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    await this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const actionChanged = prevProps.action !== this.props.action;\n    const accountChanged = prevProps.account !== this.props.account;\n    const tokenBalanceChanged = prevProps.tokenBalance !== this.props.tokenBalance;\n    const contractChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    if (actionChanged || accountChanged || tokenBalanceChanged || contractChanged || tokenConfigChanged){\n      await this.loadData();\n    }\n\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    if (contractApprovedChanged){\n      if (typeof this.props.contractApproved === 'function'){\n        this.props.contractApproved(this.state.contractApproved);\n      }\n    }\n\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector !== prevState.fastBalanceSelector;\n    if (fastBalanceSelectorChanged || actionChanged){\n      this.setInputValue();\n    }\n\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue;\n    if (inputValueChanged){\n      if (typeof this.props.changeInputCallback === 'function'){\n        this.props.changeInputCallback(this.state.inputValue);\n      }\n      this.checkButtonDisabled();\n    }\n  }\n\n  changeInputValue = (e) => {\n    const fastBalanceSelector = null;\n    const inputValue = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n    this.setState((prevState) => ({\n      inputValue,\n      fastBalanceSelector\n    }));\n  }\n\n  setInputValue = () => {\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n    const inputValue = this.props.tokenBalance ? this.functionsUtil.BNify(this.props.tokenBalance).times(selectedPercentage) : null;\n    this.setState({\n      inputValue\n    });\n  }\n\n  getFastBalanceSelector = () => {\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n    return this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n  }\n\n  setFastBalanceSelector = (fastBalanceSelector) => {\n    this.setState({\n      fastBalanceSelector\n    });\n  }\n\n  checkButtonDisabled = (amount=null) => {\n    if (!amount){\n      amount = this.state.inputValue;\n    }\n    amount = this.functionsUtil.BNify(amount);\n    const buttonDisabled = amount.isNaN() || amount.lte(0) || amount.gt(this.props.tokenBalance);\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  approve = async () => {\n    // Check if the migration contract is approved\n    const contractApproved = await this.checkContractApproved();\n\n    if (!contractApproved){\n\n      const callbackApprove = (tx,error) => {\n        // Send Google Analytics event\n        const eventData = {\n          eventAction: 'approve',\n          eventCategory: 'CurveDeposit',\n          eventLabel: tx ? tx.status : null\n        };\n\n        const txSucceeded = tx && tx.status === 'success';\n\n        if (error){\n          eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n        }\n\n        // Send Google Analytics event\n        if (error || eventData.status !== 'error'){\n          this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n        }\n\n        this.setState((prevState) => ({\n          contractApproved: txSucceeded, // True\n          processing: {\n            ...prevState.processing,\n            txHash:null,\n            loading:false\n          }\n        }));\n\n        if (typeof this.props.callbackApprove === 'function' && txSucceeded){\n          this.props.callbackApprove(tx);\n        }\n      };\n\n      const callbackReceiptApprove = (tx) => {\n        const txHash = tx.transactionHash;\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            txHash\n          }\n        }));\n      };\n\n      this.functionsUtil.enableERC20(this.props.tokenConfig.token,this.props.contractInfo.address,callbackApprove,callbackReceiptApprove);\n\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash:null,\n          loading:true\n        },\n        contractApproved:false\n      }));\n    } else {\n      this.setState({\n        contractApproved:true\n      });\n    }\n  }\n\n  executeTx = async () => {\n\n    const inputValue = this.state.inputValue ? this.functionsUtil.BNify(this.state.inputValue) : null;\n    if (!inputValue){\n      return false;\n    }\n\n    const _amount = this.functionsUtil.normalizeTokenAmount(inputValue,this.props.tokenConfig.decimals);\n    const params = await this.props.getTransactionParams(_amount);\n\n    const callback = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventLabel: tx.status,\n        eventCategory: `CurveDeposit`,\n        eventValue: inputValue.toFixed(),\n        eventAction: this.props.tokenConfig.token,\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState({\n        txSucceeded,\n        processing: {\n          txHash:null,\n          loading:false\n        }\n      });\n\n      if (txSucceeded){\n        // Reset input\n        this.changeInputValue({\n          target:{\n            value:0\n          }\n        });\n        // Call upper component callback\n        if (typeof this.props.callback === 'function'){\n          this.props.callback(tx,_amount,params);\n        }\n      }\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    if (params){\n      const {\n        methodName,\n        methodParams\n      } = params;\n\n      const value = params.value || null;\n\n      const contractName = this.props.contractInfo.name;\n      this.props.contractMethodSendWrapper(contractName, methodName, methodParams, value, callback, callbackReceipt);\n\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          loading:true\n        }\n      }));\n    }\n  }\n\n  cancelTransaction = async () => {\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  async checkContractApproved(){\n\n    if (this.props.approveEnabled !== undefined && !this.props.approveEnabled){\n      return true;\n    }\n\n    const contractInfo = await this.props.initContract(this.props.contractInfo.name,this.props.contractInfo.address,this.props.contractInfo.abi);\n    if (contractInfo){\n      const contractApproved = await this.functionsUtil.checkTokenApproved(this.props.tokenConfig.token,this.props.contractInfo.address,this.props.account);\n      return contractApproved;\n    }\n    return null;\n  }\n\n  async loadData(){\n    const inputValue = null;\n    const contractApproved = await this.checkContractApproved();\n    this.setState({\n      inputValue,\n      contractApproved\n    });\n  }\n\n  approveCallback = () => {\n    this.loadData();\n  }\n\n  render() {\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'stretch'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          this.props.tokenConfig && this.props.tokenBalance && this.functionsUtil.BNify(this.props.tokenBalance).gt(0) ? (\n            <Box\n              width={1}\n            >\n              {\n                this.props.infoBox && (\n                  <IconBox\n                    cardProps={{\n                      mb:3\n                    }}\n                    {...this.props.infoBox}\n                  />\n                )\n              }\n              {\n                this.props.steps && this.props.steps.length>0 && (\n                  <DashboardCard\n                    cardProps={{\n                      p:3,\n                      px:[2,4]\n                    }}\n                  >\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                    > \n                      {\n                        this.props.steps.map( (step,stepIndex) => (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            key={`step_${stepIndex}`}\n                          >\n                            <Icon\n                              size={'1.5em'}\n                              name={ step.completed ? 'CheckBox' : step.icon}\n                              color={ step.completed ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                            />\n                            {\n                              step.link ? (\n                                <ExtLink\n                                  ml={2}\n                                  fontSize={2}\n                                  color={'blue'}\n                                  fontWeight={1}\n                                  href={step.link}\n                                  textAlign={'left'}\n                                  hoverColor={'blue'}\n                                >\n                                  {step.description}\n                                </ExtLink>\n                              ) : (\n                                <Text\n                                  ml={2}\n                                  fontSize={2}\n                                  fontWeight={1}\n                                  color={'cellText'}\n                                  textAlign={'left'}\n                                >\n                                  {step.description}\n                                </Text>\n                              )\n                            }\n                          </Flex>\n                        ) )\n                      }\n                    </Flex>\n                  </DashboardCard>\n                )\n              }\n              {\n                !this.state.contractApproved ?\n                  this.state.processing.loading ? (\n                    <Flex\n                      mt={3}\n                      flexDirection={'column'}\n                    >\n                      <TxProgressBar\n                        web3={this.props.web3}\n                        waitText={`Approve estimated in`}\n                        hash={this.state.processing.txHash}\n                        endMessage={`Finalizing approve request...`}\n                        cancelTransaction={this.cancelTransaction.bind(this)}\n                      />\n                    </Flex>\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3,\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'2.3em'}\n                          name={'LockOpen'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          {this.props.approveDescription}\n                        </Text>\n                        <RoundButton\n                          buttonProps={{\n                            mt:3,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.approve.bind(this)}\n                        >\n                          Approve\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  )\n                : this.state.processing.loading ? (\n                  <Flex\n                    mt={3}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      web3={this.props.web3}\n                      waitText={`Deposit estimated in`}\n                      hash={this.state.processing.txHash}\n                      endMessage={`Finalizing deposit request...`}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                    />\n                  </Flex>\n                ) : (\n                  <Box\n                    mt={2}\n                    width={1}\n                  >\n                    <Flex\n                      mt={2}\n                      mb={3}\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        mb={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={this.props.balanceSelectorInfo ? 'space-between' : 'flex-end'}\n                      >\n                        {\n                          this.props.balanceSelectorInfo && (\n                            <Flex\n                              width={1}\n                              maxWidth={'50%'}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                            >\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                textAlign={'left'}\n                                style={{\n                                  maxWidth:'100%',\n                                  overflow:'hidden',\n                                  whiteSpace:'nowrap',\n                                  textOverflow:'ellipsis'\n                                }}\n                                color={this.props.balanceSelectorInfo.color ? this.props.balanceSelectorInfo.color : 'copyColor'}\n                              >\n                                {this.props.balanceSelectorInfo.text}\n                              </Text>\n                            </Flex>\n                          )\n                        }\n                        {\n                          this.props.tokenBalance && (\n                            <Flex\n                              width={1}\n                              maxWidth={'50%'}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'flex-end'}\n                            >\n                              <Link\n                                fontSize={1}\n                                fontWeight={3}\n                                color={'dark-gray'}\n                                textAlign={'right'}\n                                hoverColor={'copyColor'}\n                                onClick={ (e) => this.setFastBalanceSelector(100) }\n                                style={{\n                                  maxWidth:'100%',\n                                  overflow:'hidden',\n                                  whiteSpace:'nowrap',\n                                  textOverflow:'ellipsis'\n                                }}\n                              >\n                                Balance: {this.props.tokenBalance.toFixed(this.props.isMobile ? 2 : 4)} {this.props.tokenConfig.token}\n                              </Link>\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                      <Input\n                        min={0}\n                        type={\"number\"}\n                        required={true}\n                        height={'3.4em'}\n                        borderRadius={2}\n                        fontWeight={500}\n                        borderColor={'cardBorder'}\n                        backgroundColor={'cardBg'}\n                        boxShadow={'none !important'}\n                        placeholder={`Insert amount`}\n                        onChange={this.changeInputValue.bind(this)}\n                        border={`1px solid ${this.props.theme.colors.divider}`}\n                        value={this.state.inputValue !== null ? this.functionsUtil.BNify(this.state.inputValue).toFixed() : ''}\n                      />\n                      <Flex\n                        mt={2}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        {\n                          [25,50,75,100].map( percentage => (\n                            <FastBalanceSelector\n                              percentage={percentage}\n                              key={`selector_${percentage}`}\n                              onMouseDown={()=>this.setFastBalanceSelector(percentage)}\n                              isActive={this.state.fastBalanceSelector === parseInt(percentage)}\n                            />\n                          ))\n                        }\n                      </Flex>\n                      <Flex\n                        mt={2}\n                        justifyContent={'center'}\n                      >\n                        <RoundButton\n                          buttonProps={{\n                            mt:2,\n                            width:[1,1/2],\n                            style:{\n                              textTransform:'capitalize'\n                            },\n                            disabled:this.state.buttonDisabled\n                          }}\n                          handleClick={this.executeTx.bind(this)}\n                        >\n                          {this.props.action}\n                        </RoundButton>\n                      </Flex>\n                    </Flex>\n                  </Box>\n                )\n              }\n            </Box>\n          ) : this.props.children\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default SendTxWithBalance;","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Box, Flex, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass ETHWrapper extends Component {\n\n  state = {\n    action:null,\n    infoBox:null,\n    balanceETH:null,\n    balanceWETH:null,\n    tokenConfig:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    approveEnabled:true,\n    approveDescription:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadBalance();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const actionChanged = prevState.action !== this.state.action;\n    if (actionChanged){\n      this.updateActionData();\n    }\n  }\n\n  async loadBalance(){\n\n    // Init Contract\n    await this.props.initContract(this.props.toolProps.contract.name,this.props.toolProps.contract.address,this.props.toolProps.contract.abi);\n\n    // Load Balances\n    const [\n      balanceETH,\n      balanceWETH\n    ] = await Promise.all([\n      this.functionsUtil.getETHBalance(this.props.account),\n      this.functionsUtil.getTokenBalance('WETH',this.props.account)\n    ]);\n\n    const action = this.state.action || 'wrap';\n    const tokenBalance = action === 'wrap' ? balanceETH : balanceWETH;\n\n    this.setState({\n      action,\n      balanceETH,\n      balanceWETH,\n      tokenBalance\n    });\n  }\n\n  updateActionData(){\n    let infoBox = null;\n    let tokenConfig = null;\n    let tokenBalance = null;\n    let selectedToken = null;\n    let approveEnabled = true;\n    let approveDescription = null;\n\n    switch (this.state.action){\n      case 'wrap':\n        selectedToken = 'ETH';\n        approveEnabled = true;\n        tokenConfig = {\n          token:'ETH',\n          decimals:18\n        };\n        tokenBalance = this.state.balanceETH;\n        approveDescription = 'To Mint new WETH you need to approve the Smart-Contract first';\n        infoBox = {\n          icon:'FileDownload',\n          // iconProps:{\n          //   color:this.props.theme.colors.transactions.action.deposit\n          // },\n          text:`Wrap your ETH and get WETH with a 1:1 ratio`\n        };\n      break;\n      case 'unwrap':\n        selectedToken = 'WETH';\n        approveEnabled = false;\n        tokenBalance = this.state.balanceWETH;\n        tokenConfig = this.props.toolProps.contract;\n        approveDescription = 'To withdraw your ETH you need to approve the Smart-Contract first';\n        infoBox = {\n          icon:'FileUpload',\n          // iconProps:{\n          //   color:this.props.theme.colors.transactions.action.redeem\n          // },\n          text:`Unwrap your WETH and get back ETH with a 1:1 ratio`\n        };\n      break;\n      default:\n      break;\n    }\n\n    this.setState({\n      infoBox,\n      tokenConfig,\n      tokenBalance,\n      selectedToken,\n      approveEnabled,\n      approveDescription\n    });\n  }\n\n  setAction(action){\n    this.setState({\n      action\n    });\n  }\n\n  transactionSucceeded(tx,amount,params){\n    let infoBox = null;\n\n    switch (this.state.action){\n      case 'wrap':\n        const mintLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.contract.address.toLowerCase() ) : null;\n        let mintedAmount = mintLog ? parseInt(mintLog.data,16) : amount;\n        mintedAmount = this.functionsUtil.fixTokenDecimals(mintedAmount,this.state.tokenConfig.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have received <strong>${mintedAmount.toFixed(4)} WETH</strong>`\n        }\n      break;\n      case 'unwrap':\n        const withdrawLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.contract.address.toLowerCase() ) : null;\n        let withdrawnAmount = withdrawLog ? parseInt(withdrawLog.data,16) : amount;\n        withdrawnAmount = this.functionsUtil.fixTokenDecimals(withdrawnAmount,this.state.tokenConfig.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have received <strong>${withdrawnAmount.toFixed(4)} ETH</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    // Update balances\n    this.loadBalance();\n\n    this.setState({\n      infoBox\n    });\n  }\n\n  getTransactionParams(amount){\n    const params = {};\n    switch (this.state.action){\n      case 'wrap':\n        params.value = amount;\n        params.methodParams = [];\n        params.methodName = 'deposit';\n      break;\n      case 'unwrap':\n        params.value = null;\n        params.methodParams = [amount];\n        params.methodName = 'withdraw';\n      break;\n      default:\n      break;\n    }\n    return params;\n  }\n\n  render() {\n\n    const fullWidth = !!this.props.fullWidth;\n    const depositOnly = !!this.props.depositOnly;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        mt={[2,fullWidth ? 2 : 3]}\n      >\n        <Flex\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n          width={[1,fullWidth ? 1 : 0.36]}\n        >\n          {\n            !this.props.account ? (\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mt:3\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                    name={'Input'}\n                    color={'cellText'}\n                  />\n                  <Text\n                    mt={[1,2]}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Please connect with your wallet interact with Idle.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:2,\n                      width:[1,1/2]\n                    }}\n                    handleClick={this.props.connectAndValidateAccount}\n                  >\n                    Connect\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            ) : (\n              <Box\n                width={1}\n              >\n                {\n                  !depositOnly && (\n                    <Flex\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        mb={2}\n                      >\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <CardIconButton\n                          {...this.props}\n                          cardProps={{\n                            px:3,\n                            py:3,\n                            width:0.48\n                          }}\n                          text={'Wrap'}\n                          iconColor={'wrap'}\n                          icon={'ArrowDownward'}\n                          iconBgColor={'#ced6ff'}\n                          isActive={ this.state.action === 'wrap' }\n                          handleClick={ e => this.setAction('wrap') }\n                        />\n                        <CardIconButton\n                          {...this.props}\n                          cardProps={{\n                            px:3,\n                            py:3,\n                            width:0.48\n                          }}\n                          text={'Unwrap'}\n                          iconColor={'redeem'}\n                          icon={'ArrowUpward'}\n                          iconBgColor={'#ceeff6'}\n                          isActive={ this.state.action === 'unwrap' }\n                          handleClick={ e => this.setAction('unwrap') }\n                        />\n                      </Flex>\n                    </Flex>\n\n                  )\n                }\n                <Box\n                  width={1}\n                  my={fullWidth ? 2 : 3}\n                >\n                  {\n                    this.state.tokenBalance!==null ? (\n                      <SendTxWithBalance\n                        {...this.props}\n                        approveEnabled={false}\n                        action={this.state.action}\n                        infoBox={this.state.infoBox}\n                        tokenConfig={this.state.tokenConfig}\n                        tokenBalance={this.state.tokenBalance}\n                        contractInfo={this.props.toolProps.contract}\n                        callback={this.transactionSucceeded.bind(this)}\n                        approveDescription={this.state.approveDescription}\n                        // changeInputCallback={this.changeInputCallback.bind(this)}\n                        getTransactionParams={this.getTransactionParams.bind(this)}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedToken} to {this.state.action} in your wallet.\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </SendTxWithBalance>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                        }}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading Balance...'}\n                        />\n                      </DashboardCard>\n                    )\n                  }\n                </Box>\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default ETHWrapper;\n","import React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ButtonLoader from '../ButtonLoader/ButtonLoader';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport { Flex, Box, Text, Input, Link, Progress } from \"rimble-ui\";\n\nclass NexusMutual extends Component {\n\n  state = {\n    step:1,\n    steps:{\n      1:'Get Quote',\n      2:'Enable NXS',\n      3:'Buy Cover'\n    },\n    loading:false,\n    amountValue:'',\n    periodValue:'',\n    quoteResponse:null,\n    selectedToken:'DAI'\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  async changeSelectedToken(selectedToken){\n    this.setState({\n      selectedToken\n    });\n  }\n\n  changeAmount = (e) => {\n    const amountValue = e.target.value.length && !isNaN(e.target.value) ? e.target.value : '';\n    this.setState({\n      amountValue\n    });\n  }\n\n  changePeriod = (e) => {\n\n    const periodValue = e.target.value.length && !isNaN(e.target.value) ? e.target.value : '';\n    this.setState({\n      periodValue\n    });\n  }\n\n  async getQuote() {\n\n    this.setState({\n      loading:true\n    });\n\n    let quoteResponse = await this.functionsUtil.makeRequest(`https://api.nexusmutual.io/getQuote/${this.state.amountValue}/${this.state.selectedToken}/${this.state.periodValue}/0x78751B12Da02728F467A44eAc40F5cbc16Bd7934/M1`);\n\n    const newState = {\n      loading:false\n    };\n\n    if (quoteResponse){\n      newState.quoteResponse = quoteResponse.data;\n    }\n\n    this.setState({\n      quoteResponse\n    });\n  }\n\n  render() {\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          mb={3}\n          width={[1,0.36]}\n          flexDirection={'column'}\n        >\n          <Flex\n            mb={1}\n            width={1}\n            flexDirection={'row'}\n            justifyContent={'space-between'}\n          >\n            {\n              Object.keys(this.state.steps).map( stepIndex => (\n                <Link\n                  style={{\n                    flexBasis:'0',\n                    flex:'1 1 0px',\n                    textDecoration:'none',\n                    cursor:this.state.step>=stepIndex ? 'pointer' : 'default'\n                  }}\n                  fontSize={2}\n                  textAlign={'center'}\n                  key={`step_${stepIndex}`}\n                  color={ this.state.step>=stepIndex ? 'blue' : 'cellText' }\n                  hoverColor={ this.state.step>=stepIndex ? 'blue' : 'cellText' }\n                  activeColor={ this.state.step>=stepIndex ? 'blue' : 'cellText' }\n                >\n                  {this.state.steps[stepIndex]}\n                </Link>\n              ) )\n            }\n          </Flex>\n          <Flex\n            width={1}\n            flexDirection={'column'}\n          >\n            <Progress\n              style={{\n                width:'100%',\n                height:'15px'\n              }}\n              value={(1/Object.keys(this.state.steps).length)*this.state.step}\n            />\n          </Flex>\n        </Flex>\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text\n              mb={1}>\n              Select asset:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              showBalance={false}\n              selectedToken={this.state.selectedToken}\n              onChange={this.changeSelectedToken.bind(this)}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              How much do you want to cover?\n            </Text>\n            <Input\n              min={0}\n              width={'100%'}\n              type={\"number\"}\n              required={true}\n              height={'3.4em'}\n              borderRadius={2}\n              fontWeight={500}\n              boxShadow={'none !important'}\n              value={this.state.amountValue}\n              onChange={this.changeAmount.bind(this)}\n              border={`1px solid ${this.props.theme.colors.divider}`}\n              placeholder={`Insert ${this.state.selectedToken.toUpperCase()} amount`}\n            />\n          </Box>\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              For how many days?\n            </Text>\n            <Input\n              min={0}\n              width={'100%'}\n              type={\"number\"}\n              required={true}\n              height={'3.4em'}\n              borderRadius={2}\n              fontWeight={500}\n              boxShadow={'none !important'}\n              value={this.state.periodValue}\n              placeholder={'Insert days of coverage'}\n              onChange={this.changePeriod.bind(this)}\n              border={`1px solid ${this.props.theme.colors.divider}`}\n            />\n          </Box>\n          <Flex\n            mt={2}\n            width={1}\n            justifyContent={'center'}\n          >\n            <ButtonLoader\n              buttonProps={{\n                my:2,\n                mx:[0, 2],\n                size:'medium',\n                borderRadius:4,\n                mainColor:'blue',\n                disabled:(!this.state.amountValue || !this.state.selectedToken || !this.state.periodValue)\n              }}\n              buttonText={'GET QUOTE'}\n              isLoading={this.state.loading}\n              handleClick={ e => this.getQuote(e) }\n            />\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default NexusMutual;","import React, { Component } from 'react';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport { Text, Icon, Image, Button } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass CustomField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    \n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    let CustomComponent = null;\n    let componentHasChildren = false;\n    const fieldType = fieldInfo.type;\n    const fieldPath = fieldInfo.path;\n    let customValue = fieldPath ? this.functionsUtil.getArrayPath(fieldPath,this.props.row) : null;\n\n    switch (fieldType){\n      case 'image':\n        CustomComponent = Image;\n        fieldProps.src = customValue;\n      break;\n      case 'number':\n        customValue = this.functionsUtil.BNify(customValue).toString();\n        CustomComponent = SmartNumber;\n        fieldProps.number = customValue;\n      break;\n      case 'icon':\n        CustomComponent = Icon;\n        fieldProps.name = customValue;\n      break;\n      case 'button':\n        CustomComponent = Button;\n        componentHasChildren = true;\n        customValue = fieldInfo.label;\n        fieldProps.onClick=() => fieldProps.handleClick(this.props)\n      break;\n      default:\n        CustomComponent = Text;\n        componentHasChildren = true;\n      break;\n    }\n\n    if (!customValue){\n      return null;\n    }\n\n    // Add custom field extra props\n    if (fieldPath){\n      const customFieldName = Object.values(fieldPath).pop();\n      if (this.props.row[`${customFieldName}Props`]){\n        const customFieldProps = this.props.row[`${customFieldName}Props`];\n        // Replace props\n        if (customFieldProps && Object.keys(customFieldProps).length){\n          Object.keys(customFieldProps).forEach(p => {\n            fieldProps[p] = customFieldProps[p];\n          });\n        }\n      }\n    }\n\n    return CustomComponent ? (componentHasChildren ? (<CustomComponent {...fieldProps}>{customValue}</CustomComponent>) : (<CustomComponent {...fieldProps} />) ) : null;\n  }\n}\n\nexport default CustomField;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport CustomField from '../CustomField/CustomField';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass CustomList extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n\n    return (\n      <Flex id=\"custom-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"custom-list\" flexDirection={'column'}>\n          {\n            this.props.rows.map( (row,rowIndex) => {\n              return (\n                <TableRow\n                  row={row}\n                  {...this.props}\n                  key={`asset-${rowIndex}`}\n                  fieldComponent={CustomField}\n                  rowId={`asset-col-${rowIndex}`}\n                  cardId={`asset-card-${rowIndex}`}\n                />\n              );\n            })\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default CustomList;","import theme from '../theme';\nimport { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport AssetField from '../AssetField/AssetField';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass PortfolioDonut extends Component {\n  state = {\n    chartData:null,\n    totalFunds:null,\n    parentWidth:null,\n    selectedToken:null,\n    selectedTokenConfig:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentWillUnmount() {\n    \n  }\n\n  async componentDidMount(){\n    this.loadPortfolio();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  async loadPortfolio() {\n\n    const portfolio = {};\n    let totalFunds = this.functionsUtil.BNify(0);\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.availableTokens),async (token) => {\n      const tokenConfig = this.props.availableTokens[token];\n      const idleTokenBalance = await this.functionsUtil.getTokenBalance(tokenConfig.idle.token,this.props.account);\n\n      if (idleTokenBalance){\n        const tokenPrice = await this.functionsUtil.getIdleTokenPrice(tokenConfig);\n        const tokenBalance = await this.functionsUtil.convertTokenBalance(idleTokenBalance.times(tokenPrice),token,tokenConfig,isRisk);\n\n        if (tokenBalance.gt(0)){\n          portfolio[token] = tokenBalance;\n\n          // Increment total balance\n          totalFunds = totalFunds.plus(tokenBalance);\n        }\n      }\n    });\n\n    // Add Gov Tokens\n    const govTokensUserBalances = await this.functionsUtil.getGovTokensUserBalances(this.props.account,this.props.availableTokens,'DAI',null,true);\n    if (govTokensUserBalances){\n      Object.keys(govTokensUserBalances).forEach( govToken => {\n        const govTokenBalance = this.functionsUtil.BNify(govTokensUserBalances[govToken]);\n        portfolio[govToken] = govTokenBalance;\n        totalFunds = totalFunds.plus(govTokenBalance);\n      });\n    }\n\n    const chartData = [];\n\n    Object.keys(portfolio).forEach(token => {\n      const tokenBalance = portfolio[token];\n      if (tokenBalance.gt(0)){\n        const tokenPercentage = tokenBalance.div(totalFunds).times(100);\n        let tokenColorHsl = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'color','hsl']);\n        tokenColorHsl = tokenColorHsl ? tokenColorHsl.join(',') : '0,0%,0%';\n        chartData.push({\n          id:token,\n          label:token.substr(0,1).toUpperCase()+token.substr(1),\n          value:Math.round(tokenPercentage),\n          color:'hsl('+tokenColorHsl+')'\n        });\n      }\n    });\n\n    this.setState({\n      portfolio,\n      chartData,\n      totalFunds\n    });\n  }\n\n  render() {\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth:0,\n      cornerRadius:0,\n      innerRadius:0.65,\n      motionDamping:15,\n      motionStiffness:90,\n      colors:d => d.color,\n      tooltipFormat: v => v+'%',\n      sliceLabel: d => {\n        if (parseFloat(d.value)>=5){\n          return d.value+'%';\n        } else {\n          return null;\n        }\n      },\n      radialLabel: d => {\n        return null;//Object.keys(this.props.availableTokens).indexOf(d.label.toUpperCase());\n      },\n      theme:{\n        tooltip: {\n          container: {\n            display: 'none'\n          },\n        },\n        labels:{\n          text:{\n            fontSize:16,\n            fontWeight:500,\n            fontFamily: theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsTextColor:'#333',\n      radialLabelsSkipAngle:10,\n      radialLabelsTextXOffset:0,\n      radialLabelsLinkOffset:-parseInt(this.state.parentWidth*0.2),\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      radialLabelsLinkColor:{ from: 'color' },\n      margin: this.props.isMobile ? { top: 15, right: 25, bottom: 30, left: 25 } : { top: 30, right: 50, bottom: 60, left: 50 },\n      onMouseEnter:(data, e) => {\n        const selectedToken = data.id;\n        const selectedTokenConfig = selectedToken ? this.props.availableTokens[selectedToken] || this.functionsUtil.getGlobalConfig(['stats','tokens',selectedToken]) : null;\n        this.setState({\n          selectedToken,\n          selectedTokenConfig\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setState({\n          selectedToken:null,\n          selectedTokenConfig:null\n        });\n      },\n      legends:[\n        {\n          itemWidth: 60,\n          itemHeight: 18,\n          translateY: this.props.isMobile ? 25 : 50,\n          symbolSize: 10,\n          anchor: 'bottom',\n          direction: 'row',\n          itemTextColor: theme.colors.legend,\n          symbolShape: 'circle',\n          effects: [\n            {\n              on: 'hover',\n              style: {\n                itemTextColor: '#000'\n              }\n            }\n          ]\n        }\n      ]\n    };\n\n    const selectedToken = this.state.selectedToken !== null && this.state.portfolio[this.state.selectedToken] ? this.state.portfolio[this.state.selectedToken] : false;\n    const strategyIcon = this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'icon']);\n    const convertToken = this.state.selectedToken ? this.functionsUtil.getGlobalConfig(['stats','tokens',this.state.selectedToken,'conversionRateField']) : false;\n\n    return (\n      <Flex\n        width={1}\n      >\n        { \n          (this.state.totalFunds || selectedToken) && \n            <Flex\n              zIndex={0}\n              top={['32%','35%']}\n              left={['23%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              width={['55%','46%']}\n              position={'absolute'}\n              height={['40%','35%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                selectedToken ? (\n                  <>\n                    <AssetField\n                      fieldInfo={{\n                        name:'icon',\n                        props:{\n                          mb:1,\n                          height:'2.2em'\n                        }\n                      }}\n                      token={this.state.selectedToken}\n                      tokenConfig={this.state.selectedTokenConfig}\n                    />\n                    <SmartNumber\n                      unitProps={{\n                        ml:2,\n                        fontSize:4,\n                        fontWeight:3\n                      }}\n                      decimals={2}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      fontWeight={[3,4]}\n                      unit={ convertToken ? '$' : null}\n                      number={this.state.portfolio[this.state.selectedToken]}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      {this.state.selectedToken}\n                    </Text>\n                  </>\n                ) : (\n                  <>\n                    <Image\n                      mb={1}\n                      height={'2.2em'}\n                      src={strategyIcon}\n                    />\n                    <SmartNumber\n                      unit={'$'}\n                      unitProps={{\n                        ml:2,\n                        fontSize:4,\n                        fontWeight:3\n                      }}\n                      decimals={2}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      fontWeight={[3,4]}\n                      number={this.state.totalFunds}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      Total funds\n                    </Text>\n                  </>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          {...chartProps}\n          showLoader={true}\n          data={this.state.chartData}\n          parentId={this.props.parentId}\n          parentIdHeight={this.props.parentId}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default PortfolioDonut;\n","import CountUp from 'react-countup';\nimport { Flex, Loader } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TotalEarningsCounter extends Component {\n\n  state = {\n    earningsEnd:null,\n    earningsStart:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalEarnings();\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const styleChanged = JSON.stringify(prevProps.counterStyle) !== JSON.stringify(this.props.counterStyle);\n    if (styleChanged || themeModeChanged || mobileChanged){\n      const oldState = Object.assign({},this.state);\n      this.setState({\n        earningsEnd:null,\n        earningsStart:null\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  async loadTotalEarnings(){\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized){\n      return true;\n    }\n\n    const availableTokens = this.props.availableTokens || {};\n    const portfolio = this.props.portfolio || await this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account);\n\n    const earningsStart = portfolio.totalEarnings;\n    const earningsEnd = portfolio.totalAmountLent.times(portfolio.avgAPY.div(100));\n\n    this.setState({\n      earningsEnd,\n      earningsStart\n    });\n  }\n\n  render() {\n\n    const counterStyle = {\n      lineHeight:1,\n      color:this.props.theme.colors.copyColor,\n      fontFamily:this.props.theme.fonts.counter,\n      fontWeight: this.props.isMobile ? 600 : 700,\n      fontSize:this.props.isMobile ? '21px' : '1.7em',\n    };\n\n    // Replace props\n    if (this.props.counterStyle && Object.keys(this.props.counterStyle).length){\n      Object.keys(this.props.counterStyle).forEach(p => {\n        counterStyle[p] = this.props.counterStyle[p];\n      });\n    }\n\n    const unit = this.props.unit || '$ ';\n    const decimals = this.props.decimals || 8;\n\n    return this.state.earningsStart && this.state.earningsEnd ? (\n      <Flex\n      >\n        <CountUp\n          delay={0}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          decimals={decimals}\n          duration={31536000}\n          end={parseFloat(this.state.earningsEnd)}\n          start={parseFloat(this.state.earningsStart)}\n          formattingFn={ n => unit+this.functionsUtil.formatMoney(n,decimals) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              ref={countUpRef}\n              style={counterStyle}\n            />\n          )}\n        </CountUp>\n      </Flex>\n    ) : (\n      <Loader size={\"20px\"} />\n    );\n  }\n}\n\nexport default TotalEarningsCounter;\n","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport { Card, Flex, Image, Text } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\n\nclass EarningsEstimation extends Component {\n  state = {\n    tokensEarnings:null,\n    estimationStepsPerc:null,\n    estimationStepsOptions:null,\n    estimationStepsDefaultOption:null,\n    estimationSteps:{\n      0:{\n        'Month':{\n          perc:1/12,\n          width:1/3\n        },\n        '2 months':{\n          perc:1/6,\n          width:1/3\n        },\n        '3 months':{\n          perc:1/4,\n          width:1/3,\n          optionName:'3M'\n        }\n      },\n      25:{\n        '3 months':{\n          perc:3/12,\n          width:3/12\n        },\n        '8 months':{\n          perc:8/12,\n          width:5/12\n        },\n        'Year':{\n          perc:1,\n          width:4/12,\n          optionName:'1Y'\n        }\n      },\n      90:{\n        'Year':{\n          perc:1,\n          width:1/3,\n        },\n        '2 Years':{\n          perc:2,\n          width:1/3,\n        },\n        '5 Years':{\n          perc:5,\n          width:3/5,\n          optionName:'5Y'\n        }\n      }\n    }\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  setEstimationStepsPerc(estimationStepsPerc){\n    this.setState({\n      estimationStepsPerc\n    });\n  }\n\n  async loadEarnings(){\n    let tokensEarnings = {};\n    let estimationStepsPerc = 0;\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n    const amountLents = await this.functionsUtil.getAmountLent(this.props.enabledTokens,this.props.account);\n\n    const aggregatedEarnings = {\n      earnings:this.functionsUtil.BNify(0),\n      amountLent:this.functionsUtil.BNify(0),\n      earningsYear:this.functionsUtil.BNify(0),\n    };\n\n    await this.functionsUtil.asyncForEach(Object.keys(amountLents),async (token) => {\n      const tokenConfig = this.props.availableTokens[token];\n\n      const [amountLent,avgBuyPrice,idleTokenPrice] = await Promise.all([\n        this.functionsUtil.convertTokenBalance(amountLents[token],token,tokenConfig,isRisk),\n        this.functionsUtil.getAvgBuyPrice([token],this.props.account),\n        this.functionsUtil.getIdleTokenPrice(tokenConfig)\n      ]);\n\n      const earningsPerc = idleTokenPrice.div(avgBuyPrice[token]).minus(1);\n      const earnings = amountLent.times(earningsPerc);\n\n      let earningsYear = 0;\n      let tokenAPY = 0;\n      const tokenAprs = await this.functionsUtil.getTokenAprs(tokenConfig);\n      if (tokenAprs && tokenAprs.avgApr !== null){\n        tokenAPY = tokenAprs.avgApy;\n        earningsYear = amountLent.times(tokenAPY.div(100));\n      }\n\n      const earningsPercStep = Math.floor(earnings.div(earningsYear).times(100));\n      \n      const possibleSteps = Object.keys(this.state.estimationSteps).filter(perc => perc<earningsPercStep);\n      const maxPossibleStep = parseInt(possibleSteps.pop());\n      estimationStepsPerc = Math.max(estimationStepsPerc,maxPossibleStep);\n\n      // console.log(token,amountLent.toFixed(5),earnings.toFixed(5),earningsYear.toFixed(5),tokenConfig,tokenAprs,tokenAPR.toFixed(5),tokenAPY.toFixed(5),earningsPercStep,maxPossibleStep,estimationStepsPerc);\n\n      if (!this.functionsUtil.BNify(amountLent).isNaN() && !this.functionsUtil.BNify(idleTokenPrice).isNaN() && !this.functionsUtil.BNify(earnings).isNaN() && !this.functionsUtil.BNify(earningsYear).isNaN()){\n        tokensEarnings[token] = {\n          earnings,\n          amountLent,\n          earningsYear,\n          idleTokenPrice\n        };\n\n        // const earningsUSD = await this.functionsUtil.convertTokenBalance(earningsYearings,token,tokenConfig,isRisk);\n        // const amountLentUSD = await this.functionsUtil.convertTokenBalance(amountLent,token,tokenConfig,isRisk);\n        // const earningsYearUSD = await this.functionsUtil.convertTokenBalance(earningsYear,token,tokenConfig,isRisk);\n\n        aggregatedEarnings.earnings = aggregatedEarnings.earnings.plus(earnings);\n        aggregatedEarnings.amountLent = aggregatedEarnings.amountLent.plus(amountLent);\n        aggregatedEarnings.earningsYear = aggregatedEarnings.earningsYear.plus(earningsYear);\n      }\n    });\n\n    const orderedTokensEarnings = {};\n    Object.keys(amountLents).forEach( token => {\n      if (tokensEarnings[token]){\n        orderedTokensEarnings[token] = tokensEarnings[token];\n      }\n    });\n\n    tokensEarnings = orderedTokensEarnings;\n\n    // Add USD aggregated earnings\n    if (Object.keys(tokensEarnings).length>1){\n      tokensEarnings['USD'] = aggregatedEarnings;\n    }\n\n    let estimationStepsDefaultOption = null;\n    const estimationStepsOptions = Object.keys(this.state.estimationSteps).map( step => {\n      const estimationStep = Object.values(this.state.estimationSteps[step]).pop();\n      const label = estimationStep.optionName ? estimationStep.optionName : Object.keys(this.state.estimationSteps[step]).pop();\n      const value = parseInt(step);\n      const option = { value, label };\n\n      if (value === estimationStepsPerc){\n        estimationStepsDefaultOption = option;\n      }\n      return option;\n    });\n\n    // console.log(estimationStepsOptions,estimationStepsDefaultOption)\n\n    this.setState({\n      tokensEarnings,\n      estimationStepsPerc,\n      estimationStepsOptions,\n      estimationStepsDefaultOption,\n    });\n  }\n\n  render() {\n\n    if (!this.state.tokensEarnings){\n      return (\n        <FlexLoader\n          flexProps={{\n            flexDirection:'row',\n            minHeight:this.props.height\n          }}\n          loaderProps={{\n            size:'30px'\n          }}\n          textProps={{\n            ml:2\n          }}\n          text={'Loading estimations...'}\n        />\n      );\n    }\n\n    const estimationSteps = this.state.estimationSteps[this.state.estimationStepsPerc] ? this.state.estimationSteps[this.state.estimationStepsPerc] : this.state.estimationSteps[0];\n\n    return (\n      <Card\n        pr={0}\n        my={1}\n        width={1}\n        px={[3,4]}\n        py={[2,3]}\n        boxShadow={1}\n        borderRadius={2}\n        borderColor={'cardBorder'}\n        backgroundColor={'cardBg'}\n      >\n        <Flex\n          mt={2}\n          mb={3}\n          zIndex={9999}\n          justifyContent={'flex-end'}\n        >\n          <Flex\n            zIndex={9999}\n            width={[1,0.2]}\n            flexDirection={'column'}\n          >\n            <GenericSelector\n              innerProps={{\n                p:0,\n                px:1\n              }}\n              name={'estimation-step'}\n              options={this.state.estimationStepsOptions}\n              onChange={ v => this.setEstimationStepsPerc(v) }\n              defaultValue={this.state.estimationStepsDefaultOption}\n            />\n          </Flex>\n        </Flex>\n        {\n          Object.keys(this.state.tokensEarnings).map((token,tokenIndex) => {\n            const tokenConfig = this.props.availableTokens[token];\n            const tokenEarnings = this.state.tokensEarnings[token];\n            const estimationStepPerc = this.functionsUtil.BNify(Object.values(estimationSteps).pop().perc);\n            const finalEarnings = tokenEarnings.earningsYear.times(estimationStepPerc);\n            const cursorPerc = Math.min(1,parseFloat(tokenEarnings.earnings.div(finalEarnings)));\n            const tokenRGBColor = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'color','rgb']).join(',');\n            // console.log(tokenEarnings.earnings.toFixed(10),tokenEarnings.earningsYear.toFixed(10),finalEarnings.toFixed(10),cursorPerc.toFixed(10),estimationStepPerc.toFixed(10));\n            return (\n              <Flex\n                id={`asset-${token}`}\n                flexDirection={'row'}\n                key={`asset-${token}`}\n                borderTop={ token === 'USD' ? `1px solid ${this.props.theme.colors.divider}` : null }\n              >\n                <Flex\n                  width={[1,0.93]}\n                  position={'relative'}\n                >\n                  <Flex\n                    width={1}\n                    height={'100%'}\n                    position={'absolute'}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    <Flex\n                      width={[0.15,0.1]}\n                    >\n                    </Flex>\n                    <Flex\n                      width={[0.85,0.9]}\n                      height={'100%'}\n                      flexDirection={'row'}\n                    >\n                      {\n                        Object.keys(estimationSteps).map((label,estimateIndex) => {\n                          const estimationStep = estimationSteps[label];\n                          const estimationStepEarnings = tokenEarnings.earningsYear.times(this.functionsUtil.BNify(estimationStep.perc));\n                          let estimationStepEarningsFormatted = this.functionsUtil.formatMoney(estimationStepEarnings,this.props.isMobile ? 2 : estimationStepEarnings.lt(1) ? 3 : 2);\n                          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'conversionRateField']);\n                          if (conversionRateField){\n                            estimationStepEarningsFormatted = '$ '+estimationStepEarningsFormatted;\n                          }\n                          return (\n                            <Flex\n                              pr={2}\n                              justifyContent={'flex-end'}\n                              width={estimationStep.width}\n                              pt={ token === 'USD' ? 2 : null }\n                              key={`asset-estimate-${token}-${estimateIndex}`}\n                              borderRight={`1px solid ${this.props.theme.colors.divider}`}\n                            >\n                              {\n                                (token === 'USD' || (estimateIndex === Object.keys(estimationSteps).length-1)) && \n                                  <Text\n                                    fontWeight={3}\n                                    fontSize={[0,'1em']}\n                                    style={{\n                                      wordBreak:'break-all'\n                                    }}\n                                    color={tokenEarnings.earnings.gte(estimationStepEarnings) ? 'copyColor' : 'legend'}\n                                  >\n                                    {estimationStepEarningsFormatted}\n                                  </Text>\n                              }\n                            </Flex>\n                          );\n                        })\n                      }\n                    </Flex>\n                  </Flex>\n                  <Flex\n                    width={1}\n                    zIndex={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                    pt={ token === 'USD' ? ['2em','2.8em'] : '1.4em' }\n                    pb={ tokenIndex<Object.keys(this.state.tokensEarnings).length-1 ? '1em' : 0 }\n                  >\n                    <Flex\n                      width={[0.15,0.1]}\n                      justifyContent={['flex-start','flex-end']}\n                    >\n                      <Text\n                        pr={[0,2]}\n                        fontSize={[0,3]}\n                        fontWeight={[3,4]}\n                      >\n                        {token}\n                      </Text>\n                    </Flex>\n                    <Flex\n                      width={[0.85,0.9]}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      height={['20px','35px']}\n                      justifyContent={'flex-start'}\n                    >\n                      <Flex\n                        height={'100%'}\n                        width={cursorPerc}\n                        backgroundColor={'cardBg'}\n                      >\n                        <Flex\n                          height={'100%'}\n                          width={'100%'}\n                          borderRadius={['0 20px 20px 0','0 35px 35px 0']}\n                          style={{background:`linear-gradient(90deg, rgba(${tokenRGBColor},0) 0%, rgba(${tokenRGBColor},0.1) 30%, rgba(${tokenRGBColor},1) 100%)`}}\n                        ></Flex>\n                      </Flex>\n                      <Flex\n                        pl={2}\n                        width={'auto'}\n                        height={'100%'}\n                        alignItems={'center'}\n                        justifyContent={'flex-start'}\n                      >\n                        <Image src={`images/tokens/${token}.svg`} height={['1.4em','2.2em']} />\n                      </Flex>\n                      {\n                        <Flex\n                          pl={2}\n                          alignItems={'center'}\n                        >\n                          {\n                            token !== 'USD' ? (\n                              <AssetField\n                                {...this.props}\n                                token={token}\n                                tokenConfig={tokenConfig}\n                                fieldInfo={{\n                                  name:'earningsCounter',\n                                  props:{\n                                    decimals:this.props.isMobile ? 6 : 7,\n                                    maxPrecision:this.props.isMobile ? 9 : 10,\n                                    style:{\n                                      color:this.props.theme.colors.copyColor,\n                                      fontWeight:this.props.isMobile ? 500 : 700,\n                                      fontSize:this.props.isMobile ? '14px' : '22px',\n                                    }\n                                  }\n                                }}\n                              />\n                            ) : (\n                              <TotalEarningsCounter\n                                {...this.props}\n                                decimals={this.props.isMobile ? 6 : 7}\n                                maxPrecision={this.props.isMobile ? 9 : 10}\n                                counterStyle={{\n                                  color:this.props.theme.colors.copyColor,\n                                  fontWeight:this.props.isMobile ? 500 : 700,\n                                  fontFamily:this.props.theme.fonts.sansSerif,\n                                  fontSize:this.props.isMobile ? '14px' : '22px',\n                                }}\n                              />\n                            )\n                          }\n                        </Flex>\n                      }\n                    </Flex>\n                  </Flex>\n                </Flex>\n                {\n                  !this.props.isMobile && \n                    <Flex width={0.07} alignItems={'flex-start'} justifyContent={'flex-end'}>\n                    </Flex>\n                }\n              </Flex>\n            )\n          })\n        }\n        <Flex\n          flexDirection={'row'}\n        >\n          <Flex\n            width={[1,0.93]}\n            position={'relative'}\n          >\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'center'}\n            >\n              <Flex width={[0.15,0.1]}></Flex>\n              <Flex\n                width={[0.85,0.9]}\n                flexDirection={'row'}\n              >\n                {\n                  Object.keys(estimationSteps).map((estimationLabel,estimateIndex) => {\n                    const estimationStep = estimationSteps[estimationLabel];\n                    return (\n                      <Flex\n                        pt={2}\n                        pr={[1,2]}\n                        justifyContent={'flex-end'}\n                        width={estimationStep.width}\n                        key={`estimate-label-${estimateIndex}`}\n                        borderRight={`1px solid ${this.props.theme.colors.divider}`}\n                      >\n                        <Text\n                          fontWeight={3}\n                          fontSize={[0,2]}\n                          color={'legend'}\n                        >\n                          {estimationLabel}\n                        </Text>\n                      </Flex>\n                    );\n                  })\n                }\n              </Flex>\n            </Flex>\n          </Flex>\n          {\n            !this.props.isMobile && \n              <Flex width={0.07} alignItems={'flex-start'} justifyContent={'center'}>\n                <Text fontWeight={4} fontSize={3}></Text>\n              </Flex>\n          }\n        </Flex>\n      </Card>\n    );\n  }\n}\n\nexport default EarningsEstimation;\n","import React, { Component } from 'react';\nimport { Flex, Icon, Text, Image } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass DashboardIconButton extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          pr:2,\n          py:[2,3],\n          pl:[2,3],\n        }}\n        isActive={false}\n        isInteractive={true}\n        handleClick={this.props.handleClick}\n      >\n        <Flex\n          height={'100%'}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'center'}\n        > \n          <Flex\n            px={[1,0]}\n          >\n            {\n              this.props.icon ? (\n                <Icon\n                  name={this.props.icon}\n                  size={this.props.isMobile ? '1.8em' : '3em'}\n                  color={this.props.iconColor ? this.props.iconColor : 'redeem'}\n                />\n              ) : this.props.image && (\n                <Image\n                  src={this.props.image}\n                  width={this.props.isMobile ? '1.8em' : '2.7em'}\n                  height={this.props.isMobile ? '1.8em' : '2.7em'}\n                />\n              )\n            }\n          </Flex>\n          <Flex\n            ml={[2,3]}\n            flexDirection={'column'}\n            alignItems={'flex-start'}\n            justifyContent={'center'}\n          >\n            <Text\n              fontWeight={3}\n              fontSize={[1,3]}\n            >\n              {this.props.title}\n            </Text>\n            <Text\n              fontWeight={2}\n              fontSize={[0,2]}\n              color={'cellText'}\n            >\n              {this.props.text}\n            </Text>\n          </Flex>\n          <Icon\n            align={'center'}\n            color={'cellText'}\n            name={'KeyboardArrowRight'}\n            size={this.props.isMobile ? '1.8em' : '2.5em'}\n          />\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default DashboardIconButton;\n","import CountUp from 'react-countup';\nimport { Box, Loader } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TotalBalanceCounter extends Component {\n\n  state = {\n    counterEnd:null,\n    counterStart:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalEarnings();\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const styleChanged = JSON.stringify(prevProps.counterStyle) !== JSON.stringify(this.props.counterStyle);\n    if (styleChanged || themeModeChanged || mobileChanged){\n      const oldState = Object.assign({},this.state);\n      this.setState({\n        counterEnd:null,\n        counterStart:null\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  async loadTotalEarnings(){\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized){\n      return true;\n    }\n\n    const availableTokens = this.props.availableTokens || {};\n    const portfolio = this.props.portfolio || await this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account);\n\n    const counterStart = portfolio.totalAmountLent.plus(portfolio.totalEarnings);\n    const counterEnd = counterStart.plus(counterStart.times(portfolio.avgAPY.div(100)));\n\n    this.setState({\n      counterEnd,\n      counterStart\n    });\n  }\n\n  render() {\n\n    const counterStyle = {\n      lineHeight:1,\n      color:this.props.theme.colors.copyColor,\n      fontFamily:this.props.theme.fonts.counter,\n      fontWeight: this.props.isMobile ? 600 : 700,\n      fontSize:this.props.isMobile ? '21px' : '1.7em',\n    };\n\n    // Replace props\n    if (this.props.counterStyle && Object.keys(this.props.counterStyle).length){\n      Object.keys(this.props.counterStyle).forEach(p => {\n        counterStyle[p] = this.props.counterStyle[p];\n      });\n    }\n\n    const decimals = this.props.decimals || 8;\n\n    return this.state.counterStart && this.state.counterEnd ? (\n      <Box\n        width={1}\n      >\n        <CountUp\n          delay={0}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          decimals={decimals}\n          duration={31536000}\n          end={parseFloat(this.state.counterEnd)}\n          start={parseFloat(this.state.counterStart)}\n          formattingFn={ n => '$ '+this.functionsUtil.formatMoney(n,decimals) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              ref={countUpRef}\n              style={counterStyle}\n            />\n          )}\n        </CountUp>\n      </Box>\n    ) : (\n      <Loader size={\"20px\"} />\n    );\n  }\n}\n\nexport default TotalBalanceCounter;\n","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetsList from '../AssetsList/AssetsList';\nimport CustomList from '../CustomList/CustomList';\n// import RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport PortfolioDonut from '../PortfolioDonut/PortfolioDonut';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport PortfolioEquity from '../PortfolioEquity/PortfolioEquity';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport EarningsEstimation from '../EarningsEstimation/EarningsEstimation';\nimport { Flex, Box, Heading, Text, Tooltip, Icon, Loader } from \"rimble-ui\";\nimport DashboardIconButton from '../DashboardIconButton/DashboardIconButton';\nimport TotalBalanceCounter from '../TotalBalanceCounter/TotalBalanceCounter';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\n\n// const env = process.env;\n\nclass StrategyPage extends Component {\n\n  state = {\n    portfolio:null,\n    tokensToMigrate:{},\n    aggregatedValues:[],\n    activeCoverages:null,\n    depositedTokens:null,\n    remainingTokens:null,\n    batchedDeposits:null,\n    portfolioLoaded:false,\n    availableGovTokens:null,\n    portfolioEquityStartDate:null,\n    batchedDepositsAvailableTokens:null,\n    portfolioEquityQuickSelection:'week'\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    await this.loadPortfolio();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    if (accountChanged){\n      this.setState({\n        portfolioLoaded:false\n      },() => {\n        this.loadPortfolio();\n      });\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  setPortfolioEquityQuickSelection(portfolioEquityQuickSelection){\n    this.setStateSafe({\n      portfolioEquityQuickSelection\n    });\n  }\n\n  async loadPortfolio(){\n    const availableTokens = this.props.availableTokens || {};\n\n    if (this.state.portfolioLoaded){\n      return false;\n    }\n\n    // Load portfolio if account is set\n    if (this.props.account){\n      const newState = {};\n      const firstBlockNumber = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n\n      // Load data\n      const [\n        activeCoverages,\n        batchedDeposits,\n        tokensToMigrate,\n        portfolio\n      ] = await Promise.all([\n        // Load active coverages\n        this.functionsUtil.getActiveCoverages(this.props.account),\n        // Load claimable batches\n        this.functionsUtil.getBatchedDeposits(this.props.account),\n        // Load tokens to be migrated\n        this.functionsUtil.getTokensToMigrate(this.props.selectedStrategy),\n        // Load portfolio\n        this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account),\n        // Load and process Etherscan Txs\n        this.functionsUtil.getEtherscanTxs(this.props.account,firstBlockNumber,'latest',Object.keys(availableTokens))\n      ]);\n\n      newState.portfolio = portfolio;\n\n      newState.activeCoverages = activeCoverages && activeCoverages.length>0 ? activeCoverages.map( c => {\n        const statusColors = this.props.theme.colors.transactions.status;\n        const statusIcon = c.status === 'Expired' ? 'Error' : 'VerifiedUser';\n        const statusColor = c.status === 'Expired' ? statusColors.failed : statusColors.completed;\n        const portfolioCoverage = portfolio.totalBalance.gt(0) ? c.balance.div(portfolio.totalBalance).times(100).toFixed(2)+'%' : 'N/A';\n        const statusIconProps = {\n          color:statusColor\n        };\n        return Object.assign(c,{\n          statusIcon,\n          statusIconProps,\n          portfolioCoverage\n        });\n      }) : null;\n\n      newState.batchedDeposits = batchedDeposits && Object.keys(batchedDeposits).length>0 ? batchedDeposits : null;\n\n      if (newState.batchedDeposits){\n        newState.batchedDepositsAvailableTokens = Object.keys(newState.batchedDeposits).reduce( (batchedDepositsAvailableTokens,token) => {\n          const batchInfo = newState.batchedDeposits[token];\n          const tokenConfig = this.functionsUtil.getGlobalConfig(['tools','batchDeposit','props','availableTokens',token]);\n          if (tokenConfig.strategy === this.props.selectedStrategy){\n            switch (batchInfo.status){\n              case 'pending':\n                tokenConfig.statusIcon = 'Timelapse';\n                tokenConfig.statusIconProps = {\n                  color:this.props.theme.colors.transactions.status.pending\n                };\n              break;\n              case 'executed':\n                tokenConfig.statusIcon = 'Done';\n                tokenConfig.statusIconProps = {\n                  color:this.props.theme.colors.transactions.status.completed\n                };\n              break;\n              default:\n              break;\n            }\n            tokenConfig.token = token;\n            tokenConfig.status = batchInfo.status;\n            tokenConfig.deposited = batchInfo.batchDeposits;\n            tokenConfig.redeemable = batchInfo.batchRedeems;\n            batchedDepositsAvailableTokens[tokenConfig.baseToken] = tokenConfig;\n          }\n          return batchedDepositsAvailableTokens;\n        },{});\n      }\n\n\n      if (portfolio){\n        const depositedTokens = Object.keys(portfolio.tokensBalance).filter(token => ( this.functionsUtil.BNify(portfolio.tokensBalance[token].idleTokenBalance).gt(0) ));\n\n        newState.depositedTokens = depositedTokens;\n\n        const isRisk = this.props.selectedStrategy === 'risk';\n\n        let avgAPY = this.functionsUtil.BNify(0);\n        let avgScore = this.functionsUtil.BNify(0);\n        let totalAmountLent = this.functionsUtil.BNify(0);\n\n        await this.functionsUtil.asyncForEach(depositedTokens,async (token) => {\n          const tokenConfig = availableTokens[token];\n\n          const [\n            tokenAprs,\n            tokenScore,\n            amountLent,\n          ] = await Promise.all([\n            this.functionsUtil.getTokenAprs(tokenConfig),\n            this.functionsUtil.getTokenScore(tokenConfig,isRisk),\n            this.functionsUtil.getAmountLent([token],this.props.account)\n          ]);\n\n          const amountLentToken = await this.functionsUtil.convertTokenBalance(amountLent[token],token,tokenConfig,isRisk);\n\n          const tokenAPY = this.functionsUtil.BNify(tokenAprs.avgApy);\n          const tokenWeight = portfolio.tokensBalance[token].tokenBalance.div(portfolio.totalBalance);\n\n          if (tokenAPY){\n            avgAPY = avgAPY.plus(tokenAPY.times(tokenWeight));\n          }\n\n          if (tokenScore){\n            avgScore = avgScore.plus(tokenScore.times(tokenWeight));\n          }\n\n          if (amountLentToken){\n            totalAmountLent = totalAmountLent.plus(amountLentToken);\n          }\n        });\n\n        // Add gov tokens to earnings\n        const govTokensTotalBalance = await this.functionsUtil.getGovTokensUserTotalBalance(this.props.account,availableTokens,'DAI');\n        const govTokensUserBalance = await this.functionsUtil.getGovTokensUserBalances(this.props.account,availableTokens,null);\n        const govTokensTotalBalanceTooltip = govTokensUserBalance ? Object.keys(govTokensUserBalance).map( govToken => {\n          const balance = govTokensUserBalance[govToken];\n          if (balance.gt(0)){\n            return `+${balance.toFixed(2)} ${govToken}`;\n          } else {\n            return null;\n          }\n        }).filter(v => (v !== null)) : null;\n\n        newState.avgAPY = avgAPY;\n        newState.avgScore = avgScore;\n        newState.govTokensTotalBalance = govTokensTotalBalance;\n        newState.govTokensTotalBalanceTooltip = govTokensTotalBalanceTooltip;\n      }\n\n      newState.tokensToMigrate = tokensToMigrate;\n      newState.portfolioLoaded = true;\n\n      const remainingTokens = Object.keys(availableTokens).filter(token => (!newState.depositedTokens.includes(token) && !Object.keys(newState.tokensToMigrate).includes(token)) );\n      newState.remainingTokens = remainingTokens;\n\n      // Portfolio loaded\n      this.setStateSafe(newState);\n    // Show available assets for not logged users\n    } else {\n      this.setStateSafe({\n        tokensToMigrate:{},\n        depositedTokens:[],\n        portfolioLoaded:true,\n        remainingTokens:Object.keys(availableTokens),\n      });\n    }\n  }\n\n  render(){\n    const viewOnly = this.props.connectorName === 'custom';\n    const govTokens = this.functionsUtil.getGlobalConfig(['govTokens']);\n    const apyLong = this.functionsUtil.getGlobalConfig(['messages','apyLong']);\n    const riskScore = this.functionsUtil.getGlobalConfig(['messages','riskScore']);\n    const yieldFarming = this.functionsUtil.getGlobalConfig(['messages','yieldFarming']);\n    const batchDepositConfig = this.functionsUtil.getGlobalConfig(['tools','batchDeposit']);\n    const coverProtocolConfig = this.functionsUtil.getGlobalConfig(['tools','coverProtocol']);\n\n    return (\n      <Box\n        width={1}\n      >\n        <Title\n          mb={3}\n        >\n          {this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'title'])} strategy\n        </Title>\n        {\n          !this.state.portfolioLoaded ? (\n            <FlexLoader\n              textProps={{\n                textSize:4,\n                fontWeight:2\n              }}\n              loaderProps={{\n                mb:3,\n                size:'40px'\n              }}\n              flexProps={{\n                minHeight:'50vh',\n                flexDirection:'column'\n              }}\n              text={'Loading portfolio...'}\n            />\n          ) : (\n            <Box\n              width={1}\n            >\n              {\n                this.props.account && this.state.depositedTokens.length>0 ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      mb={3}\n                      width={1}\n                      mt={[2,0]}\n                      alignItems={'center'}\n                      justifyContent={'center'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.avgAPY ? (\n                                <Text\n                                  lineHeight={1}\n                                  fontWeight={[3,4]}\n                                  color={'copyColor'}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: this.state.avgAPY.toFixed(2)+'<small>%</small>' }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Avg APY\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','apyLong'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio ? (\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <TotalBalanceCounter\n                                    decimals={5}\n                                    {...this.props}\n                                    portfolio={this.state.portfolio}\n                                  />\n                                  <Flex\n                                    width={1}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'center'}\n                                  >\n                                    <Flex\n                                      width={0.45}\n                                      alignItems={'center'}\n                                      justifyContent={'flex-end'}\n                                    >\n                                      <Text\n                                        fontSize={1}\n                                        fontWeight={3}\n                                        fontFamily={this.props.theme.fonts.counter}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >\n                                        +{this.state.portfolio.totalEarningsPerc.toFixed(2)}%\n                                      </Text>\n                                    </Flex>\n                                    <Text\n                                      mx={1}\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      fontFamily={this.props.theme.fonts.counter}\n                                      color={this.props.theme.colors.transactions.status.completed}\n                                    >|</Text>\n                                    <Flex\n                                      width={0.45}\n                                      alignItems={'center'}\n                                      justifyContent={'flex-start'}\n                                    >\n                                      <TotalEarningsCounter\n                                        {...this.props}\n                                        unit={'+$'}\n                                        decimals={4}\n                                        counterStyle={{\n                                          fontSize:14,\n                                          fontWeight:600,\n                                          color:this.props.theme.colors.transactions.status.completed\n                                        }}\n                                        portfolio={this.state.portfolio}\n                                      />\n                                    </Flex>\n                                  </Flex>\n                                </Flex>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Total Balance\n                              </Text>\n                              {\n                                this.state.govTokensTotalBalance && (\n                                  <Tooltip\n                                    placement={'bottom'}\n                                    message={'Total Balance does not include accrued governance tokens: '+(this.state.govTokensTotalBalance && this.state.govTokensTotalBalance.gt(0) ? ` (${this.state.govTokensTotalBalanceTooltip.join(' / ')})` : '')}\n                                  >\n                                    <Icon\n                                      ml={2}\n                                      name={\"Info\"}\n                                      size={'1em'}\n                                      color={'cellTitle'}\n                                    />\n                                  </Tooltip>\n                                )\n                              }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.avgScore ? (\n                                <Text\n                                  lineHeight={1}\n                                  fontWeight={[3,4]}\n                                  color={'copyColor'}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: this.state.avgScore.toFixed(2) }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Avg Risk Score\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','riskScoreShort'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      width={1}\n                      id={\"portfolio-charts\"}\n                      justifyContent={'space-between'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        mb={[3,0]}\n                        width={[1,0.328]}\n                        flexDirection={'column'}\n                        id={\"portfolio-composition\"}\n                      >\n                        <DashboardCard\n                          title={'Composition'}\n                          titleProps={ !this.props.isMobile ? {\n                            style:{\n                              minHeight:'39px'\n                            }\n                          } : null}\n                        >\n                          <PortfolioDonut\n                            {...this.props}\n                            parentId={'portfolio-composition'}\n                          />\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,0.666]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard>\n                          <Flex\n                            pt={[3,4]}\n                            px={[3,4]}\n                            aligItems={'center'}\n                            flexDirection={['column','row']}\n                          >\n                            <Flex\n                              width={[1,0.7]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-start'}\n                            >\n                              <Title\n                                fontWeight={4}\n                                fontSize={[2,3]}\n                                textAlign={'left'}\n                              >\n                                Performance\n                              </Title>\n                            </Flex>\n                            <Flex\n                              mt={[2,0]}\n                              width={[1,0.3]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-end'}\n                            >\n                              <GenericSelector\n                                innerProps={{\n                                  p:0,\n                                  px:1\n                                }}\n                                defaultValue={\n                                  {value:'week',label:'1W'}\n                                }\n                                name={'performance-time'}\n                                options={[\n                                  {value:'week',label:'1W'},\n                                  {value:'month',label:'1M'},\n                                  {value:'month3',label:'3M'},\n                                  {value:'month6',label:'6M'},\n                                  {value:'all',label:'MAX'},\n                                ]}\n                                onChange={ v => this.setPortfolioEquityQuickSelection(v) }\n                              />\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            ml={[0,3]}\n                            aligItems={'center'}\n                            justifyContent={'center'}\n                            id={\"portfolio-performance\"}\n                          >\n                            <PortfolioEquity\n                              {...this.props}\n                              enabledTokens={[]}\n                              parentId={'portfolio-performance'}\n                              parentIdHeight={'portfolio-composition'}\n                              quickDateSelection={this.state.portfolioEquityQuickSelection}\n                              frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n                            />\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Flex\n                    mb={3}\n                    mx={'auto'}\n                    width={[1,0.8]}\n                    aligItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      fontWeight={2}\n                      fontSize={[1,2]}\n                      textAlign={'center'}\n                    >\n                      {\n                        this.props.isMobile ?\n                          this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'descShort'])\n                        :\n                          this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'descLong'])\n                      }\n                    </Text>\n                  </Flex>\n                )\n              }\n              {\n                /*\n                !this.state.activeCoverages && coverProtocolConfig.enabled && this.state.portfolio && this.state.portfolio.totalBalance.gt(0) && (\n                  <Flex\n                    width={1}\n                    mt={[3,4]}\n                    alignItems={'center'}\n                    id={'no-active-cover'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        py:3,\n                        px:[3,4],\n                        width:[1,'auto'],\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Image\n                          mb={2}\n                          height={['1.8em','2.2em']}\n                          src={coverProtocolConfig.image}\n                        />\n                        <Text\n                          mb={1}\n                          fontSize={[2,4]}\n                          fontWeight={500}\n                          textAlign={'center'}\n                        >\n                          You don't have an active coverage\n                        </Text>\n                        <Text\n                          mb={2}\n                          color={'blue'}\n                          fontSize={[1,2]}\n                          fontWeight={500}\n                          hoverColor={'blue'}\n                          textAlign={'center'}\n                        >\n                          Cover Protocol provides coverage against Smart-Contract attacks\n                        </Text>\n                        <RoundButton\n                          buttonProps={{\n                            mt:1,\n                            width:'auto',\n                            minHeight:'40px',\n                            mainColor:'redeem',\n                            size:this.props.isMobile ? 'small' : 'medium'\n                          }}\n                          handleClick={ e => this.props.goToSection(`tools/${coverProtocolConfig.route}`) }\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <Text\n                              color={'white'}\n                              fontSize={[1,2]}\n                              fontWeight={500}\n                            >\n                              Get Covered\n                            </Text>\n                            <Icon\n                              ml={1}\n                              size={'1.3em'}\n                              name={'KeyboardArrowRight'}\n                            />\n                          </Flex>\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                )\n                */\n              }\n              {\n                this.state.batchedDeposits && (\n                  <Flex\n                    width={1}\n                    mb={[0,3]}\n                    id={'batched-deposits'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Batched Deposits</Title>\n                    <Flex\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <AssetsList\n                        enabledTokens={Object.keys(this.state.batchedDepositsAvailableTokens)}\n                        cols={[\n                          {\n                            title:'TOKEN',\n                            props:{\n                              width:[0.3,0.2]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'DEPOSITED',\n                            props:{\n                              width:[0.33, 0.21],\n                            },\n                            fields:[\n                              {\n                                name:'custom',\n                                type:'number',\n                                path:['deposited'],\n                                props:{\n                                  decimals: 4\n                                }\n                              },\n                              {\n                                name:'tokenName',\n                                props:{\n                                  ml:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'REDEEMABLE',\n                            props:{\n                              width:[0.44,0.23],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                name:'custom',\n                                type:'number',\n                                path:['redeemable'],\n                                props:{\n                                  decimals: 4\n                                }\n                              },\n                              {\n                                type:'text',\n                                name:'custom',\n                                path:['token'],\n                                props:{\n                                  ml:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'STATUS',\n                            props:{\n                              width:[0.26,0.19],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                type:'icon',\n                                mobile:false,\n                                name:'custom',\n                                path:['statusIcon'],\n                                props:{\n                                  mr:2,\n                                  size:this.props.isMobile ? '1.2em' : '1.8em'\n                                }\n                              },\n                              {\n                                name:'custom',\n                                path:['status'],\n                                props:{\n                                  style:{\n                                    textTransform:'capitalize'\n                                  }\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[0.35,0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label:'Claim',\n                                funcProps:{\n                                  disabled:(props) => (props.tokenConfig.status === 'pending')\n                                },\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'migrate',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.goToSection(`tools/${batchDepositConfig.route}/${props.tokenConfig.token}`)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                        availableTokens={this.state.batchedDepositsAvailableTokens}\n                      />\n                    </Flex>\n                  </Flex>\n                )\n              }\n              <Flex\n                width={1}\n                id={'available-assets'}\n                flexDirection={'column'}\n                mb={!this.state.depositedTokens.length ? 4 : 0}\n              >\n                {\n                  (this.state.depositedTokens.length>0 || Object.keys(this.state.tokensToMigrate).length>0 || this.state.remainingTokens.length>0 ) &&\n                    <Title my={[3,4]}>Available assets</Title>\n                }\n                <Flex width={1} flexDirection={'column'}>\n                  {\n                    Object.keys(this.state.tokensToMigrate).length>0 &&\n                    <Flex\n                      width={1}\n                      mb={[3,4]}\n                      id={\"migrate-assets\"}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Assets to migrate\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={Object.keys(this.state.tokensToMigrate)}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.15]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            mobile:this.props.account !== null,\n                            props:{\n                              width:[0.21, 0.12],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.29,0.15],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                }\n                              },\n                            ]\n                          },\n                          {\n                            title:'SCORE',\n                            desc:riskScore,\n                            props:{\n                              width:[0.21,0.12],\n                            },\n                            fields:[\n                              {\n                                name:'score'\n                              }\n                            ]\n                          },\n                          {\n                            title:'BALANCE',\n                            mobile:false,\n                            props:{\n                              width:[0.16,0.14],\n                            },\n                            parentProps:{\n                              width:1,\n                              pr:[2,4]\n                            },\n                            fields:[\n                              {\n                                name:'amountToMigrate',\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.15],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens'\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[ this.props.account === null ? 0.29 : 0 ,0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label: 'Migrate',\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'migrate',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                  {\n                  this.state.depositedTokens.length>0 &&\n                    <Flex\n                      mb={ this.state.remainingTokens.length>0 ? [3,4] : 0 }\n                      width={1}\n                      id={\"deposited-assets\"}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Deposited assets\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={this.state.depositedTokens}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.13]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            mobile:false,\n                            props:{\n                              width:[0.12,0.09],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.30,0.14],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                }\n                              },\n                            ]\n                          },\n                          {\n                            title:'SCORE',\n                            desc:riskScore,\n                            props:{\n                              width:[0.21,0.10],\n                            },\n                            parentProps:{\n                              alignItems:['center','flex-start'],\n                            },\n                            fields:[\n                              {\n                                name:'score',\n                              }\n                            ]\n                          },\n                          {\n                            title:'DEPOSITED',\n                            props:{\n                              width:[0.22,0.13],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                name:'amountLent'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.11],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'EARNINGS',\n                            props:{\n                              width:[0.15,0.13],\n                              textAlign:'center'\n                            },\n                            parentProps:{\n                              alignItems:'center',\n                              flexDirection:'column',\n                            },\n                            fields:[\n                              {\n                                name:'earnings',\n                                props:{\n                                  decimals:3\n                                }\n                              },\n                              {\n                                name:'earningsPerc',\n                                showLoader:false,\n                                showDirection:false,\n                                props:{\n                                  fontSize:0,\n                                  decimals:3\n                                }\n                              }\n                            ]\n                          },\n                          /*\n                          {\n                            title:'EARNINGS %',\n                            props:{\n                              width:[0.27,0.14],\n                            },\n                            fields:[\n                              {\n                                name:'earningsPerc'\n                              }\n                            ]\n                          },\n                          */\n                          {\n                            title:'',\n                            mobile:false,\n                            props:{\n                              width:0.17,\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label:'Manage',\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'redeem',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                  {\n                    this.state.remainingTokens.length>0 &&\n                    <Flex id=\"remaining-assets\" width={1} flexDirection={'column'}>\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Available assets\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={this.state.remainingTokens}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.13]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            mobile:this.props.account !== null,\n                            props:{\n                              width:[0.21, 0.10],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.31,this.state.depositedTokens.length>0 ? 0.14 : 0.14],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                }\n                              },\n                            ]\n                          },\n                          {\n                            title:'SCORE',\n                            desc:riskScore,\n                            props:{\n                              width:[0.22,0.10],\n                            },\n                            fields:[\n                              {\n                                name:'score'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.11],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APR LAST WEEK',\n                            mobile:false,\n                            props:{\n                              width:0.25,\n                            },\n                            parentProps:{\n                              width:1,\n                              pr:[2,4]\n                            },\n                            fields:[\n                              {\n                                name:'aprChart',\n                                style:{\n                                  overflow:'visible',\n                                },\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[ this.props.account === null ? 0.26 : 0 , 0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label: (props) => {\n                                  return Object.keys(this.state.tokensToMigrate).includes(props.token) ? 'Migrate' : 'Deposit';\n                                },\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                },\n                                funcProps:{\n                                  mainColor: (props) => {\n                                    return Object.keys(this.state.tokensToMigrate).includes(props.token) ? 'migrate' : 'deposit'\n                                  }\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                </Flex>\n              </Flex>\n              {\n                !viewOnly && this.props.account && coverProtocolConfig.enabled && (\n                  <Flex\n                    mt={3}\n                    width={1}\n                    id={\"tools\"}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      pb={2}\n                      width={1}\n                      mb={[2,3]}\n                      borderColor={'divider'}\n                      borderBottom={'1px solid transparent'}\n                    >\n                      <Heading.h4\n                        fontSize={[2,4]}\n                        fontWeight={[3,4]}\n                      >\n                        Tools\n                      </Heading.h4>\n                    </Flex>\n                    <Flex\n                      flexDirection={['column','row']}\n                    >\n                      {\n                        ['addFunds','coverProtocol','tokenSwap'].map( (toolName,toolIndex) => {\n                          const toolConfig = this.functionsUtil.getGlobalConfig(['tools',toolName]);\n                          return (\n                            <Flex\n                              width={[1,1/3]}\n                              key={`tool_${toolIndex}`}\n                              mb={toolIndex<2 ? [2,0] : 0}\n                              pr={toolIndex<2 ? [0,3] : 0}\n                            >\n                              <DashboardIconButton\n                                {...this.props}  \n                                icon={toolConfig.icon}\n                                text={toolConfig.desc}\n                                image={toolConfig.image}\n                                title={toolConfig.label}\n                                handleClick={ e => this.props.goToSection(`tools/${toolConfig.route}`) }\n                              />\n                            </Flex>\n                          );\n                        })\n                      }\n                    </Flex>\n                  </Flex>\n                )\n              }\n              {\n                this.state.depositedTokens.length>0 &&\n                  <Flex\n                    width={1}\n                    id={\"yield-farming\"}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Yield Farming</Title>\n                    <AssetsList\n                      enabledTokens={Object.keys(govTokens)}\n                      cols={[\n                        {\n                          title:'TOKEN',\n                          props:{\n                            width:[0.3,0.15]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:2,\n                                height:['1.4em','2.3em']\n                              }\n                            },\n                            {\n                              name:'tokenName'\n                            }\n                          ]\n                        },\n                        {\n                          mobile:false,\n                          title:'BALANCE',\n                          props:{\n                            width:[0.33, 0.25],\n                          },\n                          fields:[\n                            {\n                              name:'tokenBalance',\n                              props:{\n                                decimals: this.props.isMobile ? 6 : 8\n                              }\n                            }\n                          ]\n                        },\n                        {\n                          title:'REDEEMABLE',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','govTokenRedeemableBalance']),\n                          props:{\n                            width:[0.35,0.30],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'redeemableBalance',\n                              props:{\n                                decimals: this.props.isMobile ? 6 : 8\n                              }\n                            },\n                          ]\n                        },\n                        {\n                          title:'DISTRIBUTION',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','userDistributionSpeed']),\n                          props:{\n                            width:[0.35,0.30],\n                          },\n                          fields:[\n                            {\n                              name:'userDistributionSpeed',\n                              props:{\n                                decimals:6\n                              }\n                            }\n                          ]\n                        },\n                        /*\n                        {\n                          mobile:false,\n                          title:'APR',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','govTokenApr']),\n                          props:{\n                            width:[0.2,0.15],\n                          },\n                          fields:[\n                            {\n                              name:'apr',\n                            }\n                          ]\n                        },\n                        {\n                          title:'TOKEN PRICE',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','tokenPrice']),\n                          mobile:false,\n                          props:{\n                            width: 0.17,\n                          },\n                          parentProps:{\n                            width:1,\n                            pr:[2,4]\n                          },\n                          fields:[\n                            {\n                              name:'tokenPrice',\n                              props:{\n                                unit:'$',\n                                unitPos:'left',\n                                unitProps:{\n                                  mr:1,\n                                  fontWeight:3,\n                                  fontSize:[0,2],\n                                  color:'cellText'\n                                }\n                              }\n                            }\n                          ]\n                        },\n                        */\n                      ]}\n                      {...this.props}\n                      availableTokens={govTokens}\n                    />\n                  </Flex>\n              }\n              {\n                this.state.activeCoverages && (\n                  <Flex\n                    width={1}\n                    mb={[0,3]}\n                    id={'active-coverages'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Coverages</Title>\n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <CustomList\n                        rows={this.state.activeCoverages}\n                        handleClick={ this.props.isMobile ? (props) => props.row.status!=='Expired' && props.row.fileClaimUrl && this.functionsUtil.openWindow(props.row.fileClaimUrl) : null }\n                        cols={[\n                          {\n                            title:'PROTOCOL',\n                            props:{\n                              width:[0.42,0.17]\n                            },\n                            fields:[\n                              {\n                                type:'image',\n                                path:['protocolImage'],\n                                props:{\n                                  mr:[1,2],\n                                  size:this.props.isMobile ? '1.2em' : '1.8em'\n                                }\n                              },\n                              {\n                                type:'text',\n                                path:['protocolName'],\n                              }\n                            ]\n                          },\n                          {\n                            title:'BALANCE',\n                            props:{\n                              width:[0.34, 0.15],\n                            },\n                            fields:[\n                              {\n                                type:'number',\n                                path:['balance'],\n                                props:{\n                                  decimals: 4,\n                                }\n                              },\n                              {\n                                type:'text',\n                                path:['token'],\n                                props:{\n                                  ml:[1,2],\n                                  style:{\n                                    textTransform:'uppercase'\n                                  }\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'EXPIRATION DATE',\n                            props:{\n                              width:0.23,\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                type:'text',\n                                path:['expirationDate'],\n                                props:{\n                                  \n                                }\n                              },\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'COVERAGE',\n                            props:{\n                              width:0.15,\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                type:'text',\n                                path:['portfolioCoverage'],\n                                props:{\n                                  \n                                }\n                              },\n                            ]\n                          },\n                          {\n                            title:'STATUS',\n                            props:{\n                              width:[0.24,0.15],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                type:'icon',\n                                name:'custom',\n                                path:['statusIcon'],\n                                props:{\n                                  mr:[1,2],\n                                  size:this.props.isMobile ? '1.2em' : '1.8em'\n                                }\n                              },\n                              {\n                                name:'custom',\n                                path:['status'],\n                                props:{\n                                  style:{\n                                    textTransform:'capitalize'\n                                  }\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            mobile:false,\n                            props:{\n                              width:0.17,\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                type:'button',\n                                name:'custom',\n                                label:'File Claim',\n                                funcProps:{\n                                  disabled:(props) => (props.row.status==='Expired')\n                                },\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'redeem',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => props.row.status!=='Expired' && props.row.fileClaimUrl && this.functionsUtil.openWindow(props.row.fileClaimUrl)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  </Flex>\n                )\n              }\n              {\n                this.state.depositedTokens.length>0 &&\n                  <Flex\n                    width={1}\n                    id=\"earnings-estimation\"\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Estimated earnings</Title>\n                    <EarningsEstimation\n                      {...this.props}\n                      enabledTokens={this.state.depositedTokens}\n                    />\n                  </Flex>\n              }\n              {\n                this.props.account && this.state.depositedTokens.length>0 && \n                  <Flex\n                    mb={[3,4]}\n                    width={1}\n                    id={'transactions'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Transactions</Title>\n                    <TransactionsList\n                      {...this.props}\n                      enabledTokens={[]}\n                      cols={[\n                        {\n                          title: this.props.isMobile ? '' : 'HASH',\n                          props:{\n                            width:[0.15,0.24]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              name:'hash',\n                              mobile:false\n                            }\n                          ]\n                        },\n                        {\n                          title:'ACTION',\n                          mobile:false,\n                          props:{\n                            width:0.15,\n                          },\n                          fields:[\n                            {\n                              name:'action'\n                            }\n                          ]\n                        },\n                        {\n                          title:'DATE',\n                          props:{\n                            width:[0.32,0.23],\n                          },\n                          fields:[\n                            {\n                              name:'date'\n                            }\n                          ]\n                        },\n                        {\n                          title:'STATUS',\n                          props:{\n                            width:[0.18,0.22],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'statusIcon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'status'\n                            }\n                          ]\n                        },\n                        {\n                          title:'AMOUNT',\n                          props:{\n                            width:0.19,\n                          },\n                          fields:[\n                            {\n                              name:'amount'\n                            },\n                          ]\n                        },\n                        {\n                          title:'ASSET',\n                          props:{\n                            width:[0.15,0.20],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'tokenIcon',\n                              props:{\n                                mr:[0,2],\n                                height:['1.4em','1.6em']\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'tokenName'\n                            },\n                          ]\n                        },\n                      ]}\n                    />\n                  </Flex>\n              }\n            </Box>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default StrategyPage;","/*\n// batchDeposits[user][batchId] = amount\nmapping (address => mapping (uint256 => uint256)) public batchDeposits;\nmapping (uint256 => uint256) batchTotals; // in idleToken\nmapping (uint256 => uint256) batchRedeemedTotals; // in newIdleToken\n\nuint256 public currBatch;\naddress public idleToken;\naddress public newIdleToken;\naddress public underlying;\n\nfunction deposit() external\nfunction withdraw(uint256 batchId) external\n*/\n\nimport Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TransactionField from '../TransactionField/TransactionField';\nimport { Flex, Box, Text, Icon, Link, Checkbox, Tooltip } from \"rimble-ui\";\n\nclass BatchDeposit extends Component {\n\n  state = {\n    canClaim:false,\n    batchTotals:{},\n    canDeposit:true,\n    action:'deposit',\n    batchDeposits:{},\n    tokenConfig:null,\n    processing:{\n      execute:{\n        txHash:null,\n        loading:false\n      },\n      claim:{\n        txHash:null,\n        loading:false\n      },\n    },\n    usePermit:false,\n    batchRedeems:{},\n    lastExecution:null,\n    permitEnabled:true,\n    hasDeposited:false,\n    permitSigned:false,\n    selectedToken:null,\n    showPermitBox:false,\n    currBatchIndex:null,\n    batchCompleted:false,\n    claimSucceeded:false,\n    availableTokens:null,\n    selectedStrategy:null,\n    componentLoaded:false,\n    executeSucceeded:false,\n    migrationEnabled:false,\n    migrationSucceeded:false,\n    selectedTokenConfig:null,\n    availableStrategies:null,\n    batchDepositEnabled:false,\n    migrationContractApproved:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadStrategies();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      this.setState({\n        componentLoaded:false\n      },async () => {\n        await this.loadTokens();\n      });\n    }\n\n    const selectedStrategyChanged = prevState.selectedStrategy !== this.state.selectedStrategy;\n    if (selectedStrategyChanged){\n      const selectedToken = Object.keys(this.state.availableTokens)[0];\n      this.selectToken(selectedToken);\n    }\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const executeSucceededChanged = prevState.executeSucceeded !== this.state.executeSucceeded;\n    const contractApprovedChanged = prevState.migrationContractApproved !== this.state.migrationContractApproved;\n    if (selectedTokenChanged || contractApprovedChanged || executeSucceededChanged){\n      this.checkBatchs();\n    }\n\n  }\n\n  async execute () {\n\n    const loading = true;\n\n    const callbackExecute = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'Execute',\n        eventCategory: 'BatchDeposit',\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        executeSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          execute:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptExecute = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          execute:{\n            ...prevState.processing.execute,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'executeBatch', [true], null, callbackExecute, callbackReceiptExecute);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        execute:{\n          ...prevState.processing.execute,\n          loading\n        }\n      }\n    }));\n  }\n\n  async checkBatchs(migrationSucceeded=false){\n\n    const migrationContractInfo = this.state.selectedTokenConfig.migrationContract;\n\n    await Promise.all([\n      this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi),\n      this.props.initContract(this.state.tokenConfig.name,this.state.tokenConfig.address,this.state.tokenConfig.abi)\n    ]);\n\n    let [\n      batchExecutions,\n      currBatchIndex,\n      migrationContractApproved\n    ] = await Promise.all([\n      this.functionsUtil.getBatchedDepositExecutions(migrationContractInfo.address),\n      this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'currBatch'),\n      this.functionsUtil.checkTokenApproved(this.state.tokenConfig.name,migrationContractInfo.address,this.props.account)\n    ]);\n\n    // If use Permit don't ask for Approve\n    let usePermit = false;\n    if (!migrationContractApproved && migrationContractInfo.functions && migrationContractInfo.functions.length === 1){\n      const functionInfo = migrationContractInfo.functions[0];\n      usePermit = typeof functionInfo.usePermit !== 'undefined' ? functionInfo.usePermit : false;\n      const nonceMethod = this.functionsUtil.getGlobalConfig(['permit',this.state.tokenConfig.name,'nonceMethod']);\n      const permitContract = this.functionsUtil.getContractByName(this.state.tokenConfig.name);\n      usePermit = usePermit && permitContract && (!nonceMethod || permitContract.methods[nonceMethod] !== undefined);\n    }\n\n    const newState = {};\n    const batchTotals = {};\n    const batchRedeems = {};\n    const batchDeposits = {};\n    let batchCompleted = false;\n\n    currBatchIndex = currBatchIndex || 0;\n    for (let batchIndex = 0; batchIndex <= parseInt(currBatchIndex) ; batchIndex++){\n      let [\n        batchTotal,\n        batchRedeem,\n        batchDeposit\n      ] = await Promise.all([\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchTotals',[batchIndex]),\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchRedeemedTotals',[batchIndex]),\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n      ]);\n      if (batchTotal && batchTotal !== null){\n        batchTotals[batchIndex] = this.functionsUtil.fixTokenDecimals(batchTotal,this.state.tokenConfig.decimals);\n      }\n      if (batchDeposit !== null){\n        batchRedeem = this.functionsUtil.fixTokenDecimals(batchRedeem,18);\n        batchDeposit = this.functionsUtil.fixTokenDecimals(batchDeposit,this.state.tokenConfig.decimals);\n        if (batchDeposit.gt(0)){\n          batchDeposits[batchIndex] = batchDeposit;\n          // Calculate redeemable idleTokens\n          batchRedeems[batchIndex] = batchDeposit.times(batchRedeem).div(batchTotals[batchIndex]);\n          if (batchRedeems[batchIndex].gt(batchRedeem)){\n            batchRedeems[batchIndex] = batchRedeem;\n          }\n          // Check claimable\n          if (batchIndex < currBatchIndex){\n            batchCompleted = true;\n          }\n        }\n      }\n    }\n\n    newState.batchDeposits = batchDeposits;\n\n    const hasDeposited = (batchDeposits && Object.keys(batchDeposits).length>0);\n\n    const lastExecution = batchExecutions && batchExecutions.length ? batchExecutions[0] : null;\n    const batchDepositInfo = this.functionsUtil.getGlobalConfig(['tools','batchDeposit']);\n    const batchDepositEnabled = batchDepositInfo.depositEnabled;\n\n    newState.usePermit = usePermit;\n    newState.showPermitBox = false;\n    newState.claimSucceeded = false;\n    newState.componentLoaded = true;\n    newState.executeSucceeded = false;\n    newState.batchTotals = batchTotals;\n    newState.hasDeposited = hasDeposited;\n    newState.batchRedeems = batchRedeems;\n    newState.lastExecution = lastExecution;\n    newState.currBatchIndex = currBatchIndex;\n    newState.batchCompleted = batchCompleted;\n    newState.migrationSucceeded = migrationSucceeded;\n    newState.batchDepositEnabled = batchDepositEnabled;\n    newState.canClaim = batchCompleted || hasDeposited;\n    // Prevent user to deposit if the batch has been completed\n    newState.canDeposit = batchDepositEnabled && !batchCompleted;\n    newState.migrationContractApproved = migrationContractApproved;\n    newState.action = hasDeposited || newState.canClaim ? 'redeem' : 'deposit';\n\n    this.setState(newState);\n  }\n\n  async loadStrategies(){\n\n    // Init tokens contracts\n    const availableStrategiesKeys = {};\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n      availableStrategiesKeys[tokenConfig.strategy] = true;\n    });\n\n    const availableStrategies = Object.keys(availableStrategiesKeys).map( strategy => {\n      const strategyConfig = this.functionsUtil.getGlobalConfig(['strategies',strategy]);\n      return {\n        value:strategy,\n        icon:strategyConfig.icon,\n        label:strategyConfig.title\n      };\n    });\n\n    // console.log('availableStrategies',availableStrategies);\n\n    if (availableStrategies && availableStrategies.length>0){\n      let selectedStrategy = availableStrategies[0].value;\n      let selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : null;\n      if (selectedToken){\n        const selectedTokenConfig = this.props.toolProps.availableTokens[selectedToken];\n        selectedToken = selectedTokenConfig.baseToken;\n        selectedStrategy = selectedTokenConfig.strategy;\n      }\n\n      this.setState({\n        availableStrategies\n      },() => {\n        this.selectStrategy(selectedStrategy,selectedToken);\n      });\n    }\n  }\n\n  /*\n  async loadTokens(){\n    const selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : null;\n    if (selectedToken){\n      this.selectToken(selectedToken);\n    }\n  }\n  */\n\n  async selectStrategy (selectedStrategy,selectedToken=null) {\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens)\n      .filter(key => this.props.toolProps.availableTokens[key].strategy === selectedStrategy )\n      .reduce((obj, key) => {\n        const tokenConfig = this.props.toolProps.availableTokens[key];\n        const baseTokenConfig = this.props.availableStrategies[selectedStrategy][tokenConfig.baseToken];\n\n        tokenConfig.abi = baseTokenConfig.abi;\n        tokenConfig.token = baseTokenConfig.token;\n        tokenConfig.address = baseTokenConfig.address;\n        tokenConfig.decimals = baseTokenConfig.decimals;\n        obj[tokenConfig.baseToken] = tokenConfig;\n        return obj;\n      }, {});\n\n    this.setState({\n      availableTokens,\n      selectedStrategy\n    },() => {\n      if (selectedToken){\n        this.selectToken(selectedToken);\n      }\n    });\n  }\n\n  async selectToken (selectedToken) {\n    const selectedTokenConfig = this.state.availableTokens[selectedToken];\n    const strategyAvailableTokens = this.props.availableStrategies[selectedTokenConfig.strategy];\n\n    const baseTokenConfig = strategyAvailableTokens[selectedTokenConfig.token];\n\n    const tokenConfig = {\n      name:baseTokenConfig.token,\n      token:baseTokenConfig.token,\n      address:baseTokenConfig.address,\n      decimals:baseTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = baseTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:baseTokenConfig.abi,\n      name:baseTokenConfig.token,\n      token:baseTokenConfig.token,\n      address:baseTokenConfig.address\n    };\n    \n    const migrationContract = selectedTokenConfig.migrationContract;\n\n    // Add migration function\n    if (baseTokenConfig.migrateFunction){\n      migrationContract.functions[0].name = baseTokenConfig.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(selectedTokenConfig.strategy,baseTokenConfig.token);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedTokenConfig\n    },() => {\n      // Select strategy and available tokens\n      if (selectedTokenConfig.strategy !== this.state.selectedStrategy){\n        const selectedStrategy = selectedTokenConfig.strategy;\n        this.selectStrategy(selectedStrategy);\n      }\n    });\n  }\n\n  async claim () {\n    if (!this.state.batchCompleted){\n      return null;\n    }\n\n    const loading = true;\n    const claimableValue = 0;\n    const batchId = Object.keys(this.state.batchDeposits)[0];\n\n    const callbackClaim = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'Claim',\n        eventCategory: `BatchDeposit`,\n        eventValue: parseInt(claimableValue),\n        eventLabel: this.props.selectedToken,\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        claimSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          claim:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptClaim = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          claim:{\n            ...prevState.processing.claim,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'withdraw', [batchId], null, callbackClaim, callbackReceiptClaim);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        claim:{\n          ...prevState.processing.claim,\n          loading\n        }\n      }\n    }));\n  }\n\n  async callbackPermit(){\n    this.setState({\n      permitSigned:true\n    });\n  }\n\n  showPermitBox(){\n    this.setState({\n      showPermitBox:true\n    });\n  }\n\n  async callbackApprove(migrationContractApproved){\n    // console.log('callbackApprove',this.state.migrationContractApproved,migrationContractApproved);\n    if (migrationContractApproved !== this.state.migrationContractApproved){\n      this.setState({\n        migrationContractApproved\n      });\n    }\n  }\n\n  setAction = (action) => {\n    if (action !== null && ['deposit','redeem'].includes(action.toLowerCase())){\n      const migrationSucceeded = false;\n      this.setState({\n        action,\n        migrationSucceeded\n      });\n    }\n  }\n\n  togglePermitEnabled(permitEnabled){\n    this.setState({\n      permitEnabled\n    });\n  }\n\n  migrationEnabledCallback = (migrationEnabled) => {\n    this.setState({\n      migrationEnabled\n    });\n  }\n\n  migrationCallback = (tx) => {\n    this.checkBatchs(true);\n  }\n\n  render() {\n\n    if (!this.state.selectedStrategy){\n      return null;\n    }\n\n    const usePermit = this.state.permitEnabled && this.state.usePermit;\n    // const batchId = this.state.batchDeposits && Object.keys(this.state.batchDeposits).length>0 ? Object.keys(this.state.batchDeposits)[0] : null;\n    const batchRedeem = this.state.batchRedeems && Object.values(this.state.batchRedeems).length>0 ? Object.values(this.state.batchRedeems)[0] : null;\n    const batchDeposit = this.state.batchDeposits && Object.values(this.state.batchDeposits).length>0 ? Object.values(this.state.batchDeposits)[0] : null;\n    const contractApproved = (usePermit && this.state.permitSigned) || (!usePermit && this.state.migrationContractApproved);\n    const canExecuteBatch = this.state.batchTotals && this.state.batchTotals[this.state.currBatchIndex] && this.state.batchTotals[this.state.currBatchIndex].gt(0);\n    const strategyDefaultValue = this.state.selectedStrategy ? this.state.availableStrategies.find( s => s.value === this.state.selectedStrategy ) : this.state.availableStrategies[0];\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Choose the strategy:\n            </Text>\n            <GenericSelector\n              {...this.props}\n              name={'strategy'}\n              isSearchable={false}\n              defaultValue={strategyDefaultValue}\n              CustomOptionValue={CustomOptionValue}\n              options={this.state.availableStrategies}\n              onChange={this.selectStrategy.bind(this)}\n              CustomValueContainer={CustomValueContainer}\n            />\n          </Box>\n          {\n            this.state.availableTokens && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Select asset to deposit:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  id={'token-from'}\n                  showBalance={true}\n                  isSearchable={false}\n                  onChange={this.selectToken.bind(this)}\n                  selectedToken={this.state.selectedToken}\n                  availableTokens={this.state.availableTokens}\n                />\n              </Box>\n          }\n          {\n            !this.state.componentLoaded && (\n              <Flex\n                mt={4}\n                flexDirection={'column'}\n              >\n                <FlexLoader\n                  flexProps={{\n                    flexDirection:'row'\n                  }}\n                  loaderProps={{\n                    size:'30px'\n                  }}\n                  textProps={{\n                    ml:2\n                  }}\n                  text={'Loading asset info...'}\n                />\n              </Flex>\n            )\n          }\n          {\n            !this.props.account ? (\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mt:3\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                    name={'Input'}\n                    color={'cellText'}\n                  />\n                  <Text\n                    mt={[1,2]}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Please connect with your wallet interact with Idle.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:2,\n                      width:[1,1/2]\n                    }}\n                    handleClick={this.props.connectAndValidateAccount}\n                  >\n                    Connect\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            ) : this.state.componentLoaded &&  this.state.selectedTokenConfig && (this.state.canDeposit || this.state.canClaim) && (\n              <Box\n                width={1}\n              >\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                    px:4,\n                    mt:3,\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  > \n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ contractApproved ? 'CheckBox' : 'LooksOne'}\n                        color={ contractApproved ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        {\n                          usePermit ? 'Sign Approve message' : 'Approve the batch deposit contract'\n                        }\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ (this.state.hasDeposited || this.state.batchCompleted) ? 'CheckBox' : 'LooksTwo'}\n                        color={ (this.state.hasDeposited || this.state.batchCompleted) ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        Deposit your {this.state.selectedToken}\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ this.state.batchCompleted ? 'CheckBox' : 'Looks3'}\n                        color={ this.state.batchCompleted ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        Wait for batch execution\n                        <Link\n                          ml={1}\n                          fontWeight={2}\n                          color={'primary'}\n                          display={'inline'}\n                          hoverColor={'primary'}\n                          onClick={ e => this.props.openTooltipModal('Batch Execution Schedule',this.functionsUtil.getGlobalConfig(['messages','batchDepositExecutionSchedule'])) }\n                        >\n                          (Read More)\n                        </Link>\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ this.state.claimSucceeded ? 'CheckBox' : 'Looks4'}\n                        color={ this.state.claimSucceeded ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'flex-start'}\n                      >\n                        <Text\n                          ml={1}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'left'}\n                        >\n                          Claim your {this.state.tokenConfig.idle.token}\n                        </Text>\n                        <Tooltip\n                          placement={'top'}\n                          message={`You will start earning gov tokens after the batch is executed and you claim your ${this.state.tokenConfig.idle.token}`}\n                        >\n                          <Icon\n                            ml={1}\n                            size={'1.2em'}\n                            name={'Warning'}\n                            color={'#ffe000'}\n                            style={{\n                              cursor:'pointer'\n                            }}\n                          />\n                        </Tooltip>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                </DashboardCard>\n              </Box>\n            )\n          }\n          {\n            this.state.componentLoaded && this.props.account && this.state.availableTokens && this.state.selectedToken && (\n              <Box width={1}>\n                {\n                  (contractApproved || this.state.canClaim) && \n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text mb={2}>\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canDeposit ? this.setAction('deposit') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canDeposit }\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canClaim ? this.setAction('redeem') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canClaim }\n                          isActive={ this.state.action === 'redeem' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Claim\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                }\n                {\n                  this.state.showPermitBox && this.state.action === 'deposit' && this.state.usePermit && this.state.migrationEnabled && !this.state.migrationSucceeded ? (\n                    <DashboardCard\n                      cardProps={{\n                        py:3,\n                        px:2,\n                        mt:3,\n                        display:'flex',\n                        alignItems:'center',\n                        flexDirection:'column',\n                        justifyContent:'center',\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          color={'cellText'}\n                          name={'LightbulbOutline'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={1}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          {this.state.selectedToken} supports Approve and Deposit in a single transaction, disable this feature and try again if you can't deposit in the batch.\n                        </Text>\n                      </Flex>\n                      <Checkbox\n                        mt={1}\n                        required={false}\n                        checked={this.state.permitEnabled}\n                        label={`Approve and Deposit in a single transaction`}\n                        onChange={ e => this.togglePermitEnabled(e.target.checked) }\n                      />\n                    </DashboardCard>\n                  ) : !this.state.showPermitBox && this.state.action === 'deposit' && this.state.usePermit && this.state.migrationEnabled && !this.state.migrationSucceeded && (\n                    <Flex\n                      p={0}\n                      mt={3}\n                      width={1}\n                      borderRadius={2}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'center'}\n                    >\n                      <Link\n                        textAlign={'center'}\n                        hoverColor={'primary'}\n                        onClick={this.showPermitBox.bind(this)}\n                      >\n                        Having trouble with the Batch Deposit?\n                      </Link>\n                    </Flex>\n                  )\n                }\n                {\n                  this.state.action === 'deposit' ? \n                    this.state.batchDepositEnabled ? (\n                      <Migrate\n                        {...this.props}\n                        showActions={false}\n                        usePermit={usePermit}\n                        getTokenPrice={false}\n                        isMigrationTool={true}\n                        showBalanceSelector={true}\n                        migrationIcon={'FileDownload'}\n                        waitText={'Deposit estimated in'}\n                        tokenConfig={this.state.tokenConfig}\n                        selectedToken={this.state.selectedToken}\n                        migrationParams={toMigrate => [toMigrate]}\n                        selectedStrategy={this.props.selectedStrategy}\n                        callbackPermit={this.callbackPermit.bind(this)}\n                        callbackApprove={this.callbackApprove.bind(this)}\n                        migrationCallback={this.migrationCallback.bind(this)}\n                        migrationEnabledCallback={this.migrationEnabledCallback.bind(this)}\n                        migrationText={`Deposit your ${this.state.selectedToken} and wait until it is converted to the new ${this.state.tokenConfig.idle.token}.`}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:3\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedToken} in your wallet.\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Migrate>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          my:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Text\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            Batch Deposit is disabled for this asset.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      {\n                        this.state.processing.claim.loading ? (\n                          <Flex\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar web3={this.props.web3} waitText={`Claim estimated in`} endMessage={`Finalizing approve request...`} hash={this.state.processing.claim.txHash} />\n                          </Flex>\n                        ) : this.state.claimSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'DoneAll'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You have successfully withdrawn your {this.state.tokenConfig.idle.token}!\n                            </Text>\n                            <Link\n                              mt={2}\n                              textAlign={'center'}\n                              hoverColor={'primary'}\n                              onClick={ e => this.props.goToSection(this.state.selectedTokenConfig.strategy+'/'+this.state.selectedTokenConfig.baseToken) }\n                            >\n                              Go to the Dashboard\n                            </Link>\n                          </Flex>\n                        ) : this.state.batchCompleted ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              color={'cellText'}\n                              name={'FileUpload'}\n                            />\n                            <Text\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The Batch has been executed!<br />You can now claim your {batchRedeem.toFixed(4)} {this.state.tokenConfig.idle.token}\n                            </Text>\n                            <Text\n                              fontSize={1}\n                              color={'#ff9900'}\n                              textAlign={'center'}\n                            >\n                              (You need to claim your {this.state.tokenConfig.idle.token} to start earning Gov Tokens)\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                              <RoundButton\n                                buttonProps={{\n                                  mt:2,\n                                  width:[1,0.5],\n                                  mainColor:this.props.theme.colors.redeem\n                                }}\n                                handleClick={ e => this.claim() }\n                              >\n                                Claim\n                              </RoundButton>\n                            </Flex>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'1.8em'}\n                              color={'cellText'}\n                              name={'HourglassEmpty'}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              <Text.span\n                                color={'cellText'}\n                              >\n                                You have successfully deposited <strong>{batchDeposit.toFixed(4)} {this.state.selectedToken}</strong>, please wait until the batch is executed to claim your {this.state.tokenConfig.idle.token}.\n                              </Text.span>\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n                {\n                  this.state.batchTotals[this.state.currBatchIndex] && \n                    <DashboardCard\n                      cardProps={{\n                        p:2,\n                        my:3\n                      }}\n                    >\n                      {\n                        this.state.processing.execute.loading ? (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <TxProgressBar web3={this.props.web3} waitText={`Batch execution estimated in`} endMessage={`Finalizing batch execution request...`} hash={this.state.processing.execute.txHash} />\n                          </Flex>\n                        ) : this.state.executeSucceeded ? (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Icon\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The Batch has been executed!\n                            </Text>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Text\n                              fontWeight={500}\n                              color={'copyColor'}\n                              textAlign={'center'}\n                            >\n                              Batch Pool: {this.state.batchTotals[this.state.currBatchIndex].toFixed(4)} {this.state.selectedToken}\n                            </Text>\n                            {\n                              canExecuteBatch && \n                                <Link\n                                  textAlign={'center'}\n                                  hoverColor={'primary'}\n                                  onClick={this.execute.bind(this)}\n                                >\n                                  Execute Batch\n                                </Link>\n                            }\n                            {\n                              this.state.batchTotals[this.state.currBatchIndex].lt(this.state.selectedTokenConfig.minPoolSize) && (\n                                <Text\n                                  mb={1}\n                                  fontSize={1}\n                                  color={'#ff9900'}\n                                  textAlign={'center'}\n                                >\n                                  (The pool size has to reach at least {this.functionsUtil.formatMoney(this.state.selectedTokenConfig.minPoolSize,0)} {this.state.selectedToken} to be executed)\n                                </Text>\n                              )\n                            }\n                            {\n                              this.state.lastExecution && (\n                                <Text\n                                  fontSize={0}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  Last Batch Execution: {this.functionsUtil.strToMoment(this.state.lastExecution.timeStamp*1000).utc().format('YYYY-MM-DD HH:mm UTC')}\n                                </Text>\n                              )\n                            }\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                }\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default BatchDeposit;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass CoverProtocol extends Component {\n\n  state = {\n    steps:null,\n    infoBox:null,\n    swapInfo:null,\n    portfolio:null,\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    selectedAction:null,\n    successMessage:null,\n    activeCoverages:null,\n    defaultCoverage:null,\n    selectedCoverage:null,\n    contractApproved:false,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    transactionSucceeded:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedCoverageChanged = prevState.selectedCoverage !== this.state.selectedCoverage;\n    if (selectedCoverageChanged){\n      const selectedToken = this.state.selectedCoverage.collateral;\n      const tokenConfig = Object.values(this.props.availableStrategies)[0][selectedToken];\n      const tokenBalance = await this.functionsUtil.getTokenBalance(selectedToken,this.props.account);\n      const selectedAction = !this.state.selectedAction ? (this.props.urlParams.param2 || 'Claim') : this.state.selectedAction;\n      this.setState({\n        tokenConfig,\n        tokenBalance,\n        selectedToken,\n        selectedAction\n      });\n    }\n\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue && this.state.inputValue.gt(0);\n    const swapInfoChanged = JSON.stringify(prevState.swapInfo) !== JSON.stringify(this.state.swapInfo) && this.state.inputValue && this.state.inputValue.gt(0);\n    if (selectedActionChanged || inputValueChanged || swapInfoChanged || contractApprovedChanged){\n      this.updateData();\n    }\n\n    const contractInfoChanged = JSON.stringify(prevState.contractInfo) !== JSON.stringify(this.state.contractInfo);\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async getSwapInfo(amount){\n    amount = this.functionsUtil.BNify(amount);\n    if (!amount.isNaN() && amount.gt(0)){\n      // console.log('getSwapInfo',this.state.contractInfo.name,this.state.tokenConfig.address,balancerTokenConfig.address,swapFee,covTokens,tokenPrice);\n\n      if (this.state.tokenPrice && this.state.swapFee && this.state.covTokens){\n\n        const swapFee = this.state.swapFee;\n        const tokenPrice = this.state.tokenPrice;\n        let tokenAmountOut = amount.div(tokenPrice);\n        tokenAmountOut = tokenAmountOut.minus(tokenAmountOut.times(swapFee));\n\n        return {\n          amount,\n          tokenAmountOut\n        };\n      }\n    }\n\n    return null;\n  }\n\n  async changeInputCallback(inputValue=null){\n    let swapInfo = null;\n    let balanceSelectorInfo = null;\n    inputValue = inputValue || this.state.inputValue;\n\n    if (inputValue && this.functionsUtil.BNify(inputValue).gt(0)){\n      switch (this.state.selectedAction){\n        case 'Mint':\n          balanceSelectorInfo = {\n            color:this.props.theme.colors.transactions.status.completed,\n            text:`You will Mint: ${inputValue.toFixed(4)} CLAIM and NOCLAIM`\n          };\n        break;\n        case 'Claim':\n        case 'NoClaim':\n          const amount = this.functionsUtil.normalizeTokenAmount(inputValue,this.state.tokenConfig.decimals);\n          swapInfo = await this.getSwapInfo(amount);\n          if (swapInfo){\n            if (swapInfo.tokenAmountOut.lte(this.state.covTokens)){\n              balanceSelectorInfo = {\n                color:this.props.theme.colors.transactions.status.completed,\n                text:`You will Buy: ~${this.functionsUtil.fixTokenDecimals(swapInfo.tokenAmountOut,18).toFixed(4)} ${this.state.selectedAction}`\n              };\n            } else {\n              balanceSelectorInfo = {\n                text:`Not enough liquidity`,\n                color:this.props.theme.colors.transactions.status.failed,\n              };\n            }\n          }\n        break;\n        default:\n        break;\n      }\n    }\n\n    this.setState({\n      swapInfo,\n      inputValue,\n      balanceSelectorInfo\n    });\n  }\n\n  async getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = null;\n    amount = this.functionsUtil.BNify(amount);\n    const MAX_UINT256 = this.functionsUtil.BNify(2).pow(256).minus(1).toFixed(0);\n    switch (this.state.selectedAction){\n      case 'Mint':\n        methodName = 'addCover';\n        methodParams = [this.state.tokenConfig.address,parseInt(this.state.selectedCoverage.expirationTimestamp),this.functionsUtil.integerValue(amount)];\n      break;\n      case 'Claim':\n      case 'NoClaim':\n        methodName = 'swapExactAmountOut';\n        const balancerTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const swapInfo = await this.getSwapInfo(amount);\n        if (swapInfo){\n          if (swapInfo.tokenAmountOut.lte(this.state.covTokens)){\n            methodParams = [this.state.tokenConfig.address,this.functionsUtil.integerValue(amount),balancerTokenConfig.address, this.functionsUtil.integerValue(swapInfo.tokenAmountOut), MAX_UINT256];\n          } else {\n            return null;\n          }\n        }\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    let infoBox = null;\n    const dashboardUrl = `#${this.functionsUtil.getGlobalConfig(['dashboard','baseRoute'])}/best`;\n    const fixedAmount = this.functionsUtil.fixTokenDecimals(amount,this.state.tokenConfig.decimals);\n    switch (this.state.selectedAction){\n      case 'Mint':\n        const mintedClaimLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.selectedCoverage.tokens['Claim'].address ) : null;\n        const mintedNoClaimLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.selectedCoverage.tokens['NoClaim'].address ) : null;\n        const mintedClaimAmount = mintedClaimLog ? this.functionsUtil.fixTokenDecimals(parseInt(mintedClaimLog.data,16),this.state.contractInfo.decimals) : fixedAmount;\n        const mintedNoClaimAmount = mintedNoClaimLog ? this.functionsUtil.fixTokenDecimals(parseInt(mintedNoClaimLog.data,16),this.state.contractInfo.decimals) : fixedAmount;\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully minted <strong>${mintedClaimAmount.toFixed(4)} CLAIM</strong> and <strong>${mintedNoClaimAmount.toFixed(4)} NOCLAIM</strong> tokens<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      case 'Claim':\n        const claimTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const claimTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === claimTokenConfig.address ) : null;\n        const receivedClaimAmount = claimTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(claimTokensLog.data,16),claimTokenConfig.balancerPool.decimals) : this.functionsUtil.fixTokenDecimals(params[3],claimTokenConfig.balancerPool.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully bought <strong>${receivedClaimAmount.toFixed(4)} ${this.state.selectedAction}</strong> tokens, you are now covered in the event that there is a successful attack on the protocol<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      case 'NoClaim':\n        debugger;\n        const noClaimTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const noClaimTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === noClaimTokenConfig.address ) : null;\n        const receivedNoClaimAmount = noClaimTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(noClaimTokensLog.data,16),noClaimTokenConfig.balancerPool.decimals) : this.functionsUtil.fixTokenDecimals(params[3],noClaimTokenConfig.balancerPool.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully bought <strong>${receivedNoClaimAmount.toFixed(4)} ${this.state.selectedAction}</strong> tokens, you will be rewarded if there is no successful attack on the protocol by the expiry date<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    // Set second step completed\n    let steps = this.state.steps;\n    steps[1].completed = true;\n\n    const transactionSucceeded = true;\n    const tokenBalance = await this.functionsUtil.getTokenBalance(this.state.selectedToken,this.props.account);\n\n    // console.log('transactionSucceeded',infoBox);\n\n    this.setState({\n      steps,\n      infoBox,\n      tokenBalance,\n      transactionSucceeded\n    });\n  }\n\n  async updateData(){\n    let apy = null;\n    const steps = [];\n    let infoBox = null;\n    let swapFee = null;\n    let covTokens = null;\n    let tokenPrice = null;\n    let tokenAmount = null;\n    let contractInfo = null;\n    let collateralAmount = null;\n    let approveDescription = null;\n\n    const claimTokenConfig = this.state.selectedCoverage.tokens['Claim'];\n    const noClaimTokenConfig = this.state.selectedCoverage.tokens['NoClaim'];\n    const balancerClaimConfig = claimTokenConfig.balancerPool;\n    const balancerNoClaimConfig = noClaimTokenConfig.balancerPool;\n\n    await Promise.all([\n      this.props.initContract(claimTokenConfig.name,claimTokenConfig.address,claimTokenConfig.abi),\n      this.props.initContract(noClaimTokenConfig.name,noClaimTokenConfig.address,noClaimTokenConfig.abi),\n      this.props.initContract(balancerClaimConfig.name,balancerClaimConfig.address,balancerClaimConfig.abi),\n      this.props.initContract(balancerNoClaimConfig.name,balancerNoClaimConfig.address,balancerNoClaimConfig.abi)\n    ]);\n\n    const [\n      claimTokenBalance,\n      noClaimTokenBalance,\n      balancerPoolClaimBalance,\n      balancerPoolNoClaimBalance\n    ] = await Promise.all([\n      // Get Claim token balance\n      this.functionsUtil.getTokenBalance(claimTokenConfig.name,this.props.account),\n      // Get NOCLAIM token balance\n      this.functionsUtil.getTokenBalance(noClaimTokenConfig.name,this.props.account),\n      // Get Balancer Claim token Pool balance\n      this.functionsUtil.getTokenBalance(balancerClaimConfig.name,this.props.account),\n      // Get Balancer NOCLAIM token Pool balance\n      this.functionsUtil.getTokenBalance(balancerNoClaimConfig.name,this.props.account)\n    ]);\n\n    // Check if user has both Claim and NOCLAIM tokens\n    const hasMintedTokens = claimTokenBalance && noClaimTokenBalance && claimTokenBalance.gt(0) && noClaimTokenBalance.gt(0);\n\n    // Set Contract Info\n    switch (this.state.selectedAction){\n      case 'Mint':\n        contractInfo = this.props.toolProps.contract;\n      break;\n      case 'NoClaim':\n        contractInfo = noClaimTokenConfig.balancerPool;\n      break;\n      case 'Claim':\n        contractInfo = claimTokenConfig.balancerPool;\n      break;\n      default:\n      break;\n    }\n\n    const balancerTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n\n    if (contractInfo){\n      if (balancerTokenConfig){\n        [\n          swapFee,\n          covTokens,\n          tokenPrice\n        ] = await Promise.all([\n          this.functionsUtil.genericContractCall(contractInfo.name,'getSwapFee'),\n          this.functionsUtil.genericContractCall(contractInfo.name,'getBalance',[balancerTokenConfig.address]),\n          this.functionsUtil.genericContractCall(contractInfo.name,'getSpotPrice',[this.state.tokenConfig.address,balancerTokenConfig.address])\n        ]);\n\n        // Calculate yearly returns\n        if (tokenPrice){\n          const isClaim = this.state.selectedAction === 'Claim';\n          const expirationTimestamp = this.state.selectedCoverage.expirationTimestamp;\n          const days =  (expirationTimestamp*1000 - Date.now())/(60 * 60 * 24 * 1000);\n          tokenPrice = this.functionsUtil.fixTokenDecimals(tokenPrice,this.state.tokenConfig.decimals);\n          const apyPrice = isClaim ? tokenPrice : this.functionsUtil.BNify(1).minus(tokenPrice).div(tokenPrice);\n          apy = this.functionsUtil.BNify(100).times(apyPrice).times(365).div(days);\n        }\n\n        // Fix swap Fees\n        if (swapFee){\n          swapFee = this.functionsUtil.fixTokenDecimals(swapFee,18);\n        }\n      }\n\n      switch (this.state.selectedAction){\n        case 'Mint':\n          approveDescription = `Approve the Cover Protocol contract`;\n          infoBox = {\n            icon:'MonetizationOn',\n            text:`Stake ${this.state.selectedToken} to mint both CLAIM and NOCLAIM tokens in a 1:1 ratio then add them to the respective Balancer Pool to earn trading fees.<br /><small>Prior to expiry or an accepted claim, users can redeem back their collateral with both their CLAIM and NOCLAIM tokens. <a href=\"https://docs.coverprotocol.com/user-guide/redemption\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a></small>`\n          };\n          // Add Approve Step\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:hasMintedTokens,\n            description:`Mint CLAIM and NOCLAIM tokens`\n          });\n          // Add Liquidity to Balancer Step\n          steps.push({\n            icon:'Looks3',\n            description:`Add your CLAIM tokens to the Balancer Pool`,\n            completed:balancerPoolClaimBalance && balancerPoolClaimBalance.gt(0),\n            link:`https://pools.balancer.exchange/#/pool/${this.state.selectedCoverage.tokens['Claim'].balancerPool.address}/`,\n          });\n          // Add Liquidity to Balancer Step\n          steps.push({\n            icon:'Looks4',\n            description:`Add your NOCLAIM tokens to the Balancer Pool`,\n            completed:balancerPoolNoClaimBalance && balancerPoolNoClaimBalance.gt(0),\n            link:`https://pools.balancer.exchange/#/pool/${this.state.selectedCoverage.tokens['NoClaim'].balancerPool.address}/`,\n          });\n        break;\n        case 'NoClaim':\n          if (this.state.swapInfo){\n            collateralAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.amount,this.state.tokenConfig.decimals);\n            tokenAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.tokenAmountOut,contractInfo.decimals);\n            infoBox = {\n              icon:'VerifiedUser',\n              text:`By providing <strong>${collateralAmount.toFixed(4)} ${this.state.selectedToken}</strong> your NOCLAIM tokens will pay out <strong>~${tokenAmount.toFixed(4)} ${this.state.selectedToken}</strong> if there is no successful attack on the protocol by the expiry date.`\n            };\n          } else {\n            infoBox = {\n              icon:'VerifiedUser',\n              text:`NOCLAIM tokens will pay out 1 ${this.state.selectedToken} for each token you hold if there is no successful attack on the protocol by the expiry date.`\n            };\n          }\n\n          // Add Yearly cost and read more\n          infoBox.text+=`${apy ? `<br /><span style=\"color:${this.props.theme.colors.primary}\">The yearly return of buying and holding NOCLAIM until expiration is <strong>${apy.toFixed(2)}%</strong>` : null}</span><br /><small><a href=\"https://docs.coverprotocol.com/product/claims-guidelines\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a> to understand how claims are assessed and paid out by Cover Protocol.</small>`;\n\n          // Add Approve Step\n          approveDescription = `Approve the NOCLAIM Balancer Pool contract`;\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:noClaimTokenBalance && noClaimTokenBalance.gt(0),\n            description:`Buy NOCLAIM tokens with your ${this.state.selectedToken}`\n          });\n        break;\n        case 'Claim':\n          if (this.state.swapInfo){\n            collateralAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.amount,this.state.tokenConfig.decimals);\n            tokenAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.tokenAmountOut,contractInfo.decimals);\n            const portfolioCoveredPerc = 32;//this.state.portfolio && this.state.portfolio.totalBalance.gt(0) ? tokenAmount.div(this.state.portfolio.totalBalance).times(100) : null;\n            infoBox = {\n              icon:'BeachAccess',\n              text:`By providing <strong>${collateralAmount.toFixed(4)} ${this.state.selectedToken}</strong> your CLAIM tokens will pay out <strong>~${tokenAmount.toFixed(4)} ${this.state.selectedToken}</strong>${ portfolioCoveredPerc ? ` <strong>(${portfolioCoveredPerc}% of your portfolio)</strong>` : '' } in the event that there is a successful attack on the protocol before the expiry date.`\n            };\n          } else {\n            infoBox = {\n              icon:'BeachAccess',\n              text:`CLAIM tokens will pay out 1 ${this.state.selectedToken} for each token you hold in the event that there is a successful attack on the protocol before the expiry date.`\n            };\n          }\n\n          infoBox.text+=`${apy ? `<br /><span style=\"color:${this.props.theme.colors.primary}\">The yearly cost of buying and holding CLAIM until expiration is <strong>${apy.toFixed(2)}%` : null}</strong></span><br /><small><a href=\"https://docs.coverprotocol.com/product/claims-guidelines\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a> to understand how claims are assessed and paid out by Cover Protocol.</small>`;\n\n          // Add Approve Step\n          approveDescription = `Approve the CLAIM Balancer Pool contract`;\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:claimTokenBalance && claimTokenBalance.gt(0),\n            description:`Buy CLAIM tokens with your ${this.state.selectedToken}`\n          });\n        break;\n        default:\n        break;\n      }\n\n      const transactionSucceeded = false;\n      this.setState({\n        apy,\n        steps,\n        infoBox,\n        swapFee,\n        covTokens,\n        tokenPrice,\n        contractInfo,\n        approveDescription,\n        transactionSucceeded\n      });\n    }\n  }\n\n  async loadData(){\n    const currTime = parseInt(Date.now()/1000);\n    const activeCoverages = this.props.toolProps.coverages.reduce( (output,c,index) => {\n      if (c.expirationTimestamp>currTime){\n        const expirationDate = this.functionsUtil.strToMoment(c.expirationTimestamp*1000).utc().format('YYYY-MM-DD HH:mm:ss')+' UTC';\n        const icon = `images/tokens/${c.collateral}.svg`;\n        const label = `Collateral: ${c.collateral} - Expiration: ${expirationDate}`;\n        output.push({\n          icon,\n          label,\n          data:c,\n          value:expirationDate,\n        });\n      }\n      return output;\n    },[]);\n\n    const portfolio = await this.functionsUtil.getAccountPortfolio();\n    const defaultCoverage = activeCoverages.length ? activeCoverages[0] : null;\n\n    this.setState({\n      portfolio,\n      defaultCoverage,\n      activeCoverages\n    },() => {\n      if (defaultCoverage){\n        this.selectCoverage(defaultCoverage);\n      }\n    });\n  }\n\n  async selectCoverage(coverage){\n    const selectedCoverage = coverage.data;\n    this.setState({\n      selectedCoverage\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  render() {\n\n    const isMint = this.state.selectedAction === 'Mint';\n    const isBuyClaim = this.state.selectedAction === 'Claim';\n    const isBuyNoClaim = this.state.selectedAction === 'NoClaim';\n    const txAction = isMint ? this.state.selectedAction : `Buy ${this.state.selectedAction}`;\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.activeCoverages ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading active coverages...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.activeCoverages.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active coverages.\n                  </Text>\n                ) : (\n                  <Flex\n                    width={[1,0.46]}\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Box\n                      width={1}\n                    >\n                      <Text mb={1}>\n                        Select Coverage:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        name={'strategy'}\n                        isSearchable={false}\n                        options={this.state.activeCoverages}\n                        CustomOptionValue={CustomOptionValue}\n                        defaultValue={this.state.defaultCoverage}\n                        onChange={this.selectCoverage.bind(this)}\n                        CustomValueContainer={CustomValueContainer}\n                      />\n                    </Box>\n                    {\n                      this.state.selectedCoverage && (\n                        <Box\n                          mt={3}\n                          width={1}\n                        >\n                          <Text mb={1}>\n                            Select Action:\n                          </Text>\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={['column','row']}\n                            justifyContent={'space-between'}\n                          >\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isMint ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Add Liquidity'}\n                              imageSrc={'images/mint.svg'}\n                              isMobile={this.props.isMobile}\n                              subcaption={'mint CLAIM and NOCLAIM\\nand stake in Balancer Pool'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isMint}\n                              handleClick={ e => this.setAction('Mint') }\n                            />\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isBuyClaim ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Buy CLAIM'}\n                              imageSrc={'images/claim.svg'}\n                              isMobile={this.props.isMobile}\n                              subcaption={'protect in case of attacks\\nagainst the Idle protocol'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isBuyClaim}\n                              handleClick={ e => this.setAction('Claim') }\n                            />\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isBuyNoClaim ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Buy NOCLAIM'}\n                              isMobile={this.props.isMobile}\n                              imageSrc={'images/noclaim.svg'}\n                              subcaption={'get rewarded if no attack\\noccurs on the Idle protocol'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isBuyNoClaim}\n                              handleClick={ e => this.setAction('NoClaim') }\n                            />\n                          </Flex>\n                          {\n                            this.state.tokenConfig && this.state.tokenBalance && this.state.contractInfo &&\n                              <Box\n                                mt={2}\n                                mb={3}\n                                width={1}\n                              >\n                                <SendTxWithBalance\n                                  {...this.props}\n                                  action={txAction}\n                                  error={this.state.error}\n                                  steps={this.state.steps}\n                                  infoBox={this.state.infoBox}\n                                  tokenConfig={this.state.tokenConfig}\n                                  tokenBalance={this.state.tokenBalance}\n                                  contractInfo={this.state.contractInfo}\n                                  callback={this.transactionSucceeded.bind(this)}\n                                  contractApproved={this.contractApproved.bind(this)}\n                                  approveDescription={this.state.approveDescription}\n                                  balanceSelectorInfo={this.state.balanceSelectorInfo}\n                                  changeInputCallback={this.changeInputCallback.bind(this)}\n                                  getTransactionParams={this.getTransactionParams.bind(this)}\n                                >\n                                  <BuyModal\n                                    {...this.props}\n                                    showInline={true}\n                                    availableMethods={[]}\n                                    buyToken={this.state.selectedToken}\n                                  />\n                                </SendTxWithBalance>\n                              </Box>\n                          }\n                        </Box>\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default CoverProtocol;\n","import Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass TokenMigration extends Component {\n\n  state = {\n    tokenConfig:null,\n    selectedFromToken:null,\n    selectedDestToken:null,\n    migrationSucceeded:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async loadTokens(){\n    const selectedFromToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    if (selectedFromToken && selectedFromToken !== this.props.urlParams.param2){\n      this.changeFromToken(selectedFromToken);\n    }\n\n    this.selectFromToken(selectedFromToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      await this.loadTokens();\n    }\n  }\n\n  changeFromToken = (selectedToken) => {\n    const convertTool = this.functionsUtil.getGlobalConfig(['tools','tokenMigration']);\n    this.props.goToSection(`tools/${convertTool.route}/${selectedToken}`);\n  }\n\n  selectFromToken = async (selectedFromToken) => {\n    const tokenInfo = this.props.toolProps.availableTokens[selectedFromToken];\n\n    let selectedDestToken = null;\n    const availableDestinationTokens = {};\n\n    const availableStrategies = typeof this.props.toolProps.availableStrategies !== 'undefined' ? this.props.toolProps.availableStrategies : Object.keys(this.props.availableStrategies);\n\n    availableStrategies.forEach( strategy => {\n      const strategyAvailableTokens =  this.props.availableStrategies[strategy];\n      const baseTokenConfig = strategyAvailableTokens[tokenInfo.baseToken];\n      if (!baseTokenConfig){\n        return false;\n      }\n\n      // Remove icon\n      delete baseTokenConfig.icon;\n\n      if (!selectedDestToken){\n        selectedDestToken = baseTokenConfig.idle.token;\n      }\n      baseTokenConfig.strategy = strategy;\n      baseTokenConfig.baseToken = tokenInfo.baseToken;\n      availableDestinationTokens[baseTokenConfig.idle.token] = baseTokenConfig;\n    });\n\n    this.setState({\n      tokenConfig:null,\n      selectedFromToken,\n      availableDestinationTokens\n    },() => {\n      this.selectDestToken(selectedDestToken);\n    });\n  }\n\n  selectDestToken = async (selectedDestToken) => {\n\n    const destTokenConfig = this.state.availableDestinationTokens[selectedDestToken];\n    const tokenInfo = this.props.toolProps.availableTokens[this.state.selectedFromToken];\n\n    const tokenConfig = {\n      token:destTokenConfig.baseToken,\n      address:destTokenConfig.address,\n      decimals:destTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = destTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:tokenInfo.abi,\n      name:tokenInfo.token,\n      token:tokenInfo.token,\n      address:tokenInfo.address\n    };\n    \n    const migrationContract = this.props.toolProps.migrationContract;\n\n    // Add migration function\n    if (tokenInfo.migrateFunction){\n      migrationContract.functions[0].name = tokenInfo.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(destTokenConfig.strategy,tokenInfo.baseToken);\n\n    this.setState({\n      tokenConfig,\n      selectedDestToken\n    });\n  }\n\n  migrationCallback = () => {\n    this.setState({\n      migrationSucceeded:true\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedFromToken){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to migrate:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              id={'token-from'}\n              showBalance={true}\n              isSearchable={true}\n              onChange={this.changeFromToken}\n              selectedToken={this.state.selectedFromToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            this.state.availableDestinationTokens && this.state.selectedDestToken && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text mb={1}>\n                  Select destination asset:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  id={'token-dest'}\n                  showBalance={false}\n                  onChange={this.selectDestToken}\n                  selectedToken={this.state.selectedDestToken}\n                  availableTokens={this.state.availableDestinationTokens}\n                />\n              </Box>\n          }\n          {\n            this.state.selectedFromToken && this.state.selectedDestToken ? (\n              <Migrate\n                {...this.props}\n                showActions={false}\n                getTokenPrice={false}\n                isMigrationTool={true}\n                tokenConfig={this.state.tokenConfig}\n                migrationCallback={this.migrationCallback}\n                selectedToken={this.state.selectedFromToken}\n                selectedStrategy={this.props.selectedStrategy}\n              >\n                {\n                  !this.props.account ? (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'2.3em'}\n                          name={'Input'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={2}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Please connect with your wallet interact with Idle.\n                        </Text>\n                        <RoundButton\n                          buttonProps={{\n                            mt:2,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.props.connectAndValidateAccount}\n                        >\n                          Connect\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      {\n                        this.state.migrationSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              Your {this.state.selectedFromToken} have been successfully migrated!\n                            </Text>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedFromToken} in your wallet.\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n              </Migrate>\n            ) : null\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenMigration;\n","/*\n// batchDeposits[user][batchId] = amount\nmapping (address => mapping (uint256 => uint256)) public batchDeposits;\nmapping (uint256 => uint256) batchTotals; // in idleToken\nmapping (uint256 => uint256) batchRedeemedTotals; // in newIdleToken\n\nuint256 public currBatch;\naddress public idleToken;\naddress public newIdleToken;\naddress public underlying;\n\nfunction deposit() external\nfunction withdraw(uint256 batchId) external\n*/\n\nimport Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Box, Text, Icon, Link } from \"rimble-ui\";\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport TransactionField from '../TransactionField/TransactionField';\n\nclass BatchMigration extends Component {\n\n  state = {\n    canClaim:false,\n    batchTotals:{},\n    canDeposit:true,\n    action:'deposit',\n    batchDeposits:{},\n    tokenConfig:null,\n    processing:{\n      claim:{\n        txHash:null,\n        loading:false\n      },\n    },\n    hasDeposited:false,\n    selectedToken:null,\n    batchCompleted:false,\n    claimSucceeded:false,\n    migrationSucceeded:false,\n    selectedTokenConfig:null,\n    migrationContractApproved:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async checkBatchs(){\n\n    const migrationContractInfo = this.state.selectedTokenConfig.migrationContract;\n\n    await Promise.all([\n      this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi),\n      this.props.initContract(this.state.selectedTokenConfig.name,this.state.selectedTokenConfig.address,this.state.selectedTokenConfig.abi)\n    ]);\n\n    const [currBatchIndex,migrationContractApproved] = await Promise.all([\n      this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'currBatch'),\n      this.functionsUtil.checkTokenApproved(this.state.selectedTokenConfig.name,migrationContractInfo.address,this.props.account)\n    ]);\n\n    const newState = {};\n    const batchDeposits = {};\n    const batchTotals = {};\n    let batchCompleted = false;\n\n    if (currBatchIndex !== null){\n      for (let batchIndex = 0; batchIndex <= currBatchIndex ; batchIndex++){\n        let [batchTotal,batchDeposit] = await Promise.all([\n          this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchTotals',[batchIndex]),\n          this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n        ]);\n        if (batchTotal && batchTotal !== null){\n          batchTotals[batchIndex] = this.functionsUtil.fixTokenDecimals(batchTotal,this.state.selectedTokenConfig.decimals);\n        }\n        if (batchDeposit !== null){\n          batchDeposit = this.functionsUtil.fixTokenDecimals(batchDeposit,this.state.selectedTokenConfig.decimals);\n          if (batchDeposit.gt(0)){\n\n            batchDeposits[batchIndex] = batchDeposit;\n            // Check claimable\n            if (batchIndex < currBatchIndex){\n              batchCompleted = true;\n            }\n          }\n        }\n      }\n\n      newState.batchDeposits = batchDeposits;\n    }\n\n    const hasDeposited = (batchDeposits && Object.keys(batchDeposits).length>0);\n\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    newState.claimSucceeded = false;\n    newState.batchTotals = batchTotals;\n    newState.batchCompleted = batchCompleted;\n    newState.hasDeposited = hasDeposited;\n    newState.canDeposit = !hasDeposited && batchMigrationDepositEnabled;\n    newState.canClaim = batchCompleted || hasDeposited;\n    newState.action = hasDeposited ? 'redeem' : 'deposit';\n    newState.migrationContractApproved = migrationContractApproved;\n\n    this.setState(newState);\n  }\n\n  async loadTokens(){\n    const selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    this.selectFromToken(selectedToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      await this.loadTokens();\n    }\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      this.checkBatchs();\n    }\n  }\n\n  selectFromToken = async (selectedToken) => {\n\n    const selectedTokenConfig = this.props.toolProps.availableTokens[selectedToken];\n    const strategyAvailableTokens =  this.props.availableStrategies[selectedTokenConfig.strategy];\n\n    const baseTokenConfig = strategyAvailableTokens[selectedTokenConfig.baseToken];\n\n    const tokenConfig = {\n      token:selectedTokenConfig.baseToken,\n      address:selectedTokenConfig.address,\n      decimals:selectedTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = baseTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:selectedTokenConfig.abi,\n      name:selectedTokenConfig.name,\n      token:selectedTokenConfig.token,\n      address:selectedTokenConfig.address\n    };\n    \n    const migrationContract = selectedTokenConfig.migrationContract;\n\n    // Add migration function\n    if (baseTokenConfig.migrateFunction){\n      migrationContract.functions[0].name = baseTokenConfig.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(selectedTokenConfig.strategy,baseTokenConfig.baseToken);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedTokenConfig\n    });\n  }\n\n  claim = async () => {\n    if (!this.state.batchCompleted){\n      return null;\n    }\n\n    const loading = true;\n    const claimableValue = 0;\n    const batchId = Object.keys(this.state.batchDeposits)[0];\n\n    const callbackClaim = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: `BatchMigration`,\n        eventAction: 'Claim',\n        eventLabel: this.props.selectedToken,\n        eventValue: parseInt(claimableValue)\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        claimSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          claim:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptClaim = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          claim:{\n            ...prevState.processing.claim,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'withdraw', [batchId], null, callbackClaim, callbackReceiptClaim);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        claim:{\n          ...prevState.processing.claim,\n          loading\n        }\n      }\n    }));\n  }\n\n  setAction = (action) => {\n    if (action !== null && ['deposit','redeem'].includes(action.toLowerCase())){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  migrationCallback = () => {\n    this.checkBatchs();\n    this.setState({\n      migrationSucceeded:true\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedToken){\n      return null;\n    }\n\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    const batchId = this.state.batchDeposits && Object.keys(this.state.batchDeposits).length>0 ? Object.keys(this.state.batchDeposits)[0] : null;\n    const batchDeposit = this.state.batchDeposits && Object.values(this.state.batchDeposits).length>0 ? Object.values(this.state.batchDeposits)[0] : null;\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to migrate:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              id={'token-from'}\n              showBalance={true}\n              isSearchable={false}\n              onChange={this.selectFromToken}\n              selectedToken={this.state.selectedToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            (this.state.canDeposit || this.state.canClaim) && \n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  px:4,\n                  mt:3,\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                > \n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.migrationContractApproved ? 'CheckBox' : 'LooksOne'}\n                      color={ this.state.migrationContractApproved ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Approve the batch migration contract\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.hasDeposited ? 'CheckBox' : 'LooksTwo'}\n                      color={ this.state.hasDeposited ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Deposit your {this.state.selectedTokenConfig.token}\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.batchCompleted ? 'CheckBox' : 'Looks3'}\n                      color={ this.state.batchCompleted ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Wait for the batch to be migrated\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.claimSucceeded ? 'CheckBox' : 'Looks4'}\n                      color={ this.state.claimSucceeded ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Claim your {this.state.selectedToken}V4\n                    </Text>\n                  </Flex>\n                </Flex>\n              </DashboardCard>\n          }\n          {\n            this.state.selectedToken ? (\n              <Box width={1}>\n                {\n                  this.state.migrationContractApproved && (this.state.canDeposit || this.state.canClaim) && \n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text mb={2}>\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canDeposit ? this.setAction('deposit') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canDeposit }\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canClaim ? this.setAction('redeem') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canClaim }\n                          isActive={ this.state.action === 'redeem' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Claim\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                }\n                {\n                  this.state.action === 'deposit' ? \n                    batchMigrationDepositEnabled ? (\n                      <Migrate\n                        {...this.props}\n                        showActions={false}\n                        migrationParams={[]}\n                        getTokenPrice={false}\n                        isMigrationTool={true}\n                        migrationIcon={'FileDownload'}\n                        waitText={'Deposit estimated in'}\n                        tokenConfig={this.state.tokenConfig}\n                        selectedToken={this.state.selectedToken}\n                        callbackApprove={this.checkBatchs.bind(this)}\n                        selectedStrategy={this.props.selectedStrategy}\n                        migrationCallback={this.migrationCallback.bind(this)}\n                        migrationText={`Deposit your ${this.state.selectedTokenConfig.token} and wait until it is converted to the new ${this.state.tokenConfig.idle.token}.`}\n                      >\n                        {\n                          !this.props.account ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mt:3\n                              }}\n                            >\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  size={'2.3em'}\n                                  name={'Input'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mt={2}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  Please connect with your wallet interact with Idle.\n                                </Text>\n                                <RoundButton\n                                  buttonProps={{\n                                    mt:2,\n                                    width:[1,1/2]\n                                  }}\n                                  handleClick={this.props.connectAndValidateAccount}\n                                >\n                                  Connect\n                                </RoundButton>\n                              </Flex>\n                            </DashboardCard>\n                          ) : (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                my:3\n                              }}\n                            >\n                              {\n                                batchId ? (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      color={'cellText'}\n                                      name={'HourglassEmpty'}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      {\n                                        this.state.batchCompleted ? (\n                                          <Text.span\n                                            color={'cellText'}\n                                          >The batch has been migrated, click on the \"Claim\" button to withdraw your tokens.</Text.span>\n                                        ) : (\n                                          <Text.span\n                                            color={'cellText'}\n                                          >\n                                            You have successfully deposited {batchDeposit.toFixed(4)} {this.state.selectedTokenConfig.token}, please wait until the batch is migrated to claim your tokens.\n                                            {\n                                              typeof this.state.batchTotals[batchId] !== 'undefined' && \n                                              <Text.span\n                                                color={'cellText'}\n                                              >\n                                                <br />Batch pool: {this.state.batchTotals[batchId].toFixed(4)} {this.state.selectedTokenConfig.token}\n                                              </Text.span>\n                                            }\n                                          </Text.span>\n                                        )\n                                      }\n                                    </Text>\n                                  </Flex>\n                                ) : this.state.migrationSucceeded ? (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      name={'DoneAll'}\n                                      color={this.props.theme.colors.transactions.status.completed}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      You have successfully deposited your {this.state.selectedTokenConfig.token} into the batch!\n                                    </Text>\n                                  </Flex>\n                                ) : (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      name={'MoneyOff'}\n                                      color={'cellText'}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      You don't have any {this.state.selectedTokenConfig.token} in your wallet.\n                                    </Text>\n                                  </Flex>\n                                )\n                              }\n                            </DashboardCard>\n                          )\n                        }\n                      </Migrate>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          my:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Text\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            Batch migration is disabled for this asset.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        my:3\n                      }}\n                    >\n                      {\n                        this.state.processing.claim.loading ? (\n                          <Flex\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar web3={this.props.web3} waitText={`Claim estimated in`} endMessage={`Finalizing approve request...`} hash={this.state.processing.claim.txHash} />\n                          </Flex>\n                        ) : this.state.claimSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You have successfully withdrawn your {this.state.selectedToken} V4!\n                            </Text>\n                            <Link\n                              mt={2}\n                              textAlign={'center'}\n                              hoverColor={'primary'}\n                              onClick={ e => this.props.goToSection(this.state.selectedTokenConfig.strategy+'/'+this.state.selectedTokenConfig.baseToken) }\n                            >\n                              Go to the Dashboard\n                            </Link>\n                          </Flex>\n                        ) : this.state.batchCompleted ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              color={'cellText'}\n                              name={'FileUpload'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The batch has been migrated!<br />You can now claim your {this.state.tokenConfig.idle.token} V4.\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                              <RoundButton\n                                buttonProps={{\n                                  mt:3,\n                                  width:[1,0.5],\n                                  mainColor:this.props.theme.colors.redeem\n                                }}\n                                handleClick={ e => this.claim() }\n                              >\n                                Claim\n                              </RoundButton>\n                            </Flex>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              color={'cellText'}\n                              name={'HourglassEmpty'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              <Text.span\n                                color={'cellText'}\n                              >\n                                You have successfully deposited {batchDeposit.toFixed(4)} {this.state.selectedTokenConfig.token}, please wait until the batch is migrated to claim your V4 tokens.\n                                {\n                                  typeof this.state.batchTotals[batchId] !== 'undefined' && \n                                  <Text.span\n                                    color={'cellText'}\n                                  >\n                                    <br />Batch pool: {this.state.batchTotals[batchId].toFixed(4)} {this.state.selectedTokenConfig.token}\n                                  </Text.span>\n                                }\n                              </Text.span>\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n              </Box>\n            ) : null\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default BatchMigration;","import IDLE from '../contracts/IDLE.json';\nimport WETH from '../abis/tokens/WETH.json';\nimport COMP from '../abis/compound/COMP.json';\nimport TokenSwap from '../TokenSwap/TokenSwap';\nimport yDAIv3 from '../abis/iearn/yDAIv3.json';\nimport yUSDCv3 from '../abis/iearn/yUSDCv3.json';\nimport yUSDTv3 from '../abis/iearn/yUSDTv3.json';\nimport ySUSDv3 from '../abis/iearn/ySUSDv3.json';\nimport yTUSDv3 from '../abis/iearn/yTUSDv3.json';\nimport ETHWrapper from '../ETHWrapper/ETHWrapper';\nimport Timelock from '../contracts/Timelock.json';\nimport CurveZap from '../abis/curve/CurveZap.json';\nimport CovToken from '../abis/cover/CovToken.json';\n// import CurveSwap from '../abis/curve/CurveSwap.json';\nimport CurvePool from '../abis/curve/CurvePool.json';\nimport NexusMutual from '../NexusMutual/NexusMutual';\nimport CoverMint from '../abis/cover/CoverMint.json';\nimport LockedIDLE from '../contracts/LockedIDLE.json';\nimport { Web3Versions } from '@terminal-packages/sdk';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport PriceOracle from '../contracts/PriceOracle.json';\nimport IdleTokenV2 from '../contracts/IdleTokenV2.json';\nimport StrategyPage from '../StrategyPage/StrategyPage';\nimport BuyModal from '../utilities/components/BuyModal';\nimport IdleTokenV3 from '../contracts/IdleTokenV3.json';\nimport BatchDeposit from '../BatchDeposit/BatchDeposit';\nimport EarlyRewards from '../contracts/EarlyRewards.json';\nimport CoverProtocol from '../CoverProtocol/CoverProtocol';\nimport CurveDeposit from '../abis/curve/CurveDeposit.json';\nimport VesterFactory from '../contracts/VesterFactory.json';\nimport GovernorAlpha from '../contracts/GovernorAlpha.json';\nimport EcosystemFund from '../contracts/EcosystemFund.json';\nimport Comptroller from '../abis/compound/Comptroller.json';\nimport BalancerPool from '../abis/balancer/BalancerPool.json';\nimport IdleController from '../contracts/IdleController.json';\nimport TokenMigration from '../TokenMigration/TokenMigration';\nimport BatchMigration from '../BatchMigration/BatchMigration';\nimport IdleBatchedMint from '../contracts/IdleBatchedMint.json';\nimport { RampInstantSDK } from '@ramp-network/ramp-instant-sdk';\nimport IdleProxyMinter from '../contracts/IdleProxyMinter.json';\nimport IdleRebalancerV3 from '../contracts/IdleRebalancerV3.json';\nimport LiquidityGaugeV2 from '../abis/curve/LiquidityGaugeV2.json';\nimport IdleBatchConverter from '../contracts/IdleBatchConverter.json';\nimport UniswapV2Router02 from '../abis/uniswap/UniswapV2Router02.json';\nimport BalancerExchangeProxy from '../abis/balancer/BalancerExchangeProxy.json';\nimport IdleConverterPersonalSignV4 from '../contracts/IdleConverterPersonalSignV4.json';\n\nconst env = process.env;\n\nconst globalConfigs = {\n  appName: 'Idle',\n  version: 'v5.6',\n  baseToken: 'ETH',\n  baseURL: 'https://idle.finance',\n  forumURL:'https://gov.idle.finance',\n  theme:{\n    darkModeEnabled:true\n  },\n  betaURL: 'https://beta.idle.finance',\n  countries:{\n    'USA':'United States of America',\n    'GBR':'United Kingdom',\n    'AUS':'Australia',\n    'BRA':'Brazil',\n    'CHN':'China',\n    'CAN':'Canada',\n    'EUR':'Europe',\n    'HKG':'Hong Kong',\n    'IND':'India',\n    'MEX':'Mexico',\n    'RUS':'Russia',\n    'ZAF':'South Africa',\n    'KOR':'South Korea'\n  },\n  logs:{ // Enable logs levels\n    errorsEnabled:false,\n    messagesEnabled:false,\n  },\n  connectors:{ // Connectors props\n    metamask:{\n      enabled:true,\n      subcaption:'Browser extension'\n    },\n    opera:{\n      enabled:true,\n      subcaption:'Opera injected wallet'\n    },\n    dapper:{\n      enabled:true,\n      icon:'dapper.png',\n      subcaption:'Browser extension',\n    },\n    coinbase:{\n      enabled:true,\n      icon:'coinbase.png',\n      subcaption:'Connect with Coinbase wallet'\n    },\n    trustwallet:{\n      enabled:true,\n      subcaption:'Connect with Trust Wallet'\n    },\n    walletconnect:{\n      enabled:true,\n      iconModal:'walletconnect.png',\n      subcaption:'Connect with QR code'\n    },\n    walletlink:{\n      enabled:true,\n      icon:'coinbase.png',\n      name:'Coinbase Wallet',\n      subcaption:'Connect with QR code'\n    },\n    fortmatic:{\n      enabled:true,\n      subcaption:'Login with phone-number'\n    },\n    portis:{\n      enabled:true,\n      subcaption:'Login with e-mail'\n    },\n    authereum:{\n      enabled:true,\n      subcaption:'Cross-device wallet'\n    },\n    torus:{\n      enabled:true,\n      icon:'torus.png',\n      subcaption:'One-Click login for Web 3.0'\n    },\n    trezor:{\n      enabled:true,\n      subcaption:'Hardware wallet'\n    },\n    ledger:{\n      enabled:true,\n      subcaption:'Hardware wallet'\n    },\n    custom:{\n      enabled:true,\n      icon:'tokens/ETH.svg',\n      subcaption:'Custom address'\n    }\n  },\n  newsletterSubscription:{\n    endpoint:'https://dev.lapisgroup.it/idle/newsletter.php'\n  },\n  messages:{\n    scoreShort:'Protocol Risk Score',\n    apyShort:'Annual Percentage Yield',\n    tokenPrice:'The token price is calculated using Uniswap spot prices.',\n    cheapRedeem:'Amount of unlent funds available for low gas fees redeem',\n    curveBonusSlippage:'Slippage or bonus depending on if the coin is low or high in the Curve Pool',\n    distributionSpeed:'The distribution indicates the amount of tokens distributed for the entire pool.',\n    directMint:'Pay an additional gas fee to rebalance the pool and help all users gain an additional APR',\n    performanceFee:'This fee is charged on positive returns generated by Idle including accrued gov tokens except IDLE',\n    govTokenApr:'Governance Token APR is calculated using the spot price from Uniswap and the current distribution speed for the specific pool.',\n    userDistributionSpeed:'The distribution indicates the amount of tokens distributed for your account based on your current pool share.',\n    govTokenRedeemableBalance:'The redeemable balance is re-calculated on every interaction with the smart-contract so, the shown balance may be lower than the real one.',\n    riskScoreShort:'It\\'s a single, consistently, comparable value for measuring protocol risk, based on factors including smart contract risk, collateralization and liquidity.',\n    batchDepositExecutionSchedule:'Batches are executed twice a week, usually on Sunday and Wednesday, and only when the pool size reaches at least 20,000$. The time of each execution will vary depending on the gas price of the Ethereum network.',\n    apyLong:'APY is based on (I) the current yield advertised by the underlying protocol, (II) the current distribution rate of governance tokens provided by underlying lending protocols (III) the current estimated price of governance tokens from Uniswap spot prices. (IV) IDLE token distribution is referred to the entire pool.',\n    yieldFarming:'Strategies in Idle now will be able to support and distribute a vast range of yield opportunities across multiple protocols. Users will be able to receive their equivalent share of governance token that the protocol is receiving while allocating liquidity to yield farming opportunities. <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://idlefinance.medium.com/idle-yield-farming-upgrade-18e4bc483c8f\">Read more here</a>.',\n    riskScore:`It's a single, consistently, comparable value for measuring protocol risk, based on factors including smart contract risk, collateralization and liquidity.<br /><br />The model outputs a 0-10 score, where <strong>0 is the most risky and 10 is the most safe.</strong> Visit <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://defiscore.io/overview\">https://defiscore.io/overview</a> for further information.`,\n    curveInstructions:`<strong>Depositing into the pool:</strong><br />By depositing your funds into the Curve Pool you may incur in slippage or bonus depending on if the coin is low or high in the pool.<br /><br /><strong>Withdrawing share from the pool:</strong><br />When you redeem your tokens previously deposited in the Curve Pool you get back an uneven amounts of tokens, that can give slippage or bonus depending on if the coin is low or high in the pool.`\n  },\n  analytics:{\n    google:{\n      events:{\n        enabled:true, // Enable Google Analytics events\n        debugEnabled:false, // Enable sending for test environments\n        addPostfixForTestnet:true // Append testnet to eventCategory\n      }\n    }\n  },\n  modals:{ // Enable modals\n    first_deposit_referral:false, // Referral share modal\n    first_deposit_share:true, // First deposit share modal\n    migrate:{\n      enabled:true\n    },\n    welcome:{ // Welcome modal\n      enabled:true,\n      frequency:604800 // One week\n    }\n  },\n  dashboard:{\n    baseRoute:'/dashboard',\n    theme:{\n      mode:'light',\n      darkModeEnabled:true\n    },\n  },\n  governance:{\n    test:false,\n    enabled:true,\n    startBlock:11333729,\n    baseRoute:'/governance',\n    props:{\n      tokenName:'IDLE',\n      availableContracts:{\n        IDLE,\n        PriceOracle,\n        GovernorAlpha,\n        EcosystemFund,\n        IdleController\n      }\n    },\n    contracts:{\n      delegates:'IDLE',\n      governance:'GovernorAlpha',\n    }\n  },\n  curve:{\n    enabled:false,\n    params:{\n      n_coins:3,\n      label:'Curve',\n      route:'/dashboard/curve',\n      image:'images/protocols/curve.svg',\n      imageInactive:'images/protocols/curve-off.svg',\n    },\n    rates:{\n      path:['apy','day','idle'],\n      endpoint:'https://www.curve.fi/raw-stats/apys.json'\n    },\n    poolContract:{\n      decimals:18,\n      abi:CurvePool,\n      name:'idleDAI+idleUSDC+idleUSDT',\n      token:'idleDAI+idleUSDC+idleUSDT',\n      address:'0x09f4b84a87fc81fc84220fd7287b613b8a9d4c05'\n    },\n    depositContract:{\n      abi:CurveDeposit,\n      name:'idleCurveDeposit',\n      address:'0x83f252f036761a1e3d10daca8e16d7b21e3744d7'\n    },\n    gaugeContract:{\n      abi:LiquidityGaugeV2,\n      name:'LiquidityGaugeV2',\n      address:'0xd69ac8d9D25e99446171B5D0B3E4234dAd294890'\n    },\n    zapContract:{\n      abi:CurveZap,\n      name:'idleCurveZap',\n      address:'0x456974df1042ba7a46fd49512a8778ac3b840a21'\n    },\n    migrationContract:{\n      abi:CurveDeposit,\n      name:'idleCurveDeposit',\n      address:'0x83f252f036761a1e3d10daca8e16d7b21e3744d7',\n      functions:[\n        {\n          label:'Deposit',\n          name:'add_liquidity'\n        },\n      ]\n    },\n    availableTokens:{\n      idleDAIYield:{\n        decimals:18,\n        enabled:true,\n        baseToken:'DAI',\n        token:'idleDAIYield',\n        address:'0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        migrationParams:{\n          n_coins:3,\n          coinIndex:0\n        },\n      },\n      idleUSDCYield:{\n        decimals:18,\n        enabled:true,\n        baseToken:'USDC',\n        token:'idleUSDCYield',\n        address:'0x5274891bEC421B39D23760c04A6755eCB444797C',\n        migrationParams:{\n          n_coins:3,\n          coinIndex:1\n        },\n      },\n      idleUSDTYield:{\n        decimals:18,\n        enabled:true,\n        baseToken:'USDT',\n        token:'idleUSDTYield',\n        address:'0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        migrationParams:{\n          n_coins:3,\n          coinIndex:2\n        },\n      },\n    }\n  },\n  permit:{\n    DAI:{\n      version:1,\n      EIPVersion:null,\n      nonceMethod:'nonces',\n      name:'Dai Stablecoin',\n      type:[\n        { name: \"holder\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"expiry\", type: \"uint256\" },\n        { name: \"allowed\", type: \"bool\" },\n      ]\n    },\n    USDC:{\n      version:2,\n      name:'USD Coin',\n      EIPVersion:2612,\n      nonceMethod:'nonces',\n      type:[\n        { name: \"owner\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"value\", type: \"uint256\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"deadline\", type: \"uint256\" },\n      ]\n    }\n  },\n  govTokens:{\n    IDLE:{\n      abi:IDLE,\n      decimals:18,\n      token:'IDLE',\n      enabled:true,\n      showAUM:false, // Include IDLE balance in AUM\n      showAPR:false, // Include IDLE Apr\n      protocol:'idle',\n      showPrice:false, // Show price in Yield Farming section\n      disabledTokens:[], // Disable IDLE distribution for idleToken\n      showBalance:false, // Include IDLE balance in Portfolio Donut\n      aprTooltipMode:false,\n      distributionFrequency:'day', // Multiply distribution per block\n      color:'hsl(162, 100%, 41%)',\n      icon:'images/tokens/IDLE.png',\n      address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e' // MAIN\n      // address:'0xAB6Bdb5CCF38ECDa7A92d04E86f7c53Eb72833dF', // KOVAN\n    },\n    COMP:{\n      abi:COMP,\n      decimals:18,\n      token:'COMP',\n      enabled:true,\n      showAUM:true, // Include IDLE balance in AUM\n      showAPR:true, // Include COMP Apr\n      showPrice:true,\n      showBalance:true, // Include COMP balance in Portfolio Donut\n      disabledTokens:[],\n      protocol:'compound',\n      aprTooltipMode:false,\n      distributionFrequency:'day',\n      color:'hsl(162, 100%, 41%)',\n      address:'0xc00e94cb662c3520282e6f5717214004a7f26888', // MAIN\n      // address:'0x61460874a7196d6a22d1ee4922473664b3e95270' // KOVAN\n    }\n  },\n  contracts:{\n    LockedIDLE:{\n      abi:LockedIDLE,\n      address:'0xF241a0151841AE2E6ea750D50C5794b5EDC31D99'\n    },\n    PriceOracle:{\n      abi:PriceOracle,\n      address:'0x972A64d108e250dF98dbeac8170678501f5EF181' // MAIN\n      // address:'0xCab5760688db837Bb453FE1DFBC5eDeE6fa8F0FF' // KOVAN\n    },\n    Timelock:{\n      abi:Timelock,\n      address:'0xD6dABBc2b275114a2366555d6C481EF08FDC2556' // MAIN\n      // address:'0xfD88D7E737a06Aa9c62B950C1cB5eE63DA379AFd' // KOVAN\n    },\n    EcosystemFund:{\n      abi:EcosystemFund,\n      address:'0xb0aA1f98523Ec15932dd5fAAC5d86e57115571C7' // MAIN\n      // address:'0x125d3D6A8e546BD13802c309429CBB4db5737d57' // KOVAN\n    },\n    VesterFactory:{\n      abi:VesterFactory,\n      address:'0xbF875f2C6e4Cc1688dfe4ECf79583193B6089972' // MAIN\n      // address:'0x9b52f91578c8AfA8e2DF07d4D7726bB6b73Ec1FE' // KOVAN\n    },\n    IdleController:{\n      abi:IdleController,\n      address:'0x275DA8e61ea8E02d51EDd8d0DC5c0E62b4CDB0BE' // MAIN\n      // address:'0x8Ad5F0644b17208c81bA5BDBe689c9bcc7143d87' // KOVAN\n    },\n    EarlyRewards:{\n        abi:EarlyRewards,\n        address:'0xa1F71ED24ABA6c8Da8ca8C046bBc9804625d88Fc' // MAIN\n        // address:'0x07A94A60B54c6b2Da19e23D6E9123180Bf92ED40' // KOVAN\n    },\n    GovernorAlpha:{\n      abi:GovernorAlpha,\n      address:'0x2256b25CFC8E35c3135664FD03E77595042fe31B' // MAIN\n      // address:'0x782cB1dbd0bD4df95c2497819be3984EeA5c2c25' // KOVAN\n    },\n    Comptroller:{\n      abi:Comptroller,\n      address:'0x3d9819210a31b4961b30ef54be2aed79b9c9cd3b', // Main\n      // address:'0x5eae89dc1c671724a672ff0630122ee834098657' // Kovan\n    },\n    UniswapRouter:{\n      abi:UniswapV2Router02,\n      address:'0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D'\n    },\n    BalancerExchangeProxy:{\n      abi:BalancerExchangeProxy,\n      address:'0x3E66B66Fd1d0b02fDa6C811Da9E0547970DB2f21'\n    }\n  },\n  tokens:{\n    DAI:{\n      zeroExInstant:{\n        orderSource: 'https://api.0x.org/sra/',\n        assetData:'0xf47261b00000000000000000000000006b175474e89094c44da98b954eedeac495271d0f',\n        affiliateInfo: {\n            feeRecipient: '0x4215606a720477178AdFCd5A59775C63138711e8',\n            feePercentage: 0.0025\n        },\n      },\n    },\n    USDC:{\n      zeroExInstant:{\n        orderSource: 'https://api.0x.org/sra/',\n        assetData:'0xf47261b0000000000000000000000000a0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        affiliateInfo: {\n            feeRecipient: '0x4215606a720477178AdFCd5A59775C63138711e8',\n            feePercentage: 0.0025\n        },\n      },\n    },\n  },\n  strategies:{\n    best:{\n      token:'DAI',\n      color:'#f32121',\n      comingSoon:false,\n      addGovTokens:true,\n      titlePostfix:null,\n      title:'Best-Yield',\n      iconName:'Whatshot',\n      govTokensEnabled:true,\n      component: StrategyPage,\n      chartColor:'hsl(40,95%,59%)',\n      icon:'images/strategies/best-on.svg',\n      iconInactive:'images/strategies/best-off.svg',\n      iconInactiveDark:'images/strategies/best-white.svg',\n      desc:'Maximize your returns across DeFi protocols',\n      descLong:'The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols. Idle’s monitoring system automatically triggers a rebalance if it spots a better-performing allocation: this includes taking account of the total liquidity within the pool, incorporating underlying protocol rate functions and levels of supply and demand. As a user, you will end up with an higher return without constantly checking rates and burning gas on every transfer. Unlock your funds from a single protocol performance with this strategy.',\n      descShort:'The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols.'\n    },\n    risk:{\n      token:'DAI',\n      color:'#2196F3',\n      comingSoon:false,\n      titlePostfix:null,\n      addGovTokens:true,\n      iconName:'Security',\n      title:'Risk-Adjusted',\n      govTokensEnabled:true,\n      component: StrategyPage,\n      chartColor:'hsl(211,67%,47%)',\n      icon:'images/strategies/risk-on.svg',\n      iconInactive:'images/strategies/risk-off.svg',\n      iconInactiveDark:'images/strategies/risk-white.svg',\n      desc:'Optimize your risk exposure across DeFi protocols',\n      descLong:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level. The risk-management algorithm takes account of the total assets within a pool, incorporates underlying protocol rate functions and levels of supply and demand, skimming protocols with a bad score/rate mix, and finally determining an allocation that achieves the highest risk-return score possible after the rebalance happens.',\n      descShort:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level.'\n    },\n    new:{\n      token:'DAI',\n      color:'#2196F3',\n      comingSoon:true,\n      addGovTokens:true,\n      iconName:'Adjust',\n      title:'Coming Soon',\n      chartColor:'hsl(211,67%,47%)',\n      icon:'images/strategies/solr-on.svg',\n      desc:'More strategies are coming soon!',\n      iconInactive:'images/strategies/solr-off.svg',\n      descLong:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level. The risk-management algorithm takes account of the total assets within a pool, incorporates underlying protocol rate functions and levels of supply and demand, skimming protocols with a bad score/rate mix, and finally determining an allocation that achieves the highest risk-return score possible after the rebalance happens.',\n      descShort:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level.'\n    }\n  },\n  stats:{\n    enabled:true, // Enable endpoint\n    rates:{\n      TTL:300, // 5 minutes\n      endpoint:'https://api.idle.finance/rates/'\n    },\n    tvls:{\n      TTL:120,\n      endpoint:'https://api.idle.finance/tvls/'\n    },\n    substack:{\n      TTL:1800,\n      endpoint:'https://api.idle.finance/substack/'\n    },\n    scores:{\n      TTL:300, // 5 minutes\n      endpoint:'https://api.idle.finance/scores/'\n    },\n    versions:{\n      /*\n      v2:{\n        label:'Idle V2',\n        startTimestamp:null,\n        additionalProtocols:[],\n        endTimestamp:1589752999,\n        enabledStrategies:['best'],\n        showPerformanceTooltip:false,\n        enabledTokens:['DAI','USDC'],\n      },\n      */\n      v3:{\n        label:'Idle V3',\n        additionalProtocols:[],\n        endTimestamp:1597237542,\n        startTimestamp:1589801874,\n        showPerformanceTooltip:false,\n        strategiesParams:{\n          risk:{\n            endTimestamp:1597233922,\n          }\n        },\n        enabledStrategies:['best','risk'],\n        enabledTokens:['DAI','USDC','USDT','TUSD','SUSD','WBTC'],\n      },\n      v4:{\n        label:'Idle V4',\n        endTimestamp:null,\n        startTimestamp:1597442400, // 1598220000\n        enabledStrategies:['best','risk'],\n        showPerformanceTooltip:true,\n        strategiesParams:{\n          risk:{\n            startTimestamp:1599183170,\n          }\n        },\n        enabledTokens:['DAI','USDC','USDT','TUSD','SUSD','WBTC','WETH'],\n        additionalProtocols:[\n          {\n            decimals:16,\n            protocol:'compound',\n            name:'compoundWithCOMP',\n          }\n        ]\n      }\n    },\n    tokens:{\n      DAI:{\n        decimals:18,\n        enabled:true,\n        color:{\n          rgb:[250,184,51],\n          hex:'#F7B24A',\n          hsl:['40', '95%', '59%']\n        },\n        chart:{\n          labelTextColorModifiers:['darker', 2]\n        },\n        startTimestamp:'2020-02-11',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      USD:{\n        enabled:true,\n        color:{\n          hex:'#85bb65',\n          rgb:[133, 187, 101],\n          hsl:['98', '39%', '56%']\n        },\n        chart:{\n          labelTextColorModifiers:['brighter', 2]\n        },\n        address:null,\n        startTimestamp:'2020-02-04',\n      },\n      USDC:{\n        decimals:6,\n        enabled:true,\n        color:{\n          hex:'#2875C8',\n          rgb:[40,117,200],\n          hsl:['211', '67%', '47%']\n        },\n        chart:{\n          labelTextColorModifiers:['brighter', 2]\n        },\n        startTimestamp:'2020-02-04',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      USDT:{\n        decimals:6,\n        enabled:true,\n        color:{\n          hex:'#22a079',\n          rgb:[34, 160, 121],\n          hsl:['161', '65%', '38%']\n        },\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        startTimestamp:'2020-02-04',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      TUSD:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'0340a1',\n          rgb:[3, 64, 161],\n          hsl:['217', '96%', '32%']\n        },\n        chart:{\n          labelTextColorModifiers:['brighter', 5]\n        },\n        startTimestamp:'2020-06-22',\n        address:'0x0000000000085d4780b73119b644ae5ecd22b376',\n      },\n      SUSD:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#1e1a31',\n          rgb:[30, 26, 49],\n          hsl:['250', '31%', '15%']\n        },\n        chart:{\n          labelTextColorModifiers:['brighter', 5]\n        },\n        startTimestamp:'2020-06-22',\n        address:'0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n      },\n      WBTC:{\n        decimals:8,\n        enabled:true,\n        color:{\n          hex:'#eb9444',\n          rgb:[235, 148, 68],\n          hsl:['29', '81%', '59%']\n        },\n        startTimestamp:'2020-06-15',\n        conversionRateField:'wbtcDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4],\n        },\n        address:'0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      WETH:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#ee1f79',\n          rgb:[238, 31, 121],\n          hsl:['334', '86%', '53%']\n        },\n        startTimestamp:'2021-02-16',\n        conversionRateField:'wethDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4],\n        },\n        address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      COMP:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#00d395',\n          rgb:[0, 211, 149],\n          hsl:['162', '100%', '41%']\n        },\n        startTimestamp:'2020-06-15',\n        conversionRateField:'compDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        address:'0xc00e94cb662c3520282e6f5717214004a7f26888',\n      },\n      IDLE:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#0d55bb',\n          rgb:[13, 85, 187],\n          hsl:['215', '87%', '39%']\n        },\n        startTimestamp:'2020-11-10',\n        icon:'images/tokens/IDLE.png',\n        conversionRateField:'idleDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        address:'0xc00e94cb662c3520282e6f5717214004a7f26888',\n      },\n      'idleDAI+idleUSDC+idleUSDT':{\n        decimals:18,\n        enabled:false,\n        name:'Curve.fi',\n        color:{\n          hex:'#ff0000',\n          rgb:[255, 0, 0],\n          hsl:['0', '100%', '50%']\n        },\n        startTimestamp:'2020-06-15',\n      },\n    },\n    protocols:{\n      compound:{\n        legend:true,\n        enabled:true,\n        label:'Compound',\n        color:{\n          rgb:[0, 209, 146],\n          hsl:['162', '100%', '41%']\n        }\n      },\n      compoundWithCOMP:{\n        enabled:true,\n        rateField:['rate','compoundAdditionalAPR'],\n        label:'Compound + COMP',\n        color:{\n          rgb:[0, 153, 107],\n          hsl:['162', '100%', '30%']\n        }\n      },\n      fulcrum:{\n        legend:false,\n        enabled:false,\n        label:'Fulcrum',\n        color:{\n          rgb:[2, 138, 192],\n          hsl:['197', '98%', '38%']\n        }\n      },\n      dsr:{\n        label:'DSR',\n        enabled:false,\n        icon:'CHAI.png',\n        color:{\n          rgb:[222, 52, 67],\n          hsl:['355', '72%', '54%']\n        }\n      },\n      dydx:{\n        legend:true,\n        label:'DyDx',\n        enabled:true,\n        color:{\n          rgb:[87, 87, 90],\n          hsl:['240', '2%', '35%']\n        }\n      },\n      iearn:{\n        label:'Yearn',\n        enabled:true,\n      },\n      aave:{\n        label:'Aave V1',\n        legend:true,\n        enabled:true,\n        color:{\n          rgb:[230, 131, 206],\n          hsl:['315', '66%', '71%']\n        }\n      },\n      aavev2:{\n        legend:true,\n        enabled:true,\n        icon:'aave.svg',\n        label:'Aave V2',\n        color:{\n          rgb:[151, 79, 141],\n          hsl:['308', '31%', '45%']\n        }\n      },\n      curve:{\n        label:'',\n        enabled:true,\n        color:{\n          rgb:[0, 55, 255],\n          hsl:['227', '100%', '50%']\n        }\n      },\n      idle:{\n        label:'Idle',\n        enabled:true,\n        color:{\n          rgb:[0, 55, 255],\n          hsl:['227', '100%', '50%']\n        }\n      }\n    }\n  },\n  contract:{\n    methods:{\n      redeem:{\n        skipRebalance:true,\n        metaTransactionsEnabled:false\n      },\n      deposit:{\n        skipMint:true,\n        minAmountForMint:100000,\n        skipMintCheckboxEnabled:true,\n        metaTransactionsEnabled:false,\n        proxyContract:{\n          enabled:false,\n          abi:IdleProxyMinter,\n          name:'IdleProxyMinter',\n          function:'mintIdleTokensProxy',\n          address:'0x7C4414aA6B0c6CB1Bc7e5BFb7433138426AC637a',\n        }\n      },\n      migrate:{\n        skipRebalance:true,\n        minAmountForRebalance:10000,\n        minAmountForRebalanceMetaTx:10000\n      },\n      redeemGovTokens:{\n        enabled:true\n      },\n      rebalance:{\n        enabled:true,\n        abi:IdleRebalancerV3\n      }\n    }\n  },\n  network:{ // Network configurations\n    availableNetworks:{\n      1:'Mainnet',\n      3:'Ropsten',\n      4:'Rinkeby',\n      42:'Kovan',\n      1337:'Hardhat'\n    },\n    isForked:false, // If TRUE the tx confirmation callback is fired on the receipt\n    requiredNetwork:1, // { 1: Mainnet, 3: Ropsten, 42: Kovan }\n    blocksPerYear:2371428,\n    firstBlockNumber:8119247,\n    requiredConfirmations: 1,\n    accountBalanceMinimum: 0, // in ETH for gas fees\n    providers:{\n      infura:{\n        42: 'https://kovan.infura.io/v3/',\n        1: 'https://mainnet.infura.io/v3/',\n        1337: 'https://mainnet.infura.io/v3/'\n      },\n      etherscan:{\n        enabled:true, // False for empty txs list (try new wallet)\n        endpoints:{\n          1: 'https://api.etherscan.io/api',\n          1337: 'https://api.etherscan.io/api',\n          42: 'https://api-kovan.etherscan.io/api'\n        }\n      },\n      snapshot:{\n        whitelist:[\n          '0x9993ADB62085AcB05Fc493f7A1D10C11227A78fa',\n          '0xf12ce5807e3d3128B876aa1Cec0632D63547E22E'\n        ],\n        endpoints:{\n          proposals:'https://hub.snapshot.page/api/idlefinance.eth/proposals'\n        },\n        urls:{\n          proposals:'https://signal.idle.finance/#/idlefinance.eth/proposal/'\n        }\n      },\n      biconomy:{\n        enabled:false,\n        enableLogin:false,\n        supportedNetworks:[1,42],\n        disabledWallets:['authereum'],\n        endpoints:{\n          limits:'https://api.biconomy.io/api/v1/dapp/checkLimits'\n        },\n        params:{\n          debug: false,\n          apiKey: env.REACT_APP_BICONOMY_KEY,\n          dappId: env.REACT_APP_BICONOMY_APPID,\n          apiId: '36572ec9-ae5c-4c4a-9530-f3ae7c7ac829'\n        }\n      },\n      terminal:{\n        enabled:false,\n        supportedNetworks:[1,42],\n        params:{\n          apiKey: env.REACT_APP_TERMINAL_KEY,\n          projectId: env.REACT_APP_TERMINAL_PROJECT_ID,\n          source: null,\n          web3Version: Web3Versions.one\n        }\n      },\n      simpleID:{\n        enabled:false,\n        supportedNetworks:[1],\n        getNetwork:(networkId,availableNetworks) => {\n          let networkName = null;\n          switch (networkId){\n            case 1:\n              networkName = 'mainnet';\n            break;\n            default:\n              networkName = availableNetworks[networkId] ? availableNetworks[networkId].toLowerCase() : 'mainnet';\n            break;\n          }\n          return networkName;\n        },\n        params:{\n          appOrigin: window.location.origin,\n          appName: \"Idle\",\n          appId: \"eb4d1754-a76e-4c58-8422-54b5ca2395e7\",\n          renderNotifications: false,\n          network: 'mainnet'\n        }\n      }\n    }\n  },\n  notifications:[\n    {\n      enabled:false,\n      end:1612282726374,\n      start:1611677841027,\n      date:'Jan 26, 2021 16:18 UTC',\n      title:'Cover Protocol Available',\n      hash:'/dashboard/tools/cover-protocol',\n      image:'/images/protocols/cover-logo.svg',\n      text:'Protect your portfolio with Cover Protocol',\n    }\n  ],\n  tools:{\n    ethWrapper:{\n      enabled:true,\n      label:'ETH Wrapper',\n      route:'eth-wrapper',\n      subComponent:ETHWrapper,\n      image:'images/tokens/WETH.svg',\n      desc:'Wrap your ETH and get WETH. Unwrap your WETH and get back ETH.',\n      props:{\n        contract:{\n          abi:WETH,\n          name:'WETH',\n          decimals:18,\n          token:'WETH',\n          address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2'\n        },\n      }\n    },\n    coverProtocol:{\n      enabled:false,\n      label:'Cover Protocol',\n      route:'cover-protocol',\n      subComponent:CoverProtocol,\n      image:'images/protocols/cover-logo.svg',\n      desc:'Get your Idle Portfolio covered against Smart Contract risk',\n      fileClaimUrl:'https://app.coverprotocol.com/app/claims/new?protocol=IDLE',\n      props:{\n        contract:{\n          decimals:18,\n          abi:CoverMint,\n          name:'CoverMint',\n          address:'0x46f2f34742c1d9b9b220aabf0ff26bf59ec9f8a0'\n        },\n        coverages:[\n          {\n            collateral:'DAI',\n            expirationTimestamp:1614470400,\n            tokens:{\n              Claim:{\n                abi:CovToken,\n                name:'COVER_IDLE_2021_02_28_DAI_0_CLAIM',\n                address:'0xa7dac6774e5e40f56a0bf06af6cf9b1f3d037bcc',\n                balancerPool:{\n                  decimals:18,\n                  abi:BalancerPool,\n                  name:'BAL_COVER_IDLE_2021_02_28_DAI_0_CLAIM',\n                  address:'0xeb2b9959c7943eb3c0bdb69ede25247bab4d1c6c',\n                }\n              },\n              NoClaim:{\n                abi:CovToken,\n                name:'COVER_IDLE_2021_02_28_DAI_0_NOCLAIM',\n                address:'0x53df0bfa014b7522299c129c5a7b318f02adb469',\n                balancerPool:{\n                  decimals:18,\n                  abi:BalancerPool,\n                  name:'BAL_COVER_IDLE_2021_02_28_DAI_0_NOCLAIM',\n                  address:'0xce0e9e7a1163badb7ee79cfe96b5148e178cab73',\n                }\n              }\n            }\n          },\n        ],\n      }\n    },\n    batchDeposit:{\n      enabled:true,\n      icon:'Storage',\n      claimEnabled:true,\n      depositEnabled:true,\n      route:'batch-deposit',\n      label:'Batch Deposit',\n      subComponent:BatchDeposit,\n      desc:'Deposit your tokens in the batch and wait until its execution to claim your Idle Tokens V4',\n      props:{\n        availableTokens:{\n          idleDAIYield:{\n            decimals:18,\n            strategy:'best',\n            baseToken:'DAI',\n            minPoolSize:20000,\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintDAI',\n              address:'0x633fb4d38B24dC890b11Db2AE2B248D13F996A79', // Main\n              // address:'0x1B7bA0361A15CCF62521cF7d2Cbb2Ba90b1521a7', // Kovan\n              functions:[\n                {\n                  name:'deposit',\n                  usePermit:true,\n                  label:'Deposit',\n                  permitName:'permitAndDeposit'\n                },\n              ]\n            },\n          },\n          idleUSDCYield:{\n            decimals:6,\n            strategy:'best',\n            baseToken:'USDC',\n            minPoolSize:20000,\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintUSDC',\n              address:'0x562C4fd96F0652F5Fcfa96b0a33088B5a6eAeE9B', // Main\n              // address:'0x3F35eB839f91b614195a47A593dB46b14cd7EaF8', // Kovan\n              functions:[\n                {\n                  name:'deposit',\n                  label:'Deposit',\n                  usePermit:true,\n                  permitName:'permitEIP2612AndDepositUnlimited'\n                },\n              ]\n            },\n          },\n          /*\n          idleUSDTYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'USDT',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintUSDT',\n              address:'0xee5c50c7c49dec47dde2f9b0233b9e14a8f00cf2',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleSUSDYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'SUSD',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintSUSD',\n              address:'0xE2eE519399a49f1A2004a25DA61e82867A69b9b1',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleTUSDYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'TUSD',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintTUSD',\n              address:'0x174a273f0ea28e55b6dd13259aa43d262b863a86',\n              functions:[\n                {\n                  usePermit:true,\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleWBTCYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'WBTC',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintWBTC',\n              address:'0xbfDC7d97559173B52EF2A2f1bC9BeCf97B0D401D',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleDAISafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'DAI',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintDAISafe',\n              address:'0x08db226d63cE724A6091Ba82D28dFc76ceCa23d8',\n              functions:[\n                {\n                  name:'deposit',\n                  label:'Deposit',\n                  usePermit:true,\n                },\n              ]\n            },\n          },\n          idleUSDCSafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'USDC',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintUSDCSafe',\n              address:'0xA6C89A31D59f9C68D9Cba28d690C5E52058fb472',\n              functions:[\n                {\n                  name:'deposit',\n                  label:'Deposit',\n                  usePermit:true,\n                },\n              ]\n            },\n          },\n          idleUSDTSafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'USDT',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintUSDTSafe',\n              address:'0xd47B96Fb33b79a4Dd81a2bfa676eBB669166f619',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          }\n          */\n        }\n      }\n    },\n    batchMigration:{\n      enabled:true,\n      claimEnabled:true,\n      depositEnabled:false,\n      icon:'FileDownload',\n      route:'batch-migration',\n      label:'Batch Migration',\n      subComponent:BatchMigration,\n      desc:'Deposit your Idle Tokens V3 into a batch and wait until its conversion to the Idle Token V4',\n      props:{\n        availableTokens:{\n          idleDAIYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'DAI',\n            name:'idleDAIYieldV3',\n            token:'idleDAIYieldV3',\n            address:'0x78751b12da02728f467a44eac40f5cbc16bd7934',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterDAI',\n              address:'0xe0BfD08dA4DAf8f8BA11d1c3802009E75f963497',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleUSDCYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'USDC',\n            name:'idleUSDCYieldV3',\n            token:'idleUSDCYieldV3',\n            address:'0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterUSDC',\n              address:'0x86c8b56d124c2a8e7ea8a9e6a7f8ed99dde5cca8',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleUSDTYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'USDT',\n            name:'idleUSDTYieldV3',\n            token:'idleUSDTYieldV3',\n            address:'0x63D27B3DA94A9E871222CB0A32232674B02D2f2D',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterUSDT',\n              address:'0xee5c50c7c49dec47dde2f9b0233b9e14a8f00cf2',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleSUSDYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'SUSD',\n            name:'idleSUSDYieldV3',\n            token:'idleSUSDYieldV3',\n            address:'0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterSUSD',\n              address:'0xE2eE519399a49f1A2004a25DA61e82867A69b9b1',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleTUSDYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'TUSD',\n            name:'idleTUSDYieldV3',\n            token:'idleTUSDYieldV3',\n            address:'0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterTUSD',\n              address:'0x174a273f0ea28e55b6dd13259aa43d262b863a86',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleWBTCYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'WBTC',\n            name:'idleWBTCYieldV3',\n            token:'idleWBTCYieldV3',\n            address:'0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterWBTC',\n              address:'0xbfDC7d97559173B52EF2A2f1bC9BeCf97B0D401D',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleDAISafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'DAI',\n            name:'idleDAISafeV3',\n            token:'idleDAISafeV3',\n            address:'0x1846bdfDB6A0f5c473dEc610144513bd071999fB',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterDAISafe',\n              address:'0x08db226d63cE724A6091Ba82D28dFc76ceCa23d8',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleUSDCSafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'USDC',\n            name:'idleUSDCSafeV3',\n            token:'idleUSDCSafeV3',\n            address:'0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterUSDCSafe',\n              address:'0xA6C89A31D59f9C68D9Cba28d690C5E52058fb472',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleUSDTSafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'USDT',\n            name:'idleUSDTSafeV3',\n            token:'idleUSDTSafeV3',\n            address:'0x42740698959761baf1b06baa51efbd88cb1d862b',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterUSDTSafe',\n              address:'0xd47B96Fb33b79a4Dd81a2bfa676eBB669166f619',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          }\n        }\n      }\n    },\n    tokenMigration:{\n      enabled:true,\n      icon:'SwapHoriz',\n      route:'convert',\n      label:'Token Migration',\n      desc:'Easily convert your Compound, Fulcrum, Aave and iEarn tokens into Idle',\n      subComponent:TokenMigration,\n      props:{\n        migrationContract:{\n          name:'IdleConverterV4',\n          abi:IdleConverterPersonalSignV4,\n          address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n          oldAddresses:[],\n          functions:[\n            {\n              label:'Migrate',\n              name:'migrateFromToIdle'\n            },\n          ]\n        },\n        availableStrategies:['best','risk'],\n        availableTokens:{\n          idleDAIv2:{\n            decimals:18,\n            enabled:true,\n            protocol:'idle',\n            baseToken:'DAI',\n            abi:IdleTokenV2,\n            token:'idleDAIOld',\n            icon:'images/tokens/idleDAI.svg',\n            migrateFunction:'migrateFromToIdle',\n            address:'0x10eC0D497824e342bCB0EDcE00959142aAa766dD',\n          },\n          cDAI:{\n            decimals:8,\n            enabled:true,\n            token:\"cDAI\",\n            baseToken:'DAI',\n            protocol:\"compound\",\n            migrateFunction:'migrateFromCompoundToIdle',\n            address:\"0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643\",\n          },\n          iDAI:{\n            decimals:18,\n            enabled:false,\n            token:\"iDAI\",\n            baseToken:'DAI',\n            protocol:\"fulcrum\",\n            migrateFunction:'migrateFromFulcrumToIdle',\n            address:\"0x493c57c4763932315a328269e1adad09653b9081\",\n          },\n          aDAI:{\n            decimals:18,\n            enabled:true,\n            token:\"aDAI\",\n            protocol:\"aave\",\n            baseToken:'DAI',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d\",\n          },\n          yDAIv3:{\n            decimals:18,\n            enabled:true,\n            token:\"yDAIv3\",\n            abi:yDAIv3.abi,\n            baseToken:'DAI',\n            protocol:\"iearn\",\n            icon:'images/tokens/yDAI.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0xC2cB1040220768554cf699b0d863A3cd4324ce32\",\n          },\n          yDAIv2:{\n            decimals:18,\n            enabled:true,\n            token:\"yDAIv2\",\n            baseToken:'DAI',\n            abi:yDAIv3.abi,\n            protocol:\"iearn\",\n            icon:'images/tokens/yDAI.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0x16de59092dAE5CcF4A1E6439D611fd0653f0Bd01\",\n          },\n          idleUSDCv2:{\n            decimals:18,\n            enabled:true,\n            protocol:'idle',\n            abi:IdleTokenV2,\n            baseToken:'USDC',\n            token:'idleUSDCOld',\n            icon:'images/tokens/idleUSDC.svg',\n            migrateFunction:'migrateFromToIdle',\n            address:'0xeB66ACc3d011056B00ea521F8203580C2E5d3991',\n          },\n          cUSDC:{\n            decimals:8,\n            enabled:true,\n            token:\"cUSDC\",\n            baseToken:'USDC',\n            protocol:\"compound\",\n            migrateFunction:'migrateFromCompoundToIdle',\n            address:\"0x39aa39c021dfbae8fac545936693ac917d5e7563\",\n          },\n          iUSDC:{\n            decimals:6,\n            enabled:false,\n            token:\"iUSDC\",\n            baseToken:'USDC',\n            protocol:\"fulcrum\",\n            migrateFunction:'migrateFromFulcrumToIdle',\n            address:\"0xf013406a0b1d544238083df0b93ad0d2cbe0f65f\",\n          },\n          aUSDC:{\n            decimals:6,\n            enabled:true,\n            token:\"aUSDC\",\n            protocol:\"aave\",\n            baseToken:'USDC',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0x9bA00D6856a4eDF4665BcA2C2309936572473B7E\",\n          },\n          yUSDCv3:{\n            decimals:6,\n            enabled:true,\n            token:\"yUSDCv3\",\n            protocol:\"iearn\",\n            abi:yUSDCv3.abi,\n            baseToken:'USDC',\n            icon:'images/tokens/yUSDC.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0x26EA744E5B887E5205727f55dFBE8685e3b21951\",\n          },\n          yUSDCv2:{\n            decimals:6,\n            enabled:true,\n            token:\"yUSDCv2\",\n            protocol:\"iearn\",\n            abi:yUSDCv3.abi,\n            baseToken:'USDC',\n            icon:'images/tokens/yUSDC.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0xd6aD7a6750A7593E092a9B218d66C0A814a3436e\",\n          },\n          cUSDT:{\n            decimals:8,\n            enabled:true,\n            token:\"cUSDT\",\n            baseToken:'USDT',\n            protocol:\"compound\",\n            migrateFunction:'migrateFromCompoundToIdle',\n            address:\"0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9\",\n          },\n          iUSDT:{\n            decimals:6,\n            enabled:false,\n            token:\"iUSDT\",\n            baseToken:'USDT',\n            protocol:\"fulcrum\",\n            migrateFunction:'migrateFromFulcrumToIdle',\n            address:\"0x8326645f3aa6de6420102fdb7da9e3a91855045b\",\n          },\n          aUSDT:{\n            decimals:6,\n            enabled:true,\n            token:\"aUSDT\",\n            protocol:\"aave\",\n            baseToken:'USDT',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0x71fc860F7D3A592A4a98740e39dB31d25db65ae8\",\n          },\n          yUSDTv3:{\n            decimals:6,\n            enabled:true,\n            token:\"yUSDTv3\",\n            abi:yUSDTv3.abi,\n            protocol:\"iearn\",\n            baseToken:'USDT',\n            icon:'images/tokens/yUSDT.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0xE6354ed5bC4b393a5Aad09f21c46E101e692d447\",\n          },\n          yUSDTv2:{\n            decimals:6,\n            enabled:true,\n            token:\"yUSDTv2\",\n            abi:yUSDTv3.abi,\n            protocol:\"iearn\",\n            baseToken:'USDT',\n            icon:'images/tokens/yUSDT.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0x83f798e925BcD4017Eb265844FDDAbb448f1707D\",\n          },\n          idleSUSDv2:{\n            decimals:18,\n            enabled:true,\n            abi:IdleTokenV2,\n            protocol:'idle',\n            baseToken:'SUSD',\n            token:'idleSUSDYieldOld',\n            availableStrategies:['best'],\n            migrateFunction:'migrateFromToIdle',\n            icon:'images/tokens/idleSUSDYield.svg',\n            address:'0xb39ca0261a1b2986a6a9Fe38d344B56374963dE5',\n          },\n          aSUSD:{\n            decimals:6,\n            enabled:true,\n            token:\"aSUSD\",\n            protocol:\"aave\",\n            baseToken:'SUSD',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0x625aE63000f46200499120B906716420bd059240\",\n          },\n          ySUSDv3:{\n            decimals:18,\n            enabled:true,\n            token:\"ySUSDv3\",\n            abi:ySUSDv3,\n            baseToken:'SUSD',\n            protocol:\"iearn\",\n            availableStrategies:['best'],\n            icon:'images/tokens/ySUSDv3.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0xf61718057901f84c4eec4339ef8f0d86d2b45600\",\n          },\n          idleTUSDv2:{\n            decimals:18,\n            enabled:true,\n            abi:IdleTokenV2,\n            protocol:'idle',\n            baseToken:'TUSD',\n            token:'idleTUSDYieldOld',\n            availableStrategies:['best'],\n            migrateFunction:'migrateFromToIdle',\n            icon:'images/tokens/idleTUSDYield.svg',\n            address:'0x7DB7A4a50b26602E56536189Aa94678C80F8E5b6',\n          },\n          aTUSD:{\n            decimals:6,\n            enabled:true,\n            token:\"aTUSD\",\n            protocol:\"aave\",\n            baseToken:'TUSD',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0x4DA9b813057D04BAef4e5800E36083717b4a0341\",\n          },\n          yTUSDv3:{\n            decimals:18,\n            enabled:true,\n            abi:yTUSDv3,\n            token:\"yTUSDv3\",\n            baseToken:'TUSD',\n            protocol:\"iearn\",\n            icon:'images/tokens/yTUSDv3.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0x73a052500105205d34daf004eab301916da8190f\",\n          },\n          cWBTC:{\n            decimals:8,\n            enabled:true,\n            token:\"cWBTC\",\n            baseToken:'WBTC',\n            protocol:\"compound\",\n            migrateFunction:'migrateFromCompoundToIdle',\n            address:\"0xc11b1268c1a384e55c48c2391d8d480264a3a7f4\",\n          },\n          iWBTC:{\n            decimals:8,\n            enabled:false,\n            token:\"iWBTC\",\n            baseToken:'WBTC',\n            protocol:\"fulcrum\",\n            migrateFunction:'migrateFromFulcrumToIdle',\n            address:\"0xba9262578efef8b3aff7f60cd629d6cc8859c8b5\",\n          },\n          aWBTC:{\n            decimals:8,\n            enabled:true,\n            token:\"aWBTC\",\n            protocol:\"aave\",\n            baseToken:'WBTC',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0xfc4b8ed459e00e5400be803a9bb3954234fd50e3\",\n          },\n        }\n      }\n    },\n    addFunds:{\n      enabled:true,\n      icon:'AddCircleOutline',\n      route:'add-funds',\n      label:'Add Funds',\n      desc:'Buy tokens with your Bank account, Credit card or Ethereum Wallet',\n      subComponent:BuyModal,\n      directProps:{\n        showInline:true,\n        showAllTokens:true\n      }\n    },\n    insurance:{\n      enabled:false,\n      icon:'Security',\n      route:'nexus-mutual',\n      label:'Nexus Mutual',\n      desc:'Buy tokens with Bank account or Credit card',\n      subComponent:NexusMutual,\n      props:{\n        availableTokens:{\n          \"ETH\":{\"token\":\"ETH\"},\n          \"DAI\":{\"token\":\"DAI\"},\n        }\n      },\n      directProps:{\n        ens:'idlefinancev3.nexusmutual.eth',\n        address:'0x78751B12Da02728F467A44eAc40F5cbc16Bd7934'\n      }\n    },\n    tokenSwap:{\n      enabled:true,\n      icon:'Sync',\n      route:'token-swap',\n      label:'Token Swap',\n      desc:'Easily swap your tokens using Kyber Swap widget',\n      subComponent:TokenSwap,\n      props:{\n        availableTokens:{\n          \"ETH\":{\"token\":\"ETH\"},\n          \"DAI\":{\"token\":\"DAI\"},\n          \"SUSD\":{\"token\":\"SUSD\"},\n          \"TUSD\":{\"token\":\"TUSD\"},\n          \"USDC\":{\"token\":\"USDC\"},\n          \"USDS\":{\"token\":\"USDS\"},\n          \"USDT\":{\"token\":\"USDT\"},\n          \"WBTC\":{\"token\":\"WBTC\"},\n          \"WETH\":{\"token\":\"WETH\"},\n          \"BUSD\":{\"token\":\"BUSD\"},\n          \"EURS\":{\"token\":\"EURS\"},\n          \"2KEY\":{\"token\":\"2KEY\"},\n          \"ABT\":{\"token\":\"ABT\"},\n          \"ABYSS\":{\"token\":\"ABYSS\"},\n          \"AMPL\":{\"token\":\"AMPL\"},\n          \"ANT\":{\"token\":\"ANT\"},\n          \"BAM\":{\"token\":\"BAM\"},\n          \"BAND\":{\"token\":\"BAND\"},\n          \"BAT\":{\"token\":\"BAT\"},\n          \"BLZ\":{\"token\":\"BLZ\"},\n          \"BNT\":{\"token\":\"BNT\"},\n          \"BQX\":{\"token\":\"BQX\"},\n          \"BTU\":{\"token\":\"BTU\"},\n          \"CDT\":{\"token\":\"CDT\"},\n          \"CVC\":{\"token\":\"CVC\"},\n          \"DAT\":{\"token\":\"DAT\"},\n          \"DGX\":{\"token\":\"DGX\"},\n          \"EKG\":{\"token\":\"EKG\"},\n          \"ELF\":{\"token\":\"ELF\"},\n          \"ENJ\":{\"token\":\"ENJ\"},\n          \"EQUAD\":{\"token\":\"EQUAD\"},\n          \"FXC\":{\"token\":\"FXC\"},\n          \"GDC\":{\"token\":\"GDC\"},\n          \"GEN\":{\"token\":\"GEN\"},\n          \"GHT\":{\"token\":\"GHT\"},\n          \"GNO\":{\"token\":\"GNO\"},\n          \"IOST\":{\"token\":\"IOST\"},\n          \"KEY\":{\"token\":\"KEY\"},\n          \"KNC\":{\"token\":\"KNC\"},\n          \"LEND\":{\"token\":\"LEND\"},\n          \"LINK\":{\"token\":\"LINK\"},\n          \"LOOM\":{\"token\":\"LOOM\"},\n          \"LRC\":{\"token\":\"LRC\"},\n          \"MANA\":{\"token\":\"MANA\"},\n          \"MCO\":{\"token\":\"MCO\"},\n          \"MET\":{\"token\":\"MET\"},\n          \"MFG\":{\"token\":\"MFG\"},\n          \"MKR\":{\"token\":\"MKR\"},\n          \"MLN\":{\"token\":\"MLN\"},\n          \"MTL\":{\"token\":\"MTL\"},\n          \"MYB\":{\"token\":\"MYB\"},\n          \"NEXXO\":{\"token\":\"NEXXO\"},\n          \"NPXS\":{\"token\":\"NPXS\"},\n          \"OGN\":{\"token\":\"OGN\"},\n          \"OMG\":{\"token\":\"OMG\"},\n          \"OST\":{\"token\":\"OST\"},\n          \"PAX\":{\"token\":\"PAX\"},\n          \"PBTC\":{\"token\":\"PBTC\"},\n          \"PLR\":{\"token\":\"PLR\"},\n          \"PNK\":{\"token\":\"PNK\"},\n          \"POLY\":{\"token\":\"POLY\"},\n          \"POWR\":{\"token\":\"POWR\"},\n          \"PT\":{\"token\":\"PT\"},\n          \"QKC\":{\"token\":\"QKC\"},\n          \"QNT\":{\"token\":\"QNT\"},\n          \"RAE\":{\"token\":\"RAE\"},\n          \"REN\":{\"token\":\"REN\"},\n          \"REP\":{\"token\":\"REP\"},\n          \"REQ\":{\"token\":\"REQ\"},\n          \"RLC\":{\"token\":\"RLC\"},\n          \"RSR\":{\"token\":\"RSR\"},\n          \"RSV\":{\"token\":\"RSV\"},\n          \"SAN\":{\"token\":\"SAN\"},\n          \"SNT\":{\"token\":\"SNT\"},\n          \"SNX\":{\"token\":\"SNX\"},\n          \"SPIKE\":{\"token\":\"SPIKE\"},\n          \"SPN\":{\"token\":\"SPN\"},\n          \"TKN\":{\"token\":\"TKN\"},\n          \"TKX\":{\"token\":\"TKX\"},\n          \"TRYB\":{\"token\":\"TRYB\"},\n          \"UBT\":{\"token\":\"UBT\"},\n          \"UPP\":{\"token\":\"UPP\"},\n          \"ZRX\":{\"token\":\"ZRX\"}\n        }\n      },\n      directProps:{\n      }\n    }\n  },\n  payments: { // Payment methods & providers\n    methods:{\n      bank:{\n        defaultProvider:null,\n        showDefaultOnly:false,\n        props:{\n          imageSrc:'images/bank.png',\n          caption:'Bank Account'\n        }\n      },\n      card:{\n        defaultProvider:null,\n        showDefaultOnly:false,\n        props:{\n          imageSrc:'images/debit-card.png',\n          caption:'Credit Card'\n        }\n      },\n      wallet:{\n        defaultProvider:'zeroExInstant',\n        showDefaultOnly:false,\n        props:{\n          imageSrc:'images/ethereum-wallet.svg',\n          caption:'Ethereum Wallet',\n          imageProps:{\n            padding:['0','5px']\n          }\n        }\n      },\n    },\n    providers: {\n      wyre: {\n        enabled: true,\n        imageSrc: 'images/payments/wyre.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 0.75% fee ~',\n        supportedMethods:['card'],\n        supportedCountries:['USA','GBR','AUS','BRA','CHN','MEX','EUR'],\n        supportedTokens:['USDC','DAI','ETH'],\n        remoteResources:{},\n        env:'prod',\n        envParams:{\n          test:{\n            accountId:'AC_Q2Y4AARC3TP'\n          },\n          prod:{\n            accountId:'AC_PQQBX33XVEQ'\n          }\n        },\n        getInfo: (props) => {\n          const info = {};\n          if (props.selectedMethod && props.selectedMethod){\n            switch (props.selectedMethod){\n              case 'bank':\n                info.subcaption = `~ 0.75% fee ~\\nKYC REQUIRED`;\n              break;\n              case 'card':\n                info.subcaption = `~ 3.2% fee ~\\n$250.00/day`;\n              break;\n              default:\n              break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props,globalConfigs,buyParams) => {\n          const env = globalConfigs.payments.providers.wyre.env;\n          const envParams = globalConfigs.payments.providers.wyre.envParams[env];\n          const referrerAccountId = envParams.accountId;\n          const url = 'https://pay.sendwyre.com/purchase';\n\n          const params = {\n            dest: `ethereum:${props.account}`,\n            destCurrency: buyParams.selectedToken ? buyParams.selectedToken : ( props.tokenConfig.wyre && props.tokenConfig.wyre.destCurrency ? props.tokenConfig.wyre.destCurrency : props.selectedToken ),\n            referrerAccountId,\n            redirectUrl:globalConfigs.baseURL\n            // failureRedirectUrl:globalConfigs.baseURL\n          };\n\n          return `${url}?`+Object.keys(params)\n              .map(k => encodeURIComponent(k) + '=' + encodeURIComponent(params[k]))\n              .join('&');\n        },\n        render: (initParams,amount,props,globalConfigs) => {\n          const wyreWidget = document.getElementById('wyre-widget');\n          if (!wyreWidget){\n            const iframeBox = document.createElement(\"div\");\n            iframeBox.innerHTML = `\n              <div id=\"wyre-widget\" class=\"wyre-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                <div id=\"wyre-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\"></div>\n                <a class=\"wyre-close-button\" href=\"javascript:void(0);\" onclick=\"document.getElementById('wyre-widget').remove();\" style=\"position:absolute;width:30px;height:30px;top:10px;right:10px;font-size:22px;line-height:30px;text-align:center;color:#fff;font-weight:bold;z-index:10;text-decoration:none\">✕</a>\n                <div id=\"wyre-widget-container\" style=\"position:relative;z-index:2;width:400px;height:650px\">\n                  <iframe\n                    style=\"position:relative;z-index:2;\"\n                    frameborder=\"0\"\n                    height=\"100%\"\n                    src=\"${initParams}\"\n                    width=\"100%\"\n                  >\n                    <p>Your browser does not support iframes.</p>\n                  </iframe>\n                  <div id=\"wyre-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                    <div style=\"display:flex;flex-direction:row;align-items:center\">\n                      <img src=\"${globalConfigs.payments.providers.wyre.imageSrc}\" style=\"height:50px;\" />\n                      <h3 style=\"font-weight:600;font-style:italic;color:#000;padding-left:10px\">is loading...</h3>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            `;\n            document.body.appendChild(iframeBox);\n\n            // Add wyre Widget style (mobile)\n            if (!document.getElementById('wyreWidget_style')){\n              const wyreStyle = document.createElement('style');\n              wyreStyle.id = 'wyreWidget_style';\n              wyreStyle.innerHTML = `\n              @media (max-width: 40em){\n                #wyre-widget {\n                  align-items: flex-start !important;\n                }\n                #wyre-widget-overlay{\n                  background:#fff !important;\n                }\n                #wyre-widget-container{\n                  width:100vw;\n                  min-height: calc( 100vh - 60px ) !important;\n                }\n              }`;\n              document.body.appendChild(wyreStyle);\n            }\n          }\n        },\n      },\n      ramp: {\n        enabled:true,\n        imageSrc: 'images/payments/ramp.png',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption:`~ 2.5% fee ~\\nEUR / GBP`,\n        supportedMethods:['bank','card'],\n        badge: {\n          text:'NO ID REQUIRED',\n          color:'#fff',\n          bgColor:'#0cade4'\n        },\n        supportedTokens:['ETH','DAI','USDC'],\n        supportedCountries:['USA','GBR','AUS','BRA','CAN','EUR','HKG','IND','MEX','RUS','ZAF','KOR'],\n        getInfo: (props) => {\n          const info = {};\n            switch (props.selectedMethod){\n              case 'bank':\n                info.supportedCountries = ['GBR','EUR'];\n                info.subcaption = `~ 1.49-1.99% fee ~`;\n              break;\n              case 'card':\n                info.supportedCountries = ['USA','GBR','AUS','BRA','CAN','EUR','HKG','IND','MEX','RUS','ZAF','KOR'];\n                info.subcaption = `~ 2.90% fee ~`;\n              break;\n              default:\n              break;\n            }\n          return info;\n        },\n        getInitParams: (props,globalConfigs,buyParams) => {\n        \treturn {\n\t          hostAppName: 'Idle',\n            userAddress: props.account,\n            hostApiKey: env.REACT_APP_RAMP_KEY,\n            variant: props.isMobile ? 'mobile' : 'desktop',\n            hostLogoUrl: `${globalConfigs.baseURL}/images/idle-round.png`,\n            swapAsset: buyParams.selectedToken ? buyParams.selectedToken : ( props.tokenConfig.ramp && props.tokenConfig.ramp.swapAsset ? props.tokenConfig.ramp.swapAsset : props.selectedToken )\n        \t};\n        },\n        render: (initParams,amount,props,globalConfigs) => {\n          new RampInstantSDK(initParams)\n            .on('*', async (event) => {\n              const functionsUtil = new FunctionsUtil(props);\n              let tokenDecimals = null;\n              let tokenAmount = null;\n\n              switch (event.type){\n                case 'PURCHASE_SUCCESSFUL':\n                  // Update balance\n                  props.getAccountBalance();\n\n                  tokenDecimals = await props.getTokenDecimals();\n\n                  tokenAmount = event.payload.purchase.tokenAmount;\n                  tokenAmount = functionsUtil.BNify(tokenAmount.toString()).div(functionsUtil.BNify(Math.pow(10,parseInt(tokenDecimals)).toString())).toString();\n\n                  // Toast message\n                  window.toastProvider.addMessage(`Payment completed`, {\n                    secondaryMessage: `${tokenAmount} ${props.selectedToken} are now in your wallet`,\n                    colorTheme: 'light',\n                    actionHref: \"\",\n                    actionText: \"\",\n                    variant: \"success\",\n                  });\n\n                break;\n                default:\n                break;\n              }\n            })\n            .show();\n        }\n      },\n      transak: {\n        enabled:true,\n        imageSrc: 'images/payments/transak.png',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption:`~ 1.5% fee ~\\nALL CURRENCIES`,\n        supportedMethods:['bank','card'],\n        supportedCountries:['USA','GBR','AUS','BRA','CHN','MEX','EUR','IND'],\n        supportedTokens:['ETH','DAI','USDC','USDT','TUSD','SUSD','WBTC'],\n        remoteResources:{'https://global.transak.com/v1/widget.js':{}},\n        env:'prod',\n        badge:{\n          text:'INSTANT',\n          bgColor:'#0069ee'\n        },\n        envParams:{\n          test:{\n            apiKey:env.REACT_APP_TRANSAK_KEY_TEST,\n            url:'https://global.transak.com'\n          },\n          prod:{\n            apiKey:env.REACT_APP_TRANSAK_KEY_PROD,\n            url:'https://global.transak.com'\n          }\n        },\n        getInfo: (props) => {\n          const info = {};\n\n          const selectedMethod = props.selectedMethod && props.selectedMethod;\n          let fee = selectedMethod === 'bank' ? '1.5%' : '4.5%';\n\n          if (props.selectedCountry && props.selectedCountry.value){\n            switch (props.selectedCountry.value.toUpperCase()){\n              case 'GBR':\n                info.badge = {\n                  text:'INSTANT',\n                  bgColor:'#0069ee'\n                };\n                info.subcaption = `~ ${fee} fee ~\\nGBP ONLY`;\n              break;\n              case 'IND':\n                fee = '1.0%';\n                info.badge = {\n                  text:'INSTANT',\n                  bgColor:'#0069ee'\n                };\n                info.subcaption = `~ ${fee} fee ~\\nINR ONLY`;\n              break;\n              case 'EUR':\n                if (selectedMethod === 'bank'){\n                  info.badge = {\n                    text:'SEPA',\n                    color:'#f7cb05 ',\n                    bgColor:'#10288a'\n                  };\n                } else {\n                  info.badge = {\n                    text:'INSTANT',\n                    bgColor:'#0069ee'\n                  };\n                }\n                info.subcaption = `~ ${fee} fee ~\\nEUR ONLY`;\n              break;\n              default:\n              break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props,globalConfigs,buyParams) => {\n          const env = globalConfigs.payments.providers.transak.env;\n          const envParams = globalConfigs.payments.providers.transak.envParams[env];\n\n          let fiatCurrency = null;\n\n          if (buyParams.selectedCountry && buyParams.selectedCountry.value){\n            switch (buyParams.selectedCountry.value.toUpperCase()){\n              case 'IND':\n                fiatCurrency = 'INR';\n              break;\n              case 'GBR':\n                fiatCurrency = 'GBP';\n              break;\n              case 'EUR':\n                fiatCurrency = 'EUR';\n              break;\n              case 'USA':\n                fiatCurrency = 'USD';\n              break;\n              default:\n                fiatCurrency = 'GBP';\n              break;\n            }\n          }\n\n          let cryptoCurrencyCode = buyParams.selectedToken ? buyParams.selectedToken.toLowerCase() : ( props.tokenConfig.transak && props.tokenConfig.transak.currencyCode ? props.tokenConfig.transak.currencyCode : props.selectedToken);\n          cryptoCurrencyCode = cryptoCurrencyCode.toUpperCase();\n\n          const apiKey = envParams.apiKey;\n          const walletAddress = props.account;\n          const partnerCustomerId = props.account;\n          const disableWalletAddressForm = false;\n\n          return {\n            apiKey,\n            cryptoCurrencyCode,\n            walletAddress,\n            fiatCurrency,\n            partnerCustomerId,\n            disableWalletAddressForm,\n            width:'100%',\n            height:'100%'\n            // email,\n          };\n        },\n        render: (initParams,amount,props,globalConfigs) => {\n          if (window.transakGlobal){\n\n            const transakWidget = document.getElementById('transak-widget');\n            if (!transakWidget){\n              const iframeBox = document.createElement(\"div\");\n              iframeBox.innerHTML = `\n                <div id=\"transak-widget\" class=\"transak-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                  <div id=\"transak-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\" onclick=\"document.getElementById('transak-widget').remove();\"></div>\n                  <a class=\"transak-close-button\" href=\"javascript:void(0);\" onclick=\"document.getElementById('transak-widget').remove();\" style=\"position:absolute;width:30px;height:30px;top:10px;right:10px;font-size:22px;line-height:30px;text-align:center;color:#fff;font-weight:bold;z-index:10;text-decoration:none\">✕</a>\n                  <div class=\"transak-widget-container\" style=\"position:relative;z-index:2;width:500px;height:550px\">\n                    <div id=\"transak-widget-container\" style=\"position:relative;z-index:2;width:500px;height:550px\"></div>\n                    <div id=\"transak-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                      <div style=\"display:flex;flex-direction:row;align-items:center\">\n                        <img src=\"${globalConfigs.payments.providers.transak.imageSrc}\" style=\"height:50px;\" />\n                        <h3 style=\"font-weight:600;font-style:italic;color:#0040ca\">is loading...</h3>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              `;\n              document.body.appendChild(iframeBox);\n\n              // Add transak Widget style (mobile)\n              if (!document.getElementById('transakWidget_style')){\n                const transakStyle = document.createElement('style');\n                transakStyle.id = 'transakWidget_style';\n                transakStyle.innerHTML = `\n                @media (max-width: 40em){\n                  #transak-widget {\n                    align-items: flex-start !important;\n                  }\n                  #transak-widget-overlay{\n                    background:#fff !important;\n                  }\n                  #transak-widget-container{\n                    width:100vw;\n                    min-height: calc( 100vh - 60px ) !important;\n                  }\n                }`;\n                document.body.appendChild(transakStyle);\n              }\n            }\n\n            window.transakGlobal.render(initParams, 'transak-widget-container');\n          }\n        }\n      },\n      moonpay: {\n        enabled:true,\n        imageSrc: 'images/payments/moonpay.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 4.5% fee ~',\n        supportedMethods:['card','bank'],\n        supportedCountries:['GBR','EUR','AUS','BRA','CHN','MEX','CAN','HKG','RUS','ZAF','KOR'],\n        supportedTokens:['USDC','DAI','ETH'],\n        env:'prod',\n        envParams:{\n          test:{\n            url:'https://buy-staging.moonpay.io',\n            apiKey:env.REACT_APP_MOONPAY_KEY_TEST\n          },\n          prod:{\n            url:'https://buy.moonpay.io',\n            apiKey:env.REACT_APP_MOONPAY_KEY_PROD\n          }\n        },\n        getInfo: (props) => {\n          const info = {};\n          if (props.selectedMethod && props.selectedMethod){\n            switch (props.selectedMethod){\n              case 'bank':\n                if (props.selectedCountry && props.selectedCountry.value){\n                  switch (props.selectedCountry.value.toUpperCase()){\n                    case 'EUR':\n                      info.badge = {\n                        text:'SEPA',\n                        color:'#f7cb05 ',\n                        bgColor:'#10288a'\n                      }\n                      info.subcaption = `~ 1.5% fee ~\\nEUR ONLY`;\n                    break;\n                    case 'GBR':\n                      info.badge = {\n                        text:'GBP',\n                      }\n                      info.subcaption = `~ 1.5% fee ~\\nGBP ONLY`;\n                    break;\n                    default:\n                      info.badge = null;\n                      info.subcaption = `~ 1.5% fee ~\\nEUR/GBP ONLY`;\n                    break;\n                  }\n                }\n              break;\n              case 'card':\n                info.badge = null;\n                info.subcaption = `~ 5% fee ~`;\n              break;\n              default:\n              break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props,globalConfigs,buyParams) => {\n          const env = globalConfigs.payments.providers.moonpay.env;\n          const envParams = globalConfigs.payments.providers.moonpay.envParams[env];\n          const apiKey = envParams.apiKey;\n          const params = {\n            apiKey,\n            currencyCode: buyParams.selectedToken ? buyParams.selectedToken.toLowerCase() : ( props.tokenConfig.moonpay && props.tokenConfig.moonpay.currencyCode ? props.tokenConfig.moonpay.currencyCode : props.selectedToken.toLowerCase()),\n            walletAddress:props.account,\n            baseCurrencyCode:'USD',\n            showWalletAddressForm: true\n          };\n\n          const methods = {\n            'bank':{\n              'GBR':'gbp_bank_transfer',\n              'EUR':'sepa_bank_transfer'\n            },\n            'card':'credit_debit_card'\n          };\n\n          const selectedCountry = buyParams.selectedCountry && buyParams.selectedCountry.value ? buyParams.selectedCountry.value.toUpperCase() : null;\n\n          // Set payment method\n          if (buyParams.selectedMethod){\n            switch (buyParams.selectedMethod){\n              case 'bank':\n                params.enabledPaymentMethods = methods[buyParams.selectedMethod]['EUR'];\n                switch (selectedCountry){\n                  case 'GBR':\n                  case 'EUR':\n                    params.enabledPaymentMethods = methods[buyParams.selectedMethod][selectedCountry];\n                  break;\n                  default:\n                    params.enabledPaymentMethods = Object.values(methods[buyParams.selectedMethod]).join(',');\n                  break;\n                }\n              break;\n              case 'card':\n              default:\n                params.enabledPaymentMethods = methods[buyParams.selectedMethod];\n              break;\n            }\n          }\n\n          // Set baseCurrencyCode\n          switch (selectedCountry){\n            case 'GBR':\n              params.baseCurrencyCode = 'GBP';\n            break;\n            case 'EUR':\n              params.baseCurrencyCode = 'EUR';\n            break;\n            default:\n              params.baseCurrencyCode = 'USD';\n            break;\n          }\n\n          let url = envParams.url;\n\n          // Safari Fix\n          var isSafari = navigator.userAgent.indexOf(\"Safari\") > -1;\n          if (isSafari) {\n            if (!document.cookie.match(/^(.*;)?\\s*moonpay-fixed\\s*=\\s*[^;]+(.*)?$/)) {\n              document.cookie = \"moonpay-fixed=fixed; expires=Tue, 19 Jan 2038 03:14:07 UTC; path=/\";\n              url += \"/safari_fix\";\n            }\n          }\n\n          return `${url}?`+Object.keys(params)\n              .map(k => encodeURIComponent(k) + '=' + encodeURIComponent(params[k]))\n              .join('&');\n        },\n        render: (initParams,amount,props,globalConfigs) => {\n          const moonpayWidget = document.getElementById('moonpay-widget');\n          if (!moonpayWidget){\n            const iframeBox = document.createElement(\"div\");\n            iframeBox.innerHTML = `\n              <div id=\"moonpay-widget\" class=\"moonpay-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                <div id=\"moonpay-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\"></div>\n                  <div id=\"moonpay-widget-container\" style=\"position:relative;z-index:2;width:500px;height:490px\">\n                    <iframe\n                      style=\"position:relative;z-index:2;\"\n                      frameborder=\"0\"\n                      height=\"100%\"\n                      src=\"${initParams}\"\n                      width=\"100%\"\n                    >\n                      <p>Your browser does not support iframes.</p>\n                    </iframe>\n                    <div id=\"moonpay-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                      <div style=\"display:flex;flex-direction:row;align-items:end\">\n                        <img src=\"${globalConfigs.payments.providers.moonpay.imageSrc}\" style=\"height:50px;\" />\n                        <h3 style=\"padding-left:5px;font-weight:600;font-style:italic;\">is loading...</h3>\n                      </div>\n                    </div>\n                    <div id=\"moonpay-widget-footer\" style=\"position:relative;display:flex;justify-content:center;align-items:center;padding:8px 16px;width:100%;background:#fff;top:-20px;z-index:3\">\n                      <button style=\"background:#000;color:#fff;text-align:center;border-radius:5px;width:100%;height:51px;line-height:51px;font-weight:500;border:0;cursor:pointer\" onclick=\"document.getElementById('moonpay-widget').remove();\">Close</button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            `;\n            document.body.appendChild(iframeBox);\n\n            // Add Moonpay Widget style (mobile)\n            if (!document.getElementById('moonpayWidget_style')){\n              const moonpayStyle = document.createElement('style');\n              moonpayStyle.id = 'moonpayWidget_style';\n              moonpayStyle.innerHTML = `\n              @media (max-width: 40em){\n                #moonpay-widget {\n                  align-items: flex-start !important;\n                }\n                #moonpay-widget-overlay{\n                  background:#fff !important;\n                }\n                #moonpay-widget-container{\n                  width:100vw;\n                  min-height: calc( 100vh - 60px ) !important;\n                }\n              }`;\n              document.body.appendChild(moonpayStyle);\n            }\n          }\n        }\n      },\n      zeroExInstant: {\n        enabled: true,\n        imageSrc: 'images/payments/zeroexinstant.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 0.25% fee ~',\n        supportedMethods:['wallet'],\n        supportedTokens:['USDC','DAI'],\n        remoteResources:{'https://instant.0x.org/v3/instant.js':{}},\n        getInitParams: (props,globalConfigs,buyParams,onSuccess,onClose) => {\n\n          const tokenParams = globalConfigs.tokens[buyParams.selectedToken];\n          const connectorName = window.RimbleWeb3_context ? window.RimbleWeb3_context.connectorName : null;\n\n          if (!tokenParams.zeroExInstant){\n            return null;\n          }\n\n          return {\n            networkId: globalConfigs.network.requiredNetwork,\n            chainId: globalConfigs.network.requiredNetwork,\n            provider: connectorName && connectorName!=='Injected' && window.RimbleWeb3_context.connector[connectorName.toLowerCase()] ? window.RimbleWeb3_context.connector[window.RimbleWeb3_context.connectorName.toLowerCase()].provider : window.ethereum,\n            orderSource: tokenParams.zeroExInstant.orderSource,\n            affiliateInfo: tokenParams.zeroExInstant.affiliateInfo,\n            defaultSelectedAssetData: tokenParams.zeroExInstant.assetData,\n            availableAssetDatas: [tokenParams.zeroExInstant.assetData],\n            shouldDisableAnalyticsTracking: true,\n            onSuccess: onSuccess ? onSuccess : () => {},\n            onClose: onClose ? onClose : () => {}\n          };\n        },\n        render: (initParams,amount) => {\n          if (window.zeroExInstant && initParams){\n            if (amount){\n              initParams.defaultAssetBuyAmount = parseFloat(amount);\n            }\n            window.zeroExInstant.render(initParams, 'body');\n          }\n        }\n      },\n      kyberSwap: {\n        enabled: true,\n        imageSrc: 'images/payments/kyber.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Swap with',\n        captionPos: 'top',\n        subcaption: '~ 0.25% fee ~',\n        supportedMethods:['wallet'],\n        supportedTokens:['WETH','USDC','DAI','USDT','TUSD','SUSD','WBTC'],\n        web3Subscription:{ // Data for web3 subscription\n          enabled: true,\n          contractAddress: '0x818e6fecd516ecc3849daf6845e3ec868087b755',\n          decodeLogsData: [\n            {\n              \"internalType\": \"address\",\n              \"name\": \"_startAddress\",\n              \"type\": \"address\"\n            },\n            {\n              \"internalType\": \"address\",\n              \"name\": \"_tokenAddress\",\n              \"type\": \"address\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"_startAmount\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"_tokenAmount\",\n              \"type\": \"uint256\"\n            },\n          ],\n        },\n        remoteResources:{\n          'https://widget.kyber.network/v0.7.5/widget.css':{},\n          'https://widget.kyber.network/v0.7.5/widget.js':{\n            parentElement:document.body,\n            precall: (props,globalConfigs,providerInfo) => {\n\n              // Remove previous elements\n              const buttons = document.querySelectorAll('.kyber-widget-button');\n              for (let i=0;i<buttons.length;i++){\n                buttons[i].remove();\n              }\n\n              // const kyberWidgetScript = document.getElementById('kyber-widget-script');\n              // if (kyberWidgetScript){\n              //   kyberWidgetScript.remove();\n              // }\n\n              const scripts = document.querySelectorAll('.script_kyberSwap');\n              for (let i=0;i<scripts.length;i++){\n                scripts[i].remove();\n              }\n\n              const buttonId = props.buttonId ? props.buttonId : `kyber-swapper-${props.selectedToken}`;\n              if (!document.getElementById(buttonId)){\n                const a = document.createElement('a');\n                a.id = buttonId;\n                a.href = providerInfo.getInitParams(props,globalConfigs);\n                a.target = '_blank';\n                a.rel = 'nofollow noopener noreferrer';\n                a.className = 'kyber-widget-button theme-ocean theme-supported';\n                a.title = 'Swap with Kyber';\n                a.style = 'display:none;';\n                document.body.appendChild(a);\n              }\n            }\n          }\n        },\n        getInitParams: (props,globalConfigs,buyParams=null) => {\n          const baseToken = props.baseToken ? props.baseToken : 'ETH';\n          const params = {\n            lang:'en',\n            type:'swap',\n            mode:'iframe',\n            theme:'theme-ocean',\n            paramForwarding:true,\n            // callback:globalConfigs.baseURL,\n            pinnedTokens:`${baseToken}_${props.selectedToken}`,\n            title:`Swap ${baseToken} for ${props.selectedToken}`,\n            defaultPair:`${baseToken}_${props.selectedToken}`,\n            commissionId:'0x4215606a720477178AdFCd5A59775C63138711e8',\n            network: globalConfigs.network.requiredNetwork === 1 ? 'mainnet' : 'test',\n          };\n\n          const url  = 'https://widget.kyber.network/v0.7.5/';\n\n          return `${url}?`+Object.keys(params)\n              .map(k => encodeURIComponent(k) + '=' + encodeURIComponent(params[k]))\n              .join('&');\n        },\n        render: (initParams,amount,props) => {\n          const buttonId = props.buttonId ? props.buttonId :`kyber-swapper-${props.selectedToken}`;\n          const a = document.getElementById(buttonId);\n          if (a){\n            a.click();\n\n            // Observe for pending transaction\n            /*\n            if (window.MutationObserver){\n              setTimeout(() => {\n\n                const observer = new window.MutationObserver(function(mutations) {\n                  mutations.forEach((m,i) => {\n                    if (m.addedNodes.length && m.target.className === 'kyber_widget-broadcast'){\n                      \n                      // Show persistent toast message\n                      window.showToastMessage({\n                        variant:'processing',\n                        message:'Pending deposit',\n                        secondaryMessage:'kyberSwap is processing your request'\n                      });\n\n                      observer.disconnect();\n                    } else if (m.target.id === 'kyber-widget' && m.removedNodes.length && m.removedNodes[0].firstChild.className.includes('kyber_widget-widget-container')) {\n                      observer.disconnect();\n                    }\n                  });\n                });\n                const target = document.querySelector('#kyber-widget');\n                observer.observe(target, { childList: true, subtree: true });\n              },1000);\n            }\n            */\n          }\n        }\n      },\n      airSwap: {\n        enabled: false,\n        imageSrc: 'images/payments/airswap.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 0% fee ~',\n        supportedMethods:['wallet'],\n        supportedTokens:['USDC','DAI'],\n        env:'production',\n        remoteResources:{'https://cdn.airswap.io/airswap-instant-widget.js':{}},\n        getInitParams: (props,globalConfigs,buyParams,onComplete,onClose) => {\n          return {\n            env: 'production',\n            mode: 'buy',\n            token: props.tokenConfig.address,\n            baseToken: 'ETH',\n            onComplete: onComplete ? onComplete : () => {},\n            onClose: onClose ? onClose : () => {}\n          };\n        },\n        render: (initParams,amount,props) => {\n          if (window.AirSwapInstant){\n            if (amount){\n              initParams.amount = amount.toString();\n            }\n            window.AirSwapInstant.render(initParams,'body');\n          }\n        }\n      },\n      totle: {\n        enabled: false,\n        imageSrc: 'images/payments/totle.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 0% fee ~',\n        supportedMethods:['wallet'],\n        supportedTokens:['USDC','DAI'],\n        env:'production',\n        remoteResources:{'https://widget.totle.com/latest/dist.js':{}},\n        getInitParams: (props,globalConfigs,buyParams,onComplete,onClose) => {\n          return {\n            sourceAssetAddress: null,\n            sourceAmountDecimal: null,\n            destinationAssetAddress: null,\n            destinationAmountDecimal: null,\n            apiKey: null,\n            partnerContractAddress: null,\n          };\n        },\n        render: (initParams,amount,props) => {\n          if (window.TotleWidget){\n            const nodeId = 'totle-widget';\n            if (!document.getElementById(nodeId)){\n              const totleWidgetContainer = document.createElement(\"div\");\n              totleWidgetContainer.id = nodeId;\n              document.body.appendChild(totleWidgetContainer);\n            }\n\n            window.TotleWidget.default.run(initParams,document.getElementById(nodeId));\n          }\n        }\n      }\n    }\n  }\n};\n\nexport default globalConfigs;","import FunctionsUtil from './FunctionsUtil';\n\nclass IdleGovToken{\n  // Attributes\n  props = {};\n  tokenName = null;\n  tokenConfig = null;\n  functionsUtil = null;\n\n  // Constructor\n  constructor(props){\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    this.tokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n    this.tokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.tokenName]);\n  }\n\n  getBalance = async () => {\n    let balance = await this.functionsUtil.getTokenBalance(this.tokenName,this.props.account);\n    if (!balance || this.functionsUtil.BNify(balance).isNaN()){\n      balance = this.functionsUtil.BNify(0);\n    }\n    return balance;\n  }\n\n  claimRewards = async (callback,callbackReceipt) => {\n    return this.functionsUtil.contractMethodSendWrapper('EarlyRewards', 'claim', [], callback, callbackReceipt);\n  }\n\n  getPriorVotes = async (account=null) => {\n    account = account ? account : this.props.account;\n    let priorVotes = await this.functionsUtil.genericContractCall(this.tokenName,'getPriorVotes',[account]);\n    if (priorVotes){\n      return this.functionsUtil.BNify(priorVotes);\n    }\n    return null;\n  }\n\n  refreshIdleSpeed = async () => {\n    return this.functionsUtil.genericContractCall('IdleController','refreshIdleSpeeds');\n  }\n\n  getUnclaimedTokens = async () => {\n    /*\n    let rewards =  await this.functionsUtil.genericContractCall('EarlyRewards','rewards',[this.props.account]);\n    if (rewards){\n      return this.functionsUtil.fixTokenDecimals(rewards,this.tokenConfig.decimals);\n    }\n    */\n    return this.functionsUtil.BNify(0);\n  }\n\n  getAPR = async (token,tokenConfig,conversionRate=null) => {\n    const IDLETokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.tokenName]);\n    if (!IDLETokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getIdleAPR_${tokenConfig.idle.token}_${conversionRate}`;\n    /*\n    const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n    */\n\n    let APR = this.functionsUtil.BNify(0);\n\n    const [\n      idleDistribution,\n      tokenAllocation\n    ] = await Promise.all([\n      this.getDistribution(tokenConfig),\n      this.functionsUtil.getTokenAllocation(tokenConfig,false,false)\n    ]);\n\n    if (idleDistribution && tokenAllocation){\n\n      const DAITokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens','DAI']);\n        \n      // Get IDLE oconversion rate\n      if (!conversionRate){\n        try {\n          conversionRate = await this.functionsUtil.getUniswapConversionRate(DAITokenConfig,IDLETokenConfig);\n        } catch (error) {\n\n        }\n        if (!conversionRate || conversionRate.isNaN()){\n          conversionRate = this.functionsUtil.BNify(0);\n        }\n      }\n\n      if (!conversionRate || this.functionsUtil.BNify(conversionRate).lte(0)){\n        return this.functionsUtil.BNify(0);\n      }\n\n      const tokenPool = await this.functionsUtil.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent,token,tokenConfig);\n\n      const idleDistributedPerYearUSD = this.functionsUtil.BNify(conversionRate).times(idleDistribution);\n      APR = idleDistributedPerYearUSD.div(tokenPool).times(100);\n\n      // console.log(tokenConfig.idle.token,idleDistributedPerYearUSD.toFixed(5),conversionRate.toFixed(5),APR.toFixed(5));\n\n      return this.functionsUtil.setCachedData(cachedDataKey,APR);\n    }\n\n    return APR;\n  }\n\n  // Get IDLE distribution speed\n  getSpeed = async (idleTokenAddress) => {\n\n    const cachedDataKey = `getIdleSpeed_${idleTokenAddress}`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return this.functionsUtil.BNify(cachedData);\n    }\n\n    let idleSpeeds = await this.functionsUtil.genericContractCall('IdleController','idleSpeeds',[idleTokenAddress]);\n    if (idleSpeeds && !this.functionsUtil.BNify(idleSpeeds).isNaN()){\n      idleSpeeds = this.functionsUtil.BNify(idleSpeeds);\n      return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,idleSpeeds);\n    }\n    return null;\n  }\n\n  getDistribution = async (tokenConfig) => {\n\n    const cachedDataKey = `getIdleDistribution_${tokenConfig.idle.token}`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return this.functionsUtil.BNify(cachedData);\n    }\n\n    // Get IDLE distribution speed and Total Supply\n    const idleSpeeds = await this.getSpeed(tokenConfig.idle.address);\n\n    if (idleSpeeds){\n\n      // Get IDLE distribution for Idle in a Year\n      const blocksPerYear = this.functionsUtil.getGlobalConfig(['network','blocksPerYear']);\n\n      // Take 50% of distrubution for lenders side\n      const distribution = this.functionsUtil.BNify(idleSpeeds).times(this.functionsUtil.BNify(blocksPerYear)).div(1e18);\n\n      if (!this.functionsUtil.BNify(distribution).isNaN()){\n        return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,distribution);\n      }\n    }\n\n    return null;\n  }\n\n  getUserDistribution = async (account=null,availableTokens=null,fixByFrequency=false) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens){\n      return false;\n    }\n\n    let totalSpeed = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n\n      if (this.tokenConfig && this.tokenConfig.disabledTokens.includes(tokenConfig.idle.token)){\n        return;\n      }\n\n      const [\n        idleSpeed,\n        userPoolShare\n      ] = await Promise.all([\n        this.getSpeed(tokenConfig.idle.address),\n        this.functionsUtil.getUserPoolShare(account,tokenConfig)\n      ]);\n\n      if (idleSpeed && userPoolShare){\n        const tokenSpeed = idleSpeed.times(userPoolShare);\n        totalSpeed = totalSpeed.plus(tokenSpeed);\n      }\n    });\n\n    if (fixByFrequency){\n      totalSpeed = this.functionsUtil.fixTokenDecimals(totalSpeed,this.tokenConfig.decimals);\n      totalSpeed = this.functionsUtil.fixDistributionSpeed(totalSpeed,this.tokenConfig.distributionFrequency)\n    }\n\n    return totalSpeed;\n  }\n\n  getAvgApr = async (availableTokens=null) => {\n    if (!availableTokens){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n    let output = this.functionsUtil.BNify(0);\n    let totalAllocation = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [idleApr,tokenAllocation] = await Promise.all([\n        this.getAPR(token,tokenConfig),\n        this.functionsUtil.getTokenAllocation(tokenConfig,false,false)\n      ]);\n      \n      if (idleApr && tokenAllocation){\n        output = output.plus(idleApr.times(tokenAllocation.totalAllocation));\n        totalAllocation = totalAllocation.plus(tokenAllocation.totalAllocation);\n      }\n    });\n\n    output = output.div(totalAllocation);\n\n    return output;\n  }\n\n}\n\nexport default IdleGovToken;","import React from \"react\";\nimport axios from 'axios';\nimport moment from 'moment';\nimport { Text } from \"rimble-ui\";\nimport BigNumber from 'bignumber.js';\nimport IdleGovToken from './IdleGovToken';\nimport { toBuffer } from \"ethereumjs-util\";\nimport globalConfigs from '../configs/globalConfigs';\n\nconst ethereumjsABI = require('ethereumjs-abi');\nconst env = process.env;\n\nclass FunctionsUtil {\n\n  // Attributes\n  props = {};\n  idleGovToken = null;\n\n  // Constructor\n  constructor(props){\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n  }\n  trimEth = eth => {\n    return this.BNify(eth).toFixed(6);\n  }\n  toBN = n => new this.props.web3.utils.BN(n)\n  toEth = wei => {\n    if (!this.props.web3){\n      return null;\n    }\n    return this.props.web3.utils.fromWei(\n      (wei || 0).toString(),\n      \"ether\"\n    );\n  }\n  toWei = eth => {\n    if (!this.props.web3){\n      return null;\n    }\n    return this.props.web3.utils.toWei(\n      (eth || 0).toString(),\n      \"ether\"\n    );\n  }\n  htmlDecode = input => {\n    var e = document.createElement('textarea');\n    e.innerHTML = input;\n    return e.childNodes.length === 0 ? '' : e.childNodes[0].nodeValue;\n  }\n  BNify_obj = s => new BigNumber(s)\n  BNify = s => new BigNumber( typeof s === 'object' ? s : String(s) )\n  customLog = (...props) => { if (globalConfigs.logs.messagesEnabled) this.customLog(moment().format('HH:mm:ss'),...props); }\n  customLogError = (...props) => { if (globalConfigs.logs.errorsEnabled) console.error(moment().format('HH:mm:ss'),...props); }\n  getContractByName = (contractName) => {\n    const contract = this.props.contracts.find(c => c.name === contractName);\n    if (!contract) {\n      return false;\n    }\n    return contract.contract;\n  }\n  normalizeSimpleIDNotification = (n) => {\n    return n.replace(/<\\/p><p>/g,\"\\n\")\n            .replace(/<p>/g,\"\")\n            .replace(/<br>/g,\"\")\n            .replace(/&nbsp;/g,\" \")\n            .replace(/<\\/p>/g,\"\");\n  }\n  capitalize = (str) => {\n    return str.substr(0,1).toUpperCase()+str.substr(1);\n  }\n  strToMoment = (date,format=null) => {\n    return moment(date,format);\n  }\n  replaceArrayProps = (arr1,arr2) => {\n    if (arr2 && Object.keys(arr2).length){\n      Object.keys(arr2).forEach(p => {\n        arr1[p] = arr2[p];\n      });\n    }\n\n    return arr1;\n  }\n  stripHtml = (html) => {\n     var tmp = document.createElement(\"DIV\");\n     tmp.innerHTML = html;\n     return tmp.textContent || tmp.innerText || \"\";\n  }\n  // VanillaJS function for smooth scroll\n  scrollTo = (to, duration) => {\n    const start = window.scrollY;\n    const change = to - start;\n    const increment = 20;\n    let currentTime = 0;\n\n    Math.easeInOutQuad = function (t, b, c, d) {\n      t /= d/2;\n      if (t < 1) return c/2*t*t + b;\n      t--;\n      return -c/2 * (t*(t-2) - 1) + b;\n    };\n\n    const animateScroll = () => {\n        currentTime += increment;\n        var val = Math.easeInOutQuad(currentTime, start, change, duration);\n        window.scrollTo(0,val);\n        if(currentTime < duration) {\n          window.setTimeout(animateScroll, increment);\n        }\n    };\n\n    animateScroll();\n  }\n  getTxAction = (tx,tokenConfig) => {\n\n    const idleTokenAddress = tokenConfig.idle.address;\n    const depositProxyContractInfo = this.getGlobalConfig(['contract','methods','deposit','proxyContract']);\n    const migrationContractAddr = tokenConfig.migration && tokenConfig.migration.migrationContract ? tokenConfig.migration.migrationContract.address : null;\n    const migrationContractOldAddrs = tokenConfig.migration && tokenConfig.migration.migrationContract && tokenConfig.migration.migrationContract.oldAddresses ? tokenConfig.migration.migrationContract.oldAddresses : [];\n    const batchMigration = this.getGlobalConfig(['tools','batchMigration','props','availableTokens',tokenConfig.idle.token]);\n    const batchMigrationContractAddr = batchMigration && batchMigration.migrationContract ? batchMigration.migrationContract.address : null;\n\n    const isBatchMigrationTx = batchMigrationContractAddr && tx.from.toLowerCase() === batchMigrationContractAddr.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase();    \n    const isMigrationTx = isBatchMigrationTx || (migrationContractAddr && (tx.from.toLowerCase() === migrationContractAddr.toLowerCase() || migrationContractOldAddrs.map((v) => { return v.toLowerCase(); }).indexOf(tx.from.toLowerCase()) !== -1 ) && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase());\n    const isSendTransferTx = !isMigrationTx && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n    const isReceiveTransferTx = !isMigrationTx && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n    const isDepositTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && (tx.to.toLowerCase() === idleTokenAddress.toLowerCase() || (depositProxyContractInfo && tx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase()));\n    const isRedeemTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && tx.to.toLowerCase() === this.props.account.toLowerCase();\n    const isSwapTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && !isDepositTx && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n\n    let action = null;\n\n    if (isDepositTx){\n      action = 'Deposit';\n    } else if (isRedeemTx){\n      action = 'Redeem';\n    } else if (isMigrationTx){\n      action = 'Migrate';\n    } else if (isSendTransferTx){\n      action = 'Send';\n    } else if (isReceiveTransferTx){\n      action = 'Receive';\n    } else if (isSwapTx){\n      action = 'Swap';\n    } else if (isSwapTx){\n      action = 'SwapOut';\n    }\n\n    return action;\n  }\n  getAccountPortfolio = async (availableTokens=null,account=null) => {\n    const portfolio = {\n      tokensBalance:{},\n      avgAPY:this.BNify(0),\n      totalBalance:this.BNify(0),\n      totalEarnings:this.BNify(0),\n      totalAmountLent:this.BNify(0),\n      totalEarningsPerc:this.BNify(0),\n      totalBalanceConverted:this.BNify(0)\n    };\n\n    availableTokens = availableTokens ? availableTokens : this.props.availableTokens;\n    account = account ? account : this.props.account;\n\n    if (!account || !availableTokens){\n      return portfolio;\n    }\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const idleTokenBalance = await this.getTokenBalance(tokenConfig.idle.token,account);\n\n      if (idleTokenBalance){\n        const tokenPrice = await this.getIdleTokenPrice(tokenConfig);\n        const tokenBalance = idleTokenBalance.times(tokenPrice);\n        const tokenBalanceConverted = await this.convertTokenBalance(tokenBalance,token,tokenConfig,isRisk);\n\n        if (!tokenPrice.isNaN() && !tokenBalance.isNaN()){\n          portfolio.tokensBalance[token] = {\n            tokenPrice,\n            tokenBalance,\n            idleTokenBalance,\n            tokenBalanceConverted\n          };\n\n          // Increment total balance\n          portfolio.totalBalance = portfolio.totalBalance.plus(tokenBalance);\n          portfolio.totalBalanceConverted = portfolio.totalBalanceConverted.plus(tokenBalanceConverted);\n        }\n      }\n    });\n\n    const orderedTokensBalance = {};\n    Object.keys(availableTokens).forEach( token => {\n      if (portfolio.tokensBalance[token]){\n        orderedTokensBalance[token] = portfolio.tokensBalance[token];\n      }\n    });\n\n    portfolio.tokensBalance = orderedTokensBalance;\n\n    const depositedTokens = Object.keys(portfolio.tokensBalance).filter(token => ( this.BNify(portfolio.tokensBalance[token].idleTokenBalance).gt(0) ));\n\n    let avgAPY = this.BNify(0);\n    let totalEarnings = this.BNify(0);\n    let totalAmountLent = this.BNify(0);\n    let totalEarningsPerc = this.BNify(0);\n    const amountLent = await this.getAmountLent(depositedTokens,this.props.account);\n\n    await this.asyncForEach(depositedTokens,async (token) => {\n      const tokenConfig = availableTokens[token];\n      const tokenBalanceConverted = portfolio.tokensBalance[token].tokenBalanceConverted;\n      const [\n        tokenAprs\n        // tokenEarnings\n      ] = await Promise.all([\n        this.getTokenAprs(tokenConfig)\n        // this.loadAssetField('earnings',token,tokenConfig,this.props.account,false),\n      ]);\n\n      const tokenAPY = this.BNify(tokenAprs.avgApy);\n      const tokenWeight = tokenBalanceConverted.div(portfolio.totalBalanceConverted);\n      const amountLentToken = await this.convertTokenBalance(amountLent[token],token,tokenConfig,isRisk);\n      const tokenEarnings = tokenBalanceConverted.minus(amountLentToken);\n\n      if (tokenEarnings){\n        totalEarnings = totalEarnings.plus(tokenEarnings);\n      }\n\n      if (tokenAPY){\n        avgAPY = avgAPY.plus(tokenAPY.times(tokenWeight));\n      }\n\n      if (amountLentToken){\n        totalAmountLent = totalAmountLent.plus(amountLentToken);\n      }\n\n      // console.log(token,amountLentToken.toFixed(),tokenEarnings.toFixed(),tokenBalanceConverted.toFixed());\n    });\n\n    if (totalAmountLent.gt(0)){\n      totalEarningsPerc = totalEarnings.div(totalAmountLent).times(100);\n    }\n\n    portfolio.avgAPY = avgAPY;\n    portfolio.totalEarnings = totalEarnings;\n    portfolio.totalAmountLent = totalAmountLent;\n    portfolio.totalEarningsPerc = totalEarningsPerc;\n\n    // debugger;\n\n    return portfolio;\n  }\n  getCurveAvgSlippage = async (enabledTokens=[],account=null,fixDecimals=true) => {\n    account = account ? account : this.props.account;\n\n    if (!account){\n      return [];\n    }\n\n    const availableTokens = this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    let processedTxs = {};\n    const processedHashes = {};\n    let curveTokensBalance = this.BNify(0);\n    const curveTxs = await this.getCurveTxs(account,0,'latest',enabledTokens);\n\n    if (curveTxs && curveTxs.length){\n\n      curveTxs.forEach((tx,index) => {\n\n        // Skip transactions with no hash\n        if (!tx.hash || !tx.curveTokens || !tx.curveTokenPrice){\n          return false;\n        }\n\n        const tokenAmount = this.BNify(tx.tokenAmount);\n        let curveTokens = this.BNify(tx.curveTokens);\n        const curveTokenPrice = this.BNify(tx.curveTokenPrice);\n\n        switch (tx.action){\n          case 'CurveIn':\n          case 'CurveZapIn':\n          case 'CurveDepositIn':\n          case 'CurveTransferIn':\n            if (tx.action === 'CurveTransferIn'){\n              if (index>0 && curveTokensBalance.gt(0)){\n                return;\n              }\n            }\n\n            if (!processedTxs[tx.hash]){\n              processedTxs[tx.hash] = {\n                price:null,\n                received:null,\n                slippage:null,\n                deposited:this.BNify(0),\n              };\n            }\n\n            processedTxs[tx.hash].deposited = processedTxs[tx.hash].deposited.plus(tokenAmount);\n            if (processedTxs[tx.hash].received === null){\n              processedTxs[tx.hash].price = curveTokenPrice;\n              processedTxs[tx.hash].received = curveTokens.times(curveTokenPrice);\n            }\n\n            // this.customLog('getCurveAvgSlippage',tx.action,tx.hash,tx.blockNumber,curveTokens.toFixed(6),curveTokenPrice.toFixed(6),processedTxs[tx.hash].deposited.toFixed(6),processedTxs[tx.hash].received.toFixed(6));\n          break;\n          case 'CurveOut':\n          case 'CurveZapOut':\n          case 'CurveDepositOut':\n            curveTokens = curveTokens.times(this.BNify(-1));\n          break;\n          default:\n          break;\n        }\n\n        // Update curveTokens balance\n        if (!processedHashes[tx.hash]){\n          curveTokensBalance = curveTokensBalance.plus(curveTokens);\n          if (curveTokensBalance.lte(0)){\n            curveTokensBalance = this.BNify(0);\n\n            // Reset processed transactions\n            // processedTxs = {};\n          }\n          processedHashes[tx.hash] = true;\n        }\n      });\n    }\n\n    // this.customLog('processedTxs',processedTxs);\n\n    let avgSlippage = this.BNify(0);\n    let totalDeposited = this.BNify(0);\n    Object.values(processedTxs).forEach( tx => {\n      const slippage = tx.received.div(tx.deposited).minus(1);\n      avgSlippage = avgSlippage.plus(slippage.times(tx.deposited));\n      totalDeposited = totalDeposited.plus(tx.deposited);\n    });\n\n    avgSlippage = avgSlippage.div(totalDeposited).times(-1);\n\n    // debugger;\n    // this.customLog('avgSlippage',avgSlippage.toString());\n\n    return avgSlippage;\n  }\n  getCurveAvgBuyPrice = async (enabledTokens=[],account=null) => {\n    account = account ? account : this.props.account;\n\n    if (!account){\n      return [];\n    }\n\n    const availableTokens = this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    const processedTxs = {};\n    let avgBuyPrice = this.BNify(0);\n    let curveTokensBalance = this.BNify(0);\n    const curveTxs = await this.getCurveTxs(account,0,'latest',enabledTokens);\n\n    // this.customLog('curveTxs',curveTxs);\n\n    if (curveTxs && curveTxs.length){\n\n      curveTxs.forEach((tx,index) => {\n\n        if (!processedTxs[tx.hash]){\n          processedTxs[tx.hash] = [];\n        }\n\n        if (processedTxs[tx.hash].includes(tx.action)){\n          return;\n        }\n\n        // Skip transactions with no hash\n        if (!tx.hash || !tx.curveTokens || !tx.curveTokenPrice){\n          return false;\n        }\n\n        const prevAvgBuyPrice = avgBuyPrice;\n        let curveTokens = this.BNify(tx.curveTokens);\n        const curveTokenPrice = this.BNify(tx.curveTokenPrice);\n\n        // Deposited\n        switch (tx.action){\n          case 'CurveIn':\n          case 'CurveZapIn':\n          case 'CurveDepositIn':\n          case 'CurveTransferIn':\n            if (tx.action === 'CurveTransferIn'){\n              if (index>0 && curveTokensBalance.gt(0)){\n                return;\n              }\n            }\n            avgBuyPrice = curveTokens.times(curveTokenPrice).plus(prevAvgBuyPrice.times(curveTokensBalance)).div(curveTokensBalance.plus(curveTokens));\n          break;\n          case 'CurveOut':\n          case 'CurveZapOut':\n          case 'CurveDepositOut':\n          // case 'CurveTransferOut':\n            curveTokens = curveTokens.times(this.BNify(-1));\n          break;\n          default:\n          break;\n        }\n        \n        // Update curveTokens balance\n        curveTokensBalance = curveTokensBalance.plus(curveTokens);\n        if (curveTokensBalance.lte(0)){\n          avgBuyPrice = this.BNify(0);\n          curveTokensBalance = this.BNify(0);\n        }\n\n        processedTxs[tx.hash].push(tx.action);\n\n        // this.customLog('getCurveAvgBuyPrice',tx.action,tx.hash,tx.blockNumber,curveTokens.toString(),curveTokenPrice.toString(),curveTokensBalance.toString(),avgBuyPrice.toString());\n      });\n    }\n\n    // this.customLog('avgCurveBuyPrice',avgBuyPrice.toString());\n\n    return avgBuyPrice;\n  }\n  getAvgBuyPrice = async (enabledTokens=[],account) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens){\n      return [];\n    }\n\n    const output = {};\n    const etherscanTxs = await this.getEtherscanTxs(account,0,'latest',enabledTokens);\n\n    enabledTokens.forEach( selectedToken => {\n\n      output[selectedToken] = [];\n      let avgBuyPrice = this.BNify(0);\n\n      let idleTokensBalance= this.BNify(0);\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n\n      if (filteredTxs && filteredTxs.length){\n\n        filteredTxs.forEach((tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.idleTokens || !tx.tokenPrice){\n            return false;\n          }\n\n          const prevAvgBuyPrice = avgBuyPrice;\n          let idleTokens = this.BNify(tx.idleTokens);\n          const tokenPrice = this.BNify(tx.tokenPrice);\n\n          // Deposited\n          switch (tx.action){\n            case 'Deposit':\n            case 'Receive':\n            case 'Swap':\n            case 'Migrate':\n            case 'CurveOut':\n              avgBuyPrice = idleTokens.times(tokenPrice).plus(prevAvgBuyPrice.times(idleTokensBalance)).div(idleTokensBalance.plus(idleTokens));\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              idleTokens = idleTokens.times(this.BNify(-1));\n            break;\n            default:\n            break;\n          }\n\n          // Update idleTokens balance\n          idleTokensBalance = idleTokensBalance.plus(idleTokens);\n          if (idleTokensBalance.lte(0)){\n            avgBuyPrice = this.BNify(0);\n            idleTokensBalance = this.BNify(0);\n          }\n\n        });\n      }\n\n      // Add token Data\n      output[selectedToken] = avgBuyPrice;\n    });\n\n    return output;\n  }\n  getFirstDepositTx = async (enabledTokens=[],account) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens){\n      return [];\n    }\n\n    const etherscanTxs = await this.getEtherscanTxs(account,0,'latest',enabledTokens);\n\n    const deposits = {};\n\n    enabledTokens.forEach((selectedToken) => {\n      let amountLent = this.BNify(0);\n      let firstDepositTx = null;\n      deposits[selectedToken] = firstDepositTx;\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        filteredTxs.forEach((tx,index) => {\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.tokenAmount){\n            return false;\n          }\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n              amountLent = amountLent.plus(tx.tokenAmount);\n              if (!firstDepositTx){\n                firstDepositTx = tx;\n              }\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tx.tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.BNify(0);\n            firstDepositTx = null;\n          }\n        });\n      }\n\n      // Add token Data\n      deposits[selectedToken] = firstDepositTx;\n    });\n\n    return deposits;\n  }\n  asyncTimeout = (ms) => {\n    return new Promise(resolve => setTimeout(resolve, ms));\n  }\n  getDepositTimestamp = async (enabledTokens=[],account) => {\n    const firstDepositTxs = await this.getFirstDepositTx(enabledTokens,account);\n    if (firstDepositTxs){\n      return Object.keys(firstDepositTxs).reduce( (acc,token) => {\n        if (firstDepositTxs[token]){\n          acc[token] = firstDepositTxs[token].timeStamp;\n        }\n        return acc;\n      },{});\n    }\n\n    return null;\n  }\n  getAmountDeposited = async (tokenConfig,account) => {\n    let [tokenBalance,userAvgPrice] = await Promise.all([\n      this.getTokenBalance(tokenConfig.idle.token,account),\n      this.genericContractCall(tokenConfig.idle.token, 'userAvgPrices', [account])\n    ]);\n\n    if (tokenBalance && userAvgPrice){\n      userAvgPrice = this.fixTokenDecimals(userAvgPrice,tokenConfig.decimals);\n      const amountDeposited = tokenBalance.times(userAvgPrice);\n      return amountDeposited;\n    }\n\n    return null;\n  }\n  getAmountLent = async (enabledTokens=[],account) => {\n\n    account = account || this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens){\n      return [];\n    }\n\n    const etherscanTxs = await this.getEtherscanTxs(account,0,'latest',enabledTokens,false);\n\n    const amountLents = {};\n\n    enabledTokens.forEach((selectedToken) => {\n      let amountLent = this.BNify(0);\n      amountLents[selectedToken] = amountLent;\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        filteredTxs.forEach((tx,index) => {\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.tokenAmount){\n            return false;\n          }\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n            case 'CurveOut':\n              amountLent = amountLent.plus(tx.tokenAmount);\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tx.tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.BNify(0);\n          }\n        });\n      }\n\n      // Add token Data\n      amountLents[selectedToken] = amountLent;\n    });\n\n    // debugger;\n\n    return amountLents;\n  }\n  getEtherscanBaseTxs = async (account=false,firstBlockNumber=0,endBlockNumber='latest',enabledTokens=[],debug=false) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length){\n      return [];\n    }\n\n    account = account.toLowerCase();\n\n    const selectedStrategy = this.props.selectedStrategy;\n\n    // Check if firstBlockNumber is less that firstIdleBlockNumber\n    const firstIdleBlockNumber = this.getGlobalConfig(['network','firstBlockNumber']);\n    firstBlockNumber = Math.max(firstIdleBlockNumber,firstBlockNumber);\n\n    const requiredNetwork = this.getGlobalConfig(['network','requiredNetwork']);\n    const etherscanInfo = this.getGlobalConfig(['network','providers','etherscan']);\n\n    let results = [];\n    let etherscanBaseTxs = null;\n    let etherscanBaseEndpoint = null;\n\n    // Check if etherscan is enabled for the required network\n    if (etherscanInfo.enabled && etherscanInfo.endpoints[requiredNetwork]){\n      const etherscanApiUrl = etherscanInfo.endpoints[requiredNetwork];\n\n      // Get base endpoint cached transactions\n      etherscanBaseEndpoint = `${etherscanApiUrl}?strategy=${selectedStrategy}&apikey=${env.REACT_APP_ETHERSCAN_KEY}&module=account&action=tokentx&address=${account}&startblock=${firstIdleBlockNumber}&endblock=${endBlockNumber}&sort=asc`;\n      etherscanBaseTxs = this.getCachedRequest(etherscanBaseEndpoint);\n\n      if (debug){\n        console.log('DEBUG - CACHED - etherscanBaseTxs',etherscanBaseTxs);\n      }\n\n      // Check if the latest blockNumber is actually the latest one\n      if (etherscanBaseTxs && etherscanBaseTxs.data.result && Object.values(etherscanBaseTxs.data.result).length){\n\n        const lastCachedTx = Object.values(etherscanBaseTxs.data.result).pop();\n        const lastCachedBlockNumber = lastCachedTx && lastCachedTx.blockNumber ? parseInt(lastCachedTx.blockNumber)+1 : firstBlockNumber;\n\n        const etherscanEndpointLastBlock = `${etherscanApiUrl}?strategy=${selectedStrategy}&apikey=${env.REACT_APP_ETHERSCAN_KEY}&module=account&action=tokentx&address=${account}&startblock=${lastCachedBlockNumber}&endblock=${endBlockNumber}&sort=asc`;\n        let latestTxs = await this.makeCachedRequest(etherscanEndpointLastBlock,15);\n\n        if (latestTxs && latestTxs.data.result && latestTxs.data.result.length){\n          \n          latestTxs = await this.filterEtherscanTxs(latestTxs.data.result,enabledTokens,true,false);\n\n          if (latestTxs && Object.values(latestTxs).length){\n\n            const latestBlockNumbers = Object.values(latestTxs).map( lastTx => (parseInt(lastTx.blockNumber)) );\n            const lastRealBlockNumber = Math.max(...latestBlockNumbers);\n\n            // If real tx blockNumber differs from last blockNumber\n            if (lastRealBlockNumber>=lastCachedBlockNumber){\n              // Merge latest Txs with etherscanBaseTxs\n              Object.values(latestTxs).forEach((tx) => {\n                const txFound = Object.keys(etherscanBaseTxs.data.result).includes(tx.hashKey);\n                if (!txFound){\n                  etherscanBaseTxs.data.result[tx.hashKey] = tx;\n                }\n              });\n\n              // Save etherscan txs\n              this.saveEtherscanTxs(etherscanBaseEndpoint,etherscanBaseTxs.data.result);\n            }\n          }\n        }\n      } else {\n        etherscanBaseTxs = null;\n      }\n\n      let txs = etherscanBaseTxs;\n\n      if (debug){\n        console.log('DEBUG - txs',txs);\n      }\n\n      if (!txs){\n        // Make request\n        txs = await this.makeRequest(etherscanBaseEndpoint);\n\n        // console.log('makeRequest 1',account,etherscanBaseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n\n        if (!txs || !txs.data || parseInt(txs.data.status)===0){\n          let requestCount = 0;\n          let requestStatus = false;\n          do {\n            await this.asyncTimeout(500);\n            txs = await this.makeRequest(etherscanBaseEndpoint);\n            requestCount++;\n            requestStatus = txs && txs.data ? parseInt(txs.data.status) : false;\n            // console.log('makeRequest '+(requestCount+1),account,etherscanBaseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n          } while (requestCount<5 && !requestStatus);\n        }\n\n        // Cache request\n        if (txs && txs.data && parseInt(txs.data.status)>0){\n          const timestamp = parseInt(Date.now()/1000);\n          const cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n          cachedRequests[etherscanBaseEndpoint] = {\n            data:txs,\n            timestamp\n          };\n          this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n        }\n      }\n\n      if (txs && txs.data && txs.data.result){\n        results = txs.data.result;\n      } else {\n        return [];\n      }\n    }\n\n    return {\n      results,\n      etherscanBaseTxs,\n      etherscanBaseEndpoint\n    };\n  }\n  getCurveTxs = async (account=false,firstBlockNumber=0,endBlockNumber='latest',enabledTokens=[]) => {\n    const results = await this.getEtherscanTxs(account,firstBlockNumber,endBlockNumber,enabledTokens);\n    // results = results ? Object.values(results) : [];\n    return this.filterCurveTxs(results,enabledTokens);\n  }\n  saveEtherscanTxs = (endpoint,txs) => {\n    const txsToStore = {};\n    Object.keys(txs).forEach(txHash => {\n      const tx = txs[txHash];\n      if (tx.blockNumber && (!tx.status || tx.status.toLowerCase() !== 'pending')){\n        txsToStore[txHash] = tx;\n      }\n    });\n\n    // Save new cached data\n    const cachedRequest = {\n      data:{\n        result:txsToStore\n      }\n    };\n    this.saveCachedRequest(endpoint,false,cachedRequest);\n  }\n  getEtherscanTxs = async (account=false,firstBlockNumber=0,endBlockNumber='latest',enabledTokens=[],debug=false) => {\n    const {\n      results,\n      etherscanBaseTxs,\n      etherscanBaseEndpoint\n    } = await this.getEtherscanBaseTxs(account,firstBlockNumber,endBlockNumber,enabledTokens,debug);\n\n    // Initialize prevTxs\n    let etherscanTxs = {};\n    if (etherscanBaseTxs){\n      // Filter txs for token\n      etherscanTxs = await this.processStoredTxs(results,enabledTokens);\n    } else {\n      const allAvailableTokens = Object.keys(this.props.availableTokens);\n      // Save base endpoint with all available tokens\n      etherscanTxs = await this.filterEtherscanTxs(results,allAvailableTokens);\n\n      // Store filtered txs\n      if (etherscanTxs && Object.keys(etherscanTxs).length){\n        this.saveEtherscanTxs(etherscanBaseEndpoint,etherscanTxs);\n      }\n    }\n\n    if (debug){\n      console.log('DEBUG - getEtherscanTxs -',etherscanTxs);\n    }\n\n    return Object\n            .values(etherscanTxs)\n            .filter(tx => (tx.token && enabledTokens.includes(tx.token.toUpperCase())))\n            .sort((a,b) => (a.timeStamp < b.timeStamp ? -1 : 1));\n  }\n  filterCurveTxs = async (results,enabledTokens=[]) => {\n\n    if (!results || !results.length || typeof results.forEach !== 'function'){\n      return [];\n    }\n\n    const availableTokens = this.props.availableTokens ? this.props.availableTokens : this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    const curveTxs = results.filter( tx => (enabledTokens.includes(tx.token) && ['CurveIn','CurveOut','CurveZapIn','CurveZapOut','CurveTransferIn','CurveTransferOut','CurveDepositIn','CurveDepositOut'].includes(tx.action)) );\n\n    if (curveTxs.length){\n      curveTxs.sort((a,b) => (a.timeStamp < b.timeStamp ? -1 : 1));\n    }\n\n    return curveTxs;\n  }\n  filterEtherscanTxs = async (results,enabledTokens=[],processTxs=true,processStoredTxs=true) => {\n    if (!this.props.account || !results || !results.length || typeof results.forEach !== 'function'){\n      return [];\n    }\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let etherscanTxs = {};\n    let curveTransfersTxs = [];\n    let curveTransfersTxsToDelete = [];\n\n    // const idleTokensAddresses = Object.values(this.props.availableTokens).map( tokenConfig => (tokenConfig.idle.address) );\n    const curveZapContract = this.getGlobalConfig(['curve','zapContract']);\n    const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n    const curveSwapContract = this.getGlobalConfig(['curve','migrationContract']);\n    const curveDepositContract = this.getGlobalConfig(['curve','depositContract']);\n\n    // this.customLog('filterEtherscanTxs',enabledTokens,results);\n\n    enabledTokens.forEach(token => {\n      const tokenConfig = this.props.availableTokens[token];\n      const depositProxyContractInfo = this.getGlobalConfig(['contract','methods','deposit','proxyContract']);\n      const migrationContractAddr = tokenConfig.migration && tokenConfig.migration.migrationContract ? tokenConfig.migration.migrationContract.address : null;\n      const migrationContractOldAddrs = tokenConfig.migration && tokenConfig.migration.migrationContract && tokenConfig.migration.migrationContract.oldAddresses ? tokenConfig.migration.migrationContract.oldAddresses : [];\n      const tokenMigrationToolParams = this.getGlobalConfig(['tools','tokenMigration','props','migrationContract']);\n\n      const batchMigration = this.getGlobalConfig(['tools','batchMigration','props','availableTokens',tokenConfig.idle.token]);\n      const batchMigrationContractAddr = batchMigration && batchMigration.migrationContract ? batchMigration.migrationContract.address : null;\n\n      // const curveEnabled = this.getGlobalConfig(['curve','enabled']);\n      const curveTokenConfig = this.getGlobalConfig(['curve','availableTokens',tokenConfig.idle.token]);\n\n      results.forEach( tx => {\n        let tokenDecimals = tokenConfig.decimals;\n        const idleToken = tokenConfig.idle.token;\n        const internalTxs = results.filter(r => r.hash === tx.hash);\n        const isRightToken = internalTxs.length>1 && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase()).length>0;\n        const isSendTransferTx = internalTxs.length === 1 && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isReceiveTransferTx = internalTxs.length === 1 && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isBatchMigrationTx = batchMigrationContractAddr && tx.from.toLowerCase() === batchMigrationContractAddr.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase();\n\n        const isDepositInternalTx = isRightToken && internalTxs.find( iTx => iTx.from.toLowerCase() === this.props.account.toLowerCase() && (iTx.to.toLowerCase() === tokenConfig.idle.address.toLowerCase() || (depositProxyContractInfo && iTx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase() && internalTxs.filter(iTx2 => iTx2.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length>0 )) );\n        const isRedeemInternalTx = isRightToken && internalTxs.find( iTx => iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && internalTxs.filter(iTx2 => iTx2.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length && iTx.to.toLowerCase() === this.props.account.toLowerCase() );\n\n        const isMigrationTx = isBatchMigrationTx || (migrationContractAddr && (tx.from.toLowerCase() === migrationContractAddr.toLowerCase() || migrationContractOldAddrs.map((v) => { return v.toLowerCase(); }).includes(tx.from.toLowerCase()) ) && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase());\n        const isConversionTx = tokenMigrationToolParams && (tx.from.toLowerCase() === tokenMigrationToolParams.address.toLowerCase() || tokenMigrationToolParams.oldAddresses.map((v) => { return v.toLowerCase(); }).includes(tx.from.toLowerCase())) && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isDepositTx = isRightToken && !isMigrationTx && tx.from.toLowerCase() === this.props.account.toLowerCase() && (tx.to.toLowerCase() === tokenConfig.idle.address.toLowerCase() || (depositProxyContractInfo && tx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase() && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length>0 ));\n        const isRedeemTx = isRightToken && !isMigrationTx && !isDepositInternalTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length && tx.to.toLowerCase() === this.props.account.toLowerCase();\n        const isWithdrawTx = internalTxs.length>1 && internalTxs.filter(iTx => tokenConfig.protocols.map(p => p.address.toLowerCase()).includes(iTx.contractAddress.toLowerCase()) ).length>0 && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n\n        // const curveDepositTx = internalTxs.find( iTx => (iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && iTx.from.toLowerCase() === this.props.account.toLowerCase()) );\n        const idleTokenAddress = curveTokenConfig && curveTokenConfig.address ? curveTokenConfig.address : tokenConfig.idle.address;\n\n        // Check Curve\n        const curveTx = internalTxs.find( tx => (tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && (tx.to.toLowerCase() === this.props.account.toLowerCase() || tx.from.toLowerCase() === this.props.account.toLowerCase()) ) );\n        const isCurveTx = curveTx !== undefined;\n\n        const isCurveDepositTx = isCurveTx && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase() && tx.to.toLowerCase() === curveSwapContract.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveRedeemTx = isCurveTx && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveSwapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveDepositIn = isCurveTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.to.toLowerCase() === curveDepositContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveDepositOut = isCurveTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveDepositContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveZapIn = isCurveTx && tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveZapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveZapOut = isCurveTx && tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.to.toLowerCase() === curveZapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveTransferOut = tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && !isCurveZapOut && !isCurveRedeemTx && /*internalTxs[internalTxs.length-1] === tx &&*/ tx.from.toLowerCase() === this.props.account.toLowerCase();\n        const isCurveTransferIn = tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && !isCurveZapIn && !isCurveDepositTx && /*internalTxs[internalTxs.length-1] === tx &&*/ tx.to.toLowerCase() === this.props.account.toLowerCase();\n\n        const isSwapOutTx = !isCurveTx && !isSendTransferTx && !isWithdrawTx && !isRedeemInternalTx && !etherscanTxs[tx.hash] && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isSwapTx = !isCurveTx && !isReceiveTransferTx && !isConversionTx && !isDepositInternalTx && !etherscanTxs[tx.hash] && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n\n        // if (tx.hash.toLowerCase() === '0x599a2e7b0094b0a943ffb1d520cb47598dcf3764145c33824e3b032d91ccc489'.toLowerCase()){\n        //   debugger;\n        // }\n\n        if (isSendTransferTx || isReceiveTransferTx || isMigrationTx || isDepositTx || isRedeemTx || isSwapTx || isSwapOutTx || isWithdrawTx || isConversionTx || isCurveDepositTx || isCurveRedeemTx || isCurveZapIn || isCurveZapOut || isCurveTransferOut || isCurveTransferIn || isCurveDepositIn || isCurveDepositOut){\n\n          let action = null;\n          let hashKey = tx.hash;\n\n          if (isDepositTx){\n            action = 'Deposit';\n          } else if (isRedeemTx){\n            action = 'Redeem';\n          } else if (isMigrationTx || isConversionTx){\n            action = 'Migrate';\n          } else if (isSendTransferTx){\n            action = 'Send';\n          } else if (isReceiveTransferTx){\n            action = 'Receive';\n          } else if (isSwapTx){\n            action = 'Swap';\n          } else if (isSwapOutTx){\n            action = 'SwapOut';\n          } else if (isWithdrawTx){\n            action = 'Withdraw';\n          } else if (isCurveDepositTx){\n            action = 'CurveIn';\n          } else if (isCurveRedeemTx){\n            action = 'CurveOut';\n          } else if (isCurveZapIn){\n            action = 'CurveZapIn';\n          } else if (isCurveZapOut){\n            action = 'CurveZapOut';\n          } else if (isCurveDepositIn){\n            action = 'CurveDepositIn';\n          } else if (isCurveDepositOut){\n            action = 'CurveDepositOut';\n          } else if (isCurveTransferIn){\n            action = 'CurveTransferIn';\n          } else if (isCurveTransferOut){\n            action = 'CurveTransferOut';\n          }\n\n          let curveTokens = null;\n          if (isCurveTx){\n            hashKey += '_'+tx.tokenSymbol;\n            curveTokens = this.fixTokenDecimals(curveTx.value,curvePoolContract.decimals);\n\n            // Add action for curve tokens transfers\n            if ((isCurveTransferIn || isCurveTransferOut)){\n              hashKey+='_'+action;\n            }\n          }\n\n          // this.customLog('SAVE!',action);\n\n          if (tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()){\n            tokenDecimals = 18;\n          } else if (isCurveTx){\n            tokenDecimals = parseInt(tx.tokenDecimal);\n          }\n\n          // Sum the value if already processed\n          if (etherscanTxs[hashKey]){\n            // Prevent second internal tx to sum SwapOut original value\n            switch (etherscanTxs[hashKey].action){\n              case 'SwapOut':\n                if (etherscanTxs[hashKey].action !== action && isRedeemTx){\n                  etherscanTxs[hashKey].tokenValue = this.fixTokenDecimals(tx.value,tokenDecimals);\n                }\n              break;\n              default:\n                if (!curveTx){\n                  const newValue = etherscanTxs[hashKey].value.plus(this.fixTokenDecimals(tx.value,tokenDecimals));\n                  etherscanTxs[hashKey].value = newValue;\n                }\n              break;\n            }\n          } else {\n            // Insert tx in curve transfers buffer\n            if (isCurveTransferIn || isCurveTransferOut){\n              if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())){\n                curveTokens = this.fixTokenDecimals(tx.value,curvePoolContract.decimals);\n                curveTransfersTxs.push({...tx, hashKey, token, idleToken, curveTokens, action, value: this.fixTokenDecimals(tx.value,tokenDecimals)});\n              }\n            } else {\n              etherscanTxs[hashKey] = ({...tx, hashKey, token, idleToken, curveTokens, action, value: this.fixTokenDecimals(tx.value,tokenDecimals)});\n\n              // Delete curveTransfers\n              if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())){\n                curveTransfersTxsToDelete.push(tx.hash.toLowerCase());\n              }\n\n              // Take right tokenSymbol\n              switch (action){\n                case 'Withdraw':\n                  const iTxs = internalTxs.filter(iTx => (iTx !== tx));\n                  if (iTxs.length>0){\n                    const iTx = iTxs[0];\n                    etherscanTxs[hashKey].withdrawnValue = this.fixTokenDecimals(iTx.value,iTx.tokenDecimal);\n                    etherscanTxs[hashKey].tokenSymbol = iTx.tokenSymbol;\n                  }\n                break;\n                case 'CurveIn':\n                case 'CurveOut':\n                case 'CurveZapIn':\n                case 'CurveZapOut':\n                case 'CurveDepositIn':\n                case 'CurveDepositOut':\n                  etherscanTxs[hashKey].tokenSymbol = token;\n                break;\n                default:\n                break;\n              }\n            }   \n          }\n        }\n      });\n    });\n    \n    curveTransfersTxs.forEach( tx => {\n      if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())){\n        etherscanTxs[tx.hashKey] = tx;\n      }\n    });\n  \n    if (processTxs){\n      etherscanTxs = await this.processEtherscanTransactions(etherscanTxs,enabledTokens,processStoredTxs);\n    }\n\n    // console.log('etherscanTxs',etherscanTxs);\n\n    return etherscanTxs;\n  }\n  addStoredTransaction = (txKey,transaction) => {\n\n    const account = this.props && this.props.account ? this.props.account : null;\n    const selectedToken = this.props && this.props.selectedToken ? this.props.selectedToken : null;\n\n    if (!account || !selectedToken || !this.props.availableTokens || !this.props.availableTokens[selectedToken]){\n      return false;\n    }\n\n    const tokenConfig = this.props.availableTokens[selectedToken];\n    const tokenKey = tokenConfig.idle.token;\n\n    let storedTxs = this.getStoredTransactions();\n    if (!storedTxs[account]){\n      storedTxs[account] = {};\n    }\n\n    if (!storedTxs[account][tokenKey]){\n      storedTxs[account][tokenKey] = {};\n    }\n\n    storedTxs[account][tokenKey][txKey] = transaction;\n    this.updateStoredTransactions(storedTxs);\n  }\n  updateStoredTransactions = transactions => {\n    this.setLocalStorage('transactions',JSON.stringify(transactions));\n  }\n  /*\n  Merge storedTxs with this.props.transactions\n  */\n  getStoredTransactions = (account=null,tokenKey=null,selectedToken=null) => {\n    const storedTxs = this.getStoredItem('transactions',true,{});\n    const transactions = this.props.transactions ? { ...this.props.transactions } : {};\n    let output = storedTxs;\n\n    if (account){\n      if (storedTxs[account]){\n        output = storedTxs[account];\n        if (tokenKey){\n          output = output[tokenKey] ? output[tokenKey] : {};\n\n          if (selectedToken){\n            Object.keys(transactions).forEach(txKey => {\n              const tx = transactions[txKey];\n              if (!output[txKey] && tx.token && tx.token.toUpperCase() === selectedToken.toUpperCase()){\n                output[txKey] = transactions[txKey];\n              }\n            });\n          }\n        }\n      } else {\n        output = {};\n      }\n    }\n\n    return output;\n  }\n  processEtherscanTransactions = async (etherscanTxs,enabledTokens=[],processStoredTxs=true) => {\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let txReceipts = {};\n    let storedTxs = this.getStoredTransactions();\n\n    // Init storedTxs for pair account-token if empty\n    if (typeof storedTxs[this.props.account] !== 'object'){\n      storedTxs[this.props.account] = {};\n    }\n\n    // Take base tokens addresses and configs\n    const baseTokensConfigs = {};\n    const baseTokensAddresses = [];\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n    Object.keys(curveAvailableTokens).forEach( token => {\n      const curveTokenConfig = curveAvailableTokens[token];\n      const baseTokenConfig = this.getGlobalConfig(['stats','tokens',curveTokenConfig.baseToken]);\n      const baseTokenAddress = baseTokenConfig.address.toLowerCase();\n      baseTokensConfigs[baseTokenAddress] = baseTokenConfig;\n      baseTokensConfigs[baseTokenAddress].token = curveTokenConfig.baseToken;\n      baseTokensAddresses.push(baseTokenAddress);\n    });\n\n    const curveZapContract = this.getGlobalConfig(['curve','zapContract']);\n    // const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n    // const curveSwapContract = this.getGlobalConfig(['curve','migrationContract']);\n    // const curveDepositContract = this.getGlobalConfig(['curve','depositContract']);\n\n    await this.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const tokenKey = tokenConfig.idle.token;\n      const idleToken = tokenConfig.idle.token;\n\n      // Init storedTxs for pair account-token if empty\n      if (typeof storedTxs[this.props.account][tokenKey] !== 'object'){\n        storedTxs[this.props.account][tokenKey] = {};\n      }\n\n      const minedTxs = {...storedTxs[this.props.account][tokenKey]};\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        await this.asyncForEach(filteredTxs,async (tx,index) => {\n          const txKey = `tx${tx.timeStamp}000`;\n          const storedTx = storedTxs[this.props.account][tokenKey][txKey] ? storedTxs[this.props.account][tokenKey][txKey] : tx;\n\n          let tokenPrice = null;\n          \n          if (storedTx.tokenPrice && !this.BNify(storedTx.tokenPrice).isNaN()){\n            tokenPrice = this.BNify(storedTx.tokenPrice);\n          } else {\n            tokenPrice = await this.getIdleTokenPrice(tokenConfig,tx.blockNumber,tx.timeStamp);\n            storedTx.tokenPrice = tokenPrice;\n          }\n\n          let idleTokens = this.BNify(tx.value);\n          let tokensTransfered = tokenPrice.times(idleTokens);\n\n          // Add transactionHash to storedTx\n          if (!storedTx.transactionHash){\n            storedTx.transactionHash = tx.hash;\n          }\n\n          // Deposited\n          switch (tx.action){\n            case 'Send':\n            case 'Receive':\n            case 'Swap':\n            case 'SwapOut':\n            case 'Migrate':\n              if (!storedTx.tokenAmount){\n                storedTx.idleTokens = idleTokens;\n                storedTx.value = tokensTransfered;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.tokenSymbol = selectedToken;\n              }\n            break;\n            case 'Deposit':\n            case 'Redeem':\n              if (!storedTx.tokenAmount){\n                storedTx.value = idleTokens;\n                storedTx.tokenAmount = idleTokens;\n                storedTx.idleTokens = idleTokens.div(tokenPrice);\n              }\n            break;\n            case 'Withdraw':\n              if (!storedTx.tokenAmount){\n                storedTx.idleTokens = idleTokens;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.value = storedTx.withdrawnValue;\n              }\n            break;\n            case 'CurveIn':\n            case 'CurveOut':\n              if (!storedTx.tokenAmount){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.idleTokens = idleTokens;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n            break;\n            case 'CurveTransferIn':\n            case 'CurveTransferOut':\n              if (!storedTx.curveTokenPrice){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n                storedTx.tokenAmount = this.BNify(storedTx.curveTokens).times(storedTx.curveTokenPrice);\n              }\n\n              storedTx.idleTokens = this.BNify(0);\n            break;\n            case 'CurveZapIn':\n            case 'CurveZapOut':\n              if (!storedTx.curveTokenPrice){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n\n              if (!storedTx.tokenAmount){\n\n                storedTx.tokenAmount = this.BNify(0);\n                storedTx.idleTokens = this.BNify(0);\n\n                const curveTxReceipt = txReceipts[tx.hashKey] ? txReceipts[tx.hashKey] : await (new Promise( async (resolve, reject) => {\n                  this.props.web3.eth.getTransactionReceipt(tx.hash,(err,tx)=>{\n                    if (err){\n                      reject(err);\n                    }\n                    resolve(tx);\n                  });\n                }));\n\n                if (curveTxReceipt){\n\n                  // Save receipt\n                  if (!txReceipts[tx.hashKey]){\n                    txReceipts[tx.hashKey] = curveTxReceipt;\n                  }\n\n                  const filteredLogs = curveTxReceipt.logs.filter( log => (baseTokensAddresses.includes(log.address.toLowerCase()) && log.topics[log.topics.length-1].toLowerCase() === `0x00000000000000000000000${curveZapContract.address.replace('x','').toLowerCase()}` ) );\n\n                  this.customLog('filteredLogs',filteredLogs);\n\n                  if (filteredLogs && filteredLogs.length){\n                    filteredLogs.forEach( log => {\n                      let tokenAmount = parseInt(log.data,16);\n                      const baseTokensConfig = baseTokensConfigs[log.address.toLowerCase()];\n                      const tokenDecimals = baseTokensConfig.decimals;\n                      tokenAmount = this.fixTokenDecimals(tokenAmount,tokenDecimals);\n                      storedTx.tokenAmount = storedTx.tokenAmount.plus(tokenAmount);\n                      this.customLog('Add tokenAmount ('+tx.hash+')',baseTokensConfig.token,tokenAmount.toFixed(5),storedTx.tokenAmount.toFixed(5));\n                    });\n                  }\n                }\n              }\n            break;\n            case 'CurveDepositIn':\n            case 'CurveDepositOut':\n              if (!storedTx.curveTokenPrice){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n\n              storedTx.tokenAmount = this.BNify(storedTx.value);\n\n              if (!storedTx.idleTokens){\n\n                const curveTxReceipt = txReceipts[tx.hashKey] ? txReceipts[tx.hashKey] : await (new Promise( async (resolve, reject) => {\n                  this.props.web3.eth.getTransactionReceipt(tx.hash,(err,tx)=>{\n                    if (err){\n                      reject(err);\n                    }\n                    resolve(tx);\n                  });\n                }));\n\n                if (curveTxReceipt){\n                  const curveTokenConfig = this.getGlobalConfig(['curve','availableTokens',idleToken]);\n                  const idleTokenDecimals = curveTokenConfig && curveTokenConfig.decimals ? curveTokenConfig.decimals : 18;\n                  const idleTokenAddress = curveTokenConfig && curveTokenConfig.address ? curveTokenConfig.address : tokenConfig.idle.address;\n\n                  // Save receipt\n                  if (!txReceipts[tx.hashKey]){\n                    txReceipts[tx.hashKey] = curveTxReceipt;\n                  }\n\n                  const filteredLogs = curveTxReceipt.logs.filter( log => (log.address.toLowerCase()===idleTokenAddress ) );\n                  if (filteredLogs && filteredLogs.length){\n                    idleTokens = parseInt(filteredLogs[0].data,16);\n                    idleTokens = this.fixTokenDecimals(idleTokens,idleTokenDecimals);\n                    storedTx.idleTokens = idleTokens;\n                  }\n                }\n              }\n            break;\n            default:\n            break;\n          }\n            \n          // Save token for future filtering\n          storedTx.token = selectedToken;\n\n          // Save processed tx\n          etherscanTxs[tx.hashKey] = storedTx;\n\n          // Store processed Tx\n          storedTxs[this.props.account][tokenKey][txKey] = storedTx;\n\n          // Remove from minted Txs\n          delete minedTxs[txKey];\n        });\n      }\n\n      // Process Stored txs\n      if (processStoredTxs){\n        etherscanTxs = await this.processStoredTxs(etherscanTxs,[selectedToken],this.props.transactions);\n      }\n    });\n\n    // Update Stored txs\n    if (storedTxs){\n      this.updateStoredTransactions(storedTxs);\n    }\n\n    return etherscanTxs;\n  }\n  processStoredTxs = async (etherscanTxs,enabledTokens=[],txsToProcess=null) => {\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let storedTxs = this.getStoredItem('transactions',true,{})\n\n    // Init storedTxs\n    if (!storedTxs[this.props.account]){\n      storedTxs[this.props.account] = {};\n    }\n\n    etherscanTxs = Object.assign({},etherscanTxs);\n\n    const networkId = this.getGlobalConfig(['network','requiredNetwork']);\n\n    // this.customLog('Processing stored txs',enabledTokens);\n\n    await this.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const tokenKey = tokenConfig.idle.token;\n\n      // Init storedTxs\n      if (!storedTxs[this.props.account][tokenKey]){\n        storedTxs[this.props.account][tokenKey] = {};\n      }\n\n      txsToProcess = txsToProcess && Object.values(txsToProcess).length ? txsToProcess : this.getStoredTransactions(this.props.account,tokenKey,selectedToken);\n      \n      // this.customLog('txsToProcess',selectedToken,txsToProcess);\n\n      // if (!Object.values(txsToProcess).length && selectedToken==='DAI' && Object.values(this.props.transactions).length>0){\n      //   debugger;\n      // }\n\n      // Debug transactions\n      /*\n      txsToProcess['xxxxx'] = {\n        status:'success',\n        created:Date.now(),\n        method:'executeMetaTransaction',\n        token:selectedToken.toUpperCase(),\n        transactionHash:'0x000000000000000000000000000'\n      };\n      */\n\n      await this.asyncForEach(Object.keys(txsToProcess),async (txKey,i) => {\n        const tx = txsToProcess[txKey];\n\n        // Skip wrong token\n        if (!tx || !tx.token || tx.token.toUpperCase() !== selectedToken.toUpperCase() || (tx.networkId && parseInt(tx.networkId) !== parseInt(networkId))){\n          return false;\n        }\n\n        const isStoredTx = storedTxs && storedTxs[this.props.account] && storedTxs[this.props.account][tokenKey] && storedTxs[this.props.account][tokenKey][txKey];\n\n        const allowedMethods = {\n          mintIdleToken:'Deposit',\n          redeemIdleToken:'Redeem',\n          migrateFromToIdle:'Migrate',\n          mintIdleTokensProxy:'Deposit',\n          migrateFromAaveToIdle:'Migrate',\n          migrateFromIearnToIdle:'Migrate',\n          executeMetaTransaction:'Migrate',\n          migrateFromFulcrumToIdle:'Migrate',\n          migrateFromCompoundToIdle:'Migrate',\n        };\n        const pendingStatus = ['pending','started'];\n        const txSucceeded = tx.status === 'success';\n        const txPending = pendingStatus.includes(tx.status);\n        const isMetaTx = tx.method === 'executeMetaTransaction';\n        const txHash = tx.transactionHash ? tx.transactionHash : null;\n        const methodIsAllowed = Object.keys(allowedMethods).includes(tx.method);\n\n        // Skip transaction if already present in etherscanTxs with same status\n        if (txHash && etherscanTxs[txHash] && etherscanTxs[txHash].tokenPrice){\n          return false;\n        }\n\n        if (txPending && txHash && !etherscanTxs[txHash] && methodIsAllowed && tx.params.length){\n          // this.customLog('processStoredTxs',tx.method,tx.status,tx.params);\n          const isMigrationTx = allowedMethods[tx.method] === 'Migrate';\n          const decimals = isMigrationTx ? 18 : tokenConfig.decimals;\n          etherscanTxs[`t${tx.created}`] = {\n            status:'Pending',\n            token:selectedToken,\n            action:allowedMethods[tx.method],\n            timeStamp:parseInt(tx.created/1000),\n            hash:txHash ? tx.transactionHash : null,\n            tokenSymbol:isMigrationTx ? tokenConfig.idle.token : selectedToken,\n            value: tx.value ? tx.value : this.fixTokenDecimals(tx.params[0],decimals).toString()\n          };\n\n          return false;\n        }\n\n        // Skip invalid txs\n        if (!txSucceeded || !txHash || !methodIsAllowed){\n          return false;\n        }\n\n        let realTx = tx.realTx ? tx.realTx : null;\n\n        if (!realTx){\n          // this.customLog('loadTxs - getTransaction',tx.transactionHash);\n          realTx = await (new Promise( async (resolve, reject) => {\n            this.props.web3.eth.getTransaction(tx.transactionHash,(err,txReceipt)=>{\n              if (err){\n                reject(err);\n              }\n              resolve(txReceipt);\n            });\n          }));\n        }\n\n        // this.customLog('realTx (localStorage)',realTx);\n\n        // Skip txs from other wallets if not meta-txs\n        if (!realTx || (!isMetaTx && realTx.from.toLowerCase() !== this.props.account.toLowerCase())){\n          return false;\n        }\n\n        const tokenPrice = await this.getIdleTokenPrice(tokenConfig,realTx.blockNumber,realTx.timeStamp);\n\n        realTx.status = 'Completed';\n        realTx.action = allowedMethods[tx.method];\n        realTx.contractAddress = tokenConfig.address;\n        realTx.timeStamp = parseInt(tx.created/1000);\n\n        let txValue = null;\n        switch (tx.method){\n          case 'mintIdleToken':\n          case 'mintIdleTokensProxy':\n            if (!tx.params){\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n              return false;\n            }\n\n            if (realTx.to.toLowerCase() !== tokenConfig.idle.address.toLowerCase()){\n              // Remove wrong contract tx\n              if (isStoredTx){\n                delete storedTxs[this.props.account][tokenKey][txKey];\n              }\n              // this.customLog('Skipped deposit tx '+tx.transactionHash+' - wrong contract');\n              return false;\n            }\n\n            txValue = tx.params ? this.fixTokenDecimals(tx.params[0],tokenConfig.decimals).toString() : 0;\n            if (!txValue){\n              // this.customLog('Skipped deposit tx '+tx.transactionHash+' - value is zero ('+txValue+')');\n              return false;\n            }\n\n            realTx.value = txValue;\n            realTx.tokenAmount = txValue;\n          break;\n          case 'redeemIdleToken':\n            if (!tx.params){\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n              return false;\n            }\n\n            if (!realTx.tokenPrice){\n              const redeemedValueFixed = this.fixTokenDecimals(tx.params[0],18).times(tokenPrice);\n              realTx.tokenPrice = tokenPrice;\n              realTx.value = redeemedValueFixed;\n              realTx.tokenAmount = redeemedValueFixed;\n            }\n          break;\n          case 'executeMetaTransaction':\n            let executeMetaTransactionReceipt = tx.txReceipt ? tx.txReceipt : null;\n\n            if (!executeMetaTransactionReceipt){\n              executeMetaTransactionReceipt = await (new Promise( async (resolve, reject) => {\n                this.props.web3.eth.getTransactionReceipt(tx.transactionHash,(err,tx)=>{\n                  if (err){\n                    reject(err);\n                  }\n                  resolve(tx);\n                });\n              }));\n            }\n\n            if (!executeMetaTransactionReceipt){\n              return false;\n            }\n\n            // Save txReceipt into the tx\n            if (!tx.txReceipt){\n              tx.txReceipt = executeMetaTransactionReceipt;\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n            }\n\n            let action = null;\n            let executeMetaTransactionContractAddr = null;\n            let executeMetaTransactionInternalTransfers = [];\n            const IdleProxyMinterInfo = this.getGlobalConfig(['contract','deposit','proxyContract']);\n\n            // Handle migration tx\n            if (tokenConfig.migration && tokenConfig.migration.oldContract){\n              if (executeMetaTransactionReceipt.logs){\n                executeMetaTransactionContractAddr = tokenConfig.migration.oldContract.address.replace('x','').toLowerCase();\n                executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n              } else if (executeMetaTransactionReceipt.events){\n                executeMetaTransactionInternalTransfers = Object.values(executeMetaTransactionReceipt.events).filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase(); });\n              }\n\n              if (executeMetaTransactionInternalTransfers.length){\n                action = 'Migrate';\n              }\n            }\n\n            // Handle deposit tx\n            if (!executeMetaTransactionInternalTransfers.length){\n              if (executeMetaTransactionReceipt.logs){\n                executeMetaTransactionContractAddr = tokenConfig.idle.address.replace('x','').toLowerCase();\n                executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n\n                // Handle deposit made with proxy contract\n                if (!executeMetaTransactionInternalTransfers.length && IdleProxyMinterInfo){\n                  executeMetaTransactionContractAddr = IdleProxyMinterInfo.address.replace('x','').toLowerCase();\n                  executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n                }\n              } else if (executeMetaTransactionReceipt.events){\n                executeMetaTransactionInternalTransfers = Object.values(executeMetaTransactionReceipt.events).filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase(); });\n              }\n\n              if (executeMetaTransactionInternalTransfers.length){\n                action = 'Deposit';\n              }\n            }\n\n            if (!executeMetaTransactionInternalTransfers.length){\n              return false;\n            }\n\n            const internalTransfer = executeMetaTransactionInternalTransfers[0];\n\n            const metaTxValue = internalTransfer.data ? parseInt(internalTransfer.data,16) : (internalTransfer.raw && internalTransfer.raw.data) ? parseInt(internalTransfer.raw.data,16) : null;\n\n            if (!metaTxValue){\n              return false;\n            }\n\n            const metaTxValueFixed = this.fixTokenDecimals(metaTxValue,tokenConfig.decimals);\n            realTx.action = action;\n            realTx.value = metaTxValueFixed;\n            realTx.tokenAmount = metaTxValueFixed;\n            // this.customLog(metaTxValueFixed.toString());\n          break;\n          case 'migrateFromCompoundToIdle':\n          case 'migrateFromFulcrumToIdle':\n          case 'migrateFromAaveToIdle':\n          case 'migrateFromIearnToIdle':\n          case 'migrateFromToIdle':\n            if (!tokenConfig.migration || !tokenConfig.migration.oldContract){\n              return false;\n            }\n\n            let migrationTxReceipt = tx.txReceipt ? tx.txReceipt : null;\n\n            if (!migrationTxReceipt){\n              migrationTxReceipt = await (new Promise( async (resolve, reject) => {\n                this.props.web3.eth.getTransactionReceipt(tx.transactionHash,(err,tx)=>{\n                  if (err){\n                    reject(err);\n                  }\n                  resolve(tx);\n                });\n              }));\n            }\n\n            if (!migrationTxReceipt){\n              return false;\n            }\n\n            // Save txReceipt into the tx\n            if (!tx.txReceipt){\n              tx.txReceipt = migrationTxReceipt;\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n            }\n\n            const migrationContractAddr = tokenConfig.migration.migrationContract.address.toLowerCase().replace('x','');\n            const contractAddress = tokenConfig.idle.address.toLowerCase().replace('x','');\n            const migrationTxInternalTransfers = migrationTxReceipt.logs.filter((tx) => { return tx.topics.length>=3 && tx.topics[tx.topics.length-2].toLowerCase() === `0x00000000000000000000000${migrationContractAddr}` && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${contractAddress}`; });\n\n            if (!migrationTxInternalTransfers.length){\n              return false;\n            }\n\n            const migrationInternalTransfer = migrationTxInternalTransfers.pop();\n\n            const decodedLogs = this.props.web3.eth.abi.decodeLog([\n              {\n                internalType: \"uint256\",\n                name: \"_token\",\n                type: \"uint256\"\n              },\n            ],migrationInternalTransfer.data,migrationInternalTransfer.topics);\n\n            if (!decodedLogs || !decodedLogs._token){\n              return false;\n            }\n\n            const migrationValue = decodedLogs._token;\n            const migrationValueFixed = this.fixTokenDecimals(migrationValue,tokenConfig.decimals);\n            realTx.value = migrationValueFixed.toString();\n          break;\n          default:\n          break;\n        }\n\n        realTx.tokenPrice = tokenPrice;\n        realTx.token = selectedToken;\n        realTx.tokenSymbol = selectedToken;\n        realTx.idleTokens = tokenPrice.times(this.BNify(realTx.value));\n\n        // Save processed tx\n        etherscanTxs[txHash] = realTx;\n        // etherscanTxs.push(realTx);\n\n        // Store processed Tx\n        if (!tx.realTx){\n          tx.realTx = realTx;\n          storedTxs[this.props.account][tokenKey][txKey] = tx;\n        }\n      });\n    });\n\n    // Update Stored Txs\n    if (storedTxs){\n      this.updateStoredTransactions(storedTxs);\n    }\n\n    return etherscanTxs;\n  }\n  saveCachedRequest = (endpoint,alias=false,data) => {\n    const key = alias ? alias : endpoint;\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    const timestamp = parseInt(Date.now()/1000);\n    cachedRequests[key] = {\n      data,\n      timestamp\n    };\n    return this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n  }\n  getCustomAddress = () => {\n    return this.getStoredItem('customAddress',false);\n  }\n  setCustomAddress = (customAddress) => {\n    return this.setLocalStorage('customAddress',customAddress);\n  }\n  getCachedRequest = (endpoint,alias=false) => {\n    const key = alias ? alias : endpoint;\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key]){\n      return cachedRequests[key].data;\n    }\n    return null;\n  }\n  makeRequest = async(endpoint,error_callback=false,config=null) => {\n    const data = await axios\n                  .get(endpoint,config)\n                  .catch(err => {\n                    if (typeof error_callback === 'function'){\n                      error_callback(err);\n                    }\n                  });\n    return data;\n  }\n  makeCachedRequest = async (endpoint,TTL=60,return_data=false,alias=false) => {\n    const key = alias ? alias : endpoint;\n    const timestamp = parseInt(Date.now()/1000);\n    \n    // Check if already exists\n    const cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key] && cachedRequests[key].timestamp && timestamp-cachedRequests[key].timestamp<TTL){\n      return (cachedRequests[key].data && return_data ? cachedRequests[key].data.data : cachedRequests[key].data);\n    }\n\n    const data = await this.makeRequest(endpoint);\n\n    cachedRequests[key] = {\n      data,\n      timestamp\n    };\n    this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n    return (data && return_data ? data.data : data);\n  }\n  getTransactionError = error => {\n    let output = 'error';\n    if (parseInt(error.code)){\n      const errorCode = parseInt(error.code);\n      switch (errorCode){\n        case 4001:\n          output = 'denied';\n        break;\n        default:\n          output = `error_${errorCode}`;\n        break;\n      }\n    } else if (error.message){\n      output = error.message.split(\"\\n\")[0]; // Take just the first line of the error\n    }\n\n    return output;\n  }\n  getGlobalConfigs = () => {\n    return globalConfigs;\n  }\n  getArrayPath = (path,array) => {\n    path = Object.assign([],path);\n    if (path.length>0){\n      const prop = path.shift();\n      if (!path.length){\n        return array[prop] ? array[prop] : null;\n      } else if (array[prop]) {\n        return this.getArrayPath(path,array[prop]);\n      }\n    }\n    return null;\n  }\n  getGlobalConfig = (path,configs=false) => {\n    configs = configs ? configs : globalConfigs;\n    if (path.length>0){\n      const prop = path.shift();\n      if (!path.length){\n        return configs[prop] ? configs[prop] : null;\n      } else if (configs[prop]) {\n        return this.getGlobalConfig(path,configs[prop]);\n      }\n    }\n    return null;\n  }\n  checkUrlOrigin = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n  }\n  checkUrlBeta = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.betaURL.toLowerCase());\n  }\n  sendGoogleAnalyticsEvent = async (eventData,callback=null) => {\n\n    const googleEventsInfo = globalConfigs.analytics.google.events;\n    const debugEnabled = googleEventsInfo.debugEnabled;\n    const originOk = window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n\n    if (googleEventsInfo.enabled && window.ga && ( debugEnabled || originOk)){\n\n      // Check if testnet postfix required\n      if (googleEventsInfo.addPostfixForTestnet){\n        // Postfix network name if not mainnet\n        if (globalConfigs.network.requiredNetwork !== 1){\n          const currentNetwork = globalConfigs.network.availableNetworks[globalConfigs.network.requiredNetwork];\n          eventData.eventCategory += `_${currentNetwork}`;\n        // Postfix test for debug\n        } else if (debugEnabled && !originOk) {\n          eventData.eventCategory += '_test';\n        }\n      }\n\n      await (new Promise( async (resolve, reject) => {\n        eventData.hitCallback = () => {\n          resolve(true);\n        };\n        eventData.hitCallbackFail = () => {\n          reject();\n        };\n\n        window.ga('send', 'event', eventData);\n      }));\n\n      if (typeof callback === 'function'){\n        callback();\n      }\n    }\n\n    if (typeof callback === 'function'){\n      callback();\n    }\n\n    return false;\n  }\n  createContract = async (name, address, abi) => {\n    try {\n      const contract = new this.props.web3.eth.Contract(abi, address);\n      return {name, contract};\n    } catch (error) {\n      this.customLogError(\"Could not create contract.\",name,address,error);\n    }\n    return null;\n  }\n  getWalletProvider = (defaultProvider=null) => {\n    return this.getStoredItem('walletProvider',false,defaultProvider);\n  }\n  simpleIDPassUserInfo = (userInfo,simpleID) => {\n    if (!userInfo.address && this.props.account){\n      userInfo.address = this.props.account;\n    }\n    if (!userInfo.provider){\n      userInfo.provider = this.getWalletProvider();\n    }\n    if (typeof userInfo.email !== 'undefined' && !userInfo.email){\n      delete userInfo.email;\n    }\n    if (!userInfo.address){\n      return false;\n    }\n    simpleID = simpleID ? simpleID : (this.props.simpleID ? this.props.simpleID : (typeof this.props.initSimpleID === 'function' ? this.props.initSimpleID() : null));\n    if (simpleID){\n      return simpleID.passUserInfo(userInfo);\n    }\n    return false;\n  }\n  getEtherscanTransactionUrl = (tx_address) => {\n    return tx_address ? 'https://etherscan.io/tx/'+tx_address : null;\n  }\n  getEtherscanAddressUrl = (address) => {\n    return address ? 'https://etherscan.io/address/'+address : null;\n  }\n  formatMoney = (amount, decimalCount = 2, decimal = \".\", thousands = \",\") => {\n    try {\n      decimalCount = Math.abs(decimalCount);\n      decimalCount = isNaN(decimalCount) ? 2 : decimalCount;\n\n      const negativeSign = amount < 0 ? \"-\" : \"\";\n\n      let i = parseInt(amount = Math.abs(Number(amount) || 0).toFixed(decimalCount)).toString();\n      let j = (i.length > 3) ? i.length % 3 : 0;\n\n      return negativeSign + (j ? i.substr(0, j) + thousands : '') + i.substr(j).replace(/(\\d{3})(?=\\d)/g, \"$1\" + thousands) + (decimalCount ? decimal + Math.abs(amount - i).toFixed(decimalCount).slice(2) : \"\");\n    } catch (e) {\n      return null;\n    }\n  }\n  getSnapshotProposals = async (activeOnly=false) => {\n\n    const cachedDataKey = `snapshotProposals_${activeOnly}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const whitelist = this.getGlobalConfig(['network','providers','snapshot','whitelist']).map( addr => addr.toLowerCase() );\n    const endpoint = this.getGlobalConfig(['network','providers','snapshot','endpoints','proposals']);\n    let proposals = await this.makeCachedRequest(endpoint,1440,true);\n\n    if (proposals){\n      proposals = Object.values(proposals);\n\n      const currTime = parseInt(Date.now()/1000);\n      if (activeOnly){\n        proposals =  proposals.filter( p => (p.msg.payload.start<=currTime && p.msg.payload.end>currTime) );\n      }\n\n      // console.log(proposals);\n\n      const validProposals = [];\n      await this.asyncForEach(proposals, async (p) => {\n        // Add proposal if ended\n        if (p.msg.payload.end<=currTime || whitelist.includes(p.address.toLowerCase())){\n          validProposals.push(p);\n        } else {\n          const blockNumber = p.msg.payload.snapshot;\n\n          let checkedStrategies = false;\n          await this.asyncForEach( p.msg.payload.metadata.strategies, async (s) => {\n            if (checkedStrategies){\n              return;\n            }\n            if (s.name==='erc20-balance-of'){\n              const tokenName = s.params.symbol;\n              const tokenContract = this.getContractByName(tokenName);\n              if (tokenContract){\n                const tokenBalance = await this.getTokenBalance(tokenName,p.address,true,blockNumber);\n                // console.log(p.relayerIpfsHash,s.name,tokenBalance ? tokenBalance.toFixed() : null);\n                if (tokenBalance && this.BNify(tokenBalance).gt(100)){\n                  checkedStrategies = true;\n                }\n              }\n            } else {\n              // checkedStrategies = true;\n            }\n\n            // console.log(p.relayerIpfsHash,s.name,checkedStrategies);\n          });\n\n          // Add proposal is passed token balances check\n          if (checkedStrategies){\n            validProposals.push(p);\n          }\n        }\n      });\n\n      return this.setCachedData(cachedDataKey,validProposals);\n    }\n\n  }\n  getTokenApiData = async (address,isRisk=null,startTimestamp=null,endTimestamp=null,forceStartTimestamp=false,frequency=null,order=null,limit=null) => {\n    if (globalConfigs.network.requiredNetwork!==1 || !globalConfigs.stats.enabled){\n      return [];\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenApiData_${address}_${isRisk}_${frequency}_${order}_${limit}`;\n    let cachedData = this.getCachedData(cachedDataKey);\n\n    if (cachedData){\n      // Check for fittable start and end time\n      const filteredCachedData = cachedData.filter( c => ( (c.startTimestamp===null || (startTimestamp && c.startTimestamp<=startTimestamp)) && (c.endTimestamp===null || (endTimestamp && c.endTimestamp>=endTimestamp)) ) )\n\n      if (filteredCachedData && filteredCachedData.length>0){\n        const filteredData = filteredCachedData.pop().data;\n        if (filteredData){\n          return filteredData.filter( d => ((!startTimestamp || d.timestamp>=startTimestamp) && (!endTimestamp || d.timestamp<=endTimestamp)) );\n        }\n        return null;\n      }\n    // Initialize cachedData\n    } else {\n      cachedData = [];\n    }\n\n    const apiInfo = globalConfigs.stats.rates;\n    let endpoint = `${apiInfo.endpoint}${address}`;\n\n    if (startTimestamp || endTimestamp || isRisk !== null || frequency !== null){\n      const params = [];\n\n      if (startTimestamp && parseInt(startTimestamp)){\n        if (forceStartTimestamp){\n          params.push(`start=${startTimestamp}`);\n        } else {\n          const start = startTimestamp-(60*60*24*2); // Minus 1 day for Volume graph\n          params.push(`start=${start}`);\n        }\n      }\n\n      if (endTimestamp && parseInt(endTimestamp)){\n        params.push(`end=${endTimestamp}`);\n      }\n\n      if (isRisk !== null){\n        params.push(`isRisk=${isRisk}`);\n      }\n\n      if (frequency !== null && parseInt(frequency)){\n        params.push(`frequency=${frequency}`);\n      }\n\n      if (order !== null){\n        params.push(`order=${order}`);\n      }\n\n      if (limit !== null && parseInt(limit)){\n        params.push(`limit=${limit}`);\n      }\n\n      if (params.length){\n        endpoint += '?'+params.join('&');\n      }\n    }\n\n    let output = await this.makeRequest(endpoint);\n    if (!output){\n      return [];\n    }\n\n    const data = output.data;\n\n    let filteredData = null;\n    if (isRisk !== null){\n      filteredData = data.filter( d => ( d.isRisk === isRisk ) );\n    }\n\n    cachedData.push({\n      isRisk,\n      endTimestamp,\n      startTimestamp,\n      data:filteredData,\n    });\n\n    this.setCachedData(cachedDataKey,cachedData);\n\n    return data;\n  }\n  getTokenDecimals = async (contractName) => {\n    contractName = contractName ? contractName : this.props.selectedToken;\n    return await this.genericContractCall(contractName,'decimals');\n  }\n  getAvgApr = (aprs,allocations,totalAllocation) => {\n    if (aprs && allocations && totalAllocation){\n      let avgApr = Object.keys(aprs).reduce((aprWeighted,protocolAddr) => {\n        const allocation = this.BNify(allocations[protocolAddr]);\n        const apr = this.BNify(aprs[protocolAddr]);\n        return this.BNify(aprWeighted).plus(allocation.times(apr));\n      },0);\n\n      if (avgApr){\n        return this.BNify(avgApr).div(totalAllocation);\n      }\n    }\n    return null;\n  }\n  getFrequencySeconds = (frequency,quantity=1) => {\n    const frequency_seconds = {\n      hour:3600,\n      day:86400,\n      week:604800\n    };\n    return frequency_seconds[frequency]*quantity;\n  }\n  getProtocolInfoByAddress = (addr) => {\n    return this.props.tokenConfig.protocols.find(c => c.address.toLowerCase() === addr.toLowerCase());\n  }\n  integerValue = value => {\n    return this.BNify(value).integerValue(BigNumber.ROUND_FLOOR).toFixed();\n  }\n  normalizeTokenDecimals = tokenDecimals => {\n    return this.BNify(`1e${tokenDecimals}`);\n  }\n  normalizeTokenAmount = (tokenBalance,tokenDecimals,round=true) => {\n    const normalizedTokenDecimals = this.normalizeTokenDecimals(tokenDecimals);\n    return this.BNify(tokenBalance).times(normalizedTokenDecimals).integerValue(BigNumber.ROUND_FLOOR).toFixed();\n  }\n  fixTokenDecimals = (tokenBalance,tokenDecimals,exchangeRate) => {\n    const normalizedTokenDecimals = this.normalizeTokenDecimals(tokenDecimals);\n    let balance = this.BNify(tokenBalance).div(normalizedTokenDecimals);\n    if (exchangeRate && !exchangeRate.isNaN()){\n      balance = balance.times(exchangeRate);\n    }\n    return balance;\n  }\n  checkContractPaused = async (contractName=null) => {\n    contractName = contractName ? contractName : this.props.tokenConfig.idle.token;\n    const contractPaused = await this.genericContractCall(contractName, 'paused', [], {}).catch(err => {\n      this.customLogError('Generic Idle call err:', err);\n    });\n    // this.customLog('checkContractPaused',this.props.tokenConfig.idle.token,contractPaused);\n    return contractPaused;\n  }\n  getStoredItem = (key,parse_json=true,return_default=null) => {\n    let output = return_default;\n    if (window.localStorage){\n      const item = localStorage.getItem(key);\n      if (item){\n        output = item;\n        if (parse_json){\n          output = JSON.parse(item);\n        }\n      }\n    }\n    if (!output){\n      return return_default;\n    }\n    return output;\n  }\n  clearStoredData = (excludeKeys=[]) => {\n    if (window.localStorage){\n\n      if (!excludeKeys || !excludeKeys.length){\n        return window.localStorage.clear();\n      }\n\n      const storedKeysToRemove = [];\n      for (let i=0;i<window.localStorage.length;i++){\n        const storedKey = window.localStorage.key(i);\n        if (!excludeKeys.includes(storedKey)){\n          storedKeysToRemove.push(storedKey);\n        }\n      }\n      storedKeysToRemove.forEach((storedKey) => {\n        this.removeStoredItem(storedKey)\n      });\n    }\n  }\n  removeStoredItem = (key) => {\n    if (window.localStorage){\n      window.localStorage.removeItem(key);\n      return true;\n    }\n    return false;\n  }\n  setLocalStorage = (key,value,stringify=false) => {\n    if (window.localStorage){\n      try {\n        value = stringify ? JSON.stringify(value) : value;\n        window.localStorage.setItem(key,value);\n        return true;\n      } catch (error) {\n        // this.customLog('setLocalStorage',error);\n        window.localStorage.removeItem(key);\n      }\n    }\n    return false;\n  }\n  checkRebalance = async (tokenConfig) => {\n    if (!tokenConfig && this.props.tokenConfig){\n      tokenConfig = this.props.tokenConfig;\n    }\n    if (!tokenConfig){\n      return false;\n    }\n\n    const lastAllocationsPromises = [];\n    const allocations = await this.genericContractCall(tokenConfig.idle.token, 'getAllocations');\n\n    for (let protocolIndex=0;protocolIndex<allocations.length;protocolIndex++){\n      const lastAllocationsPromise = new Promise( async (resolve, reject) => {\n        try{\n          const lastAllocations = await this.genericContractCall(tokenConfig.idle.token, 'lastAllocations',[protocolIndex]);\n          resolve(lastAllocations);\n        } catch (error){\n          console.log(error);\n          resolve(null);\n        }\n      });\n      lastAllocationsPromises.push(lastAllocationsPromise);\n    }\n\n    const newAllocations = await Promise.all(lastAllocationsPromises);\n\n    if (!allocations || !newAllocations){\n      return true;\n    }\n\n    const diff = allocations.filter( (alloc,index) => alloc !== newAllocations[index] );\n\n    return diff.length>0;\n  }\n  checkMigration = async (tokenConfig,account) => {\n\n    if (!tokenConfig || !account){\n      return false;\n    }\n\n    let migrationEnabled = false;\n    let oldContractBalance = null;\n    let oldContractTokenDecimals = null;\n    // let migrationContractApproved = false;\n    let oldContractBalanceFormatted = null;\n\n    // Check migration contract enabled and balance\n    if (tokenConfig.migration && tokenConfig.migration.enabled){\n      const oldContractName = tokenConfig.migration.oldContract.name;\n      const oldContract = this.getContractByName(oldContractName);\n      const migrationContract = this.getContractByName(tokenConfig.migration.migrationContract.name);\n\n      // this.customLog(oldContractName,tokenConfig.migration.migrationContract.name);\n\n      if (oldContract && migrationContract){\n        // Get old contract token decimals\n        oldContractTokenDecimals = await this.getTokenDecimals(oldContractName);\n\n        // this.customLog('Migration - token decimals',oldContractTokenDecimals ? oldContractTokenDecimals.toString() : null);\n\n        // Check migration contract approval\n        // migrationContractApproved = await this.checkMigrationContractApproved();\n\n        // this.customLog('Migration - approved',migrationContractApproved ? migrationContractApproved.toString() : null);\n\n        // Check old contractBalance\n        oldContractBalance = await this.getContractBalance(oldContractName,account);\n\n        if (oldContractBalance){\n          oldContractBalanceFormatted = this.fixTokenDecimals(oldContractBalance,oldContractTokenDecimals);\n          // Enable migration if old contract balance if greater than 0\n          migrationEnabled = this.BNify(oldContractBalance).gt(0);\n        }\n\n        // this.customLog('Migration - oldContractBalance',oldContractName,account,oldContractBalance,oldContractBalanceFormatted);\n      }\n    }\n\n    // Set migration contract balance\n    return {\n      migrationEnabled,\n      oldContractBalance,\n      oldContractTokenDecimals,\n      oldContractBalanceFormatted,\n    };\n  }\n\n  executeMetaTransaction = async (contract, userAddress, signedParameters, callback, callback_receipt) => {\n    try {\n\n      // const gasLimit = await contract.methods\n      //   .executeMetaTransaction(userAddress, ...signedParameters)\n      //   .estimateGas({ from: userAddress });\n\n      // this.customLog(gasLimit);\n\n      const gasPrice = await this.props.web3.eth.getGasPrice();\n\n      const tx = contract.methods\n        .executeMetaTransaction(userAddress, ...signedParameters)\n        .send({\n          from: userAddress,\n          gasPrice\n          // gasLimit\n        });\n\n      tx.on(\"transactionHash\", function(hash) {\n        this.customLog(`Transaction sent by relayer with hash ${hash}`);\n        callback_receipt()\n      }).once(\"confirmation\", function(confirmationNumber, receipt) {\n        this.customLog(\"Transaction confirmed on chain\",receipt);\n        callback_receipt(receipt);\n      });\n    } catch (error) {\n      this.customLog(error);\n      callback(null,error);\n    }\n  }\n\n  getSignatureParameters_v4 = signature => {\n    if (!this.props.web3.utils.isHexStrict(signature)) {\n      throw new Error(\n        'Given value \"'.concat(signature, '\" is not a valid hex string.')\n      );\n    }\n    var r = signature.slice(0, 66);\n    var s = \"0x\".concat(signature.slice(66, 130));\n    var v = \"0x\".concat(signature.slice(130, 132));\n    v = this.props.web3.utils.hexToNumber(v);\n    if (![27, 28].includes(v)) v += 27;\n    return {\n      r: r,\n      s: s,\n      v: v\n    };\n  };\n\n  constructMetaTransactionMessage = (nonce, chainId, functionSignature, contractAddress) => {\n    return ethereumjsABI.soliditySHA3(\n      [\"uint256\",\"address\",\"uint256\",\"bytes\"],\n      [nonce, contractAddress, chainId, toBuffer(functionSignature)]\n    );\n  }\n\n  checkBiconomyLimits = async (userAddress) => {\n    const biconomyInfo = this.getGlobalConfig(['network','providers','biconomy']);\n    const res = await this.makeRequest(`${biconomyInfo.endpoints.limits}?userAddress=${userAddress}&apiId=${biconomyInfo.params.apiId}`,null,{\n      headers:{\n        'x-api-key':biconomyInfo.params.apiKey\n      }\n    });\n\n    if (res && res.data){\n      return res.data;\n    }\n\n    return null;\n  }\n\n  sendTxWithPermit = async (contractName,methodName,methodParams,nonce,callback,callback_receipt) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      callback(null,'Contract not found');\n      return false;\n    }\n\n    if (!contract.methods[methodName]){\n      callback(null,'Method not found');\n      return false;\n    }\n\n    const functionSignature = contract.methods[methodName](...methodParams).encodeABI();\n\n    try{\n      const userAddress = this.props.account;\n      const chainId = this.getGlobalConfig(['network','requiredNetwork']);\n      const messageToSign = this.constructMetaTransactionMessage(nonce, chainId, functionSignature, contract._address);\n\n      const signature = await this.props.web3.eth.personal.sign(\n        \"0x\" + messageToSign.toString(\"hex\"),\n        userAddress\n      );\n\n      const { r, s, v } = this.getSignatureParameters_v4(signature);\n\n      this.contractMethodSendWrapper(contractName, methodName, methodParams.concat([nonce, r, s, v]), callback, callback_receipt);\n\n      return true;\n    } catch (error) {\n      console.error(error);\n      callback(null,error);\n      return false;\n    }\n  }\n\n  sendBiconomyTxWithPersonalSign = async (contractName,functionSignature,callback,callback_receipt) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      callback(null,'Contract not found');\n      return false;\n    }\n\n    try{\n\n      const userAddress = this.props.account;\n      const nonce = await contract.methods.getNonce(userAddress).call();\n      const chainId = this.getGlobalConfig(['network','requiredNetwork']);\n      const messageToSign = this.constructMetaTransactionMessage(nonce, chainId, functionSignature, contract._address);\n\n      const signature = await this.props.web3.eth.personal.sign(\n        \"0x\" + messageToSign.toString(\"hex\"),\n        userAddress\n      );\n\n      const { r, s, v } = this.getSignatureParameters_v4(signature);\n\n      this.contractMethodSendWrapper(contractName, 'executeMetaTransaction', [userAddress, functionSignature, r, s, v], callback, callback_receipt);\n\n      return true;\n    } catch (error) {\n      console.error(error);\n      callback(null,error);\n      return false;\n    }\n  }\n\n  signPermitEIP2612 = async (contractAddress, erc20Name, owner, spender, value, nonce, deadline, chainId) => {\n    if (chainId === undefined) {\n      const result = await this.props.web3.eth.getChainId();\n      chainId = parseInt(result);\n    }\n\n    const domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const permit = [\n      { name: \"owner\", type: \"address\" },\n      { name: \"spender\", type: \"address\" },\n      { name: \"value\", type: \"uint256\" },\n      { name: \"nonce\", type: \"uint256\" },\n      { name: \"deadline\", type: \"uint256\" },\n    ];\n\n    const domainData = {\n      version: \"2\",\n      name: erc20Name,\n      chainId: chainId,\n      verifyingContract: contractAddress\n    };\n\n    const message = {\n      owner,\n      spender,\n      value,\n      nonce,\n      deadline,\n    };\n\n    const data = JSON.stringify({\n      types: {\n        EIP712Domain: domain,\n        Permit: permit,\n      },\n      primaryType: \"Permit\",\n      domain: domainData,\n      message: message\n    });\n\n    return new Promise((resolve, reject) => {\n      this.props.web3.currentProvider.send({\n        jsonrpc: '2.0',\n        id: Date.now().toString().substring(9),\n        method: \"eth_signTypedData_v4\",\n        params: [owner, data],\n        from: owner\n      }, (error, res) => {\n        if (error) {\n          return reject(error);\n        }\n\n        resolve(res.result);\n      });\n    });\n  }\n\n  signPermit = async (baseContractName, holder, spenderContractName, methodName, methodParams, nonce, expiry, callback, callback_receipt, callback_permit=null) => {\n\n    const baseContract = this.getContractByName(baseContractName);\n    const spenderContract = this.getContractByName(spenderContractName);\n\n    if (!baseContract || !spenderContract){\n      callback(null,'Contract not found');\n      return false\n    }\n\n    const result = await this.props.web3.eth.net.getId();\n    let chainId = parseInt(result);\n\n    const EIP712Domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const permitConfig = this.getGlobalConfig(['permit',baseContractName]);\n\n    const Permit = permitConfig.type;\n    const EIPVersion = permitConfig.EIPVersion;\n\n    const spender = spenderContract._address;\n    const verifyingContract = baseContract._address;\n\n    const permitName = permitConfig.name || baseContractName;\n\n    const domain = {\n      chainId,\n      name: permitName,\n      verifyingContract,\n      version: permitConfig.version.toString() || '1',\n    };\n\n    let message = {};\n\n    switch (EIPVersion){\n      case 2612:\n        const owner = holder;\n        const deadline = expiry;\n        // Unlimited allowance\n        const value = this.integerValue(this.BNify(2).pow(256).minus(1));\n        message = {\n          value,\n          nonce,\n          owner,\n          spender,\n          deadline\n        };\n      break;\n      default:\n        message = {\n          holder,\n          nonce,\n          expiry,\n          spender,\n          allowed: true,\n        };\n      break;\n    }\n\n    const data = JSON.stringify({\n      domain,\n      message,\n      types: {\n        Permit,\n        EIP712Domain\n      },\n      primaryType: 'Permit',\n    });\n\n    this.props.web3.currentProvider.send({\n      from: holder,\n      jsonrpc: '2.0',\n      params: [holder, data],\n      method: 'eth_signTypedData_v4',\n      id: Date.now().toString().substring(9),\n    }, (error, response) => {\n      if (error || (response && response.error)) {\n        return callback(null,error);\n      } else if (response && response.result) {\n        if (typeof callback_permit === 'function'){\n          callback_permit();\n        }\n        const signedParameters = this.getSignatureParameters_v4(response.result);\n        const { r, s, v } = signedParameters;\n        const permitParams = [expiry, v, r, s];\n\n        const methodAbi = spenderContract._jsonInterface.find( f => f.name === methodName );\n        const useNonce = methodAbi ? methodAbi.inputs.find( i => i.name === 'nonce' ) : true;\n        if (!isNaN(parseInt(nonce)) && useNonce){\n          permitParams.unshift(nonce);\n        }\n        const params = methodParams.concat(permitParams);\n        this.contractMethodSendWrapper(spenderContractName, methodName, params, callback, callback_receipt);\n      }\n    });\n  }\n\n  sendSignedTx = async (contractName,contractAddress,functionSignature,callback,callback_receipt) => {\n\n    const EIP712Domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const MetaTransaction = [\n      { name: \"nonce\", type: \"uint256\" },\n      { name: \"from\", type: \"address\" },\n      { name: \"functionSignature\", type: \"bytes\" }\n    ];\n\n    const chainId = await this.props.web3.eth.getChainId();\n\n    const domainData = {\n      chainId,\n      version: '1',\n      name: contractName,\n      verifyingContract: contractAddress\n    };\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      callback(null,'Contract not found');\n      return false\n    }\n\n    let userAddress = this.props.account;\n    let nonce = await contract.methods.getNonce(userAddress).call();\n    let message = {};\n    message.nonce = nonce;\n    message.from = userAddress;\n    message.functionSignature = functionSignature;\n\n    const dataToSign = JSON.stringify({\n      types: {\n        EIP712Domain,\n        MetaTransaction\n      },\n      domain: domainData,\n      primaryType: \"MetaTransaction\",\n      message\n    });\n\n    // this.customLog('dataToSign',dataToSign);\n\n    this.props.web3.currentProvider.send(\n      {\n        jsonrpc: \"2.0\",\n        id: 999999999999,\n        from: userAddress,\n        method: \"eth_signTypedData_v4\",\n        params: [userAddress, dataToSign]\n      },\n      (error, response) => {\n        if (error || (response && response.error)) {\n          return callback(null,error);\n        } else if (response && response.result) {\n          const signedParameters = this.getSignatureParameters_v4(response.result);\n          const { r, s, v } = signedParameters;\n            \n          this.contractMethodSendWrapper(contractName, 'executeMetaTransaction', [userAddress, functionSignature, r, s, v], callback, callback_receipt);\n        }\n      }\n    );\n  }\n\n  checkTokenApproved = async (contractName,contractAddr,walletAddr) => {\n    const [\n      balance,\n      allowance\n    ] = await Promise.all([\n      this.getTokenBalance(contractName,walletAddr,false),\n      this.getAllowance(contractName,contractAddr,walletAddr)\n    ]);\n    this.customLog('checkTokenApproved',contractName,this.BNify(allowance).toFixed(),this.BNify(balance).toFixed(),(allowance && this.BNify(allowance).gte(this.BNify(balance))));\n    return allowance && this.BNify(allowance).gte(this.BNify(balance));\n  }\n  getAllowance = async (contractName,contractAddr,walletAddr) => {\n    if (!contractName || !contractAddr || !walletAddr){\n      return false;\n    }\n    this.customLog('getAllowance',contractName,contractAddr,walletAddr);\n    return await this.genericContractCall(\n      contractName, 'allowance', [walletAddr, contractAddr]\n    );\n  }\n  contractMethodSendWrapper = (contractName,methodName,params,callback,callback_receipt,txData) => {\n    this.props.contractMethodSendWrapper(contractName, methodName, params, null, (tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    }, null, txData);\n  }\n  disableERC20 = (contractName,address,callback,callback_receipt) => {\n    this.props.contractMethodSendWrapper(contractName, 'approve', [\n      address,\n      this.props.web3.utils.toTwosComplement('0') // max uint solidity\n    ],null,(tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    });\n  }\n  enableERC20 = (contractName,address,callback,callback_receipt) => {\n    this.props.contractMethodSendWrapper(contractName, 'approve', [\n      address,\n      this.props.web3.utils.toTwosComplement('-1') // max uint solidity\n    ],null,(tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    });\n  }\n  loadAssetField = async (field,token,tokenConfig,account,addGovTokens=true,addCurveApy=false) => {\n\n    let output = null;\n    const govTokens = this.getGlobalConfig(['govTokens']);\n\n    // Remove gov tokens for risk adjusted strategy\n    const strategyInfo = this.getGlobalConfig(['strategies',this.props.selectedStrategy]);\n    if (addGovTokens && strategyInfo && typeof strategyInfo.addGovTokens !== 'undefined'){\n      addGovTokens = strategyInfo.addGovTokens;\n    }\n\n    // Take available tokens for gov tokens fields\n    let govTokenAvailableTokens = null;\n    if (this.props.selectedStrategy && this.props.selectedToken){\n      const newTokenConfig = this.props.availableStrategies[this.props.selectedStrategy][this.props.selectedToken];\n      if (newTokenConfig){\n        govTokenAvailableTokens = {};\n        govTokenAvailableTokens[newTokenConfig.token] = newTokenConfig;\n      }\n    } else if (!Object.keys(govTokens).includes(token)){\n      govTokenAvailableTokens = {};\n      govTokenAvailableTokens[token] = tokenConfig;\n    }\n\n    switch (field){\n      case 'amountLentCurve':\n        const [\n          curveAvgSlippage,\n          curveAvgBuyPrice,\n          curveTokenBalance,\n        ] = await Promise.all([\n          this.getCurveAvgSlippage(),\n          this.getCurveAvgBuyPrice([],account),\n          this.getCurveTokenBalance(account,true),\n        ]);\n\n        if (curveAvgBuyPrice && curveTokenBalance){\n          output = this.BNify(curveTokenBalance).times(curveAvgBuyPrice);\n          if (curveAvgSlippage){\n            output = output.minus(output.times(curveAvgSlippage));\n          }\n          // this.customLog('amountLentCurve',curveTokenBalance.toFixed(6),curveAvgBuyPrice.toFixed(6),curveAvgSlippage.toString(),output.toFixed(6));\n        }\n      break;\n      case 'earningsPercCurve':\n        let [amountLentCurve1,redeemableBalanceCurve] = await Promise.all([\n          this.loadAssetField('amountLentCurve',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalanceCurve',token,tokenConfig,account)\n        ]);\n\n        if (amountLentCurve1 && redeemableBalanceCurve && amountLentCurve1.gt(0) && redeemableBalanceCurve.gt(0)){\n          output = redeemableBalanceCurve.div(amountLentCurve1).minus(1).times(100);\n          // this.customLog('earningsPercCurve',redeemableBalanceCurve.toFixed(6),amountLentCurve1.toFixed(6),output.toFixed(6));\n        }\n      break;\n      case 'curveApy':\n        output = await this.getCurveAPY();\n      break;\n      case 'curveAvgSlippage':\n        output = await this.getCurveAvgSlippage();\n      break;\n      case 'redeemableBalanceCurve':\n        output = await this.getCurveRedeemableIdleTokens(account);\n        // this.customLog('earningsPercCurve',output.toFixed(6));\n      break;\n      case 'redeemableBalanceCounterCurve':\n        let [\n          curveApy,\n          amountLentCurve,\n          redeemableBalanceCurveStart\n        ] = await Promise.all([\n          this.loadAssetField('curveApy',token,tokenConfig,account),\n          this.loadAssetField('amountLentCurve',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalanceCurve',token,tokenConfig,account),\n        ]);\n\n        let redeemableBalanceCurveEnd = null;\n\n        if (redeemableBalanceCurveStart && curveApy && amountLentCurve){\n          const earningPerYear = amountLentCurve.times(curveApy.div(100));\n          redeemableBalanceCurveEnd = redeemableBalanceCurveStart.plus(earningPerYear);\n          // this.customLog('redeemableBalanceCounterCurve',amountLentCurve.toFixed(6),redeemableBalanceCurveStart.toFixed(6),redeemableBalanceCurveEnd.toFixed(6));\n        }\n\n        output = {\n          redeemableBalanceCurveEnd,\n          redeemableBalanceCurveStart\n        };\n      break;\n      case 'earningsPerc':\n        let [amountLent1,redeemableBalance1] = await Promise.all([\n          this.loadAssetField('amountLent',token,tokenConfig,account,false),\n          this.loadAssetField('redeemableBalance',token,tokenConfig,account,false)\n        ]);\n\n        if (amountLent1 && redeemableBalance1 && amountLent1.gt(0)){\n          output = redeemableBalance1.div(amountLent1).minus(1).times(100);\n        }\n      break;\n      case 'daysFirstDeposit':\n        const depositTimestamp = await this.loadAssetField('depositTimestamp',token,tokenConfig,account);\n        if (depositTimestamp){\n          const currTimestamp = parseInt(Date.now()/1000);\n          output = (currTimestamp-depositTimestamp)/86400;\n        }\n      break;\n      case 'pool':\n        if (Object.keys(govTokens).includes(token)){\n          output = await this.getGovTokenPool(token, govTokenAvailableTokens);\n        } else {\n          output = await this.getTokenPool(tokenConfig,addGovTokens);\n        }\n      break;\n      case 'userDistributionSpeed':\n        switch (token){\n          case 'COMP':\n            output = await this.getCompUserDistribution(account,govTokenAvailableTokens);\n          break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getUserDistribution(account,govTokenAvailableTokens);\n          break;\n          default:\n          break;\n        }\n        if (output && !this.BNify(output).isNaN()){\n          output = this.BNify(output).div(1e18);\n          if (output){\n            output = this.fixDistributionSpeed(output,tokenConfig.distributionFrequency);\n          }\n        }\n      break;\n      case 'idleDistribution':\n        const idleGovToken = this.getIdleGovToken();\n        const tokenName = this.getGlobalConfig(['governance','props','tokenName']);\n        const govTokenConfig = this.getGlobalConfig(['govTokens',tokenName]);\n        output = await idleGovToken.getSpeed(tokenConfig.idle.address);\n\n        if (output){\n\n          output = this.fixTokenDecimals(output,govTokenConfig.decimals);\n\n          const blocksPerYear = this.BNify(this.getGlobalConfig(['network','blocksPerYear']));\n          switch (govTokenConfig.distributionFrequency){\n            case 'day':\n              const blocksPerDay = blocksPerYear.div(365.242199);\n              output = output.times(blocksPerDay);\n            break;\n            case 'week':\n              const blocksPerWeek = blocksPerYear.div(52.1429);\n              output = output.times(blocksPerWeek);\n            break;\n            case 'month':\n              const blocksPerMonth = blocksPerYear.div(12);\n              output = output.times(blocksPerMonth);\n            break;\n            case 'year':\n              output = output.times(blocksPerYear);\n            break;\n            default:\n            break;\n          }\n        }\n      break;\n      case 'distributionSpeed':\n        const selectedTokenConfig = govTokenAvailableTokens[this.props.selectedToken];\n        switch (token){\n          case 'COMP':\n            output = await this.getCompDistribution(selectedTokenConfig);\n          break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getSpeed(selectedTokenConfig.idle.address);\n          break;\n          default:\n          break;\n        }\n        if (output && !this.BNify(output).isNaN()){\n          output = this.BNify(output).div(1e18);\n        }\n      break;\n      case 'apr':\n        switch (token){\n          case 'COMP':\n            output = await this.getCompAvgApr(govTokenAvailableTokens);\n          break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getAvgApr(govTokenAvailableTokens);\n          break;\n          default:\n            const tokenAprs = await this.getTokenAprs(tokenConfig,false,addGovTokens);\n            if (tokenAprs && tokenAprs.avgApr !== null){\n              output = tokenAprs.avgApr;\n            }\n          break;\n        }\n      break;\n      case 'apy':\n        const tokenApys = await this.getTokenAprs(tokenConfig,false,addGovTokens);\n\n        // console.log('apr',token,tokenApys.avgApr ? tokenApys.avgApr.toString() : null,tokenApys.avgApy ? tokenApys.avgApy.toString() : null);\n\n        if (tokenApys && tokenApys.avgApy !== null){\n          output = tokenApys.avgApy;\n\n          if (addCurveApy){\n            const curveAPY = await this.getCurveAPY();\n            if (curveAPY){\n              output = output.plus(curveAPY);\n            }\n          }\n        }\n      break;\n      case 'avgAPY':\n        const [\n          tokenPrice,\n          firstDepositTx,\n          days\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.getFirstDepositTx([token],account),\n          this.loadAssetField('daysFirstDeposit',token,tokenConfig,account)\n        ]);\n\n        if (tokenPrice && firstDepositTx && firstDepositTx[token]){\n          const tokenPriceFirstDeposit = await this.getIdleTokenPrice(tokenConfig,firstDepositTx[token].blockNumber);\n          output = this.BNify(tokenPrice).div(tokenPriceFirstDeposit).minus(1).times(365).div(days).times(100);\n        }\n      break;\n      case 'avgAPY_old':\n        const [\n          daysFirstDeposit,\n          earningsPerc\n        ] = await Promise.all([\n          this.loadAssetField('daysFirstDeposit',token,tokenConfig,account),\n          this.loadAssetField('earningsPerc',token,tokenConfig,account), // Take earnings perc instead of earnings\n        ]);\n\n        if (daysFirstDeposit && earningsPerc){\n          output = earningsPerc.times(365).div(daysFirstDeposit);\n        }\n      break;\n      case 'depositTimestamp':\n        const depositTimestamps = account ? await this.getDepositTimestamp([token],account) : false;\n        if (depositTimestamps && depositTimestamps[token]){\n          output = depositTimestamps[token];\n        }\n      break;\n      case 'amountLent':\n        // output = account ? await this.getAmountDeposited(tokenConfig,account) : false;\n        const amountLents = account ? await this.getAmountLent([token],account) : false;\n        if (amountLents && amountLents[token]){\n          output = amountLents[token];\n        }\n      break;\n      case 'tokenPrice':\n        if (Object.keys(govTokens).includes(token)){\n          const govTokenConfig = govTokens[token];\n          const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n          try {\n            output = await this.getUniswapConversionRate(DAITokenConfig,govTokenConfig);\n          } catch (error) {\n\n          }\n          if (!output || this.BNify(output).isNaN()){\n            output = '-';\n          }\n        } else {\n          output = await this.genericContractCall(tokenConfig.idle.token, 'tokenPrice');\n        }\n      break;\n      case 'fee':\n        output = await this.getUserTokenFees(tokenConfig,account);\n      break;\n      case 'tokenBalance':\n        if (Object.keys(govTokens).includes(token)){\n          output = await this.getTokenBalance(token,account);\n          if (!output || output.isNaN()){\n            output = '-';\n          }\n        } else {\n          let tokenBalance = account ? await this.getTokenBalance(tokenConfig.token,account) : false;\n          if (!tokenBalance || tokenBalance.isNaN()){\n            tokenBalance = '-';\n          }\n          output = tokenBalance;\n        }\n      break;\n      case 'idleTokenBalance':\n        const idleTokenBalance = account ? await this.getTokenBalance(tokenConfig.idle.token,account) : false;\n        if (idleTokenBalance){\n          output = idleTokenBalance;\n        }\n      break;\n      case 'redeemableBalanceCounter':\n        let [tokenAPY1,amountLent2,redeemableBalanceStart] = await Promise.all([\n          this.loadAssetField('apy',token,tokenConfig,account,false),\n          this.loadAssetField('amountLent',token,tokenConfig,account,false),\n          this.loadAssetField('redeemableBalance',token,tokenConfig,account,false),\n        ]);\n\n        let redeemableBalanceEnd = null;\n\n        if (redeemableBalanceStart && tokenAPY1 && amountLent2){\n          const earningPerYear = amountLent2.times(tokenAPY1.div(100));\n          redeemableBalanceEnd = redeemableBalanceStart.plus(earningPerYear);\n        }\n\n        // this.customLog('redeemableBalanceCounter',token,parseFloat(redeemableBalanceStart),parseFloat(redeemableBalanceEnd));\n\n        output = {\n          redeemableBalanceEnd,\n          redeemableBalanceStart\n        };\n      break;\n      case 'redeemableBalance':\n        if (Object.keys(govTokens).includes(token)){\n          const govTokenConfig = govTokens[token];\n          output = await this.getGovTokenUserBalance(govTokenConfig,account,govTokenAvailableTokens);\n        } else {\n          let [\n            idleTokenPrice1,\n            idleTokenBalance2,\n            govTokensBalance\n          ] = await Promise.all([\n            this.getIdleTokenPrice(tokenConfig),\n            this.loadAssetField('idleTokenBalance',token,tokenConfig,account),\n            addGovTokens ? this.getGovTokensUserTotalBalance(account,govTokenAvailableTokens,token) : null,\n          ]);\n\n          if (idleTokenBalance2 && idleTokenPrice1){\n            const tokenBalance = idleTokenBalance2.times(idleTokenPrice1);\n            let redeemableBalance = tokenBalance;\n            if (govTokensBalance && !this.BNify(govTokensBalance).isNaN()){\n              redeemableBalance = redeemableBalance.plus(this.BNify(govTokensBalance));\n            }\n            output = redeemableBalance;\n            // console.log('redeemableBalance',token,idleTokenBalance2.toFixed(4),idleTokenPrice1.toFixed(4),tokenBalance.toFixed(4),govTokensBalance ? govTokensBalance.toFixed(4) : null,output.toFixed(4));\n          }\n        }\n      break;\n      case 'earningsCurve':\n        let [amountLentCurve2,redeemableBalanceCurve1] = await Promise.all([\n          this.loadAssetField('amountLentCurve',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalanceCurve',token,tokenConfig,account)\n        ]);\n\n        if (!amountLentCurve2){\n          amountLentCurve2 = this.BNify(0);\n        }\n\n        if (!redeemableBalanceCurve1){\n          redeemableBalanceCurve1 = this.BNify(0);\n        }\n\n        output = redeemableBalanceCurve1.minus(amountLentCurve2);\n      break;\n      case 'earnings':\n        let [amountLent,redeemableBalance2] = await Promise.all([\n          this.loadAssetField('amountLent',token,tokenConfig,account,false),\n          this.loadAssetField('redeemableBalance',token,tokenConfig,account,false)\n        ]);\n\n        if (!amountLent){\n          amountLent = this.BNify(0);\n        }\n        if (!redeemableBalance2){\n          redeemableBalance2 = this.BNify(0);\n        }\n\n        output = redeemableBalance2.minus(amountLent);\n\n        // console.log('earnings',token,amountLent.toFixed(5),redeemableBalance2.toFixed(5),output.toFixed(5));\n\n        if (output.lt(this.BNify(0))){\n          output = this.BNify(0);\n        }\n      break;\n      default:\n      break;\n    }\n\n    return output;\n  }\n  getIdleTokenSupply = async (idleToken,blockNumber='latest') => {\n    const cachedDataKey = `idleTokenSupply_${idleToken}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let idleTokenSupply = await this.genericContractCall(idleToken,'totalSupply',[],{},blockNumber);\n    if (idleTokenSupply){\n      idleTokenSupply = this.BNify(idleTokenSupply);\n      return this.setCachedDataWithLocalStorage(cachedDataKey,idleTokenSupply);\n    }\n\n    return null;\n  }\n  getIdleTokenPrice = async (tokenConfig,blockNumber='latest',timestamp=false) => {\n\n    const cachedDataKey = `idleTokenPrice_${tokenConfig.idle.token}_${blockNumber}`;\n    // if (blockNumber !== 'latest'){\n      const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.BNify(cachedData).isNaN()){\n        return this.BNify(cachedData);\n      }\n    // }\n\n    let decimals = tokenConfig.decimals;\n\n    let tokenPrice = await this.genericContractCall(tokenConfig.idle.token,'tokenPrice',[],{},blockNumber);\n\n    // If price is NaN try to take it from APIs\n    if (!tokenPrice && timestamp){\n      const isRisk = this.props.selectedStrategy === 'risk';\n      const startTimestamp = parseInt(timestamp)-(60*60);\n      const endTimestamp = parseInt(timestamp)+(60*60);\n      const tokenData = await this.getTokenApiData(tokenConfig.address,isRisk,startTimestamp,endTimestamp,true);\n\n      let beforePrice = {\n        data:null,\n        timeDiff:null\n      };\n\n      let afterPrice = {\n        data:null,\n        timeDiff:null\n      };\n\n      tokenData.forEach( d => {\n        const timeDiff = Math.abs(parseInt(d.timestamp)-parseInt(timestamp));\n        if (parseInt(d.timestamp)<parseInt(timestamp) && (!beforePrice.timeDiff || timeDiff<beforePrice.timeDiff)){\n          beforePrice.timeDiff = timeDiff;\n          beforePrice.data = d;\n        }\n\n        if (parseInt(d.timestamp)>parseInt(timestamp) && !afterPrice.timeDiff){\n          afterPrice.timeDiff = timeDiff;\n          afterPrice.data = d;\n        }\n      });\n\n      // Take before and after and calculate correct tokenPrice based from price acceleration\n      if (beforePrice.data && afterPrice.data){\n        const tokenPriceBefore = this.BNify(beforePrice.data.idlePrice);\n        const tokenPriceAfter = this.BNify(afterPrice.data.idlePrice);\n        const timeBefore = this.BNify(beforePrice.data.timestamp);\n        const timeAfter = this.BNify(afterPrice.data.timestamp);\n        const timeDiff = timeAfter.minus(timeBefore);\n        const priceDiff = tokenPriceAfter.minus(tokenPriceBefore);\n        const priceAcceleration = priceDiff.div(timeDiff);\n        const timeDiffFromBeforePrice = this.BNify(timestamp).minus(timeBefore);\n        tokenPrice = tokenPriceBefore.plus(priceAcceleration.times(timeDiffFromBeforePrice));\n      }\n    }\n\n    // Fix token price decimals\n    if (tokenPrice && !this.BNify(tokenPrice).isNaN()){\n      tokenPrice = this.fixTokenDecimals(tokenPrice,decimals);\n    }\n\n    // If price is NaN then return 1\n    if (!tokenPrice || this.BNify(tokenPrice).isNaN() || this.BNify(tokenPrice).lt(1)){\n      tokenPrice = this.BNify(1);\n    }\n\n    // if (blockNumber !== 'latest'){\n      this.setCachedDataWithLocalStorage(cachedDataKey,tokenPrice);\n    // }\n\n    // this.customLog('getIdleTokenPrice',tokenPrice.toString());\n\n    return tokenPrice;\n  }\n  clearCachedData = () => {\n    if (this.props.clearCachedData && typeof this.props.clearCachedData === 'function'){\n      // this.customLog('clearCachedData',this.props.clearCachedData,typeof this.props.clearCachedData === 'function');\n      this.props.clearCachedData();\n    } else {\n      // this.customLog('clearCachedData - Function not found!');\n    }\n    return false;\n  }\n  /*\n  Cache data locally for 5 minutes\n  */\n  setCachedData = (key,data,TTL=180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function'){\n      this.props.setCachedData(key,data,TTL);\n    }\n    return data;\n  }\n  setCachedDataWithLocalStorage = (key,data,TTL=180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function'){\n      this.props.setCachedData(key,data,TTL,true);\n    }\n    return data;\n  }\n  getCachedDataWithLocalStorage = (key,defaultValue=null) => {\n    return this.getCachedData(key,defaultValue,true);\n  }\n  getCachedData = (key,defaultValue=null,useLocalStorage=false) => {\n    let cachedData = null;\n    key = key.toLowerCase();\n    // Get cache from current session\n    if (this.props.cachedData && this.props.cachedData[key]){\n      cachedData = this.props.cachedData[key];\n    // Get cache from local storage\n    } else if (useLocalStorage) {\n      cachedData = this.getStoredItem('cachedData');\n      if (cachedData && cachedData[key]){\n        cachedData = cachedData[key];\n      } else {\n        cachedData = null;\n      }\n    }\n\n    if (cachedData && cachedData.data && (!cachedData.expirationDate || cachedData.expirationDate>=parseInt(Date.now()/1000))){\n      return cachedData.data;\n    }\n    return defaultValue;\n  }\n  getUserPoolShare = async (walletAddr,tokenConfig) => {\n    const [\n      idleTokensBalance,\n      idleTokensTotalSupply\n    ] = await Promise.all([\n      this.getTokenBalance(tokenConfig.idle.token,walletAddr,false),\n      this.genericContractCall(tokenConfig.idle.token,'totalSupply')\n    ]);\n\n    let userShare = this.BNify(0);\n    if (idleTokensBalance && idleTokensTotalSupply){\n      userShare = this.BNify(idleTokensBalance).div(this.BNify(idleTokensTotalSupply));\n    }\n\n    return userShare;\n  }\n  openWindow = (url) => {\n    return window.open(url,'_blank','noopener');\n  }\n  getActiveCoverages = async (account=null) => {\n    const activeCoverages = [];\n    account = account || this.props.account;\n\n    if (!account){\n      return activeCoverages;\n    }\n\n    const currTimestamp = parseInt(Date.now()/1000);\n    const coverProtocolConfig = this.getGlobalConfig(['tools','coverProtocol']);\n    if (coverProtocolConfig.enabled){\n      await this.asyncForEach(coverProtocolConfig.props.coverages, async (coverage) => {\n        const token = 'Claim';\n        const coverageTokens = coverage.tokens;\n        const tokenConfig = coverageTokens[token];\n        // Initialize coverage contract\n        await this.props.initContract(tokenConfig.name,tokenConfig.address,tokenConfig.abi);\n        // Take balance\n        const balance = await this.getTokenBalance(tokenConfig.name,account);\n        if (balance && balance.gt(0)){\n          const collateral = coverage.collateral;\n          const protocolName = coverProtocolConfig.label;\n          const protocolImage = coverProtocolConfig.image;\n          const fileClaimUrl = coverProtocolConfig.fileClaimUrl;\n          const status = coverage.expirationTimestamp<=currTimestamp ? 'Expired' : 'Active';\n          const expirationDate = moment(coverage.expirationTimestamp*1000).utc().format('YYYY-MM-DD HH:mm:ss')+' UTC';\n          activeCoverages.push({\n            token,\n            status,\n            balance,\n            collateral,\n            protocolName,\n            fileClaimUrl,\n            protocolImage,\n            expirationDate\n          });\n        }\n      });\n    }\n\n    return activeCoverages;\n  }\n  getBatchedDepositExecutions = async (contractAddress) => {\n    const requiredNetwork = this.getGlobalConfig(['network','requiredNetwork']);\n    const etherscanInfo = this.getGlobalConfig(['network','providers','etherscan']);\n    if (etherscanInfo.enabled && etherscanInfo.endpoints[requiredNetwork]){\n      const etherscanApiUrl = etherscanInfo.endpoints[requiredNetwork];\n      const etherscanEndpoint = `${etherscanApiUrl}?&apikey=${env.REACT_APP_ETHERSCAN_KEY}&module=account&action=tokentx&address=${contractAddress}&sort=desc`;\n      const transactions = await this.makeCachedRequest(etherscanEndpoint,1800,true);\n      if (transactions && typeof transactions.result === 'object'){\n        return transactions.result.filter( tx => tx.from === '0x0000000000000000000000000000000000000000' && tx.to.toLowerCase() === contractAddress.toLowerCase() );\n      }\n    }\n    return null;\n  }\n  getBatchedDeposits = async (account=null,filter_by_status=null) => {\n    account = account || this.props.account;\n    if (!account){\n      return null;\n    }\n\n    const batchDepositConfig = this.getGlobalConfig(['tools','batchDeposit']);\n    if (!batchDepositConfig.enabled){\n      return null;\n    }\n\n    const cachedDataKey = `batchedDeposits_${account}_${filter_by_status}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    const batchedDeposits = {};\n    const availableTokens = batchDepositConfig.props.availableTokens;\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const migrationContract = tokenConfig.migrationContract;\n      await this.props.initContract(migrationContract.name,migrationContract.address,migrationContract.abi);\n      const currBatchIndex = await this.genericContractCall(migrationContract.name,'currBatch');\n      for (let batchIndex = 0; batchIndex <= parseInt(currBatchIndex) ; batchIndex++){\n        let [\n          batchExecutions,\n          batchTotal,\n          batchRedeem,\n          batchDeposit\n        ] = await Promise.all([\n          this.getBatchedDepositExecutions(migrationContract.address),\n          this.genericContractCall(migrationContract.name,'batchTotals',[batchIndex]),\n          this.genericContractCall(migrationContract.name,'batchRedeemedTotals',[batchIndex]),\n          this.genericContractCall(migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n        ]);\n        let batchTotals = null;\n        let batchRedeems = null;\n        let batchDeposits = null;\n        if (batchTotal && batchTotal !== null){\n          batchTotals = this.fixTokenDecimals(batchTotal,tokenConfig.decimals);\n        }\n        if (batchDeposit !== null){\n          batchRedeem = this.fixTokenDecimals(batchRedeem,18);\n          batchDeposit = this.fixTokenDecimals(batchDeposit,tokenConfig.decimals);\n          if (batchDeposit.gt(0)){\n            batchDeposits = batchDeposit;\n\n            // Calculate redeemable idleTokens\n            batchRedeems = batchDeposit.times(batchRedeem).div(batchTotals);\n            if (batchRedeems.gt(batchRedeem)){\n              batchRedeems = batchRedeem;\n            }\n\n            const status = batchIndex < currBatchIndex && batchRedeems.gt(0) ? 'executed' : 'pending';\n\n            if (filter_by_status !== null && filter_by_status.toLowerCase() !== status){\n              return;\n            }\n\n            const lastExecution = batchExecutions && batchExecutions.length ? batchExecutions[0] : null;\n\n            batchedDeposits[token] = {\n              status,\n              batchTotals,\n              batchRedeems,\n              batchDeposits,\n              lastExecution\n            };\n          }\n        }\n      }\n    });\n\n    return this.setCachedData(cachedDataKey,batchedDeposits);\n  }\n  getETHBalance = async (walletAddr,fixDecimals=true,blockNumber='latest') => {\n    if (!walletAddr){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `ethBalance_${walletAddr}_${fixDecimals}_${blockNumber}`;\n    if (blockNumber !== 'latest'){\n      const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.BNify(cachedData).isNaN()){\n        return this.BNify(cachedData);\n      }\n    }\n\n    let tokenBalance = await this.props.web3.eth.getBalance(walletAddr);\n\n    if (tokenBalance){\n      if (fixDecimals){\n        tokenBalance = this.fixTokenDecimals(tokenBalance,18);\n      }\n\n      tokenBalance = this.BNify(tokenBalance);\n\n      // Set cached data\n      if (!tokenBalance.isNaN()){\n        if (blockNumber !== 'latest'){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,tokenBalance);\n        } else {\n          return tokenBalance;\n        }\n      }\n    }\n    return null;\n  }\n  getTokenBalance = async (contractName,walletAddr,fixDecimals=true,blockNumber='latest') => {\n    if (!walletAddr){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenBalance_${contractName}_${walletAddr}_${fixDecimals}_${blockNumber}`;\n    if (blockNumber !== 'latest'){\n      const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.BNify(cachedData).isNaN()){\n        return this.BNify(cachedData);\n      }\n    }\n\n    let [\n      tokenDecimals,\n      tokenBalance\n    ] = await Promise.all([\n      this.getTokenDecimals(contractName),\n      this.getContractBalance(contractName,walletAddr,blockNumber)\n    ]);\n\n    if (tokenBalance){\n      if (fixDecimals){\n        tokenBalance = this.fixTokenDecimals(tokenBalance,tokenDecimals);\n      }\n\n      tokenBalance = this.BNify(tokenBalance);\n\n      // Set cached data\n      if (!tokenBalance.isNaN()){\n        if (blockNumber !== 'latest'){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,tokenBalance);\n        } else {\n          return tokenBalance;\n        }\n      }\n    } else {\n      this.customLogError('Error on getting balance for ',contractName);\n    }\n    return null;\n  }\n  copyToClipboard = (copyText) => {\n    if (typeof copyText.select === 'function'){\n      copyText.select();\n      copyText.setSelectionRange(0, 99999); // Select\n      const res = document.execCommand(\"copy\");\n      copyText.setSelectionRange(0, 0); // Deselect\n      return res;\n    }\n    return false;\n  }\n  loadScript = (url,props,callback) => {\n    const script = document.createElement(\"script\");\n    script.src = url;\n\n    // Append props\n    if (props){\n      Object.keys(props).forEach((attr,i) => {\n        script[attr] = props[attr];\n      });\n    }\n\n    if (typeof callback === 'function'){\n      if (script.readyState) {  // only required for IE <9\n        script.onreadystatechange = function() {\n          if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n            script.onreadystatechange = null;\n            callback();\n          }\n        };\n      } else {  //Others\n        script.onload = callback;\n      }\n    }\n\n    if (!script.id || !document.getElementById(script.id)){\n      document.body.appendChild(script);\n    }\n  }\n  isValidJSON = str => {\n    try {\n      JSON.parse(str);\n    } catch (e) {\n      return false;\n    }\n    return true;\n  }\n  checkAddress = (address) => {\n    return address ? address.match(/^0x[a-fA-F0-9]{40}$/) !== null : false;\n  }\n  getContractBalance = async (contractName,address,blockNumber='latest') => {\n    address = address ? address : this.props.tokenConfig.idle.address;\n    return await this.genericContractCall(contractName, 'balanceOf', [address], {}, blockNumber);\n  }\n  getProtocolBalance = async (contractName,address) => {\n    address = address ? address : this.props.tokenConfig.idle.address;\n    return await this.genericContractCall(contractName, 'balanceOf', [address]);\n  }\n  getAprs = async (contractName) => {\n    contractName = contractName ? contractName : this.props.tokenConfig.idle.token;\n    return await this.genericContractCall(contractName, 'getAPRs');\n  }\n  genericIdleCall = async (methodName, params = [], callParams = {}) => {\n    return await this.genericContractCall(this.props.tokenConfig.idle.token, methodName, params, callParams).catch(err => {\n      this.customLogError('Generic Idle call err:', err);\n    });\n  }\n  estimateGas = async (contractName, methodName, params = [], callParams = {}) => {\n    let contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLogError('Wrong contract name', contractName);\n      return null;\n    }\n\n    return await contract.methods[methodName](...params).estimateGas(callParams);\n  }\n  getTxDecodedLogs = async (tx,logAddr,decodeLogs,storedTx) => {\n\n    let txReceipt = storedTx && storedTx.txReceipt ? storedTx.txReceipt : null;\n\n    if (!txReceipt){\n      txReceipt = await (new Promise( async (resolve, reject) => {\n        this.props.web3.eth.getTransactionReceipt(tx.hash,(err,tx)=>{\n          if (err){\n            reject(err);\n          }\n          resolve(tx);\n        });\n      }));\n\n    }\n\n    if (!txReceipt){\n      return null;\n    }\n\n    const internalTransfers = txReceipt.logs.filter((tx) => { return tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${logAddr}`; });\n\n    if (!internalTransfers.length){\n      return null;\n    }\n\n    try {\n      return [\n        txReceipt,\n        this.props.web3.eth.abi.decodeLog(decodeLogs,internalTransfers[0].data,internalTransfers[0].topics)\n      ];\n    } catch (error) {\n      return null;\n    }\n  }\n  blocksToSeconds = (blocks) => {\n    const blocksPerSeconds = this.BNify(this.getGlobalConfig(['network','blocksPerYear'])).div(365.2422).div(86400);\n    return this.BNify(blocks).div(blocksPerSeconds);\n  }\n  getBlockNumber = async () => {\n    return await this.props.web3.eth.getBlockNumber();\n  }\n  getContractPastEvents = async (contractName,methodName,params = {}) => {\n    if (!contractName){\n      return null;\n    }\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLogError('Wrong contract name', contractName);\n      return null;\n    }\n\n    return await contract.getPastEvents(methodName, params);\n  }\n  genericContractCall = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest') => {\n\n    if (!contractName){\n      return null;\n    }\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLog('Wrong contract name', contractName);\n      return null;\n    }\n\n    if (!contract.methods[methodName]) {\n      this.customLog('Wrong method name', methodName);\n      return null;\n    }\n\n    blockNumber = blockNumber !== 'latest' && blockNumber && !isNaN(blockNumber) ? parseInt(blockNumber) : blockNumber;\n\n    try{\n      this.customLog(`genericContractCall - ${contractName} - ${methodName}`);\n      const value = await contract.methods[methodName](...params).call(callParams,blockNumber).catch(error => {\n        this.customLog(`${contractName} contract method ${methodName} error: `, error);\n      });\n      this.customLog(`genericContractCall - ${contractName} - ${methodName} : ${value}`);\n      return value;\n    } catch (error) {\n      this.customLog(\"genericContractCall error\", error);\n    }\n  }\n  asyncForEach = async (array, callback, async=true) => {\n    if (async){\n      await Promise.all(array.map( (c,index) => {\n        return callback(c, index, array);\n      }));\n    } else {\n      for (let index = 0; index < array.length; index++) {\n        await callback(array[index], index, array);\n      }\n    }\n  }\n  apr2apy = (apr) => {\n    return (this.BNify(1).plus(this.BNify(apr).div(12))).pow(12).minus(1);\n  }\n  getUnlentBalance = async (tokenConfig) => {\n    let unlentBalance = await this.getProtocolBalance(tokenConfig.token,tokenConfig.idle.address);\n    if (unlentBalance){\n      unlentBalance = this.fixTokenDecimals(unlentBalance,tokenConfig.decimals);\n    }\n    return unlentBalance;\n  }\n  getTokenPool = async (tokenConfig,addGovTokens=true) => {\n    // Check for cached data\n    const cachedDataKey = `tokenPool_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN() ) {\n      return this.BNify(cachedData);\n    }\n\n    const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,addGovTokens);\n    if (tokenAllocation && tokenAllocation.totalAllocationWithUnlent){\n      const tokenPool = tokenAllocation.totalAllocationWithUnlent;\n      if (!this.BNify(tokenPool).isNaN()){\n        return this.setCachedDataWithLocalStorage(cachedDataKey,tokenPool);\n      }\n    }\n\n    return null;\n  }\n  /*\n  Get idleToken allocation between protocols\n  */\n  getTokenAllocation = async (tokenConfig,protocolsAprs=false,addGovTokens=true) => {\n\n    if (!tokenConfig.idle){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenAllocation_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    let totalAllocation = this.BNify(0);\n\n    const tokenAllocation = {\n      avgApr: null,\n      unlentBalance:null,\n      totalAllocation:null,\n      protocolsBalances:{},\n      protocolsAllocations:null,\n      protocolsAllocationsPerc:null,\n      totalAllocationConverted:null,\n      totalAllocationWithUnlent:null,\n      totalAllocationWithUnlentConverted:null,\n    };\n\n    const exchangeRates = {};\n    const protocolsBalances = {};\n    const protocolsAllocations = {};\n    const protocolsAllocationsPerc = {};\n\n    await this.asyncForEach(tokenConfig.protocols,async (protocolInfo,i) => {\n      const contractName = protocolInfo.token;\n      const protocolAddr = protocolInfo.address.toLowerCase();\n\n      let [\n        tokenDecimals,\n        protocolBalance,\n        exchangeRate\n      ] = await Promise.all([\n        this.getTokenDecimals(contractName),\n        this.getProtocolBalance(contractName,tokenConfig.idle.address),\n        ( protocolInfo.functions.exchangeRate ? this.genericContractCall(contractName,protocolInfo.functions.exchangeRate.name,protocolInfo.functions.exchangeRate.params) : null )\n      ]);\n\n      if (!protocolBalance){\n        return;\n      }\n\n      if (exchangeRate && protocolInfo.decimals){\n        exchangeRates[protocolAddr] = exchangeRate;\n        exchangeRate = this.fixTokenDecimals(exchangeRate,protocolInfo.decimals);\n      }\n\n      let protocolAllocation = this.fixTokenDecimals(protocolBalance,tokenDecimals,exchangeRate);\n\n      if (protocolAllocation.lt(this.BNify(0.00000001))){\n        protocolBalance = this.BNify(0);\n        protocolAllocation = this.BNify(0);\n      }\n\n      protocolsBalances[protocolAddr] = protocolBalance;\n      protocolsAllocations[protocolAddr] = protocolAllocation;\n      totalAllocation = totalAllocation.plus(protocolAllocation);\n\n      // console.log('getTokenAllocation',contractName,protocolAddr,protocolAllocation.toFixed(5),exchangeRate ? exchangeRate.toFixed(5) : null,totalAllocation.toFixed(5));\n    });\n\n    tokenAllocation.unlentBalance = this.BNify(0);\n    tokenAllocation.totalAllocationWithUnlent = this.BNify(totalAllocation);\n\n    // Add unlent balance to the pool\n    let unlentBalance = await this.getUnlentBalance(tokenConfig);\n    if (unlentBalance){\n      tokenAllocation.unlentBalance = unlentBalance;\n      tokenAllocation.totalAllocationWithUnlent = tokenAllocation.totalAllocationWithUnlent.plus(unlentBalance);\n    }\n\n    // console.log('totalAllocationWithUnlent 1',addGovTokens,tokenAllocation.totalAllocationWithUnlent.toFixed(5));\n\n    Object.keys(protocolsAllocations).forEach((protocolAddr,i) => {\n      const protocolAllocation = protocolsAllocations[protocolAddr];\n      const protocolAllocationPerc = protocolAllocation.div(totalAllocation);\n      protocolsAllocationsPerc[protocolAddr] = protocolAllocationPerc;\n    });\n\n    tokenAllocation.totalAllocation = totalAllocation;\n    tokenAllocation.protocolsAllocations = protocolsAllocations;\n    tokenAllocation.protocolsAllocationsPerc = protocolsAllocationsPerc;\n\n    if (addGovTokens){\n      const govTokensBalances = await this.getGovTokensBalances(tokenConfig.idle.address);\n\n      // Sum gov tokens balances\n      if (govTokensBalances.total){\n        const tokenUsdConversionRate = await this.getTokenConversionRate(tokenConfig,false);\n        if (tokenUsdConversionRate){\n          govTokensBalances.total = govTokensBalances.total.div(tokenUsdConversionRate);\n        }\n\n        tokenAllocation.totalAllocationWithUnlent = tokenAllocation.totalAllocationWithUnlent.plus(govTokensBalances.total);\n\n        // console.log('totalAllocationWithUnlent 2',govTokensBalances.total.toFixed(5),tokenAllocation.totalAllocationWithUnlent.toFixed(5));\n      }\n    }\n\n    tokenAllocation.totalAllocationConverted = await this.convertTokenBalance(tokenAllocation.totalAllocation,tokenConfig.token,tokenConfig);\n    tokenAllocation.totalAllocationWithUnlentConverted = await this.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent,tokenConfig.token,tokenConfig);\n\n    if (protocolsAprs){\n      tokenAllocation.avgApr = this.getAvgApr(protocolsAprs,protocolsAllocations,totalAllocation);\n    }\n\n    return this.setCachedData(cachedDataKey,tokenAllocation);\n  }\n  getUniswapConversionRate_path = async (path) => {\n    const one = this.normalizeTokenDecimals(18);\n    const unires = await this.genericContractCall('UniswapRouter','getAmountsIn',[one.toFixed(),path]);\n    return unires;\n  }\n  getUniswapConversionRate = async (tokenConfigFrom,tokenConfigDest) => {\n\n    // Check for cached data\n    const cachedDataKey = `uniswapConversionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    try {\n      const WETHAddr = '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2';\n      const one = this.normalizeTokenDecimals(18);\n\n      const path = [];\n      path.push(tokenConfigFrom.address);\n      // Don't pass through weth if i'm converting weth\n      if (WETHAddr.toLowerCase() !== tokenConfigFrom.address.toLowerCase() && WETHAddr.toLowerCase() !== tokenConfigDest.address.toLowerCase()){\n        path.push(WETHAddr);\n      }\n      path.push(tokenConfigDest.address);\n\n      const unires = await this.genericContractCall('UniswapRouter','getAmountsIn',[one.toFixed(),path]);\n\n      // console.log('getUniswapConversionRate',tokenConfigFrom,tokenConfigDest,path,unires);\n\n      if (unires){\n        const price = this.BNify(unires[0]).div(one);\n        return this.setCachedDataWithLocalStorage(cachedDataKey,price);\n      }\n      return null;\n    } catch (error) {\n      return null;\n    }\n  }\n  /*\n  getUniswapConversionRate_old = async (tokenConfigFrom,tokenConfigDest) => {\n    const cachedDataKey = `compUniswapConverstionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n\n    const tokenFrom = new Token(ChainId.MAINNET, tokenConfigFrom.address, tokenConfigFrom.decimals);\n    const tokenTo = new Token(ChainId.MAINNET, tokenConfigDest.address, tokenConfigDest.decimals);\n\n    const pair = await Fetcher.fetchPairData(tokenFrom, tokenTo);\n    const route = new Route([pair], tokenTo);\n\n    let output = null;\n    if (route && route.midPrice){\n      output = this.BNify(route.midPrice.toSignificant(tokenConfigDest.decimals));\n      this.setCachedData(cachedDataKey,output);\n    }\n    return output;\n  }\n  */\n  getCurveDepositedTokens = async (account,enabledTokens=[]) => {\n    account = account ? account : this.props.account;\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    if (!account || !enabledTokens || !enabledTokens.length){\n      return [];\n    }\n\n    const curveTxs = await this.getCurveTxs(account,0,'latest',enabledTokens);\n\n    const idleTokensBalances = {};\n    let remainingCurveTokens = this.BNify(0);\n\n    // this.customLog('getCurveDepositedTokens',curveTxs);\n\n    curveTxs.forEach( tx => {\n\n      const idleToken = tx.idleToken;\n      const idleTokens = this.BNify(tx.idleTokens);\n\n      if (!idleTokensBalances[idleToken]){\n        idleTokensBalances[idleToken] = this.BNify(0);\n      }\n\n      switch (tx.action){\n        case 'CurveIn':\n        case 'CurveZapIn':\n          idleTokensBalances[idleToken] = idleTokensBalances[idleToken].plus(idleTokens);\n        break;\n        case 'CurveOut':\n        case 'CurveZapOut':\n          if (idleTokens.gt(idleTokensBalances[idleToken])){\n            remainingCurveTokens = remainingCurveTokens.plus(idleTokens.minus(idleTokensBalances[idleToken]));\n          }\n          idleTokensBalances[idleToken] = idleTokensBalances[idleToken].minus(idleTokens);\n          if (idleTokensBalances[idleToken].lt(0)){\n            idleTokensBalances[idleToken] = this.BNify(0);\n          }\n        break;\n        default:\n        break;\n      }\n\n      // this.customLog(this.strToMoment(tx.timeStamp*1000).format('DD-MM-YYYY HH:mm:ss'),tx.blockNumber,idleToken,tx.action,idleTokens.toFixed(6),idleTokensBalances[idleToken].toFixed(6),remainingCurveTokens.toFixed(6));\n\n      // Scalo il remaining tokens\n      if (remainingCurveTokens.gt(0)){\n        Object.keys(idleTokensBalances).forEach( token => {\n          const tokenBalance = idleTokensBalances[token];\n          if (tokenBalance && tokenBalance.gt(0)){\n            if (tokenBalance.gt(remainingCurveTokens)){\n              idleTokensBalances[token] = idleTokensBalances[token].minus(remainingCurveTokens);\n            } else {\n              remainingCurveTokens = remainingCurveTokens.minus(idleTokensBalances[token]);\n              idleTokensBalances[token] = 0;\n            }\n          }\n        });\n      }\n    });\n\n    // this.customLog('idleTokensBalances',idleTokensBalances);\n  }\n  getCurveUnevenTokenAmounts = async (amounts,max_burn_amount) => {\n    const curveSwapContract = await this.getCurveDepositContract();\n    if (curveSwapContract){\n      const unevenAmounts = await this.genericContractCall(curveSwapContract.name, 'remove_liquidity_imbalance', [amounts, max_burn_amount]);\n      // this.customLog('getCurveUnevenTokenAmounts',amounts,max_burn_amount,unevenAmounts);\n      return unevenAmounts;\n    }\n    return null;\n  }\n  getCurveAPY = async () => {\n\n    // Check for cached data\n    const cachedDataKey = `getCurveAPY`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const curveRatesInfo = this.getGlobalConfig(['curve','rates']);\n    if (curveRatesInfo){\n      const results = await this.makeRequest(curveRatesInfo.endpoint);\n      if (results && results.data){\n        const path = Object.values(curveRatesInfo.path);\n        let curveApy = this.getArrayPath(path,results.data);\n        if (curveApy){\n          curveApy = this.BNify(curveApy).times(100);\n          if (!this.BNify(curveApy).isNaN()){\n            return this.setCachedDataWithLocalStorage(cachedDataKey,curveApy);\n          }\n        }\n      }\n    }\n    return null;\n  }\n  getCurveAvailableTokens = () => {\n    if (!this.props.availableStrategies){\n      return false;\n    }\n    const curveTokens = this.getGlobalConfig(['curve','availableTokens']);\n    const strategyTokens = this.props.availableStrategies['best'];\n    const availableTokens = Object.keys(strategyTokens).reduce( (availableTokens,token) => {\n      const tokenConfig = strategyTokens[token];\n      if (Object.keys(curveTokens).includes(tokenConfig.idle.token) && curveTokens[tokenConfig.idle.token].enabled){\n        availableTokens[token] = tokenConfig;\n      }\n      return availableTokens;\n    },{});\n\n    return availableTokens;\n  }\n  getCurveAPYContract = async () => {\n    const curveSwapContract = await this.getCurveDepositContract();\n    if (curveSwapContract){\n      const blockNumber = await this.getBlockNumber();\n      if (blockNumber){\n        const blocksForPrevTokenPrice = 10;\n        let [tokenPrice,prevTokenPrice] = await Promise.all([\n          this.genericContractCall(curveSwapContract.name,'get_virtual_price'),\n          this.genericContractCall(curveSwapContract.name,'get_virtual_price',[],{},blockNumber-blocksForPrevTokenPrice)\n        ]);\n\n        if (tokenPrice && prevTokenPrice){\n\n          const blocksMultiplier = this.BNify(this.getGlobalConfig(['network','blocksPerYear'])).div(blocksForPrevTokenPrice);\n          const curveAPR = this.BNify(tokenPrice).div(prevTokenPrice).minus(1).times(blocksMultiplier);\n          return this.apr2apy(curveAPR).times(100);\n        }\n      }\n    }\n    return null;\n  }\n  getCurveTokenSupply = async () => {\n    const curvePoolContract = await this.getCurvePoolContract();\n    if (curvePoolContract){\n      return await this.genericContractCall(curvePoolContract.name,'totalSupply');\n    }\n    return null;\n  }\n  getCurveTokenBalance = async (account=null,fixDecimals=true) => {\n    const curvePoolContract = await this.getCurvePoolContract();\n    if (curvePoolContract){\n      account = account ? account : this.props.account;\n      return await this.getTokenBalance(curvePoolContract.name,account,fixDecimals);\n    }\n    return null;\n  }\n  getCurveTokenPrice = async (blockNumber='latest',fixDecimals=true) => {\n    const migrationContract = await this.getCurveDepositContract();\n    let curveTokenPrice = await this.genericContractCall(migrationContract.name,'get_virtual_price',[],{},blockNumber);\n    if (curveTokenPrice){\n      curveTokenPrice = this.BNify(curveTokenPrice);\n      if (fixDecimals){\n        const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n        curveTokenPrice = this.fixTokenDecimals(curveTokenPrice,curvePoolContract.decimals);\n      }\n      return curveTokenPrice;\n    }\n    return null;\n  }\n  getCurveRedeemableIdleTokens = async (account) => {\n    let [curveTokenPrice,curveTokenBalance] = await Promise.all([\n      this.getCurveTokenPrice('latest'),\n      this.getCurveTokenBalance(account),\n    ]);\n    if (curveTokenBalance && curveTokenPrice){\n      return this.BNify(curveTokenBalance).times(curveTokenPrice);\n    }\n    return null;\n  }\n  getCurveDepositContract = async () => {\n    const depositContractInfo = this.getGlobalConfig(['curve','depositContract']);\n    if (depositContractInfo){\n      let curveDepositContract = this.getContractByName(depositContractInfo.name);\n      if (!curveDepositContract && depositContractInfo.abi){\n        curveDepositContract = await this.props.initContract(depositContractInfo.name,depositContractInfo.address,depositContractInfo.abi);\n      }\n    }\n    return depositContractInfo;\n  }\n  getCurveZapContract = async () => {\n    const zapContractInfo = this.getGlobalConfig(['curve','zapContract']);\n    if (zapContractInfo){\n      let curveZapContract = this.getContractByName(zapContractInfo.name);\n      if (!curveZapContract && zapContractInfo.abi){\n        curveZapContract = await this.props.initContract(zapContractInfo.name,zapContractInfo.address,zapContractInfo.abi);\n      }\n    }\n    return zapContractInfo;\n  }\n  getCurvePoolContract = async () => {\n    const poolContractInfo = this.getGlobalConfig(['curve','poolContract']);\n    if (poolContractInfo){\n      let curvePoolContract = this.getContractByName(poolContractInfo.name);\n      if (!curvePoolContract && poolContractInfo.abi){\n        curvePoolContract = await this.props.initContract(poolContractInfo.name,poolContractInfo.address,poolContractInfo.abi);\n      }\n    }\n    return poolContractInfo;\n  }\n  getCurveSwapContract = async () => {\n    const migrationContractInfo = this.getGlobalConfig(['curve','migrationContract']);\n    if (migrationContractInfo){\n      let migrationContract = this.getContractByName(migrationContractInfo.name);\n      if (!migrationContract && migrationContractInfo.abi){\n        migrationContract = await this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi);\n      }\n    }\n    return migrationContractInfo;\n  }\n  getCurveIdleTokensAmounts = async (account=null,curveTokenBalance=null,max_slippage=null) => {\n    if (!account && this.props.account){\n      account = this.props.account;\n    }\n\n    if (!account){\n      return null;\n    }\n\n    const tokensBalances = {};\n    const curveSwapContract = await this.getCurveSwapContract();\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n\n    const curveTokenSupply = await this.getCurveTokenSupply();\n    if (!curveTokenBalance){\n      curveTokenBalance = await this.getCurveTokenBalance(account,false);\n    }\n\n    if (curveTokenBalance && curveTokenSupply){\n      const curveTokenShare = this.BNify(curveTokenBalance).div(this.BNify(curveTokenSupply));\n      const n_coins = Object.keys(curveAvailableTokens).length;\n\n      if (max_slippage){\n        max_slippage = this.BNify(max_slippage).div(n_coins);\n      }\n\n      // this.customLog('curveTokenShare',this.BNify(curveTokenBalance).toString(),this.BNify(curveTokenSupply).toString(),curveTokenShare.toString());\n\n      await this.asyncForEach(Object.keys(curveAvailableTokens), async (token) => {\n        const curveTokenConfig = curveAvailableTokens[token];\n        const coinIndex = curveTokenConfig.migrationParams.coinIndex;\n        const curveIdleTokens = await this.genericContractCall(curveSwapContract.name,'balances',[coinIndex]);\n        if (curveIdleTokens){\n          let idleTokenBalance = this.BNify(curveIdleTokens).times(curveTokenShare);\n          if (max_slippage){\n            // this.customLog('getCurveIdleTokensAmounts',idleTokenBalance.toFixed());\n            idleTokenBalance = idleTokenBalance.minus(idleTokenBalance.times(max_slippage));\n          }\n          tokensBalances[coinIndex] = this.integerValue(idleTokenBalance);\n        }\n      });\n    }\n\n    return Object.values(tokensBalances);\n  }\n\n  // Get amounts of underlying tokens in the curve pool\n  getCurveTokensAmounts = async (account=null,curveTokenBalance=null,fixDecimals=false,useCoinIndex=false) => {\n\n    if (!account && this.props.account){\n      account = this.props.account;\n    }\n\n    if (!account){\n      return null;\n    }\n\n    const tokensBalances = {};\n    const availableTokens = this.getCurveAvailableTokens();\n    const curveSwapContract = await this.getCurveSwapContract();\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n\n    const curveTokenSupply = await this.getCurveTokenSupply();\n    if (!curveTokenBalance){\n      curveTokenBalance = await this.getCurveTokenBalance(account,false);\n    }\n\n    if (curveTokenBalance && curveTokenSupply){\n      const curveTokenShare = this.BNify(curveTokenBalance).div(this.BNify(curveTokenSupply));\n\n      await this.asyncForEach(Object.keys(curveAvailableTokens), async (token) => {\n        const curveTokenConfig = curveAvailableTokens[token];\n        const coinIndex = curveTokenConfig.migrationParams.coinIndex;\n        const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n        const [\n          idleTokenPrice,\n          idleTokenBalance\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.genericContractCall(curveSwapContract.name,'balances',[coinIndex]),\n        ]);\n\n        const totalTokenSupply = this.BNify(idleTokenBalance).times(this.BNify(idleTokenPrice));\n        let tokenBalance = totalTokenSupply.times(curveTokenShare);\n        if (fixDecimals){\n          tokenBalance = this.fixTokenDecimals(tokenBalance,18);\n        }\n\n        tokensBalances[curveTokenConfig.baseToken] = useCoinIndex ? this.integerValue(tokenBalance) : tokenBalance;\n      });\n    }\n\n    return useCoinIndex ? Object.values(tokensBalances) : tokensBalances;\n  }\n\n  // Compile amounts array for Curve\n  getCurveAmounts = async (token,amount,deposit=false) => {\n    const amounts = {};\n    const availableTokens = this.getCurveAvailableTokens();\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n\n    await this.asyncForEach(Object.keys(curveAvailableTokens), async (idleToken) => {\n      const curveTokenConfig = curveAvailableTokens[idleToken];\n      const migrationParams = curveTokenConfig.migrationParams;\n      const coinIndex = migrationParams.coinIndex;\n      if (idleToken === token && parseFloat(amount)>0){\n        const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n        amount = this.fixTokenDecimals(amount,18);\n        if (!deposit){\n          const idleTokenPrice = await this.getIdleTokenPrice(tokenConfig);\n          amount = amount.div(idleTokenPrice);\n        }\n        amount = this.normalizeTokenAmount(amount,curveTokenConfig.decimals);\n        amounts[coinIndex] = amount;\n      } else {\n        amounts[coinIndex] = 0;\n      }\n    });\n\n    return Object.values(amounts);\n  }\n  getCurveTokenAmount = async (amounts,deposit=true) => {\n    const migrationContract = await this.getCurveSwapContract();\n    if (migrationContract){\n      return await this.genericContractCall(migrationContract.name,'calc_token_amount',[amounts,deposit]);\n    }\n    return null;\n  }\n  getCurveSlippage = async (token,amount,deposit=true,uneven_amounts=null) => {\n    let slippage = null;\n    const depositContract = await this.getCurveDepositContract();\n    if (depositContract){\n\n      const n_coins = this.getGlobalConfig(['curve','params','n_coins']);\n\n      amount = this.BNify(amount)\n      if (!amount || amount.isNaN() || amount.lte(0)){\n        return null;\n      }\n\n      let amounts = uneven_amounts;\n      if (!amounts || amounts.length !== n_coins){\n        amounts = await this.getCurveAmounts(token,amount);\n      }\n\n      let [\n        virtualPrice,\n        tokenAmount\n      ] = await Promise.all([\n        this.genericContractCall(depositContract.name,'get_virtual_price'),\n        this.genericContractCall(depositContract.name,'calc_token_amount',[amounts,deposit]),\n      ]);\n\n      if (virtualPrice && tokenAmount){\n        amount = this.fixTokenDecimals(amount,18);\n        virtualPrice = this.fixTokenDecimals(virtualPrice,18);\n        tokenAmount = this.fixTokenDecimals(tokenAmount,18);\n        const Sv = tokenAmount.times(virtualPrice);\n\n        // Handle redeem in uneven amounts (Slippage 0%)\n        if (uneven_amounts && !deposit){\n          amount = amount.times(virtualPrice);\n        }\n\n        if (deposit){\n          slippage = Sv.div(amount).minus(1).times(-1);\n        } else {\n          slippage = amount.div(Sv).minus(1).times(-1);\n        }\n\n        // console.log('getCurveSlippage',token,deposit,amounts,tokenAmount.toFixed(6),virtualPrice.toFixed(6),Sv.toFixed(6),amount.toFixed(6),slippage.toFixed(6));\n\n        return slippage;\n      }\n    }\n    return null;\n  }\n  getCompAPR = async (token,tokenConfig,cTokenIdleSupply=null,compConversionRate=null) => {\n    const COMPTokenConfig = this.getGlobalConfig(['govTokens','COMP']);\n    if (!COMPTokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getCompAPR_${tokenConfig.idle.token}_${cTokenIdleSupply}_${compConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let compAPR = this.BNify(0);\n    const compDistribution = await this.getCompDistribution(tokenConfig,cTokenIdleSupply);\n\n    if (compDistribution){\n\n      const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n        \n      // Get COMP conversion rate\n      if (!compConversionRate){\n        try {\n          compConversionRate = await this.getUniswapConversionRate(DAITokenConfig,COMPTokenConfig);\n        } catch (error) {\n\n        }\n        if (!compConversionRate || compConversionRate.isNaN()){\n          compConversionRate = this.BNify(1);\n        }\n      }\n\n      const compValue = this.BNify(compConversionRate).times(compDistribution);\n\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,false);\n\n      if (tokenAllocation){\n        compAPR = compValue.div(tokenAllocation.totalAllocationConverted).times(100);\n        if (!this.BNify(compAPR).isNaN()){\n          this.setCachedDataWithLocalStorage(cachedDataKey,compAPR);\n        }\n      }\n    }\n\n    return compAPR;\n  }\n  getCompSpeed = async (cTokenAddress) => {\n    let compSpeed = await this.genericContractCall('Comptroller','compSpeeds',[cTokenAddress]);\n    if (compSpeed){\n      return this.BNify(compSpeed);\n    }\n    return null;\n  }\n  getCompDistribution = async (tokenConfig,cTokenIdleSupply=null,annualize=true) => {\n\n    const cachedDataKey = `getCompDistribution_${tokenConfig.idle.token}_${cTokenIdleSupply}_${annualize}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const cTokenInfo = tokenConfig.protocols.find( p => (p.name === 'compound') );\n    if (cTokenInfo){\n\n      // Get IdleToken allocation in compound\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,false);\n      const compoundAllocationPerc = tokenAllocation.protocolsAllocationsPerc[cTokenInfo.address.toLowerCase()];\n\n      // Calculate distribution if compound allocation >= 0.1%\n      if (compoundAllocationPerc && compoundAllocationPerc.gte(0.001)){\n\n        // Get COMP distribution speed and Total Supply\n        const [\n          compSpeed,\n          cTokenTotalSupply\n        ] = await Promise.all([\n          this.getCompSpeed(cTokenInfo.address),\n          this.genericContractCall(cTokenInfo.token,'totalSupply'),\n        ]);\n\n        if (compSpeed && cTokenTotalSupply){\n\n          // Get Idle liquidity supply\n          if (!cTokenIdleSupply){\n            cTokenIdleSupply = await this.genericContractCall(cTokenInfo.token,'balanceOf',[tokenConfig.idle.address]);\n          }\n\n          if (cTokenIdleSupply){\n\n            // Get COMP distribution for Idle in a Year\n            const blocksPerYear = this.getGlobalConfig(['network','blocksPerYear']);\n\n            // Take 50% of distrubution for lenders side\n            const compoundPoolShare = this.BNify(cTokenIdleSupply).div(this.BNify(cTokenTotalSupply));\n            let compDistribution = this.BNify(compSpeed).times(compoundPoolShare);\n\n            if (annualize){\n              compDistribution = compDistribution.div(1e18).times(this.BNify(blocksPerYear));\n            }\n\n            if (!this.BNify(compDistribution).isNaN()){\n              return this.setCachedDataWithLocalStorage(cachedDataKey,compDistribution);\n            }\n          }\n        }\n      }\n    }\n\n    return null;\n  }\n  getCompUserDistribution = async (account=null,availableTokens=null) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens){\n      return false;\n    }\n\n    let output = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const cTokenInfo = tokenConfig.protocols.find( p => (p.name === 'compound') );\n      if (cTokenInfo){\n        const [\n          userPoolShare,\n          compDistribution,\n        ] = await Promise.all([\n          this.getUserPoolShare(account,tokenConfig,false),\n          this.getCompDistribution(tokenConfig,null,false),\n        ]);\n\n        if (compDistribution && userPoolShare){\n          output = output.plus(compDistribution.times(userPoolShare));\n        }\n      }\n    });\n\n    return output;\n  }\n  getCompAvgApr = async (availableTokens=null) => {\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n    let output = this.BNify(0);\n    let totalAllocation = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [compApr,tokenAllocation] = await Promise.all([\n        this.getCompAPR(token,tokenConfig),\n        this.getTokenAllocation(tokenConfig,false,false)\n      ]);\n      \n      if (compApr && tokenAllocation){\n        output = output.plus(compApr.times(tokenAllocation.totalAllocation));\n        totalAllocation = totalAllocation.plus(tokenAllocation.totalAllocation);\n        // this.customLog(token,compApr.toString(),tokenAllocation.totalAllocation.toString(),output.toString(),totalAllocation.toString());\n      }\n    });\n\n    output = output.div(totalAllocation);\n\n    return output;\n  }\n  getTokensCsv = async () => {\n\n    // eslint-disable-next-line\n    Array.prototype.sum = function() {\n      return this.reduce(function(pv, cv) { return pv + cv; }, 0);\n    };\n    // eslint-disable-next-line\n    Array.prototype.max = function() {\n      return Math.max.apply(null, this);\n    };\n    // eslint-disable-next-line\n    Array.prototype.avg = function() {\n      return this.sum()/this.length;\n    };\n\n    const csv = [];\n    const availableStrategies = this.props.availableStrategies;\n    await this.asyncForEach(Object.keys(availableStrategies), async (strategy) => {\n      const availableTokens = availableStrategies[strategy];\n      const isRisk = strategy === 'risk';\n      await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n        const tokenConfig = availableTokens[token];\n        const rates = await this.getTokenApiData(tokenConfig.address,isRisk,null,null,false,7200,'ASC');\n        const header = [];\n        let protocols = null;\n        const rows = [];\n        const aprAvg = {};\n        const scoreAvg = {};\n\n        const lastRow = rates[rates.length-1];\n\n        rates.forEach( r => {\n          if (!protocols){\n            header.push('Token');\n            header.push('Date');\n\n            // Get protocols\n            protocols = [];\n            lastRow.protocolsData.forEach( p1 => {\n              const foundProtocol = tokenConfig.protocols.find( p2 => ( p2.address.toLowerCase() === p1.protocolAddr.toLowerCase() ) );\n              if (foundProtocol){\n                protocols.push(foundProtocol);\n              }\n            });\n\n            // Add APR columns\n            header.push('APR Idle');\n            header.push('SCORE Idle');\n\n            aprAvg['idle'] = [];\n            scoreAvg['idle'] = [];\n\n            protocols.forEach( p => {\n              header.push('APR '+p.name);\n              header.push('SCORE '+p.name);\n\n              aprAvg[p.name] = [];\n              scoreAvg[p.name] = [];\n            });\n\n            rows.push(header.join(','));\n          }\n\n          const date = moment(r.timestamp*1000).format('YYYY-MM-DD');\n          const rate = this.BNify(r.idleRate).div(1e18).toFixed(5);\n          const score = parseFloat(r.idleScore);\n\n          const row = [];\n          row.push(`${token}-${strategy}`);\n          row.push(date);\n          row.push(rate);\n          row.push(score);\n\n          if (date>='2020-09-15'/* && date<='2020-11-09'*/){\n            aprAvg['idle'].push(parseFloat(rate));\n            scoreAvg['idle'].push(parseFloat(score));\n          }\n\n          protocols.forEach( pInfo => {\n            const pData = r.protocolsData.find( p => (p.protocolAddr.toLowerCase() === pInfo.address.toLowerCase()) );\n            let pRate = '';\n            let pScore = '';\n            if (pData){\n              pScore = !this.BNify(pData.defiScore).isNaN() ? parseFloat(pData.defiScore) : '0.00000';\n              pRate = !this.BNify(pData.rate).isNaN() ? this.BNify(pData.rate).div(1e18) : '0.00000';\n              if (typeof pData[`${pInfo.name}AdditionalAPR`] !== 'undefined'){\n                const additionalRate = this.BNify(pData[`${pInfo.name}AdditionalAPR`]).div(1e18);\n                if (!additionalRate.isNaN()){\n                  pRate = pRate.plus(additionalRate);\n                }\n              }\n\n              if (date>='2020-09-15'/* && date<='2020-11-09'*/){\n                if (!isNaN(parseFloat(pRate))){\n                  aprAvg[pInfo.name].push(parseFloat(pRate));\n                }\n                if (!isNaN(parseFloat(pScore))){\n                  scoreAvg[pInfo.name].push(parseFloat(pScore));\n                }\n              }\n            }\n\n            row.push(pRate);\n            row.push(pScore);\n          });\n\n          rows.push(row.join(','));\n        });\n\n        Object.keys(aprAvg).forEach( p => {\n          const avgRate = aprAvg[p].sum()/aprAvg[p].length;\n          this.customLog(`${token}-${strategy}-${p} - Avg Rate: ${avgRate}`);\n        });\n\n        Object.keys(scoreAvg).forEach( p => {\n          const avgScore = scoreAvg[p].sum()/scoreAvg[p].length;\n          this.customLog(`${token}-${strategy}-${p} - Avg Score: ${avgScore}`);\n        });\n\n        // if (token==='DAI' && isRisk){\n        //   debugger;\n        // }\n\n        csv.push(rows.join('\\n'));\n      });\n    });\n\n    this.customLog(csv.join('\\n'));\n  }\n  getGovTokenPool = async (govToken=null,availableTokens=null,convertToken=null) => {\n    let output = this.BNify(0);\n\n    if (!availableTokens){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const enabledTokens = govToken ? [govToken] : null;\n      const compTokenBalance = await this.getGovTokensBalances(tokenConfig.idle.address,convertToken,enabledTokens);\n      if (compTokenBalance && compTokenBalance.total){\n        output = output.plus(compTokenBalance.total);\n      }\n    });\n    return output;\n  }\n  getIdleGovToken = () => {\n    if (!this.idleGovToken){\n      this.idleGovToken = new IdleGovToken(this.props);\n    }\n    return this.idleGovToken;\n  }\n  getTokenGovTokens = (tokenConfig) => {\n    const output = {};\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    Object.keys(govTokens).forEach( govToken => {\n      const govTokenConfig = govTokens[govToken];\n      if (!govTokenConfig.enabled){\n        return;\n      }\n      if (govTokenConfig.protocol === 'idle'){\n        if (!govTokenConfig.disabledTokens.includes(tokenConfig.idle.token)){\n          output[govToken] = govTokenConfig;\n        }\n      } else {\n        const foundProtocol = tokenConfig.protocols.find( p => (p.enabled && p.name.toLowerCase() === govTokenConfig.protocol.toLowerCase()) )\n        if (foundProtocol){\n          output[govToken] = govTokenConfig;\n        }\n      }\n    });\n    return output;\n  }\n  fixDistributionSpeed = (speed,frequency) => {\n    const blocksPerYear = this.BNify(this.getGlobalConfig(['network','blocksPerYear']));\n    speed = this.BNify(speed);\n    if (speed && !speed.isNaN()){\n      switch (frequency){\n        case 'day':\n          const blocksPerDay = blocksPerYear.div(365.242199);\n          speed = speed.times(blocksPerDay);\n        break;\n        case 'week':\n          const blocksPerWeek = blocksPerYear.div(52.1429);\n          speed = speed.times(blocksPerWeek);\n        break;\n        case 'month':\n          const blocksPerMonth = blocksPerYear.div(12);\n          speed = speed.times(blocksPerMonth);\n        break;\n        case 'year':\n          speed = speed.times(blocksPerYear);\n        break;\n        default:\n        break;\n      }\n      return speed;\n    }\n    return null;\n  }\n  getGovTokensUserDistributionSpeed = async (account,tokenConfig=null,enabledTokens=null) => {\n    const govTokensUserDistribution = {};\n    const govTokens = this.getGlobalConfig(['govTokens']);\n\n    await this.asyncForEach(Object.keys(govTokens),async (govToken) => {\n      if (enabledTokens && !enabledTokens.includes(govToken)){\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled){\n        return;\n      }\n\n      const availableTokens = {};\n      availableTokens[tokenConfig.token] = tokenConfig;\n\n      let output = null;\n      switch (govToken){\n        case 'COMP':\n          output = await this.getCompUserDistribution(account,availableTokens);\n        break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          output = await idleGovToken.getUserDistribution(account,availableTokens);\n        break;\n        default:\n        break;\n      }\n\n      if (output){\n        output = output.div(1e18);\n        if (govTokenConfig.distributionFrequency){\n          output = this.fixDistributionSpeed(output,govTokenConfig.distributionFrequency);\n        }\n        govTokensUserDistribution[govToken] = output;\n      }\n    });\n\n    return govTokensUserDistribution;\n  }\n  getGovTokensDistributionSpeed = async (tokenConfig,enabledTokens=null) => {\n    const govTokensDistribution = {};\n    const govTokens = this.getGlobalConfig(['govTokens']);\n\n    await this.asyncForEach(Object.keys(govTokens),async (govToken) => {\n      if (enabledTokens && !enabledTokens.includes(govToken)){\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled){\n        return;\n      }\n\n      let govSpeed = null;\n      switch (govToken){\n        case 'COMP':\n          const cTokenInfo = tokenConfig.protocols.find( p => (p.name === 'compound') );\n          if (cTokenInfo){\n            govSpeed = await this.getCompDistribution(tokenConfig,null,false);\n          }\n        break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          govSpeed = await idleGovToken.getSpeed(tokenConfig.idle.address);\n        break;\n        default:\n        break;\n      }\n\n      if (govSpeed){\n        govSpeed = govSpeed.div(1e18);\n        if (govTokenConfig.distributionFrequency){\n          govSpeed = this.fixDistributionSpeed(govSpeed,govTokenConfig.distributionFrequency);\n        }\n        govTokensDistribution[govToken] = govSpeed;\n      }\n    });\n\n    return govTokensDistribution;\n  }\n  getGovTokensAprs = async (token,tokenConfig,enabledTokens=null) => {\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const govTokensAprs = {}\n\n    await this.asyncForEach(Object.keys(govTokens),async (govToken) => {\n\n      if (enabledTokens && !enabledTokens.includes(govToken)){\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled || govTokenConfig.aprTooltipMode === false){\n        return;\n      }\n\n      let output = null;\n      let tokenAllocation = null;\n\n      switch (govToken){\n        case 'COMP':\n          switch (govTokenConfig.aprTooltipMode){\n            default:\n            case 'apr':\n              [output,tokenAllocation] = await Promise.all([\n                this.getCompAPR(token,tokenConfig),\n                this.getTokenAllocation(tokenConfig,false,false)\n              ]);\n\n              // Cut the COMP token proportionally on Idle funds allocation in compound\n              if (tokenAllocation){\n                const compoundInfo = tokenConfig.protocols.find( p => (p.name === 'compound') );\n                if (compoundInfo){\n                  if (tokenAllocation.protocolsAllocationsPerc[compoundInfo.address.toLowerCase()]){\n                    const compoundAllocationPerc = tokenAllocation.protocolsAllocationsPerc[compoundInfo.address.toLowerCase()];\n                    output = output.times(compoundAllocationPerc);\n                  }\n                }\n              }\n            break;\n          }\n        break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          switch (govTokenConfig.aprTooltipMode){\n            case 'apr':\n              output = await idleGovToken.getAPR(token,tokenConfig);\n            break;\n            case 'distribution':\n              output = await idleGovToken.getSpeed(tokenConfig.idle.address);\n              if (output){\n                output = this.fixTokenDecimals(output,18);\n                output = this.fixDistributionSpeed(output,govTokenConfig.distributionFrequency);\n              }\n            break;\n            case 'userDistribution':\n              output = await idleGovToken.getUserDistribution(tokenConfig);\n            break;\n            default:\n            break;\n          }\n        break;\n        default:\n        break;\n      }\n\n      if (output !== null && this.BNify(output).gt(0)){\n        govTokensAprs[govToken] = output;\n      }\n    });\n\n    return govTokensAprs;\n  }\n  getGovTokensBalances = async (address=null,convertToken='DAI',enabledTokens=null) => {\n    if (!address){\n      address = this.props.tokenConfig.idle.address;\n    }\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const govTokensBalances = {}\n\n    await this.asyncForEach(Object.keys(govTokens),async (token) => {\n\n      if (enabledTokens && !enabledTokens.includes(token)){\n        return;\n      }\n      \n      const govTokenConfig = govTokens[token];\n\n      if (!govTokenConfig.enabled){\n        return;\n      }\n\n      // Get gov token balance\n      let govTokenBalance = await this.getProtocolBalance(token,address);\n\n      if (govTokenBalance){\n        // Get gov token conversion rate\n        let tokenConversionRate = null;\n        if (convertToken){\n          const fromTokenConfig = this.getGlobalConfig(['stats','tokens',convertToken]);\n          try {\n            tokenConversionRate = await this.getUniswapConversionRate(fromTokenConfig,govTokenConfig);\n          } catch (error) {\n            \n          }\n        }\n\n        // Fix token decimals and convert\n        govTokensBalances[token] = this.fixTokenDecimals(govTokenBalance,govTokens[token].decimals,tokenConversionRate);\n\n        // Initialize Total gov Tokens\n        if (!govTokensBalances.total){\n          govTokensBalances.total = this.BNify(0);\n        }\n\n        // Sum Total gov Tokens\n        govTokensBalances.total = govTokensBalances.total.plus(govTokensBalances[token]);\n      }\n    });\n\n    return govTokensBalances;\n  }\n  getGovTokenConfigByAddress = (address) => {\n    if (!address){\n      return false;\n    }\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    return Object.values(govTokens).find( tokenConfig => (tokenConfig.enabled && tokenConfig.address.toLowerCase() === address.toLowerCase()) );\n  }\n  getGovTokensUserTotalBalance = async (account=null,availableTokens=null,convertToken=null,checkShowBalance=true) => {\n\n    // Check for cached data\n    const cachedDataKey = `govTokensUserTotalBalance_${account}_${JSON.stringify(availableTokens)}_${convertToken}_${checkShowBalance}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const govTokensUserBalances = await this.getGovTokensUserBalances(account,availableTokens,convertToken,null,checkShowBalance);\n    if (govTokensUserBalances){\n      const govTokensEarnings = Object.values(govTokensUserBalances).reduce( (acc, govTokenAmount) => {\n        acc = acc.plus(this.BNify(govTokenAmount));\n        return acc;\n      }, this.BNify(0));\n\n      return this.setCachedDataWithLocalStorage(cachedDataKey,govTokensEarnings);\n    }\n    return this.BNify(0);\n  }\n  getGovTokensUserBalances = async (account=null,availableTokens=null,convertToken=null,govTokenConfigForced=null,checkShowBalance=false) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.availableStrategies && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    const output = {};\n\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const idleTokenConfig = availableTokens[token].idle;\n\n      // Get govTokens amounts\n      const govTokensAmounts = await this.genericContractCall(idleTokenConfig.token,'getGovTokensAmounts',[account]);\n\n      if (govTokensAmounts){\n        await this.asyncForEach(govTokensAmounts, async (govTokenAmount,govTokenIndex) => {\n          govTokenAmount = this.BNify(govTokenAmount);\n          // Get gov Token config by index\n          const govTokenAddress = await this.genericContractCall(idleTokenConfig.token,'govTokens',[govTokenIndex]);\n\n          if (govTokenAddress){\n            const govTokenConfig = govTokenConfigForced ? govTokenConfigForced : this.getGovTokenConfigByAddress(govTokenAddress);\n\n            if (govTokenConfig && (!checkShowBalance || govTokenConfig.showBalance) && govTokenConfig.address && govTokenConfig.address.toLowerCase() === govTokenAddress.toLowerCase()){\n\n              // Get gov token conversion rate\n              let tokenConversionRate = null;\n              if (convertToken){\n                const fromTokenConfig = this.getGlobalConfig(['stats','tokens',convertToken]);\n                if (fromTokenConfig){\n                  try {\n                    tokenConversionRate = await this.getUniswapConversionRate(fromTokenConfig,govTokenConfig);\n                  } catch (error) {\n                    \n                  }\n                }\n              }\n\n              govTokenAmount = this.fixTokenDecimals(govTokenAmount,govTokenConfig.decimals,tokenConversionRate);\n\n              // Initialize govToken balance\n              if (!output[govTokenConfig.token]){\n                output[govTokenConfig.token] = this.BNify(0); // this.BNify(1) for testing\n              }\n\n              // Add govTokens balance\n              output[govTokenConfig.token] = output[govTokenConfig.token].plus(govTokenAmount);\n            }\n          }\n        });\n      }\n    });\n\n    return output;\n  }\n  getTokenFees = async (tokenConfig=null) => {\n    if (!tokenConfig && this.props.tokenConfig){\n      tokenConfig = this.props.tokenConfig;\n    }\n    const fee = await this.genericContractCall(tokenConfig.idle.token, 'fee');\n    if (fee){\n      return this.BNify(fee).div(this.BNify(100000));\n    }\n    return null;\n  }\n  getUserTokenFees = async (tokenConfig=null,account=null) => {\n    if (!tokenConfig && this.props.tokenConfig){\n      tokenConfig = this.props.tokenConfig;\n    }\n    if (!account && this.props.account){\n      account = this.props.account;\n    }\n\n    if (!account || !tokenConfig){\n      return null;\n    }\n\n    let [\n      feePercentage,\n      amountLent,\n      redeemableBalance\n    ] = await Promise.all([\n      this.getTokenFees(tokenConfig),\n      this.loadAssetField('amountLent',tokenConfig.token,tokenConfig,account),\n      this.loadAssetField('redeemableBalance',tokenConfig.token,tokenConfig,account)\n    ]);\n\n    if (feePercentage && amountLent && redeemableBalance){\n      const gain = redeemableBalance.minus(amountLent);\n      const fees = gain.times(feePercentage);\n\n      // this.customLog('fees',tokenConfig.token,amountLent.toString(),redeemableBalance.toString(),gain.toString(),fees.toString());\n\n      return fees;\n    }\n\n    return null;\n  }\n  getGovTokenUserBalance = async (govTokenConfig,account=null,availableTokens=null,convertToken=null) => {\n    const govTokensUserBalances = await this.getGovTokensUserBalances(account,availableTokens,convertToken,govTokenConfig);\n    return govTokensUserBalances && govTokensUserBalances[govTokenConfig.token] ? govTokensUserBalances[govTokenConfig.token] : this.BNify(0);\n  }\n  getTotalTVL = async () => {\n    const tokensTVL = await this.getTokensTVL();\n    return Object.values(tokensTVL).reduce( (totalTVL,tokenInfo) => {\n      const tokenTVL = this.BNify(tokenInfo.totalTVL);\n      if (tokenTVL && !tokenTVL.isNaN()){\n        totalTVL = totalTVL.plus(tokenTVL);\n      }\n      return totalTVL;\n    },this.BNify(0));\n  }\n  getTokensTVL = async () => {\n    const output = {};\n    const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n    await this.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n      const isRisk = strategy === 'risk';\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n\n        let tokenTVL = this.BNify(0);\n        let totalTVL = this.BNify(0);\n        let oldTokenTVL = this.BNify(0);\n        const tokenConfig = availableTokens[token];\n        const idleTokenName = tokenConfig.idle.token;\n\n        output[idleTokenName] = {\n          tokenTVL,\n          totalTVL,\n          oldTokenTVL,\n          govTokens:{},\n        };\n\n        const [\n          tokenPrice,\n          totalSupply\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.getIdleTokenSupply(tokenConfig)\n        ]);\n\n        tokenTVL = this.fixTokenDecimals(totalSupply,18).times(tokenPrice);\n        tokenTVL = await this.convertTokenBalance(tokenTVL,token,tokenConfig,isRisk);\n\n        output[idleTokenName].tokenTVL = tokenTVL;\n        totalTVL = totalTVL.plus(tokenTVL);\n\n        // Add Gov Tokens\n        const govTokens = this.getTokenGovTokens(tokenConfig);\n        if (govTokens){\n          await this.asyncForEach(Object.keys(govTokens).filter( govToken => (govTokens[govToken].showAUM) ), async (govToken) => {\n            const govTokenConfig = govTokens[govToken];\n            const [\n              govTokenBalance,\n              govTokenConversionRate\n            ] = await Promise.all([\n              this.getProtocolBalance(govToken,tokenConfig.idle.address),\n              this.getUniswapConversionRate(DAITokenConfig,govTokenConfig)\n            ]);\n            \n            if (govTokenBalance && govTokenConversionRate){\n              const govTokenBalanceConverted = this.fixTokenDecimals(govTokenBalance,govTokenConfig.decimals).times(this.BNify(govTokenConversionRate));\n              if (govTokenBalanceConverted && !govTokenBalanceConverted.isNaN()){\n                totalTVL = totalTVL.plus(govTokenBalanceConverted);\n                output[idleTokenName].govTokens[govToken] = govTokenBalanceConverted;\n              }\n            }\n          });\n        }\n\n        // Get old token allocation\n        if (tokenConfig.migration && tokenConfig.migration.oldContract){\n          const oldTokenConfig = Object.assign({},tokenConfig);\n          oldTokenConfig.protocols = Object.values(tokenConfig.protocols);\n          oldTokenConfig.idle = Object.assign({},tokenConfig.migration.oldContract);\n\n          // Replace protocols with old protocols\n          if (oldTokenConfig.migration.oldProtocols){\n            oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n              const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n              if (foundProtocol){\n                const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                oldTokenConfig.protocols[protocolPos] = oldProtocol;\n              }\n            });\n          }\n\n          const [\n            oldTokenPrice,\n            oldTotalSupply\n          ] = await Promise.all([\n            this.getIdleTokenPrice(oldTokenConfig),\n            this.getIdleTokenSupply(oldTokenConfig.idle.name)\n          ]);\n\n          if (oldTokenPrice && oldTotalSupply){\n            oldTokenTVL = this.fixTokenDecimals(oldTotalSupply,18).times(oldTokenPrice);\n            oldTokenTVL = await this.convertTokenBalance(oldTokenTVL,token,oldTokenConfig,isRisk);\n            if (oldTokenTVL && !oldTokenTVL.isNaN()){\n              output[idleTokenName].oldTokenTVL = oldTokenTVL;\n              totalTVL = totalTVL.plus(oldTokenTVL);\n            }\n          }\n        }\n\n        output[idleTokenName].totalTVL = totalTVL;\n      });\n    });\n\n    return output;\n  }\n  getSubstackLatestFeed = async () => {\n    const cachedDataKey = `substackLatestFeed`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const endpointInfo = this.getGlobalConfig(['stats','substack']);\n    const idleSubstackFeed = await this.makeRequest(endpointInfo.endpoint);\n\n    if (idleSubstackFeed && idleSubstackFeed.data && idleSubstackFeed.data.items && idleSubstackFeed.data.items.length>0){\n      const latestFeed = idleSubstackFeed.data.items[0];\n      return this.setCachedDataWithLocalStorage(cachedDataKey,latestFeed,endpointInfo.TTL);\n    }\n\n    return null;\n  }\n  getAggregatedStats = async (addGovTokens=true) => {\n    const endpointInfo = this.getGlobalConfig(['stats','tvls']);\n    const tvls = await this.makeCachedRequest(endpointInfo.endpoint,endpointInfo.TTL,true);\n\n    if (tvls){\n      const avgAPY = this.BNify(tvls.avgAPY);\n      const totalAUM = this.BNify(tvls.totalTVL);\n      return {\n        avgAPY,\n        totalAUM\n      };\n    } else {\n      return await this.getAggregatedStats_chain();\n    }\n  }\n  getAggregatedStats_chain = async (addGovTokens=true) => {\n\n    // Check for cached data\n    const cachedDataKey = `getAggregatedStats_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && (cachedData.avgAPR && !this.BNify(cachedData.avgAPR).isNaN()) && (cachedData.avgAPY && !this.BNify(cachedData.avgAPY).isNaN()) && (cachedData.totalAUM && !this.BNify(cachedData.totalAUM).isNaN())){\n      return {\n        avgAPR:this.BNify(cachedData.avgAPR),\n        avgAPY:this.BNify(cachedData.avgAPY),\n        totalAUM:this.BNify(cachedData.totalAUM)\n      };\n    }\n\n    let avgAPR = this.BNify(0);\n    let avgAPY = this.BNify(0);\n    let totalAUM = this.BNify(0);\n    const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n    await this.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n      const isRisk = strategy === 'risk';\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n        const tokenConfig = availableTokens[token];\n        const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,addGovTokens);\n        const tokenAprs = await this.getTokenAprs(tokenConfig,tokenAllocation,addGovTokens);\n        if (tokenAllocation && tokenAllocation.totalAllocationWithUnlent && !tokenAllocation.totalAllocationWithUnlent.isNaN()){\n          const tokenAUM = await this.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent,token,tokenConfig,isRisk);\n          totalAUM = totalAUM.plus(tokenAUM);\n          // console.log(tokenConfig.idle.token+'V4',tokenAUM.toFixed());\n          if (tokenAprs && tokenAprs.avgApr && !tokenAprs.avgApr.isNaN()){\n            avgAPR = avgAPR.plus(tokenAUM.times(tokenAprs.avgApr));\n            avgAPY = avgAPY.plus(tokenAUM.times(tokenAprs.avgApy));\n          }\n        }\n\n        // Add Gov Tokens\n        const govTokens = this.getTokenGovTokens(tokenConfig);\n        if (govTokens){\n          await this.asyncForEach(Object.keys(govTokens).filter( govToken => (govTokens[govToken].showAUM) ), async (govToken) => {\n            const govTokenConfig = govTokens[govToken];\n            const [\n              tokenBalance,\n              tokenConversionRate\n            ] = await Promise.all([\n              this.getProtocolBalance(govToken,tokenConfig.idle.address),\n              this.getUniswapConversionRate(DAITokenConfig,govTokenConfig)\n            ]);\n            \n            if (tokenBalance && tokenConversionRate){\n              const tokenBalanceConverted = this.fixTokenDecimals(tokenBalance,govTokenConfig.decimals).times(this.BNify(tokenConversionRate));\n              if (tokenBalanceConverted && !tokenBalanceConverted.isNaN()){\n                // console.log(tokenConfig.idle.token+'V4 - COMP',tokenBalanceConverted.toFixed());\n                totalAUM = totalAUM.plus(tokenBalanceConverted);\n              }\n            }\n          });\n        }\n\n        // Get old token allocation\n        if (tokenConfig.migration && tokenConfig.migration.oldContract){\n          const oldTokenConfig = Object.assign({},tokenConfig);\n          oldTokenConfig.protocols = Object.values(tokenConfig.protocols);\n          oldTokenConfig.idle = Object.assign({},tokenConfig.migration.oldContract);\n\n          // Replace protocols with old protocols\n          if (oldTokenConfig.migration.oldProtocols){\n            oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n              const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n              if (foundProtocol){\n                const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                oldTokenConfig.protocols[protocolPos] = oldProtocol;\n              }\n            });\n          }\n\n          const oldTokenAllocation = await this.getTokenAllocation(oldTokenConfig,false,false);\n          if (oldTokenAllocation && oldTokenAllocation.totalAllocation && !oldTokenAllocation.totalAllocation.isNaN()){\n            const oldTokenTotalAllocation = await this.convertTokenBalance(oldTokenAllocation.totalAllocation,token,oldTokenConfig,isRisk);\n            totalAUM = totalAUM.plus(oldTokenTotalAllocation);\n            // console.log(oldTokenConfig.idle.name,oldTokenTotalAllocation.toFixed(5));\n          }\n        }\n      });\n    });\n\n    avgAPR = avgAPR.div(totalAUM);\n    avgAPY = avgAPY.div(totalAUM);\n\n    const output = {\n      avgAPR,\n      avgAPY,\n      totalAUM\n    };\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey,output);\n  }\n  getTokenApy = async (tokenConfig) => {\n    const tokenAprs = await this.getTokenAprs(tokenConfig);\n    if (tokenAprs && tokenAprs.avgApy !== null){\n      return tokenAprs.avgApy;\n    }\n    return null;\n  }\n  getTokensToMigrate = async (selectedStrategy=null) => {\n\n    if (!this.props.availableStrategies || !this.props.account){\n      return false;\n    }\n\n    const tokensToMigrate = {};\n\n    await this.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n      if (selectedStrategy && selectedStrategy !== strategy){\n        return;\n      }\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n        const tokenConfig = availableTokens[token];\n        const {\n          migrationEnabled,\n          oldContractBalanceFormatted\n        } = await this.checkMigration(tokenConfig,this.props.account);\n        \n        if (migrationEnabled){\n          const tokenKey = selectedStrategy ? token : tokenConfig.idle.token;\n          tokensToMigrate[tokenKey] = {\n            token,\n            strategy,\n            tokenConfig,\n            oldContractBalanceFormatted\n          }\n        }\n      });\n    });\n\n    return tokensToMigrate;\n  }\n  /*\n  Get protocols tokens balances\n  */\n  getProtocolsTokensBalances = async (protocol=null) => {\n    if (!this.props.account){\n      return false;\n    }\n    const tokenBalances = {};\n    const minTokenBalance = this.BNify(1).div(1e4);\n    const protocolsTokens = this.getGlobalConfig(['tools','tokenMigration','props','availableTokens']);\n    if (protocolsTokens){\n      await this.asyncForEach(Object.keys(protocolsTokens),async (token) => {\n        const tokenConfig = protocolsTokens[token];\n        if (protocol !== null && tokenConfig.protocol.toLowerCase() !== protocol.toLowerCase() ){\n          return;\n        }\n        let tokenContract = this.getContractByName(tokenConfig.token);\n        if (!tokenContract && tokenConfig.abi){\n          tokenContract = await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n        }\n        if (tokenContract){\n          const tokenBalance = await this.getTokenBalance(tokenConfig.token,this.props.account);\n          if (tokenBalance && tokenBalance.gte(minTokenBalance)){\n            tokenBalances[token] = {\n              tokenConfig,\n              balance:tokenBalance,\n            };\n          }\n        }\n      });\n    }\n\n    return tokenBalances;\n  }\n  /*\n  Convert token Balance\n  */\n  convertTokenBalance = async (tokenBalance,token,tokenConfig,isRisk=false) => {\n    // Check for USD conversion rate\n    tokenBalance = this.BNify(tokenBalance);\n    if (tokenBalance.gt(0)){\n      const tokenUsdConversionRate = await this.getTokenConversionRate(tokenConfig,isRisk);\n      if (tokenUsdConversionRate){\n        tokenBalance = tokenBalance.times(tokenUsdConversionRate);\n      }\n    }\n    return tokenBalance;\n  }\n\n  getAvgAPYStats = async (address,isRisk,startTimestamp=null,endTimestamp=null) => {\n\n    const apiResults = await this.getTokenApiData(address,isRisk,startTimestamp,endTimestamp,true,7200);\n\n    if (apiResults && apiResults.length){\n      const apr = apiResults.reduce( (sum,r) => {\n        const idleRate = this.fixTokenDecimals(r.idleRate,18);\n        return sum.plus(idleRate);\n      },this.BNify(0));\n\n      // Calculate average\n      return apr.div(apiResults.length);\n    }\n\n    return null;\n  }\n\n  /*\n  Get idleToken conversion rate\n  */\n  getTokenConversionRate = async (tokenConfig,isRisk,conversionRateField=null,count=0) => {\n\n    if (!conversionRateField){\n      conversionRateField = this.getGlobalConfig(['stats','tokens',tokenConfig.token,'conversionRateField']);\n      if (!conversionRateField){\n        return null;\n      }\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenConversionRate_${tokenConfig.address}_${isRisk}_${conversionRateField}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      // console.log('CACHED -',count,cachedDataKey,this.BNify(cachedData).toFixed());\n      return this.BNify(cachedData);\n    }\n\n    let tokenData = await this.getTokenApiData(tokenConfig.address,isRisk,null,null,false,null,'desc',1);\n\n    // console.log('TOKEN DATA - ',tokenConfig.address,isRisk,tokenData);\n\n    if (tokenData && tokenData.length){\n      tokenData = tokenData.pop();\n      if (tokenData && !this.BNify(tokenData[conversionRateField]).isNaN()){\n        const conversionRate = this.fixTokenDecimals(tokenData[conversionRateField],18);\n        if (!this.BNify(conversionRate).isNaN()){\n          // console.log('NOT CACHED -',count,cachedDataKey,this.BNify(conversionRate).toFixed());\n          return this.setCachedDataWithLocalStorage(cachedDataKey,conversionRate);\n        }\n      }\n    } else {\n      const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n      const conversionRate = await this.getUniswapConversionRate(DAITokenConfig,tokenConfig);\n      if (!this.BNify(conversionRate).isNaN()){\n        // console.log('NOT CACHED -',count,cachedDataKey,this.BNify(conversionRate).toFixed());\n        return this.setCachedDataWithLocalStorage(cachedDataKey,conversionRate);\n      }\n    }\n\n    if (count<3){\n      return await this.getTokenConversionRate(tokenConfig,isRisk,conversionRateField,count+1); \n    }\n\n    return null;\n  }\n\n  getTokenScore = async (tokenConfig,isRisk) => {\n    // Check for cached data\n    const cachedDataKey = `tokenScore_${tokenConfig.address}_${isRisk}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const apiInfo = globalConfigs.stats.rates;\n    const endpoint = `${apiInfo.endpoint}${tokenConfig.address}?isRisk=${isRisk}&limit=1&order=DESC`;\n    const [\n      tokenData,\n      tokenAllocation\n    ] = await Promise.all([\n      this.makeCachedRequest(endpoint,apiInfo.TTL,true),\n      this.getTokenAllocation(tokenConfig,false,false)\n    ]);\n\n    let tokenScore = this.BNify(0);\n\n    if (tokenData && tokenAllocation){\n      Object.keys(tokenAllocation.protocolsAllocationsPerc).forEach( protocolAddr => {\n        const protocolAllocationPerc = this.BNify(tokenAllocation.protocolsAllocationsPerc[protocolAddr]);\n        if (protocolAllocationPerc.gt(0.001) && tokenData.length>0){\n          const protocolInfo = tokenData[0].protocolsData.find( p => (p.protocolAddr.toLowerCase() === protocolAddr.toLowerCase()) );\n          if (protocolInfo){\n            const protocolScore = this.BNify(protocolInfo.defiScore);\n            if (!protocolScore.isNaN()){\n              tokenScore = tokenScore.plus(protocolScore.times(protocolAllocationPerc));\n              // this.customLog(protocolAddr,tokenAllocation.protocolsAllocationsPerc[protocolAddr].toFixed(6),protocolScore.toFixed(6),tokenScore.toFixed(6));\n            }\n          }\n        }\n      });\n    }\n\n    // Fallback\n    if (!tokenScore || tokenScore.isNaN() || tokenScore.lte(0)){\n      tokenScore = this.getTokenScoreApi(tokenConfig,isRisk);\n    }\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey,tokenScore);\n  }\n\n  /*\n  Get idleToken score\n  */\n  getTokenScoreApi = async (tokenConfig,isRisk) => {\n    // Check for cached data\n    const cachedDataKey = `tokenScoreApi_${tokenConfig.address}_${isRisk}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const apiInfo = globalConfigs.stats.scores;\n    const endpoint = `${apiInfo.endpoint}${tokenConfig.address}?isRisk=${isRisk}`;\n    let tokenData = await this.makeCachedRequest(endpoint,apiInfo.TTL,true);\n\n    if (tokenData){\n      let tokenScore = this.BNify(tokenData[0].idleScore);\n      if (tokenScore && tokenScore.gt(0)){\n        // Set cached data\n        return this.setCachedData(cachedDataKey,tokenScore);\n      // Take latest historical valid score\n      } else {\n        const timestamp = parseInt(Date.now()/1000);\n        const startTimestamp = parseInt(timestamp)-(60*60*24);\n        tokenData = await this.getTokenApiData(tokenConfig.address,isRisk,startTimestamp,null,true,null,'DESC');\n\n        const filteredTokenData = tokenData.filter( d => (this.BNify(d.idleScore).gt(0)) );\n        if (filteredTokenData.length){\n          tokenScore = this.BNify(filteredTokenData[0].idleScore);\n          if (!this.BNify(tokenScore).isNaN()){\n            return this.setCachedDataWithLocalStorage(cachedDataKey,tokenScore);\n          }\n        }\n      }\n    }\n\n    return null;\n  }\n  /*\n  Get idleTokens aggregated APR\n  */\n  getTokenAprs = async (tokenConfig,tokenAllocation=false,addGovTokens=true) => {\n\n    if (!tokenConfig.idle){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenAprs_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && (cachedData.avgApr && !this.BNify(cachedData.avgApr).isNaN()) && (cachedData.avgApy && !this.BNify(cachedData.avgApy).isNaN()) ){\n      return {\n        avgApr:this.BNify(cachedData.avgApr),\n        avgApy:this.BNify(cachedData.avgApy)\n      };\n    }\n\n    const Aprs = await this.getAprs(tokenConfig.idle.token);\n\n    if (!Aprs){\n      return false;\n    }\n\n    if (!tokenAllocation){\n      tokenAllocation = await this.getTokenAllocation(tokenConfig);\n    }\n\n    if (!tokenAllocation){\n      return false;\n    }\n\n    const addresses = Aprs.addresses.map((addr,i) => { return addr.toString().toLowerCase() });\n    const aprs = Aprs.aprs;\n\n    const protocolsAprs = {};\n    const protocolsApys = {};\n    let compAPR = null;\n\n    await this.asyncForEach(tokenConfig.protocols,async (protocolInfo,i) => {\n      const protocolAddr = protocolInfo.address.toString().toLowerCase();\n      const addrIndex = addresses.indexOf(protocolAddr);\n      if ( addrIndex !== -1 ) {\n        let protocolApr = this.BNify(+this.toEth(aprs[addrIndex]));\n        let protocolApy = this.apr2apy(protocolApr.div(100)).times(100);\n\n        if (addGovTokens && protocolInfo.name === 'compound'){\n          compAPR = await this.getCompAPR(tokenConfig.token,tokenConfig);\n        }\n\n        protocolsApys[protocolAddr] = protocolApy;\n        protocolsAprs[protocolAddr] = protocolApr;\n      }\n    });\n\n    const tokenAprs = {\n      avgApr: null,\n      avgApy: null\n    };\n\n    if (tokenAllocation){\n      tokenAprs.avgApr = this.getAvgApr(protocolsAprs,tokenAllocation.protocolsAllocations,tokenAllocation.totalAllocation);\n      tokenAprs.avgApy = this.getAvgApr(protocolsApys,tokenAllocation.protocolsAllocations,tokenAllocation.totalAllocation);\n\n      if (compAPR){\n        tokenAprs.avgApr = tokenAprs.avgApr.plus(compAPR);\n        tokenAprs.avgApy = tokenAprs.avgApy.plus(compAPR);\n      }\n\n      // Add $IDLE token APR\n      const idleGovTokenShowAPR = this.getGlobalConfig(['govTokens','IDLE','showAPR']);\n      const idleGovTokenEnabled = this.getGlobalConfig(['govTokens','IDLE','enabled']);\n      if (idleGovTokenEnabled && idleGovTokenShowAPR){\n        const idleGovToken = this.getIdleGovToken();\n        const idleAPR = await idleGovToken.getAPR(tokenConfig.token,tokenConfig);\n        if (idleAPR){\n          tokenAprs.avgApr = tokenAprs.avgApr.plus(idleAPR);\n          tokenAprs.avgApy = tokenAprs.avgApy.plus(idleAPR);\n        }\n      }\n      return this.setCachedDataWithLocalStorage(cachedDataKey,tokenAprs);\n    }\n\n    return null;\n  }\n  abbreviateNumber(value,decimals=3,maxPrecision=5,minPrecision=0){\n\n    const isNegative = parseFloat(value)<0;\n    let newValue = this.BNify(value).abs();\n    const suffixes = [\"\", \"K\", \"M\", \"B\",\"T\"];\n    let suffixNum = 0;\n    while (newValue.gte(1000)) {\n      newValue = newValue.div(1000);\n      suffixNum++;\n    }\n\n    maxPrecision = Math.max(1,maxPrecision);\n\n    // Prevent decimals on integer number\n    if (value>=1000){\n      const decimalPart = decimals ? newValue.mod(1).toFixed(maxPrecision).substr(2,decimals) : null;\n      newValue = parseInt(newValue).toString()+( decimalPart ? '.'+decimalPart : '' );\n    } else {\n      newValue = newValue.toFixed(decimals);\n    }\n\n    // Adjust number precision\n    if (newValue>=1 && (newValue.length-1)>maxPrecision){\n      newValue = parseFloat(newValue).toPrecision(maxPrecision);\n    } else if ((newValue.length-1)<minPrecision) {\n      const difference = minPrecision-(newValue.length-1);\n      const append = this.BNify(value).abs().toString().replace('.','').substr((newValue.length-1),difference);\n      newValue += append;\n    }\n\n    // Add minus if number is negative\n    if (isNegative){\n      newValue = '-'+newValue;\n    }\n\n    newValue += suffixes[suffixNum];\n\n    return newValue;\n  }\n  getFormattedBalance(balance,label,decimals,maxLen,highlightedDecimals){\n    const defaultValue = '-';\n    decimals = !isNaN(decimals) ? decimals : 6;\n    maxLen = !isNaN(maxLen) ? maxLen : 10;\n    highlightedDecimals = !isNaN(highlightedDecimals) ? highlightedDecimals : 0;\n    balance = parseFloat(this.BNify(balance)).toFixed(decimals);\n\n    const numLen = balance.toString().replace('.','').length;\n    if (numLen>maxLen){\n      decimals = Math.max(0,decimals-(numLen-maxLen));\n      balance = parseFloat(this.BNify(balance)).toFixed(decimals);\n    }\n\n    const intPart = Math.floor(balance);\n    let decPart = (balance%1).toPrecision(decimals).substr(2,decimals);;\n    decPart = (decPart+(\"0\".repeat(decimals))).substr(0,decimals);\n\n    if (highlightedDecimals){\n      const highlightedDec = decPart.substr(0,highlightedDecimals);\n      decPart = decPart.substr(highlightedDecimals);\n      const highlightedIntPart = (<Text.span fontSize={'100%'} color={'blue'} fontWeight={'inerith'}>{intPart}.{highlightedDec}</Text.span>);\n      return !isNaN(this.trimEth(balance)) ? ( <>{highlightedIntPart}<small style={{fontSize:'70%'}}>{decPart}</small> <Text.span fontSize={[1,2]}>{label}</Text.span></> ) : defaultValue;\n    } else {\n      return !isNaN(this.trimEth(balance)) ? ( <>{intPart}<small>.{decPart}</small>{ label !== '%' ? ' ' : null }{ label ? <Text.span fontSize={[1,2]}>{label}</Text.span> : null }</> ) : defaultValue;\n    }\n  }\n};\n\nexport default FunctionsUtil;","import React, { Component } from 'react';\nimport styles from './DashboardCard.module.scss';\nimport { Flex, Icon, Heading, Card, Tooltip } from \"rimble-ui\";\n\nclass DashboardCard extends Component {\n\n  state = {\n    mouseOver:false\n  }\n\n  setMouseOver(mouseOver){\n    this.setState({\n      mouseOver\n    });\n  }\n\n  render() {\n    const isDisabled = this.props.isDisabled;\n    const isActive = this.props.isActive && !isDisabled;\n    const isInteractive = this.props.isInteractive && !isDisabled;\n    const isVisible = typeof this.props.isVisible !== 'undefined' ? this.props.isVisible : true;\n    const isRainbow = typeof this.props.isRainbow !== 'undefined' ? this.props.isRainbow : false;\n\n    const cardProps = {\n      p:0,\n      border:1,\n      boxShadow:1,\n      borderRadius:2,\n      borderColor:null,\n      position:'relative',\n      minHeight:'initial',\n      backgroundColor:'cardBg'\n    };\n\n    if (isActive || (isInteractive && this.state.mouseOver)){\n      cardProps.border = 2;\n      cardProps.boxShadow = null;\n      cardProps.backgroundColor = 'cardBgHover';\n    }\n\n    // Replace props\n    if (this.props.cardProps && Object.keys(this.props.cardProps).length){\n      Object.keys(this.props.cardProps).forEach(p => {\n        cardProps[p] = this.props.cardProps[p];\n      });\n    }\n\n    const className = [\n      styles.defaultOpacity,\n      isActive ? styles.active : null,\n      !isVisible ? styles.hidden : null,\n      isRainbow ? styles.rainbow : null,\n      isDisabled ? styles.disabled : null,\n      isInteractive ? styles.interactive : null,\n    ];\n\n    if (this.props.className && styles[this.props.className]){\n      className.push(styles[this.props.className]);\n    }\n\n    return (\n      <Card\n        {...cardProps}\n        className={className}\n        onClick={this.props.handleClick}\n        onMouseOut={(e) => this.setMouseOver(false)}\n        onMouseOver={(e) => this.setMouseOver(true)}\n      >\n        {\n          this.props.title && this.props.title.length>0 &&\n            <Flex\n              mt={[3,4]}\n              ml={[3,4]}\n              alignItems={'center'}\n              flexDirection={'row'}\n              {...this.props.titleParentProps}\n            >\n              <Heading.h4\n                fontWeight={4}\n                fontSize={[2,3]}\n                textAlign={'left'}\n                color={'dark-gray'}\n                lineHeight={'initial'}\n                {...this.props.titleProps}\n              >\n                {this.props.title}\n              </Heading.h4>\n              {\n                this.props.description && this.props.description.length>0 &&\n                  <Tooltip\n                    placement={'top'}\n                    message={this.props.description}\n                  >\n                    <Icon\n                      ml={2}\n                      name={\"Info\"}\n                      size={'1em'}\n                      color={'cellTitle'}\n                    />\n                  </Tooltip>\n              }\n            </Flex>\n        }\n        {this.props.children}\n      </Card>\n    );\n  }\n}\n\nexport default DashboardCard;","import Footer from '../Footer/Footer';\nimport styles from './Tos.module.scss';\nimport React, { Component } from 'react';\nimport { Box, Flex, Text, Heading } from 'rimble-ui'\n\nclass Tos extends Component {\n  state = {};\n\n  render() {\n    return (\n      <Box>\n        <Box className={styles.headerContainer} pb={[3,5]} px={[3,6]} pt={['2em', '3em']}>\n          <Box className={styles.headerBgFiller}></Box>\n          <Box position={'relative'} zIndex={10}>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"60em\"]} mx={'auto'} pb={3} textAlign={'center'} pt={['8vh', '8vh']}>\n              <Heading.h1 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.2em'} fontSize={['2.5em',7]} textAlign={'center'} color={'white'}>\n                Terms of Service\n              </Heading.h1>\n              <Heading.h2 fontWeight={'400'} lineHeight={['1.4em', '2em']} fontSize={[2,3]} textAlign={'center'} color={'white'}>\n                Updated: November 28, 2019\n              </Heading.h2>\n            </Flex>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"70em\"]} mx={'auto'} textAlign={'center'}>\n              <Box className={styles.textContainer} alignItems={'center'} width={'100%'} minHeight={['auto','20em']} backgroundColor={'white'} color={'dark-gray'} p={[3,4]} boxShadow={'0 0 25px 5px rgba(102, 139, 255, 0.7)'} borderRadius={'15px'} style={{position:'relative'}}>\n                <Box id={'first-paragraph'} pb={3}>\n                  <Text pb={3}>\n                    These terms of service, together with any documents and additional terms they expressly incorporate by reference (collectively, these “Terms”), are entered into between Idle Labs Inc. (“Idle,” “we,” “us” and “our”) and you or the company or other legal entity you represent (“you” or “your”), and constitute a binding legal agreement.\n                  </Text>\n                  <Text pb={3}>\n                    Please read these Terms carefully, as these Terms govern your use of our Portal and our Services, and expressly cover your rights and obligations, and our disclaimers and limitations of legal liability, relating to such use. By accessing or using the Interface, you signify that you have read, understand, and agree to be bound by and to comply with these Terms, including the mandatory arbitration provision in Section 12. If you do not agree to these Terms, you must not access or use our Portal or the Services.\n                  </Text>\n                  <Text pb={3}>\n                    You must be able to form a legally binding contract online either on behalf of a company or as an individual. Accordingly, you represent that: (a) if you are agreeing to these Terms on behalf of a company or other legal entity, you have the legal authority to bind the company or other legal entity to these Terms; and (b) you are at least 18 years old (or the age of majority where you reside, whichever is older), can form a legally binding contract online, and have the full, right, power and authority to enter into and to comply with the obligations under these Terms.\n                  </Text>\n                  <Text pb={3}>\n                    In addition to the foregoing, you also represent and warrant that you are not a citizen or resident of a state, country, territory or other jurisdiction that is embargoed by the United States or where your use of the Portal or the Services would be illegal or otherwise violate any applicable law.  Specifically, you represent that you are not located in, organized in, or a resident of New York, Cuba, Iran, Syria, North Korea, the Crimea region, Venezuela, or any other jurisdiction where Applicable law prohibits you from accessing or using the Services; and you represent that you are not be named on the Office of Foreign Asset Control of the U.S. Department of the Treasury’s Specially Designated and Blocked Persons List.\n                   </Text>\n                  <Text>\n                    Please carefully review the disclosures and disclaimers set forth in Section 9 in their entirety before using any software developed by Idle. The information in Section 9 provides important details about the legal obligations associated with your use of the Idle open-source software. By accessing or using our Portal or our Services, you agree that Idle is a provider of open-source software that optimizes the allocation of your digital assets to third-party decentralized web protocols.  Idle is not affiliated with and has no control over these third-party protocols and is not responsible for any losses that occur as a result of interconnection with these third-party protocols. The Protocol is open-source software deployed on the Ethereum Blockchain.  While Idle developed and deployed the Protocol, the software operates in an autonomous fashion on a decentralized network and, as a result, Idle has no control over user transactions. You accordingly acknowledge that you use the Services at your own risk and agree that Idle will not be responsible for any losses that occur as a result of your use of the Services.\n                  </Text>\n                </Box>\n\n                <Box id={'key-definitions'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    1. KEY DEFINITIONS\n                  </Heading.h3>\n\n                  <Text py={2}>\n                    For the purpose of these Terms, the following capitalized terms shall have the following meanings:\n                  </Text>\n\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>1.1. “Affiliate”</strong> means, with respect to a party to these Terms, any legal entity that, directly or indirectly controls, is controlled by, or is under common control with such party.\n                    </li>\n                    <li>\n                      <strong>1.2. “Applicable Law”</strong> means any domestic or foreign law, rule, statute, regulation, by-law, order, protocol, code, decree, or other directive, requirement or guideline, published or in force which applies to or is otherwise intended to govern or regulate any person, property, transaction, activity, event or other matter, including any rule, order, judgment, directive or other requirement or guideline issued by any Governmental Authority having jurisdiction over Idle, you, the Portal or the Services, or as otherwise duly enacted, enforceable by law, the common law or equity.\n                    </li>\n                    <li>\n                      <strong>1.3. “Ether”</strong> means the Ethereum Blockchain utility token that may be used to purchase computational resources to run decentralized applications or perform actions on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.4. “Ethereum Address”</strong> means the unique public key digital asset identifier that points to an Ethereum-compatible wallet to which Ether may be sent or stored.\n                    </li>\n                    <li>\n                      <strong>1.5. “Ethereum Blockchain”</strong> means the underlying blockchain infrastructure which the Portal leverages to perform portions of the Services.\n                    </li>\n                    <li>\n                      <strong>1.6. “Governmental Authority”</strong> includes any domestic or foreign federal, provincial or state, municipal, local or other governmental, regulatory, judicial or administrative authority.\n                    </li>\n                    <li>\n                      <strong>1.7. “Portal”</strong> means the Idle site located at https://idle.finance and all associated sites linked thereto by Idle and its Affiliates, which includes, for certainty, Idle’s decentralized application layer on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.8. “Protocol”</strong> means the Idle decentralized web protocol, which optimizes the allocation of users’ digital assets to third-party decentralized web protocols.\n                    </li>\n                    <li>\n                      <strong>1.9. “Token”</strong> means an “ERC-20” digital asset issued on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.10. “Services”</strong> has the meaning set out in Section 3.1.\n                    </li>\n                    <li>\n                      <strong>1.11. “Third-Parties Services”</strong> means other services (such as fiat-to-token gateway, or token-to-token swap) provided by third parties services running on Ethereum Blockchain.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'modifications-terms'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    2. MODIFICATIONS TO THESE TERMS\n                  </Heading.h3>\n\n                  <Text py={2}>\n                    We reserve the right, in our sole discretion, to modify these Terms from time to time. If we make changes, we will provide you with notice of such changes, such as by sending an email, providing a notice through our Services or updating the date at the top of these Terms. Unless we say otherwise in our notice, any and all such modifications are effective immediately, and your continued use of our Services after we provide such notice will confirm your acceptance of the changes. If you do not agree to the amended Terms, you must stop using our Services.\n                  </Text>\n                </Box>\n\n                <Box id={'services'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    3. SERVICES\n                  </Heading.h3>\n                </Box>\n\n                <ul className={styles.list}>\n                  <li>\n                    <strong>3.1. Services</strong><br />\n                    The primary purpose of the Portal and Protocol is to enable users to interact with smart contracts that allocate their digital assets to third-party decentralized web protocols and enable users to receive an optimized allocation of digital assets from these protocols in return (the “Services”).\n                  </li>\n                  <li>\n                    <strong>3.2. Fees</strong><br />\n                    Use of the Services is provided to you at no charge. Fees are charged on-top of Third-Parties.\n                  </li>\n                  <li>\n                    <strong>3.3. Ethereum Gas Charges</strong><br />\n                    Some Services involve the use of the Ethereum Blockchain, which may require that you pay a fee, commonly known as “Ethereum Gas Charges,” for the computational resources required to perform a transaction on the Ethereum Blockchain. You acknowledge and agree that Idle has no control over: (a) any Ethereum Blockchain transactions; (b) the method of payment of any Ethereum Gas Charges; or (c) any actual payments of Ethereum Gas Charges. Accordingly, you must ensure that you have a sufficient balance of Ether stored at your Ethereum Address to complete any transaction on the Ethereum Blockchain before initiating such Ethereum Blockchain transaction. We will make reasonable efforts to notify you of any Ethereum Gas Charges before initiating any Services that require the use of the Ethereum Blockchain.\n                  </li>\n                  <li>\n                    <strong>3.4. Conditions and Restrictions</strong><br />\n                    We may, at any time and in our sole discretion, restrict your access to, or otherwise impose conditions or restrictions upon your use of, the Services or the Portal, with or without prior notice.\n                  </li>\n                  <li>\n                    <strong>3.5. No Broker, Legal or Fiduciary Relationship</strong><br />\n                    Idle is not your broker, lawyer, intermediary, agent, or advisor and has no fiduciary relationship or obligation to you regarding any other decisions or activities that you effect when using the Portal or the Services. Neither our communications nor any information that we provide to you is intended as, or shall be considered or construed as, advice.\n                  </li>\n                  <li>\n                    <strong>3.6. Your Responsibilities</strong><br />\n                    As a condition to accessing or using the Services or the Portal, you shall:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>only use the Services and the Portal for lawful purposes and in accordance with these Terms;</li>\n                      <li>ensure that, at all times, all information that you provide on the Portal is current, complete and accurate; and maintain the security and confidentiality of your Ethereum Address.</li>\n                      <li>shall be responsible for payment of all applicable taxes, if any, to which the Services might be subject and any and all other taxes which may apply to you.</li>\n                    </ul>\n                  </li>\n                  <li>\n                    <strong>3.7. Unacceptable Use or Conduct</strong><br />\n                    As a condition to accessing or using the Portal or the Services, you will not:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>violate any Applicable Law, including, without limitation, any relevant and applicable anti-money laundering and anti-terrorist financing laws, such as the Bank Secrecy Act, each as may be amended;</li>\n                      <li>infringe on or misappropriate any contract, intellectual property or other third-party right, or commit a tort while using the Portal or the Services;</li>\n                      <li>use the Services in any manner that could interfere with, disrupt, negatively affect, or inhibit other users from fully enjoying the Services, or that could damage, disable, overburden, or impair the functioning of the Services in any manner;</li>\n                      <li>attempt to circumvent any content filtering techniques or security measures that Idle employs on the Portal, or attempt to access any service or area of the Portal or the Services that you are not authorized to access;</li>\n                      <li>use the Services to pay for, support, or otherwise engage in any illegal gambling activities, fraud, money-laundering, or terrorist activities, or other illegal activities;</li>\n                      <li>use any robot, spider, crawler, scraper, or other automated means or interface not provided by us, to access the Services or to extract data;</li>\n                      <li>introduce any malware, virus, Trojan horse, worm, logic bomb, drop-dead device, backdoor, shutdown mechanism or other harmful material into the Portal or the Services;</li>\n                      <li>provide false, inaccurate, or misleading information;</li>\n                      <li>post content or communications on the Portal that are, in our sole discretion, libelous, defamatory, profane, obscene, pornographic, sexually explicit, indecent, lewd, vulgar, suggestive, harassing, hateful, threatening, offensive, discriminatory, bigoted, abusive, inflammatory, fraudulent, deceptive or otherwise objectionable;</li>\n                      <li>post content on the Portal containing unsolicited promotions, political campaigning, or commercial messages or any chain messages or user content designed to deceive or trick the user of the Service;</li>\n                      <li>use the Portal or the Services from a jurisdiction that we have, in our sole discretion, or a relevant Governmental Authority has determined is a jurisdiction where the use of the Portal or the Services is prohibited; or</li>\n                      <li>encourage or induce any third party to engage in any of the activities prohibited under this Section 3.7.</li>\n                    </ul>\n                  </li>\n\n                  <li>\n                    <strong>3.8. Your Assumption of Risks</strong><br />\n                    You represent and warrant that you:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>have the necessary technical expertise and ability to review and evaluate the security, integrity and operation of any transactions that you engage in through the Protocol;</li>\n                      <li>have the knowledge, experience, understanding, professional advice and information to make your own evaluation of the merits, risks and applicable compliance requirements under Applicable Law of engaging in transactions through the Protocol;</li>\n                      <li>acknowledge and understand that the Protocol allocates your digital assets to third-party decentralized web protocols to facilitate your lending and borrowing through these third-party protocols and that Idle is not responsible or liable for these transactions or the operation of these third-party protocols;</li>\n                      <li>know, understand and accept the risks associated with your Ethereum Address, the Ethereum Blockchain, Ether and Tokens; and</li>\n                      <li>accept the risks associated with lending, borrowing and trading Ether and Tokens, and are responsible for conducting your own independent analysis of the risks specific to any Ether and Tokens lent, borrowed or traded by you and your use of the Services.</li>\n                    </ul>\n                    You hereby assume, and agree that Idle will have no responsibility or liability for, such risks. You hereby irrevocably waive, release and discharge all claims, whether known or unknown to you, against Idle, its affiliates and their respective shareholders, members, directors, officers, employees, agents and representatives related to any of the risks set forth herein.\n                  </li>\n                  <li>\n                    <strong>3.9. Additional Representations</strong><br />\n                    You represent and warrant that you:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>are not using the Protocol to engage in the leveraged, margined, or financed purchase of digital assets; and</li>\n                      <li>are using the Protocol for the purpose of accessing third-party decentralized web protocols.</li>\n                    </ul>\n                  </li>\n                  <li>\n                    <strong>3.10. Your Content</strong><br />\n                    You hereby grant to us a royalty-free, fully paid-up, sublicensable, transferable, perpetual, irrevocable, non-exclusive, worldwide license to use, copy, modify, create derivative works of, display, perform, publish and distribute, in any form, medium or manner, any content that is available to other users via the Idle Platform as a result of your use of the Portal (collectively, “Your Content”) through your use of the Services or the Portal, including, without limitation, for promoting Idle (or its Affiliates), the Services or the Portal. You represent and warrant that: (a) you own Your Content or have the right to grant the rights and licenses in these Terms; and (b) Your Content and our use of Your Content, as licensed herein, does not and will not violate, misappropriate or infringe on any third party’s rights.\n                  </li>\n                </ul>\n\n                <Box id={'privacy-policy'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    4. PRIVACY POLICY\n                  </Heading.h3>\n                  <Text py={2}>\n                    Please refer to our privacy policy available at https://idle.finance/privacy-policy for information about how we collect, use, share and otherwise process information about you.\n                  </Text>\n                </Box>\n\n                <Box id={'proprietary-rights'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    5. PROPRIETARY RIGHTS\n                  </Heading.h3>\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>5.1. Ownership of Services; License to Services</strong><br />\n                      Excluding any open source software (as further described in Section 5.2) or third-party software that the Portal or the Services incorporates, as between you and Idle, Idle owns the Portal and the Services, including all technology, content and other materials used, displayed or provided on the Portal or in connection with the Services (including all intellectual property rights subsisting therein), and hereby grants you a limited, revocable, transferable, license to access and use those portions of the Portal and the Services that are proprietary to Idle.\n                    </li>\n                    <li>\n                      <strong>5.2. Idle License; Open Source Software License; Limitations</strong><br />\n                      The Portal and the Services are governed by the most recent version of the open source license commonly known as the Apache 2.0 a copy of which (as it applies to the Portal and the Services) can be found at:  https://apache.org/licenses/LICENSE-2.0 (as of the date these Terms were last updated) and any other applicable licensing terms for the Portal and the Services in these Terms (collectively, the “Idle License”). You acknowledge that the Portal or the Services may use, incorporate or link to certain open-source components and that your use of the Portal or Services is subject to, and you will comply with any, applicable open-source licenses that govern any such open-source components (collectively, “Open-Source Licenses”). Without limiting the generality of the foregoing, you may not: (a) resell, lease, lend, share, distribute or otherwise permit any third party to use the Portal or the Services; (b) use the Portal or the Services for time-sharing or service bureau purposes; or (c) otherwise use the Portal or the Services in a manner that violates the Idle License or any other Open-Source Licenses.\n                    </li>\n                    <li>\n                      <strong>5.3. Trademarks</strong><br />\n                      Any of Idle’s product or service names, logos, and other marks used in the Portal or as a part of the Services, including Idle's name and logo are trademarks owned by Idle, its Affiliates or its applicable licensors. You may not copy, imitate or use them without Idle’s (or the applicable licensor’s) prior written consent.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'changes-suspension-termination'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    6. CHANGES; SUSPENSION; TERMINATION\n                  </Heading.h3>\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>6.1. Changes to Services</strong><br />\n                      We may, at our sole discretion, from time to time and with or without prior notice to you, modify, suspend or disable, temporarily or permanently, the Services, in whole or in part, for any reason whatsoever, including, but not limited to, as a result of a security incident.\n                    </li>\n                    <li>\n                      <strong>6.2. No Liability</strong><br />\n                      We will not be liable for any losses suffered by you resulting from any modification to any Services or from any suspension or termination, for any reason, of your access to all or any portion of the Portal or the Services.\n                    </li>\n                    <li>\n                      <strong>6.3. Survival</strong><br />\n                      The following sections will survive any termination of your access to the Portal or the Services, regardless of the reasons for its expiration or termination, in addition to any other provision which by law or by its nature should survive: Sections 1, 4, 5, 6.3, and 7-14.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'electronic-notices'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    7. ELECTRONIC NOTICES\n                  </Heading.h3>\n                  <Text py={2}>\n                    You consent to receive all communications, agreements, documents, receipts, notices, and disclosures electronically (collectively, our “Communications”) that we provide in connection with these Terms or any Services. You agree that we may provide our Communications to you by posting them on the Portal or by emailing them to you at the email address you provide in connection with using the Services, if any. You should maintain copies of our Communications by printing a paper copy or saving an electronic copy. You may also contact our support team to request additional electronic copies of our Communications by filing a support request at info@idle.finance.\n                  </Text>\n                </Box>\n\n                <Box id={'indemnification'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    8. INDEMNIFICATION\n                  </Heading.h3>\n                  <Text py={2}>\n                    You will defend, indemnify, and hold harmless us, our Affiliates, and our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers and contractors (collectively, “Indemnified Parties”) from any claim, demand, lawsuit, action, proceeding, investigation, liability, damage, loss, cost or expense, including without limitation reasonable attorneys’ fees, arising out of or relating to (a) your use of, or conduct in connection with, the Portal, Services or Margin Tokens; (b) Ethereum Blockchain assets associated with your Ethereum Address; (c) any feedback or user content you provide to the Portal, if any; (d) your violation of these Terms; or (e) your infringement or misappropriation of the rights of any other person or entity. If you are obligated to indemnify any Indemnified Party, Idle (or, at its discretion, the applicable Indemnified Party) will have the right, in its sole discretion, to control any action or proceeding and to determine whether Idle wishes to settle, and if so, on what terms.\n                  </Text>\n                </Box>\n\n                <Box id={'disclosures-disclaimers'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    9. Disclosures; DISCLAIMERS\n                  </Heading.h3>\n                  <Text py={2}>\n                    Idle is a developer of open-source software. Idle does not operate a digital asset exchange platform or execute peer-to-peer transactions through its Protocol and therefore has no oversight, involvement, or control with respect to your transactions, which are executed through third-party protocols and the Ethereum Blockchain.  The Protocol is an autonomous decentralized web protocol deployed to the Ethereum Blockchain that operates in a disintermediated fashion, and, as such, Idle does not participate in any of these transactions.  In each instance, when you interact with the Protocol, you are interacting with a smart contract that transfers your digital assets to a third-party protocol.\n                  </Text>\n                  <Text py={2}>\n                    [Under U.S. federal law, unless you are an “eligible contract participant” as defined in 7 U.S.C. § 1a(18), your transaction must settle within 28 days. Individuals who do not have more than $10 million invested on a discretionary basis (or $5 million if the transaction is for the purpose of managing risk associated with an asset owned or liability incurred, or reasonably likely to be owned or incurred) are not eligible contract participants and may not enter into transactions using the Idle open-source software that do not result in actual delivery of digital assets within 28 days.]\n                  </Text>\n                  <Text py={2}>\n                    You are responsible for complying with all laws and regulations applicable to your transactions, including, but not limited to, the Commodity Exchange Act and the regulations promulgated thereunder by the U.S. Commodity Futures Trading Commission (“CFTC”), and the federal securities laws and the regulations promulgated thereunder by the U.S. Securities and Exchange Commission (“SEC”).\n                  </Text>\n                  <Text py={2}>\n                    You understand that Idle is not registered or licensed by the CFTC, SEC, the Financial Crimes Enforcement Network or any financial regulatory authority. No financial regulatory authority has reviewed or approved the use of the Idle open-source software. This website and the Idle open-source software do not constitute advice or a recommendation concerning any commodity, security or other asset. Idle is not acting as an investment adviser or commodity trading adviser to any person.\n                  </Text>\n                  <Text py={2}>\n                    Idle does not own or control the underlying software protocols that enable the Protocol to function. In general, the underlying protocols are open-source and anyone can use, copy, modify, and distribute them. Idle is not responsible for operation of the underlying protocols, and Idle makes no guarantee of their functionality, security, or availability.\n                  </Text>\n                  <Text py={2}>\n                    To the maximum extent permitted under Applicable Law, the Portal and the Services (and any of their content or functionality) provided by or on behalf of us are provided on an “AS IS” and “AS AVAILABLE” basis, and we expressly disclaim, and you hereby waive, any representations, conditions or warranties of any kind, whether express or implied, legal, statutory or otherwise, or arising from statute, otherwise in law, course of dealing, or usage of trade, including, without limitation, the implied or legal warranties and conditions of merchantability, merchantable quality, quality or fitness for a particular purpose, title, security, availability, reliability, accuracy, quiet enjoyment and non-infringement of third party rights. Without limiting the foregoing, we do not represent or warrant that the Portal or the Services (including any data relating thereto) will be uninterrupted, available at any particular time or error-free. Further, we do not warrant that errors in the Portal or the Service are correctable or will be correctable.\n                  </Text>\n                  <Text py={2}>\n                    You acknowledge that your data on the Portal may become irretrievably lost or corrupted or temporarily unavailable due to a variety of causes, and agree that, to the maximum extent permitted under Applicable Law, we will not be liable for any loss or damage caused by denial-of-service attacks, software failures, viruses or other technologically harmful materials (including those which may infect your computer equipment), protocol changes by third party providers, Internet outages, force majeure events or other disasters, scheduled or unscheduled maintenance, or other causes either within or outside our control.\n                  </Text>\n                  <Text py={2}>\n                    The disclaimer of implied warranties contained herein may not apply if and to the extent such warranties cannot be excluded or limited under the Applicable Law of the jurisdiction in which you reside.\n                  </Text>\n                </Box>\n\n                <Box id={'exclusion-consequential-related-damages'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    10. EXCLUSION OF CONSEQUENTIAL AND RELATED DAMAGES\n                  </Heading.h3>\n                  <Text py={2}>\n                    In no event shall we (together with our Affiliates, including our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers or contractors) be liable for any incidental, indirect, special, punitive, consequential or similar damages or liabilities whatsoever (including, without limitation, damages for loss of data, information, revenue, goodwill, profits or other business or financial benefit) arising out of or in connection with the Portal and the Services (and any of their content and functionality), any execution or settlement of a transaction, any performance or non-performance of the Services, your Ether, Margin Tokens or any other product, service or other item provided by or on behalf of us, whether under contract, tort (including negligence), civil liability, statute, strict liability, breach of warranties, or under any other theory of liability, and whether or not we have been advised of, knew of or should have known of the possibility of such damages and notwithstanding any failure of the essential purpose of these Terms or any limited remedy hereunder nor is Idle in any way responsible for the execution or settlement of transactions between users of Idle open-source software.\n                  </Text>\n                </Box>\n\n                <Box id={'exclusion-consequential-related-damages'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    11. LIMITATION OF LIABILITY\n                  </Heading.h3>\n                  <Text py={2}>\n                    In no event shall our aggregate liability (together with our Affiliates, including our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers or contractors) arising out of or in connection with the Portal and the Services (and any of their content and functionality), any performance or non-performance of the Services, your Ether, Margin Tokens or any other product, service or other item provided by or on behalf of us, whether under contract, tort (including negligence), civil liability, statute, strict liability or other theory of liability exceed the amount of fees paid by you to us under these Terms, if any, in the twelve (12) month period immediately preceding the event giving rise to the claim for liability.\n                  </Text>\n                </Box>\n\n                <Box id={'dispute-resolution-arbitration'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    12. DISPUTE RESOLUTION AND ARBITRATION\n                  </Heading.h3>\n                  <Text py={2}>\n                    Please read the following section carefully because it requires you to arbitrate certain disputes and claims with Idle and limits the manner in which you can seek relief from us, unless you opt out of arbitration by following the instructions set forth below. In addition, arbitration precludes you from suing in court or having a jury trial.\n                    You and Idle agree that any dispute arising out of or related to these Terms or our Services is personal to you and Idle and that any dispute will be resolved solely through individual action, and will not be brought as a class arbitration, class action or any other type of representative proceeding.\n                  </Text>\n                  <Text py={2}>\n                    Except for small claims disputes in which you or Idle seeks to bring an individual action in small claims court located in the county of your billing address or disputes in which you or Idle seeks injunctive or other equitable relief for the alleged unlawful use of intellectual property, you and Idle waive your rights to a jury trial and to have any dispute arising out of or related to these Terms or our Services resolved in court. Instead, for any dispute or claim that you have against Idle or relating in any way to the Services, you agree to first contact Idle and attempt to resolve the claim informally by sending a written notice of your claim (“Notice”) to Idle by email at info@idle.finance or by certified mail addressed to info@idle.finance. The Notice must (a) include your name, residence address, email address, and telephone number; (b) describe the nature and basis of the claim; (c) set forth the specific relief sought. Our notice to you will be similar in form to that described above. If you and Idle cannot reach an agreement to resolve the claim within thirty (30) days after such Notice is received, then either party may submit the dispute to binding arbitration administered by JAMS or, under the limited circumstances set forth above, in court. All disputes submitted to JAMS will be resolved through confidential, binding arbitration before one arbitrator. Arbitration proceedings will be held in New York City, New York, in accordance with the JAMS Streamlined Arbitration Rules and Procedures (“JAMS Rules”). The most recent version of the JAMS Rules are available on the JAMS website and are hereby incorporated by reference. You either acknowledge and agree that you have read and understand the JAMS Rules or waive your opportunity to read the JAMS Rules and waive any claim that the JAMS Rules are unfair or should not apply for any reason.\n                  </Text>\n                  <Text py={2}>\n                    You and Idle agree that these Terms affect interstate commerce and that the enforceability of this Section 12 will be substantively and procedurally governed by the Federal Arbitration Act, 9 U.S.C. § 1, et seq. (the “FAA”), to the maximum extent permitted by applicable law. As limited by the FAA, these Terms and the JAMS Rules, the arbitrator will have exclusive authority to make all procedural and substantive decisions regarding any dispute and to grant any remedy that would otherwise be available in court, including the power to determine the question of arbitrability. The arbitrator may conduct only an individual arbitration and may not consolidate more than one individual’s claims, preside over any type of class or representative proceeding or preside over any proceeding involving more than one individual.\n                  </Text>\n                  <Text py={2}>\n                    The arbitrator, Idle, and you will maintain the confidentiality of any arbitration proceedings, judgments and awards, including, but not limited to, all information gathered, prepared and presented for purposes of the arbitration or related to the dispute(s) therein. The arbitrator will have the authority to make appropriate rulings to safeguard confidentiality, unless the law provides to the contrary. The duty of confidentiality does not apply to the extent that disclosure is necessary to prepare for or conduct the arbitration hearing on the merits, in connection with a court application for a preliminary remedy or in connection with a judicial challenge to an arbitration award or its enforcement, or to the extent that disclosure is otherwise required by law or judicial decision.\n                  </Text>\n                  <Text py={2}>\n                    You and Idle agree that for any arbitration you initiate, you will pay the filing fee and Idle will pay the remaining JAMS fees and costs. For any arbitration initiated by Idle, Idle will pay all JAMS fees and costs. You and Idle agree that the state or federal courts of the State of New York and the United States sitting in New York City, New York have exclusive jurisdiction over any appeals and the enforcement of an arbitration award.\n                  </Text>\n                  <Text py={2}>\n                    Any claim arising out of or related to these Terms or our Services must be filed within one year after such claim arose; otherwise, the claim is permanently barred, which means that you and Idle will not have the right to assert the claim.\n                  </Text>\n                  <Text py={2}>\n                    You have the right to opt out of binding arbitration within 30 days of the date you first accepted the terms of this Section 12 by emailing us at info@idle.finance. In order to be effective, the opt-out notice must include your full name and address and clearly indicate your intent to opt out of binding arbitration. By opting out of binding arbitration, you are agreeing to resolve disputes in accordance with Section 13.\n                  </Text>\n                  <Text py={2}>\n                    If any portion of this Section 12 is found to be unenforceable or unlawful for any reason, (a) the unenforceable or unlawful provision shall be severed from these Terms; (b) severance of the unenforceable or unlawful provision shall have no impact whatsoever on the remainder of this Section 12 or the parties’ ability to compel arbitration of any remaining claims on an individual basis pursuant to this Section 12; and (c) to the extent that any claims must therefore proceed on a class, collective, consolidated, or representative basis, such claims must be litigated in a civil court of competent jurisdiction and not in arbitration, and the parties agree that litigation of those claims shall be stayed pending the outcome of any individual claims in arbitration. Further, if any part of this Section 12 is found to prohibit an individual claim seeking public injunctive relief, that provision will have no effect to the extent such relief is allowed to be sought out of arbitration, and the remainder of this Section 12 will be enforceable.\n                  </Text>\n                </Box>\n\n                <Box id={'governing-law'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    13. GOVERNING LAW\n                  </Heading.h3>\n                  <Text py={2}>\n                    The interpretation and enforcement of these Terms, and any dispute related to these Terms, the Portal or the Services, will be governed by and construed and enforced in accordance with the laws of the State of Delaware, as applicable, without regard to conflict of law rules or principles (whether of the State of Delaware or any other jurisdiction) that would cause the application of the laws of any other jurisdiction. You agree that we may initiate a proceeding related to the enforcement or validity of our intellectual property rights in any court having jurisdiction. With respect to any other proceeding that is not subject to arbitration under these Terms, the state and federal courts located in Wilmington, Delaware, will have exclusive jurisdiction. You waive any objection to venue in any such courts.\n                  </Text>\n                </Box>\n\n                <Box id={'miscellaneous'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    14. MISCELLANEOUS\n                  </Heading.h3>\n                  <Text py={2}>\n                    Any right or remedy of Idle set forth in these Terms is in addition to, and not in lieu of, any other right or remedy whether described in these Terms, under Applicable Law, at law or in equity. Our failure or delay in exercising any right, power, or privilege under these Terms shall not operate as a waiver thereof. The invalidity or unenforceability of any of these Terms shall not affect the validity or enforceability of any other of these Terms, all of which shall remain in full force and effect. We will have no responsibility or liability for any failure or delay in performance of the Portal or any of the Services, or any loss or damage that you may incur, due to any circumstance or event beyond our control, including without limitation any flood, extraordinary weather conditions, earthquake, or other act of God, fire, war, insurrection, riot, labor dispute, accident, action of government, communications, power failure, or equipment or software malfunction. You may not assign or transfer any right to use the Portal or the Services, or any of your rights or obligations under these Terms, without our express prior written consent, including by operation of law or in connection with any change of control. We may assign or transfer any or all of our rights or obligations under these Terms, in whole or in part, without notice or obtaining your consent or approval. Headings of sections are for convenience only and shall not be used to limit or construe such sections. These Terms contain the entire agreement and supersede all prior and contemporaneous understandings between the parties regarding the Portal and the Services. In the event of any conflict between these Terms and any other agreement you may have with us, these Terms will control unless the other agreement specifically identifies these Terms and declares that the other agreement supersedes these Terms.\n                  </Text>\n                </Box>\n\n              </Box>\n            </Flex>\n          </Box>\n        </Box>\n        <Footer />\n      </Box>\n    );\n  }\n}\n\nexport default Tos;\n","import baseColors, { blue, green, yellow, red } from \"./colors\";\nimport { tint, shade } from 'polished';\n\n// theme.js\nexport default {\n  breakpoints: ['52em', '64em'],\n  // breakpoints: ['40em', '52em', '64em', '80em'],\n  fontSizes: [12, 14, 16, 18, 21, 32, 38, 48, 54, 64, 72, 84],\n  fontWeights: [0, 300, 400, 600, 700, 800],\n  letterSpacings: [0, 1, 2, 4, 8],\n  lineHeights: {\n    solid: 1,\n    title: 1.25,\n    copy: 1.5,\n  },\n  fonts: {\n    serif: '\"georgia regular\", athelas, times, serif',\n    sansSerif: '\"Inter\", -apple-system, sans-serif',\n    counter: '\"Roboto Mono\", Arial, -apple-system, sans-serif'\n  },\n  space: [0, 4, 8, 16, 32, 64, 128, 256],\n  radii: ['0', '4px', '8px', '16px', '2rem'],\n  width: [0, 16, 32, 64, 128, 256],\n  minWidths: [0, 16, 32, 64, 128, 256],\n  maxWidths: [0, 16, 32, 64, 128, 256, 512, 768, 1024, 1536],\n  heights: [0, 16, 32, 64, 128, 256],\n  minHeights: [0, 16, 32, 64, 128, 256],\n  maxHeights: [0, 16, 32, 64, 128, 256],\n  borders: [0, '1px solid #0d2034','1px solid #475d7c'],\n  borderWidths: ['0', '1px', '2px', '4px'],\n  shadows: [\n    '0',\n    '0px 2px 4px rgba(0, 0, 0, 0.1)',\n    '0 7px 14px rgba(50,50,93,.1)',\n    '1px 1px 0px rgba(0,0,0,0.2)',\n    '0px 0px 16px 2px rgb(71,93,123,0.6)'\n  ],\n  opacity: {\n    disabled: 0.4,\n  },\n  colors: {\n    primary: '#fcfcfc',\n    'gradient-bg': 'linear-gradient(120deg, #f6d365 0%, #ea0d73 100%)',\n    'primary-light': blue.light[1],\n    'primary-dark': blue.dark[1],\n    bgBlue: '#0030e0',\n    blue: '#0036ff',\n    'dark-blue': '#00219a',\n    skyBlue: '#00abfe',\n    lightBlue: '#79f4e1',\n    copyColor: '#fcfcfc',\n    subColor: '#a7a7a7',\n    black: baseColors.black,\n    'near-black': '#1e3657',\n    'dark-gray': '#fcfcfc',\n    'mid-gray': '#999',\n    gray: ' #e0e0e0',\n    grey: '#CCC',\n    silver: '#999',\n    'light-silver': '#aaa',\n    'moon-gray': '#ccc',\n    'light-gray': '#eee',\n    'near-white': '#a4aec6',\n    white: '#fff',\n    transparent: 'transparent',\n    /*\n    NEW COLORS\n    */\n    arrowActive:'#d8d8d8',\n    arrowInactive:'#4f4f4f',\n    selectBgFocused:'#1e3657',\n    selectBg:'#162e4d',\n    backButtonBg:'#162e4d',\n    lineChartStroke:'#a4aec6',\n    dashboardBg: '#13273f',\n    statValue: '#a4aec6',\n    boxBorder: '#eeeeee',\n    cellTitle: '#a4aec6',\n    cellText: '#a4aec6',\n    divider: '#a4aec6',\n    counter: '#a4aec6',\n    redeem: '#00a9fe',\n    deposit: '#0239ff',\n    migrate: '#00a9fe',\n    legend: '#c9c9c9',\n    cardBg:'#162e4d',\n    menuBg:'#162e4d',\n    menuHover:'#1e3657',\n    flashColor:'#bac5ff',\n    cardBgHover:'#1e3657',\n    cardBorder:'#0d2034',\n    menuRightBorder:'#0d2034',\n    cardHoverShadow:'0px 0px 0px 1px rgb(45 74 114)',\n    transactions:{\n      action:{\n        send:'#10a0dd',\n        swap:'#3d53c0',\n        boost:'#ffff00',\n        redeem:'#10a0dd',\n        swapout:'#10a0dd',\n        deposit:'#3d53c0',\n        curvein:'#10a0dd',\n        receive:'#3d53c0',\n        migrate:'#3d53c0',\n        default:'#4f4f4f',\n        curveout:'#3d53c0',\n        withdraw:'#10a0dd',\n        curvedepositin:'#10a0dd',\n        curvedepositout:'#3d53c0'\n      },\n      actionBg:{\n        send:'#ceeff6',\n        swap:'#ced6ff',\n        boost:'#ff7979',\n        redeem:'#ceeff6',\n        swapout:'#ceeff6',\n        deposit:'#ced6ff',\n        curvein:'#ceeff6',\n        default:'#dadada',\n        receive:'#ced6ff',\n        migrate:'#ced6ff',\n        withdraw:'#ceeff6',\n        curveout:'#ced6ff',\n        curvedepositin:'#ceeff6',\n        curvedepositout:'#ced6ff'\n      },\n      status:{\n        completed:'#00b84a',\n        pending:'#a5a5a5',\n        failed:'#fa0000'\n      }\n    },\n    blacks: [\n      'rgba(0,0,0,.0125)',\n      'rgba(0,0,0,.025)',\n      'rgba(0,0,0,.05)',\n      'rgba(0,0,0,.1)',\n      'rgba(0,0,0,.2)',\n      'rgba(0,0,0,.3)',\n      'rgba(0,0,0,.4)',\n      'rgba(0,0,0,.5)',\n      'rgba(0,0,0,.6)',\n      'rgba(0,0,0,.7)',\n      'rgba(0,0,0,.8)',\n      'rgba(0,0,0,.9)',\n    ],\n    whites: [\n      'rgba(255,255,255,.0125)',\n      'rgba(255,255,255,.025)',\n      'rgba(255,255,255,.05)',\n      'rgba(255,255,255,.1)',\n      'rgba(255,255,255,.2)',\n      'rgba(255,255,255,.3)',\n      'rgba(255,255,255,.4)',\n      'rgba(255,255,255,.5)',\n      'rgba(255,255,255,.6)',\n      'rgba(255,255,255,.7)',\n      'rgba(255,255,255,.8)',\n      'rgba(255,255,255,.9)',\n    ],\n  },\n  zIndices: [0, 9, 99, 999, 9999],\n  messageStyle: {\n    base: {\n      color: '#fcfcfc',\n      borderColor: '#0d2034',\n      backgroundColor: '#162e4d',\n    },\n    success: {\n      color: shade(0.4, green.base),\n      backgroundColor: tint(0.9, green.base),\n      borderColor: green.base,\n    },\n    warning: {\n      color: shade(0.4, yellow.base),\n      backgroundColor: tint(0.9, yellow.base),\n      borderColor: yellow.base,\n    },\n    danger: {\n      color: shade(0.4, red.base),\n      backgroundColor: tint(0.9, red.base),\n      borderColor: red.base,\n    },\n    info: {\n      color: '#fcfcfc',\n      borderColor: '#0d2034',\n      backgroundColor: '#162e4d',\n    },\n  },\n  buttons: {\n    primary: {\n      color: blue.text,\n      backgroundColor: blue.base,\n      // use css custom props\n      '--main-color': blue.base,\n      '--contrast-color': blue.text,\n    },\n    normal: {\n      color: baseColors.black,\n      '--contrast-color': baseColors.black,\n    },\n    success: {\n      '--main-color': green.base,\n      '--contrast-color': green.text,\n    },\n    danger: {\n      '--main-color': red.base,\n      '--contrast-color': red.text,\n    },\n  },\n  buttonSizes: {\n    small: {\n      fontSize: '0.75rem',\n      height: '2rem',\n      minWidth: '2rem',\n      padding: '0 1rem',\n    },\n    medium: {\n      fontSize: '1rem',\n      height: '3rem',\n      minWidth: '3rem',\n    },\n    large: {\n      fontSize: '1.5rem',\n      height: '4rem',\n      minWidth: '4rem',\n      borderRadius: '2rem'\n    },\n  },\n};\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class TorusConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: Torus, initParams, ...rest } = kwargs;\n    super(rest);\n\n    this.torus = null;\n    this.Torus = Torus;\n    this.initParams = initParams;\n  }\n\n  async onActivation() {\n    if (!this.torus) {\n      this.torus = new this.Torus({\n        buttonPosition: \"bottom-right\" // default: bottom-left\n      });\n    }\n    await this.torus.init();\n    await this.torus.login();\n  }\n\n  async getProvider(){\n    return new Promise( async (resolve, reject) => {\n      resolve(this.torus.provider);\n    });\n  }\n\n  async getAccount(provider) {\n    const userInfo = await this.torus.getUserInfo();\n    if (userInfo){\n      return await this.torus.getPublicAddress({\n        verifier:userInfo.verifier,\n        verifierId:userInfo.verifierId\n      });\n    }\n    return null;\n  }\n\n  async onDeactivation() {\n    await this.torus.logout();\n  }\n\n  changeNetwork(network) {\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class AuthereumConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: Authereum, network, ...rest } = kwargs;\n    super(rest);\n\n    this.authereum = null;\n    this.Authereum = Authereum;\n    this.network = network;\n  }\n\n  async onActivation() {\n    if (!this.authereum) {\n      this.authereum = new this.Authereum(this.network);\n    }\n    const provider = await this.getProvider();\n    if (provider){\n      await provider.enable();\n      return provider;\n    }\n  }\n\n  async getProvider(){\n    return new Promise( async (resolve, reject) => {\n      resolve(this.authereum.getProvider());\n    });\n  }\n\n  async getAccount(provider) {\n    if (provider){\n      const accounts = await provider.getAccounts();\n      if (accounts && accounts.length){\n        return accounts[0];\n      }\n    }\n    return null;\n  }\n\n  async disable() {\n    const provider = await this.getProvider();\n    if (provider){\n      await provider.disable();\n      return provider;\n    }\n  }\n\n  changeNetwork(network) {\n    this.constructor({\n      api: this.Authereum,\n      network\n    })\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class WalletLinkConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: WalletLink, appName, infuraUrl, chainId, appLogoUrl, ...rest } = kwargs;\n    super(rest);\n\n    this.provider = null;\n    this.walletLink = null;\n    this.appName = appName;\n    this.chainId = chainId;\n    this.infuraUrl = infuraUrl;\n    this.appLogoUrl = appLogoUrl;\n    this.WalletLink = WalletLink;\n  }\n\n  async onActivation() {\n    if (!this.walletLink){\n      this.walletLink = new this.WalletLink({\n        darkMode: false,\n        appName: this.appName,\n        infuraUrl: this.infuraUrl,\n        appLogoUrl: this.appLogoUrl,\n      });\n    }\n\n    const provider = this.getProvider();\n    if (provider){\n      await provider.enable();\n      return provider;\n    }\n  }\n\n  getProvider(){\n    if (!this.provider){\n      this.provider = this.walletLink.makeWeb3Provider(this.infuraUrl, this.chainId);\n    }\n    return this.provider;\n  }\n\n  async getAccount(provider) {\n    if (provider){\n      // Use eth_RequestAccounts\n      const accounts = await provider.send('eth_requestAccounts');\n      if (accounts && accounts.length){\n        return accounts[0];\n      }\n    }\n    return null;\n  }\n\n  async disable() {\n    const provider = this.getProvider();\n    if (provider){\n      await provider.close();\n      return provider;\n    }\n  }\n\n  changeNetwork(network) {\n    this.constructor({\n      network,\n      api: this.WalletLink,\n      appName: this.appName,\n      chainId: this.chainId,\n      infuraUrl: this.infuraUrl,\n      appLogoUrl: this.appLogoUrl,\n    })\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class WalletConnectConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: WalletConnectProvider, defaultNetwork, infuraId, ...rest } = kwargs;\n    super(rest);\n\n    this.provider = null;\n    this.WalletConnectProvider = WalletConnectProvider;\n    this.infuraId = infuraId;\n  }\n\n  async onActivation() {\n    if (!this.provider) {\n      this.provider = new this.WalletConnectProvider({\n        infuraId:this.infuraId\n      });\n    }\n\n    // console.log('onActivation',this.provider);\n\n    if (this.provider){\n\n      await this.provider.enable();\n\n      /*\n      // Subscribe to accounts change\n      this.provider.on(\"accountsChanged\", (accounts) => {\n        console.log('accountsChanged',accounts);\n      });\n\n      // Subscribe to chainId change\n      this.provider.on(\"chainChanged\", (chainId) => {\n        console.log('chainChanged',chainId);\n      });\n\n      // Subscribe to networkId change\n      this.provider.on(\"networkChanged\", (networkId) => {\n        console.log('networkChanged',networkId);\n      });\n\n      // Subscribe to session connection/open\n      this.provider.on(\"open\", () => {\n        console.log('open');\n      });\n\n      // Subscribe to session disconnection/close\n      this.provider.on(\"close\", (code, reason) => {\n        console.log('close',code, reason);\n      });\n      */\n\n      return this.provider;\n    }\n  }\n\n  async getProvider(){\n    return this.provider;\n  }\n\n  async disable() {\n    if (this.provider){\n      this.provider.close();\n      return this.provider;\n    }\n  }\n}\n","import WalletLink from 'walletlink';\nimport AuthereumApi from 'authereum';\nimport PortisApi from \"@portis/web3\";\nimport FortmaticApi from \"fortmatic\";\nimport TrezorApi from \"trezor-connect\";\nimport { Connectors } from \"web3-react\";\nimport TorusApi from '@toruslabs/torus-embed';\nimport globalConfigs from '../configs/globalConfigs';\nimport TorusConnector from './connectors/TorusConnector';\nimport AuthereumConnector from './connectors/AuthereumConnector';\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport WalletLinkConnector from './connectors/WalletLinkConnector';\nimport WalletConnectConnector from './connectors/WalletConnectConnector';\n\nconst {\n  InjectedConnector,\n  NetworkOnlyConnector,\n  TrezorConnector,\n  LedgerConnector,\n  FortmaticConnector,\n  PortisConnector\n} = Connectors;\n\nconst env = process.env;\n\nconst manifestEmail = env.REACT_APP_TREZOR_MANIFEST_EMAIL; // trezor\nconst manifestAppUrl = env.REACT_APP_TREZOR_MANIFEST_URL; // trezor\nconst defaultNetwork = globalConfigs.network.requiredNetwork;\nconst fortmaticApiKey = env.REACT_APP_FORTMATIC_KEY_MAINNET;\nconst portisDAppId = env.REACT_APP_PORTIS_DAPP_ID;\nconst portisNetwork = env.REACT_APP_PORTIS_NETWORK;\n\nconst supportedNetworkURLs = {};\n  \nObject.keys(globalConfigs.network.providers.infura).forEach((networkId,index) => {\n  supportedNetworkURLs[networkId] = globalConfigs.network.providers.infura[networkId]+env.REACT_APP_INFURA_KEY;\n});\n\nconst Injected = new InjectedConnector({\n  supportedNetworks: [defaultNetwork]\n});\n\nconst Infura = new NetworkOnlyConnector({\n  providerURL: globalConfigs.network.providers.infura[defaultNetwork]+env.REACT_APP_INFURA_KEY\n});\n\n\nconst Trezor = new TrezorConnector({\n  api: TrezorApi,\n  supportedNetworkURLs,\n  defaultNetwork,\n  manifestEmail,\n  manifestAppUrl\n});\n\nconst Ledger = new LedgerConnector({\n  supportedNetworkURLs,\n  defaultNetwork\n});\n\nconst WalletConnect = new WalletConnectConnector({\n  defaultNetwork,\n  supportedNetworkURLs,\n  api: WalletConnectProvider,\n  infuraId:env.REACT_APP_INFURA_KEY,\n  bridge: \"https://bridge.walletconnect.org\",\n});\n\nconst Fortmatic = new FortmaticConnector({\n  api: FortmaticApi,\n  apiKey: fortmaticApiKey,\n  logoutOnDeactivation: false\n});\n\nconst Portis = new PortisConnector({\n  api: PortisApi,\n  dAppId: portisDAppId,\n  network: portisNetwork\n});\n\nconst Authereum = new AuthereumConnector({\n  api: AuthereumApi,\n  network: globalConfigs.network.availableNetworks[defaultNetwork].toLowerCase()\n});\n\nconst walletLink = new WalletLinkConnector({\n  api: WalletLink,\n  darkMode: false,\n  chainId: defaultNetwork,\n  appName: globalConfigs.appName,\n  infuraUrl: supportedNetworkURLs[defaultNetwork],\n  appLogoUrl: 'https://idle.finance/images/idle-mark.png',\n});\n\nconst Torus = new TorusConnector({\n  api: TorusApi,\n  initParams:{\n    buildEnv: 'production', // default: production\n    enableLogging: false, // default: false\n    network: {\n      host: globalConfigs.network.availableNetworks[defaultNetwork].toLowerCase(), // default: mainnet\n      chainId: defaultNetwork, // default: 1\n      networkName: globalConfigs.network.availableNetworks[defaultNetwork].toLowerCase() // default: Main Ethereum Network\n    },\n    showTorusButton: false // default: true\n  }\n});\n\nexport default {\n  Injected,\n  Infura,\n  WalletConnect,\n  walletLink,\n  Fortmatic,\n  Portis,\n  Authereum,\n  Torus,\n  Trezor,\n  Ledger,\n};","import React from \"react\";\nimport { Box, Flex, Text, Icon } from \"rimble-ui\";\n\nclass WrongNetworkBanner extends React.Component {\n  render() {\n    const bannerStyle = {\n      position: \"fixed\",\n      bottom: 0,\n      left: 0,\n      right: 0,\n      width: \"100%\",\n      backgroundColor: \"white\",\n      zIndex: 9999\n    };\n\n    return (\n      <Box style={bannerStyle} p={3}>\n        <Flex alignItems={\"center\"}>\n          <Box p={4}>\n            <Icon name=\"Warning\" color=\"gold\" size=\"30\" />\n          </Box>\n          <Flex flexDirection={\"column\"}>\n            <Text fontWeight={\"bold\"}>\n              Looks like you're on the wrong network\n            </Text>\n            <Text>\n              You should be on the {this.props.network.required.name} Ethereum\n              network. You are currently connected to the{\" \"}\n              <Text.span style={{ textTransform: \"capitalize\" }}>\n                {this.props.network.current.name}\n              </Text.span>{\" \"}\n              Network - please switch to the correct network.\n            </Text>\n          </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default WrongNetworkBanner;\n","import React from \"react\";\n\nimport WrongNetworkBanner from \"./components/WrongNetworkBanner\";\n\nclass NetworkUtil extends React.Component {\n  render() {\n    return (\n      <div>\n        { this.props.network.isCorrectNetwork === false && this.props.web3\n          ?\n            <WrongNetworkBanner\n              network={this.props.network}\n            />\n          :\n            null\n        }\n      </div>\n    );\n  }\n}\n\nexport default NetworkUtil;\n","import React from \"react\";\nimport { Box, Heading, Text, Modal, Link } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport RimbleUtil from \"@rimble/utils\";\n\nclass NoWeb3BrowserModal extends React.Component {\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2\n          fontSize={4}\n          fontWeight={3}\n          lineHeight={\"1.375em\"}\n          my={3}\n        >\n          Switch browsers to use the Idle App\n        </Heading.h2>\n\n        {RimbleUtil.isMobileDevice() ? (\n          <Text my={4}>\n            You can't use our blockchain features, like increasing the count\n            value, in this browser. We recommend using{\" \"}\n            <Link\n              href=\"https://status.im/\"\n              title=\"status.im website\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Status\n            </Link>\n            ,{\" \"}\n            <Link\n              href=\"https://www.cipherbrowser.com/\"\n              title=\"Cipher Wallet\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Cipher\n            </Link>{\" \"}\n            or{\" \"}\n            <Link\n              href=\"https://wallet.coinbase.com/\"\n              title=\"Coinbase Wallet\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Coinbase wallet\n            </Link>{\" \"}\n            browsers.\n          </Text>\n        ) : (\n          <Box>\n            <Text my={4}>\n              You can't use our blockchain features, like increasing the\n              count value, in this browser. Switch to{\" \"}\n              <Link\n                href=\"https://brave.com/download/\"\n                title=\"Download Brave browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Brave\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.mozilla.org/\"\n                title=\"Download FireFox browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                FireFox\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.opera.com/download\"\n                title=\"Download Opera Browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Opera\n              </Link>\n              , or{\" \"}\n              <Link\n                href=\"https://www.google.com/chrome/\"\n                title=\"Download Chrome browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Chrome\n              </Link>{\" \"}\n              to continue.\n            </Text>\n\n            <Text>\n              <Text.span bold>Rather use your phone?</Text.span> You can use\n              the Idle App in mobile browser wallets like{\" \"}\n              <Link\n                href=\"https://status.im/\"\n                title=\"status.im website\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Status\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.cipherbrowser.com/\"\n                title=\"Cipher Wallet\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Cipher\n              </Link>{\" \"}\n              or{\" \"}\n              <Link\n                href=\"https://wallet.coinbase.com/\"\n                title=\"Coinbase Wallet\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Coinbase wallet\n              </Link>\n              .\n            </Text>\n          </Box>\n        )}\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default NoWeb3BrowserModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Flex,\n  Icon,\n  Modal,\n  Link,\n  Button\n} from \"rimble-ui\";\n\nclass NoWalletModal extends React.Component {\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card p={5} maxWidth={\"600px\"}>\n          <Button.Text\n            icononly\n            icon={\"Close\"}\n            color={\"moon-gray\"}\n            position={\"absolute\"}\n            top={0}\n            right={0}\n            mt={3}\n            mr={3}\n            onClick={this.props.closeModal}\n          />\n\n          <Flex flexDirection={\"column\"} justifyContent={\"space-between\"}>\n            <Flex justifyContent={\"center\"} my={4}>\n              <Icon name=\"Warning\" color=\"gold\" size=\"40\" />\n            </Flex>\n\n            <Heading.h2 my={3}>No Wallet Available</Heading.h2>\n\n            <Text my={4}>\n              Your current browser does not have a blockchain connected wallet.\n              Try using MetaMask, Fortmatic, Portis.\n            </Text>\n\n            <Link\n              href=\"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              <Button.Outline size=\"small\">Get MetaMask Extension</Button.Outline>\n            </Link>\n          </Flex>\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default NoWalletModal;\n","// Checks for MetaMask\nconst GeneralUtil = {\n  hasMetaMask: () => {\n    let hasMetaMask = false;\n\n    if (typeof window.ethereum !== \"undefined\") {\n      hasMetaMask = typeof window.ethereum.isMetaMask !== \"undefined\";\n    } else if (typeof window.web3 !== 'undefined') {\n      hasMetaMask = typeof window.web3.currentProvider.isMetaMask !== 'undefined' && window.web3.currentProvider.isMetaMask;\n    }\n\n    return hasMetaMask;\n  },\n  isTrustWallet: () => {\n    if (typeof window.web3 !== \"undefined\" && typeof window.web3.currentProvider !== 'undefined'){\n      return typeof window.web3.currentProvider.isTrust !== 'undefined' && window.web3.currentProvider.isTrust;\n    }\n    return false;\n  },\n  isCoinbaseWallet: () => {\n    if (typeof window.web3 !== \"undefined\" && typeof window.web3.currentProvider !== 'undefined'){\n      return typeof window.web3.currentProvider.isCoinbaseWallet !== 'undefined' && window.web3.currentProvider.isCoinbaseWallet;\n    }\n    return false;\n  },\n  hasDapper: () => {\n    let hasDapper = typeof window.DapperEthereum !== 'undefined';\n\n    if (typeof window.ethereum !== \"undefined\") {\n      hasDapper = typeof window.ethereum.isDapper !== \"undefined\" && window.ethereum.isDapper;\n    }\n\n    return hasDapper;\n  },\n  isOpera: () => {\n    return /Opera|OPR\\//.test(navigator.userAgent);\n  },\n  // Current device is Android\n  isAndroid: () => {\n    const isAndroid = /android/i.test(navigator.userAgent) ? true : false;\n\n    return isAndroid;\n  },\n  // Current device is iOS\n  isIos() {\n    const isIos =\n      /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream\n        ? true\n        : false;\n\n    return isIos;\n  }\n};\n\nexport default GeneralUtil;\n","import React from \"react\";\nimport {\n  Heading,\n  Text,\n  Flex,\n  Modal,\n  Button,\n  Box,\n  Loader\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport GeneralUtil from \"../GeneralUtil\";\nimport RimbleUtils from \"@rimble/utils\";\n\nclass WrongNetworkModal extends React.Component {\n  renderContent = () => {\n    return (\n      <ModalCard.Body>\n        <Heading.h2 my={3}>\n          Switch to the {this.props.network.required.name} network in{\" \"}\n          {GeneralUtil.hasMetaMask() ? `MetaMask` : `Settings`}\n        </Heading.h2>\n\n        <Text my={4}>\n          The Idle App only works on the{\" \"}\n          <Text.span style={{ textTransform: \"capitalize\" }}>\n            {this.props.network.required.name}\n          </Text.span>{\" \"}\n          network. You’re currently on the{\" \"}\n          <Text.span style={{ textTransform: \"capitalize\" }}>\n            {\" \"}\n            {this.props.network.current.name}\n          </Text.span>{\" \"}\n          network.\n        </Text>\n\n        {GeneralUtil.hasMetaMask() && !RimbleUtils.isMobileDevice() ? (\n          <Box bg={\"#f6f6fc\"} p={3} display={[\"none\", \"block\"]}>\n            <Flex alignItems={\"center\"}>\n              <Box position={\"relative\"} width={\"4em\"}>\n                <Box>\n                  <Loader size={\"3em\"} />\n                </Box>\n              </Box>\n              <Box>\n                <Text fontWeight={4}>Waiting for the right network...</Text>\n                <Text fontWeight={2}>\n                  Go to your Wallet and to switch\n                </Text>\n              </Box>\n            </Flex>\n          </Box>\n        ) : null}\n\n        <Box display={[\"block\", \"none\"]}>\n          <Button onClick={this.props.closeModal} width={1}>\n            OK\n          </Button>\n        </Box>\n      </ModalCard.Body>\n    )\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <React.Fragment>\n            {this.renderContent()}\n          </React.Fragment>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default WrongNetworkModal;\n","import React from \"react\";\nimport { Heading, Text, Box, Flex, Icon } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\n\nfunction TransactionFeeModal(props) {\n  return (\n    <Box>\n      <ModalCard.Header title={'Transaction fees, what are you paying for?'} subtitle={'You need to pay a fee to use the Ethereum blockchain.'} subtitle2={'This pays for someone to process your transaction and store the data.'}></ModalCard.Header>\n      <ModalCard.Body>\n        <Flex flexDirection={['column', 'row']}\n          justifyContent={\"space-between\"}\n          my={[0, 4]}>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"Fingerprint\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Undeniable proof</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              You get a public record of any funds you send or receive, a bit like\n              a deed for a house.\n            </Text>\n          </Box>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"EnhancedEncryption\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Unbreakable encryption</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              Your funds can only ever go to your intended recipients.\n            </Text>\n          </Box>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"AccountBalance\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n              <Icon\n                name=\"NotInterested\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Unparalleled control</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              You can pay or get paid without using any banks or companies.\n            </Text>\n          </Box>\n        </Flex>\n      </ModalCard.Body>\n    </Box>\n  );\n}\n\nexport default TransactionFeeModal;\n","import React from 'react'\nimport moment from 'moment';\nimport connectors from '../App/connectors';\nimport { useWeb3Context } from 'web3-react';\nimport GeneralUtil from \"../utilities/GeneralUtil\";\nimport ImageButton from '../ImageButton/ImageButton';\nimport globalConfigs from '../configs/globalConfigs';\nimport styles from './Web3ConnectionButtons.module.scss';\nimport { Button, Box, Text, Flex, Link } from 'rimble-ui';\n\nconst LOG_ENABLED = false;\nconst customLog = (...props) => { if (LOG_ENABLED) console.log(moment().format('HH:mm:ss'),...props); };\n\nexport default function Web3ConnectionButtons(props) {\n  const context = useWeb3Context();\n\n  if (!context.active && !context.error) {\n    customLog('context loading', context);\n  } else if (context.error) {\n    customLog('context error', context);\n  } else {\n    customLog('context success', context);\n  }\n\n  const setConnector = async (connectorName,name) => {\n    let walletProvider = connectorName === 'Injected' ? name : connectorName;\n    if (localStorage) {\n      localStorage.setItem('walletProvider', walletProvider);\n      localStorage.setItem('connectorName', connectorName);\n    }\n\n    if (props.setConnector && typeof props.setConnector === 'function'){\n      props.setConnector(connectorName,walletProvider);\n    }\n    \n    // Close modal\n    if (typeof props.connectionCallback === 'function'){\n      props.connectionCallback();\n    }\n\n    return connectorName;\n    // return await context.setConnector(connectorName);\n  };\n  const unsetConnector = async () => {\n    context.unsetConnector();\n    if (props.setConnector && typeof props.setConnector === 'function'){\n      props.setConnector('Infura','Infura');\n    }\n  };\n\n  // Show provider fields to detect in-app browser\n  // alert(JSON.stringify(Object.keys(window.web3.currentProvider)));\n    \n  const isOpera = GeneralUtil.isOpera();\n  const isDapper = GeneralUtil.hasDapper();\n  const isMetamask = GeneralUtil.hasMetaMask();\n  const isTrustWallet = GeneralUtil.isTrustWallet();\n  const isCoinbaseWallet = GeneralUtil.isCoinbaseWallet();\n  const browserWalletDetected = isMetamask || isOpera || isDapper || isCoinbaseWallet || isTrustWallet;\n  \n  const allowedConnectors = props.allowedConnectors;\n  const registerPage = props.registerPage;\n\n  if (connectors.Portis) {\n    if (registerPage) {\n      connectors.Portis.options = connectors.Portis.options || {};\n      connectors.Portis.options.registerPageByDefault = true;\n    } else {\n      connectors.Portis.options = connectors.Portis.options || {};\n      connectors.Portis.options.registerPageByDefault = false;\n    }\n  }\n\n  let basicConnectorsName = Object.keys(connectors).filter(c => c !== 'Infura');\n\n  if (allowedConnectors) {\n    basicConnectorsName = basicConnectorsName.filter(n => allowedConnectors.map((v) => { return v.toLowerCase(); }).indexOf(n.toLowerCase()) !== -1 );\n  }\n\n  const buttons = basicConnectorsName.map(connectorName => {\n\n    switch (connectorName) {\n      case 'Injected':\n        if (browserWalletDetected) {\n          let name = null;\n          if (isMetamask) {\n            name = 'Metamask';\n          } else if (isOpera) {\n            name = 'Opera';\n          } else if (isDapper){\n            name = 'Dapper';\n          } else if (isCoinbaseWallet){\n            name = 'Coinbase';\n          } else if (isTrustWallet){\n            name = 'TrustWallet';\n          }\n\n          const connectorInfo = globalConfigs.connectors[name.toLowerCase()];\n          if (connectorInfo && connectorInfo.enabled){\n            const walletIcon = connectorInfo.icon ? connectorInfo.icon : `${name.toLowerCase()}.svg`;\n            return (\n              <Flex\n                width={1}\n                key={`wallet_${name}`}\n                justifyContent={'space-between'}\n                style={{\n                  flex:'0 100%',\n                }}\n              >\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={name}\n                  isMobile={true}\n                  width={[1,0.48]}\n                  imageSrc={`images/${walletIcon}`}\n                  imageProps={{width:'auto',height:'42px'}}\n                  handleClick={ async () => await setConnector(connectorName,name)}\n                  subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using ${name}` }\n                />\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  isMobile={true}\n                  width={[1,0.48]}\n                  caption={'Watch Address'}\n                  imageSrc={`images/tokens/ETH.svg`}\n                  subcaption={'Watch an Ethereum address'}\n                  imageProps={{width:'auto',height:'42px'}}\n                  handleClick={ e => props.setCustomAddress(true) }\n                />\n              </Flex>\n            )\n          }\n          return null;\n        } else {\n          const connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n          return (\n            <ImageButton\n              buttonProps={{\n                border:2\n              }}\n              isMobile={true}\n              caption={'Browser Wallet'}\n              key={`wallet_${connectorName}`}\n              imageSrc={`images/browser-wallet.png`}\n              imageProps={{width:'auto',height:'42px'}}\n              handleClick={ async () => await setConnector(connectorName) }\n              subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using a browser wallet`}\n              buttonStyle={ props.isMobile ? {justifyContent:'flex-start',flex:'0 100%'} : {justifyContent:'flex-start',flex:'0 48%'} }\n            />\n          );\n        }\n      default:\n        const connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n        if (connectorInfo && connectorInfo.enabled){\n          const walletIcon = connectorInfo.iconModal ? connectorInfo.iconModal : (connectorInfo.icon ? connectorInfo.icon : `${connectorName.toLowerCase()}.svg`);\n\n          let caption = connectorInfo.name ? connectorInfo.name : connectorName;\n          return (\n            <ImageButton\n              buttonProps={{\n                border:2\n              }}\n              isMobile={true}\n              caption={caption}\n              key={`wallet_${connectorName}`}\n              imageSrc={`images/${walletIcon}`}\n              imageProps={{width:'auto',height:'42px'}}\n              handleClick={ async () => await setConnector(connectorName) }\n              subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using ${connectorName}`}\n              buttonStyle={ props.isMobile ? {justifyContent:'flex-start',flex:'0 100%'} : {justifyContent:'flex-start',flex:'0 48%'} }\n            />\n          );\n        }\n        return null;\n    }\n  });\n\n  return (\n    <Box width={[1]}>\n      <Flex flexDirection={'column'} alignItems={\"center\"}>\n        {context.error && (\n          <Text.p textAlign=\"center\">\n            An error occurred, are you using an Ethereum browser such as\n            <Link href=\"https://metamask.io/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">\n              &nbsp; Metamask &nbsp;\n            </Link>\n             or\n            <Link href=\"https://www.meetdapper.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">\n              &nbsp; Dapper\n            </Link>\n            ?\n            If you do not have an Ethereum wallet follow the\n            \"I'm new to Ethereum\" flow when connecting.\n            If you do have a wallet, click Reset and retry one of the wallet listed below,\n            Generic wallet option is used for Ethereum browsers only.\n          </Text.p>\n        )}\n        {(context.active || (context.error && context.connectorName)) && context.connectorName !== 'Infura' && (\n          <Button.Outline\n            width={[1/2]}\n            className={[styles.button]}\n            mb={[1, 3]}\n            size={'large'}\n            key={'reset'}\n            onClick={async () => await unsetConnector()}\n          >\n            {context.active ? \"Deactivate Connector\" : \"Reset\"}\n          </Button.Outline>\n        )}\n      </Flex>\n      <Flex\n        flexWrap={'wrap'}\n        flexDirection={'row'}\n        justifyContent={'space-between'}\n      >\n        {buttons}\n      </Flex>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport {\n  Box,\n  Text,\n  Link,\n  Icon,\n  Flex,\n  Field,\n  Modal,\n  Input,\n  Loader,\n  Button,\n  Heading\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard.js';\nimport styles from './Header.module.scss';\nimport FunctionsUtil from '../FunctionsUtil.js';\nimport ImageButton from '../../ImageButton/ImageButton.js';\nimport TransactionFeeModal from \"./TransactionFeeModal.js\";\nimport Web3ConnectionButtons from \"../../Web3ConnectionButtons/Web3ConnectionButtons.js\";\n\nimport {\n  Link as RouterLink\n} from \"react-router-dom\";\n\nclass ConnectionModal extends React.Component {\n  // TODO save pref in localstorage and do not show 'Before connecting' info every time\n  state = {\n    validated:false,\n    showTxFees:false,\n    customAddress:'',\n    currentSection:null,\n    showInstructions:false,\n    askCustomAddress:false,\n    closeRemainingTime:null,\n    customAddressError:false,\n    newToEthereumChoice:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  toggleShowTxFees = e => {\n    e.preventDefault();\n\n    this.setState({\n      showTxFees: !this.state.showTxFees\n    });\n  }\n\n  setStoredSection = () => {\n    let currentSection = null;\n    if (localStorage){\n      currentSection = localStorage.getItem('currentSection');\n      if (currentSection){\n        this.setState({\n          currentSection\n        });\n      }\n    }\n    return currentSection;\n  }\n\n  componentDidMount = () => {\n    this.loadUtils();\n    this.setStoredSection();\n  }\n\n  componentDidUpdate = () => {\n    this.loadUtils();\n  }\n\n  resetModal = e => {\n    this.setState({\n      showTxFees: false,\n      currentSection:null,\n      askCustomAddress:false,\n      showInstructions: false,\n      newToEthereumChoice:null,\n    });\n  }\n\n  setConnector = async (connectorName,name) => {\n    let walletProvider = connectorName === 'Injected' ? name : connectorName;\n\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory:'Connect',\n      eventLabel:walletProvider,\n      eventAction:'select_wallet'\n    });\n\n    if (this.props.setConnector && typeof this.props.setConnector === 'function'){\n      this.props.setConnector(connectorName,walletProvider);\n    }\n\n    // Set Wallet choice\n    this.setState({\n      newToEthereumChoice: connectorName\n    });\n\n    this.closeCountdown();\n\n    return connectorName;\n\n    // return await window.RimbleWeb3_context.setConnector(connectorName);\n  }\n\n  closeCountdown = () => {\n    const closeRemainingTime = this.state.closeRemainingTime ? this.state.closeRemainingTime-1 : 5;\n    if (!closeRemainingTime){\n      this.closeModal();\n    } else {\n      setTimeout(() => { this.closeCountdown() },1000);\n    }\n    this.setState({\n      closeRemainingTime\n    });\n  }\n\n  setWalletChoice = (e,choice) => {\n    e.preventDefault();\n    this.setState({\n      newToEthereumChoice: choice\n    });\n  }\n\n  closeModal = () => {\n    // Reset modal\n    this.resetModal();\n    // Set latest stored sections\n    this.setStoredSection();\n    // Close modal\n    this.props.closeModal();\n  }\n\n  setCurrentSection = (e,currentSection) => {\n    e.preventDefault();\n    this.setState({\n      currentSection\n    });\n\n    if (currentSection!=='instructions'){\n      // Send Google Analytics event\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Connect',\n        eventAction: 'select_mode',\n        eventLabel: currentSection\n      });\n\n      this.functionsUtil.setLocalStorage('currentSection',currentSection);\n    }\n  }\n\n  connectCustomAddress = () => {\n    const addressValid = this.functionsUtil.checkAddress(this.state.customAddress);\n    if (addressValid){\n      this.setCustomAddress(false);\n      this.functionsUtil.setCustomAddress(this.state.customAddress);\n      this.setConnector('custom','custom');\n      setTimeout(() => { this.closeModal() },1000);\n      return true;\n    } else {\n      return this.setState({\n        customAddressError:true\n      });\n    }\n  }\n\n  updateCustomAddress = (e) => {\n    const customAddressError = false;\n    const customAddress = e.target.value;\n    const validated = this.functionsUtil.checkAddress(customAddress);\n    this.setState({\n      validated,\n      customAddress,\n      customAddressError\n    });\n  }\n\n  setCustomAddress = (askCustomAddress) => {\n    this.setState({\n      askCustomAddress\n    });\n  }\n\n  renderModalContent = () => {\n\n    const TOSacceptance = (\n      <Box>\n        <Text textAlign={'center'} fontSize={1} py={[2,3]}>By connecting, I accept Idle's <RouterLink to=\"/terms-of-service\" color={'primary'} style={{color:this.props.theme.colors.primary,textDecoration:'underline'}} target={'_blank'} rel=\"nofollow noopener noreferrer\">Terms of Service</RouterLink></Text>\n      </Box>\n    );\n\n    const newToEthereum = this.state.currentSection === 'new';\n    const showConnectionButtons = this.state.currentSection === 'wallet';\n    const showInstructions = this.state.currentSection === 'instructions';\n\n    if (showInstructions){\n      return (\n        <React.Fragment>\n          <ModalCard.Header title={'Before you connect'} subtitle={'Connecting lets you use Idle via your Ethereum account.'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              flexDirection={['column', 'row']}\n              justifyContent={\"space-between\"}\n              my={[0, 3]}\n            >\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"Public\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>The blockchain is public</Heading>\n                <Text fontSize={1} textAlign={'center'}>\n                  Your Ethereum account activity is public on the\n                  blockchain. Choose an account you don’t mind being\n                  linked with your activity here.\n                </Text>\n              </Box>\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"AccountBalanceWallet\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>Have some Ether for fees</Heading>\n                <Text fontSize={1} mb={3} textAlign={'center'}>\n                  You’ll need Ether to pay transaction fees. Buy Ether\n                  from exchanges like Coinbase or directly via enabled wallet\n                  such as Portis or Dapper.<br />\n                  <Link\n                    title=\"Learn about Ethereum transaction fees\"\n                    fontWeight={'0'}\n                    color={'blue'}\n                    textAlign={'center'}\n                    hoverColor={'blue'}\n                    href=\"#\"\n                    onClick={this.toggleShowTxFees}\n                  >\n                    What are transaction fees?\n                  </Link>\n                </Text>\n              </Box>\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"People\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>Have the right account ready</Heading>\n                <Text fontSize={1} textAlign={'center'}>\n                  If you have multiple Ethereum accounts, check that the\n                  one you want to use is active in your browser.\n                </Text>\n              </Box>\n            </Flex>\n          </ModalCard.Body>\n        </React.Fragment>\n      );\n    }\n\n    if (this.state.askCustomAddress){\n      return (\n        <Box>\n          <ModalCard.Header\n            title={'Connect ETH wallet'}\n            icon={'images/idle-mark.png'}\n            subtitle={'And get started with Idle.'}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              width={1}\n              minWidth={[1,'30em']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Field\n                width={1}\n                label={'Ethereum address'}\n              >\n                <Input\n                  required\n                  width={1}\n                  type={'text'}\n                  className={styles.input}\n                  borderColor={'cardBorder'}\n                  backgroundColor={'cardBg'}\n                  pattern={'^0x[a-fA-F0-9]{40}$'}\n                  value={this.state.customAddress}\n                  onChange={ e => this.updateCustomAddress(e) }\n                  placeholder={'Insert a valid Ethereum address'}\n                />\n              </Field>\n              {\n                this.state.customAddressError && (\n                  <Text\n                    mb={2}\n                    fontSize={2}\n                    color={'red'}\n                    fontWeight={3}\n                    textAlign={'center'}\n                  >\n                    Insert a valid Ethereum Address\n                  </Text>\n                )\n              }\n              <Button\n                px={[3,4]}\n                mx={'auto'}\n                fontWeight={3}\n                size={'medium'}\n                fontSize={[2,2]}\n                borderRadius={4}\n                contrastColor={'primary'}\n                className={[styles.gradientButton]}\n                onClick={ e => this.connectCustomAddress() }\n              >\n                CONNECT\n              </Button>\n            </Flex>\n            <Flex\n              pt={3}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <Link\n                hoverColor={'blue'}\n                textAlign={'center'}\n                onClick={ e => this.setCustomAddress(false) }\n              >\n                Select another Wallet\n              </Link>\n            </Flex>\n            { TOSacceptance }\n          </ModalCard.Body>\n        </Box>\n      );\n    }\n\n    if (showConnectionButtons) {\n      return (\n        <Box>\n          <ModalCard.Header title={'Select your Wallet'} subtitle={'And get started with Idle.'} icon={'images/idle-mark.png'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex width={1} px={[0,5]} flexDirection={'column'} justifyContent={'center'}>\n              <Web3ConnectionButtons\n                width={1/2}\n                isMobile={this.props.isMobile}\n                setConnector={this.setConnector}\n                connectionCallback={this.closeModal}\n                size={this.props.isMobile ? 'medium' : 'large'}\n                setCustomAddress={this.setCustomAddress.bind(this)}\n              />\n            </Flex>\n            <Flex pt={3} alignItems={'center'} justifyContent={'center'}>\n              <Link textAlign={'center'} hoverColor={'blue'} onClick={ e => this.setCurrentSection(e,'new') }>I don't have a wallet</Link>\n            </Flex>\n            { TOSacceptance }\n          </ModalCard.Body>\n        </Box>\n      );\n    }\n\n    if (newToEthereum) {\n      return (\n        <React.Fragment>\n          <ModalCard.Header title={'Let\\'s create your first Ethereum wallet'} icon={'images/idle-mark.png'}></ModalCard.Header>\n          <ModalCard.Body>\n            {\n              !this.state.newToEthereumChoice ? (\n                <Flex width={1} px={[0,4]} flexDirection={'column'} justifyContent={'center'}>\n                  <Box mb={3}>\n                    <Text fontSize={[2,3]} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                      Connect with e-mail or phone number?\n                    </Text>\n                  </Box>\n                  <Flex mb={3} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                    <ImageButton\n                      buttonProps={{\n                        border:2\n                      }}\n                      caption={'Use e-mail'}\n                      imageSrc={'images/email.svg'}\n                      isMobile={this.props.isMobile}\n                      subcaption={'Powered by Portis'}\n                      handleClick={ e => this.setConnector('Portis','Portis') }\n                      imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {mb:'3px',width:'auto',height:'55px'}}\n                    />\n                    <ImageButton\n                      buttonProps={{\n                        border:2\n                      }}\n                      caption={'Use phone number'}\n                      isMobile={this.props.isMobile}\n                      imageSrc={'images/mobile.svg'}\n                      subcaption={'Powered by Fortmatic'}\n                      handleClick={ e => this.setConnector('Fortmatic','Fortmatic') }\n                      imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {mb:'3px',width:'auto',height:'55px'}}\n                    />\n                  </Flex>\n                  <Flex alignItems={'center'} justifyContent={'center'}>\n                    <Link textAlign={'center'} hoverColor={'blue'} onClick={ e => this.setCurrentSection(e,'wallet') }>I already have a wallet</Link>\n                  </Flex>\n                </Flex>\n              ) : (\n                <Box>\n                  <Text fontSize={3} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                    We are connecting you to {this.state.newToEthereumChoice} wallet provider...\n                  </Text>\n                  <Flex\n                    mt={2}\n                    justifyContent={'center'}\n                    alignItems={'center'}\n                    textAlign={'center'}>\n                    <Loader size=\"40px\" /> <Text ml={2} color={'dark-gray'}>Closing in {this.state.closeRemainingTime} seconds...</Text>\n                  </Flex>\n                </Box>\n              )\n            }\n            { TOSacceptance }\n          </ModalCard.Body>\n        </React.Fragment>\n      );\n    }\n\n    return (\n      <React.Fragment>\n        <ModalCard.Header title={'Connect to Idle'} icon={'images/idle-mark.png'}></ModalCard.Header>\n        <ModalCard.Body>\n          {\n            <Flex\n              width={1}\n              px={[0,4]}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Box mb={3}>\n                <Text\n                  fontWeight={2}\n                  fontSize={[2,3]}\n                  lineHeight={1.5}\n                  textAlign={'center'}\n                >\n                  How do you want to connect to Idle?\n                </Text>\n              </Box>\n              <Flex\n                mb={[2,3]}\n                alignItems={'center'}\n                justifyContent={'center'}\n                flexDirection={['column','row']}\n              >\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={`Ethereum wallet`}\n                  isMobile={this.props.isMobile}\n                  subcaption={'Choose your favourite'}\n                  imageSrc={'images/ethereum-wallet.svg'}\n                  handleClick={ e => this.setCurrentSection(e,'wallet') }\n                  imageProps={this.props.isMobile ? {width:'auto',height:'42px'} : {width:'auto',height:'55px',marginBottom:'5px'}}\n                />\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={`New wallet`}\n                  isMobile={this.props.isMobile}\n                  subcaption={'Use email / phone'}\n                  imageSrc={'images/new-wallet.png'}\n                  handleClick={ e => this.setCurrentSection(e,'new') }\n                  imageProps={this.props.isMobile ? {width:'auto',height:'42px'} : {width:'auto',height:'55px',marginBottom:'5px'}}\n                />\n              </Flex>\n              <Flex\n                alignItems={'center'}\n                justifyContent={'center'}\n              >\n                <Link\n                  color={'primary'}\n                  hoverColor={'primary'}\n                  onClick={ e => this.setCustomAddress(true) }\n                >\n                  Watch Ethereum Address\n                </Link>\n              </Flex>\n            </Flex>\n          }\n          { TOSacceptance }\n        </ModalCard.Body>\n      </React.Fragment>\n    );\n  }\n\n  renderFooter = () => {\n\n    if (this.state.newToEthereumChoice || (this.state.currentSection && this.state.askCustomAddress)){\n      return null;\n    }\n\n    return (\n      <ModalCard.Footer>\n        { !this.state.currentSection ? (\n            <Button\n              className={[styles.gradientButton,styles.empty]}\n              onClick={ e => this.setCurrentSection(e,'instructions') }\n              size={'medium'}\n              borderRadius={4}\n              contrastColor={'blue'}\n              fontWeight={3}\n              fontSize={[2,2]}\n              mx={'auto'}\n              px={[4,5]}\n            >\n              READ INSTRUCTIONS\n            </Button>\n          ) : (!this.state.askCustomAddress || this.state.currentSection==='instructions') && (\n            <Button\n              className={[styles.gradientButton,styles.empty]}\n              onClick={this.resetModal}\n              size={'medium'}\n              borderRadius={4}\n              contrastColor={'blue'}\n              fontWeight={3}\n              fontSize={[2,2]}\n              mx={'auto'}\n              px={[4,5]}\n            >\n              BACK\n            </Button>\n          )\n        }\n      </ModalCard.Footer>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.closeModal}>\n          {this.state.showTxFees === false ? (\n            <React.Fragment>\n              {this.renderModalContent()}\n              {this.renderFooter()}\n            </React.Fragment>\n          ) : (\n            <Box>\n              <TransactionFeeModal />\n              {this.renderFooter()}\n            </Box>\n          )}\n\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionModal;\n","import React from \"react\";\nimport {\n  Heading,\n  Text,\n  Modal,\n  Flex,\n  Box,\n  Loader\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport GeneralUtil from \"../GeneralUtil\";\n\nclass ConnectionPendingModal extends React.Component {\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2 my={3}>Connect Ethereum account</Heading.h2>\n\n        <Text my={4}>\n          Confirm the request that's just appeared. If you can't see a\n          request, open your{\" \"}\n          {GeneralUtil.hasMetaMask()\n            ? `MetaMask extension`\n            : `eth wallet settings`}\n          .\n        </Text>\n\n        <Box bg={\"#f6f6fc\"} p={3} display={[\"none\", \"block\"]}>\n          <Flex alignItems={\"center\"}>\n            <Box position={\"relative\"} width={\"4em\"}>\n              <Box>\n                <Loader size={\"3em\"} />\n              </Box>\n            </Box>\n            <Box>\n              <Text fontWeight={4}>\n                Waiting for connection confirmation...\n              </Text>\n              <Text fontWeight={2}>This won’t cost you any Ether</Text>\n            </Box>\n          </Flex>\n        </Box>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionPendingModal;\n","import React from \"react\";\nimport { Heading, Text, Flex, Button, Modal } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\n\nclass UserRejectedConnectionModal extends React.Component {\n  sendMessageAgain = event => {\n    this.props.closeModal();\n    this.props.initAccount();\n  };\n\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2 my={3}>\n          You can't continue without connecting your account\n        </Heading.h2>\n\n        <Text my={4}>\n          To use our blockchain features you need to confirm the connection\n          request.\n        </Text>\n\n        <Flex flexDirection={['column', 'row']} justifyContent={\"flex-end\"} mt={4}>\n          <Button.Outline onClick={this.props.closeModal} mr={[0, 3]} mb={[3, 0]}>\n            Cancel connection\n          </Button.Outline>\n          <Button onClick={this.sendMessageAgain}>\n            Try again\n          </Button>\n        </Flex>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default UserRejectedConnectionModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Icon,\n  Modal,\n  Flex,\n  Box,\n  Button,\n  EthAddress,\n  QR,\n  Link\n} from \"rimble-ui\";\nimport TransactionFeeModal from \"./TransactionFeeModal\";\n\nclass LowFundsModal extends React.Component {\n  state = {\n    showSecondary: false,\n    showTxFees: false\n  };\n\n  toggleQRVisible = () => {\n    this.setState({\n      showSecondary: !this.state.showSecondary\n    });\n  };\n\n  toggleShowTxFees = e => {\n    console.log(\"showTxFees\", this.state.showTxFees);\n    e.preventDefault();\n\n    this.setState({\n      showTxFees: !this.state.showTxFees\n    });\n  };\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card\n          pr={[0, 5]}\n          pl={[0, 5]}\n          pt={[\"48px\", 5]}\n          pb={[\"97px\", 4]}\n          maxWidth={\"960px\"}\n          overflow={\"hidden\"}\n          position={\"relative\"}\n        >\n          <Box position={\"relative\"}>\n            <Flex\n              justifyContent={\"flex-end\"}\n              mr={[0, -5]}\n              mt={[\"-48px\", -5]}\n              position={\"absolute\"}\n              top={\"0\"}\n              left={\"0\"}\n              right={\"0\"}\n              bg={\"white\"}\n              zIndex={\"1\"}\n            >\n              <Button.Text\n                icononly\n                icon={\"Close\"}\n                color={\"moon-gray\"}\n                onClick={this.props.closeModal}\n              />\n            </Flex>\n          </Box>\n\n          {this.state.showSecondary === false &&\n          this.state.showTxFees === false ? (\n            <Box>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start primary content */}\n\n                  <Box alignContent=\"center\" py={3}>\n                    <Heading.h2>\n                      Not enough Ether for transaction fees\n                    </Heading.h2>\n                  </Box>\n                  <Text mb={4}>\n                    This is a blockchain action so you’ll have to pay a\n                    transaction fee. A few dollars worth of Ether should be\n                    enough but fees do change based on how busy the network is.{\" \"}\n                    <strong>Fund your account and try again.</strong>{\" \"}\n                    <Link\n                      title=\"Learn about Ethereum transaction fees\"\n                      as={\"a\"}\n                      href=\"#\"\n                      onClick={this.toggleShowTxFees}\n                    >\n                      What are transaction fees?\n                    </Link>\n                  </Text>\n\n                  <Heading.h3>How to add funds</Heading.h3>\n\n                  <Flex\n                    alignItems={\"stretch\"}\n                    mx={0}\n                    mb={[4, 5]}\n                    mt={[3, 4]}\n                    flexWrap={[\"wrap\", \"no-wrap\"]}\n                  >\n                    <Box p={[1, 2]} width={[1, 1 / 2]}>\n                      <Flex\n                        flexDirection={\"column\"}\n                        justifyContent={\"space-between\"}\n                        height={\"100%\"}\n                      >\n                        <Box>\n                          <Heading.h5>Buy ETH from an exchange</Heading.h5>\n                          <Text fontSize=\"1\">\n                            You can buy ETH from exchanges like Coinbase and\n                            send it to your account. If you don’t already have\n                            a Coinbase account, it can take a while to get set\n                            up.\n                          </Text>\n                        </Box>\n\n                        <Button.Outline my={3}>\n                          <Flex alignItems={\"center\"}>\n                            <Icon name=\"OpenInNew\" mr={2} />\n                            Go to CoinBase\n                          </Flex>\n                        </Button.Outline>\n                      </Flex>\n                    </Box>\n                    <Box p={[1, 2]} width={[1, 1 / 2]}>\n                      <Flex\n                        flexDirection={\"column\"}\n                        justifyContent={\"space-between\"}\n                        height={\"100%\"}\n                      >\n                        <Box>\n                          <Heading.h5>\n                            Send ETH from another account\n                          </Heading.h5>\n                          <Text fontSize=\"1\">\n                            If you have ETH in another Ethereum account, you\n                            can send it to this account using your public\n                            Ethereum address or QR code.\n                          </Text>\n                        </Box>\n                        <Button.Outline my={3} onClick={this.toggleQRVisible}>\n                          <Flex alignItems={\"center\"}>\n                            <Icon name=\"FilterCenterFocus\" mr={2} />\n                            Show account QR code\n                          </Flex>\n                        </Button.Outline>\n                      </Flex>\n                    </Box>\n                  </Flex>\n                  {/* End primary content */}\n                </Box>\n              </Box>\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start primary footer */}\n                <Flex borderTop={1} borderColor={\"#eee\"} />\n                <Flex pt={4} justifyContent={[\"center\", \"flex-end\"]}>\n                  <Button onClick={this.props.closeModal} width={[1, \"auto\"]}>\n                    Back to Idle\n                  </Button>\n                </Flex>\n                {/* End primary footer */}\n              </Box>\n            </Box>\n          ) : null}\n\n          {this.state.showSecondary ? (\n            <Box mb={3}>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start secondary content */}\n                  <Flex my={3} justifyContent={\"center\"}>\n                    <QR\n                      size={130}\n                      value={\n                        this.props.account ? this.props.account : \"1234512345\"\n                      }\n                    />\n                  </Flex>\n\n                  <EthAddress my={4} address={this.props.account} />\n                  <Flex mb={3} />\n                  {/* End secondary content */}\n                </Box>\n              </Box>\n\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start secondary footer */}\n                <Flex borderTop={1} borderColor={\"#eee\"} />\n                <Flex mt={4} justifyContent={[\"center\", \"flex-end\"]}>\n                  <Button.Outline\n                    width={[1, \"auto\"]}\n                    onClick={this.toggleQRVisible}\n                  >\n                    Go back\n                  </Button.Outline>\n                </Flex>\n                {/* End secondary footer */}\n              </Box>\n            </Box>\n          ) : null}\n\n          {this.state.showTxFees ? (\n            <Box mb={3}>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start tx fee content */}\n                  <TransactionFeeModal />\n                  {/* End tx fee content */}\n                </Box>\n              </Box>\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start primary footer */}\n                <Flex\n                  pt={4}\n                  justifyContent={[\"center\", \"flex-end\"]}\n                  borderTop={1}\n                  borderColor={\"#eee\"}\n                >\n                  <Button.Outline\n                    width={[1, \"auto\"]}\n                    onClick={this.toggleShowTxFees}\n                  >\n                    Go Back\n                  </Button.Outline>\n                </Flex>\n                {/* End primary footer */}\n              </Box>\n            </Box>\n          ) : null}\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default LowFundsModal;\n","import React from \"react\";\n\nimport NoWeb3BrowserModal from \"./components/NoWeb3BrowserModal\";\nimport NoWalletModal from \"./components/NoWalletModal\";\nimport WrongNetworkModal from \"./components/WrongNetworkModal\";\n\nimport ConnectionModal from \"./components/ConnectionModal\";\nimport ConnectionPendingModal from \"./components/ConnectionPendingModal\";\nimport UserRejectedConnectionModal from \"./components/UserRejectedConnectionModal\";\n\nimport LowFundsModal from \"./components/LowFundsModal\";\n\nclass ConnectionModalUtil extends React.Component {\n  render() {\n    return (\n      <div>\n        <NoWeb3BrowserModal\n          closeModal={this.props.modals.methods.closeNoWeb3BrowserModal}\n          isOpen={this.props.modals.data.noWeb3BrowserModalIsOpen}\n          transaction={this.props.transaction}\n        />\n\n        <NoWalletModal\n          closeModal={this.props.modals.methods.closeNoWalletModal}\n          isOpen={this.props.modals.data.noWalletModalIsOpen}\n          transaction={this.props.transaction}\n        />\n\n        <WrongNetworkModal\n          closeModal={this.props.modals.methods.closeWrongNetworkModal}\n          isOpen={this.props.modals.data.wrongNetworkModalIsOpen}\n          network={this.props.network}\n        />\n\n        <ConnectionModal\n          {...this.props}\n          isMobile={this.props.isMobile}\n          setConnector={this.props.setConnector}\n          currentNetwork={this.props.network.current}\n          validateAccount={this.props.validateAccount}\n          closeModal={this.props.modals.methods.closeConnectionModal}\n          isOpen={ this.props.modals.data.connectionModalIsOpen && !this.props.accountValidated }\n        />\n\n        <ConnectionPendingModal\n          closeModal={this.props.modals.methods.closeConnectionPendingModal}\n          isOpen={this.props.modals.data.accountConnectionPending}\n          currentNetwork={this.props.network.current}\n        />\n        <UserRejectedConnectionModal\n          closeModal={\n            this.props.modals.methods.closeUserRejectedConnectionModal\n          }\n          isOpen={this.props.modals.data.userRejectedConnect}\n          initAccount={this.props.initAccount}\n        />\n\n        <LowFundsModal\n          closeModal={this.props.modals.methods.closeLowFundsModal}\n          isOpen={this.props.modals.data.lowFundsModalIsOpen}\n          currentNetwork={this.props.network.current}\n          account={this.props.account}\n        />\n      </div>\n    );\n  }\n}\n\nexport default ConnectionModalUtil;\n","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Flex,\n  Button\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass ConnectionErrorModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  async closeModal(e){\n    e.preventDefault();\n    // Disconnect to Infura only if the wallet is not logged\n    if (!this.props.account){\n      await this.props.context.setFirstValidConnector(['Infura']);\n      this.props.setConnector('Infura',null);\n    }\n    this.props.modals.methods.closeConnectionErrorModal();\n  }\n\n  render() {\n\n    const walletProvider = this.functionsUtil.getWalletProvider();\n    const isLedger = (walletProvider && walletProvider.toLowerCase() === 'ledger') || (typeof this.props.modals.data.connectionError === 'string' && this.props.modals.data.connectionError.toLowerCase().includes('ledger'));\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={ e => this.closeModal(e) }>\n          <ModalCard.Header title={ isLedger ? 'Ledger Error' : `Connection Error` } icon={'images/warning.svg'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={1} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text.p color={'dark-gray'} textAlign={'center'}>\n                The following error occured while trying to connect with your { isLedger ? 'Ledger' : 'account' }:<br />\n                <Text.span color={'red'} fontWeight={3}>\"{this.props.modals.data.connectionError}\"</Text.span><br />\n                {\n                  isLedger ? (\n                    <Text.span>\n                      Make sure that your Ledger is <strong>connected</strong> and <strong>unlocked</strong>. Also check that both <strong>Contract data</strong> and <strong>Browser support</strong> are enabled in the Ledger settings.<br />\n\n                    </Text.span>\n                  ) : 'Make sure that your wallet is unlocked and try again.'\n                }\n              </Text.p>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ async (e) => { await this.closeModal(e); } }\n              >\n              GOT IT\n              </Button>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionErrorModal;","import React from \"react\";\nimport {\n  Text,\n  Link,\n  Flex,\n  Modal,\n  Button\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass TransactionErrorModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  async closeModal(e){\n    e.preventDefault();\n    this.props.modals.methods.closeTransactionErrorModal();\n  }\n\n  render() {\n\n    const isLedgerError = typeof this.props.modals.data.transactionError === 'string' && this.props.modals.data.transactionError.toLowerCase().includes('ledger');\n    const isSlowTxError = typeof this.props.modals.data.transactionError === 'string' && this.props.modals.data.transactionError.toLowerCase().includes('not mined within 50 blocks');\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={ e => this.closeModal(e) }>\n          <ModalCard.Header title={ 'Transaction Error' } icon={'images/warning.svg'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={1} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text.p color={'dark-gray'} textAlign={'center'}>\n                The following error occured while trying to send a transaction:<br />\n                <Text.span color={'red'} fontWeight={3}>\"{this.props.modals.data.transactionError}\"</Text.span><br />\n                {\n                  isLedgerError ? (\n                    <Text.span\n                      fontSize={1}\n                    >\n                      <br />Make sure that your Ledger is <strong>connected</strong> and <strong>unlocked</strong>. Also check that both <strong>Contract data</strong> and <strong>Browser support</strong> are enabled in the Ledger settings.<br />\n                      We also suggest you to connect your Ledger with Metamask, read the <Link fontSize={1} color={'blue'} hoverColor={'blue'} target={'_blank'} rel={\"nofollow noopener noreferrer\"} href={'https://metamask.zendesk.com/hc/en-us/articles/360020394612-How-to-connect-a-Trezor-or-Ledger-Hardware-Wallet'}>instructions here</Link>.\n                    </Text.span>\n                  ) : isSlowTxError ? 'This could happen when the gas price is low, check the transaction status with your Wallet.' : 'Make sure that your have enough funds in your wallet.'\n                }\n              </Text.p>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ async (e) => { await this.closeModal(e); } }\n              >\n              GOT IT\n              </Button>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default TransactionErrorModal;","import Web3 from \"web3\";\nimport React from 'react';\nimport BigNumber from 'bignumber.js';\nimport Biconomy from \"@biconomy/mexa\";\nimport SimpleID from 'simpleid-js-sdk';\nimport NetworkUtil from \"./NetworkUtil\";\nimport * as Sentry from '@sentry/browser';\nimport FunctionsUtil from './FunctionsUtil';\nimport globalConfigs from '../configs/globalConfigs';\nimport ConnectionModalUtil from \"./ConnectionModalsUtil\";\nimport detectEthereumProvider from '@metamask/detect-provider';\nimport ConnectionErrorModal from './components/ConnectionErrorModal';\nimport TransactionErrorModal from './components/TransactionErrorModal';\nimport { TerminalHttpProvider, SourceType } from '@terminal-packages/sdk';\n\nrequire('dotenv').config();\nconst INFURA_KEY = process.env[\"REACT_APP_INFURA_KEY\"];\n\nconst RimbleTransactionContext = React.createContext({\n  web3: {},\n  account: {},\n  biconomy: {},\n  simpleID: {},\n  contracts: [],\n  web3Infura: {},\n  tokenConfig: {},\n  transactions: {},\n  accountBalance: {},\n  initWeb3: () => {},\n  accountValidated: {},\n  initAccount: () => {},\n  accountBalanceLow: {},\n  initSimpleID: () => {},\n  initContract: () => {},\n  accountBalanceToken: {},\n  checkPreflight: () => {},\n  validateAccount: () => {},\n  network: {\n    current: {},\n    required: {},\n    checkNetwork: () => {},\n    isCorrectNetwork: null,\n  },\n  accountInizialized: false,\n  getTokenDecimals: () => {},\n  rejectValidation: () => {},\n  getAccountBalance: () => {},\n  contractsInitialized: false,\n  accountValidationPending: {},\n  initializeContracts: () => {},\n  rejectAccountConnect: () => {},\n  enableUnderlyingWithdraw: false,\n  connectAndValidateAccount: () => {},\n  modals: {\n    data: {\n      connectionError: {},\n      lowFundsModalIsOpen: {},\n      noWalletModalIsOpen: {},\n      userRejectedConnect: {},\n      connectionModalIsOpen: {},\n      userRejectedValidation: {},\n      wrongNetworkModalIsOpen: {},\n      accountValidationPending: {},\n      accountConnectionPending: {},\n      noWeb3BrowserModalIsOpen: {},\n      transactionConnectionModalIsOpen: {},\n    },\n    methods: {\n      openLowFundsModal: () => {},\n      closeLowFundsModal: () => {},\n      openWrongNetworkModal: () => {},\n      closeWrongNetworkModal: () => {},\n      openNoWeb3BrowserModal: () => {},\n      closeNoWeb3BrowserModal: () => {},\n      openConnectionErrorModal: () => {},\n      closeConnectionErrorModal: () => {},\n      openTransactionErrorModal: () => {},\n      closeTransactionErrorModal: () => {},\n      openConnectionPendingModal: () => {},\n      closeConnectionPendingModal: () => {},\n      openUserRejectedConnectionModal: () => {},\n      openUserRejectedValidationModal: () => {},\n      closeUserRejectedConnectionModal: () => {},\n      closeUserRejectedValidationModal: () => {},\n    }\n  },\n  transaction: {\n    data: {\n      transactions: {}\n    },\n    meta: {},\n    methods: {}\n  }\n});\n\nlet setConnectorName = null;\nlet biconomyLoginProcessing = false;\n\nclass RimbleTransaction extends React.Component {\n  static Consumer = RimbleTransactionContext.Consumer;\n\n  componentUnmounted = false;\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    const props = Object.assign({},this.props);\n    props.contracts = this.state.contracts;\n    if (this.functionsUtil){\n      props.account = this.state.account;\n      this.functionsUtil.setProps(props);\n    } else {\n      props.account = this.state.account;\n      this.functionsUtil = new FunctionsUtil(props);\n    }\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n    window.initWeb3 = this.initWeb3;\n  }\n\n  componentDidMount = async () => {\n    this.initSimpleID();\n\n    // this.functionsUtil.customLog('RimbleWeb3 componentDidMount');\n    this.initWeb3();\n\n    // TEST - Manually triggers transaction error\n    // this.openTransactionErrorModal(null,'Your Ledger device is Ineligible');\n\n    window.testTransaction = (method) => {\n      const transaction = this.createTransaction();\n      transaction.method = method;\n      this.addTransaction(transaction);\n      return transaction;\n    }\n\n    window.updateTransaction = (transaction,hash,status,params) => {\n      // Add meta data to transaction\n      transaction.type = \"contract\";\n      transaction.status = status;\n      transaction.params = params;\n      transaction.transactionHash = hash;\n      this.updateTransaction(transaction);\n      return transaction;\n    }\n  }\n\n  componentDidUpdate = async (prevProps, prevState) => {\n\n    this.loadUtils();\n\n    // this.functionsUtil.customLog('componentDidUpdate',prevProps.connectorName,this.props.connectorName,this.props.context.connectorName,this.props.context.active,(this.props.context.error ? this.props.context.error.message : null));\n\n    if (prevProps.connectorName !== this.props.connectorName && this.props.connectorName){\n      this.initWeb3();\n    } else if ( prevProps.context !== this.props.context ){\n      if (this.props.context.error instanceof Error && this.props.context.error.message.length){\n        const errorMessage = this.props.context.error.message;\n        const isWalletConnectClosedModalError = (errorMessage === 'User closed WalletConnect modal' || errorMessage === 'User closed modal');\n        // this.functionsUtil.customLog('componentDidUpdate',setConnectorName,errorMessage);\n        if (setConnectorName === 'WalletConnect' && isWalletConnectClosedModalError){\n          // this.functionsUtil.customLog('WalletConnect disconnected! Set Infura connector');\n          this.props.setConnector('Infura',null);\n          // this.functionsUtil.removeStoredItem('walletProvider');\n          // this.functionsUtil.removeStoredItem('connectorName');\n          // this.functionsUtil.setLocalStorage('context',JSON.stringify({active:this.props.context.active,connectorName:'Infura'}));\n          setConnectorName = null;\n          // await this.props.context.setConnector('Infura');\n        } else if (!isWalletConnectClosedModalError) {\n          this.openConnectionErrorModal(null,errorMessage);\n        } else {\n          this.initWeb3();\n        }\n      // WalletConnect double trigger initWeb3\n      } else if (this.props.context.active && this.props.context.connectorName!=='WalletConnect' && this.props.connectorName==='WalletConnect') {\n        this.initWeb3();\n      }\n    } else if ( (this.props.context.connectorName && this.props.context.connectorName !== this.props.connectorName) || prevProps.customAddress !== this.props.customAddress){\n      this.initWeb3();\n    }\n\n    const customAddressChanged = prevProps.customAddress !== this.props.customAddress;\n    if (customAddressChanged){\n      this.initAccount();\n    }\n\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    // const availableTokensChanged = prevProps.availableTokens && this.props.availableTokens && JSON.stringify(Object.keys(prevProps.availableTokens)) !== JSON.stringify(Object.keys(this.props.availableTokens));\n    const availableStrategiesChanged = prevProps.availableStrategies && this.props.availableStrategies && JSON.stringify(Object.keys(prevProps.availableStrategies)) !== JSON.stringify(Object.keys(this.props.availableStrategies));\n\n    // Reset tokenDecimals if token is changed\n    if (tokenChanged){\n      this.setState({\n        tokenDecimals: null\n      });\n    }\n\n    // this.functionsUtil.customLog(prevProps.enableUnderlyingWithdraw,this.props.enableUnderlyingWithdraw,this.state.enableUnderlyingWithdraw);\n    if (prevProps.enableUnderlyingWithdraw !== this.props.enableUnderlyingWithdraw){\n      this.setState({\n        enableUnderlyingWithdraw:this.props.enableUnderlyingWithdraw\n      });\n    }\n\n    if (localStorage){\n      const context = JSON.parse(localStorage.getItem('context'));\n      if (!context || (this.props.context.active !== context.active || this.props.context.connectorName !== context.connectorName)){\n        this.functionsUtil.setLocalStorage('context',JSON.stringify({active:this.props.context.active,connectorName:this.props.context.connectorName}));\n      }\n    }\n\n    if (tokenChanged/* || availableTokensChanged*/ || availableStrategiesChanged){\n      await this.initializeContracts();\n    }\n  }\n\n  // Initialize a web3 provider\n  initWeb3 = async (connectorName=null) => {\n\n    // Detect ethereum provider\n    const metamaskProvider = await detectEthereumProvider();\n    if (metamaskProvider && (!window.ethereum || window.ethereum !== metamaskProvider)){\n      window.ethereum = metamaskProvider;\n    }\n\n    // Suppress console warning\n    if (window.ethereum && window.ethereum.autoRefreshOnNetworkChange) {\n      window.ethereum.autoRefreshOnNetworkChange = false;\n    }\n\n    const context = this.props.context;\n\n    const web3Infura = new Web3(new Web3.providers.HttpProvider(globalConfigs.network.providers.infura[globalConfigs.network.requiredNetwork]+INFURA_KEY));\n\n    let web3 = context.library;\n\n    // 0x Instant Wallet Provider Injection\n    if (!window.RimbleWeb3_context || context.connectorName !== window.RimbleWeb3_context.connectorName){\n      window.RimbleWeb3_context = context;\n    }\n\n    // Reset setConnectorName if force connectorName\n    if (connectorName){\n      setConnectorName = null;\n    } else {\n      connectorName = this.props.connectorName;\n    }\n\n    // const last_context = localStorage ? JSON.parse(localStorage.getItem('context')) : null;\n\n    // this.functionsUtil.customLog('initWeb3',context.active,connectorName,context.connectorName,context.connector,(web3 && web3.currentProvider ? web3.currentProvider.disable : null),(context.connector ? context.connector.disable : null));\n    if (context && connectorName === 'Infura' && connectorName !== context.connectorName){\n      if (web3 && typeof web3.currentProvider.disable === 'function'){\n        web3.currentProvider.disable();\n      } else if (context.connector && typeof context.connector.disable === 'function'){\n        context.connector.disable();\n      }\n      web3 = null;\n      setConnectorName = null;\n    }\n\n    const connectorNameChanged = (context.connectorName && context.connectorName !== connectorName) || (connectorName !== 'Infura' && connectorName !== setConnectorName);\n\n    // this.functionsUtil.customLog('initWeb3',context.active,connectorNameChanged,context.connectorName,connectorName,setConnectorName);\n\n    if (!context.active || connectorNameChanged) {\n      // Select preferred web3 provider\n      if (connectorName && connectorNameChanged){\n        // this.functionsUtil.customLog('initWeb3 set connector',connectorName);\n        setConnectorName = connectorName;\n        await context.setConnector(connectorName);\n        // await context.setFirstValidConnector([connectorName, 'Infura']);\n        return web3;\n      }\n      /*\n      else if (setConnectorName){\n        // Catch WalletConnect unexpected disconnect and fallback to Infura\n        if (connectorName === 'WalletConnect' && connectorName === setConnectorName && last_context && last_context.active && last_context.connectorName==='WalletConnect' && !context.connectorName){\n          this.functionsUtil.customLog('WalletConnect disconnected! Set Infura connector');\n          this.props.setConnector('Infura',null);\n          this.functionsUtil.removeStoredItem('walletProvider');\n          this.functionsUtil.removeStoredItem('connectorName');\n          this.functionsUtil.setLocalStorage('context',JSON.stringify({active:context.active,connectorName:context.connectorName}));\n          setConnectorName = null;\n          await context.setConnector('Infura');\n          if (context.connector && typeof context.connector.disable === 'function'){\n            await context.connector.disable();\n          }\n        }\n\n        this.functionsUtil.customLog('initWeb3 skip due to setConnectorName ('+setConnectorName+') already set');\n        return web3;\n      }\n      */\n    }\n    /* else if (context.connectorName === \"WalletConnect\") {\n      if (!context.account) {\n\n        // WalletConnect already opened\n        if (document.getElementById('walletconnect-wrapper')){\n          return web3;\n        }\n\n        WalletConnectQRCodeModal.open(\n          context.connector.walletConnector.uri,\n          async () => {\n            document.getElementById('walletconnect-wrapper').remove();\n            this.props.setConnector('Infura',null);\n            await context.setConnector('Infura');\n            setConnectorName = null;\n          }\n        );\n      } else {\n        try {\n          WalletConnectQRCodeModal.close();\n        } catch {}\n      }\n    // Reset web3 if Infura\n    } */\n    /*\n    else if (context.active && (connectorName === 'Infura' || context.connectorName === \"Infura\")){\n      if (typeof web3.currentProvider.disable === 'function'){\n        await web3.currentProvider.disable();\n      } else if (context.connector && typeof context.connector.disable === 'function'){\n        await context.connector.disable();\n      }\n      web3 = null;\n      setConnectorName = null;\n    }\n    */\n\n    let web3Host = null;\n    let web3Provider = null;\n\n    if (!web3) { // safety web3 implementation\n      if (window.ethereum) {\n        this.functionsUtil.customLog(\"Using modern web3 provider.\");\n        web3Provider = window.ethereum;\n      } else if (window.web3) {\n        this.functionsUtil.customLog(\"Legacy web3 provider. Try updating.\");\n        web3Provider = window.web3;\n      } else {\n        this.functionsUtil.customLog(\"Non-Ethereum browser detected. Using Infura fallback.\");\n        web3Host = globalConfigs.network.providers.infura[globalConfigs.network.requiredNetwork]+INFURA_KEY;\n      }\n    } else {\n      web3Provider = web3.currentProvider;\n    }\n\n    let forceCallback = false;\n\n    if ((!connectorName || connectorName === 'Infura') && web3Provider && typeof web3Provider.enable === 'function'){\n      try {\n        await web3Provider.enable();\n      } catch (connectionError){\n        web3Provider = null;\n        web3Host = globalConfigs.network.providers.infura[globalConfigs.network.requiredNetwork]+INFURA_KEY;\n        forceCallback = true;\n      }\n    }\n\n    const terminalInfo = globalConfigs.network.providers.terminal;\n\n    if (terminalInfo && terminalInfo.enabled && terminalInfo.supportedNetworks.indexOf(globalConfigs.network.requiredNetwork) !== -1 ){\n      const TerminalHttpProviderParams = terminalInfo.params;\n      const terminalSourceType = localStorage && localStorage.getItem('walletProvider') ? localStorage.getItem('walletProvider') : SourceType.Infura;\n      TerminalHttpProviderParams.source = terminalSourceType;\n\n      if (web3Provider){\n        TerminalHttpProviderParams.customHttpProvider = web3Provider;\n      } else if (web3Host){\n        TerminalHttpProviderParams.host = web3Host;\n      }\n\n      const terminalHttpProvider = new TerminalHttpProvider(TerminalHttpProviderParams);\n      web3 = new Web3(terminalHttpProvider);\n    } else {\n      // Injected web3 provider\n      if (web3Provider){\n        web3 = new Web3(web3Provider);\n      // Infura\n      } else if (web3Host) {\n        web3 = new Web3(new Web3.providers.HttpProvider(web3Host));\n        if (connectorName !== 'Infura'){\n          this.props.setConnector('Infura',null);\n        }\n      }\n    }\n\n    const web3Callback = async () => {\n\n      window.web3Injected = this.state.web3;\n      // window.web3InfuraInjected = this.state.web3Infura;\n\n      if (typeof this.props.callbackAfterLogin === 'function'){\n        this.props.callbackAfterLogin();\n        this.props.setCallbackAfterLogin(null);\n      }\n\n      // After setting the web3 provider, check network\n      try {\n        await this.checkNetwork();\n        if (this.state.network.isCorrectNetwork){\n\n          if (!this.state.contractsInitialized){\n            await this.initializeContracts();\n          }\n\n          if (context.account){\n            // Login with biconomy\n            if (this.state.biconomy){\n              const biconomy = this.state.biconomy;\n              const biconomyInfo = globalConfigs.network.providers.biconomy;\n              if (biconomyInfo.enableLogin && !biconomy.isLogin && !biconomyLoginProcessing){\n                biconomyLoginProcessing = true;\n                biconomy.login(context.account, (error, response) => {\n                  // this.functionsUtil.customLog('biconomy login',error,response);\n                  // Failed to login with Biconomy\n                  if (error) {\n                    return this.setState({\n                      biconomy:false,\n                    },() => {\n                      this.initAccount(context.account);\n                    });\n                  }\n\n                  biconomyLoginProcessing = false;\n\n                  if (response.transactionHash) {\n                    this.initAccount(context.account);\n                  } else if(response.userContract) {\n                    this.initAccount(context.account);\n                  }\n                });\n                return false;\n              }\n            }\n\n            await this.initAccount(context.account);\n          } else {\n            await this.setState({\n              accountInizialized: true,\n              account: this.props.customAddress\n            });\n          }\n        }\n      // Initialize Infura Web3 and display error\n      } catch (error) {\n        this.openConnectionErrorModal(null,error.message);\n      }\n    }\n\n    // Save original web3 connector in case Mexa initialization fails\n    const originalWeb3 = web3;\n    const biconomyInfo = globalConfigs.network.providers.biconomy;\n    const walletProvider = this.functionsUtil.getWalletProvider();\n\n    if (connectorName !== 'Infura' && biconomyInfo && biconomyInfo.enabled && biconomyInfo.supportedNetworks.includes(globalConfigs.network.requiredNetwork) && (!walletProvider || !biconomyInfo.disabledWallets.includes(walletProvider.toLowerCase()))){\n\n      if (this.state.biconomy === null){\n        const biconomyWeb3Provider = web3Provider ? web3Provider : web3Host;\n        const biconomy = new Biconomy(biconomyWeb3Provider,biconomyInfo.params);\n\n        if (biconomy && typeof biconomy.onEvent === 'function'){\n          web3 = new Web3(biconomy);\n          biconomy.onEvent(biconomy.READY, () => {\n            if (this.componentUnmounted || this.state.biconomy === false || this.state.biconomy === biconomy){\n              return false;\n            }\n\n            const newState = {\n              web3,\n              biconomy,\n              web3Infura\n            };\n            if (web3 !== this.state.web3){\n              this.setState(newState, web3Callback);\n            }\n          }).onEvent(biconomy.ERROR, (error, message) => {\n            // this.functionsUtil.customLog('Biconomy error',error,message,this.state.biconomy);\n            web3 = originalWeb3;\n            // Handle error while initializing mexa\n            if (this.state.biconomy !== false){\n              this.setState({\n                web3,\n                web3Infura,\n                biconomy:false\n              }, web3Callback);\n            }\n          });\n        } else {\n          this.setState({\n            web3,\n            web3Infura,\n            biconomy:false\n          }, web3Callback);\n        }\n      }\n    } else {\n      if (web3 !== this.state.web3){\n        this.setState({\n          web3,\n          web3Infura,\n        }, web3Callback);\n      } else if (context.account || forceCallback){\n        web3Callback();\n      }\n    }\n\n    return web3;\n  }\n\n  initContract = async (name, address, abi, useInfuraProvider=false) => {\n    this.functionsUtil.customLog(`Init contract: ${name}`);\n    return await this.createContract(name, address, abi, useInfuraProvider);\n  }\n\n  createContract = async (name, address, abi, useInfuraProvider=false) => {\n    this.functionsUtil.customLog(`creating contract ${name} - addr: ${address}`);\n\n    const web3Provider = useInfuraProvider && this.state.web3Infura ? this.state.web3Infura : this.state.web3;\n\n    if (!web3Provider){\n      return null;\n    }\n\n    // Create contract on initialized web3 provider with given abi and address\n    try {\n      const contract = new web3Provider.eth.Contract(abi, address);\n      this.setState(state => ({\n        ...state,\n        contracts: [...state.contracts, {name, contract}]\n      }));\n      return {name, contract};\n    } catch (error) {\n      this.functionsUtil.customLogError(\"Could not create contract.\",name,address,error);\n    }\n\n    return null;\n  }\n\n  initSimpleID = () => {\n\n    if (this.state.simpleID){\n      return this.state.simpleID;\n    }\n\n    const simpleIDInfo = globalConfigs.network.providers.simpleID;\n    let simpleID = null;\n\n    if (simpleIDInfo && simpleIDInfo.enabled && simpleIDInfo.supportedNetworks.indexOf(globalConfigs.network.requiredNetwork) !== -1 ){\n      const simpleIDParams = simpleIDInfo.params;\n      simpleIDParams.network = simpleIDInfo.getNetwork(this.state.network.current.id,globalConfigs.network.availableNetworks);\n      simpleID = new SimpleID(simpleIDParams);\n    }\n\n    window.simpleID = simpleID;\n\n    this.setState({\n      simpleID\n    });\n\n    return simpleID;\n  }\n\n  initAccount = async (account=false) => {\n    \n    const customAddress = this.props.customAddress;\n    const walletProvider = this.functionsUtil.getWalletProvider('Infura');\n\n    if (customAddress){\n      // Set custom account\n      this.setState({\n        account:customAddress,\n        accountInizialized:true,\n      });\n\n      // After account is complete, get the balance\n      this.getAccountBalance();\n\n      return false;\n    }\n\n    try {\n      if (!account){\n        const wallets = await this.state.web3.eth.getAccounts();\n        if (wallets && wallets.length){\n          account = wallets[0];\n        }\n      }\n\n      if (!account || this.state.account === account){\n        this.setState({\n          accountInizialized: true\n        });\n        return false;\n      }\n\n      // Request account access if needed\n      if (account && walletProvider !== 'Infura'){\n\n        if (walletProvider === 'Infura'){\n          this.setState({\n            accountInizialized: true,\n            account:this.props.customAddress\n          });\n          return false;\n        }\n\n        // Send address info to SimpleID\n        const simpleID = this.initSimpleID();\n\n        if (simpleID){\n\n          const notifications = await simpleID.notifications();\n\n          if (notifications && notifications.length && window.$crisp){\n\n            let shownNotifications = [];\n            if (localStorage){\n              shownNotifications = localStorage.getItem('shownNotifications') && JSON.parse(localStorage.getItem('shownNotifications')) ? JSON.parse(localStorage.getItem('shownNotifications')) : [];\n            }\n\n            notifications.forEach((n,i) => {\n\n              const notificationId = n.name;\n\n              // Show notification if not shown already\n              if (shownNotifications.indexOf(notificationId) === -1){\n                window.$crisp.push([\"do\", \"message:show\", [\"text\", this.functionsUtil.normalizeSimpleIDNotification(n.content) ]]);\n\n                // Save notification id\n                shownNotifications.push(notificationId);\n              }\n            });\n\n            // Store shown notification\n            if (localStorage){\n              this.functionsUtil.setLocalStorage('shownNotifications',JSON.stringify(shownNotifications));\n            }\n          }\n        }\n\n        // Send Google Analytics connection event\n        this.functionsUtil.sendGoogleAnalyticsEvent({\n          eventCategory: 'Connect',\n          eventAction: 'connected',\n          eventLabel: walletProvider\n        });\n\n        /*\n        // Unsubscribes to all subscriptions\n        if (this.state.web3SocketProvider && typeof this.state.web3SocketProvider.clearSubscriptions === 'function'){\n          this.functionsUtil.customLog('Clear all web3SocketProvider subscriptions');\n          this.state.web3SocketProvider.clearSubscriptions();\n        }\n\n        const networkName = globalConfigs.network.availableNetworks[globalConfigs.network.requiredNetwork].toLowerCase();\n        const web3SocketProvider = new Web3(new Web3.providers.WebsocketProvider(`wss://${networkName}.infura.io/ws/v3/${INFURA_KEY}`));\n\n        // Subscribe to logs\n        const addressTopic = '0x00000000000000000000000'+account.toLowerCase().replace('x','');\n\n        // Subscribe for payment methods\n        const paymentProviders = Object.keys(globalConfigs.payments.providers).filter((providerName,i) => { const providerInfo = globalConfigs.payments.providers[providerName]; return providerInfo.enabled && providerInfo.web3Subscription && providerInfo.web3Subscription.enabled  })\n        if (paymentProviders && paymentProviders.length){\n          paymentProviders.forEach((providerName,i) => {\n            const providerInfo = globalConfigs.payments.providers[providerName];\n\n            this.functionsUtil.customLog(`Subscribe to ${providerName} logs`);\n\n            // Subscribe for deposit transactions\n            web3SocketProvider.eth.subscribe('logs', {\n                address: [account,providerInfo.web3Subscription.contractAddress],\n                topics: [null,[addressTopic]]\n            }, function(error, result){\n              \n            })\n            .on(\"data\", async (log) => {\n              this.functionsUtil.customLog(providerName,'logs',log);\n\n              if (log){\n                const txHash = log.transactionHash;\n                const subscribedTransactions = this.state.subscribedTransactions;\n                const walletAddressFound = log.topics.filter((addr,i) => { return addr.toLowerCase().includes(addressTopic); });\n\n                this.functionsUtil.customLog(providerName,txHash,walletAddressFound);\n\n                if (!subscribedTransactions[txHash] && walletAddressFound.length){\n                  const decodedLogs = web3SocketProvider.eth.abi.decodeLog(providerInfo.web3Subscription.decodeLogsData,log.data,log.topics);\n\n                  this.functionsUtil.customLog(providerName,txHash,decodedLogs);\n\n                  if (decodedLogs && decodedLogs._tokenAmount && decodedLogs._tokenAddress && decodedLogs._tokenAddress.toLowerCase() === this.props.tokenConfig.address.toLowerCase()){\n\n                    const receiptCallback = async (tx,decodedLogs) => {\n                      const tokenDecimals = await this.getTokenDecimals();\n                      const tokenAmount = this.functionsUtil.BNify(decodedLogs._tokenAmount);\n                      const tokenAmountFixed = this.functionsUtil.fixTokenDecimals(tokenAmount,tokenDecimals);\n                      const tokenAmountFormatted = parseFloat(tokenAmountFixed.toString()).toFixed(2);\n                      const isProviderTx = tx.from.toLowerCase() === account.toLowerCase() && tx.to.toLowerCase() === providerInfo.web3Subscription.contractAddress.toLowerCase();\n\n                      if (isProviderTx){\n\n                        // Mined\n                        if (tx.blockNumber && tx.status){\n                          // Toast message\n                          window.showToastMessage({\n                            variant:'success',\n                            message:'Deposit completed',\n                            secondaryMessage:`${providerName} sent you ${tokenAmountFormatted} ${this.props.selectedToken}`,\n                          });\n\n                          // Update User Balance\n                          this.getAccountBalance(tokenAmount);\n                        } else {\n                          // Toast message\n                          window.showToastMessage({\n                            variant:'processing',\n                            message:'Deposit pending',\n                            secondaryMessage:`${providerName} is sending ${tokenAmountFormatted} ${this.props.selectedToken}`,\n                          });\n                        }\n                      }\n                    }\n\n                    let checkTransactionReceiptTimeoutID = null;\n\n                    const checkTransactionReceipt = (txHash,decodedLogs) => {\n                      if (checkTransactionReceiptTimeoutID){\n                        window.clearTimeout(checkTransactionReceiptTimeoutID);\n                      }\n                      web3SocketProvider.eth.getTransactionReceipt(txHash,(err,txReceipt)=>{\n                        if (!err){\n                          if (txReceipt){\n                            receiptCallback(txReceipt,decodedLogs);\n                          } else{\n                            checkTransactionReceiptTimeoutID = window.setTimeout(() => { checkTransactionReceipt(txHash,decodedLogs) },3000);\n                          }\n                        }\n                      });\n                    }\n\n                    checkTransactionReceipt(txHash,decodedLogs);\n\n                    subscribedTransactions[txHash] = log;\n                    this.setState({subscribedTransactions});\n                  }\n                }\n              }\n            });\n          })\n        }\n\n        // Subscribe for deposit transactions\n        web3SocketProvider.eth.subscribe('logs', {\n            address: [account,this.props.tokenConfig.address],\n            topics: [null,null,[addressTopic]]\n        }, function(error, result){\n\n        })\n        .on(\"data\", async (log) => {\n          if (log){\n            const txHash = log.transactionHash;\n            const subscribedTransactions = this.state.subscribedTransactions;\n            const walletAddressFound = log.topics.filter((addr,i) => { return addr.toLowerCase().includes(addressTopic); });\n\n            if (!subscribedTransactions[txHash] && walletAddressFound.length){\n              const decodedLogs = web3SocketProvider.eth.abi.decodeLog([\n                {\n                  \"internalType\": \"uint256\",\n                  \"name\": \"_tokenAmount\",\n                  \"type\": \"uint256\"\n                },\n              ],log.data,log.topics);\n\n              if (decodedLogs && decodedLogs._tokenAmount){\n\n                const receiptCallback = async (tx,decodedLogs) => {\n                  const tokenDecimals = await this.getTokenDecimals();\n                  const tokenAmount = this.functionsUtil.BNify(decodedLogs._tokenAmount);\n                  const tokenAmountFixed = this.functionsUtil.fixTokenDecimals(tokenAmount,tokenDecimals);\n                  const tokenAmountFormatted = parseFloat(tokenAmountFixed.toString()).toFixed(2);\n                  const isDepositTokenTx = tx.to.toLowerCase() === this.props.tokenConfig.address.toLowerCase();\n\n                  if (isDepositTokenTx){\n\n                    // Mined\n                    if (tx.blockNumber && tx.status){\n                      // Toast message\n                      window.showToastMessage({\n                        message:'Deposit completed',\n                        secondaryMessage: `${tokenAmountFormatted} ${this.props.selectedToken} has been deposited`,\n                        variant: \"success\",\n                      });\n\n                      // Update User Balance\n                      this.getAccountBalance(tokenAmount);\n                    } else {\n                      // Toast message\n                      window.showToastMessage({\n                        message:'Deposit pending',\n                        secondaryMessage: `${tokenAmountFormatted} ${this.props.selectedToken} are on the way`,\n                        variant: \"processing\",\n                      });\n                    }\n                  }\n                }\n\n                let checkTransactionReceiptTimeoutID = null;\n\n                const checkTransactionReceipt = (txHash,decodedLogs) => {\n                  if (checkTransactionReceiptTimeoutID){\n                    window.clearTimeout(checkTransactionReceiptTimeoutID);\n                  }\n                  web3SocketProvider.eth.getTransactionReceipt(txHash,(err,txReceipt)=>{\n                    if (!err){\n                      if (txReceipt){\n                        receiptCallback(txReceipt,decodedLogs);\n                      } else{\n                        checkTransactionReceiptTimeoutID = window.setTimeout(() => { checkTransactionReceipt(txHash,decodedLogs) },3000);\n                      }\n                    }\n                  });\n                }\n\n                checkTransactionReceipt(txHash,decodedLogs);\n\n                subscribedTransactions[txHash] = log;\n                this.setState({subscribedTransactions});\n              }\n            }\n          }\n        })\n        .on(\"changed\", log => {\n          \n        });\n        */\n\n        // this.functionsUtil.customLog('initAccount',account);\n\n        // Set custom account\n        this.setState({\n          account,\n          // web3SocketProvider,\n          accountInizialized: true\n        });\n\n        // After account is complete, get the balance\n        this.getAccountBalance();\n\n        // TODO subscribe for account changes, no polling\n        // set a state flag which indicates if the subscribe handler has been\n        // called at least once\n      }\n    } catch (error) {\n\n      this.setState({\n        accountInizialized: true\n      });\n\n      // User denied account access...\n      this.functionsUtil.customLog(\"User cancelled connect request. Error:\", error);\n\n      // this.functionsUtil.customLog(error);\n\n      // Catch ledger error\n      if (error && error.message && error.message.includes('MULTIPLE_OPEN_CONNECTIONS_DISALLOWED')) {\n        return;\n      }\n\n      // Send Sentry connection error\n      const isError = error instanceof Error;\n      if (this.functionsUtil.checkUrlOrigin() && isError){\n        Sentry.captureException(error);\n      }\n\n      // Reject Connect\n      // this.rejectAccountConnect(error);\n    }\n  }\n\n  // TODO: Can this be moved/combined?\n  rejectAccountConnect = error => {\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    modals.data.userRejectedConnect = true;\n    this.setState({ modals });\n  }\n\n  getAccountBalance = async (increaseAmount) => {\n\n    increaseAmount = increaseAmount ? this.functionsUtil.BNify(increaseAmount) : null;\n\n    try {\n\n      let [accountBalance,accountBalanceToken,tokenDecimals] = await Promise.all([\n        this.state.web3.eth.getBalance(this.state.account), // Get ETH balance\n        this.getTokenBalance(this.state.account), // Get token balance\n        this.getTokenDecimals()\n      ]);\n\n      if (accountBalance) {\n\n        // Convert to wei if decimals found\n        if (accountBalance.toString().includes('.')){\n          accountBalance = this.state.web3.utils.toWei(accountBalance);\n        }\n\n        // Convert to Eth amount\n        accountBalance = this.state.web3.utils.fromWei(\n          accountBalance,\n          'ether'\n        );\n\n        accountBalance = this.functionsUtil.BNify(accountBalance).toString();\n\n        this.setState({\n          accountBalance\n        });\n\n        this.functionsUtil.customLog(\"account balance: \", accountBalance);\n      }\n\n      // this.functionsUtil.customLog('accountBalance',res,(accountBalanceToken ? accountBalanceToken.toString() : null),tokenDecimals,increaseAmount);\n\n      if (accountBalanceToken) {\n\n        accountBalanceToken = this.functionsUtil.BNify(accountBalanceToken);\n\n        // Increase balance amount if passed and balance didn't change\n        if (increaseAmount && this.state.accountBalanceToken && this.functionsUtil.normalizeTokenAmount(this.state.accountBalanceToken,tokenDecimals).toString() === accountBalanceToken.toString()){\n          accountBalanceToken = accountBalanceToken.plus(increaseAmount);\n        }\n        \n        accountBalanceToken = this.functionsUtil.fixTokenDecimals(accountBalanceToken,tokenDecimals).toString();\n\n        // this.functionsUtil.customLog('increaseAmount',(increaseAmount ? increaseAmount.toString() : '0'),(this.state.accountBalanceToken ? this.state.accountBalanceToken.toString() : '0'),(accountBalanceToken ? accountBalanceToken.toString() : 'ERROR'));\n        // this.functionsUtil.customLog(`account balance ${this.props.selectedToken}: `, accountBalanceToken);\n\n        this.setState({\n          accountBalanceToken,\n          [`accountBalance${this.props.selectedToken}`]:accountBalanceToken\n        });\n\n      } else {\n        this.functionsUtil.customLog('accountBalanceToken is not set:',accountBalanceToken);\n      }\n    } catch (error) {\n      this.functionsUtil.customLogError(\"Failed to get account balance.\", error);\n    }\n  }\n\n  initializeContracts = async () => {\n\n    const contracts = this.functionsUtil.getGlobalConfig(['contracts']);\n    await this.functionsUtil.asyncForEach(Object.keys(contracts),async (contractName) => {\n      const contractInfo = contracts[contractName];\n      if (contractInfo.address !== null && contractInfo.abi !== null){\n        this.functionsUtil.customLog('initializeContracts, init contract', contractName, contractInfo.address);\n        await this.initContract(contractName, contractInfo.address, contractInfo.abi);\n      }\n    });\n\n    const govTokens = this.functionsUtil.getGlobalConfig(['govTokens']);\n    await this.functionsUtil.asyncForEach(Object.keys(govTokens),async (token) => {\n      const govTokenConfig = govTokens[token];\n      if (!govTokenConfig.enabled){\n        return;\n      }\n      // Initialize govToken contracts\n      let foundGovTokenContract = this.state.contracts.find(c => c.name === token);\n      if (!foundGovTokenContract) {\n        this.functionsUtil.customLog('initializeContracts, init contract', token, govTokenConfig.address);\n        await this.initContract(token, govTokenConfig.address, govTokenConfig.abi);\n      }\n    });\n\n    if (this.props.availableStrategies){\n      // Initialize Tokens Contracts\n      await this.functionsUtil.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n        \n        const availableTokens = this.props.availableStrategies[strategy];\n\n        await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n          const tokenConfig = availableTokens[token];\n\n          let foundTokenContract = this.state.contracts.find(c => c.name === token);\n          if (!foundTokenContract) {\n            this.functionsUtil.customLog('initializeContracts, init contract',token, tokenConfig.address);\n            await this.initContract(token, tokenConfig.address, tokenConfig.abi);\n          }\n\n          // Initialize idleTokens contracts\n          let foundIdleTokenContract = this.state.contracts.find(c => c.name === tokenConfig.idle.token);\n          if (!foundIdleTokenContract) {\n            this.functionsUtil.customLog('initializeContracts, init contract',tokenConfig.idle.token, tokenConfig.idle.address);\n            await this.initContract(tokenConfig.idle.token, tokenConfig.idle.address, tokenConfig.idle.abi);\n          }\n\n          // Initialize protocols contracts\n          tokenConfig.protocols.forEach(async (p,i) => {\n            let foundProtocolContract = this.state.contracts.find(c => c.name === p.token);\n            if (!foundProtocolContract) {\n              this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n              await this.initContract(p.token, p.address, p.abi);\n            }\n          });\n\n          // Check migration contract\n          if (tokenConfig.migration){\n\n            if (tokenConfig.migration.oldContract){\n              const oldContract = tokenConfig.migration.oldContract;\n              this.functionsUtil.customLog('initializeContracts, init '+oldContract.name+' contract',oldContract);\n              await this.initContract(oldContract.name, oldContract.address, oldContract.abi);\n            }\n\n            // Initialize protocols contracts\n            if (tokenConfig.migration.oldProtocols){\n              tokenConfig.migration.oldProtocols.forEach(async (p,i) => {\n                let foundProtocolContract = this.state.contracts.find(c => c.name === p.token);\n                if (!foundProtocolContract) {\n                  this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n                  await this.initContract(p.token, p.address, p.abi);\n                }\n              });\n            }\n\n            if (tokenConfig.migration.migrationContract){\n              const migrationContract = tokenConfig.migration.migrationContract;\n              this.functionsUtil.customLog('initializeContracts, init '+migrationContract.name+' contract',migrationContract);\n              await this.initContract(migrationContract.name, migrationContract.address, migrationContract.abi);\n            }\n          }\n        })\n      });\n    }\n\n    return this.setState({\n      contractsInitialized:true\n    });\n  }\n\n  getContractByName = async (contractName) => {\n    let contract = this.state.contracts.find(c => c.name === contractName);\n\n    if (!contract && this.props.tokenConfig) {\n      const tokenConfig = this.props.tokenConfig;\n      contract = await this.initContract(contractName, tokenConfig.address, tokenConfig.abi);\n    }\n\n    return contract ? contract.contract : null;\n  }\n\n  getTokenDecimals = async () => {\n    let tokenDecimals = null;\n\n    if (!this.state.tokenDecimals){\n\n      tokenDecimals = await this.functionsUtil.getTokenDecimals(this.props.selectedToken);\n\n      this.setState({\n        tokenDecimals\n      });\n    } else {\n      tokenDecimals = await (new Promise( async (resolve, reject) => {\n        resolve(this.state.tokenDecimals);\n      }));\n    }\n\n    return tokenDecimals;\n  }\n\n  getTokenBalance = async (account) => {\n    const contract = await this.getContractByName(this.props.selectedToken);\n\n    if (!contract) {\n      this.functionsUtil.customLogError('Wrong contract name', this.props.selectedToken);\n      return null;\n    }\n\n    if (!contract.methods['balanceOf']){\n      this.customLogError('Wrong method name balanceOf');\n      return null;\n    }\n\n    return await contract.methods.balanceOf(account).call().catch(error => {\n      this.functionsUtil.customLog(`Failed to get ${this.props.selectedToken} balance`, error);\n    });\n  }\n\n  determineAccountLowBalance = () => {\n    // If provided a minimum from config then use it, else default to 1\n    const accountBalanceMinimum =\n      typeof this.props.config !== \"undefined\" &&\n      typeof this.props.config.accountBalanceMinimum !== \"undefined\"\n        ? this.props.config.accountBalanceMinimum\n        : 1;\n    // Determine if the account balance is low\n    const accountBalanceLow =\n      this.state.accountBalance < accountBalanceMinimum;\n\n    this.setState({\n      accountBalanceLow\n    });\n  }\n\n  connectAndValidateAccount = async (callbackAfterLogin) => {\n    // Check for account\n    if (!this.state.account) {\n      this.props.setCallbackAfterLogin(callbackAfterLogin);\n      // Show modal to connect account\n      this.openConnectionModal();\n    }\n  }\n\n  getRequiredNetwork = () => {\n\n    const networkId =\n      typeof this.props.config !== \"undefined\" &&\n      typeof this.props.config.requiredNetwork !== \"undefined\"\n        ? this.props.config.requiredNetwork\n        : globalConfigs.network.requiredNetwork;\n\n    let networkName = globalConfigs.network.availableNetworks[networkId] ? globalConfigs.network.availableNetworks[networkId] : 'unknown';\n\n    let requiredNetwork = {\n      name: networkName,\n      id: networkId\n    };\n\n    let network = { ...this.state.network };\n    network.required = requiredNetwork;\n\n    this.setState({ network });\n  }\n\n  getNetworkId = async () => {\n    try {\n      return this.state.web3.eth.net.getId((error, networkId) => {\n        let current = { ...this.state.network.current };\n        current.id = networkId;\n        let network = { ...this.state.network };\n        network.current = current;\n        this.setState({ network });\n      });\n    } catch (error) {\n      this.functionsUtil.customLog(\"Could not get network ID: \", error);\n    }\n  }\n\n  getNetworkName = async () => {\n    try {\n      return this.state.web3.eth.net.getNetworkType((error, networkName) => {\n        let current = { ...this.state.network.current };\n        current.name = networkName;\n        let network = { ...this.state.network };\n        network.current = current;\n        this.setState({ network });\n      });\n    } catch (error) {\n      this.functionsUtil.customLog(\"Could not get network Name: \", error);\n    }\n  }\n\n  checkNetwork = async () => {\n    this.getRequiredNetwork();\n\n    await Promise.all([\n      this.getNetworkId(),\n      this.getNetworkName()\n    ]);\n\n    let network = { ...this.state.network };\n    network.isCorrectNetwork = this.state.network.current.id === this.state.network.required.id;\n\n    // To do, check window.web3.currentProvider.networkVersion to see if Metamask is in the requiredNetwork\n\n    this.setState({ network });\n  }\n\n  contractMethodSendWrapper = async (contractName, contractMethod, params = [], value = null, callback = null, callback_receipt = null, gasLimit = null, txData = null) => {\n    // Is it on the correct network?\n    if (!this.state.network.isCorrectNetwork) {\n      // wrong network modal\n      this.state.modals.methods.openWrongNetworkModal();\n      return false;\n    }\n\n    // Is a wallet connected and verified?\n    if (!this.state.account) {\n      this.openConnectionModal();\n      if (typeof callback === 'function') {\n        callback(null,'account_not_connected');\n      }\n      return false;\n    }\n\n    // Are there a minimum amount of funds?\n    if (this.state.accountBalanceLow) {\n      this.openLowFundsModal();\n      if (typeof callback === 'function') {\n        callback(null,'account_balance_low');\n      }\n      return false;\n    }\n\n    // Is the contract loaded?\n\n    // Create new tx and add to collection\n    // Maybe this needs to get moved out of the wrapper?\n    let transaction = this.createTransaction(txData);\n    transaction.method = contractMethod;\n\n    this.addTransaction(transaction);\n\n    // Add meta data to transaction\n    transaction.type = \"contract\";\n    transaction.status = \"started\";\n    transaction.params = params;\n\n    // Show toast for starting transaction\n    this.updateTransaction(transaction);\n\n    const { account, contracts } = this.state;\n    let contract = contracts.find(c => c.name === contractName);\n    if (!contract) {\n      if (typeof callback === 'function') {\n        callback(null,'contract_not_found');\n      }\n      return this.functionsUtil.customLog(`No contract with name ${contractName}`);\n    }\n\n    contract = contract.contract;\n\n    // Does the method exists?\n    // if (typeof contract.methods[contractMethod] === 'undefined'){\n    //   return false;\n    // }\n\n    let manualConfirmationTimeoutId = null;\n\n    try {\n\n      if (!value){\n        value = this.functionsUtil.BNify(0);\n      }\n\n      this.functionsUtil.customLog('contractMethodSendWrapper',contractName,contract._address,account,contractMethod,params,(value ? { from: account, value } : { from: account }));\n\n      // estimate gas price\n      let gas = await contract.methods[contractMethod](...params)\n        .estimateGas(value ? { from: account, value } : { from: account })\n        .catch(e => console.error(e));\n\n      if (gas) {\n\n        gas = this.functionsUtil.BNify(gas);\n        gas = gas.plus(gas.times(this.functionsUtil.BNify('0.2'))); // Increase 20% of enstimation\n\n        // Check if gas is under the gasLimit param\n        if (gasLimit && gas.lt(this.functionsUtil.BNify(gasLimit))){\n          gas = this.functionsUtil.BNify(gasLimit);\n        }\n\n        // Convert gasLimit toBN with web3 utils\n        gas = this.state.web3.utils.toBN(gas.integerValue(BigNumber.ROUND_FLOOR));\n      }\n\n      const confirmationCallback = (confirmationNumber, receipt) => {\n\n        // this.functionsUtil.customLog('confirmationCallback', confirmationNumber, receipt);\n\n        if (manualConfirmationTimeoutId){\n          window.clearTimeout(manualConfirmationTimeoutId);\n        }\n\n        // this.functionsUtil.customLog('txOnConfirmation', receipt);\n        // Update confirmation count on each subsequent confirmation that's received\n        transaction.confirmationCount += 1;\n\n        const call_callback = !globalConfigs.network.isForked && typeof callback === 'function' && transaction.confirmationCount===1;\n\n        // How many confirmations should be received before informing the user\n        const confidenceThreshold = this.props.config.requiredConfirmations || 1;\n\n        if (transaction.confirmationCount === 1) {\n          // Initial confirmation receipt\n          transaction.status = \"confirmed\";\n        } else if (transaction.confirmationCount < confidenceThreshold) {\n          // Not enough confirmations to match threshold\n        }\n\n        if (transaction.confirmationCount === confidenceThreshold) {\n          // Confirmations match threshold\n          // Check the status from result since we are confident in the result\n          if (receipt.status) {\n            transaction.status = \"success\";\n          } else if (!receipt.status) {\n            transaction.status = \"error\";\n          }\n        } else if (transaction.confirmationCount > confidenceThreshold) {\n          // Confidence threshold met\n        }\n\n\n        if (call_callback){\n          // Update transaction with receipt details\n          if (receipt){\n            transaction.txReceipt = receipt;\n          }\n          transaction.recentEvent = \"confirmation\";\n          this.updateTransaction(transaction);\n          \n          callback(transaction);\n\n          this.functionsUtil.customLog('Confirmed', confirmationNumber, receipt, transaction);\n        }\n      };\n\n      const manualConfirmation = (transactionHash,timeout) => {\n        if (!transactionHash){\n          return false;\n        }\n        this.state.web3.eth.getTransactionReceipt(transactionHash,(err,txReceipt) => {\n          if (txReceipt && txReceipt.status){\n            this.functionsUtil.customLog('Tx manualConfirmation', txReceipt);\n            confirmationCallback(1,txReceipt);\n          } else {\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(transactionHash,timeout) , timeout);\n          }\n        });\n      };\n\n      const receiptCallback = receipt => {\n\n        // this.functionsUtil.customLog('txOnReceipt', receipt);\n\n        if (manualConfirmationTimeoutId){\n          window.clearTimeout(manualConfirmationTimeoutId);\n        }\n\n        // Received receipt, met total number of confirmations\n        if (receipt){\n          transaction.txReceipt = receipt;\n        }\n        transaction.recentEvent = \"receipt\";\n\n        // If the network is forked use the receipt for confirmation\n        if (globalConfigs.network.isForked){\n          transaction.status = \"success\";\n          if (typeof callback === 'function') {\n            callback(transaction);\n          }\n        } else {\n          this.updateTransaction(transaction);\n\n          // Transaction mined, wait for manual confirmation\n          if (receipt.status){\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(receipt.transactionHash,4000), 2000);\n          }\n        }\n      };\n\n      // const networkId = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n      // const common = { customChain:{ chainId: 1, networkId } };\n\n      return contract.methods[contractMethod](...params)\n        .send(value ? { from: account, value, gas } : { from: account, gas })\n        .on(\"transactionHash\", hash => {\n          this.functionsUtil.customLog('txOnTransactionHash', hash);\n\n          if (!hash){\n            this.functionsUtil.customLog('Skip transactionHash due to hash empty', hash);\n            return false;\n          }\n\n          transaction.transactionHash = hash;\n          transaction.status = \"pending\";\n          transaction.recentEvent = \"transactionHash\";\n          this.updateTransaction(transaction);\n\n          if (callback_receipt){\n            callback_receipt(transaction);\n          }\n\n          // Wait for manual confirmation only for mobile\n          if (this.props.isMobile){\n            if (manualConfirmationTimeoutId){\n              window.clearTimeout(manualConfirmationTimeoutId);\n            }\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(hash,60000), 20000);\n          }\n        })\n        .on(\"receipt\", receiptCallback)\n        .on(\"confirmation\", confirmationCallback)\n        .on(\"error\", error => {\n\n          console.log('Tx error',error);\n          \n          const isDeniedTx = error && error.message && typeof error.message.includes === 'function' ? error.message.includes('User denied transaction signature') : false;\n          \n          // Set error on transaction\n          transaction.status = \"error\";\n          transaction.recentEvent = \"error\";\n          this.updateTransaction(transaction);\n\n\n          // Show ToastProvider\n          if (!isDeniedTx){\n            window.toastProvider.addMessage(\"Something went wrong\", {\n              icon: 'Block',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"failure\",\n              colorTheme: 'light',\n              secondaryMessage: \"Please retry\",\n            });\n\n            const isError = error instanceof Error;\n\n            if (typeof error.message !== 'undefined'){\n              this.openTransactionErrorModal(null,error.message);\n            } else if (this.functionsUtil.checkUrlOrigin() && isError){\n              Sentry.captureException(error);\n            }\n          }\n\n          if (typeof callback === 'function') {\n            callback(transaction,error);\n          }\n        });\n    } catch (error) {\n\n      console.log('Tx catch error',error);\n\n      transaction.status = \"error\";\n      this.updateTransaction(transaction);\n\n      // TODO: should this be a custom error? What is the error here?\n      // TODO: determine how to handle error messages globally\n      window.toastProvider.addMessage(\"Something went really wrong, we are sorry\", {\n        icon: 'Block',\n        actionHref: \"\",\n        actionText: \"\",\n        variant: \"failure\",\n        colorTheme: 'light',\n        secondaryMessage: \"Try refreshing the page :(\",\n      });\n\n      const isDeniedTx = error && error.message ? error.message.includes('User denied transaction signature') : false;\n\n      const isError = error instanceof Error;\n      if ( this.functionsUtil.checkUrlOrigin() && isError && !isDeniedTx){\n        Sentry.captureException(error);\n      }\n\n      if (typeof callback === 'function') {\n        // this.functionsUtil.customLog('Tx Failed',error,transaction,typeof callback);\n        callback(transaction,error);\n      }\n\n      return false;\n    }\n  }\n\n  // Create tx\n  createTransaction = (txData=null) => {\n    let transaction = {\n      ...txData\n    };\n    transaction.txReceipt = {};\n    transaction.created = Date.now();\n    transaction.confirmationCount = 0;\n    transaction.status = \"initialized\";\n    transaction.lastUpdated = Date.now();\n    transaction.token = this.props.selectedToken;\n    transaction.strategy = this.props.selectedStrategy;\n    transaction.networkId = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    return transaction;\n  }\n\n  addTransaction = transaction => {\n    const transactions = { ...this.state.transactions };\n    transactions[`tx${transaction.created}`] = transaction;\n    this.setState({ transactions });\n  }\n\n  // Add/update transaction in state\n  updateTransaction = updatedTransaction => {\n    const transactions = { ...this.state.transactions };\n    const transaction = { ...updatedTransaction };\n    transaction.lastUpdated = Date.now();\n    transactions[`tx${updatedTransaction.created}`] = transaction;\n    this.setState({ transactions });\n\n    // this.functionsUtil.customLog('updateTransaction',transactions);\n\n    // Save transactions in localStorage only if pending or succeeded\n    // console.log('updateTransaction',transaction.transactionHash,transaction.status.toLowerCase());\n    if (transaction.transactionHash){\n      // Clear cached data\n      this.functionsUtil.clearCachedData();\n\n      // Store transaction\n      this.functionsUtil.addStoredTransaction(`tx${transaction.created}`,transaction);\n    }\n\n    return transaction;\n  }\n\n  // CONNECTION MODAL METHODS\n  closeConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionModalIsOpen = false;\n    // this.functionsUtil.customLog(\"this.state\", this.state);\n    this.setState({ modals });\n  }\n\n  openConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionModalIsOpen = true;\n    this.setState({ modals: modals });\n  }\n\n  closeConnectionPendingModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    this.setState({ modals });\n  }\n\n  openConnectionPendingModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = true;\n    modals.data.transactionConnectionModalIsOpen = false;\n    modals.data.connectionModalIsOpen = false;\n\n    this.setState({ modals });\n  }\n\n  closeTransactionErrorModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.transactionError = false;\n    this.setState({ modals });\n  }\n\n  openTransactionErrorModal = (e,error) => {\n    if (typeof e !== \"undefined\" && e) {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.transactionError = error;\n\n    this.setState({ modals });\n  }\n\n  closeConnectionErrorModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionError = false;\n    this.setState({ modals });\n  }\n\n  openConnectionErrorModal = (e,error) => {\n    if (typeof e !== \"undefined\" && e) {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n\n    // Handle generic error\n    if (error==='[object Object]'){\n      error = 'Unable to access to the wallet.'\n    }\n\n    // this.functionsUtil.customLog('openConnectionErrorModal',typeof error,typeof error === 'object' ? JSON.stringify(error) : error);\n\n    modals.data.connectionError = error;\n\n    this.setState({ modals });\n  }\n\n  closeUserRejectedConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedConnect = false;\n    this.setState({ modals });\n  }\n\n  openUserRejectedConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedConnect = true;\n    this.setState({ modals });\n  }\n\n  closeNoWeb3BrowserModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWeb3BrowserModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openNoWeb3BrowserModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWeb3BrowserModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeNoWalletModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openNoWalletModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeWrongNetworkModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.wrongNetworkModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openWrongNetworkModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.wrongNetworkModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeLowFundsModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.lowFundsModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openLowFundsModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.lowFundsModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  state = {\n    web3: null,\n    context:null,\n    account: null,\n    contracts: [],\n    biconomy: null,\n    simpleID: null,\n    web3Infura:null,\n    transactions: {},\n    CrispClient: null,\n    tokenDecimals:null,\n    accountBalance: null,\n    web3Subscription: null,\n    accountValidated: null,\n    accountBalanceDAI: null,\n    initWeb3: this.initWeb3,\n    accountBalanceLow: null,\n    accountInizialized:false,\n    subscribedTransactions:{},\n    contractsInitialized:false,\n    initAccount: this.initAccount,\n    accountValidationPending: null,\n    initSimpleID: this.initSimpleID,\n    initContract: this.initContract,\n    checkPreflight: this.checkPreflight,\n    validateAccount: this.validateAccount,\n    rejectValidation: this.rejectValidation,\n    getTokenDecimals: this.getTokenDecimals,\n    getAccountBalance: this.getAccountBalance,\n    initializeContracts: this.initializeContracts,\n    rejectAccountConnect: this.rejectAccountConnect,\n    contractMethodSendWrapper: this.contractMethodSendWrapper,\n    connectAndValidateAccount: this.connectAndValidateAccount,\n    enableUnderlyingWithdraw: this.props.enableUnderlyingWithdraw,\n    network: {\n      current: {},\n      required: {},\n      isCorrectNetwork: null,\n      checkNetwork: this.checkNetwork\n    },\n    modals: {\n      data: {\n        connectionError: null,\n        lowFundsModalIsOpen: null,\n        userRejectedConnect: null,\n        connectionModalIsOpen: null,\n        userRejectedValidation: null,\n        wrongNetworkModalIsOpen: null,\n        accountConnectionPending: null,\n        accountValidationPending: null,\n        transactionConnectionModalIsOpen: null,\n        noWalletModalIsOpen: this.noWalletModalIsOpen,\n        noWeb3BrowserModalIsOpen: this.noWeb3BrowserModalIsOpen,\n      },\n      methods: {\n        openLowFundsModal: this.openLowFundsModal,\n        openNoWalletModal: this.openNoWalletModal,\n        closeNoWalletModal: this.closeNoWalletModal,\n        closeLowFundsModal: this.closeLowFundsModal,\n        openConnectionModal: this.openConnectionModal,\n        closeConnectionModal: this.closeConnectionModal,\n        openWrongNetworkModal: this.openWrongNetworkModal,\n        closeWrongNetworkModal: this.closeWrongNetworkModal,\n        openNoWeb3BrowserModal: this.openNoWeb3BrowserModal,\n        closeNoWeb3BrowserModal: this.closeNoWeb3BrowserModal,\n        openConnectionErrorModal: this.openConnectionErrorModal,\n        closeConnectionErrorModal: this.closeConnectionErrorModal,\n        openTransactionErrorModal: this.openTransactionErrorModal,\n        closeTransactionErrorModal: this.closeTransactionErrorModal,\n        openConnectionPendingModal: this.openConnectionPendingModal,\n        closeConnectionPendingModal: this.closeConnectionPendingModal,\n        openUserRejectedValidationModal: this.openUserRejectedValidationModal,\n        openUserRejectedConnectionModal: this.openUserRejectedConnectionModal,\n        closeUserRejectedValidationModal: this.closeUserRejectedValidationModal,\n        closeUserRejectedConnectionModal: this.closeUserRejectedConnectionModal,\n      }\n    },\n    transaction: {\n      data: {\n        transactions: null\n      },\n      meta: {},\n      methods: {}\n    }\n  }\n\n  render() {\n    const connectionErrorModalOpened = typeof this.state.modals.data.connectionError === 'string' && this.state.modals.data.connectionError.length>0;\n    const transactionErrorModalOpened = typeof this.state.modals.data.transactionError === 'string' && this.state.modals.data.transactionError.length>0;\n    return (\n      <div>\n        <RimbleTransactionContext.Provider\n          {...this.props}\n          value={this.state}\n        />\n        <ConnectionModalUtil\n          {...this.props}\n          modals={this.state.modals}\n          network={this.state.network}\n          account={this.state.account}\n          isMobile={this.props.isMobile}\n          initAccount={this.state.initAccount}\n          setConnector={this.props.setConnector}\n          validateAccount={this.state.validateAccount}\n          accountValidated={this.state.accountValidated}\n          accountConnectionPending={this.state.accountConnectionPending}\n          accountValidationPending={this.state.accountValidationPending}\n        />\n        <TransactionErrorModal\n          modals={this.state.modals}\n          account={this.state.account}\n          context={this.props.context}\n          isOpen={transactionErrorModalOpened}\n        />\n        <ConnectionErrorModal\n          modals={this.state.modals}\n          account={this.state.account}\n          context={this.props.context}\n          isOpen={connectionErrorModalOpened}\n          setConnector={this.props.setConnector}\n        />\n        <NetworkUtil\n          web3={this.state.web3}\n          network={this.state.network}\n        />\n      </div>\n    );\n  }\n}\n\nexport default RimbleTransaction;\n","import React from \"react\";\nimport ExtLink from '../../ExtLink/ExtLink';\nimport FunctionsUtil from '../FunctionsUtil';\nimport { Box, Flex, Image, Text, Link, Icon } from \"rimble-ui\";\n\nimport {\n  Link as RouterLink\n} from \"react-router-dom\";\n\nclass Header extends React.Component {\n  state = {\n\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidMount() {\n\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n\n    this.loadUtils();\n\n    if (this.props.network && !this.props.network.isCorrectNetwork){\n      return false;\n    }\n  }\n\n  render() {\n\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n\n    return (\n      <Box\n        style={{\n          left: '0',\n          right: '0',\n          zIndex: 99,\n          position: 'absolute',\n        }}\n      >\n        <Flex\n          p={2}\n          alignItems={'center'}\n          justifyContent={'center'}\n          backgroundColor={'dark-blue'}\n          flexDirection={['column','row']}\n        >\n          <Text\n            color={'white'}\n            textAlign={'center'}\n          >\n            IDLE Governance Token is now live!\n          </Text>\n          <ExtLink\n            pr={2}\n            py={1}\n            mt={[1,0]}\n            ml={[0,2]}\n            pl={'12px'}\n            color={'white'}\n            style={{\n              display:'flex',\n              borderRadius:'8px',\n              flexDirection:'row',\n              alignItems:'flex-end'\n            }}\n            backgroundColor={'#0037ff'}\n            href={'https://idlefinance.medium.com/idle-governance-is-live-9b55e8f407d7'}\n          >\n            Read More\n            <Icon\n              ml={1}\n              size={'1.3em'}\n              color={'white'}\n              name={'KeyboardArrowRight'}\n            >\n            </Icon>\n          </ExtLink>\n        </Flex>\n        <Flex\n          pt={[3,4]}\n          mx={'auto'}\n          bg={\"transparent\"}\n          width={['98%','100%']}\n          maxWidth={['100%','100em']}\n          alignItems={['center','flex-start']}\n        >\n          <Flex\n            ml={[3, 5]}\n            width={[0.5, 3/12]}\n          >\n            <RouterLink\n              to=\"/\"\n            >\n              <Image\n                position={'relative'}\n                src={'images/logo.svg'}\n                height={['35px','48px']}\n              />\n            </RouterLink>\n          </Flex>\n            <Flex\n              width={[0.5,8/12]}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={\"flex-end\"}\n            >\n              {\n                governanceEnabled && \n                  <Link\n                    mr={4}\n                    fontSize={3}\n                    color={'white'}\n                    hoverColor={'white'}\n                    fontFamily={'sansSerif'}\n                    textAlign={['center','left']}\n                    onClick={ (e) => window.location.hash='#/governance' }\n                  >\n                    Governance\n                  </Link>\n              }\n              {\n                !this.props.isMobile &&\n                  <>\n                    <Link\n                      mr={4}\n                      fontSize={3}\n                      color={'white'}\n                      hoverColor={'white'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                      onClick={(e) => {this.functionsUtil.scrollTo(document.getElementById('contacts').offsetTop,300)}}\n                    >\n                      Contact Us\n                    </Link>\n                    <Link\n                      fontSize={3}\n                      color={'white'}\n                      hoverColor={'white'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                      onClick={(e) => {this.functionsUtil.scrollTo(document.getElementById('faq').offsetTop,300)}}\n                    >\n                      FAQs\n                    </Link>\n                  </>\n              }\n            </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default Header;\n","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nexport default function ScrollToTop() {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return null;\n}","import Footer from '../Footer/Footer';\nimport React, { Component } from 'react';\nimport styles from './PageNotFound.module.scss';\nimport { Box, Flex, Heading, Button } from 'rimble-ui'\nimport Header_styles from '../utilities/components/Header.module.scss';\nimport {\n  Link as RouterLink,\n} from \"react-router-dom\";\n\nclass PageNotFound extends Component {\n  state = {};\n\n  render() {\n    return (\n      <Box>\n        <Box className={styles.headerContainer} px={[3,6]} pt={['2em', '3em']}>\n          <Box className={styles.headerBgFiller}></Box>\n          <Box position={'relative'} zIndex={10}>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"60em\"]} mx={'auto'} textAlign={'center'} pt={['8vh', '8vh']}>\n              <Heading.h1 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.3em'} fontSize={['2.5em',7]} textAlign={'center'} color={'white'}>\n                This page doesn't exist!\n              </Heading.h1>\n              <Heading.h3 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.6em'} fontWeight={2} fontSize={['1.5em',4]} textAlign={'center'} color={'white'}>\n                Sorry, the page you are looking for cannot be found.\n              </Heading.h3>\n              <RouterLink to=\"/\" style={{textDecoration:'none'}}>\n                <Button\n                  className={Header_styles.gradientButton}\n                  borderRadius={4}\n                  size={this.props.isMobile ? 'medium' : 'medium'}\n                  mainColor={'blue'}\n                  contrastColor={'white'}\n                  fontWeight={3}\n                  fontSize={[2,2]}\n                  mx={'auto'}\n                  px={[4,5]}\n                  mt={2}\n                >\n                  GO TO HOMEPAGE\n                </Button>\n              </RouterLink>\n            </Flex>\n          </Box>\n        </Box>\n        <Footer />\n      </Box>\n    );\n  }\n}\n\nexport default PageNotFound;\n","import React from \"react\";\nimport { Box, Flex, Text } from \"rimble-ui\";\n\nclass NetworkOverview extends React.Component {\n  getNetworkCircleColor = () => {\n    let circleColor = \"#333\";\n    if (this.props.network) {\n      switch (this.props.network.id) {\n        case 1:\n          circleColor = \"#56b3ae\";\n          break;\n        case 2:\n          circleColor = \"#000\";\n          break;\n        case 3:\n          circleColor = \"#ed5a8d\";\n          break;\n        case 4:\n          circleColor = \"#efc35c\";\n          break;\n        case 42:\n          circleColor = \"#6a5ff6\";\n          break;\n        default:\n          circleColor = \"#ccc\";\n      }\n    }\n\n    return circleColor;\n  };\n\n  render() {\n    const networkCircle = {\n      borderRadius: \"50%\",\n      backgroundColor: this.getNetworkCircleColor(),\n      height: \"1em\",\n      width: \"1em\"\n    };\n\n    return (\n      <Flex alignItems={\"center\"}>\n        <Box style={networkCircle} mr={2} />\n        <Text style={{ textTransform: \"capitalize\" }}>\n          {this.props.network.name}\n        </Text>\n      </Flex>\n    );\n  }\n}\n\nexport default NetworkOverview;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Icon,\n  Flex,\n  ToastMessage,\n  Box,\n  Button,\n  Link\n} from \"rimble-ui\";\nimport NetworkOverview from \"../utilities/components/NetworkOverview\";\n\nconst DebuggerButtons = props => (\n  <Box mt={4} borderTop={1} borderColor=\"#E8E8E8\" pt={3}>\n    <Heading.h4 textAlign={\"center\"}>Show Modal</Heading.h4>\n    <Button\n      onClick={props.modals.methods.openWrongNetworkModal}\n      size=\"small\"\n      mr={2}\n      mb={2}\n    >\n      Blocking Wrong Network\n    </Button>\n\n    <Button\n      onClick={props.modals.methods.openConnectionModal}\n      size=\"small\"\n      mr={2}\n      mb={2}\n    >\n      Connection\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openConnectionPendingModal}\n      mr={2}\n      mb={2}\n    >\n      Connection Pending\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openUserRejectedConnectionModal}\n      mr={2}\n      mb={2}\n    >\n      Connection Rejected\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={event => {\n        props.modals.methods.openLowFundsModal(event);\n      }}\n      mr={2}\n      mb={2}\n    >\n      Low Funds\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openNoWeb3BrowserModal}\n      mr={2}\n      mb={2}\n    >\n      Not Web3 Browser\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openNoWalletModal}\n      mr={2}\n      mb={2}\n    >\n      No Wallet\n    </Button>\n  </Box>\n);\n\nclass Web3Debugger extends React.Component {\n  render() {\n    return (\n      <Card width={\"600px\"} mx={\"auto\"} px={4}>\n        <Heading.h3 textAlign={\"center\"}>Get Connected</Heading.h3>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            <Icon name=\"Check\" color={\"green\"} mr={2} />\n            <Text>Modern & Web3 Capable Browser</Text>\n          </Flex>\n        </Box>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.web3 ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Browser-connected Wallet</Text>\n          </Flex>\n\n          {!this.props.web3 ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">You do not have a wallet.</Text>\n              </Flex>\n\n              <Link\n                href=\"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                <Button.Outline size=\"small\">\n                  Get MetaMask Extension\n                </Button.Outline>\n              </Link>\n            </Flex>\n          ) : null}\n        </Box>\n\n        {this.props.web3 ? (\n          <Flex\n            py={3}\n            my={3}\n            borderTop={1}\n            borderBottom={1}\n            borderColor={\"#E8E8E8\"}\n            textAlign={\"center\"}\n            justifyContent={\"space-around\"}\n            alignItems={\"center\"}\n          >\n            <Button\n              size=\"small\"\n              onClick={this.props.connectAndValidateAccount}\n              disabled={!this.props.web3}\n            >\n              Connect and verify\n            </Button>\n            <Text>- or -</Text>\n            <Button size=\"small\" disabled>\n              Initiate On-Chain Action\n            </Button>\n          </Flex>\n        ) : null}\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.network.isCorrectNetwork ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Correct Network</Text>\n          </Flex>\n\n          {this.props.web3 && !this.props.network.isCorrectNetwork ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Box>\n                  <Flex alignItems={\"center\"}>\n                    <Text\n                      mr={2}\n                      color=\"#999\"\n                      style={{ textTransform: \"capitalize\" }}\n                    >\n                      Current network:\n                    </Text>\n                    <NetworkOverview network={this.props.network.current} />\n                  </Flex>\n                  <Flex alignItems={\"center\"}>\n                    <Text\n                      mr={2}\n                      color=\"#999\"\n                      style={{ textTransform: \"capitalize\" }}\n                    >\n                      Required network:\n                    </Text>\n                    <NetworkOverview network={this.props.network.required} />\n                  </Flex>\n                </Box>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.checkNetwork}>\n                Check Network\n              </Button.Outline>\n            </Flex>\n          ) : null}\n          {this.props.web3 && this.props.isCorrectNetwork ? (\n            <Flex ml={4} alignItems={\"center\"}>\n              <NetworkOverview network={this.props.network.current} />\n            </Flex>\n          ) : null}\n        </Box>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.account && this.props.accountValidated ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Wallet connected and verified</Text>\n          </Flex>\n\n          {!this.props.account &&\n          this.props.web3 &&\n          !this.props.userRejectedConnect ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">Not connected to this dApp.</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.initAccount}>\n                Connect\n              </Button.Outline>\n            </Flex>\n          ) : null}\n          {this.props.account && this.props.web3 ? (\n            <Flex ml={4} alignItems={\"center\"}>\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n              <Box>\n                <Text color=\"#999\">Connected wallet {this.props.account}</Text>\n                <Text color={this.props.accountBalanceLow ? \"red\" : \"#999\"}>\n                  Account balance {this.props.accountBalance}\n                </Text>\n              </Box>\n            </Flex>\n          ) : null}\n\n          {this.props.userRejectedConnect ? (\n            <Flex ml={4} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Error\" mr={2} color=\"red\" />\n                <Text color=\"red\">User rejected Connect request</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.initAccount}>\n                Connect\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {(this.props.accountValidated === null ||\n            this.props.accountValidated === false) &&\n          this.props.web3 ? (\n            <Flex\n              ml={4}\n              my={1}\n              alignItems={\"center\"}\n              justifyContent={\"space-between\"}\n            >\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">Account not verified</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.validateAccount}>\n                Validate\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {this.props.accountValidated === false ? (\n            <Flex\n              ml={4}\n              my={1}\n              alignItems={\"center\"}\n              justifyContent={\"space-between\"}\n            >\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Error\" mr={2} color=\"red\" />\n                <Text color=\"red\">Account not verified</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.validateAccount}>\n                Validate\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {this.props.userRejectedValidation === false ? (\n            <Flex ml={4}>\n              <Icon name=\"Error\" mr={2} color=\"red\" />\n              <Text color=\"red\">Account not verified</Text>\n            </Flex>\n          ) : null}\n        </Box>\n\n        <DebuggerButtons {...this.props} />\n\n        <ToastMessage.Provider ref={node => (window.toastProvider = node)} />\n      </Card>\n    );\n  }\n}\n\nexport default Web3Debugger;\n","const address = '0xf5dce57282a584d2746faf1593d3121fcac444dc'; // mainnet\nconst abi = [\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"name\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x06fdde03\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"approve\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x095ea7b3\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"reserveFactorMantissa\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x173b9904\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"borrowBalanceCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x17bfdfbc\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalSupply\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x18160ddd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"exchangeRateStored\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x182df0f5\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"src\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"dst\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transferFrom\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x23b872dd\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"pendingAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x26782247\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"decimals\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x313ce567\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOfUnderlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x3af9e669\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"getCash\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x3b1d21a2\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newComptroller\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setComptroller\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x4576b5db\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalBorrows\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x47bd3718\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"comptroller\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x5fe3b567\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"reduceAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"_reduceReserves\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x601a0bf1\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"initialExchangeRateMantissa\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x675d972c\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"accrualBlockNumber\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x6c540baf\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"underlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x6f307dc3\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOf\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x70a08231\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"totalBorrowsCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x73acee98\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalReserves\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x8f840ddd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"symbol\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x95d89b41\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"borrowBalanceStored\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x95dd9193\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"accrueInterest\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa6afed95\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"dst\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transfer\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa9059cbb\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"borrowIndex\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xaa5af0fd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"supplyRatePerBlock\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xae9d70b0\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"liquidator\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"seizeTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"seize\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xb2a02ff1\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newPendingAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setPendingAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xb71d1a0c\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"exchangeRateCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xbd6d894d\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"getAccountSnapshot\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xc37f68e2\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"allowance\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xdd62ed3e\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"_acceptAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xe9c714f2\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newInterestRateModel\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setInterestRateModel\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf2b3abbd\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"interestRateModel\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf3fdb15a\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"admin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf851a440\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"borrowRatePerBlock\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf8f9da28\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"_setReserveFactor\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xfca7820b\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"isCToken\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xfe9c44ae\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"name\": \"underlying_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"comptroller_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"interestRateModel_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"initialExchangeRateMantissa_\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"name_\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"symbol_\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"decimals_\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"constructor\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"constructor\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"interestAccumulated\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrowIndex\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"AccrueInterest\",\n    \"signature\": \"0x875352fb3fadeb8c0be7cbbe8ff761b308fa7033470cd0287f02f3436fd76cb9\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"minter\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"mintAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"mintTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Mint\",\n    \"signature\": \"0x4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"redeemer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"redeemAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"redeemTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Redeem\",\n    \"signature\": \"0xe5b754fb1abb7f01b499791d0b820ae3b6af3424ac1c59768edb53f4ec31a929\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrowAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"accountBorrows\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Borrow\",\n    \"signature\": \"0x13ed6866d4e1ee6da46f845c46d7e54120883d75c5ea9a2dacc1c4ca8984ab80\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"payer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"accountBorrows\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"RepayBorrow\",\n    \"signature\": \"0x1a2a22cb034d26d1854bdc6666a5b91fe25efbbb5dcad3b0355478d6f5c362a1\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"liquidator\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"cTokenCollateral\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"seizeTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"LiquidateBorrow\",\n    \"signature\": \"0x298637f684da70674f26509b10f07ec2fbc77a335ab1e7d6215a4b2484d8bb52\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldPendingAdmin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newPendingAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewPendingAdmin\",\n    \"signature\": \"0xca4f2f25d0898edd99413412fb94012f9e54ec8142f9b093e7720646a95b16a9\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldAdmin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewAdmin\",\n    \"signature\": \"0xf9ffabca9c8276e99321725bcb43fb076a6c66a54b7f21c4e8146d8519b417dc\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldComptroller\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newComptroller\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewComptroller\",\n    \"signature\": \"0x7ac369dbd14fa5ea3f473ed67cc9d598964a77501540ba6751eb0b3decf5870d\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldInterestRateModel\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newInterestRateModel\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewMarketInterestRateModel\",\n    \"signature\": \"0xedffc32e068c7c95dfd4bdfd5c4d939a084d6b11c4199eac8436ed234d72f926\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"NewReserveFactor\",\n    \"signature\": \"0xaaa68312e2ea9d50e16af5068410ab56e1a1fd06037b1a35664812c30f821460\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"admin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"reduceAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newTotalReserves\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"ReservesReduced\",\n    \"signature\": \"0x3bad0c59cf2f06e7314077049f48a93578cd16f5ef92329f1dab1420a99c177e\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"error\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"info\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"detail\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Failure\",\n    \"signature\": \"0x45b96fe442630264581b197e84bbada861235052c5a1aadfff9ea4e40a969aa0\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"name\": \"from\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"name\": \"to\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Transfer\",\n    \"signature\": \"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Approval\",\n    \"signature\": \"0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\",\n    \"type\": \"event\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"mintAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"mint\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa0712d68\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"redeemTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"redeem\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xdb006a75\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"redeemAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"redeemUnderlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x852a12e3\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrowAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"borrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xc5ebeaec\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"repayBorrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x0e752702\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"repayBorrowBehalf\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x2608f818\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"cTokenCollateral\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"liquidateBorrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf5e3c462\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }\n];\nexport default { address, abi };\n","const address = '0x5592EC0cfb4dbc12D3aB100b257153436a1f0FEa'; // rinkeby\nconst abi = [{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"stop\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"owner_\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"name_\",\"type\":\"bytes32\"}],\"name\":\"setName\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"stopped\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"authority_\",\"type\":\"address\"}],\"name\":\"setAuthority\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"push\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"move\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"start\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"authority\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"pull\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"symbol_\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"authority\",\"type\":\"address\"}],\"name\":\"LogSetAuthority\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"LogSetOwner\",\"type\":\"event\"},{\"anonymous\":true,\"inputs\":[{\"indexed\":true,\"name\":\"sig\",\"type\":\"bytes4\"},{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"foo\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"bar\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"fax\",\"type\":\"bytes\"}],\"name\":\"LogNote\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"dst\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}];\nexport default { address, abi };\n","import DAI from '../abis/tokens/DAI.json';\nimport CHAI from '../abis/chai/CHAI.json';\nimport cToken from '../abis/compound/cDAI';\nimport WETH from '../abis/tokens/WETH.json';\nimport USDC from '../abis/tokens/USDC.json';\nimport ERC20 from '../abis/tokens/ERC20.js';\nimport aToken from '../abis/aave/AToken.json';\nimport yToken from '../abis/dydx/yToken.json';\nimport iToken from '../abis/fulcrum/iToken.json';\nimport IdleTokenV3 from '../contracts/IdleTokenV3.json';\nimport IdleTokenV4 from '../contracts/IdleTokenV4.json';\nimport IdleConverterPersonalSignV4 from '../contracts/IdleConverterPersonalSignV4.json';\n\nconst availableTokens = {\n  42:{\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x4f96fe3b7a6cf9725f59d353f723c1bdb64ca6aa',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x295CA5bC5153698162dDbcE5dF50E436a58BA21e',\n        },\n        protocols:[\n          {\n            decimals:28,\n            token:'cDAI',\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0xf0d0eb522cfa50b716b3b1604c4f0fa6f04376ad',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          }\n        ]\n      },\n      USDC:{\n        abi:USDC,\n        token:'USDC',\n        decimals:6,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0xb7a4f3e9097c08da09517b5ab877f7a917224ede',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        ramp:{\n          swapAsset:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x0de23D3bc385a74E2196cfE827C8a640B8774B9f',\n        },\n        protocols:[\n          {\n            decimals:16,\n            enabled:true,\n            token:'cUSDC',\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x4a92e71227d294f041bd82dd8f78591b75140d63',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          }\n        ]\n      },\n    },\n  },\n  1337:{\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your DAI with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleDAI',\n            name:'idleDAIYieldV3',\n            address:'0x78751b12da02728f467a44eac40f5cbc16bd7934',\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token:'yxDAIOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            token:'idleDAI',\n            abi:IdleConverterPersonalSignV4,\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token:'cDAI',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:iToken,\n            enabled:false,\n            name:'fulcrum',\n            address:'0x493c57c4763932315a328269e1adad09653b9081',\n            token:'iDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            address:'0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token:'aDAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:CHAI,\n            name:'dsr',\n            enabled:true,\n            address:'0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token:'CHAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:yToken,\n            name:'dydx',\n            enabled:true,\n            address:'0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token:'yxDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDC:{\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        abi:USDC,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x5274891bEC421B39D23760c04A6755eCB444797C',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your USDC with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDC',\n            name:'idleUSDCYieldV3',\n            address:'0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6'\n          },\n          oldProtocols:[\n            {\n              abi:yToken,\n              name:'dydx',\n              enabled:true,\n              address:'0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token:'yxUSDCOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token:'cUSDC',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token:'iUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token:'aUSDC',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token:'yxUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      WETH:{\n        abi:WETH,\n        token:'WETH',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WETH'\n        },\n        ramp:{\n          swapAsset:'WETH'\n        },\n        defiPrime:{\n          token:'weth'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWETHYield',\n          address:'0xC8E6CA6E96a326dC448307A5fDE90a0b21fd7f80',\n        },\n        protocols:[\n          {\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x4Ddc2D193948926D02f9B1fE9e1daa0718270ED5',\n            token:'cETH',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            address:'0x030bA81f1c18d280636F32af80b9AAd02Cf0854e',\n            token:'aWETH',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n    }\n  },\n  1:{ // Mainnet\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your DAI with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleDAI',\n            name:'idleDAIYieldV3',\n            address:'0x78751b12da02728f467a44eac40f5cbc16bd7934',\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token:'yxDAIOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            token:'idleDAI',\n            abi:IdleConverterPersonalSignV4,\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token:'cDAI',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:iToken,\n            enabled:false,\n            name:'fulcrum',\n            address:'0x493c57c4763932315a328269e1adad09653b9081',\n            token:'iDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            address:'0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token:'aDAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            address:'0x028171bCA77440897B824Ca71D1c56caC55b68A3',\n            token:'aDAIv2',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:CHAI,\n            name:'dsr',\n            enabled:true,\n            address:'0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token:'CHAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:yToken,\n            name:'dydx',\n            enabled:true,\n            address:'0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token:'yxDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDC:{\n        abi:USDC,\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x5274891bEC421B39D23760c04A6755eCB444797C',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your USDC with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDC',\n            name:'idleUSDCYieldV3',\n            address:'0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6'\n          },\n          oldProtocols:[\n            {\n              abi:yToken,\n              name:'dydx',\n              enabled:true,\n              address:'0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token:'yxUSDCOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token:'cUSDC',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token:'iUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token:'aUSDC',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            decimals:18,\n            enabled:true,\n            name:'aavev2',\n            token:'aUSDCv2',\n            address:'0xBcca60bB61934080951369a648Fb03DF4F96263C',\n            functions:{\n              \n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token:'yxUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDT:{\n        decimals:6,\n        token:'USDT',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre:{\n          destCurrency:'USDT'\n        },\n        defiPrime:{\n          token:'usdt'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDTYield',\n          address:'0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your USDT with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDT',\n            name:'idleUSDTYieldV3',\n            address:'0x63D27B3DA94A9E871222CB0A32232674B02D2f2D'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDT',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token:'cUSDT',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token:'iUSDT',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token:'aUSDT',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            decimals:18,\n            name:'aavev2',\n            enabled:true,\n            token:'aUSDTv2',\n            address:'0x3ed3b47dd13ec9a98b44e6204a523e766b225811',\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      SUSD:{\n        decimals:18,\n        token:'SUSD',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        skipMintForDeposit:false,\n        color:'hsl(250, 31%, 15%)',\n        // icon:'images/tokens/SUSD.svg',\n        address:'0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n        wyre:{\n          destCurrency:'SUSD'\n        },\n        defiPrime:{\n          token:'susd'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleSUSDYield',\n          address:'0xf52cdcd458bf455aed77751743180ec4a595fd3f',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your SUSD with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleSUSD',\n            name:'idleSUSDYieldV3',\n            address:'0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleSUSD',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x625aE63000f46200499120B906716420bd059240',\n            token:'aSUSD',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            name:'aavev2',\n            enabled:true,\n            abi:aToken,\n            address:'0x6c5024cd4f8a59110119c56f8933403a539555eb',\n            token:'aSUSDv2',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      TUSD:{\n        decimals:18,\n        token:'TUSD',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        skipMintForDeposit:false,\n        color:'hsl(217, 100%, 20%)',\n        address:'0x0000000000085d4780b73119b644ae5ecd22b376',\n        wyre:{\n          destCurrency:'TUSD'\n        },\n        defiPrime:{\n          token:'tusd'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleTUSDYield',\n          address:'0xc278041fDD8249FE4c1Aad1193876857EEa3D68c',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your TUSD with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleTUSD',\n            name:'idleTUSDYieldV3',\n            address:'0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleTUSD',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x4da9b813057d04baef4e5800e36083717b4a0341',\n            token:'aTUSD',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            enabled:true,\n            name:'aavev2',\n            token:'aTUSDv2',\n            address:'0x101cc05f4A51C0319f570d5E146a8C625198e636',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      WETH:{\n        abi:WETH,\n        token:'WETH',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WETH'\n        },\n        ramp:{\n          swapAsset:'WETH'\n        },\n        defiPrime:{\n          token:'weth'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWETHYield',\n          address:'0xC8E6CA6E96a326dC448307A5fDE90a0b21fd7f80',\n        },\n        protocols:[\n          {\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x4Ddc2D193948926D02f9B1fE9e1daa0718270ED5',\n            token:'cETH',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            address:'0x030bA81f1c18d280636F32af80b9AAd02Cf0854e',\n            token:'aWETH',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n      WBTC:{\n        decimals:8,\n        token:'WBTC',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(29, 81%, 59%)',\n        address:'0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WBTC'\n        },\n        defiPrime:{\n          token:'wbtc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWBTCYield',\n          address:'0x8C81121B15197fA0eEaEE1DC75533419DcfD3151',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your WBTC with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleWBTC',\n            name:'idleWBTCYieldV3',\n            address:'0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleWBTC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            enabled:true,\n            token:'cWBTC',\n            abi:cToken.abi,\n            name:'compound',\n            address:'0xc11b1268c1a384e55c48c2391d8d480264a3a7f4',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:iToken,\n            decimals:18,\n            token:'iWBTC',\n            enabled:false,\n            name:'fulcrum',\n            address:'0xba9262578efef8b3aff7f60cd629d6cc8859c8b5',\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            token:'aWBTC',\n            address:'0xfc4b8ed459e00e5400be803a9bb3954234fd50e3',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            enabled:true,\n            name:'aavev2',\n            token:'aWBTCv2',\n            address:'0x9ff58f4fFB29fA2266Ab25e75e2A8b3503311656',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      }\n    },\n    risk:{\n      DAI:{\n        abi:DAI,\n        decimals:18,\n        token:'DAI',\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAISafe',\n          address:'0xa14ea0e11121e6e951e87c66afe460a00bcd6a16'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleDAI',\n            name:'idleDAISafeV3',\n            address:'0x1846bdfDB6A0f5c473dEc610144513bd071999fB'\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token:'yxDAIOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleDAI',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token:'cDAI',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0x493c57c4763932315a328269e1adad09653b9081',\n            token:'iDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token:'aDAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            name:'dsr',\n            enabled:true,\n            abi:CHAI,\n            address:'0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token:'CHAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token:'yxDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDC:{\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCSafe',\n          address:'0x3391bc034f2935ef0e1e41619445f998b2680d35'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDC',\n            name:'idleUSDCSafeV3',\n            address:'0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token:'yxUSDCOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token:'cUSDC',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token:'iUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token:'aUSDC',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token:'yxUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDT:{\n        decimals:6,\n        token:'USDT',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre:{\n          destCurrency:'USDT'\n        },\n        defiPrime:{\n          token:'usdt'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDTSafe',\n          address:'0x28fAc5334C9f7262b3A3Fe707e250E01053e07b5'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDT',\n            name:'idleUSDTSafeV3',\n            address:'0x42740698959761baf1b06baa51efbd88cb1d862b'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleDAI',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token:'cUSDT',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token:'iUSDT',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token:'aUSDT',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      }\n    }\n  }\n};\n\nexport default availableTokens;","const TransactionToastMessages = {\n    initialized: {\n      message: \"{action} request initialized\",\n      secondaryMessage: \"Confirm with your wallet provider\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"default\",\n      icon: \"InfoOutline\"\n    },\n    started: {\n      message: \"{action} request submitted\",\n      secondaryMessage: \"Confirm with your wallet provider\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"default\",\n      icon: \"InfoOutline\"\n    },\n    pending: {\n      message: \"Processing {action} request...\",\n      secondaryMessage: \"This may take a few minutes\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"processing\",\n      icon: \"InfoOutline\"\n    },\n    confirmed: {\n      message: \"First block confirmed\",\n      secondaryMessage: \"Your {action} request is in progress\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"processing\",\n      icon: 'CheckCircle'\n    },\n    success: {\n      message: \"{action} request completed\",\n      variant: \"success\",\n      icon: 'CheckCircle'\n    },\n    error: {\n      message: \"{action} request failed\",\n      secondaryMessage: \"Could not complete transaction.\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"failure\",\n      icon: \"Block\"\n    }\n  };\n\n  export default TransactionToastMessages;\n","import React from \"react\";\nimport { ToastMessage } from \"rimble-ui\";\nimport TransactionToastMessages from \"./TransactionToastMessages\";\n\nclass TransactionToastUtil extends React.Component {\n  // Determines if collections are same size\n  collectionHasNewObject = (prevCollection, currentCollection) => {\n    return (\n      typeof prevCollection === \"undefined\" ||\n      Object.keys(prevCollection).length !==\n        Object.keys(currentCollection).length\n    );\n  };\n\n  // Returns object from currentCollection that doesn't exist in prevCollection\n  getNewObjectFromCollection = (prevCollection, currentCollection) => {\n    if (typeof prevCollection !== \"undefined\") {\n      const objectKey = Object.keys(currentCollection).filter(key => {\n        return !Object.keys(prevCollection).includes(key);\n      });\n      return currentCollection[objectKey];\n    } else {\n      return Object.keys(currentCollection).map(key => {\n        return currentCollection[key];\n      });\n    }\n  };\n\n  // Compare two collections of objects, return single object from current collection that differs from prev collection\n  getUpdatedObjectFromCollection = (prevCollection, currentCollection) => {\n    const updatedTransaction = Object.keys(prevCollection)\n      .map(key => {\n        if (\n          prevCollection[key].lastUpdated !== currentCollection[key].lastUpdated\n        ) {\n          return currentCollection[key];\n        } else {\n          return null;\n        }\n      })\n      .filter(object => object !== null);\n    return updatedTransaction[0];\n  };\n\n  // Returns an transaction from a collection based on a given identifier\n  getTransactionFromCollection = (identifier, collection) => {\n    const object = collection[`tx${identifier}`];\n    return object;\n  };\n\n  // Returns either a new object or finds an updated object in a collection against a previous collection\n  getUpdatedTransaction = (prevCollection, currentCollection) => {\n    let tx = null;\n    let currentTx = {};\n    let prevTx = {};\n\n    if (this.collectionHasNewObject(prevCollection, currentCollection)) {\n      tx = this.getNewObjectFromCollection(prevCollection, currentCollection);\n    } else {\n      currentTx = this.getUpdatedObjectFromCollection(\n        prevCollection,\n        currentCollection\n      );\n      if (currentTx) {\n        prevTx = this.getTransactionFromCollection(\n          currentTx.created,\n          prevCollection\n        );\n      } else {\n        return false;\n      }\n\n      if (currentTx.status !== prevTx.status) {\n        tx = currentTx;\n      }\n    }\n    return tx;\n  };\n\n  // Check for updates to the transactions collection\n  processTransactionUpdates = prevProps => {\n    let tx = null;\n    if (Object.keys(this.props.transactions).length) {\n      tx = this.getUpdatedTransaction(\n        prevProps.transactions,\n        this.props.transactions\n      );\n    }\n\n    if (tx) {\n      this.showTransactionToast(tx);\n    }\n  };\n\n  showTransactionToast = transaction => {\n    // console.log(\"showTransactionToast: \", { ...transaction });\n    // Get text info for toast\n    let toastMeta = this.getTransactionToastMeta(transaction);\n    toastMeta.colorTheme = this.props.themeMode;\n    toastMeta.closeElem = true;\n    // console.log('toastMeta',toastMeta);\n\n    // Show toast\n    window.toastProvider.addMessage(\".\", toastMeta);\n  };\n\n  getTransactionToastMeta = transaction => {\n    let transactionToastMeta = {};\n    let status = transaction.status;\n\n    switch (status) {\n      case \"initialized\":\n        transactionToastMeta = TransactionToastMessages.initialized;\n        break;\n      case \"started\":\n        transactionToastMeta = TransactionToastMessages.started;\n        break;\n      case \"pending\":\n        transactionToastMeta = TransactionToastMessages.pending;\n        break;\n      case \"confirmed\":\n        transactionToastMeta = TransactionToastMessages.confirmed;\n        break;\n      case \"success\":\n        transactionToastMeta = TransactionToastMessages.success;\n        break;\n      case \"error\":\n        transactionToastMeta = TransactionToastMessages.error;\n        break;\n      default:\n        // do nothing\n        break;\n    }\n\n    let transactionAction = '';\n    switch (transaction.method){\n      case 'redeemIdleToken':\n        transactionAction = 'Redeem';\n      break;\n      case 'redeemGovTokens':\n        transactionAction = 'Redeem (Gov Tokens)';\n      break;\n      case 'mintIdleToken':\n      case 'mintIdleTokensProxy':\n        transactionAction = 'Lending';\n      break;\n      case 'migrateFromToIdle':\n      case 'migrateFromCompoundToIdle':\n      case 'migrateFromFulcrumToIdle':\n      case 'migrateFromAaveToIdle':\n      case 'migrateFromIearnToIdle':\n      case 'bridgeIdleV1ToIdleV2':\n        transactionAction = 'Migration';\n      break;\n      case 'executeMetaTransaction':\n        transactionAction = 'Meta-Tx';\n      break;\n      case 'approve':\n        transactionAction = 'Approve';\n      break;\n      case 'rebalance':\n        transactionAction = 'Rebalance';\n      break;\n      default:\n        transactionAction = transaction.method.charAt(0).toUpperCase() + transaction.method.substr(1);\n      break;\n    }\n\n    transactionToastMeta = JSON.parse(JSON.stringify(transactionToastMeta));\n\n    let newMessage = transactionToastMeta.message.replace('{action}',transactionAction);\n    newMessage = newMessage.charAt(0).toUpperCase() + newMessage.slice(1);\n    transactionToastMeta.message = newMessage;\n    transactionToastMeta.closeElem = true;\n    transactionToastMeta.colorTheme = this.props.themeMode;\n\n    return transactionToastMeta;\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    this.processTransactionUpdates(prevProps);\n  }\n\n  render() {\n    return (\n      <div>\n        <ToastMessage.Provider ref={node => (window.toastProvider = node)} />\n      </div>\n    );\n  }\n}\n\nexport default TransactionToastUtil;\n","import Web3 from \"web3\";\nimport jQuery from 'jquery';\nimport theme from \"../theme\";\nimport Tos from \"../Tos/Tos\";\nimport themeDark from \"../theme-dark\";\nimport connectors from './connectors';\nimport Web3Provider from 'web3-react';\nimport { Web3Consumer } from 'web3-react';\nimport CookieConsent from \"react-cookie-consent\";\nimport RimbleWeb3 from \"../utilities/RimbleWeb3\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport React, { Component, Suspense } from \"react\";\nimport GeneralUtil from \"../utilities/GeneralUtil\";\nimport Header from \"../utilities/components/Header\";\nimport globalConfigs from '../configs/globalConfigs';\nimport ScrollToTop from \"../ScrollToTop/ScrollToTop\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport PageNotFound from \"../PageNotFound/PageNotFound\";\nimport Web3Debugger from \"../Web3Debugger/Web3Debugger\";\nimport availableTokens from '../configs/availableTokens';\nimport TransactionToastUtil from \"../utilities/TransactionToastUtil\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { ThemeProvider, Box, Text, Link, Image, Flex } from 'rimble-ui';\n\n// Lazy Loading\nconst Landing = React.lazy(() => import(\"../Landing/Landing\"));\nconst Dashboard = React.lazy(() => import('../Dashboard/Dashboard'));\nconst Governance = React.lazy(() => import('../Governance/Governance'));\n\nclass App extends Component {\n  state = {\n    cachedData:{},\n    buyToken: null,\n    selectedTab: '1',\n    route: \"default\", // or 'onboarding'\n    themeMode:'light',\n    connecting: false,\n    tokenConfig: null,\n    genericError: null,\n    customAddress: null,\n    connectorName: null,\n    selectedToken: null,\n    selectedTheme:theme,\n    currentSection:null,\n    walletProvider: null,\n    availableTokens: null,\n    buyModalOpened: false,\n    selectedStrategy: null,\n    toastMessageProps: null,\n    callbackAfterLogin: null,\n    width: window.innerWidth,\n    availableStrategies: null,\n    height: window.innerHeight,\n    unsubscribeFromHistory: null,\n    enableUnderlyingWithdraw: false,\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  closeToastMessage = (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    this.setState({\n      toastMessageProps:null\n    });\n  }\n\n  showToastMessage = (props) => {\n    this.setState({\n      toastMessageProps:props\n    });\n  }\n\n  processCustomParam = (props,prevProps) => {\n    // const params = props ? props.match.params : null;\n    // const prevParams = prevProps ? prevProps.match.params : null;\n\n    // Reset params\n    /*\n    if ( prevParams && params && prevParams.customParam !== params.customParam && (!params || !params.customParam || params.customParam === undefined)){\n      this.setState({\n        customAddress:null,\n        enableUnderlyingWithdraw:false\n      });\n    } else if (params && typeof params.customParam === 'string') {\n      // Check if custom address\n      if (params.customParam.toLowerCase().match(/0x[\\w]{40}/) && this.state.customAddress !== params.customParam){\n        this.setCustomAddress(params.customParam);\n      } else if (params && params.customParam === 'withdraw' && !this.state.enableUnderlyingWithdraw){\n        this.setState({\n          customAddress:null,\n          enableUnderlyingWithdraw:true\n        });\n      }\n    }\n    */\n  }\n\n  clearCachedData = () => {\n    this.functionsUtil.setLocalStorage('cachedData',{},true);\n    this.setState({\n      cachedData:{}\n    });\n    return true;\n  }\n\n  setCachedData = (key,data,TTL=null,useLocalStorage=false) => {\n\n    key = key.toLowerCase();\n    const cachedKeyFound = this.state.cachedData[key];\n    const currentTime = parseInt(Date.now()/1000);\n\n    const update_key = !cachedKeyFound || ( (!cachedKeyFound.expirationDate || cachedKeyFound.expirationDate>=currentTime) || JSON.stringify(cachedKeyFound.data) !== JSON.stringify(data));\n\n    let output = false;\n\n    if (update_key){\n      const expirationDate = TTL ? currentTime+(TTL) : null;\n\n      // Save cached data in local storage\n      if (useLocalStorage){\n        let storedCachedData = this.functionsUtil.getStoredItem('cachedData');\n        if (!storedCachedData){\n          storedCachedData = {};\n        }\n        storedCachedData = {\n          ...storedCachedData,\n          [key]:{\n            data,\n            expirationDate\n          }\n        };\n        // console.log('STORED CACHE - INSERT KEY',key,data);\n        this.functionsUtil.setLocalStorage('cachedData',storedCachedData,true);\n      }\n\n      // Set new cached data state\n      this.setState((prevState) => ({\n        cachedData: {\n          ...prevState.cachedData,\n          [key]:{\n            data,\n            expirationDate\n          }\n        }\n      }));\n\n      output = true;\n    }\n\n    return output;\n  }\n\n  setCallbackAfterLogin = (callbackAfterLogin) => {\n    this.setState({\n      callbackAfterLogin\n    });\n  }\n\n  setCustomAddress = (customAddress) => {\n    // Reset customAddress if not well formatted\n    if (customAddress && !customAddress.toLowerCase().match(/0x[\\w]{40}/)){\n      customAddress = null;\n    }\n\n    if (customAddress !== this.state.customAddress){\n      this.setState({\n        customAddress,\n        enableUnderlyingWithdraw:false\n      });\n    }\n  }\n\n  async selectTab(e, tabIndex) {\n    return this.setState(state => ({...state, selectedTab: tabIndex}));\n  }\n\n  async loadAvailableTokens() {\n    const newState = {};\n    const availableStrategies = {};\n    const requiredNetwork = globalConfigs.network.requiredNetwork;\n\n    // Load available strategies\n    Object.keys(availableTokens[requiredNetwork]).forEach((strategy) => {\n      availableStrategies[strategy] = availableTokens[requiredNetwork][strategy];\n    });\n\n    newState.availableStrategies = availableStrategies;\n\n    // Load strategy\n    const selectedStrategy = this.state.selectedStrategy;\n    if (selectedStrategy && this.state.availableStrategies[selectedStrategy]){\n      newState.availableTokens = this.state.availableStrategies[selectedStrategy];\n\n      // Load token\n      const selectedToken = this.state.selectedToken;\n      if (selectedToken && newState.availableTokens[selectedToken]){\n        newState.tokenConfig = newState.availableTokens[selectedToken];\n      }\n    }\n\n    // console.log('loadAvailableTokens',newState);\n\n    await this.setState(newState);\n  }\n\n  async setStrategyToken(selectedStrategy,selectedToken){\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    const newState = {\n      tokenConfig:!selectedToken ? null : this.state.tokenConfig,\n      availableTokens:!selectedToken ? null : this.state.availableTokens,\n      selectedToken:!selectedToken ? selectedToken :this.state.selectedToken,\n      selectedStrategy:!selectedStrategy ? selectedStrategy :this.state.selectedStrategy,\n    };\n\n    if (selectedStrategy && this.state.availableStrategies && selectedStrategy !== this.state.selectedStrategy && Object.keys(this.state.availableStrategies).includes(selectedStrategy.toLowerCase())){\n      newState.selectedStrategy = selectedStrategy.toLowerCase();\n    }\n\n    if (selectedToken && selectedToken !== this.state.selectedToken) {\n      if ( this.state.availableTokens && Object.keys(this.state.availableTokens).includes(selectedToken.toUpperCase()) ){\n        newState.selectedToken = selectedToken.toUpperCase();\n        newState.tokenConfig = this.state.availableTokens[selectedToken];\n      } else if (this.state.availableStrategies && Object.keys(this.state.availableStrategies[selectedStrategy]).includes(selectedToken.toUpperCase())) {\n        newState.selectedToken = selectedToken.toUpperCase();\n        newState.tokenConfig = this.state.availableStrategies[selectedStrategy][newState.selectedToken];\n        newState.availableTokens = this.state.availableStrategies[selectedStrategy];\n      }\n    }\n\n    // console.log('setStrategyToken',newState);\n\n    await this.setState(newState,callback);\n  }\n\n  async setStrategy(selectedStrategy) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    if (selectedStrategy && selectedStrategy !== this.state.selectedStrategy && Object.keys(this.state.availableStrategies).includes(selectedStrategy.toLowerCase())){\n      selectedStrategy = selectedStrategy.toLowerCase();\n      await this.setState({\n        selectedStrategy\n      },callback);\n    } else if (!selectedStrategy) {\n      await this.setState({\n        selectedStrategy\n      },callback);\n    }\n  }\n\n  async setToken(selectedToken) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    if (selectedToken && selectedToken !== this.state.selectedToken && Object.keys(this.state.availableTokens).includes(selectedToken.toUpperCase())){\n      selectedToken = selectedToken.toUpperCase();\n      const newState = {\n        selectedToken\n      };\n      newState.tokenConfig = this.state.availableTokens[selectedToken];\n      await this.setState(newState,callback);\n    } else if(!selectedToken) {\n      await this.setState({\n        selectedToken,\n        tokenConfig:null\n      },callback);\n    }\n  }\n\n  async componentWillMount() {\n\n    this.loadUtils();\n\n    window.BNify = this.functionsUtil.BNify;\n\n    // Suppress warnings and errors in production\n    const isProduction = window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n    if (isProduction){\n      window.console.error = () => {};\n      window.console.warn = () => {};\n    }\n\n    window.jQuery = jQuery;\n\n    if (window.localStorage){\n      this.functionsUtil.removeStoredItem('context');\n\n      // Clear all localStorage data except walletProvider and connectorName if version has changed\n      const version = this.functionsUtil.getStoredItem('version',false);\n      if (version !== globalConfigs.version){\n        this.functionsUtil.clearStoredData(['walletProvider','connectorName']);\n        this.functionsUtil.setLocalStorage('version',globalConfigs.version);\n      }\n    }\n\n    const themeMode = this.functionsUtil.getStoredItem('themeMode',false);\n    if (themeMode){\n      this.setThemeMode(themeMode);\n    }\n\n    window.closeIframe = (w) => {\n      const iFrames = document.getElementsByTagName('iframe');\n      for (let i=0;i<iFrames.length;i++){\n        const iframe = iFrames[i];\n        if (iframe.contentWindow === w){\n          window.jQuery(iframe).parents('.iframe-container')[0].remove();\n        }\n      }\n    }\n\n    window.addEventListener('resize', this.handleWindowSizeChange);\n\n    this.loadCustomAddress();\n    this.loadAvailableTokens();\n  }\n\n  loadCustomAddress(){\n    if (!this.state.customAddress){\n      const walletProvider = this.functionsUtil.getWalletProvider('Infura');\n      if (walletProvider === 'custom'){\n        const customAddress = this.functionsUtil.getCustomAddress();\n        if (customAddress && customAddress !== this.state.customAddress){\n          this.setState({\n            customAddress\n          });\n        }\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n\n  componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const currentSectionChanged = prevState.currentSection !== this.state.currentSection;\n    if (currentSectionChanged){\n      if (this.state.currentSection === 'landing'){\n        this.setThemeMode('light',false);\n      } else {\n        // Get stored Mode\n        const themeMode = this.functionsUtil.getStoredItem('themeMode',false) || this.functionsUtil.getGlobalConfig(['dashboard','theme','mode']);\n        this.setThemeMode(themeMode);\n      }\n    }\n\n    const tokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const strategyChanged = prevState.selectedStrategy !== this.state.selectedStrategy;\n\n    if (tokenChanged || strategyChanged){\n      this.loadAvailableTokens();\n    }\n  }\n\n  componentDidMount() {\n\n    // Close iFrame\n    if (window.self !== window.top && window.top.location.href.indexOf(globalConfigs.baseURL) !== -1 && typeof window.parent.closeIframe === 'function' ){\n      window.parent.closeIframe(window.self);\n    }\n\n    window.showToastMessage = this.showToastMessage;\n    window.closeToastMessage = this.closeToastMessage;\n\n    if (localStorage){\n      const connectorName = localStorage.getItem('connectorName') ? localStorage.getItem('connectorName') : 'Infura';\n      const walletProvider = localStorage.getItem('walletProvider') ? localStorage.getItem('walletProvider') : 'Infura';\n\n      this.setConnector(connectorName,walletProvider);\n    }\n  }\n\n  handleWindowSizeChange = () => {\n    const newState = {\n      width:this.state.width,\n      height:this.state.height,\n    };\n\n    const widthChanged = window.innerWidth !== this.state.width;\n    const heightChanged = window.innerHeight !== this.state.height;\n\n    if (widthChanged || heightChanged){\n      if (widthChanged){\n        newState.width = window.innerWidth;\n      }\n      if (heightChanged){\n        newState.height = window.innerHeight;\n      }\n      return this.setState(newState);\n    }\n\n    return null;\n  };\n\n  // Optional parameters to pass into RimbleWeb3\n  config = globalConfigs.network;\n\n  showRoute(route) {\n    return this.setState({ route });\n  }\n\n  closeBuyModal(e) {\n    if (e){\n      e.preventDefault();\n    }\n    return this.setState({\n      buyToken:null,\n      buyModalOpened:false\n    });\n  }\n\n  openBuyModal(e,buyToken) {\n    e.preventDefault();\n\n    return this.setState({\n      buyToken,\n      buyModalOpened:true\n    });\n  }\n\n  async logout(){\n    // Reset Custom Address\n    this.setState({\n      customAddress:null\n    });\n    // Reset Localstorage\n    this.functionsUtil.clearStoredData(['version','themeMode','lastLogin']);\n  }\n\n  setConnector(connectorName,walletProvider){\n\n    let connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n    if (!connectorInfo && walletProvider){\n      connectorInfo = globalConfigs.connectors[walletProvider.toLowerCase()];\n    }\n\n    if ( (connectorInfo && !connectorInfo.enabled) || (connectorName !== 'Injected' && !Object.keys(globalConfigs.connectors).includes(connectorName.toLowerCase())) || (walletProvider && !Object.keys(globalConfigs.connectors).includes(walletProvider.toLowerCase()))) {\n      connectorName = 'Infura';\n      walletProvider = 'Infura';\n    } else if ( connectorName === 'Injected' ){\n      const hasMetamask = GeneralUtil.hasMetaMask();\n      const hasDapper = GeneralUtil.hasDapper()\n\n      // Check if injected connector is valid\n      switch (walletProvider){\n        case 'Metamask':\n          if (!hasMetamask && hasDapper){\n            walletProvider = 'Dapper';\n          }\n        break;\n        case 'Dapper':\n          if (!hasDapper && hasMetamask){\n            walletProvider = 'Metamask';\n          }\n        break;\n        default:\n        break;\n      }\n    }\n\n    this.functionsUtil.setLocalStorage('connectorName', connectorName);\n    this.functionsUtil.setLocalStorage('walletProvider', walletProvider);\n\n    return this.setState({\n      connectorName,\n      walletProvider\n    },() => {\n      this.loadCustomAddress();\n    });\n  }\n\n  setThemeMode(themeMode,store=true){\n    let selectedTheme = null;\n\n    // Check Dark Mode Enabled\n    const darkModeEnabled = this.functionsUtil.getGlobalConfig(['dashboard','theme','darkModeEnabled']);\n    if (themeMode === 'dark' && !darkModeEnabled){\n      themeMode = 'light';\n    }\n\n    switch (themeMode){\n      default:\n      case 'light':\n        selectedTheme = theme;\n      break;\n      case 'dark':\n        selectedTheme = themeDark;\n      break;\n    }\n\n    if (store){\n      this.functionsUtil.setLocalStorage('themeMode',themeMode);\n    }\n\n    this.setState({\n      themeMode,\n      selectedTheme\n    });\n  }\n\n  setCurrentSection(currentSection){\n    this.setState({\n      currentSection\n    });\n  }\n\n  render() {\n    const isMobile = this.state.width <= 768;\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n\n    // console.log(this.state.selectedToken,this.state.tokenConfig);\n\n    const SuspenseLoader = (\n      <Flex\n        width={1}\n        minHeight={'100vh'}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        backgroundColor={'selectBg'}\n      >\n        <FlexLoader\n          textProps={{\n            textSize:4,\n            fontWeight:2\n          }}\n          loaderProps={{\n            mb:3,\n            size:'80px',\n            color:'primary'\n          }}\n          flexProps={{\n            my:3,\n            flexDirection:'column'\n          }}\n          text={''}\n        />\n      </Flex>\n    );\n\n    return (\n      <Router>\n        <ScrollToTop />\n        <ThemeProvider\n          theme={this.state.selectedTheme}\n        >\n          <Web3Provider\n            web3Api={Web3}\n            connectors={connectors}\n            libraryName={'web3.js'}\n          >\n            <Web3Consumer>\n              {context => {\n                return (\n                  <RimbleWeb3\n                    context={context}\n                    isMobile={isMobile}\n                    config={this.config}\n                    connectors={connectors}\n                    theme={this.state.selectedTheme}\n                    cachedData={this.state.cachedData}\n                    tokenConfig={this.state.tokenConfig}\n                    customAddress={this.state.customAddress}\n                    selectedToken={this.state.selectedToken}\n                    connectorName={this.state.connectorName}\n                    walletProvider={this.state.walletProvider}\n                    setConnector={this.setConnector.bind(this)}\n                    availableTokens={this.state.availableTokens}\n                    setCachedData={this.setCachedData.bind(this)}\n                    clearCachedData={this.clearCachedData.bind(this)}\n                    callbackAfterLogin={this.state.callbackAfterLogin}\n                    availableStrategies={this.state.availableStrategies}\n                    setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                    enableUnderlyingWithdraw={this.state.enableUnderlyingWithdraw}\n                  >\n                    <RimbleWeb3.Consumer>\n                      {({\n                        web3,\n                        modals,\n                        network,\n                        account,\n                        initWeb3,\n                        simpleID,\n                        biconomy,\n                        contracts,\n                        transaction,\n                        initAccount,\n                        initContract,\n                        transactions,\n                        initSimpleID,\n                        tokenDecimals,\n                        accountBalance,\n                        needsPreflight,\n                        validateAccount,\n                        rejectValidation,\n                        accountValidated,\n                        getTokenDecimals,\n                        getAccountBalance,\n                        accountBalanceLow,\n                        accountInizialized,\n                        accountBalanceToken,\n                        userRejectedConnect,\n                        initializeContracts,\n                        rejectAccountConnect,\n                        contractsInitialized,\n                        userRejectedValidation,\n                        accountValidationPending,\n                        connectAndValidateAccount,\n                        contractMethodSendWrapper\n                      }) => {\n                        return (\n                        <Box>\n                          <Switch>\n                            <Route\n                              path=\"/dashboard/:section?/:param1?/:param2?\"\n                              render={\n                                (props) => \n                                  <Suspense\n                                    fallback={SuspenseLoader}\n                                  >\n                                    <Dashboard\n                                      {...props}\n                                      web3={web3}\n                                      modals={modals}\n                                      network={network}\n                                      context={context}\n                                      account={account}\n                                      isDashboard={true}\n                                      initWeb3={initWeb3}\n                                      biconomy={biconomy}\n                                      isMobile={isMobile}\n                                      simpleID={simpleID}\n                                      contracts={contracts}\n                                      initAccount={initAccount}\n                                      initSimpleID={initSimpleID}\n                                      initContract={initContract}\n                                      transactions={transactions}\n                                      buyToken={this.state.buyToken}\n                                      logout={this.logout.bind(this)}\n                                      accountBalance={accountBalance}\n                                      themeMode={this.state.themeMode}\n                                      theme={this.state.selectedTheme}\n                                      validateAccount={validateAccount}\n                                      connecting={this.state.connecting}\n                                      cachedData={this.state.cachedData}\n                                      setToken={this.setToken.bind(this)}\n                                      accountValidated={accountValidated}\n                                      getTokenDecimals={getTokenDecimals}\n                                      rejectValidation={rejectValidation}\n                                      tokenConfig={this.state.tokenConfig}\n                                      getAccountBalance={getAccountBalance}\n                                      accountBalanceLow={accountBalanceLow}\n                                      accountInizialized={accountInizialized}\n                                      selectedToken={this.state.selectedToken}\n                                      connectorName={this.state.connectorName}\n                                      setStrategy={this.setStrategy.bind(this)}\n                                      userRejectedConnect={userRejectedConnect}\n                                      accountBalanceToken={accountBalanceToken}\n                                      initializeContracts={initializeContracts}\n                                      walletProvider={this.state.walletProvider}\n                                      buyModalOpened={this.state.buyModalOpened}\n                                      contractsInitialized={contractsInitialized}\n                                      openBuyModal={this.openBuyModal.bind(this)}\n                                      rejectAccountConnect={rejectAccountConnect}\n                                      handleMenuClick={this.selectTab.bind(this)}\n                                      setConnector={this.setConnector.bind(this)}\n                                      setThemeMode={this.setThemeMode.bind(this)}\n                                      availableTokens={this.state.availableTokens}\n                                      closeBuyModal={this.closeBuyModal.bind(this)}\n                                      setCachedData={this.setCachedData.bind(this)}\n                                      selectedStrategy={this.state.selectedStrategy}\n                                      userRejectedValidation={userRejectedValidation}\n                                      clearCachedData={this.clearCachedData.bind(this)}\n                                      setStrategyToken={this.setStrategyToken.bind(this)}\n                                      accountValidationPending={accountValidationPending}\n                                      availableStrategies={this.state.availableStrategies}\n                                      setCurrentSection={this.setCurrentSection.bind(this)}\n                                      connectAndValidateAccount={connectAndValidateAccount}\n                                      contractMethodSendWrapper={contractMethodSendWrapper}\n                                      setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                                    />\n                                  </Suspense>\n\n                              }\n                            >\n                            </Route>\n                            {\n                              governanceEnabled && \n                                <Route\n                                  path=\"/governance/:section?/:item_id?\"\n                                  render={\n                                    (props) =>\n                                      <Suspense\n                                        fallback={SuspenseLoader}\n                                      >\n                                        <Governance\n                                          {...props}\n                                          web3={web3}\n                                          modals={modals}\n                                          network={network}\n                                          context={context}\n                                          account={account}\n                                          initWeb3={initWeb3}\n                                          biconomy={biconomy}\n                                          isMobile={isMobile}\n                                          simpleID={simpleID}\n                                          isGovernance={true}\n                                          contracts={contracts}\n                                          initAccount={initAccount}\n                                          initSimpleID={initSimpleID}\n                                          initContract={initContract}\n                                          transactions={transactions}\n                                          buyToken={this.state.buyToken}\n                                          logout={this.logout.bind(this)}\n                                          accountBalance={accountBalance}\n                                          themeMode={this.state.themeMode}\n                                          theme={this.state.selectedTheme}\n                                          validateAccount={validateAccount}\n                                          connecting={this.state.connecting}\n                                          cachedData={this.state.cachedData}\n                                          setToken={this.setToken.bind(this)}\n                                          accountValidated={accountValidated}\n                                          getTokenDecimals={getTokenDecimals}\n                                          rejectValidation={rejectValidation}\n                                          tokenConfig={this.state.tokenConfig}\n                                          getAccountBalance={getAccountBalance}\n                                          accountBalanceLow={accountBalanceLow}\n                                          accountInizialized={accountInizialized}\n                                          selectedToken={this.state.selectedToken}\n                                          connectorName={this.state.connectorName}\n                                          setStrategy={this.setStrategy.bind(this)}\n                                          userRejectedConnect={userRejectedConnect}\n                                          accountBalanceToken={accountBalanceToken}\n                                          initializeContracts={initializeContracts}\n                                          walletProvider={this.state.walletProvider}\n                                          buyModalOpened={this.state.buyModalOpened}\n                                          contractsInitialized={contractsInitialized}\n                                          openBuyModal={this.openBuyModal.bind(this)}\n                                          rejectAccountConnect={rejectAccountConnect}\n                                          handleMenuClick={this.selectTab.bind(this)}\n                                          setConnector={this.setConnector.bind(this)}\n                                          setThemeMode={this.setThemeMode.bind(this)}\n                                          availableTokens={this.state.availableTokens}\n                                          closeBuyModal={this.closeBuyModal.bind(this)}\n                                          setCachedData={this.setCachedData.bind(this)}\n                                          selectedStrategy={this.state.selectedStrategy}\n                                          userRejectedValidation={userRejectedValidation}\n                                          clearCachedData={this.clearCachedData.bind(this)}\n                                          setStrategyToken={this.setStrategyToken.bind(this)}\n                                          accountValidationPending={accountValidationPending}\n                                          availableStrategies={this.state.availableStrategies}\n                                          setCurrentSection={this.setCurrentSection.bind(this)}\n                                          connectAndValidateAccount={connectAndValidateAccount}\n                                          contractMethodSendWrapper={contractMethodSendWrapper}\n                                          setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                                        />\n                                      </Suspense>\n                                  }\n                                >\n                                </Route>\n                            }\n                            <Route>\n                              <Header\n                                modals={modals}\n                                network={network}\n                                context={context}\n                                account={account}\n                                initWeb3={initWeb3}\n                                isMobile={isMobile}\n                                contracts={contracts}\n                                initAccount={initAccount}\n                                initContract={initContract}\n                                buyToken={this.state.buyToken}\n                                accountBalance={accountBalance}\n                                logout={this.logout.bind(this)}\n                                validateAccount={validateAccount}\n                                connecting={this.state.connecting}\n                                accountValidated={accountValidated}\n                                getTokenDecimals={getTokenDecimals}\n                                rejectValidation={rejectValidation}\n                                tokenConfig={this.state.tokenConfig}\n                                getAccountBalance={getAccountBalance}\n                                accountBalanceLow={accountBalanceLow}\n                                selectedToken={this.state.selectedToken}\n                                connectorName={this.state.connectorName}\n                                userRejectedConnect={userRejectedConnect}\n                                accountBalanceToken={accountBalanceToken}\n                                walletProvider={this.state.walletProvider}\n                                buyModalOpened={this.state.buyModalOpened}\n                                contractsInitialized={contractsInitialized}\n                                openBuyModal={this.openBuyModal.bind(this)}\n                                rejectAccountConnect={rejectAccountConnect}\n                                handleMenuClick={this.selectTab.bind(this)}\n                                setConnector={this.setConnector.bind(this)}\n                                availableTokens={this.state.availableTokens}\n                                closeBuyModal={this.closeBuyModal.bind(this)}\n                                userRejectedValidation={userRejectedValidation}\n                                accountValidationPending={accountValidationPending}\n                                connectAndValidateAccount={connectAndValidateAccount}\n                                setToken={ e => { this.setToken(e) } }\n                              />\n\n                              {this.state.route === \"onboarding\" ? (\n                                <Web3Debugger\n                                  web3={web3}\n                                  account={account}\n                                  accountBalance={accountBalance}\n                                  accountBalanceToken={accountBalanceToken}\n                                  accountBalanceLow={accountBalanceLow}\n                                  initAccount={initAccount}\n                                  rejectAccountConnect={rejectAccountConnect}\n                                  userRejectedConnect={userRejectedConnect}\n                                  accountValidated={accountValidated}\n                                  accountValidationPending={accountValidationPending}\n                                  rejectValidation={rejectValidation}\n                                  userRejectedValidation={userRejectedValidation}\n                                  validateAccount={validateAccount}\n                                  connectAndValidateAccount={connectAndValidateAccount}\n                                  modals={modals}\n                                  network={network}\n                                  transaction={transaction}\n                                />\n                              ) : null}\n\n                              {this.state.route === \"default\" ? (\n                                <Switch>\n                                  <Route exact path=\"/\"\n                                    render={ (props) =>\n                                      <Suspense\n                                        fallback={SuspenseLoader}\n                                      >\n                                        <Landing\n                                          {...props}\n                                          web3={web3}\n                                          network={network}\n                                          account={account}\n                                          isMobile={isMobile}\n                                          simpleID={simpleID}\n                                          contracts={contracts}\n                                          innerWidth={this.state.width}\n                                          logout={this.logout.bind(this)}\n                                          innerHeight={this.state.height}\n                                          accountBalance={accountBalance}\n                                          themeMode={this.state.themeMode}\n                                          theme={this.state.selectedTheme}\n                                          cachedData={this.state.cachedData}\n                                          connecting={this.state.connecting}\n                                          selectedTab={this.state.selectedTab}\n                                          tokenConfig={this.state.tokenConfig}\n                                          accountBalanceLow={accountBalanceLow}\n                                          getAccountBalance={getAccountBalance}\n                                          customAddress={this.state.customAddress}\n                                          selectedToken={this.state.selectedToken}\n                                          accountBalanceToken={accountBalanceToken}\n                                          closeToastMessage={this.closeToastMessage}\n                                          contractsInitialized={contractsInitialized}\n                                          openBuyModal={this.openBuyModal.bind(this)}\n                                          setThemeMode={this.setThemeMode.bind(this)}\n                                          processCustomParam={this.processCustomParam}\n                                          availableTokens={this.state.availableTokens}\n                                          setCachedData={this.setCachedData.bind(this)}\n                                          updateSelectedTab={this.selectTab.bind(this)}\n                                          toastMessageProps={this.state.toastMessageProps}\n                                          clearCachedData={this.clearCachedData.bind(this)}\n                                          availableStrategies={this.state.availableStrategies}\n                                          setCurrentSection={this.setCurrentSection.bind(this)}\n                                          connectAndValidateAccount={connectAndValidateAccount}\n                                          setToken={ e => { this.setToken(e) } }\n                                        />\n                                        <CookieConsent\n                                          expires={365}\n                                          buttonText={\"Ok\"}\n                                          location={\"bottom\"}\n                                          acceptOnScroll={true}\n                                          cookieName={\"cookieAccepted\"}\n                                          acceptOnScrollPercentage={5}\n                                          style={{background: \"rgba(255,255,255,0.95)\",zIndex:'9999999'}}\n                                          buttonStyle={{display: isMobile ? \"block\" : \"none\", backgroundColor:'#0036ff', color: 'white', marginTop: isMobile ? \"0px\" : \"15px\"}}\n                                        >\n                                          <Flex flexDirection={'row'} alignItems={['flex-start','center']} justifyContent={'flex-start'} maxHeight={['150px','initial']} style={ isMobile ? {overflowY:'scroll'} : null }>\n                                            <Image display={['none','block']} src={'images/cookie.svg'} width={'42px'} height={'42px'} />\n                                            <Text pl={[0,3]} color={'dark-gray'} fontSize={1} textAlign={'justify'}>\n                                              This website or its third-party tools process personal data (e.g. browsing data or IP addresses) and use cookies or other identifiers, which are necessary for its functioning and required to achieve the purposes illustrated in the cookie policy. To learn more, please refer to the <Link href={'https://www.iubenda.com/privacy-policy/61211749/cookie-policy'} target={'_blank'} rel=\"nofollow noopener noreferrer\" hoverColor={'blue'}>cookie policy</Link>.\n                                              You accept the use of cookies or other identifiers by closing or dismissing this notice, by scrolling this page, by clicking a link or button or by continuing to browse otherwise.\n                                            </Text>\n                                          </Flex>\n                                        </CookieConsent>\n                                      </Suspense>\n                                    }\n                                  ></Route>\n                                  <Route exact path=\"/terms-of-service\">\n                                    <Tos />\n                                  </Route>\n                                  <Route>\n                                    <PageNotFound />\n                                  </Route>\n                                </Switch>\n                              ) : null}\n                            </Route>\n                          </Switch>\n                          <TransactionToastUtil\n                            transactions={transactions}\n                            themeMode={this.state.themeMode}\n                          />\n                        </Box>\n                      )}}\n                    </RimbleWeb3.Consumer>\n                  </RimbleWeb3>\n                );\n              }}\n            </Web3Consumer>\n          </Web3Provider>\n        </ThemeProvider>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport * as Sentry from '@sentry/browser';\nimport App from './App/App';\nimport * as serviceWorker from './serviceWorker';\n\nif (window.location.hostname !== 'localhost') {\n  Sentry.init({\n    dsn: \"https://56f5c0bce273442390d7f25698fefe53@sentry.io/1547544\",\n    beforeSend(event, hint) {\n      let output = event;\n      const error = hint.originalException;\n      if (error && error.message){\n        if (error.message.match(/Failed to subscribe to new newBlockHeaders/i)){\n          output = false;\n        }\n      }\n      return output;\n    }\n  });\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass TableRow extends Component {\n  render() {\n    const FieldComponent = this.props.fieldComponent;\n    const isInteractive = typeof this.props.handleClick === 'function';\n    return (\n      <DashboardCard\n        cardProps={{\n          mb:2,\n          width:1,\n          px:[2,4],\n          py:[2,'12px']\n        }}\n        id={this.props.cardId}\n        {...this.props.rowProps}\n        className={this.props.token}\n        isInteractive={isInteractive}\n        handleClick={ isInteractive ? e => this.props.handleClick(this.props) : null }\n      >\n        <Flex\n          flexDirection={'row'}\n          id={this.props.rowId}\n        >\n          {\n            this.props.cols.map((colInfo,colIndex) => {\n              if (colInfo.visible === false || (colInfo.mobile === false && this.props.isMobile)){\n                return null;\n              }\n              return (\n                <Flex\n                  key={`col-${colIndex}`}\n                  {...colInfo.props}\n                >\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    {...colInfo.parentProps}\n                  >\n                    {\n                      colInfo.fields.map((fieldInfo,fieldIndex) => {\n                        if (fieldInfo.visible === false || (fieldInfo.mobile === false && this.props.isMobile)){\n                          return null;\n                        }\n                        return (\n                          <Flex\n                            height={'100%'}\n                            flexDirection={'column'}\n                            alignItems={'flex-start'}\n                            justifyContent={'center'}\n                            {...fieldInfo.parentProps}\n                            style={fieldInfo.style || {\n                              overflow:'hidden'\n                            }}\n                            width={colInfo.fields.length>1 ? 'auto' : 1}\n                            id={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                            key={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                          >\n                            <FieldComponent\n                              {...this.props}\n                              fieldInfo={fieldInfo}\n                              colProps={colInfo.props}\n                              parentId={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                            />\n                          </Flex>\n                        );\n                      })\n                    }\n                  </Flex>\n                </Flex>\n              )\n            })\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default TableRow;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableCellHeader from '../TableCellHeader/TableCellHeader';\n\nclass TableHeader extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        px={[2,4]}\n        pb={[2,3]}\n        flexDirection={'row'}\n      >\n        {\n          this.props.cols.map((colInfo,colIndex) => {\n            // Skip non-mobile columns\n            if (colInfo.visible === false || (colInfo.mobile === false && this.props.isMobile)){\n              return null;\n            }\n\n            return (colInfo.title && colInfo.title.length) ? (\n              <TableCellHeader\n                {...this.props}\n                {...colInfo.props}\n                desc={colInfo.desc}\n                title={colInfo.title}\n                key={`col-header-${colIndex}`}\n              >\n                {colInfo.title}\n              </TableCellHeader>\n            ) : (\n              <Flex key={`col-header-${colIndex}`} {...colInfo.props}></Flex>\n            )\n          })\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TableHeader;\n","import React, { Component } from 'react';\nimport styles from './Migrate.module.scss';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport TransactionField from '../TransactionField/TransactionField';\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\nimport { Box, Flex, Text, Icon, Checkbox, Input, Link, Image } from \"rimble-ui\";\n\nclass Migrate extends Component {\n\n  state = {\n    nonce:0,\n    loading:true,\n    action:'migrate',\n    processing:{\n      approve:{\n        txHash:null,\n        loading:false\n      },\n      migrate:{\n        txHash:null,\n        loading:false\n      },\n      redeem:{\n        txHash:null,\n        loading:false\n      }\n    },\n    inputValue:{},\n    usePermit:false,\n    oldTokenName:null,\n    oldIdleTokens:null,\n    skipMigration:false,\n    buttonDisabled:true,\n    migrationEnabled:null,\n    fastBalanceSelector:{},\n    oldContractBalance:null,\n    biconomyLimitReached:false,\n    metaTransactionsEnabled:true,\n    oldContractTokenDecimals:null,\n    migrationContractApproved:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  setAction = (action) => {\n    if (action !== null){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  toggleSkipMigration = (skipMigration) => {\n    this.setState({\n      skipMigration\n    });\n\n    if (typeof this.props.toggleSkipMigration === 'function'){\n      this.props.toggleSkipMigration(skipMigration);\n    }\n  }\n\n  changeInputValue = (e) => {\n    if (!this.state.action){\n      return false;\n    }\n    const amount = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: null\n      },\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  checkButtonDisabled = (amount=null) => {\n    if (!this.state.action){\n      return false;\n    }\n    if (!amount){\n      amount = this.state.inputValue[this.state.action];\n    }\n    let buttonDisabled = true;\n    if (amount){\n      buttonDisabled = amount.lte(0);\n      switch (this.state.action){\n        case 'migrate':\n        case 'redeem':\n          buttonDisabled = buttonDisabled || amount.gt(this.state.oldIdleTokens);\n        break;\n        default:\n        break;\n      }\n    }\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  setInputValue = () => {\n    if (!this.state.action || this.state.fastBalanceSelector[this.state.action] === null){\n      return false;\n    }\n\n    let amount = null;\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector[this.state.action]).div(100);\n\n    switch(this.state.action){\n      case 'migrate':\n      case 'redeem':\n        amount = this.state.oldIdleTokens ? this.functionsUtil.BNify(this.state.oldIdleTokens).times(selectedPercentage) : null;\n      break;\n      default:\n      break;\n    }\n\n    this.setState((prevState) => ({\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  setFastBalanceSelector = (percentage) => {\n    if (!this.state.action){\n      return false;\n    }\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: percentage\n      }\n    }));\n  }\n\n  executeAction = async () => {\n\n    const inputValue = this.state.inputValue[this.state.action];\n\n    if (this.state.buttonDisabled || !inputValue || this.functionsUtil.BNify(inputValue).lte(0)){\n      return false;\n    }\n\n    const loading = true;\n\n    switch (this.state.action){\n      case 'redeem':\n\n        if (!this.props.tokenConfig.migration || !this.props.tokenConfig.migration.oldContract){\n          return false;\n        }\n\n        const oldContractName = this.props.tokenConfig.migration.oldContract.name;\n\n        const idleTokenToRedeem = this.functionsUtil.normalizeTokenAmount(inputValue,18);\n\n        // Get amounts for best allocations\n        const _skipRebalance = true;\n        let paramsForRedeem = null;\n\n        /*\n        if (this.props.account){\n          const callParams = { from: this.props.account, gas: this.props.web3.utils.toBN(5000000) };\n          paramsForRedeem = await this.functionsUtil.genericContractCall(oldContractName,'getParamsForRedeemIdleToken',[idleTokenToRedeem, _skipRebalance],callParams);\n        }\n        */\n\n        const _clientProtocolAmountsRedeem = paramsForRedeem && paramsForRedeem.length ? paramsForRedeem[1] : [];\n        const gasLimitRedeem = _clientProtocolAmountsRedeem.length && _clientProtocolAmountsRedeem.indexOf('0') === -1 ? this.functionsUtil.BNify(1500000) : this.functionsUtil.BNify(1000000);\n\n        const callbackRedeem = (tx,error) => {\n          const txSucceeded = tx.status === 'success';\n\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: `Redeem_old`,\n            eventAction: this.props.selectedToken,\n            eventLabel: tx.status,\n            eventValue: parseInt(inputValue)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (txSucceeded){\n            this.setState((prevState) => ({\n              inputValue:{\n                ...prevState.inputValue,\n                [this.state.action]: this.functionsUtil.BNify(0)\n              }\n            }));\n          }\n        };\n\n        const callbackReceiptRedeem = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                ...prevState.processing[this.state.action],\n                txHash\n              }\n            }\n          }));\n        };\n\n        this.props.contractMethodSendWrapper(oldContractName, 'redeemIdleToken', [\n          idleTokenToRedeem, _skipRebalance, _clientProtocolAmountsRedeem\n        ], null, callbackRedeem, callbackReceiptRedeem, gasLimitRedeem);\n      break;\n      default:\n      break;\n    }\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        [this.state.action]:{\n          ...prevState.processing[this.state.action],\n          loading\n        }\n      }\n    }));\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n    this.checkMigration();\n  }\n\n  componentDidMount(){\n    \n  }\n\n  componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const biconomyChanged = prevProps.biconomy !== this.props.biconomy;\n    const usePermitChanged = prevProps.usePermit !== this.props.usePermit;\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken || (!prevProps.tokenConfig && this.props.tokenConfig);\n\n    if (tokenChanged || accountChanged || biconomyChanged || usePermitChanged){\n      this.checkMigration();\n    }\n\n    const actionChanged = this.state.action !== prevState.action;\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector[this.state.action] !== prevState.fastBalanceSelector[this.state.action];\n    if (actionChanged || fastBalanceSelectorChanged){\n      this.setInputValue();\n    }\n\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue;\n    if (inputValueChanged){\n      this.checkButtonDisabled();\n    }\n\n    const contractApprovedChanged = prevState.migrationContractApproved !== this.state.migrationContractApproved;\n    if (contractApprovedChanged){\n      // console.log(this.props.selectedToken,'contractApprovedChanged',this.state.migrationContractApproved);\n      if (typeof this.props.callbackApprove === 'function'){\n        this.props.callbackApprove(this.state.migrationContractApproved);\n      }\n    }\n  }\n\n  toggleMetaTransactionsEnabled = (metaTransactionsEnabled) => {\n    this.setState({\n      metaTransactionsEnabled\n    });\n  }\n\n  checkMigrationContractApproved = async () => {\n    if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.migrationContract){\n      const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n      const migrationContractName = migrationContractInfo.name;\n      const migrationContract = this.functionsUtil.getContractByName(migrationContractName);\n      if (migrationContract){\n        const oldContractName = this.props.tokenConfig.migration.oldContract.name;\n        const tokenApproved = await this.functionsUtil.checkTokenApproved(oldContractName,migrationContractInfo.address,this.props.account);\n        return tokenApproved;\n      }\n    }\n    return false;\n  }\n\n  checkMigration = async () => {\n\n    if (!this.props.tokenConfig || !this.props.account){\n      return false;\n    }\n\n    let loading = true;\n    this.setState({\n      loading,\n      processing:{\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        migrate:{\n          txHash:null,\n          loading:false\n        },\n        redeem:{\n          txHash:null,\n          loading:false\n        }\n      },\n    });\n\n    let migrationEnabled = false;\n    let oldTokenName = 'idleTokens';\n    let oldIdleTokensConverted = null;\n    let oldContractTokenDecimals = null;\n    let migrationContractApproved = false;\n    let oldTokenPrice = this.functionsUtil.BNify(0);\n    let oldIdleTokens = this.functionsUtil.BNify(0);\n    let oldContractBalance = this.functionsUtil.BNify(0);\n    const getTokenPrice = this.props.getTokenPrice !== undefined ? this.props.getTokenPrice : true;\n\n    // Check migration contract enabled and balance\n    if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.enabled){\n      const oldContractInfo = this.props.tokenConfig.migration.oldContract;\n      const oldContractABI = oldContractInfo.abi;\n      const oldContractName = oldContractInfo.name;\n      let oldContract = this.functionsUtil.getContractByName(oldContractName);\n\n      // Initialize contract\n      if (!oldContract && oldContractABI){\n        oldContract = await this.props.initContract(oldContractName,oldContractInfo.address,oldContractABI);\n      }\n\n      let migrationContract = this.functionsUtil.getContractByName(this.props.tokenConfig.migration.migrationContract.name);\n\n      if (!migrationContract && this.props.tokenConfig.migration.migrationContract.abi){\n        migrationContract = await this.props.initContract(this.props.tokenConfig.migration.migrationContract.name,this.props.tokenConfig.migration.migrationContract.address,this.props.tokenConfig.migration.migrationContract.abi);\n      }\n\n      if (oldContract && migrationContract){\n\n        oldTokenName = this.props.tokenConfig.migration.oldContract.token;\n\n        [\n          oldContractTokenDecimals,\n          migrationContractApproved,\n          oldContractBalance,\n          oldTokenPrice,\n        ] = await Promise.all([\n          // Get old contract token decimals\n          this.functionsUtil.getTokenDecimals(oldContractName),\n          // Check migration contract approval\n          this.checkMigrationContractApproved(),\n          // Check old contractBalance\n          this.functionsUtil.getContractBalance(oldContractName,this.props.account),\n          // Get token price\n          (getTokenPrice ? this.functionsUtil.genericContractCall(oldContractName,'tokenPrice') : null)\n        ]);\n\n        // console.log('Migration',oldContractName,migrationContractApproved,this.props.selectedToken,oldContractBalance ? oldContractBalance.toString() : null,oldTokenPrice ? oldTokenPrice.toString() : null);\n\n        if (oldContractBalance){\n          // Convert old idleTokens\n          oldIdleTokens = this.functionsUtil.fixTokenDecimals(oldContractBalance,oldContractTokenDecimals);\n          if (oldTokenPrice){\n            oldTokenPrice = this.functionsUtil.fixTokenDecimals(oldTokenPrice,this.props.tokenConfig.decimals);\n            oldIdleTokensConverted = this.functionsUtil.BNify(oldIdleTokens).times(this.functionsUtil.BNify(oldTokenPrice));\n          }\n          // Enable migration if old contract balance if greater than 0\n          migrationEnabled = this.functionsUtil.BNify(oldContractBalance).gt(0);\n        }\n      }\n    }\n    \n    loading = false;\n\n    // If use Permit don't ask for Approve\n    const usePermit = this.props.usePermit;\n\n    const newState = {\n      loading,\n      usePermit,\n      oldTokenName,\n      oldIdleTokens,\n      migrationEnabled,\n      oldContractBalance,\n      oldIdleTokensConverted,\n      oldContractTokenDecimals,\n      migrationContractApproved\n    };\n\n    if (this.props.biconomy){\n      const biconomyLimits = await this.functionsUtil.checkBiconomyLimits(this.props.account);\n      if (biconomyLimits && !biconomyLimits.allowed){\n        newState.biconomyLimitReached = true;\n      }\n    }\n\n    if (typeof this.props.migrationEnabledCallback === 'function'){\n      this.props.migrationEnabledCallback(migrationEnabled);\n    }\n\n    // console.log('checkMigration',this.props.selectedToken,'usePermit',this.props.usePermit,'migrationContractApproved',newState.migrationContractApproved);\n\n    // Set migration contract balance\n    return this.setState(newState);\n  }\n\n  disapproveMigration = async (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n      this.disableERC20(null,this.props.tokenConfig.migration.oldContract.name,migrationContractInfo.address);\n    }\n  }\n\n  cancelTransaction = async () => {\n    this.setState({\n      processing: {\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        migrate:{\n          txHash:null,\n          loading:false\n        },\n        redeem:{\n          txHash:null,\n          loading:false\n        }\n      },\n    });\n  }\n\n  approveMigration = async (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n\n      // Check if the migration contract is approved\n      const migrationContractApproved = await this.checkMigrationContractApproved();\n\n      if (!migrationContractApproved){\n\n        const callbackApprove = (tx,error) => {\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: 'Migrate',\n            eventAction: 'approve',\n            eventLabel: tx ? tx.status : null\n          };\n\n          const txSucceeded = tx && tx.status === 'success';\n\n          // console.log('callbackApprove',tx,error);\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            migrationContractApproved: txSucceeded, // True\n            processing: {\n              ...prevState.processing,\n              approve:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (typeof this.props.callbackApprove === 'function' && txSucceeded){\n            this.props.callbackApprove(tx);\n          }\n\n          this.checkMigration();\n        };\n\n        const callbackReceiptApprove = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              approve:{\n                ...prevState.processing.approve,\n                txHash\n              }\n            }\n          }));\n        };\n\n        this.functionsUtil.enableERC20(this.props.tokenConfig.migration.oldContract.name,migrationContractInfo.address,callbackApprove,callbackReceiptApprove);\n\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            approve:{\n              txHash:null,\n              loading:true\n            }\n          },\n          migrationContractApproved:false\n        }));\n      } else {\n        this.setState({\n          migrationContractApproved:true\n        });\n      }\n    }\n  }\n\n  migrate = async (e,migrationMethod) => {\n    e.preventDefault();\n\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n\n      // Check if the migration contract is approved\n      // const migrationContractApproved = await this.checkMigrationContractApproved();\n\n      // if (!migrationContractApproved){\n      //   return this.approveMigration();\n      // } else {\n        const callbackMigrate = (tx,error) => {\n\n          if (!error && tx && tx.status === 'error'){\n            error = {\n              message:'Unknown error'\n            };\n          } else if (!tx && error){\n            tx = {\n              status:'error'\n            };\n          }\n\n          const txSucceeded = tx && tx.status === 'success';\n\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: 'Migrate',\n            eventAction: migrationMethod,\n            eventLabel: tx ? tx.status : null,\n            eventValue: parseInt(oldIdleTokens)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          // console.log('callbackMigrate',tx,tx.status,txSucceeded,error,this.props.migrationCallback);\n\n          if (txSucceeded){\n            // Toast message\n            window.toastProvider.addMessage(`Migration completed`, {\n              secondaryMessage: `Your funds has been migrated`,\n              colorTheme: 'light',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"success\",\n            });\n\n            if (this.props.migrationCallback && typeof this.props.migrationCallback === 'function'){\n              this.props.migrationCallback(tx);\n            }\n\n          } else { // Show migration error toast only for real error\n            window.toastProvider.addMessage(`Migration error`, {\n              secondaryMessage: `The migration has failed, try again...`,\n              colorTheme: 'light',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"failure\",\n            });\n\n            // Check migration if failed\n            this.checkMigration();\n          }\n\n          this.setState((prevState) => ({\n            migrationEnabled:txSucceeded ? false : true,\n            processing: {\n              ...prevState.processing,\n              migrate:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n        }\n\n        const callbackReceiptMigrate = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              migrate:{\n                ...prevState.processing.migrate,\n                txHash\n              }\n            }\n          }));\n        };\n\n        const callbackPermit = () => {\n          if (typeof this.props.callbackPermit === 'function'){\n            this.props.callbackPermit();\n          }\n        }\n\n        const useMetaTx = this.props.biconomy && this.state.metaTransactionsEnabled && !this.state.biconomyLimitReached;\n\n        // Call migration contract function to migrate funds\n        const oldIdleTokens = this.state.oldIdleTokens;\n        const toMigrate = this.props.showBalanceSelector ? this.functionsUtil.integerValue(this.functionsUtil.normalizeTokenAmount(this.state.inputValue[this.state.action],this.state.oldContractTokenDecimals)) : this.functionsUtil.integerValue(this.state.oldContractBalance);\n        // const toMigrate =  this.functionsUtil.normalizeTokenAmount('1',this.state.oldContractTokenDecimals).toString(); // TEST AMOUNT\n\n        let _skipRebalance = typeof this.props.tokenConfig.skipMintForDeposit !== 'undefined' ? this.props.tokenConfig.skipMintForDeposit : this.functionsUtil.getGlobalConfig(['contract','methods','migrate','skipRebalance']);\n\n        // Mint if someone mint over X amount\n        let minAmountForRebalance = null;\n        \n        if (_skipRebalance){\n\n          // Check if the amount is over a certain amount to rebalance the pool\n          if (useMetaTx){\n            minAmountForRebalance = this.functionsUtil.getGlobalConfig(['contract','methods','migrate','minAmountForRebalanceMetaTx']);\n          } else {\n            minAmountForRebalance = this.functionsUtil.getGlobalConfig(['contract','methods','migrate','minAmountForRebalance']);\n          }\n\n          if (minAmountForRebalance){\n            const amountToDeposit = await this.functionsUtil.convertTokenBalance(oldIdleTokens,this.props.selectedToken,this.props.tokenConfig,false);\n            if (amountToDeposit.gte(this.functionsUtil.BNify(minAmountForRebalance))){\n              _skipRebalance = false;\n            }\n          }\n        }\n\n        let migrationParams = this.props.migrationParams ? this.props.migrationParams : [toMigrate,this.props.tokenConfig.migration.oldContract.address,this.props.tokenConfig.idle.address,this.props.tokenConfig.address,_skipRebalance];\n\n        if (typeof migrationParams === 'function'){\n          migrationParams = migrationParams(toMigrate);\n        }\n\n        // Check if Biconomy is enabled\n        if (useMetaTx){\n          const functionSignature = migrationContract.methods[migrationMethod](...migrationParams).encodeABI();\n          this.functionsUtil.sendBiconomyTxWithPersonalSign(migrationContractInfo.name, functionSignature, callbackMigrate, callbackReceiptMigrate);\n          // this.functionsUtil.sendBiconomyTx(migrationContractInfo.name, migrationContractInfo.address, functionSignature, callbackMigrate, callbackReceiptMigrate);\n        } else {\n          const permitContract = this.functionsUtil.getContractByName(this.props.tokenConfig.name);\n          const functionInfo = migrationContractInfo.functions.find( f => f.name === migrationMethod );\n          const nonceMethod = this.functionsUtil.getGlobalConfig(['permit',this.props.tokenConfig.name,'nonceMethod']);\n          if (this.props.usePermit && permitContract){\n            const expiry = Math.round(new Date().getTime() / 1000 + 3600);\n            const nonce = nonceMethod ? await permitContract.methods[nonceMethod](this.props.account).call() : null;\n            this.functionsUtil.signPermit(this.props.tokenConfig.name, this.props.account, migrationContractInfo.name, functionInfo.permitName, migrationParams, nonce, expiry, callbackMigrate, callbackReceiptMigrate, callbackPermit);\n          } else {\n            // Send migration tx\n            this.functionsUtil.contractMethodSendWrapper(migrationContractInfo.name, migrationMethod, migrationParams, callbackMigrate, callbackReceiptMigrate);\n          }\n        }\n\n        // debugger;\n\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            migrate:{\n              txHash:null,\n              loading:true\n            }\n          }\n        }));\n      // }\n    }\n\n    return false;\n  }\n\n  render() {\n\n    if (!this.props.tokenConfig || !this.props.selectedToken){\n      return null;\n    }\n\n    const contractApproved = this.props.usePermit || this.state.migrationContractApproved;\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationEnabled = batchMigrationInfo.enabled && typeof batchMigrationInfo.props.availableTokens[this.props.tokenConfig.idle.token] !== 'undefined';\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    // console.log('contractApproved',contractApproved,this.props.usePermit,this.state.migrationContractApproved);\n\n    const SkipMigrationComponent = (props) => (\n      <DashboardCard\n        cardProps={{\n          pt:2,\n          pb:3,\n          px:2,\n          mb:2,\n          display:'flex',\n          alignItems:'center',\n          flexDirection:'column',\n          justifyContent:'center',\n          mt:this.state.skipMigration ? 3 : 2,\n        }}\n      >\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Icon\n            size={'1.8em'}\n            color={'cellText'}\n            name={'FastForward'}\n          />\n        </Flex>\n        <Checkbox\n          required={false}\n          checked={this.state.skipMigration}\n          label={`Skip migration and deposit in Idle v4`}\n          onChange={ e => this.toggleSkipMigration(e.target.checked) }\n        />\n      </DashboardCard>\n    );\n\n    const biconomyEnabled = this.functionsUtil.getGlobalConfig(['network','providers','biconomy','enabled']) && !this.state.biconomyLimitReached;\n\n    return (\n      this.state.loading && this.props.account ? (\n        <DashboardCard\n          cardProps={{\n            p:3,\n            mt:3,\n            minHeight:'195px',\n            style:{\n              display:'flex',\n              alignItems:'center',\n              justifyContent:'center'\n            }\n          }}\n        >\n          <FlexLoader\n            flexProps={{\n              flexDirection:'row'\n            }}\n            loaderProps={{\n              size:'30px'\n            }}\n            textProps={{\n              ml:2\n            }}\n            text={'Checking migration...'}\n          />\n        </DashboardCard>\n      ) : (\n        (this.state.migrationEnabled && !this.state.skipMigration) ? (\n          <Box width={1}>\n            {\n              !this.props.isMigrationTool &&\n              <Flex\n                mt={3}\n                flexDirection={'column'}\n              >\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  >\n                    <Icon\n                      size={'2.3em'}\n                      color={'cellText'}\n                      name={ this.props.isMigrationTool ? 'SwapHoriz' : 'Warning' }\n                    />\n                    <Text\n                      mt={1}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      { this.props.migrateTextBefore !== null ? this.props.migrateTextBefore : null }\n                      { this.props.migrateTextBefore !== null &&\n                        <br />\n                      }\n                      You { !this.props.isMigrationTool ? 'still' : '' } have <strong>{this.state.oldIdleTokens.toFixed(4)} {this.state.oldTokenName} {this.state.oldIdleTokensConverted ? `(${this.state.oldIdleTokensConverted.toFixed(4)} ${this.props.selectedToken})` : ''}</strong> to migrate.<br />\n                      { this.props.migrateText !== null ? this.props.migrateText : 'Please use the section below to migrate or redeem your old tokens.' }\n                    </Text>\n                  </Flex>\n                </DashboardCard>\n              </Flex>\n            }\n            {\n              (this.props.showActions === undefined || this.props.showActions) && \n                <Flex\n                  mt={2}\n                  flexDirection={'column'}\n                >\n                  {\n                    !this.props.isMigrationTool && \n                      <SkipMigrationComponent />\n                  }\n                  <Text mb={2}>\n                    Choose the action:\n                  </Text>\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'space-between'}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        width:0.48,\n                        onMouseDown:() => {\n                          this.setAction('migrate');\n                        }\n                      }}\n                      isInteractive={true}\n                      isActive={ this.state.action === 'migrate' }\n                    >\n                      <Flex\n                        my={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <TransactionField\n                          transaction={{\n                            action:'migrate'\n                          }}\n                          fieldInfo={{\n                            name:'icon',\n                            props:{\n                              mr:3\n                            }\n                          }}\n                        />\n                        <Text\n                          fontSize={3}\n                          fontWeight={3}\n                        >\n                          Migrate\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        width:0.48,\n                        onMouseDown:() => {\n                          this.setAction('redeem');\n                        }\n                      }}\n                      isInteractive={true}\n                      isActive={ this.state.action === 'redeem' }\n                    >\n                      <Flex\n                        my={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <TransactionField\n                          transaction={{\n                            action:'redeem'\n                          }}\n                          fieldInfo={{\n                            name:'icon',\n                            props:{\n                              mr:3\n                            }\n                          }}\n                        />\n                        <Text\n                          fontSize={3}\n                          fontWeight={3}\n                        >\n                          Redeem\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                </Flex>\n            }\n            {\n              this.state.action === 'migrate' ? (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  flexDirection={'column'}\n                >\n                  {\n                    (batchMigrationEnabled && batchMigrationDepositEnabled && !this.props.isMigrationTool) &&\n                      <Flex\n                        mb={3}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <Link\n                          textAlign={'center'}\n                          hoverColor={'primary'}\n                          href={`/#/dashboard/tools/${batchMigrationInfo.route}/${this.props.tokenConfig.idle.token}`}\n                        >\n                          Gas fees too high? Save gas with our Batch Migrator!\n                        </Link>\n                        <Icon\n                          ml={1}\n                          size={'1em'}\n                          color={'primary'}\n                          name={'LocalGasStation'}\n                        />\n                      </Flex>\n                  }\n                  {\n                    contractApproved ? (\n                      this.state.processing.migrate.loading ? (\n                        <Flex\n                          mt={3}\n                          flexDirection={'column'}\n                        >\n                          <TxProgressBar\n                            web3={this.props.web3}\n                            hash={this.state.processing.migrate.txHash}\n                            endMessage={`Finalizing migration request...`}\n                            cancelTransaction={this.cancelTransaction.bind(this)}\n                            waitText={ this.props.waitText ? this.props.waitText : 'Migration estimated in'}\n                            sendingMessage={ this.props.biconomy && this.state.metaTransactionsEnabled ? 'Sending meta-transaction...' : 'Sending transaction...' }\n                          />\n                        </Flex>\n                      ) : this.props.showBalanceSelector ? (\n                        <Flex\n                          mt={1}\n                          flexDirection={'column'}\n                        >\n                          <Flex\n                            mb={3}\n                            width={1}\n                            flexDirection={'column'}\n                          >\n                            <Flex\n                              mb={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={this.props.balanceSelectorInfo ? 'space-between' : 'flex-end'}\n                            >\n                              {\n                                this.props.balanceSelectorInfo && (\n                                  <Flex\n                                    width={1}\n                                    maxWidth={'50%'}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                  >\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      textAlign={'left'}\n                                      style={{\n                                        maxWidth:'100%',\n                                        overflow:'hidden',\n                                        whiteSpace:'nowrap',\n                                        textOverflow:'ellipsis'\n                                      }}\n                                      color={this.props.balanceSelectorInfo.color ? this.props.balanceSelectorInfo.color : 'copyColor'}\n                                    >\n                                      {this.props.balanceSelectorInfo.text}\n                                    </Text>\n                                  </Flex>\n                                )\n                              }\n                              {\n                                this.state.oldIdleTokens && (\n                                  <Flex\n                                    width={1}\n                                    maxWidth={'50%'}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'flex-end'}\n                                  >\n                                    <Link\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      color={'dark-gray'}\n                                      textAlign={'right'}\n                                      hoverColor={'copyColor'}\n                                      onClick={ (e) => this.setFastBalanceSelector(100) }\n                                    >\n                                      Balance: {this.state.oldIdleTokens.toFixed(6)} {this.props.selectedToken}\n                                    </Link>\n                                  </Flex>\n                                )\n                              }\n                            </Flex>\n                            <Input\n                              min={0}\n                              type={\"number\"}\n                              required={true}\n                              height={'3.4em'}\n                              borderRadius={2}\n                              fontWeight={500}\n                              borderColor={'cardBorder'}\n                              backgroundColor={'cardBg'}\n                              boxShadow={'none !important'}\n                              placeholder={'Insert amount'}\n                              onChange={this.changeInputValue.bind(this)}\n                              border={`1px solid ${this.props.theme.colors.divider}`}\n                              value={this.state.inputValue[this.state.action] ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]).toFixed() : ''}\n                            />\n                            <Flex\n                              mt={2}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              {\n                                [25,50,75,100].map( percentage => (\n                                  <FastBalanceSelector\n                                    percentage={percentage}\n                                    key={`selector_${percentage}`}\n                                    onMouseDown={()=>this.setFastBalanceSelector(percentage)}\n                                    isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(percentage)}\n                                  />\n                                ))\n                              }\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            mt={1}\n                            width={1}\n                            alignItems={'center'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.props.tokenConfig.migration.migrationContract.functions.map((functionInfo,i) => {\n                                const functionName = functionInfo.name;\n                                return (\n                                  <RoundButton\n                                    buttonProps={{\n                                      width:[1,0.5],\n                                      disabled:this.state.buttonDisabled,\n                                      mainColor:this.props.theme.colors.migrate\n                                    }}\n                                    key={`migrate_${i}`}\n                                    handleClick={ e => this.migrate(e,functionName) }\n                                  >\n                                    { functionInfo.label }\n                                  </RoundButton>\n                                )\n                              })\n                            }\n                          </Flex>\n                        </Flex>\n                      ) : (\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:2,\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            {\n                              this.props.migrationImage ? (\n                                <Image\n                                  {...this.props.migrationImage}\n                                />\n                              ) : (\n                                <Icon\n                                  size={'2.3em'}\n                                  color={'cellText'}\n                                  name={ this.props.migrationIcon ? this.props.migrationIcon : (this.props.isMigrationTool ? 'SwapHoriz' : 'Repeat') }\n                                />\n                              )\n                            }\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              {\n                                this.props.migrationText ? (\n                                  <Text.span\n                                    migrationTextProps={this.props.migrationTextProps}\n                                    dangerouslySetInnerHTML={{\n                                      __html:this.props.migrationText\n                                    }}\n                                  >\n                                  </Text.span>\n                                ) : (\n                                  <Text.span\n                                    color={'cellText'}\n                                  >\n                                    You are one step away from the migration of your { this.props.isMigrationTool ? this.state.oldIdleTokens.toFixed(4) : 'old' } {this.state.oldTokenName}{ this.props.isMigrationTool ? ` into the Idle ${this.props.tokenConfig.token} ${this.props.selectedStrategy} strategy` : '' }!\n                                  </Text.span>\n                                )\n                              }\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                            {\n                              biconomyEnabled && \n                                <Flex\n                                  py={3}\n                                  px={2}\n                                  mt={2}\n                                  width={1}\n                                  borderRadius={2}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                  backgroundColor={'dashboardBg'}\n                                  border={`1px solid ${this.props.theme.colors.boxBorder}`}\n                                >\n                                  <Text\n                                    mt={1}\n                                    fontSize={1}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    {\n                                      this.props.biconomy ?\n                                        `Meta-Transactions allow you to migrate without spending a dime! But, if you are stuck, please disable it and try again.`\n                                      :\n                                        'Your wallet does not support Meta-transactions, you are still able to migrate with a normal transaction.'\n                                    }\n                                  </Text>\n                                  {\n                                  this.props.biconomy &&\n                                    <Checkbox\n                                      mt={2}\n                                      required={false}\n                                      label={\"Migrate with Meta-Transaction\"}\n                                      checked={this.state.metaTransactionsEnabled}\n                                      onChange={ e => this.toggleMetaTransactionsEnabled(e.target.checked) }\n                                    />\n                                  }\n                                </Flex>\n                            }\n                            {\n                              this.props.tokenConfig.migration.migrationContract.functions.map((functionInfo,i) => {\n                                const functionName = functionInfo.name;\n                                return (\n                                  <RoundButton\n                                    buttonProps={{\n                                      mt:3,\n                                      width:[1,0.5],\n                                      mainColor:this.props.theme.colors.migrate\n                                    }}\n                                    key={`migrate_${i}`}\n                                    handleClick={ e => this.migrate(e,functionName) }\n                                  >\n                                    { functionInfo.label }\n                                  </RoundButton>\n                                )\n                              })\n                            }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      )\n                    ) : this.state.processing.approve.loading ? (\n                      <Flex\n                        mt={3}\n                        flexDirection={'column'}\n                      >\n                        <TxProgressBar\n                          web3={this.props.web3}\n                          waitText={`Approve estimated in`}\n                          hash={this.state.processing.approve.txHash}\n                          endMessage={`Finalizing approve request...`}\n                          cancelTransaction={this.cancelTransaction.bind(this)}\n                        />\n                      </Flex>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          mt:2,\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            size={'2.3em'}\n                            name={'LockOpen'}\n                            color={'cellText'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            {\n                              this.props.approveText ? this.props.approveText : `To migrate your ${ !this.props.isMigrationTool ? 'old' : '' } ${this.state.oldTokenName} you need to approve our Smart-Contract first.`\n                            }\n                          </Text>\n                          <RoundButton\n                            buttonProps={{\n                              mt:3,\n                              width:[1,1/2]\n                            }}\n                            handleClick={this.approveMigration.bind(this)}\n                          >\n                            Approve\n                          </RoundButton>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  }\n                </Flex>\n              ) : (\n                !this.state.processing[this.state.action].loading ? (\n                  <Flex\n                    mt={3}\n                    flexDirection={'column'}\n                  >\n                    <Input\n                      min={0}\n                      type={\"number\"}\n                      required={true}\n                      height={'3.4em'}\n                      borderRadius={2}\n                      fontWeight={500}\n                      className={styles.input}\n                      borderColor={'cardBorder'}\n                      backgroundColor={'cardBg'}\n                      boxShadow={'none !important'}\n                      onChange={this.changeInputValue.bind(this)}\n                      border={`1px solid ${this.props.theme.colors.divider}`}\n                      placeholder={`Insert ${this.state.oldTokenName} amount`}\n                      value={this.state.inputValue[this.state.action] !== null ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]).toString() : ''}\n                    />\n                    <Flex\n                      mt={3}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'space-between'}\n                    >\n                      <FastBalanceSelector\n                        percentage={25}\n                        onMouseDown={()=>this.setFastBalanceSelector(25)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(25)}\n                      />\n                      <FastBalanceSelector\n                        percentage={50}\n                        onMouseDown={()=>this.setFastBalanceSelector(50)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(50)}\n                      />\n                      <FastBalanceSelector\n                        percentage={75}\n                        onMouseDown={()=>this.setFastBalanceSelector(75)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(75)}\n                      />\n                      <FastBalanceSelector\n                        percentage={100}\n                        onMouseDown={()=>this.setFastBalanceSelector(100)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(100)}\n                      />\n                    </Flex>\n                    <Flex\n                      mt={3}\n                      justifyContent={'center'}\n                    >\n                      <RoundButton\n                        buttonProps={{\n                          width:[1,1/2],\n                          disabled:this.state.buttonDisabled,\n                          style:{\n                            textTransform:'capitalize'\n                          }\n                        }}\n                        handleClick={this.state.buttonDisabled ? null : this.executeAction.bind(this) }\n                      >\n                        {this.state.action}\n                      </RoundButton>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Flex\n                    mt={4}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      web3={this.props.web3}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                      hash={this.state.processing[this.state.action].txHash}\n                      endMessage={`Finalizing ${this.state.action} request...`}\n                      waitText={`${this.functionsUtil.capitalize(this.state.action)} estimated in`}\n                    />\n                  </Flex>\n                )\n              )\n            }\n          </Box>\n        ) : (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'column'}\n            justifyContent={'center'}\n          >\n            {\n              (!this.props.isMigrationTool && this.state.migrationEnabled) && \n                <SkipMigrationComponent />\n            }\n            {\n              this.props.children ? this.props.children : null\n            }\n          </Flex>\n        )\n      )\n    )\n  }\n}\n\nexport default Migrate;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport AssetField from '../AssetField/AssetField';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass AssetsList extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    return (\n      <Flex id=\"assets-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"assets-list\" flexDirection={'column'}>\n          {\n            enabledTokens.map(token => {\n              const tokenConfig = this.props.availableTokens[token];\n              if (!tokenConfig){\n                return null;\n              }\n              return (\n                <TableRow\n                  token={token}\n                  {...this.props}\n                  key={`asset-${token}`}\n                  tokenConfig={tokenConfig}\n                  rowId={`asset-col-${token}`}\n                  cardId={`asset-card-${token}`}\n                  fieldComponent={this.props.fieldComponent || AssetField}\n                />\n              );\n            })\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default AssetsList;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__38P6I\",\"link\":\"Footer_link__13yZU\"};","import { Flex, Icon } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass VariationNumber extends Component {\n\n  render() {\n\n    const IconDirection = () => (\n      <Icon\n        color={ this.props.direction === 'up' ?  '#6dd400' : '#f7b500' }\n        name={ this.props.direction === 'up' ?  'ArrowDropUp' : 'ArrowDropDown' }\n        size={ this.props.iconSize ? this.props.iconSize : ( this.props.isMobile ? '1.4em' : '2em') }\n      />\n    );\n\n    return (\n      <Flex\n        alignItems={'center'}\n        flexDirection={'row'}\n        width={ this.props.width ? this.props.width : 1 }\n        justifyContent={this.props.justifyContent ? this.props.justifyContent : 'center'}\n      >\n        {\n          (!this.props.iconPos || this.props.iconPos==='left') &&\n            <IconDirection />\n        }\n        {this.props.children}\n        {\n          this.props.iconPos==='right' &&\n            <IconDirection />\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default VariationNumber;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchInput\":\"GenericSelector_searchInput__vl2hJ\",\"genericSelector\":\"GenericSelector_genericSelector__1Nqkd\",\"dark\":\"GenericSelector_dark__zCOnP\",\"searchInputHidden\":\"GenericSelector_searchInputHidden__2Zm1B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loading-dots\":\"LoadingSpinner_loading-dots__2-3YZ\",\"loading-dots--dot\":\"LoadingSpinner_loading-dots--dot__2Y25C\",\"dot-keyframes\":\"LoadingSpinner_dot-keyframes__3SU_M\"};","import React from \"react\";\nimport styles from './ModalCard.module.scss';\nimport { Box, Flex, Card, Button, Heading, Image } from \"rimble-ui\";\n\nconst ModalCard = ({children, closeFunc, ...props}) => (\n  <Card\n    p={0}\n    border={0}\n    mx={'auto'}\n    my={'auto'}\n    height={'auto'}\n    borderRadius={2}\n    overflow={'auto'}\n    width={ props.width ? props.width : 'auto' }\n    minWidth={ props.minWidth ? props.minWidth : 'auto' }\n    maxWidth={ props.maxWidth ? props.maxWidth : '960px'}\n  >\n    <Box\n      top={'0'}\n      zIndex={1}\n      right={'0'}\n      position={\"absolute\"}\n    >\n      <Button.Text\n        icononly\n        icon={\"Close\"}\n        size={'2.5em'}\n        onClick={closeFunc}\n        mainColor={ props.mainColor ? props.mainColor :  'copyColor' }\n      />\n    </Box>\n    <Flex\n      height={'100%'}\n      flex={'1 1 auto'}\n      flexDirection={'column'}\n      className={[ props.bgLayer ? styles.bg : null]}\n      style={{\n        overflow: 'auto',\n        backgroundRepeat:'no-repeat',\n        backgroundPosition:'bottom right',\n        backgroundSize: !props.background ? '65%' : null,\n        backgroundImage:'url(/images/bg-bottom-right.png)',\n        background: props.background ? props.background : null,\n      }}\n      backgroundColor={'cardBg'}\n    >\n      {children}\n    </Flex>\n  </Card>\n);\n\nModalCard.Header = (props) => (\n  <Box\n    width={1}\n    mb={[2,3]}\n    pb={[2,2]}\n    pt={ props.pt ? props.pt : (props.icon ? 3 : [5,3]) }\n    borderBottom={ props.borderBottom ? props.borderBottom : '1px solid #eee' }\n  >\n    <Flex\n      px={[1,2]}\n      alignItems={'center'}\n      flexDirection={'column'}\n    >\n      { props.icon && <Image width={ props.iconHeight ? props.iconHeight : '50px' } src={props.icon} /> }\n      <Heading.h3\n        mb={0}\n        fontSize={[3,3]}\n        color={'copyColor'}\n        textAlign={'center'}\n        mt={props.icon ? 2 : 0}\n        fontFamily={'sansSerif'}\n        {...props.titleProps}\n      >\n        {props.title}\n      </Heading.h3>\n      {\n        props.subtitle &&\n        <Heading.h4\n          pt={[1,2]}\n          fontWeight={2}\n          fontSize={[2,2]}\n          lineHeight={1.5}\n          color={'dark-gray'}\n          textAlign={'center'}\n          {...props.subtitleProps}\n        >\n          {props.subtitle}\n        </Heading.h4>\n      }\n      {\n        props.subtitle2 &&\n        <Heading.h4 pt={0} fontSize={[2,2]} textAlign={'center'} fontWeight={2} lineHeight={1.5} color={'dark-gray'}>\n          {props.subtitle2}\n        </Heading.h4>\n      }\n    </Flex>\n  </Box>\n);\n\nModalCard.Body = ({children, ...props}) => (\n  <Box\n    width={1}\n    px={[3,5]}\n    {...props}\n  >\n    {children}\n  </Box>\n);\n/*\nModalCard.Body = ({children, ...props}) => (\n  <Flex flex={'1 1 auto'} style={{ overflow: 'auto' }} >\n    <Box width={1} px={[4,5]} py={[3,4]} m={'auto'}>\n      {children}\n    </Box>\n  </Flex>\n);\n*/\n\nModalCard.Footer = ({children, ...props}) => (\n  <Flex\n    flex={'1 0 auto'}\n    justifyContent={'center'}\n    borderTop={1}\n    borderColor={'light-gray'}\n    px={[0,3]}\n    py={3}\n  >\n    {children}\n  </Flex>\n);\n\n\nModalCard.BackButton = ({onClick, ...props}) => (\n  <Box\n    position={'absolute'}\n    top={'0'}\n    left={'0'}\n    m={3}\n    bg={'white'}\n  >\n    <Button.Outline\n      onClick={onClick}\n      icononly\n      icon={'ArrowBack'}\n      size={'2.5em'}\n    />\n  </Box>\n);\n\nexport default ModalCard;\n","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Box,\n  Button,\n  Flex,\n  Image\n} from \"rimble-ui\";\nimport Select from 'react-select';\nimport ModalCard from './ModalCard';\nimport ImageButton from '../../ImageButton/ImageButton';\nimport styles from './Header.module.scss';\nimport globalConfigs from '../../configs/globalConfigs';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\n\nclass BuyModal extends React.Component {\n\n  state = {\n    selectedMethod:null,\n    availableMethods:[],\n    selectedCountry:null,\n    selectedProvider:null,\n    availableProviders:null,\n    selectedToken:this.props.buyToken,\n  }\n\n  async loadRemoteResources() {\n\n    if (!this.state.selectedToken){\n      return false;\n    }\n\n    // Load payments providers external remote resources\n    Object.keys(globalConfigs.payments.providers).forEach((provider,i) => {\n\n      const providerInfo = globalConfigs.payments.providers[provider];\n      if (providerInfo.enabled && providerInfo.remoteResources && (providerInfo.supportedTokens.indexOf(this.state.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1)){\n        \n        const remoteResources = providerInfo.remoteResources;\n\n        Object.keys(remoteResources).forEach((url,j) => {\n\n          const resourceType = url.split('.').pop().toLowerCase();\n\n          switch (resourceType){\n            case 'js':\n              const scriptID = `script_${provider}_${j}_${this.state.selectedToken}`;\n\n              if (!document.getElementById(scriptID)){\n                const script = document.createElement(\"script\");\n                const remoteResourceParams = remoteResources[url];\n                const callback = remoteResourceParams && remoteResourceParams.callback ? remoteResourceParams.callback : null;\n                const precall = remoteResourceParams && remoteResourceParams.precall ? remoteResourceParams.precall : null;\n\n                if (precall && typeof precall === 'function'){\n                  precall(this.state,globalConfigs,providerInfo);\n                }\n\n                if (callback && typeof callback === 'function'){\n                  if (script.readyState) {  // only required for IE <9\n                    script.onreadystatechange = function() {\n                      if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n                        script.onreadystatechange = null;\n                        callback();\n                      }\n                    };\n                  } else {  //Others\n                    script.onload = callback;\n                  }\n                }\n\n                script.id = scriptID;\n                script.className = `script_${provider}`;\n                script.src = url;\n                script.async = true;\n\n                if (remoteResourceParams && remoteResourceParams.parentElement){\n                  remoteResourceParams.parentElement.appendChild(script)\n                } else {\n                  document.head.appendChild(script);\n                }\n              }\n            break;\n            case 'css':\n              const stylesheetId = `stylesheet_${provider}_${j}`;\n\n              if (!document.getElementById(stylesheetId)){\n                const style = document.createElement(\"link\");\n\n                style.id = stylesheetId;\n                style.rel = 'stylesheet';\n                style.href = url;\n\n                document.head.appendChild(style);\n              }\n            break;\n            default:\n            break;\n          }\n        });\n      }\n    });\n  }\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  loadAvailableMethods(){\n    const availableMethods = {};\n    const availableMethodsKeys = this.props.availableMethods && this.props.availableMethods.length ? this.props.availableMethods : Object.keys(globalConfigs.payments.methods);\n\n    availableMethodsKeys.forEach(method => {\n      const availableProviders = this.getAvailablePaymentProviders(method,this.state.selectedToken);\n      if (availableProviders && availableProviders.length>0){\n        const methodInfo = globalConfigs.payments.methods[method];\n        methodInfo.availableProviders = availableProviders;\n        availableMethods[method] = methodInfo;\n      }\n    });\n\n    this.setState({\n      availableMethods\n    });\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n\n    this.loadAvailableMethods();\n    this.loadRemoteResources();\n  }\n\n  async componentDidMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps) {\n\n    this.loadUtils();\n\n    if ( this.props.buyToken && prevProps.buyToken !== this.props.buyToken){\n      this.selectToken(null,this.props.buyToken);\n    }\n  }\n\n  renderPaymentMethod = async (e,provider,buyParams) => {\n\n    const onSuccess = async (tx) => {\n      // Toast message\n      window.toastProvider.addMessage(`Deposit completed`, {\n        secondaryMessage: `Your ${this.state.selectedToken} have been deposited`,\n        colorTheme: 'light',\n        actionHref: \"\",\n        actionText: \"\",\n        variant: \"success\",\n      });\n\n      this.props.getAccountBalance();\n    };\n\n    const onClose = async (e) => {\n      return true;\n    }\n\n    const paymentProvider = globalConfigs.payments.providers[provider];\n    const initParams = paymentProvider && paymentProvider.getInitParams ? paymentProvider.getInitParams(this.props,globalConfigs,buyParams,onSuccess,onClose) : null;\n\n    // Render the Payment Provider\n    switch (provider){\n      default:\n        if (typeof paymentProvider.render === 'function'){\n          const currentState = Object.assign({},this.state);\n          paymentProvider.render(initParams,null,currentState,globalConfigs);\n        }\n      break;\n    }\n\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_provider',\n        eventLabel: provider\n      });\n\n      this.closeModal(e);\n    } else {\n      this.closeModal(e);\n    }\n  }\n\n  goBack = (e) => {\n    e.preventDefault();\n\n    if (this.state.selectedProvider){\n      this.setState({\n        selectedProvider:null,\n      });\n    } else if (this.state.selectedMethod){\n      this.setState({\n        selectedMethod:null,\n        selectedCountry:null,\n        selectedProvider:null,\n      });\n    } else if (this.state.selectedToken){\n      this.setState({\n        selectedMethod:null,\n        selectedCountry:null,\n        selectedProvider:null,\n        selectedToken:this.props.buyToken,\n      });\n    } else {\n      this.resetModal();\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      selectedMethod:null,\n      selectedCountry:null,\n      selectedProvider:null,\n      availableProviders:null,\n      selectedToken:this.props.buyToken\n    });\n\n    this.componentWillMount();\n  }\n\n  closeModal = (e) => {\n    this.resetModal();\n    if (!this.props.showInline && typeof this.props.closeModal === 'function'){\n      this.props.closeModal();\n    }\n  }\n\n  getProviderInfo = (provider) => {\n    if (!globalConfigs.payments.providers[provider]){\n      return false;\n    }\n    let providerInfo = globalConfigs.payments.providers[provider];\n    if (typeof providerInfo.getInfo === 'function'){\n      const newProviderInfo = providerInfo.getInfo(this.state);\n      if (newProviderInfo && Object.keys(newProviderInfo).length){\n        providerInfo = Object.assign(providerInfo,newProviderInfo);\n      }\n    }\n    return providerInfo;\n  }\n\n  getDefaultPaymentProvider = (selectedMethod) => {\n    const paymentMethod = this.state.availableMethods[selectedMethod];\n    if (paymentMethod && paymentMethod.defaultProvider){\n      return paymentMethod.defaultProvider;\n    }\n    return null;\n  }\n\n  getAvailablePaymentProviders = (selectedMethod,selectedToken) => {\n    const availableProviders = [];\n\n    Object.keys(globalConfigs.payments.providers).map((provider,i) => {\n      const providerInfo = globalConfigs.payments.providers[provider];\n      const providerSupportMethod = providerInfo.supportedMethods.indexOf(selectedMethod) !== -1;\n      const providerSupportToken = selectedToken ? providerInfo.supportedTokens.indexOf(selectedToken) !== -1 : (providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1);\n      if (providerInfo.enabled && providerSupportMethod && providerSupportToken ){\n        availableProviders.push(provider);\n      }\n      return provider;\n    });\n\n    const defaultPaymentProvider = this.getDefaultPaymentProvider(selectedMethod);\n\n    if (defaultPaymentProvider && this.state.availableMethods[selectedMethod].showDefaultOnly && availableProviders.indexOf(defaultPaymentProvider) !== -1){\n      return [defaultPaymentProvider];\n    }\n\n    return availableProviders;\n  }\n\n  selectProvider = (e,selectedProvider) => {\n    if (e){\n      e.preventDefault();\n    }\n    \n    if (!selectedProvider || !globalConfigs.payments.providers[selectedProvider]){\n      return this.setState({\n        selectedProvider:null\n      });\n    }\n\n    const providerInfo = globalConfigs.payments.providers[selectedProvider];\n    if (providerInfo){\n\n      if (this.state.selectedToken){\n        this.renderPaymentMethod(e,selectedProvider,this.state);\n        return;\n      }\n\n      const ethAvailable = providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1;\n      const tokenAvailable = providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1;\n\n      // Show tokens to buy if more are available or if the selected one is not\n      const availableTokens = [];\n      if ( (ethAvailable && tokenAvailable) || !tokenAvailable ){\n        if (ethAvailable){\n          availableTokens.push(globalConfigs.baseToken);\n        }\n        if (tokenAvailable){\n          availableTokens.push(this.props.selectedToken);\n        }\n      } else {\n        this.renderPaymentMethod(e,selectedProvider,this.state);\n        return;\n      }\n\n      this.setState({\n        availableTokens,\n        selectedProvider\n      });\n    }\n  }\n\n  selectMethod = (e,selectedMethod) => {\n    if (e){\n      e.preventDefault();\n    }\n\n    if (Object.keys(this.state.availableMethods).indexOf(selectedMethod) !== -1){\n      const availableProviders = this.getAvailablePaymentProviders(selectedMethod,this.state.selectedToken);\n\n      // Send Google Analytics event\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_method',\n        eventLabel: selectedMethod\n      });\n\n      this.setState({\n        availableProviders,\n        selectedMethod\n      });\n    }\n  }\n\n  selectToken = (e,selectedToken) => {\n    if (e){\n      e.preventDefault();\n    }\n\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Buy',\n      eventAction: 'select_token',\n      eventLabel: selectedToken\n    });\n\n    this.setState({ selectedToken }, async () => {\n      if (this.state.selectedProvider){\n        return this.renderPaymentMethod(e,this.state.selectedProvider,this.state);\n      } else {\n        this.loadRemoteResources();\n      }\n    });\n  }\n\n  handleCountryChange = selectedCountry => {\n\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled && selectedCountry){\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_country',\n        eventLabel: selectedCountry.value\n      });\n    }\n\n    this.setState({\n      selectedCountry\n    });\n  }\n\n  getAvailableCountries = () => {\n    const availableCountries = {};\n    this.state.availableProviders.forEach((provider,i) => {\n      const providerInfo = this.getProviderInfo(provider);\n      const providerSupportMethod = providerInfo.supportedMethods.indexOf(this.state.selectedMethod) !== -1;\n      const providerSupportToken = this.state.selectedToken ? providerInfo.supportedTokens.indexOf(this.state.selectedToken) !== -1 : (providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1);\n\n      // Skip disabled provider, not supported selected method or not supported token\n      if (!providerInfo.enabled || !providerSupportMethod || !providerSupportToken ){\n        return;\n      }\n\n      // Get available providers and countries\n      providerInfo.supportedCountries.forEach((countryCode,j) => {\n        if (!availableCountries[countryCode]){\n          availableCountries[countryCode] = {\n            providers:[],\n            label:globalConfigs.countries[countryCode],\n            value:countryCode\n          };\n        }\n        availableCountries[countryCode].providers.push(provider);\n      });\n    });\n\n    return Object.values(availableCountries);\n  }\n\n  render() {\n\n    let title = null;\n    if (this.state.selectedToken === null){\n      title = 'BUY TOKEN';\n    } else {\n      title = 'BUY '+this.state.selectedToken;\n      if (this.state.selectedMethod !== null){\n        title += ' - '+this.state.availableMethods[this.state.selectedMethod].props.caption;\n      }\n    }\n\n    let availableTokens = this.props.availableTokens && Object.keys(this.props.availableTokens).length>0 ? [globalConfigs.baseToken,...Object.keys(this.props.availableTokens)] : [globalConfigs.baseToken];\n\n    // Show all tokens\n    if (this.props.showAllTokens){\n      availableTokens = [];\n      Object.keys(globalConfigs.payments.providers).forEach( provider => {\n        const providerInfo = globalConfigs.payments.providers[provider];\n        if (providerInfo.supportedTokens){\n          providerInfo.supportedTokens.forEach(token => {\n            if (!availableTokens.includes(token)){\n              availableTokens.push(token);\n            }\n          })\n        }\n      });\n    }\n\n    const InnerComponent = props => (\n      <Box minWidth={ this.props.showInline ? 'auto' : ['auto','35em'] }>\n      {\n        this.state.selectedToken === null ? (\n          <Box mb={2}>\n            <Text\n              mb={[2,3]}\n              fontWeight={2}\n              textAlign={'center'}\n              fontSize={[2, this.props.showInline ? 2 : 3]}\n            >\n              Which token do you want to buy?\n            </Text>\n            <Flex\n              mb={4}\n              style={{\n                flexWrap:'wrap'\n              }}\n              alignItems={'center'}\n              justifyContent={'center'}\n              flexDirection={['column','row']}\n            >\n            {\n              availableTokens.map((token,i) => {\n                return (\n                  <ImageButton\n                    caption={token}\n                    key={`token_${token}`}\n                    isMobile={this.props.isMobile}\n                    imageSrc={`images/tokens/${token}.svg`}\n                    handleClick={ e => { this.selectToken(e,token); } }\n                    imageProps={ this.props.isMobile ? {height:'42px'} : {p:[2,3],height:'80px'}}\n                    buttonProps={ !this.props.isMobile ? {\n                      style:{\n                        'flex':'0 0 170px'\n                      }\n                    } : null}\n                  />\n                );\n              })\n            }\n            </Flex>\n          </Box>\n        ) : this.state.selectedMethod === null ? (\n          <Box>\n            <Flex mb={3} flexDirection={'column'} justifyContent={'center'} alignItems={'center'}>\n              {\n                !this.props.showInline &&\n                  <Image height={2} mb={2} src={`images/tokens/${this.state.selectedToken}.svg`} />\n              }\n              <Text textAlign={'center'} fontWeight={500} fontSize={[2, this.props.showInline ? 2 : 3]} my={0}>\n                {\n                  this.props.showInline && this.props.buyToken ? `Ops... you don't have any ${this.props.buyToken} in your wallet, how do you prefer do buy some?` : `How do you prefer to buy ${this.state.selectedToken}?`\n                }\n              </Text>\n            </Flex>\n            <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n              {\n                Object.keys(this.state.availableMethods).map((method,i) => {\n                  const methodInfo = this.state.availableMethods[method];\n                  let imageProps = methodInfo.props && methodInfo.props.imageProps ? methodInfo.props.imageProps : {};\n                  const imagePropsExtended = this.props.isMobile ? {height:'42px'} : {height:'70px'};\n                  imageProps = Object.assign(imageProps,imagePropsExtended);\n\n                  return (\n                    <ImageButton\n                      {...methodInfo.props}\n                      buttonProps={{\n                        border:2\n                      }}\n                      key={`method_${method}`}\n                      imageProps={ imageProps }\n                      isMobile={ this.props.isMobile }\n                      handleClick={ e => this.selectMethod(e,method) }\n                    />\n                  );\n                })\n              }\n            </Flex>\n          </Box>\n        ) : this.state.selectedMethod === 'wallet' ? (\n              <Box mt={2} mb={3}>\n                <Text textAlign={'center'} fontWeight={3} fontSize={2} my={0}>\n                  <Box width={'100%'}>\n                      <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                      {\n                        this.state.availableProviders.length > 0 ?\n                          (\n                            <Box>\n                              <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                                Choose your preferred payment provider:\n                              </Text>\n                              {\n                                this.state.availableProviders.map((provider,i) => {\n                                  const providerInfo = this.getProviderInfo(provider);\n                                  return (\n                                    <ImageButton key={`payment_provider_${provider}`} {...providerInfo} handleClick={ e => { this.renderPaymentMethod(e,provider,this.state); } } />\n                                  );\n                                })\n                              }\n                            </Box>\n                          )\n                        : (\n                          <Text textAlign={'center'} fontWeight={3} fontSize={2} my={2}>\n                            Sorry, there are no providers available for the selected method.\n                          </Text>\n                        )\n                      }\n                      </Flex>\n                    </Box>\n                </Text>\n              </Box>\n            ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              {\n                !this.state.selectedProvider &&\n                <Box\n                  mb={3}\n                  maxWidth={ this.props.showInline ? '35em' : 'initial' }\n                  width={ (this.props.showInline && !this.props.isMobile) ? 0.72 : 1 }\n                >\n                  {\n                    !this.props.showInline &&\n                      <Flex flexDirection={'column'} justifyContent={'center'} alignItems={'center'}>\n                        <Image height={2} mb={2} src={`images/tokens/${this.state.selectedToken}.svg`} />\n                      </Flex>\n                  }\n                  <Text textAlign={'center'} fontWeight={ this.props.showInline ? 2 : 3 } fontSize={2} mb={2}>\n                    Select your country:\n                  </Text>\n                  <Select\n                    bg={'#162e4d'}\n                    backgroundColor={'#162e4d'}\n                    value={this.state.selectedCountry}\n                    placeholder={'Select your country'}\n                    onChange={this.handleCountryChange}\n                    options={this.getAvailableCountries()}\n                    maxWidth={ this.props.showInline && !this.props.isMobile ? '25em' : 'auto' }\n                    noOptionsMessage={ (inputValue) => 'For European countries select Europe' }\n                    className={this.props.themeMode === 'light' ? styles.select : styles.selectDark}\n                  />\n                </Box>\n              }\n              <Flex flexDirection={'column'} justifyContent={'center'} alignItems={'center'} minHeight={'200px'}>\n                {\n                  !this.state.selectedProvider ?\n                    this.state.selectedCountry !== null ? (\n                      <Box width={'100%'}>\n                        <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                          Choose your preferred payment provider:\n                        </Text>\n                        <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                        {\n                          this.state.selectedCountry.providers.length > 0 ?\n                            this.state.selectedCountry.providers.map((provider,i) => {\n                              const providerInfo = this.getProviderInfo(provider);\n                              return (\n                                <ImageButton key={`payment_provider_${provider}`} {...providerInfo} handleClick={ e => {this.selectProvider(e,provider) } } />\n                              );\n                            })\n                          : (\n                            <Text textAlign={'center'} fontWeight={3} fontSize={2} mb={2}>\n                              Sorry, there are no providers available for the selected method.\n                            </Text>\n                          )\n                        }\n                        </Flex>\n                      </Box>\n                    ) : (\n                      <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={2}>\n                        Select the country to load the payment providers.\n                      </Text>\n                    )\n                  : false && this.state.availableTokens && this.state.availableTokens.length > 0 && (\n                    <Box mb={2}>\n                      <Flex justifyContent={'center'} my={2}>\n                        <Image src={ globalConfigs.payments.providers[this.state.selectedProvider].imageSrc } height={'35px'} />\n                      </Flex>\n                      <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                        Choose which token do you want to buy:\n                      </Text>\n                      <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                      {\n                        this.state.availableTokens.map((token,i) => {\n                          return (\n                            <ImageButton key={`token_${token}`} imageSrc={`images/tokens/${token}.svg`} caption={token} imageProps={{p:[2,3],height:'80px'}} handleClick={ e => { this.selectToken(e,token); } } />\n                          );\n                        })\n                      }\n                      </Flex>\n                    </Box>\n                  )\n                }\n              </Flex>\n            </Flex>\n          )\n      }\n        {\n          this.props.showInline && this.state.selectedToken !== null  && (this.props.buyToken === null || this.state.selectedMethod !== null) && (\n            <Flex\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <Button\n                my={2}\n                mx={[0, 2]}\n                size={'medium'}\n                borderRadius={4}\n                mainColor={'blue'}\n                onClick={ e => this.goBack(e) }\n              >\n                GO BACK\n              </Button>\n            </Flex>\n          )\n        }\n      </Box>\n    );\n\n    if (this.props.showInline){\n      return (\n        <InnerComponent\n          {...this.props}\n        />\n      );\n    }\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.closeModal}>\n          <ModalCard.Header title={title}>\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <InnerComponent/>\n          </ModalCard.Body>\n          <ModalCard.Footer>\n            <Flex px={[2,0]} flexDirection={['column', 'row']} width={1} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                onClick={ e => this.closeModal(e) }\n                size={this.props.isMobile ? 'small' : 'medium'}\n              >\n              CLOSE\n              </Button>\n              {\n                this.state.selectedToken !== null && (this.props.buyToken === null || this.state.selectedMethod !== null) && (\n                  <Button\n                    my={2}\n                    mx={[0, 2]}\n                    borderRadius={4}\n                    onClick={ e => this.goBack(e) }\n                    className={styles.gradientButton}\n                    size={this.props.isMobile ? 'small' : 'medium'}\n                  >\n                    GO BACK\n                  </Button>\n                )\n              }\n            </Flex>\n          </ModalCard.Footer>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default BuyModal;","import {\n  Link as RouterLink,\n} from \"react-router-dom\";\nimport ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport styles from './Footer.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Heading, Image, Link } from 'rimble-ui';\n\nclass Footer extends Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  render() {\n    const currYear = new Date().getFullYear();\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n    const columnWidth = governanceEnabled ? 1/4 : 1/3;\n    return (\n      <Flex\n        pl={0}\n        id={\"footer\"}\n        alignItems={'center'}\n        flexDirection={'column'}\n        className={styles.footer}\n        backgroundColor={'white'}\n        justifyContent={'flex-start'}\n      >\n        <Flex\n          width={1}\n          px={[3,6]}\n          justifyContent={'center'}\n        >\n          <Flex\n            width={1}\n            height={['auto','100%']}\n            alignItems={'flex-start'}\n            maxWidth={['35em','70em']}\n            justifyContent={'flex-start'}\n            flexDirection={['column','row']}\n          >\n            <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Resources\n              </Heading.h3>\n              <Flex width={1} flexDirection={'column'}>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://developers.idle.finance'}\n                >\n                  <span role=\"img\" aria-label=\"documentation\">📚</span> Documentation\n                </ExtLink>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://www.notion.so/idlelabs/Idle-Finance-Brand-Assets-fd63e4161cb64c999531646c7549bc4b'}\n                >\n                  <span role=\"img\" aria-label=\"brand-assets\">🎨</span> Brand Assets\n                </ExtLink>\n                <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                  <RouterLink\n                    color={'blue'}\n                    to=\"/terms-of-service\"\n                    className={styles.link}\n                  >\n                    <Text\n                      fontWeight={3}\n                      color={'blue'}\n                      fontSize={[3,2]}\n                      hoverColor={'blue'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                    >\n                      <span role=\"img\" aria-label=\"terms-of-service\">📑</span> Terms of Service\n                    </Text>\n                  </RouterLink>\n                </Flex>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://www.iubenda.com/privacy-policy/61211749'}\n                >\n                  <span role=\"img\" aria-label=\"privacy-policy\">🕵️‍♂️</span> Privacy Policy\n                </ExtLink>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://www.iubenda.com/privacy-policy/61211749/cookie-policy'}\n                >\n                  <span role=\"img\" aria-label=\"cookie-policy\">🍪</span> Cookie Policy\n                </ExtLink>\n              </Flex>\n            </Flex>\n            {\n              governanceEnabled && \n                <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n                  <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                    Governance\n                  </Heading.h3>\n                  <Flex width={1} flexDirection={'column'}>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        to={\"/governance\"}\n                        className={styles.link}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-overview\">🏛</span> Overview\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        className={styles.link}\n                        to={\"/governance/proposals\"}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-proposals\">💡</span> Proposals\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        className={styles.link}\n                        to={\"/governance/leaderboard\"}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-leaderboard\">📋</span> Leaderboard\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <ExtLink href=\"https://gov.idle.finance/\">\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-forum\">🤝</span> Forum\n                        </Text>\n                      </ExtLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <ExtLink href=\"https://www.notion.so/idlelabs/ffe8115b7b53489ab0a7f84e656e4bb0?v=916250f54ff24daabad72cf095fd6d88\">\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-forum\">🌎</span> Team\n                        </Text>\n                      </ExtLink>\n                    </Flex>\n                  </Flex>\n                </Flex>\n            }\n            <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Start a Conversation\n              </Heading.h3>\n              <Link textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} color={'blue'} hoverColor={'blue'}>\n                <span role=\"img\" aria-label=\"email\">✉️</span> info@idle.finance\n              </Link>\n            </Flex>\n            <Flex width={[1,columnWidth]} flexDirection={'column'}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Explore\n              </Heading.h3>\n              <Flex flexDirection={'row'} justifyContent={['space-evenly','flex-start']}>\n                <ExtLink href=\"https://twitter.com/idlefinance\">\n                  <Image src=\"images/social/twitter.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://t.me/idlefinance\">\n                  <Image src=\"images/social/telegram.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://discord.gg/mpySAJp\">\n                  <Image src=\"images/social/discord.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://medium.com/@idlefinance\">\n                  <Image src=\"images/social/medium.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://github.com/Idle-Labs/\">\n                  <Image src=\"images/social/github.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://www.linkedin.com/company/idlefinance\">\n                  <Image src=\"images/social/linkedin.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://defipulse.com/defi-list\">\n                  <Image src=\"images/social/defi-pulse.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n              </Flex>\n            </Flex>\n          </Flex>\n        </Flex>\n        <Flex\n          width={1}\n          height={['auto','100%']}\n          flexDirection={'column'}\n          alignItems={['center','flex-end']}\n          justifyContent={['center','flex-end']}\n        >\n          <Flex\n            p={2}\n            width={1}\n            alignItems={'center'}\n            justifyContent={'center'}\n            backgroundColor={'dark-blue'}\n            flexDirection={['column','row']}\n          >\n            <Text\n              color={'white'}\n              textAlign={['center','flex-end']}\n            >\n              &copy; {currYear} - Idle Labs Inc.\n            </Text>\n            <RouterLink\n              color={'blue'}\n              to={'/terms-of-service'}\n              style={{textDecoration:'none'}}\n            >\n              <Text\n                pl={2}\n                color={'#0df'}\n                textAlign={['center','flex-end']}\n              >\n                Terms of Service\n              </Text>\n            </RouterLink>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default Footer;\n","import React, { Component } from 'react';\nimport styles from './TableCellHeader.module.scss';\nimport { Flex, Heading, Icon, Link, Tooltip } from \"rimble-ui\";\n\nclass TableCellHeader extends Component {\n  render() {\n\n    const ColTitle = (props) => (\n      <Heading.h4\n        fontWeight={[3,4]}\n        color={'cellTitle'}\n        style={{\n          width:'100%',\n          whiteSpace:'nowrap'\n        }}\n        fontSize={['10px',3]}\n        lineHeight={'initial'}\n        {...props}\n      >\n        {props.children}\n      </Heading.h4>\n    );\n\n    return (\n      <Flex\n        width={this.props.width}\n      >\n        {\n          (this.props.desc && this.props.desc.length>1) ? (\n            <Flex\n              alignItems={'center'}\n            >\n              <ColTitle\n                {...this.props}\n              />\n              <Link\n                style={{\n                  cursor:'pointer'\n                }}\n                onClick={ e => this.props.openTooltipModal(this.props.title,this.props.desc) }\n              >\n                <Tooltip\n                  placement={'top'}\n                  message={'Click to read the description'}\n                >\n                  <Icon\n                    ml={1}\n                    name={\"Info\"}\n                    color={'cellTitle'}\n                    className={styles.tooltip}\n                    size={ this.props.isMobile ? '1em' : '1.2em'}\n                  />\n                </Tooltip>\n              </Link>\n            </Flex>\n          ) : (\n            <ColTitle\n              {...this.props}\n            />\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TableCellHeader;\n","import React, { Component } from 'react';\nimport { Flex, Text, Icon } from \"rimble-ui\";\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass CardIconButton extends Component {\n  render() {\n    const cardProps = Object.assign({\n      py:1,\n      width:'auto',\n      px:['12px',3],\n    },this.props.cardProps);\n\n    return (\n       <DashboardCard\n         cardProps={cardProps}\n         isInteractive={true}\n         isActive={this.props.isActive}\n         handleClick={this.props.handleClick}\n       >\n         <Flex\n           my={1}\n           alignItems={'center'}\n           flexDirection={'row'}\n           justifyContent={'center'}\n         >\n          {\n            this.props.useIconOnly ? (\n              <Icon\n                align={'center'}\n                name={this.props.icon}\n                size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                color={ this.props.iconColor ? this.props.iconColor : 'redeem' }\n              />\n            ) : (\n             <Flex\n               mr={2}\n               p={['4px','7px']}\n               borderRadius={'50%'}\n               alignItems={'center'}\n               justifyContent={'center'}\n               backgroundColor={ this.props.iconBgColor ? this.props.iconBgColor : this.props.theme.colors.transactions.actionBg.redeem }\n             >\n               <Icon\n                 align={'center'}\n                 name={this.props.icon}\n                 size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                 color={ this.props.iconColor ? this.props.iconColor : 'redeem' }\n               />\n             </Flex>\n            )\n          }\n           <Text\n             fontWeight={3}\n             fontSize={[1,3]}\n             {...this.props.textProps}\n           >\n             {this.props.text}\n           </Text>\n         </Flex>\n       </DashboardCard>\n    );\n  }\n}\n\nexport default CardIconButton;","import { Line } from '@nivo/line';\nimport CountUp from 'react-countup';\nimport React, { Component } from 'react';\nimport { linearGradientDef } from '@nivo/core'\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport CustomTooltip from '../CustomTooltip/CustomTooltip';\nimport VariationNumber from '../VariationNumber/VariationNumber';\nimport AllocationChart from '../AllocationChart/AllocationChart';\nimport CustomTooltipRow from '../CustomTooltip/CustomTooltipRow';\nimport { Image, Text, Loader, Button, Tooltip, Icon, Flex } from \"rimble-ui\";\n\nclass AssetField extends Component {\n\n  state = {\n    ready:false\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const tokenChanged = prevProps.token !== this.props.token;\n    const accountChanged = prevProps.account !== this.props.account;\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    const contractInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized && this.props.contractsInitialized;\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (fieldChanged || tokenChanged || accountChanged || transactionsChanged || (contractInitialized && !this.state.ready)){\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.loadField();\n      });\n    } else if (mobileChanged || themeModeChanged){\n      const oldState = Object.assign({},this.state);\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  loadField = async(fieldName=null) => {\n    // Exit if component unmounted\n    // console.log('loadField',this.props.fieldInfo.name,this.props.account,this.props.token,this.props.tokenConfig);\n\n    if (this.componentUnmounted || !this.props.token || !this.props.tokenConfig){\n      return false;\n    }\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const setState = fieldName === null;\n    const fieldInfo = this.props.fieldInfo;\n    if (!fieldName){\n      fieldName = fieldInfo.name;\n    }\n\n    const fieldProps = fieldInfo.props;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    // const addCurveApy = typeof this.props.addCurveApy !== 'undefined' ? this.props.addCurveApy : false;\n    const addGovTokens = typeof this.props.addGovTokens !== 'undefined' ? this.props.addGovTokens : true;\n\n    let output = null;\n    if (this.props.token){\n      switch (fieldName){\n        case 'tokenBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              tokenBalance:output.toString()\n            });\n          }\n        break;\n        case 'govTokens':\n          const govTokens = this.functionsUtil.getTokenGovTokens(this.props.tokenConfig);\n          const getGovTokensDistributionSpeed = await this.functionsUtil.getGovTokensDistributionSpeed(this.props.tokenConfig);\n          this.setStateSafe({\n            govTokens,\n            getGovTokensDistributionSpeed\n          });\n        break;\n        case 'tokenPrice':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            let tokenPrice = '-';\n            if (typeof this.props.tokenConfig.showPrice === 'undefined' || this.props.tokenConfig.showPrice){\n              tokenPrice = output.toString();\n            }\n            this.setStateSafe({\n              tokenPrice\n            });\n          }\n        break;\n        case 'fee':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              fee:output.toString()\n            });\n          }\n        break;\n        case 'amountToMigrate':\n          const {\n            oldContractBalanceFormatted\n          } = await this.functionsUtil.checkMigration(this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (setState && oldContractBalanceFormatted){\n            this.setStateSafe({\n              amountToMigrate:oldContractBalanceFormatted.toString()\n            });\n            output = oldContractBalanceFormatted;\n          }\n        break;\n        case 'amountLent':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              amountLent:output.toString()\n            });\n          }\n        break;\n        case 'idleTokenBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              idleTokenBalance:output.toString()\n            });\n          }\n        break;\n        case 'redeemableBalanceCounterCurve':\n          const {\n            redeemableBalanceCurveEnd,\n            redeemableBalanceCurveStart\n          } = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (redeemableBalanceCurveStart && redeemableBalanceCurveEnd){\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                redeemableBalanceCurveEnd,\n                redeemableBalanceCurveStart\n              });\n            }\n\n            output = {\n              redeemableBalanceCurveEnd,\n              redeemableBalanceCurveStart\n            };\n          }\n        break;\n        case 'redeemableBalanceCounter':\n          const {\n            redeemableBalanceEnd,\n            redeemableBalanceStart\n          } = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (redeemableBalanceStart && redeemableBalanceEnd){\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                redeemableBalanceEnd,\n                redeemableBalanceStart\n              });\n            }\n\n            output = {\n              redeemableBalanceEnd,\n              redeemableBalanceStart\n            };\n          }\n        break;\n        case 'earnings':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earnings:output.toString()\n            });\n          }\n        break;\n        case 'feesCounter':\n          const [earningsCounter,feePercentage] = await Promise.all([\n            this.loadField('earningsCounter'),\n            this.functionsUtil.getTokenFees(this.props.tokenConfig)\n          ]);\n\n          if (earningsCounter && earningsCounter.earningsStart && earningsCounter.earningsEnd && feePercentage){\n\n            const feesStart = earningsCounter.earningsStart.times(feePercentage);\n            const feesEnd = earningsCounter.earningsEnd.times(feePercentage);\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                feesEnd,\n                feesStart\n              });\n            }\n\n            output = {\n              feesEnd,\n              feesStart\n            };\n          }\n        break;\n        case 'earningsCounterCurve':\n          const [curveApy,earningsCurveStart,amountLentCurve] = await Promise.all([\n            this.functionsUtil.getCurveAPY(),\n            this.functionsUtil.loadAssetField('earningsCurve',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('amountLentCurve',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens)\n          ]);\n\n          if (amountLentCurve && earningsCurveStart && curveApy){\n            const earningsCurveEnd = amountLentCurve.gt(0) ? amountLentCurve.times(curveApy.div(100)).plus(earningsCurveStart) : 0;\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                earningsCurveEnd,\n                earningsCurveStart\n              });\n            }\n\n            output = {\n              earningsCurveEnd,\n              earningsCurveStart\n            };\n          }\n        break;\n        case 'earningsCounter':\n          const [tokenAPY2,earningsStart,amountLent2] = await Promise.all([\n            this.functionsUtil.loadAssetField('apy',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('earnings',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('amountLent',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens)\n          ]);\n\n          if (amountLent2 && earningsStart && tokenAPY2){\n            const earningsEnd = amountLent2.gt(0) ? amountLent2.times(tokenAPY2.div(100)).plus(earningsStart) : 0;\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                earningsEnd,\n                earningsStart\n              });\n            }\n\n            output = {\n              earningsEnd,\n              earningsStart\n            };\n          }\n        break;\n        case 'redeemableBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              redeemableBalance:output.toString()\n            });\n          }\n        break;\n        case 'score':\n          const tokenScore = await this.functionsUtil.getTokenScore(this.props.tokenConfig,isRisk);\n          if (setState){\n            this.setStateSafe({\n              score:tokenScore ? tokenScore : false\n            });\n          }\n          output = tokenScore;\n        break;\n        case 'pool':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              poolSize:output.toString()\n            });\n          }\n        break;\n        case 'earningsPercCurve':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earningsPercCurveDirection:parseFloat(output)>0 ? 'up' : 'down',\n              earningsPercCurve:parseFloat(output).toFixed(decimals)\n            });\n          }\n        break;\n        case 'earningsPerc':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earningsPerc:parseFloat(output).toFixed(decimals),\n              earningsPercDirection:parseFloat(output)>0 ? 'up' : 'down'\n            });\n          }\n        break;\n        case 'apr':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            let tokenAPR = '-';\n            if (typeof this.props.tokenConfig.showAPR === 'undefined' || this.props.tokenConfig.showAPR){\n              tokenAPR = parseFloat(output).toFixed(decimals);\n            }\n            this.setStateSafe({\n              tokenAPR\n            });\n          }\n        break;\n        case 'oldApy':\n          if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.oldContract){\n            const oldTokenConfig = Object.assign({},this.props.tokenConfig);\n            oldTokenConfig.idle = Object.assign({},this.props.tokenConfig.migration.oldContract);\n            oldTokenConfig.protocols = Object.values(this.props.tokenConfig.protocols);\n\n            // Override token with name\n            oldTokenConfig.idle.token = oldTokenConfig.idle.name;\n\n            // Replace protocols with old protocols\n            if (oldTokenConfig.migration.oldProtocols){\n              oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n                const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n                if (foundProtocol){\n                  const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                  oldTokenConfig.protocols[protocolPos] = oldProtocol;\n                }\n              });\n            }\n\n            output = await this.functionsUtil.loadAssetField('apy',this.props.token,oldTokenConfig,this.props.account,false);\n\n          } else {\n            output = await this.loadField('apyNoGov');\n          }\n\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                oldAPY:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                oldAPY:false\n              });\n            }\n          }\n        break;\n        case 'apyNoGov':\n          output = await this.functionsUtil.loadAssetField('apy',this.props.token,this.props.tokenConfig,this.props.account,false);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                tokenAPYNoGov:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                tokenAPYNoGov:false\n              });\n            }\n          }\n        break;\n        case 'curveApy':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                curveApy:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                curveApy:false\n              });\n            }\n          }\n        break;\n        case 'curveAvgSlippage':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                curveAvgSlippage:(parseFloat(output)*100).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                curveAvgSlippage:false\n              });\n            }\n          }\n        break;\n\n        case 'apy':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              const tokenAPY = parseFloat(output).toFixed(decimals);\n              const showTooltip = !this.props.isMobile && (fieldInfo.showTooltip !== undefined && fieldInfo.showTooltip);\n              const govTokensAprs = showTooltip ? await this.functionsUtil.getGovTokensAprs(this.props.token,this.props.tokenConfig) : null;\n              this.setStateSafe({\n                tokenAPY,\n                govTokensAprs\n              });\n            } else {\n              this.setStateSafe({\n                tokenAPY:false\n              });\n            }\n          }\n        break;\n        case 'allocationChart':\n          let allocationChartWidth = 0;\n          let allocationChartHeight = 0;\n\n          const resizeAllocationChart = () => {\n            const allocationChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (allocationChartRowElement){\n              const $allocationChartRowElement = window.jQuery(allocationChartRowElement);\n              allocationChartWidth = $allocationChartRowElement.innerWidth()-parseFloat($allocationChartRowElement.css('padding-right'))-parseFloat($allocationChartRowElement.css('padding-left'));\n              allocationChartHeight = $allocationChartRowElement.innerHeight();\n\n              // Make it a square\n              allocationChartWidth = parseInt(allocationChartWidth)>0 ? Math.min(allocationChartWidth,allocationChartHeight) : allocationChartHeight;\n              allocationChartHeight = allocationChartWidth;\n\n\n              if (allocationChartWidth !== this.state.allocationChartWidth){\n                if (setState){\n                  this.setStateSafe({\n                    allocationChartWidth,\n                    allocationChartHeight\n                  });\n                }\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAllocationChart();\n          window.removeEventListener('resize', resizeAllocationChart.bind(this));\n          window.addEventListener('resize', resizeAllocationChart.bind(this));\n\n          if (setState){\n            this.setStateSafe({\n              allocationChartWidth,\n              allocationChartHeight\n            });\n          }\n        break;\n        case 'aprChart':\n          // Set start timestamp for v3 tokens\n          const aprChartEndTimestamp = isRisk ? this.functionsUtil.getGlobalConfig(['stats','versions','v3','endTimestamp']) : null;\n          const aprChartStartTimestamp = isRisk ? aprChartEndTimestamp-(7*24*60*60) : Math.max(this.functionsUtil.getGlobalConfig(['stats','versions','v3','startTimestamp']),parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(new Date()).format('DD/MM/YYYY 00:00:00'),'DD/MM/YYYY HH:mm:ss').subtract(7,'days')._d.getTime()/1000));\n\n          // Check for cached data\n          let aprChartData = null;\n          const cachedDataKey = `aprChart_${this.props.tokenConfig.address}_${isRisk}`;\n          const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n\n          aprChartData = [{\n            id:this.props.token,\n            color: this.props.color ? this.props.color : 'hsl('+this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token,'color','hsl']).join(',')+')',\n            data: []\n          }];\n\n          if (cachedData !== null){\n            aprChartData = cachedData;\n          } else {\n\n            // FAKE CHART DATA\n            if (this.props.token === 'COMP'){\n              aprChartData[0].data = [];\n              const startTimestamp = new Date().getTime();\n              let y = 20;\n              for (var i=0; i<=16; i++) {\n                const mDate = this.functionsUtil.strToMoment(startTimestamp).add(i,'day');\n                const x = mDate.format(\"YYYY/MM/DD HH:mm\");\n                // Grow\n                if ((i>=5 && i<=10) || (i>=13)){\n                  y+=Math.random()*4+2; // Risk\n                  // y+=Math.random()*7+4; // Best\n                // Decrease\n                } else {\n                  y-=Math.random()*3+1; // Risk\n                  // y-=Math.random()*3+1; // Best\n                }\n                aprChartData[0].data.push({x,y});\n              }\n            } else {\n              const frequencySeconds = this.functionsUtil.getFrequencySeconds('hour',12);\n              const apiResultsAprChart = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,aprChartStartTimestamp,aprChartEndTimestamp,false,frequencySeconds);\n\n              // if (isRisk){\n              //   debugger;\n              // }\n\n              apiResultsAprChart.forEach((d,i) => {\n                const x = this.functionsUtil.strToMoment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n                const y = parseFloat(this.functionsUtil.fixTokenDecimals(d.idleRate,18));\n                aprChartData[0].data.push({ x, y });\n              });\n            }\n\n            this.functionsUtil.setCachedData(cachedDataKey,aprChartData);\n          }\n\n\n          // Add same value\n          if (aprChartData[0].data.length === 1){\n            const newPoint = Object.assign({},aprChartData[0].data[0]);\n            newPoint.x = this.functionsUtil.strToMoment(newPoint,\"YYYY/MM/DD HH:mm\").add(1,'hours').format(\"YYYY/MM/DD HH:mm\")\n            aprChartData[0].data.push(newPoint);\n          }\n\n          let aprChartWidth = 0;\n          let aprChartHeight = 0;\n\n          const resizeAprChart = () => {\n            const aprChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (aprChartRowElement){\n              const $aprChartRowElement = window.jQuery(aprChartRowElement);\n              aprChartWidth = $aprChartRowElement.innerWidth()-parseFloat($aprChartRowElement.css('padding-right'))-parseFloat($aprChartRowElement.css('padding-left'));\n              aprChartHeight = $aprChartRowElement.innerHeight();\n              if (aprChartWidth !== this.state.aprChartWidth || !this.state.aprChartHeight){\n                this.setStateSafe({\n                  aprChartWidth,\n                  aprChartHeight: this.state.aprChartHeight ? this.state.aprChartHeight : aprChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAprChart();\n          window.removeEventListener('resize', resizeAprChart.bind(this));\n          window.addEventListener('resize', resizeAprChart.bind(this));\n\n          // Set chart type\n          const aprChartType = Line;\n\n          const aprChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            axisLeft:null,\n            animate:false,\n            axisBottom:null,\n            enableArea:true,\n            areaOpacity:0.1,\n            curve:'monotoneX',\n            enableGridX:false,\n            enableGridY:false,\n            pointBorderWidth:2,\n            isInteractive:true,\n            colors:d => d.color,\n            defs:[\n              linearGradientDef('gradientArea', [\n                  { offset: 0, color: '#faf047' },\n                  { offset: 50, color: '#e4b400' },\n              ])\n            ],\n            enableSlices:this.props.isMobile ? false : 'x',\n            yFormat:value => parseFloat(value).toFixed(2)+'%',\n            fill:[\n              { match: { id: this.props.token } , id: 'gradientArea' },\n            ],\n            margin: { top: 10, right: 0, bottom: 0, left: 0 },\n            sliceTooltip:(slideData) => {\n              const { slice } = slideData;\n              const point = slice.points[0];\n              return (\n                <CustomTooltip\n                  point={point}\n                >\n                  {\n                  typeof slice.points === 'object' && slice.points.length &&\n                    slice.points.map(point => {\n                      const protocolName = point.serieId;\n                      const protocolEarning = point.data.yFormatted;\n                      // const protocolApy = point.data.apy;\n                      return (\n                        <CustomTooltipRow\n                          key={point.id}\n                          color={point.color}\n                          label={protocolName}\n                          value={protocolEarning}\n                        />\n                      );\n                    })\n                  }\n                </CustomTooltip>\n              );\n            }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                aprChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              aprChartType,\n              aprChartData,\n              aprChartProps,\n              aprChartWidth,\n              aprChartHeight\n            });\n          }\n          output = aprChartData;\n        break;\n        case 'performanceChart':\n          let firstTokenPrice = null;\n          let firstIdleBlock = null;\n          /*\n          let performanceChartWidth = 0;\n          let performanceChartHeight = 0;\n\n          const performanceChartRowElement = document.getElementById(this.props.rowId) ? document.getElementById(this.props.rowId) : document.getElementById(this.props.parentId);\n          if (performanceChartRowElement){\n            performanceChartWidth = parseFloat(performanceChartRowElement.offsetWidth)>0 ? performanceChartRowElement.offsetWidth* (this.props.colProps ? this.props.colProps.width : 1) : 0;\n            performanceChartHeight = parseFloat(performanceChartRowElement.offsetHeight);\n          }\n          */\n\n          let performanceChartWidth = 0;\n          let performanceChartHeight = 0;\n\n          const resizePerformanceChart = () => {\n            const PerformanceChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (PerformanceChartRowElement){\n              const $PerformanceChartRowElement = window.jQuery(PerformanceChartRowElement);\n              performanceChartWidth = $PerformanceChartRowElement.innerWidth()-parseFloat($PerformanceChartRowElement.css('padding-right'))-parseFloat($PerformanceChartRowElement.css('padding-left'));\n              performanceChartHeight = $PerformanceChartRowElement.innerHeight();\n              if (performanceChartWidth !== this.state.performanceChartWidth || !this.state.performanceChartHeight){\n                this.setStateSafe({\n                  performanceChartWidth,\n                  performanceChartHeight: this.state.performanceChartHeight ? this.state.performanceChartHeight : performanceChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizePerformanceChart();\n          window.removeEventListener('resize', resizePerformanceChart.bind(this));\n          window.addEventListener('resize', resizePerformanceChart.bind(this));\n\n          const apr_end_date = this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(new Date()).subtract(1,'day').format('YYYY-MM-DD 23:59'),'YYYY-MM-DD HH:mm');\n          const apr_start_date = apr_end_date.clone().subtract(1,'week');\n\n          // Set start timestamp for v3 tokens\n          const apr_start_timestamp =  Math.max(this.functionsUtil.getGlobalConfig(['stats','versions','v3','startTimestamp']),parseInt(apr_start_date._d.getTime()/1000));\n          // const apr_end_timestamp = parseInt(apr_end_date._d.getTime()/1000);\n\n          let apiResultsPerformanceChart = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,apr_start_timestamp,null,false,43200);\n\n          const idleTokenPerformance = apiResultsPerformanceChart.map((d,i) => {\n            let y = 0;\n            const x = this.functionsUtil.strToMoment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n            const tokenPrice = this.functionsUtil.fixTokenDecimals(d.idlePrice,this.props.tokenConfig.decimals);\n\n            if (!firstTokenPrice){\n              firstTokenPrice = tokenPrice;\n            } else {\n              y = parseFloat(tokenPrice.div(firstTokenPrice).minus(1).times(100));\n            }\n\n            if (firstIdleBlock === null){\n              firstIdleBlock = parseInt(d.blocknumber);\n            }\n\n            return { x, y };\n          });\n\n          const performanceChartData = [{\n            id:'Idle',\n            color: 'hsl('+this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token,'color','hsl']).join(',')+')',\n            data: idleTokenPerformance\n          }];\n\n          // Set chart type\n          const performanceChartType = Line;\n\n          const performanceChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            animate:false,\n            axisLeft:null,\n            axisBottom:null,\n            enableArea:true,\n            enableGridX:false,\n            enableGridY:false,\n            curve:'monotoneX',\n            enableSlices:false,\n            pointBorderWidth:1,\n            colors:d => d.color,\n            pointLabelYOffset:-12,\n            margin: { top: 0, right: 0, bottom: 0, left: 0 }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                performanceChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              performanceChartType,\n              performanceChartData,\n              performanceChartProps,\n              performanceChartWidth,\n              performanceChartHeight\n            });\n          }\n          output = performanceChartData;\n        break;\n        case 'custom':\n          const path = fieldInfo.path;\n          output = this.functionsUtil.getArrayPath(path,this.props.tokenConfig);\n          if (output){\n            this.setStateSafe({\n              [fieldName]:output\n            });\n          }\n        break;\n        default:\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              ready:true,\n              [fieldName]:output\n            });\n          }\n        break;\n      }\n    }\n    return output;\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n    let output = null;\n\n    const showLoader = fieldInfo.showLoader === undefined || fieldInfo.showLoader;\n    const loader = showLoader ? (<Loader size=\"20px\" />) : null;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n      \n    const maxPrecision = fieldProps && fieldProps.maxPrecision ? fieldProps.maxPrecision : 5;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    const minPrecision = fieldProps && fieldProps.minPrecision ? fieldProps.minPrecision : ( this.props.isMobile ? 3 : 4 );\n\n    switch (fieldInfo.name){\n      case 'iconTooltip':\n        const icon1 = this.props.tokenConfig && this.props.tokenConfig.icon ? this.props.tokenConfig.icon : `images/tokens/${this.props.token}.svg`;\n        output = (\n          <Tooltip\n            placement={'top'}\n            message={this.props.token}\n            {...fieldInfo.tooltipProps}\n          >\n            <Image src={icon1} {...fieldProps} />\n          </Tooltip>\n        );\n      break;\n      case 'icon':\n        const icon2 = this.props.tokenConfig && this.props.tokenConfig.icon ? this.props.tokenConfig.icon : `images/tokens/${this.props.token}.svg`;\n        output = (\n          <Image src={icon2} {...fieldProps} />\n        );\n      break;\n      case 'tokenName':\n        output = (\n          <Text {...fieldProps}>{this.props.token}</Text>\n        );\n      break;\n      case 'strategyIcon':\n        const strategyIcon = this.functionsUtil.getGlobalConfig(['strategies',this.props.tokenConfig.strategy,'icon']);\n        if (strategyIcon){\n          output = (\n            <Image src={strategyIcon} {...fieldProps} />\n          );\n        }\n      break;\n      case 'strategyName':\n        const strategyName = this.functionsUtil.getGlobalConfig(['strategies',this.props.tokenConfig.strategy,'title']);\n        output = (\n          <Text {...fieldProps}>{strategyName}</Text>\n        );\n      break;\n      case 'tokenBalance':\n        output = this.state.tokenBalance ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.tokenBalance} />\n        ) : loader\n      break;\n      case 'fee':\n        output = this.state.fee ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.fee} />\n        ) : loader\n      break;\n      case 'tokenPrice':\n        output = this.state.tokenPrice ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.tokenPrice} />\n        ) : loader\n      break;\n      case 'amountToMigrate':\n        output = this.state.amountToMigrate ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.amountToMigrate} />\n        ) : loader\n      break;\n      case 'idleTokenBalance':\n        output = this.state.idleTokenBalance ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.idleTokenBalance} />\n        ) : loader\n      break;\n      case 'redeemableBalanceCounterCurve':\n        output = this.state.ready && this.state.redeemableBalanceCurveStart && this.state.redeemableBalanceCurveEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.redeemableBalanceCurveEnd)}\n            start={parseFloat(this.state.redeemableBalanceCurveStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'redeemableBalanceCounter':\n        output = this.state.ready && this.state.redeemableBalanceStart && this.state.redeemableBalanceEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.redeemableBalanceEnd)}\n            start={parseFloat(this.state.redeemableBalanceStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'feesCounter':\n        output = this.state.ready && this.state.feesStart && this.state.feesEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.feesEnd)}\n            start={parseFloat(this.state.feesStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounterCurve':\n        output = this.state.ready && this.state.earningsCurveStart && this.state.earningsCurveEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsCurveEnd)}\n            start={parseFloat(this.state.earningsCurveStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounter':\n        output = this.state.ready && this.state.earningsStart && this.state.earningsEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsEnd)}\n            start={parseFloat(this.state.earningsStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'redeemableBalance':\n        output = this.state.redeemableBalance ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.redeemableBalance} />\n        ) : loader\n      break;\n      case 'govTokens':\n        output = this.state.govTokens ? (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'flex-start'}\n          >\n            {\n              Object.values(this.state.govTokens).map( (govTokenConfig,govTokenIndex) => (\n                <AssetField\n                  token={govTokenConfig.token}\n                  tokenConfig={govTokenConfig}\n                  key={`asset_${govTokenIndex}`}\n                  fieldInfo={{\n                    name:'iconTooltip',\n                    tooltipProps:{\n                      message:`${govTokenConfig.token}`+(this.state.getGovTokensDistributionSpeed && this.state.getGovTokensDistributionSpeed[govTokenConfig.token] ? `: ${this.state.getGovTokensDistributionSpeed[govTokenConfig.token].toFixed(decimals)}/${govTokenConfig.distributionFrequency} (for the whole pool)` : '')\n                    },\n                    props:{\n                      borderRadius:'50%',\n                      position:'relative',\n                      height:['1.1em','2em'],\n                      ml:govTokenIndex ? '-10px' : 0,\n                      zIndex:Object.values(this.state.govTokens).length-govTokenIndex,\n                      boxShadow:['1px 1px 1px 0px rgba(0,0,0,0.1)','1px 2px 3px 0px rgba(0,0,0,0.1)'],\n                    }\n                  }}\n                />\n              ))\n            }\n          </Flex>\n        ) : loader\n      break;\n      case 'amountLentCurve':\n        output = this.state.amountLentCurve ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.amountLentCurve} />\n        ) : loader\n      break;\n      case 'amountLent':\n        output = this.state.amountLent ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.amountLent} />\n        ) : loader\n      break;\n      case 'pool':\n        output = this.state.poolSize ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.poolSize} />\n        ) : loader\n      break;\n      case 'score':\n        // console.log('score',this.state.score);\n        output = this.state.score !== undefined && this.state.score !== null ? (\n          <SmartNumber {...fieldProps} decimals={1} number={this.state.score} />\n        ) : loader\n      break;\n      case 'earningsPerc':\n        output = this.state.earningsPerc ?\n          (typeof fieldInfo.showDirection === 'undefined' || fieldInfo.showDirection) ? (\n            <VariationNumber\n              isMobile={this.props.isMobile}\n              direction={this.state.earningsPercDirection}\n            >\n              <Text {...fieldProps}>{this.state.earningsPerc}%</Text>\n            </VariationNumber>\n          ) : (\n            <Text {...fieldProps}>{this.state.earningsPerc}%</Text>\n          )\n        : loader\n      break;\n      case 'earningsPercCurve':\n        output = this.state.earningsPercCurve ?\n          (typeof fieldInfo.showDirection === 'undefined' || fieldInfo.showDirection) ? (\n            <VariationNumber\n              isMobile={this.props.isMobile}\n              direction={this.state.earningsPercCurveDirection}\n            >\n              <Text {...fieldProps}>{this.state.earningsPercCurve}%</Text>\n            </VariationNumber>\n          ) : (\n            <Text {...fieldProps}>{this.state.earningsPercCurve}%</Text>\n          )\n        : loader\n      break;\n      case 'earningsCurve':\n        output = this.state.earningsCurve ? (\n          <VariationNumber\n            direction={'up'}\n            isMobile={this.props.isMobile}\n          >\n            <SmartNumber\n              {...fieldProps}\n              decimals={decimals}\n              minPrecision={minPrecision}\n              number={this.state.earningsCurve}\n            />\n          </VariationNumber>\n        ) : loader\n      break;\n      case 'earnings':\n        output = this.state.earnings ? (\n          <VariationNumber\n            direction={'up'}\n            isMobile={this.props.isMobile}\n          >\n            <SmartNumber\n              {...fieldProps}\n              decimals={decimals}\n              minPrecision={minPrecision}\n              number={this.state.earnings}\n            />\n          </VariationNumber>\n        ) : loader\n      break;\n      case 'idleDistribution':\n        const governanceTokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n        const idleTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',governanceTokenName]);\n        output = this.state.idleDistribution ? (\n          <Text {...fieldProps}>+{this.state.idleDistribution.toFixed(decimals)} IDLE/{idleTokenConfig.distributionFrequency}</Text>\n        ) : loader\n      break;\n      case 'userDistributionSpeed':\n        output = this.state.userDistributionSpeed ? (\n          <Text {...fieldProps}>{this.state.userDistributionSpeed.toFixed(decimals)}/{this.props.tokenConfig.distributionFrequency}</Text>\n        ) : loader\n      break;\n      case 'distributionSpeed':\n        output = this.state.distributionSpeed ? (\n          <Text {...fieldProps}>{this.state.distributionSpeed.toFixed(decimals)}</Text>\n        ) : loader\n      break;\n      case 'apr':\n        output = this.state.tokenAPR ? (\n          <Text {...fieldProps}>{this.state.tokenAPR}{!isNaN(parseFloat(this.state.tokenAPR)) ? '%' : ''}</Text>\n        ) : loader\n      break;\n      case 'oldApy':\n        output = this.state.oldAPY !== undefined ? (\n          <Text {...fieldProps}>{this.state.oldAPY !== false ? this.state.oldAPY : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'apyNoGov':\n        output = this.state.tokenAPYNoGov !== undefined ? (\n          <Text {...fieldProps}>{this.state.tokenAPYNoGov !== false ? this.state.tokenAPYNoGov : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'curveApy':\n        output = this.state.curveApy !== undefined ? (\n          <Text {...fieldProps}>{this.state.curveApy !== false ? this.state.curveApy : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'curveAvgSlippage':\n        output = this.state.curveAvgSlippage !== undefined ? (\n          <Text {...fieldProps}>{this.state.curveAvgSlippage !== false ? this.state.curveAvgSlippage : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'apy':\n        output = this.state.tokenAPY !== undefined ? (\n          <Flex\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            <Text {...fieldProps}>{this.state.tokenAPY !== false ? this.state.tokenAPY : '-' }<small>%</small></Text>\n            {\n              this.state.govTokensAprs && Object.keys(this.state.govTokensAprs).length>0 && \n                <AssetField\n                  fieldInfo={{\n                    name:'tooltip',\n                    props:{\n                      iconProps:{\n                        ml:1\n                      },\n                      placement:'top',\n                      message:Object.keys(this.state.govTokensAprs).map( govToken => {\n                        const distributionFrequency = this.functionsUtil.getGlobalConfig(['govTokens',govToken,'distributionFrequency']);\n                        const tooltipMode = this.functionsUtil.getGlobalConfig(['govTokens',govToken,'aprTooltipMode']);\n                        let value = this.state.govTokensAprs[govToken].toFixed(decimals);\n                        switch (tooltipMode){\n                          default:\n                          case 'apr':\n                            value += '%';\n                          break;\n                          case 'distribution':\n                            value = `${value}/${distributionFrequency}`;\n                          break;\n                        }\n                        return `${govToken}: ${value}`\n                      }).join('; ')\n                    }\n                  }}\n                />\n            }\n          </Flex>\n        ) : loader\n      break;\n      case 'button':\n        const buttonLabel = typeof fieldInfo.label === 'function' ? fieldInfo.label(this.props) : fieldInfo.label;\n        output = (\n          <Button {...fieldProps} onClick={() => fieldProps.handleClick(this.props) }>{buttonLabel}</Button>\n        );\n      break;\n      case 'performanceChart':\n        output = this.state.performanceChartData ? (\n          <GenericChart\n            {...this.state.performanceChartProps}\n            type={this.state.performanceChartType}\n            data={this.state.performanceChartData}\n            width={this.state.performanceChartWidth}\n            height={this.state.performanceChartHeight}\n          />\n        ) : loader\n      break;\n      case 'allocationChart':\n        output = this.state.allocationChartWidth && this.state.allocationChartHeight ? (\n          <AllocationChart\n            {...this.props}\n            loaderProps={{\n              size:'20px'\n            }}\n            loaderText={''}\n            selectedToken={this.props.token}\n            width={this.state.allocationChartWidth}\n            height={this.state.allocationChartHeight}\n            inline={typeof this.props.inline !== 'undefined' ? this.props.inline : true}\n            showLoader={typeof this.props.showLoader !== 'undefined' ? this.props.showLoader : false}\n          />\n        ) : loader\n      break;\n      case 'tooltip':\n        output = (\n          <Tooltip\n            {...fieldProps}\n          >\n            <Icon\n              ml={2}\n              name={\"Info\"}\n              size={'1em'}\n              color={'cellTitle'}\n              {...fieldProps.iconProps}\n            />\n          </Tooltip>\n        );\n      break;\n      case 'aprChart':\n        output = this.state.aprChartData ? (\n          <GenericChart\n            {...this.state.aprChartProps}\n            type={this.state.aprChartType}\n            data={this.state.aprChartData}\n            width={this.state.aprChartWidth}\n            height={this.state.aprChartHeight}\n          />\n        ) : loader\n      break;\n      case 'custom':\n        let CustomComponent = null;\n        let customValue = this.state[fieldInfo.name];\n        switch (fieldInfo.type){\n          case 'number':\n            customValue = this.functionsUtil.BNify(customValue).toString();\n            CustomComponent = SmartNumber;\n            fieldProps.number = customValue;\n          break;\n          case 'icon':\n            CustomComponent = Icon;\n            fieldProps.name = customValue;\n            const customFieldName = Object.values(fieldInfo.path).pop();\n            if (this.props.tokenConfig[`${customFieldName}Props`]){\n              const customFieldProps = this.props.tokenConfig[`${customFieldName}Props`];\n              // Replace props\n              if (customFieldProps && Object.keys(customFieldProps).length){\n                Object.keys(customFieldProps).forEach(p => {\n                  fieldProps[p] = customFieldProps[p];\n                });\n              }\n            }\n          break;\n          default:\n            CustomComponent = Text;\n          break;\n        }\n        output = customValue ? (\n          <CustomComponent {...fieldProps}>{customValue}</CustomComponent>\n        ) : loader\n      break;\n      default:\n        let formattedValue = this.state[fieldInfo.name];\n        if (this.state[fieldInfo.name] && this.state[fieldInfo.name]._isBigNumber){\n          formattedValue = this.state[fieldInfo.name].toFixed(decimals);\n        }\n        output = this.state[fieldInfo.name] ? (\n          <Text {...fieldProps}>{formattedValue}</Text>\n        ) : loader\n      break;\n    }\n    return output;\n  }\n}\n\nexport default AssetField;\n"],"sourceRoot":""}